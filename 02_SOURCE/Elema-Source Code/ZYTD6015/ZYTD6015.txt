*&---------------------------------------------------------------------*
*& Report  ZYTD6015
*&
*&---------------------------------------------------------------------*
*&  機能     ： 仕入先マスタ一括更新
*&  作成日   ： 2009/10/7
*&  作成者   ： SOLFIS(ISHIZAKI)
*&---------------------------------------------------------------------*
*&  変更履歴 ： 2010/11/02 solfis(M.Murata)
*&  変更内容 ： DMW2473 記帳担当者電話番号(Act.clk tel.no.)を
*&                      資本金代替項目として追加
*&---------------------------------------------------------------------*
*&  変更履歴 ： 2012/01/10 solfis(H.Jo)
*&  変更内容 ： DMW3796 名称3、名所4、経理担当者Fax項目追加
*&---------------------------------------------------------------------*
*&
*& 仕様
*& ・本プログラムは入力ファイルに従い、標準BIプログラムである
*&　 RFBIKR00用のファイルを出力するところまでを行う。
*&   従って後続における標準BIプログラムRFBIKR00の実行を前提とする。
*&
*& ・入力ファイルの仕様は以下のとおり。
*&　　→レイアウト
*&  　 　　1)仕入先コード
*&     　　2)名称1
*&     　　3)名称2
*&     　　22)名称3                     2012/01/10 追加
*&     　　23)名称4                     2012/01/10 追加
*&     　　4)検索用語
*&     　　5)都道府県
*&     　　6)郵便番号
*&     　　7)市区町村
*&     　　8)地域
*&     　　9)電話番号
*&     　　10)FAX番号
*&     　　11)銀行コード
*&     　　12)銀行口座
*&     　　13)口座名義人
*&     　　14)銀行管理キー
*&     　　15)支払条件(会社）
*&     　　16)支払方法
*&     　　17)取引銀行
*&     　　18)担当者インターネット
*&     　　19)コメント
*&     　　20)支払条件(購買）
*&         21)資本金                    2010/11/02
*&     　　25)経理担当者Fax             2012/01/10 追加
*&
*&　 →形式は「タブ区切りテキスト」。格納先は「ローカルフォルダ」。
*&
*& ・出力ファイルの仕様は以下のとおり。
*&　　　→形式は「固定長テキスト」。格納先は「サーバディレクトリ」。
*&
*& ・本プログラム内では入力ファイルのチェックを行わない。
*&
*& ・銀行詳細データの更新は既存データをすべて削除して、新規登録する。
*&
*& ・処理終了後ダイアログボックスでログ(件数)を表示する。
* [改定履歴]
*　YYYY/MM/DD  Programar         Description
*  2012/08/13  ISID              ES-UP
*&---------------------------------------------------------------------*

REPORT zytd6015 MESSAGE-ID y1
NO STANDARD PAGE HEADING.
*
TABLES dd03l.   "ﾃｰﾌﾞﾙ項目
*&---------------------------------------------------------------------*
*&   データ型定義/内部テーブル定義　
*&---------------------------------------------------------------------*
TYPES: BEGIN OF st_in,
lifnr      LIKE blf00-lifnr, "仕入先コード
name1      LIKE blfa1-name1, "名称1
name2      LIKE blfa1-name2, "名称2
*--- Add Start 2012/01/10
name3      LIKE blfa1-name3, "名称3
name4      LIKE blfa1-name4, "名称4
*--- Add End   2012/01/10
sortl      LIKE blfa1-sortl, "検索用語
stras      LIKE blfa1-stras, "都道府県名
pstlz      LIKE blfa1-pstlz, "郵便番号
ort01      LIKE blfa1-ort01, "市区町村名
regio      LIKE blfa1-regio, "地域
telf1      LIKE blfa1-telf1, "電話番号
telfx      LIKE blfa1-telfx, "FAX番号
*銀行
bankl      LIKE blfbk-bankl, "銀行コード
bankn      LIKE blfbk-bankn, "銀行口座
koinh      LIKE blfbk-koinh, "口座名義人
bkont      LIKE blfbk-bkont, "銀行管理キー
*会社コード
zterm      LIKE blfb1-zterm, "支払条件
zwels      LIKE blfb1-zwels, "支払方法
hbkid      LIKE blfb1-hbkid, "取引銀行
intad      LIKE blfb1-intad, "担当者インターネット
kverm      LIKE blfb1-kverm, "コメント
*購買組織
zzterm     LIKE blfm1-zterm, "支払条件
*--- Add Start 2010/11/02
tlfns      LIKE blfb1-tlfns, "Act.clk tel.no.(資本金として)
*--- Add End   2010/11/02
*--- Add Start 2012/01/10
tlfxs      LIKE blfb1-tlfxs, "経理担当者Fax
*--- Add End   2012/01/10
END OF st_in.

DATA i_in TYPE STANDARD TABLE OF st_in WITH HEADER LINE.
DATA:w_incnt  LIKE sy-dbcnt, "入力ﾚｺｰﾄﾞ件数
w_outcnt LIKE sy-dbcnt, "出力ﾚｺｰﾄﾞ件数
w_trncnt LIKE sy-dbcnt. "出力仕入先ｺｰﾄﾞ件数
DATA:
*セッションデータ用バッチ入力構造
bgr00 LIKE bgr00,
*仕入先マスタレコード取引データ（バッチインプット構造）
blf00 LIKE blf00,
*一般仕入先マスタレコードパート 1（バッチインプット構造）
blfa1 LIKE blfa1,
*仕入先マスタレコード銀行データ（バッチインプット構造）
blfbk LIKE blfbk,
*仕入先マスタレコード会社コードデータ（バッチインプット構造）
blfb1 LIKE blfb1,
*仕入先マスタ: 購買組織データ (バッチインプット)
blfm1 LIKE blfm1.
*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
PARAMETERS p_in(128)  LOWER CASE OBLIGATORY.   "入力ﾌｧｲﾙ名
PARAMETERS p_out(128) LOWER CASE OBLIGATORY.  "出力ﾌｧｲﾙ名
PARAMETERS p_group LIKE bgr00-group           "ｾｯｼｮﾝ名
OBLIGATORY DEFAULT sy-repid.
* Add ES-UP 2012/08/13 -->
*&---------------------------------------------------------------------*
*&   固定値定義
*&---------------------------------------------------------------------*
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
* Add ES-UP 2012/08/13 <--
*&---------------------------------------------------------------------*
*&   処理
*&---------------------------------------------------------------------*
START-OF-SELECTION.
*
CLEAR:w_incnt,  "入力ﾚｺｰﾄﾞ件数
w_outcnt, "出力ﾚｺｰﾄﾞ件数
w_trncnt. "出力仕入先ｺｰﾄﾞ件数
REFRESH:i_in.
CLEAR:  i_in.
*
PERFORM f_readfile.     "ﾌｧｲﾙﾘｰﾄﾞ
PERFORM f_opendataset.  "ﾌｧｲﾙｵｰﾌﾟﾝ
PERFORM f_datacheck.    "ﾃﾞｰﾀﾁｪｯｸ
PERFORM f_bgr00.        "ｾｯｼｮﾝﾚｺｰﾄﾞ 作成
LOOP AT i_in.
PERFORM f_blf00.      "仕入先のヘッダデータ
PERFORM f_blfa1.      "仕入先の一般データ
PERFORM f_blfb1.      "会社コードデータ
PERFORM f_blfbk.      "銀行データ
PERFORM f_blfm1.      "購買データ (購買組織レベル)
ENDLOOP.
PERFORM f_log.          "ﾛｸﾞ(ﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽ)
*
END-OF-SELECTION.
*&---------------------------------------------------------------------*
*&      Form  F_OPENDATASET
*&---------------------------------------------------------------------*
*       ファイルオープン
*----------------------------------------------------------------------*
FORM f_opendataset.
* Mod ES-UP 2012/08/13 -->
**
*  OPEN DATASET p_out FOR OUTPUT IN TEXT MODE.
*  DATA L_CODEPAGE TYPE CPCODEPAGE.
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
OPEN DATASET p_out FOR OUTPUT
IN TEXT MODE ENCODING UTF-8.
*    IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
*    IGNORING CONVERSION ERRORS.
* Mod ES-UP 2012/08/13 <--
IF sy-subrc <> 0.
MESSAGE s401(y1) WITH 'ファイルオープンエラー' p_out.
STOP.
ENDIF.
*
ENDFORM.                    " F_OPENDATASET
*&---------------------------------------------------------------------*
*&      Form  F_READFILE
*&---------------------------------------------------------------------*
*       ファイルリード
*----------------------------------------------------------------------*
FORM f_readfile.
* Mod ES-UP 2012/08/13 -->
*  DATA:
*     l_cancel TYPE c.
**
*  CLEAR:l_cancel.
**
*  CALL FUNCTION 'UPLOAD'
*       EXPORTING
*            filename                = p_in
*            filetype                = 'DAT'
*       IMPORTING
*            cancel                  = l_cancel
*       TABLES
*            data_tab                = i_in
*       EXCEPTIONS
*            conversion_error        = 1
*            invalid_table_width     = 2
*            invalid_type            = 3
*            no_batch                = 4
*            unknown_error           = 5
*            gui_refuse_filetransfer = 6
*            OTHERS                  = 7.
DATA: L_FILENAME   TYPE STRING,
L_RC         TYPE I,
I_FILE_TABLE TYPE FILETABLE,
L_FILE_TABLE TYPE REF TO FILE_TABLE,
L_CODEPAGE   TYPE ABAP_ENCODING,
L_defNAME    type string,
l_INITIAL_DIRECTORY type string.
perform split_file using p_in
l_INITIAL_DIRECTORY
L_defNAME.
CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG(
EXPORTING
*      WINDOW_TITLE            = WINDOW_TITLE
*      DEFAULT_EXTENSION       = DEFAULT_EXTENSION
DEFAULT_FILENAME        = L_defNAME
*      FILE_FILTER             = FILE_FILTER
*      WITH_ENCODING           = WITH_ENCODING
INITIAL_DIRECTORY       = l_INITIAL_DIRECTORY
*      MULTISELECTION          = MULTISELECTION
CHANGING
FILE_TABLE              = I_FILE_TABLE
RC                      = L_RC
*      USER_ACTION             = USER_ACTION
*      FILE_ENCODING           = FILE_ENCODING
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 1
CNTL_ERROR              = 2
ERROR_NO_GUI            = 3
NOT_SUPPORTED_BY_GUI    = 4
OTHERS                  = 5 ).
* Mod ES-UP 2012/08/13 <--
IF sy-subrc <> 0.
MESSAGE s401(y1) WITH 'システムエラー' sy-subrc.
STOP.
ELSE.
*キャンセル
* Mod ES-UP 2012/08/13 -->
*    IF NOT l_cancel IS INITIAL.
READ TABLE I_FILE_TABLE REFERENCE INTO L_FILE_TABLE INDEX 1.
IF SY-SUBRC <> 0.
* Mod ES-UP 2012/08/13 <--
MESSAGE s401(y1) WITH '処理を中止しました'.
STOP.
ELSE.
* Add ES-UP 2012/08/13 -->
L_FILENAME = L_FILE_TABLE->FILENAME.
*--- シフトJISのコードページを取得
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
CL_GUI_FRONTEND_SERVICES=>GUI_UPLOAD(
EXPORTING
FILENAME                = L_FILENAME
FILETYPE                = 'DAT'
HAS_FIELD_SEPARATOR     = abap_true
*        HEADER_LENGTH           = 0
*        READ_BY_LINE            = 'X'
*        DAT_MODE                = SPACE
CODEPAGE                = L_CODEPAGE
*        IGNORE_CERR             = ABAP_FALSE
*        REPLACEMENT             = '#'
*        VIRUS_SCAN_PROFILE      = VIRUS_SCAN_PROFILE
*      IMPORTING
*        FILELENGTH              = FILELENGTH
*        HEADER                  = HEADER
CHANGING
DATA_TAB                = i_in[]
EXCEPTIONS
FILE_OPEN_ERROR         = 1
FILE_READ_ERROR         = 2
NO_BATCH                = 3
GUI_REFUSE_FILETRANSFER = 4
INVALID_TYPE            = 5
NO_AUTHORITY            = 6
UNKNOWN_ERROR           = 7
BAD_DATA_FORMAT         = 8
HEADER_NOT_ALLOWED      = 9
SEPARATOR_NOT_ALLOWED   = 10
HEADER_TOO_LONG         = 11
UNKNOWN_DP_ERROR        = 12
ACCESS_DENIED           = 13
DP_OUT_OF_MEMORY        = 14
DISK_FULL               = 15
DP_TIMEOUT              = 16
NOT_SUPPORTED_BY_GUI    = 17
ERROR_NO_GUI            = 18
OTHERS                  = 19 ).
IF sy-subrc <> 0.
MESSAGE s401(y1) WITH 'システムエラー' sy-subrc.
STOP.
ENDIF.
* Add ES-UP 2012/08/13 <--
* 入力レコード件数
DESCRIBE TABLE i_in LINES w_incnt.
IF w_incnt = 0.
MESSAGE s401(y1) WITH '変更データが０件です'.
STOP.
ENDIF.
ENDIF.
ENDIF.
*
ENDFORM.                    " F_READFILE
* Add ES-UP 2012/11/01 -->
form split_file using p_full type clike
p_path type string
p_name type string.
data: l_delimiter type c length 1,
l_split     type ref to string,
i_split     type standard table of string,
l_tabix     type i.
*
clear: p_path, p_name.
cl_gui_frontend_services=>get_file_separator(
changing file_separator    = l_delimiter ).
split p_full at l_delimiter into table i_split.
l_tabix = lines( i_split ).
if l_tabix = 0.
return.
endif.
read table i_split into p_name index l_tabix.
delete i_split index l_tabix.
concatenate lines of i_split into p_path separated by l_delimiter.
endform.
* Add ES-UP 2012/11/01 <--
*&---------------------------------------------------------------------*
*&      Form  F_DATACHECK
*&---------------------------------------------------------------------*
*       データチェック
*----------------------------------------------------------------------*
FORM f_datacheck.

ENDFORM.                    " F_DATACHECK
*&---------------------------------------------------------------------*
*&      Form  F_BGR00
*&---------------------------------------------------------------------*
*       セッションデータ用バッチ入力構造
*----------------------------------------------------------------------*
FORM f_bgr00.
*
PERFORM f_init_val USING 'BGR00'.
bgr00-stype = '0'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
bgr00-group = p_group.      "ｾｯｼｮﾝ名
bgr00-mandt = sy-mandt.     "ｸﾗｲｱﾝﾄ
bgr00-usnam = sy-uname.     "ﾕｰｻﾞ名
bgr00-start = space.        "開始日
bgr00-xkeep = 'X'.          "保持ﾌﾗｸﾞ
bgr00-nodata = '/'.         "ﾊﾞｯﾁｲﾝﾌﾟｯﾄなし項目
TRANSFER bgr00 TO p_out.
* 出力レコード件数
ADD 1 TO w_outcnt.
*
ENDFORM.                                                    " F_BGR00
*&---------------------------------------------------------------------*
*&      Form  F_BLF00
*&---------------------------------------------------------------------*
*       仕入先のヘッダデータ
*----------------------------------------------------------------------*
FORM f_blf00.
DATA :
l_10n(10) TYPE n,
l_lifnr   TYPE lfa1-lifnr.
*
PERFORM f_init_val USING 'BLF00'.
blf00-stype = '1'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
blf00-tcode = 'XK02'.       "Transact. コード
IF i_in-lifnr CO '1234567890 '.
l_10n = i_in-lifnr.
blf00-lifnr = l_10n.
ELSE.
blf00-lifnr = i_in-lifnr.
ENDIF.
*会社コード
blf00-bukrs = 'C001'.
*購買組織
SELECT SINGLE lifnr INTO l_lifnr
FROM lfm1 WHERE lifnr = blf00-lifnr
AND   ekorg = '1000'.
IF sy-subrc = 0.
blf00-ekorg = '1000'.
ENDIF.
TRANSFER blf00 TO p_out.
* 出力レコード件数/出力仕入先コード件数
ADD 1 TO w_outcnt.
ADD 1 TO w_trncnt.
*
ENDFORM.                                                    " F_BLF00
*&---------------------------------------------------------------------*
*&      Form  F_BLFA1
*&---------------------------------------------------------------------*
*       仕入先の一般データ
*----------------------------------------------------------------------*
FORM f_blfa1.
DATA :
l_2n(02) TYPE n.

PERFORM f_init_val USING 'BLFA1'.
blfa1-stype = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
blfa1-tbnam = 'BLFA1'.      "ﾃｰﾌﾞﾙ名
blfa1-name1 = i_in-name1.                                 "名称 1
blfa1-name2 = i_in-name2.                                 "名称 2
*--- Add Start 2012/01/10
blfa1-name3 = i_in-name3.   "名称3
blfa1-name4 = i_in-name4.   "名称4
*--- Add End   2012/01/10
blfa1-sortl = i_in-sortl.   "検索用語
blfa1-stras = i_in-stras.   "都道府県
blfa1-pstlz = i_in-pstlz.   "郵便番号
blfa1-ort01 = i_in-ort01.   "市区町村
IF i_in-regio CO '1234567890 '.
l_2n = i_in-regio.
blfa1-regio = l_2n.       "地域
ELSE.
blfa1-regio = i_in-regio. "地域
ENDIF.
blfa1-telf1 = i_in-telf1. "電話番号
blfa1-telfx = i_in-telfx. "ファックス番号
TRANSFER blfa1 TO p_out.
* 出力レコード件数
ADD 1 TO w_outcnt.
*
ENDFORM.                                                    " F_BLFA1
*&---------------------------------------------------------------------*
*&      Form  F_BLFB1
*&---------------------------------------------------------------------*
*       会社コードデータ
*----------------------------------------------------------------------*
FORM f_blfb1.
DATA :
l_4n(4) TYPE n.
*
PERFORM f_init_val USING 'BLFB1'.
blfb1-stype = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
blfb1-tbnam = 'BLFB1'.      "ﾃｰﾌﾞﾙ名
*支払条件
IF i_in-zterm CO '1234567890 '.
l_4n = i_in-zterm.
blfb1-zterm = l_4n.
ELSE.
blfb1-zterm = i_in-zterm.
ENDIF.
*支払方法
blfb1-zwels = i_in-zwels.
*取引銀行
blfb1-hbkid = i_in-hbkid.
*--- Add Start 2010/11/02
*Act.clk tel.no.(資本金項目として代替使用)
blfb1-tlfns = i_in-tlfns.
*--- Add End   2010/11/02
*担当者のインターネットアドレス
blfb1-intad = i_in-intad.
*コメント
blfb1-kverm = i_in-kverm.
*--- Add Start 2012/01/10
* 経理担当者Fax
blfb1-tlfxs = i_in-tlfxs.
*--- Add End   2012/01/10
TRANSFER blfb1 TO p_out.
* 出力レコード件数
ADD 1 TO w_outcnt.
*
ENDFORM.                                                    " F_BLFB1
*&---------------------------------------------------------------------*
*&      Form  F_BLFBK
*&---------------------------------------------------------------------*
*       銀行データ
*----------------------------------------------------------------------*
FORM f_blfbk.
DATA:
l_7n(7) TYPE n,
l_2n(2) TYPE n,
l_banks TYPE lfbk-banks, "銀行国コード
l_bankl TYPE lfbk-bankl, "銀行コード
l_bankn TYPE lfbk-bankn. "銀行口座番号
*
CHECK NOT i_in-bankl = '/' AND
NOT i_in-bankn = '/' AND
NOT i_in-koinh = '/' AND
NOT i_in-bkont = '/'.
*
SELECT banks bankl bankn
INTO (l_banks, l_bankl, l_bankn)
FROM lfbk
WHERE lifnr = blf00-lifnr.

PERFORM f_init_val USING 'BLFBK'.
blfbk-stype = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
blfbk-tbnam = 'BLFBK'.      "ﾃｰﾌﾞﾙ名
*銀行国コード
blfbk-banks = l_banks.
*フラグ: バッチインプットで登録削除?
blfbk-xdele = 'X'. "削除
*銀行コード
blfbk-bankl = l_bankl.
*銀行口座番号
blfbk-bankn = l_bankn.
*
TRANSFER blfbk TO p_out.
* 出力レコード件数
ADD 1 TO w_outcnt.
*
ENDSELECT.
*
PERFORM f_init_val USING 'BLFBK'.
blfbk-stype = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
blfbk-tbnam = 'BLFBK'.      "ﾃｰﾌﾞﾙ名
*銀行国コード
blfbk-banks = 'JP'.
*フラグ: バッチインプットで登録削除?
blfbk-xdele = space. "登録
*銀行コード
IF i_in-bankl CO '1234567890 '.
l_7n = i_in-bankl.
blfbk-bankl = l_7n.
ELSE.
blfbk-bankl = i_in-bankl.
ENDIF.
*銀行口座番号
blfbk-bankn = i_in-bankn.
*口座名義人名
blfbk-koinh = i_in-koinh.
*銀行管理キー
IF i_in-bkont CO '1234567890 '.
l_2n = i_in-bkont.
blfbk-bkont = l_2n.
ELSE.
blfbk-bkont = i_in-bkont.
ENDIF.
*
TRANSFER blfbk TO p_out.
* 出力レコード件数
ADD 1 TO w_outcnt.
*
ENDFORM.                    " F_BLFBK
*&---------------------------------------------------------------------*
*&      Form  F_BLFM1
*&---------------------------------------------------------------------*
*       購買データ (購買組織レベル)
*----------------------------------------------------------------------*
FORM f_blfm1.
DATA :
l_4n(4) TYPE n.
*
CHECK blf00-ekorg = '1000'.
*
PERFORM f_init_val USING 'BLFM1'.
blfm1-stype = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
blfm1-tbnam = 'BLFM1'.      "ﾃｰﾌﾞﾙ名
*支払条件キー
IF i_in-zzterm CO '1234567890 '.
l_4n = i_in-zzterm.
blfm1-zterm = l_4n.
ELSE.
blfm1-zterm = i_in-zzterm.
ENDIF.
*
TRANSFER blfm1 TO p_out.
* 出力レコード件数
ADD 1 TO w_outcnt.
*
ENDFORM.                                                    " F_BLFM1
*&---------------------------------------------------------------------*
*&      Form  F_INIT_VAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_init_val USING value(p_db).
* ローカル変数
FIELD-SYMBOLS <pt> TYPE ANY.
DATA: wk_db(60) TYPE c.
* 変数の初期化
* Mod ES-UP 2012/10/25 -->
*  SELECT * FROM dd03l WHERE tabname = p_db.
SELECT * FROM dd03l WHERE tabname = p_db
and COMPTYPE in (space, 'E').
* Mod ES-UP 2012/10/25 <--
CONCATENATE p_db '-' dd03l-fieldname INTO wk_db.
ASSIGN (wk_db) TO <pt>.
<pt> = '/'.
ENDSELECT.
ENDFORM.                    " F_INIT_VAL
*&---------------------------------------------------------------------*
*&      Form  F_LOG
*&---------------------------------------------------------------------*
*       処理件数の出力
*----------------------------------------------------------------------*
FORM f_log.
MESSAGE i402(y1) WITH '入力レコード:' w_incnt '件'.
MESSAGE i402(y1) WITH '出力レコード:' w_outcnt '件'.
MESSAGE i402(y1) WITH '出力仕入先コード:' w_trncnt '件'.
ENDFORM.                    " F_LOG
