REPORT ZA1FYAL100RP002 LINE-SIZE 150.
*&---------------------------------------------------------------------*
*&  プログラムＩＤ ： ZA1FYAL100RP002
*&  プログラム名称 ： 会計伝票登録用プログラム
*&  処　理　概　要 ：
*&
*&  作　  成  　者 ： MIS
*&  作　  成  　日 ： 2011.03.15
*&---------------------------------------------------------------------*
*& 【変更履歴】
*&  更新日     管理番号     更新者               更新内容
*& ----------  --------  ---------------  -----------------------------*
*& 2011/03/15  DMWXXXX   MIS              新規作成
*& 2011/11/07  DMWXXXX   MIS              帳票レイアウトに伝票件数を追加
*&---------------------------------------------------------------------*

************************************************************************
* TABELS定義
************************************************************************
DATA : TH_T001 LIKE T001,
TH_SKA1 LIKE SKA1,
TH_SKB1 LIKE SKB1,
TH_KNB1 LIKE KNB1,
TH_LFB1 LIKE LFB1.

************************************************************************
* TYPES定義
************************************************************************

* ファイルレイアウト
TYPES : BEGIN OF ST_FILE_RAYOUT,
TANI(5) TYPE C,               "伝票単位項目
BLART LIKE BKPF-BLART,        "伝票タイプ
BUKRS LIKE T001-BUKRS,        "会社コード
BUDAT LIKE BKPF-BUDAT,        "会計転記日付
CPUDT LIKE BKPF-CPUDT,        "会計伝票日付
WAERS LIKE BKPF-WAERS,        "通貨
RATE(14) TYPE C,              "通貨レート
XBLNR LIKE BKPF-XBLNR,        "参照伝票番号
BKTXT LIKE BKPF-BKTXT,        "伝票テキスト
XMWST LIKE BKPF-XMWST,        "税自動計算フラグ
BUZEI LIKE BSEG-BUZEI,        "伝票明細番号
SHKZG LIKE BSEG-SHKZG,        "貸借フラグ
KOART LIKE BSEG-KOART,        "勘定タイプ
UMSKZ LIKE BSEG-UMSKZ,        "特殊仕訳コード
SAKNR LIKE BSEG-SAKNR,        "勘定科目
MWSKZ LIKE BSEG-MWSKZ,        "税コード
BEWAR LIKE BSEG-BEWAR,        "取引タイプ
ANLN1 LIKE BSEG-ANLN1,        "資産番号
ANLN2 LIKE BSEG-ANLN2,        "資産補助番号
WRBTR(14) TYPE C,             "金額
DMBRT(14) TYPE C,             "国内通貨額
KOSTL LIKE BSEG-KOSTL,        "原価センタ
PRCTR LIKE BSEG-PRCTR,        "利益センタ
PROJK LIKE BSEG-PROJK,        "WBS
AUFNR LIKE BSEG-AUFNR,        "指図書
SGTXT LIKE BSEG-SGTXT,        "明細テキスト
ZUONR LIKE BSEG-ZUONR,        "ソートキー
XREF1 LIKE BSEG-XREF1,                            "参照キー1
XREF2 LIKE BSEG-XREF2,                            "参照キー2
XREF3 LIKE BSEG-XREF3,                            "参照キー3
ZTERM LIKE BSEG-ZTERM,        "支払条件
ZLSCH LIKE BSEG-ZLSCH,        "支払方法
ZFBDT LIKE BSEG-ZFBDT,        "支払基準日
ANFAE LIKE BSEG-ANFAE,        "支払期日
BZDAT LIKE BSEG-BZDAT,        "資産評価日
BSCHL LIKE BSEG-BSCHL,        "転記キー
TEXT(255) TYPE C,             "エラーメッセージテキスト
TEXT1(255) TYPE C,             "伝票番号
TEXT2(255) TYPE C,             "原価センタ
TEXT3(255) TYPE C,             "金額
TEXT4(255) TYPE C.             "明細テキスト

TYPES : END OF ST_FILE_RAYOUT.

* 勘定コード情報格納内部テーブル
TYPES : BEGIN OF ST_SKB1,
SAKNR LIKE SKB1-SAKNR,
FSTAG LIKE SKB1-FSTAG,
MWSKZ LIKE SKB1-MWSKZ.
TYPES : END OF ST_SKB1.

* PL勘定コード情報格納内部テーブル
TYPES : BEGIN OF ST_SKA1,
SAKNR LIKE SKA1-SAKNR,
GVTYP LIKE SKA1-GVTYP.
TYPES : END OF ST_SKA1.

* 仕入先コード情報格納内部テーブル
TYPES : BEGIN OF ST_LFB1,
LIFNR LIKE LFB1-LIFNR.
TYPES : END OF ST_LFB1.

* 原価センタ情報格納内部テーブル
TYPES : BEGIN OF ST_CSKS,
KOSTL LIKE CSKS-KOSTL.
TYPES : END OF ST_CSKS.

* 利益センタ情報格納内部テーブル
TYPES : BEGIN OF ST_CEPC,
PRCTR LIKE CEPC-PRCTR.
TYPES : END OF ST_CEPC.

* 特殊勘定コード情報格納内部テーブル
TYPES : BEGIN OF ST_T074,
HKONT LIKE T074-HKONT,
SKONT LIKE T074-SKONT,
UMSKZ LIKE T074-UMSKZ,
KOART LIKE T074-KOART.
TYPES : END OF ST_T074.

* 出力結果情報格納内部テーブル
TYPES : BEGIN OF ST_OUTPUT,
BUKRS LIKE BKPF-BUKRS,
GJAHR LIKE BKPF-GJAHR,
BELNR LIKE BKPF-BELNR,
TEXT(255) TYPE C,
TANI(5)   TYPE C,
TYPE LIKE SY-MSGTY.
TYPES : END OF ST_OUTPUT.

************************************************************************
* データ定義
************************************************************************
DATA : W_KTOPL LIKE T001-KTOPL,   "勘定コード表退避変数
W_ALL_COUNT LIKE SY-TABIX, "合計カウント
W_SUC_COUNT LIKE SY-TABIX, "成功カウント
W_ERR_COUNT LIKE SY-TABIX, "エラーカウント
*    <INS>        DMWXXX            BY MIS     2011.11.07     START
W_ALL_COUNT_D LIKE SY-TABIX, "伝票件数：合計カウント
W_SUC_COUNT_D LIKE SY-TABIX, "伝票件数：成功カウント
W_ERR_COUNT_D LIKE SY-TABIX, "伝票件数：エラーカウント
*    <INS>        DMWXXX            BY MIS     2011.11.07     E N D
W_ERROR(1).                "エラーフラグ

* ファイルデータ格納用内部テーブル
DATA : TD_FILE_RAYOUT  TYPE STANDARD TABLE OF ST_FILE_RAYOUT,
TH_FILE_RAYOUT  LIKE          LINE  OF TD_FILE_RAYOUT,
TH_FILE_RAYOUT_N LIKE        LINE  OF TD_FILE_RAYOUT,
TH_FILE_RAYOUT_D LIKE         LINE  OF TD_FILE_RAYOUT,
TH_FILE_RAYOUT_L LIKE        LINE  OF TD_FILE_RAYOUT.

* エラーファイル用内部テーブル
DATA : TD_FILE_ERROR  TYPE STANDARD TABLE OF ST_FILE_RAYOUT,
TH_FILE_ERROR  LIKE          LINE  OF TD_FILE_RAYOUT.


* 勘定コード情報格納内部テーブル
DATA : TD_SKB1_DATA TYPE STANDARD TABLE OF ST_SKB1,
TH_SKB1_DATA LIKE           LINE OF TD_SKB1_DATA.

* PL勘定コード情報格納内部テーブル
DATA : TD_SKA1_DATA TYPE STANDARD TABLE OF ST_SKA1,
TH_SKA1_DATA LIKE           LINE OF TD_SKA1_DATA.


* 仕入先コード情報格納内部テーブル
DATA : TD_LFB1_DATA TYPE STANDARD TABLE OF ST_LFB1,
TH_LFB1_DATA LIKE           LINE OF TD_LFB1_DATA.

* 原価センタ情報格納内部テーブル
DATA : TD_CSKS_DATA TYPE STANDARD TABLE OF ST_CSKS,
TH_CSKS_DATA LIKE           LINE OF TD_CSKS_DATA.

* 利益センタ情報格納内部テーブル
DATA : TD_CEPC_DATA TYPE STANDARD TABLE OF ST_CEPC,
TH_CEPC_DATA LIKE           LINE OF TD_CEPC_DATA.

* 特殊勘定コード情報格納内部テーブル
DATA : TD_T074_DATA TYPE STANDARD TABLE OF ST_T074,
TH_T074_DATA LIKE           LINE OF TD_T074_DATA.

* バッチインプット用内部テーブル
DATA : TD_FTPOST LIKE TABLE OF FTPOST,
TH_FTPOST LIKE FTPOST.

* バッチインプット用内部テーブル
DATA : TD_BLNTAB LIKE TABLE OF BLNTAB,
TH_BLNTAB LIKE BLNTAB.

* バッチインプット用内部テーブル
DATA : TD_FTTAX LIKE TABLE OF FTTAX,
TH_FTTAX LIKE FTTAX.

* 出力結果用内部テーブル
DATA : TD_OUTPUT TYPE STANDARD TABLE OF ST_OUTPUT,
TH_OUTPUT          LIKE LINE OF TD_OUTPUT.

************************************************************************
* CONSTANTS 定義
************************************************************************
CONSTANTS :
CNS_KOART_D LIKE T074-KOART VALUE 'D',
CNS_KOART_K LIKE T074-KOART VALUE 'K',
CNS_KOART_S LIKE T074-KOART VALUE 'S',
CNS_KOART_T LIKE T074-KOART VALUE 'T',
CNS_KOART_A LIKE T074-KOART VALUE 'A',
CNS_FUNCTION_C TYPE C VALUE 'C',
CNS_TCODE_FB01 LIKE SY-TCODE VALUE 'FB01',
CNS_MSGID_YLMS0201 LIKE LMESS-MSGID VALUE 'YLMS0201',
CNS_MSGNO_005 LIKE LMESS-MSGNO VALUE '005',
CNS_MSGNO_006 LIKE LMESS-MSGNO VALUE '006',
CNS_MSGNO_007 LIKE LMESS-MSGNO VALUE '007',
CNS_MSGNO_008 LIKE LMESS-MSGNO VALUE '008',
CNS_MSGNO_009 LIKE LMESS-MSGNO VALUE '009',
CNS_MSGNO_011 LIKE LMESS-MSGNO VALUE '011',
CNS_MSGNO_012 LIKE LMESS-MSGNO VALUE '012',
CNS_STYPE_K(1) TYPE C VALUE 'K',
CNS_STYPE_P(1) TYPE C VALUE 'P',
CNS_SHKZG_S LIKE BSEG-SHKZG VALUE 'S',
CNS_SHKZG_K LIKE BSEG-SHKZG VALUE 'H',
CNS_FLG_S   LIKE BSEG-SHKZG VALUE 'S',
CNS_FLG_K   LIKE BSEG-SHKZG VALUE 'K',
CNS_BSCHL_40 LIKE BSEG-BSCHL VALUE '40',
CNS_BSCHL_50 LIKE BSEG-BSCHL VALUE '50',
CNS_BSCHL_01 LIKE BSEG-BSCHL VALUE '01',
CNS_BSCHL_11 LIKE BSEG-BSCHL VALUE '11',
CNS_BSCHL_09 LIKE BSEG-BSCHL VALUE '09',
CNS_BSCHL_19 LIKE BSEG-BSCHL VALUE '19',
CNS_BSCHL_21 LIKE BSEG-BSCHL VALUE '21',
CNS_BSCHL_31 LIKE BSEG-BSCHL VALUE '31',
CNS_BSCHL_29 LIKE BSEG-BSCHL VALUE '29',
CNS_BSCHL_39 LIKE BSEG-BSCHL VALUE '39',
CNS_BSCHL_70 LIKE BSEG-BSCHL VALUE '70',
CNS_BSCHL_75 LIKE BSEG-BSCHL VALUE '75',
CNS_ERROR(1) TYPE C VALUE 'E'.

************************************************************************
* 選択画面
************************************************************************
PARAMETERS : P_BUKRS LIKE T001-BUKRS OBLIGATORY,
P_UFNAME  TYPE SO_PRGPATH OBLIGATORY.

SELECTION-SCREEN SKIP 2.

PARAMETERS : CB_TEST TYPE C AS CHECKBOX ,
P_DFNAME  TYPE SO_PRGPATH OBLIGATORY.

************************************************************************
* 初期設定
************************************************************************
INITIALIZATION .



************************************************************************
* 画面処理
************************************************************************
* アップフォードファイル選択処理
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_DFNAME .
PERFORM A1F_GET_DOWN_FILENAME  USING P_DFNAME.

* ダウンロードファイル選択処理
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_UFNAME .
PERFORM A1F_GET_UP_FILENAME  USING P_UFNAME .

*会社コード存在チェック
AT SELECTION-SCREEN ON P_BUKRS.
PERFORM A1F_CHECK_BUKRS USING P_BUKRS.

************************************************************************
* 主処理
************************************************************************
START-OF-SELECTION .

* ファイルアップロード処理
PERFORM A1F_FILE_UPLOAD.
CHECK W_ERROR IS INITIAL.

* ファイル内容チェック準備
PERFORM A1F_FILE_CHECK_PREPARE.

* ファイル内容チェック
PERFORM A1F_FILE_CHECK.

* ソートキーへの値セット
PERFORM A1F_SORT_SET.

* 伝票の転記（テスト実行時は実行しない）
IF CB_TEST IS INITIAL.

* 処理対象データが1件でもある場合のみ実行
IF NOT TD_FILE_RAYOUT IS INITIAL.
PERFORM A1F_BDC_PROCESS.
ELSE.
*   対象データは存在しません
MESSAGE S004(YLMS0201).
ENDIF.
ENDIF.

************************************************************************
* 終了処理
************************************************************************
END-OF-SELECTION.

* エラーの場合は出力処理なし
IF W_ERROR IS INITIAL.
ELSE.
* エラーファイルダウンロード
PERFORM A1F_DOWNLOAD_FILE.
ENDIF.
* 出力画面（ヘッダ）出力
PERFORM A1F_REPORT_HEADER.

* 出力画面（明細）出力
PERFORM A1F_REPORT_BODY.

*&---------------------------------------------------------------------*
*&      Form  F_CHECK_BUKRS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CHECK_BUKRS USING P_BUKRS.

* 会社コードの存在チェックを実施する
SELECT SINGLE * FROM T001
INTO TH_T001
WHERE BUKRS = P_BUKRS.

* 検索できた場合、グローバル変数へ勘定コード表を格納
IF SY-SUBRC IS INITIAL.
W_KTOPL = TH_T001-KTOPL.

* 検索できない場合以下メッセージを出力して終了
ELSE.
*   会社コード & が未定義です
MESSAGE E248(63) WITH P_BUKRS.
ENDIF.

ENDFORM.                    " F_CHECK_BUKRS
*&---------------------------------------------------------------------*
*&      Form  f_file_upload
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_FILE_UPLOAD.

DATA : LW_COUNT TYPE I,  "内部テーブル件数確認用変数
LW_FILENAME TYPE STRING.
*    <INS>        DMWXXX            BY MIS     2011.11.07     START
DATA : LW_FILE_RAYOUT  TYPE ST_FILE_RAYOUT.
*    <INS>        DMWXXX            BY MIS     2011.11.07     E N D

LW_FILENAME = P_UFNAME.

* 指定ファイルのアップロード
CALL FUNCTION 'GUI_UPLOAD'
EXPORTING
FILENAME                = LW_FILENAME
FILETYPE                = 'ASC'
HAS_FIELD_SEPARATOR     = 'X'
TABLES
DATA_TAB                = TD_FILE_RAYOUT
EXCEPTIONS
FILE_OPEN_ERROR         = 1
FILE_READ_ERROR         = 2
NO_BATCH                = 3
GUI_REFUSE_FILETRANSFER = 4
INVALID_TYPE            = 5
NO_AUTHORITY            = 6
UNKNOWN_ERROR           = 7
BAD_DATA_FORMAT         = 8
HEADER_NOT_ALLOWED      = 9
SEPARATOR_NOT_ALLOWED   = 10
HEADER_TOO_LONG         = 11
UNKNOWN_DP_ERROR        = 12
ACCESS_DENIED           = 13
DP_OUT_OF_MEMORY        = 14
DISK_FULL               = 15
DP_TIMEOUT              = 16
OTHERS                  = 17.

CLEAR W_ERROR.
* メッセージの出力
IF SY-SUBRC <> 0.
W_ERROR = 1.
"汎用モジュール GUI_UPLOAD に失敗しました
MESSAGE S002(YLMS0201) WITH TEXT-001.
ENDIF.

CHECK W_ERROR IS INITIAL.

** ヘッダ行の削除
*  DELETE TD_FILE_RAYOUT INDEX 1.

* 空白行の削除（全項目がINITIALのもの）
DELETE TD_FILE_RAYOUT
WHERE TANI IS INITIAL
AND  BLART IS INITIAL
AND  BUKRS IS INITIAL
AND  BUDAT IS INITIAL
AND  CPUDT IS INITIAL
AND  WAERS IS INITIAL
AND  RATE IS INITIAL
AND  XBLNR IS INITIAL
AND  BKTXT IS INITIAL
AND  MWSKZ IS INITIAL
AND  XMWST IS INITIAL
AND  BUZEI IS INITIAL
AND  SHKZG IS INITIAL
AND  KOART IS INITIAL
AND  UMSKZ IS INITIAL
AND  SAKNR IS INITIAL
AND  BEWAR IS INITIAL
AND  ANLN1 IS INITIAL
AND  ANLN2 IS INITIAL
AND  DMBRT IS INITIAL
AND  WRBTR IS INITIAL
AND  KOSTL IS INITIAL
AND  PRCTR IS INITIAL
AND  PROJK IS INITIAL
AND  AUFNR IS INITIAL
AND  SGTXT IS INITIAL
AND  ZUONR IS INITIAL
AND  XREF1 IS INITIAL
AND  XREF2 IS INITIAL
AND  XREF3 IS INITIAL
AND  ZTERM IS INITIAL
AND  ZLSCH IS INITIAL
AND  ZFBDT IS INITIAL
AND  ANFAE IS INITIAL
AND  BZDAT IS INITIAL.

* 件数チェック
DESCRIBE TABLE TD_FILE_RAYOUT LINES LW_COUNT.
W_ALL_COUNT = LW_COUNT.

IF LW_COUNT IS INITIAL.
W_ERROR = 1.
"対象データは存在しません
MESSAGE S004(YLMS0201).
EXIT.
ENDIF.

CHECK W_ERROR IS INITIAL.

* 内部テーブルのソート
SORT TD_FILE_RAYOUT BY TANI BUZEI ASCENDING.

*    <INS>        DMWXXX            BY MIS     2011.11.07     START
* 伝票件数の取得
LOOP AT TD_FILE_RAYOUT INTO LW_FILE_RAYOUT.
AT NEW TANI.
W_ALL_COUNT_D =  W_ALL_COUNT_D + 1.
ENDAT.
ENDLOOP.
*    <INS>        DMWXXX            BY MIS     2011.11.07     E N D

ENDFORM.                    " f_file_upload
*&---------------------------------------------------------------------*
*&      Form  A1F_GET_UP_FILENAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_UFNAME  text
*----------------------------------------------------------------------*
FORM A1F_GET_UP_FILENAME USING P_UFNAME.

* ローカルオブジェクト定義
DATA : LW_FILENAME TYPE STRING,
LTD_IT_FILE TYPE STANDARD TABLE OF FILE_TABLE,
LTH_IT_FILE LIKE FILE_TABLE ,
LW_V_RC    TYPE I.

* 初期化
LW_FILENAME = P_UFNAME.

* Methodコール
CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
EXPORTING
INITIAL_DIRECTORY       = LW_FILENAME
CHANGING
FILE_TABLE              = LTD_IT_FILE
RC                      = LW_V_RC
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 1
CNTL_ERROR              = 2
ERROR_NO_GUI            = 3.

IF SY-SUBRC = 0.

* ユーザ指定のファイルを設定
READ TABLE LTD_IT_FILE INTO LTH_IT_FILE INDEX 1.
P_UFNAME = LTH_IT_FILE-FILENAME.
ENDIF.


ENDFORM.                    " A1F_GET_UP_FILENAME
*&---------------------------------------------------------------------*
*&      Form  A1F_GET_DOWN_FILENAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_DFNAME  text
*----------------------------------------------------------------------*
FORM A1F_GET_DOWN_FILENAME USING    P_DFNAME.

* ローカルオブジェクト定義
DATA : LW_FILENAME TYPE STRING,
LTD_IT_FILE TYPE STANDARD TABLE OF FILE_TABLE,
LTH_IT_FILE LIKE FILE_TABLE ,
LW_V_RC    TYPE I.

* 初期化
LW_FILENAME = P_DFNAME.

* Methodコール
CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
EXPORTING
INITIAL_DIRECTORY       = LW_FILENAME
CHANGING
FILE_TABLE              = LTD_IT_FILE
RC                      = LW_V_RC
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 1
CNTL_ERROR              = 2
ERROR_NO_GUI            = 3.

IF SY-SUBRC = 0.
* ユーザ指定のファイルを設定
READ TABLE LTD_IT_FILE INTO LTH_IT_FILE INDEX 1.
P_DFNAME = LTH_IT_FILE-FILENAME.
ENDIF.

ENDFORM.                    " A1F_GET_DOWN_FILENAME

*&---------------------------------------------------------------------*
*&      Form  A1F_FILE_CHECK_PREPARE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_FILE_CHECK_PREPARE.

* 勘定科目マスタの存在チェック用データ収集
PERFORM A1F_SKB1_CHECK.

* PL勘定科目マスタの存在チェック用データ収集
PERFORM A1F_SKA1_CHECK.

* 仕入先コードの存在チェックデータ収集
PERFORM A1F_LFB1_CHECK.

* 原価センタの存在チェックデータ収集
PERFORM A1F_CSKS_CHECK.

* 利益センタの存在チェックデータ収集
PERFORM A1F_CEPC_CHECK.

ENDFORM.                    " A1F_FILE_CHECK_PREPARE
*&---------------------------------------------------------------------*
*&      Form  A1F_SKB1_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_SKB1_CHECK.

* 勘定コードマスタ検索
SELECT SAKNR FSTAG MWSKZ FROM SKB1
INTO TABLE TD_SKB1_DATA
WHERE BUKRS = P_BUKRS
AND XINTB = SPACE
AND XLOEB = SPACE
AND MITKZ = SPACE
AND XSPEB = SPACE.

ENDFORM.                    " A1F_SKB1_CHECK
*&---------------------------------------------------------------------*
*&      Form  A1F_SKA1_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_SKA1_CHECK.

* 勘定コードマスタからPL科目のみ検索
SELECT SAKNR GVTYP FROM SKA1
INTO TABLE TD_SKA1_DATA
WHERE KTOPL = P_BUKRS
AND GVTYP = 'X'.


ENDFORM.                    " A1F_SKA1_CHECK
*&---------------------------------------------------------------------*
*&      Form  A1F_lfb1_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_LFB1_CHECK.

* 仕入先コード検索
SELECT LIFNR FROM LFB1
INTO TABLE TD_LFB1_DATA
WHERE BUKRS = P_BUKRS
AND SPERR = SPACE
AND LOEVM = SPACE.

ENDFORM.                    " A1F_lfb1_CHECK
*&---------------------------------------------------------------------*
*&      Form  A1F_CSKS_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CSKS_CHECK.

* 原価センタ情報検索
SELECT KOSTL FROM CSKS
INTO TABLE TD_CSKS_DATA
WHERE BUKRS = P_BUKRS
AND DATBI >= SY-DATUM
AND DATAB <= SY-DATUM.

ENDFORM.                    " A1F_CSKS_CHECK
*&---------------------------------------------------------------------*
*&      Form  A1F_CEPC_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CEPC_CHECK.

* 利益センタ情報検索
SELECT PRCTR FROM CEPC
INTO TABLE TD_CEPC_DATA
WHERE DATBI >= SY-DATUM
AND DATAB <= SY-DATUM.

ENDFORM.                    " A1F_CEPC_CHECK
*&---------------------------------------------------------------------*
*&      Form  A1F_FILE_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_FILE_CHECK.

DATA : WL_TABIX LIKE SY-TABIX.

* Binary search用ソート
SORT TD_T074_DATA BY SKONT.

LOOP AT TD_FILE_RAYOUT INTO TH_FILE_RAYOUT.
WL_TABIX = SY-TABIX.

*【伝票ヘッダの入力必須項目チェック】
IF TH_FILE_RAYOUT-TANI IS INITIAL.
*   入力ファイルへのエラーデータ設定（伝票単位項目）
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_005
TEXT-002
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.

MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.
CONTINUE.

ELSEIF TH_FILE_RAYOUT-BUKRS IS INITIAL.
*   入力ファイルへのエラーデータ設定（会社コード）
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_005
TEXT-003
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.

MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.
CONTINUE.

ELSEIF TH_FILE_RAYOUT-BUDAT IS INITIAL.
*   入力ファイルへのエラーデータ設定（転記日）
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_005
TEXT-004
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.

MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.
CONTINUE.

ELSEIF NOT TH_FILE_RAYOUT-ZFBDT IS INITIAL.
*   入力ファイルへのエラーデータ設定（転記日と支払期日）
IF TH_FILE_RAYOUT-ZFBDT < TH_FILE_RAYOUT-BUDAT.
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_012
SPACE
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.

MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.
CONTINUE.
ENDIF.
ELSEIF TH_FILE_RAYOUT-WAERS IS INITIAL.
*   入力ファイルへのエラーデータ設定（通貨）
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_005
TEXT-005
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.

MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.
CONTINUE.

ENDIF.

*【ファイルの会社コードと第一画面の会社コードチェック】
IF TH_FILE_RAYOUT-BUKRS NE P_BUKRS.
*   入力ファイルへのエラーデータ設定（会社コード相違）
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_006
TEXT-003
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.

MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.
CONTINUE.

ENDIF.

* 【勘定タイプ別チェック】
* 勘定タイプの設定
PERFORM A1F_GET_KOART.

IF NOT TH_FILE_RAYOUT-TEXT IS INITIAL.
MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.
CONTINUE.
ENDIF.

*【転記キーのセット】
PERFORM A1F_SET_BSCHL.
MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.


*【PL勘定の場合のみ、原価センタの入力必須チェック】
PERFORM A1F_CHECK_KOSTL_PL.
IF NOT TH_FILE_RAYOUT-TEXT IS INITIAL.
MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.
CONTINUE.
ENDIF.

*【原価センタの存在チェック】
PERFORM A1F_CHECK_KOSTL.
IF NOT TH_FILE_RAYOUT-TEXT IS INITIAL.
MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.
CONTINUE.
ENDIF.

*【利益センタの存在チェック】
PERFORM A1F_CHECK_PRTR.
IF NOT TH_FILE_RAYOUT-TEXT IS INITIAL.
MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.
CONTINUE.
ENDIF.


ENDLOOP.

* エラー内容をエラーファイルへ出力し、転記用情報から削除
DO.

* 処理対象内部テーブルからエラー情報抽出
LOOP AT TD_FILE_RAYOUT INTO TH_FILE_RAYOUT
WHERE TEXT NE SPACE.
EXIT.
ENDLOOP.

* エラー情報なければ終了
IF SY-SUBRC NE 0.
EXIT.

ELSE.
* エラー情報あれば該当伝票単位すべてをエラー出力用内部テーブルへ
LOOP AT TD_FILE_RAYOUT INTO TH_FILE_RAYOUT
WHERE TANI = TH_FILE_RAYOUT-TANI.
IF TH_FILE_RAYOUT-TANI = SPACE.
EXIT.
ENDIF.
W_ERROR = 1.

* エラーとなっている伝票番号、原価センタ、金額、明細テキストの情報を
*  エラーファイルに付与。
IF TH_FILE_RAYOUT-TEXT NE SPACE.
* 伝票番号
IF TH_FILE_RAYOUT-TEXT1 = SPACE.
TH_FILE_RAYOUT-TEXT1 = TH_FILE_RAYOUT-TANI.
ENDIF.
* 原価センタ
IF TH_FILE_RAYOUT-TEXT2 = SPACE.
TH_FILE_RAYOUT-TEXT2 = TH_FILE_RAYOUT-KOSTL.
ENDIF.
* 金額
IF TH_FILE_RAYOUT-TEXT3 = SPACE.
TH_FILE_RAYOUT-TEXT3 = TH_FILE_RAYOUT-WRBTR.
ENDIF.
* 明細テキスト
IF TH_FILE_RAYOUT-TEXT4 = SPACE.
TH_FILE_RAYOUT-TEXT4 = TH_FILE_RAYOUT-SGTXT.
ENDIF.
ENDIF.

APPEND TH_FILE_RAYOUT TO TD_FILE_ERROR.

CLEAR TH_OUTPUT.
TH_OUTPUT-TANI  = TH_FILE_RAYOUT-TANI.
TH_OUTPUT-TEXT  = TH_FILE_RAYOUT-TEXT.
APPEND TH_OUTPUT TO TD_OUTPUT.


*        clear th_file_rayout.
ENDLOOP.

* 処理対象内部テーブルから該当伝票単位情報を削除
DELETE TD_FILE_RAYOUT WHERE TANI = TH_FILE_RAYOUT-TANI.
ENDIF.
ENDDO.
ENDFORM.                    " A1F_FILE_CHECK
*&---------------------------------------------------------------------*
*&      Form  a1f_check_hkont
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CHECK_HKONT.

* 検索のためAlpha_Input
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT  = TH_FILE_RAYOUT-SAKNR
IMPORTING
OUTPUT = TH_FILE_RAYOUT-SAKNR.

* 勘定コード一覧からファイルのコードを検索
READ TABLE TD_SKB1_DATA INTO TH_SKB1_DATA
WITH KEY SAKNR = TH_FILE_RAYOUT-SAKNR.

* 検索できなかった場合にエラーメッセージ出力
IF SY-SUBRC IS INITIAL.
ELSE.
*   入力ファイルへのエラーデータ設定（勘定コードエラー）
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_007
SPACE
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.
ENDIF.

ENDFORM.                    " a1f_check_hkont
*&---------------------------------------------------------------------*
*&      Form  A1F_CHECK_LIFNR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CHECK_LIFNR.

* 検索のためAlpha_Input
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT  = TH_FILE_RAYOUT-SAKNR
IMPORTING
OUTPUT = TH_FILE_RAYOUT-SAKNR.

* 仕入先一覧からファイルのコードを検索
READ TABLE TD_LFB1_DATA INTO TH_LFB1_DATA
WITH KEY LIFNR = TH_FILE_RAYOUT-SAKNR.

* 検索できなかった場合にエラーメッセージ出力
IF SY-SUBRC IS INITIAL.
ELSE.
*   入力ファイルへのエラーデータ設定（仕入先エラー）
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_008
TH_FILE_RAYOUT-SAKNR
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.
ENDIF.

ENDFORM.                    " A1F_CHECK_LIFNR
*&---------------------------------------------------------------------*
*&      Form  a1f_check_kostl
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CHECK_KOSTL.

IF NOT TH_FILE_RAYOUT-KOSTL IS INITIAL.

* 原価センタマスタデータを入力ファイル情報で検索する
READ TABLE TD_CSKS_DATA INTO TH_CSKS_DATA
WITH KEY KOSTL = TH_FILE_RAYOUT-KOSTL.

* 見つからない場合エラー
IF SY-SUBRC = 0
OR TH_FILE_RAYOUT-KOSTL = SPACE.
ELSE.



TRANSLATE TH_FILE_RAYOUT-KOSTL TO UPPER CASE.

READ TABLE TD_CSKS_DATA INTO TH_CSKS_DATA
WITH KEY KOSTL = TH_FILE_RAYOUT-KOSTL.

IF SY-SUBRC = 0.

ELSE.

*   入力ファイルへのエラーデータ設定（原価センタエラー）
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_009
TEXT-006
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.
ENDIF.
ENDIF.
ENDIF.
ENDFORM.                    " a1f_check_kostl
*&---------------------------------------------------------------------*
*&      Form  a1f_check_kostl_pl
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CHECK_KOSTL_PL.

* 勘定科目がPL勘定の場合のみチェックを行う。
CLEAR TH_SKA1_DATA.
READ TABLE TD_SKA1_DATA INTO TH_SKA1_DATA
WITH KEY SAKNR = TH_FILE_RAYOUT-SAKNR.

IF SY-SUBRC = 0.
IF TH_FILE_RAYOUT-KOSTL IS INITIAL.
* 見つからない場合エラー
*   入力ファイルへのエラーデータ設定（原価センタエラー）
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_011
SPACE
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.
ENDIF.
ENDIF.
ENDFORM.                    " a1f_check_kostl_pl
*&---------------------------------------------------------------------*
*&      Form  a1f_check_prtr
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CHECK_PRTR.

IF NOT TH_FILE_RAYOUT-PRCTR IS INITIAL.

* 原価センタマスタデータを入力ファイル情報で検索する
READ TABLE TD_CEPC_DATA INTO TH_CEPC_DATA
WITH KEY PRCTR = TH_FILE_RAYOUT-PRCTR.

* 見つからない場合エラー
IF SY-SUBRC = 0
OR TH_FILE_RAYOUT-PRCTR = SPACE.
ELSE.
*   入力ファイルへのエラーデータ設定（利益センタエラー）
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_009
TEXT-007
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.
ENDIF.
ENDIF.
ENDFORM.                    " a1f_check_prtr
*&---------------------------------------------------------------------*
*&      Form  a1f_bdc_process
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_BDC_PROCESS.

* BDCスタート
PERFORM A1F_BDC_START.

LOOP AT TD_FILE_RAYOUT INTO TH_FILE_RAYOUT.

TH_FILE_RAYOUT_D = TH_FILE_RAYOUT.

AT NEW TANI.

CLEAR : TH_FTPOST,
TD_FTPOST.
REFRESH : TD_FTPOST,
TD_BLNTAB,
TD_FTTAX.


* 会計伝票データ設定（ヘッダ）
PERFORM A1F_BDC_SETTING_HEAD.
ENDAT.

* 会計伝票データ設定（明細）
PERFORM A1F_BDC_SETTING_BODY.

AT END OF TANI.
* 会計伝票登録実行
PERFORM A1F_BDC_RUN.
ENDAT.

ENDLOOP.

* BDC終了
PERFORM A1F_BDC_END.

ENDFORM.                    " a1f_bdc_process
*&---------------------------------------------------------------------*
*&      Form  a1f_bdc_start
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_BDC_START.

* BDCセッションスタート
CALL FUNCTION 'POSTING_INTERFACE_START'
EXPORTING
I_FUNCTION         = CNS_FUNCTION_C
I_MODE             = 'A'
EXCEPTIONS
CLIENT_INCORRECT   = 1
FUNCTION_INVALID   = 2
GROUP_NAME_MISSING = 3
MODE_INVALID       = 4
UPDATE_INVALID     = 5
OTHERS             = 6.

IF SY-SUBRC <> 0.
"汎用モジュールPOSTING_INTERFACE_START処理に失敗しました
MESSAGE E002(YLMS0201) WITH TEXT-025.
ENDIF.

ENDFORM.                    " a1f_bdc_start
*&---------------------------------------------------------------------*
*&      Form  a1f_bdc_setting
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_BDC_SETTING_HEAD.

PERFORM A1F_BDC_SET :
USING CNS_STYPE_K  TH_FILE_RAYOUT_D-TANI
TH_FILE_RAYOUT_D-BUKRS 'BKPF-BUKRS',
USING CNS_STYPE_K TH_FILE_RAYOUT_D-TANI
TH_FILE_RAYOUT_D-BLART 'BKPF-blart',
USING CNS_STYPE_K TH_FILE_RAYOUT_D-TANI
TH_FILE_RAYOUT_D-CPUDT 'BKPF-bldat',
USING CNS_STYPE_K TH_FILE_RAYOUT_D-TANI
TH_FILE_RAYOUT_D-BUDAT 'BKPF-budat',
USING CNS_STYPE_K TH_FILE_RAYOUT_D-TANI
TH_FILE_RAYOUT_D-XBLNR 'BKPF-xblnr',
USING CNS_STYPE_K TH_FILE_RAYOUT_D-TANI
TH_FILE_RAYOUT_D-WAERS 'BKPF-waers',
USING CNS_STYPE_K TH_FILE_RAYOUT_D-TANI
TH_FILE_RAYOUT_D-RATE 'BKPF-kursf',
USING CNS_STYPE_K TH_FILE_RAYOUT_D-TANI
TH_FILE_RAYOUT_D-BKTXT 'BKPF-bktxt',
USING CNS_STYPE_K TH_FILE_RAYOUT_D-TANI
TH_FILE_RAYOUT_D-XMWST 'BKPF-XMWST'.


ENDFORM.                    " a1f_bdc_setting
*&---------------------------------------------------------------------*
*&      Form  A1F_BDC_RUN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_BDC_RUN.

* メッセージ変換用構造定義
DATA : LW_MESSAGE LIKE LMESS,
LW_SUBRC LIKE SY-SUBRC,
LW_TEXT(255) TYPE C,
LW_TEXT1(255) TYPE C,
LW_TEXT2(255) TYPE C,
LW_TEXT3(255) TYPE C,
LW_TEXT4(255) TYPE C.


CLEAR TH_OUTPUT.

CALL FUNCTION 'POSTING_INTERFACE_DOCUMENT'
EXPORTING
I_TCODE                  = CNS_TCODE_FB01
IMPORTING
E_MSGID                  = LW_MESSAGE-MSGID
E_MSGNO                  = LW_MESSAGE-MSGNO
E_MSGTY                  = LW_MESSAGE-MSGTY
E_MSGV1                  = LW_MESSAGE-MSGV1
E_MSGV2                  = LW_MESSAGE-MSGV2
E_MSGV3                  = LW_MESSAGE-MSGV3
E_MSGV4                  = LW_MESSAGE-MSGV4
E_SUBRC                  = LW_SUBRC
TABLES
T_BLNTAB                 = TD_BLNTAB
T_FTPOST                 = TD_FTPOST
T_FTTAX                  = TD_FTTAX
EXCEPTIONS
ACCOUNT_MISSING          = 1
COMPANY_CODE_MISSING     = 2
POSTING_KEY_INVALID      = 3
POSTING_KEY_MISSING      = 4
RECORD_TYPE_INVALID      = 5
TRANSACTION_CODE_INVALID = 6
AMOUNT_FORMAT_ERROR      = 7
TOO_MANY_LINE_ITEMS      = 8
COMPANY_CODE_INVALID     = 9
SCREEN_NOT_FOUND         = 10
NO_AUTHORIZATION         = 11
OTHERS                   = 12.

PERFORM A1F_SET_TEXT USING LW_MESSAGE-MSGID
LW_MESSAGE-MSGNO
LW_MESSAGE-MSGV1
LW_MESSAGE-MSGV2
LW_MESSAGE-MSGV3
LW_MESSAGE-MSGV4
CHANGING TH_OUTPUT-TEXT.

READ TABLE TD_BLNTAB INTO TH_BLNTAB INDEX 1.

IF TH_OUTPUT-TYPE NE CNS_ERROR.
TH_OUTPUT-BUKRS = TH_BLNTAB-BUKRS.
TH_OUTPUT-GJAHR = TH_BLNTAB-GJAHR.
TH_OUTPUT-BELNR = LW_MESSAGE-MSGV1.
ENDIF.
TH_OUTPUT-TYPE  = LW_MESSAGE-MSGTY.

IF NOT  LW_MESSAGE-MSGV4 IS INITIAL.
TH_OUTPUT-TYPE = 'E'.
ENDIF.
TH_OUTPUT-TANI = TH_FILE_RAYOUT_D-TANI.
APPEND TH_OUTPUT TO TD_OUTPUT.

* エラーの場合、同一伝票単位情報をすべてエラーとして出力
IF TH_OUTPUT-TYPE = CNS_ERROR.

* 2011.7.24 add -start by t.arai(エラー時にファイル出力しない障害対応)
W_ERROR = 1.
** 2011.7.24 add -end  by t.arai

LOOP AT TD_FILE_RAYOUT INTO TH_FILE_RAYOUT
WHERE TANI = TH_FILE_RAYOUT_D-TANI.
* エラーとなっている伝票番号、原価センタ、金額、明細テキストの情報を
*  エラーファイルに付与。
CLEAR TH_FILE_RAYOUT_L.
TH_FILE_RAYOUT_L = TH_FILE_RAYOUT.
AT NEW TANI.
IF TH_OUTPUT-TEXT NE SPACE.
*エラーメッセージ出力
LW_TEXT = TH_OUTPUT-TEXT.
* 伝票番号
LW_TEXT1 = TH_FILE_RAYOUT_L-TANI.
* 原価センタ
LW_TEXT2 = TH_FILE_RAYOUT_L-KOSTL.
* 金額
LW_TEXT3 = TH_FILE_RAYOUT_L-WRBTR.
* 明細テキスト
LW_TEXT4 = TH_FILE_RAYOUT_L-SGTXT.
ENDIF.
ENDAT.
TH_FILE_RAYOUT-TEXT = LW_TEXT.
TH_FILE_RAYOUT-TEXT1 = LW_TEXT1.
TH_FILE_RAYOUT-TEXT2 = LW_TEXT2.
TH_FILE_RAYOUT-TEXT3 = LW_TEXT3.
TH_FILE_RAYOUT-TEXT4 = LW_TEXT4.

APPEND TH_FILE_RAYOUT TO TD_FILE_ERROR.
CLEAR : LW_TEXT,LW_TEXT1,LW_TEXT2,LW_TEXT3,LW_TEXT4.
ENDLOOP.
ENDIF.



ENDFORM.                    " A1F_BDC_RUN
*&---------------------------------------------------------------------*
*&      Form  a1f_get_koart
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_GET_KOART.

* 検索のためAlpha_Input
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT  = TH_FILE_RAYOUT-SAKNR
IMPORTING
OUTPUT = TH_FILE_RAYOUT-SAKNR.

* 勘定コード一覧からファイルのコードを検索
READ TABLE TD_SKB1_DATA INTO TH_SKB1_DATA
WITH KEY SAKNR = TH_FILE_RAYOUT-SAKNR.

* 検索できなかった場合は仕入先マスタを検索
* 検索できた場合は勘定タイプSをセット
IF SY-SUBRC IS INITIAL.
TH_FILE_RAYOUT-KOART = CNS_KOART_S.
ELSE.
* 仕入先一覧からファイルのコードを検索
READ TABLE TD_LFB1_DATA INTO TH_LFB1_DATA
WITH KEY LIFNR = TH_FILE_RAYOUT-SAKNR.
* 検索できなかった場合にエラーメッセージ出力
* 検索できた場合は、勘定タイプKをセット
IF SY-SUBRC IS INITIAL.
TH_FILE_RAYOUT-KOART = CNS_KOART_K.
ELSE.
*   入力ファイルへのエラーデータ設定（勘定コードエラー）
PERFORM A1F_SET_TEXT USING CNS_MSGID_YLMS0201
CNS_MSGNO_007
SPACE
SPACE
SPACE
SPACE
CHANGING TH_FILE_RAYOUT-TEXT.
ENDIF.
ENDIF.

ENDFORM.                    " a1f_get_koart
*&---------------------------------------------------------------------*
*&      Form  a1f_set_text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_TEXT_002  text
*----------------------------------------------------------------------*
FORM A1F_SET_TEXT USING    P_ID
P_NO
P_TEXT1
P_TEXT2
P_TEXT3
P_TEXT4
CHANGING P_TEXT.

* メッセージ変換用構造定義
DATA : LW_MESSAGE LIKE LMESS.

* メッセージテキスト取得用データ設定
LW_MESSAGE-MSGID = P_ID.
LW_MESSAGE-MSGNO = P_NO.
LW_MESSAGE-MSGV1 = P_TEXT1.
LW_MESSAGE-MSGV2 = P_TEXT2.
LW_MESSAGE-MSGV3 = P_TEXT3.
LW_MESSAGE-MSGV4 = P_TEXT4.

* メッセージからテキスト化して出力ファイルへセット
CALL FUNCTION 'L_MESSAGE_AUFBEREITEN'
EXPORTING
I_MESS  = LW_MESSAGE
I_LANGU = SY-LANGU
IMPORTING
O_TEXT  = P_TEXT.


ENDFORM.                    " a1f_set_text
*&---------------------------------------------------------------------*
*&      Form  A1F_BDC_SETTING_body
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_BDC_SETTING_BODY.

PERFORM A1F_BDC_SET :
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-BSCHL 'RF05A-NEWBS',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-SAKNR 'RF05A-NEWKO',
*
*
*      USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
*            TH_FILE_RAYOUT_D-MWSKZ 'BSEG-MWSKZ',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-WRBTR 'BSEG-WRBTR',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-SGTXT 'BSEG-SGTXT',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-ZUONR 'BSEG-ZUONR',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-BEWAR 'BSEG-ANBWA',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-ANLN1 'BSEG-ANLN1',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-ANLN2 'BSEG-ANLN2',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-KOSTL 'COBL-KOSTL',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-PRCTR 'COBL-PRCTR',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-PROJK 'BSEG-PROJK',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-AUFNR 'BSEG-AUFNR',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-XREF1 'BSEG-XREF1',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-XREF2 'BSEG-XREF2',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-XREF3 'BSEG-XREF3',
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-ZTERM 'BSEG-ZTERM'.

IF TH_FILE_RAYOUT_D-DMBRT = '00000000000000'.

ELSE.
PERFORM A1F_BDC_SET :
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-DMBRT 'BSEG-DMBTR'.

ENDIF.
IF TH_FILE_RAYOUT_D-ZFBDT = '00000000'.

ELSE.
PERFORM A1F_BDC_SET :
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-ZFBDT 'BSEG-ZFBDT'.
ENDIF.
IF TH_FILE_RAYOUT_D-BZDAT = '00000000'.

ELSE.
PERFORM A1F_BDC_SET :
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-BZDAT 'BSEG-BZDAT'.
ENDIF.

IF TH_FILE_RAYOUT_D-ANFAE = '00000000'.

ELSE.
PERFORM A1F_BDC_SET :
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-ANFAE 'BSEG-ANFAE'.
ENDIF.

IF TH_FILE_RAYOUT_D-ZLSCH = '0'.

ELSE.
PERFORM A1F_BDC_SET :
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-ZLSCH 'BSEG-ZLSCH'.
ENDIF.

IF TH_FILE_RAYOUT_D-MWSKZ = SPACE.
IF TH_FILE_RAYOUT_D-KOART = 'S'.
CLEAR TH_SKB1_DATA.
READ TABLE TD_SKB1_DATA INTO TH_SKB1_DATA
WITH KEY SAKNR = TH_FILE_RAYOUT-SAKNR.
IF TH_SKB1_DATA-MWSKZ = SPACE.
ELSE.
PERFORM A1F_BDC_SET2 :
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-MWSKZ 'BSEG-MWSKZ'.
ENDIF.
ENDIF.
ELSE.
PERFORM A1F_BDC_SET :
USING CNS_STYPE_P TH_FILE_RAYOUT_D-BUZEI
TH_FILE_RAYOUT_D-MWSKZ 'BSEG-MWSKZ'.

ENDIF.
ENDFORM.                    " A1F_BDC_SETTING_body
*&---------------------------------------------------------------------*
*&      Form  A1F_BDC_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_CNS_STYPE_K  text
*      -->P_TH_FILE_RAYOUT_D_TANI  text
*      -->P_TH_FILE_RAYOUT_D_BUKRS  text
*      -->P_1388   text
*----------------------------------------------------------------------*
FORM A1F_BDC_SET USING    P_K
P_TANI
P_VALUE
P_NAME.

TH_FTPOST-STYPE = P_K.
TH_FTPOST-COUNT = P_TANI.
TH_FTPOST-FNAM = P_NAME.
TH_FTPOST-FVAL = P_VALUE.
IF NOT P_VALUE IS INITIAL.
APPEND TH_FTPOST TO TD_FTPOST.
ENDIF.
ENDFORM.                    " A1F_BDC_SET
*&---------------------------------------------------------------------*
*&      Form  A1F_BDC_SET2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_CNS_STYPE_K  text
*      -->P_TH_FILE_RAYOUT_D_TANI  text
*      -->P_TH_FILE_RAYOUT_D_BUKRS  text
*      -->P_1388   text
*----------------------------------------------------------------------*
FORM A1F_BDC_SET2 USING    P_K
P_TANI
P_VALUE
P_NAME.

TH_FTPOST-STYPE = P_K.
TH_FTPOST-COUNT = P_TANI.
TH_FTPOST-FNAM = P_NAME.
TH_FTPOST-FVAL = P_VALUE.
APPEND TH_FTPOST TO TD_FTPOST.
ENDFORM.                    " A1F_BDC_SET
*&---------------------------------------------------------------------*
*&      Form  A1F_SET_BSCHL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_SET_BSCHL.

CASE TH_FILE_RAYOUT-KOART.                    "勘定タイプ
WHEN CNS_KOART_S.                           "S：一般の場合
IF TH_FILE_RAYOUT-UMSKZ IS INITIAL.       "特殊仕訳がブランク
IF TH_FILE_RAYOUT-SHKZG = CNS_SHKZG_S.  "借方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_40.
ELSE.                                   "貸方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_50.
ENDIF.
ELSE.                                     "特殊仕訳に設定あり
"あり得ないパターン
ENDIF.
WHEN CNS_KOART_T.
IF TH_FILE_RAYOUT-UMSKZ IS INITIAL.       "特殊仕訳がブランク
IF TH_FILE_RAYOUT-SHKZG = CNS_SHKZG_S.  "借方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_40.
ELSE.                                   "貸方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_50.
ENDIF.
ELSE.                                     "特殊仕訳に設定あり
"あり得ないパターン
ENDIF.
WHEN CNS_KOART_D.
IF TH_FILE_RAYOUT-UMSKZ IS INITIAL.       "特殊仕訳がブランク
IF TH_FILE_RAYOUT-SHKZG = CNS_SHKZG_S.  "借方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_01.
ELSE.                                   "貸方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_11.
ENDIF.
ELSE.                                     "特殊仕訳に設定あり
IF TH_FILE_RAYOUT-SHKZG = CNS_SHKZG_S.  "借方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_09.
ELSE.                                   "貸方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_19.
ENDIF.
ENDIF.
WHEN CNS_KOART_K.
IF TH_FILE_RAYOUT-UMSKZ IS INITIAL.       "特殊仕訳がブランク
IF TH_FILE_RAYOUT-SHKZG = CNS_SHKZG_S.  "借方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_21.
ELSE.                                   "貸方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_31.
ENDIF.
ELSE.                                     "特殊仕訳に設定あり
IF TH_FILE_RAYOUT-SHKZG = CNS_SHKZG_S.  "借方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_29.
ELSE.                                   "貸方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_39.
ENDIF.
ENDIF.
WHEN CNS_KOART_A.
IF TH_FILE_RAYOUT-UMSKZ IS INITIAL.       "特殊仕訳がブランク
IF TH_FILE_RAYOUT-SHKZG = CNS_SHKZG_S.  "借方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_70.
ELSE.                                   "貸方
TH_FILE_RAYOUT-BSCHL = CNS_BSCHL_75.
ENDIF.
ELSE.                                     "特殊仕訳に設定あり
"あり得ないパターン
ENDIF.

ENDCASE.

ENDFORM.                    " A1F_SET_BSCHL
*&---------------------------------------------------------------------*
*&      Form  a1f_download_file
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_DOWNLOAD_FILE.

DATA : LW_COUNT TYPE I,  "内部テーブル件数確認用変数
LW_FILENAME TYPE STRING.
*    <INS>        DMWXXX            BY MIS     2011.11.07     START
DATA : LW_FILE_ERROR TYPE ST_FILE_RAYOUT.
*    <INS>        DMWXXX            BY MIS     2011.11.07     E N D

LW_FILENAME = P_DFNAME.

DESCRIBE TABLE TD_FILE_ERROR LINES W_ERR_COUNT.

SORT TD_FILE_ERROR BY  TANI BUZEI.

*    <INS>        DMWXXX            BY MIS     2011.11.07     START
* エラー件数の取得
LOOP AT TD_FILE_ERROR INTO LW_FILE_ERROR.
AT NEW TANI.
W_ERR_COUNT_D =  W_ERR_COUNT_D + 1.
ENDAT.
ENDLOOP.
*    <INS>        DMWXXX            BY MIS     2011.11.07     E N D

* エラーファイルのダウンロード
CALL FUNCTION 'GUI_DOWNLOAD'
EXPORTING
FILENAME                = LW_FILENAME
FILETYPE                = 'ASC'
WRITE_FIELD_SEPARATOR   = 'X'
TABLES
DATA_TAB                = TD_FILE_ERROR
EXCEPTIONS
FILE_WRITE_ERROR        = 1
NO_BATCH                = 2
GUI_REFUSE_FILETRANSFER = 3
INVALID_TYPE            = 4
NO_AUTHORITY            = 5
UNKNOWN_ERROR           = 6
HEADER_NOT_ALLOWED      = 7
SEPARATOR_NOT_ALLOWED   = 8
FILESIZE_NOT_ALLOWED    = 9
HEADER_TOO_LONG         = 10
DP_ERROR_CREATE         = 11
DP_ERROR_SEND           = 12
DP_ERROR_WRITE          = 13
UNKNOWN_DP_ERROR        = 14
ACCESS_DENIED           = 15
DP_OUT_OF_MEMORY        = 16
DISK_FULL               = 17
DP_TIMEOUT              = 18
FILE_NOT_FOUND          = 19
DATAPROVIDER_EXCEPTION  = 20
CONTROL_FLUSH_ERROR     = 21
OTHERS                  = 22.

* メッセージの出力
IF SY-SUBRC <> 0.
"汎用モジュール GUI_UPLOAD に失敗しました
MESSAGE E002(YLMS0201) WITH TEXT-009.
ENDIF.

ENDFORM.                    " a1f_download_file
*&---------------------------------------------------------------------*
*&      Form  a1f_report_header
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_REPORT_HEADER.

W_SUC_COUNT = W_ALL_COUNT - W_ERR_COUNT.

WRITE : TEXT-010,
SY-MANDT,
TEXT-011,
SY-REPID,
50 TEXT-012,
120 TEXT-013,
SY-DATUM,
TEXT-014,
SY-UZEIT.

WRITE : /
TEXT-024,
SY-UNAME.

SKIP 1.

WRITE : TEXT-016,
W_ALL_COUNT,
/ TEXT-017,
W_ALL_COUNT,
/ TEXT-018,
W_SUC_COUNT,
/ TEXT-019,
W_ERR_COUNT.

*    <INS>        DMWXXX            BY MIS     2011.11.07     START
* 正常件数のカウント
W_SUC_COUNT_D = W_ALL_COUNT_D - W_ERR_COUNT_D.

SKIP 1.

WRITE : TEXT-027,
W_ALL_COUNT_D,
/ TEXT-018,
W_SUC_COUNT_D,
/ TEXT-019,
W_ERR_COUNT_D.
*    <INS>        DMWXXX            BY MIS     2011.11.07     E N D

SKIP 1.

WRITE : TEXT-020,
TEXT-021,
TEXT-022,
/ SY-ULINE(150).

ENDFORM.                    " a1f_report_header
*&---------------------------------------------------------------------*
*&      Form  A1F_REPORT_BODY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_REPORT_BODY.

* 2011.10.26 add -start by MIS
*  SORT TD_OUTPUT BY TANI.
SORT TD_OUTPUT BY TANI.
* 2011.10.26 add -End   by MIS
DELETE ADJACENT DUPLICATES FROM TD_OUTPUT.

LOOP AT TD_OUTPUT INTO TH_OUTPUT.
WRITE : / TH_OUTPUT-BUKRS,
6 TH_OUTPUT-GJAHR,
15 TH_OUTPUT-BELNR,
30 TH_OUTPUT-TEXT.
ENDLOOP.

ENDFORM.                    " A1F_REPORT_BODY
*&---------------------------------------------------------------------*
*&      Form  A1F_SORT_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_SORT_SET.

DATA : WL_TABIX LIKE SY-TABIX,
WL_NAME1 LIKE LFA1-NAME1,
WL_SHKZG LIKE BSEG-SHKZG.

LOOP AT TD_FILE_RAYOUT INTO TH_FILE_RAYOUT.
WL_TABIX = SY-TABIX.

*勘定タイプがSの場合は相手勘定の仕入先名称をソートキーへ
IF TH_FILE_RAYOUT-KOART = CNS_FLG_S.

CLEAR :WL_SHKZG.
* 貸借フラグが1:借方の場合
IF TH_FILE_RAYOUT-SHKZG = CNS_SHKZG_S.  "1
WL_SHKZG = CNS_SHKZG_K. "貸借逆のコードをセット
* 貸借フラグが2:貸方の場合
ELSEIF TH_FILE_RAYOUT-SHKZG = CNS_SHKZG_K. "2
WL_SHKZG = CNS_SHKZG_S. "貸借逆のコードをセット
ENDIF.

CLEAR TH_FILE_RAYOUT_N.
READ TABLE TD_FILE_RAYOUT
INTO TH_FILE_RAYOUT_N
WITH KEY TANI    = TH_FILE_RAYOUT-TANI
SHKZG  = WL_SHKZG.
*ソートキーの仕入先名称をセット（全角18桁しか入らないのでADRC検索不要）
* 仕入先コード検索
CLEAR WL_NAME1.
SELECT SINGLE NAME1 INTO WL_NAME1
FROM LFA1
WHERE LIFNR = TH_FILE_RAYOUT_N-SAKNR.

IF TH_FILE_RAYOUT-ZUONR = SPACE.
TH_FILE_RAYOUT-ZUONR = WL_NAME1.
ENDIF.

*勘定タイプがKの場合は相手勘定の原価センタをソートキーへ
ELSEIF TH_FILE_RAYOUT-KOART = CNS_FLG_K.
CLEAR :WL_SHKZG.
* 貸借フラグが1:借方の場合
IF TH_FILE_RAYOUT-SHKZG = CNS_SHKZG_S. " 1
WL_SHKZG = CNS_SHKZG_K. "貸借逆のコードをセット
* 貸借フラグが2:貸方の場合
ELSEIF TH_FILE_RAYOUT-SHKZG = CNS_SHKZG_K.  "2
WL_SHKZG = CNS_SHKZG_S. "貸借逆のコードをセット
ENDIF.

CLEAR TH_FILE_RAYOUT_N.
READ TABLE TD_FILE_RAYOUT
INTO TH_FILE_RAYOUT_N
WITH KEY TANI    = TH_FILE_RAYOUT-TANI
SHKZG  = WL_SHKZG.
*ソートキーの原価センタをセット
IF TH_FILE_RAYOUT-ZUONR = SPACE.
TH_FILE_RAYOUT-ZUONR = TH_FILE_RAYOUT_N-KOSTL.
ENDIF.
ENDIF.
MODIFY TD_FILE_RAYOUT FROM TH_FILE_RAYOUT INDEX WL_TABIX.
ENDLOOP.

ENDFORM.                    " A1F_SORT_SET
*&---------------------------------------------------------------------*
*&      Form  A1F_BDC_END
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_BDC_END.

* BDCセッション終了
CALL FUNCTION 'POSTING_INTERFACE_END'
EXCEPTIONS
SESSION_NOT_PROCESSABLE = 1
OTHERS                  = 2.

IF SY-SUBRC <> 0.
"汎用モジュールPOSTING_INTERFACE_END処理に失敗しました
MESSAGE E002(YLMS0201) WITH TEXT-008.
ENDIF.

ENDFORM.                    " A1F_BDC_END
