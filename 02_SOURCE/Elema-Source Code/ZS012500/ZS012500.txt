************************************************************************
* [プログラム名]
*   ZF012500        受注伝票一括更新
* [処理概要]
*
* [改定履歴]
*　YYYY/MM/DD   Programar     Description
*  2012/01/13   SOL趙    　  ①意先発注番号で受注番号を検索する際、
* 　　　　　　　　　　　　 　    複数存在チェックロジック変更
*                            ②得意先発注番号が表示されない不具合修正
*                            ③入力ファイルの1行目から登録可能に修正
*& 2012/08/21  ISID          ES-UP
*& 2014/08/29  ISID18        コードページを"UTF-8"に修正
*& 2015/01/12  ISID11       アップロード時のBOMロジック改修
*& 2015/02/04  ISID18       コードページ修正
************************************************************************
REPORT ZF012500 LINE-SIZE 255
NO STANDARD PAGE HEADING
MESSAGE-ID  Z1.
* TABLES
TABLES : VBAK,
VBKD.

* TYPES
TYPES  : BEGIN OF TY_UPFILE,
* Mod ES-UP 2012/10/23 -->
*           RECORD(1000)   TYPE C,              "アップロードファイル内容
RECORD    TYPE string,              "アップロードファイル内容
* Mod ES-UP 2012/10/23 <--
END OF   TY_UPFILE,

BEGIN OF TY_JUTYU,
VBELN       TYPE VBAK-VBELN,
BSTKD       TYPE VBKD-BSTKD,
VDATU(10)   TYPE C,
YUSOU(50)   TYPE C,
SYUKA(50)   TYPE C,
BSTDK_E(10) TYPE C,
ERFLG(1)    TYPE C,
END OF TY_JUTYU,

BEGIN OF TY_WRITE,
VBELN       TYPE VBAK-VBELN,
BSTKD       TYPE VBKD-BSTKD,
TEXT(50)    TYPE C,
END OF TY_WRITE.
* Add ES-UP 2012/08/21 -->
*-----------------------------------------------------------------------
*  固定値
*-----------------------------------------------------------------------
****START DEL 2014/08/29 ISID18****
*CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
****END DEL 2014/08/29 ISID18****
* Add ES-UP 2012/08/21 <--
* 内部テーブル
DATA   : H_UPFILE   TYPE TY_UPFILE,
T_UPFILE   TYPE TABLE OF TY_UPFILE,

H_JUTYU    TYPE TY_JUTYU,
T_JUTYU    TYPE TABLE OF TY_JUTYU,

H_UPDATE   TYPE TY_JUTYU,
T_UPDATE   TYPE TABLE OF TY_JUTYU,

H_WRITE    TYPE TY_WRITE,
T_WRITE    TYPE TABLE OF TY_WRITE,

H_BDC      LIKE BDCDATA,
T_BDC      LIKE TABLE OF BDCDATA,

H_MSG      LIKE BDCMSGCOLL,
T_MSG      LIKE TABLE OF h_MSG.
* Del ES-UP 2012/08/21 -->
** 作業領域
*DATA   : W_TAB      TYPE X VALUE '09'.     "タブ
* Del ES-UP 2012/08/21 <--
*------------------------------------------------------------------*
* SELECTION-SCREEN.
*------------------------------------------------------------------*

PARAMETERS : P_INFILE  TYPE FILENAME-FILEEXTERN OBLIGATORY,
P_TEST    AS CHECKBOX DEFAULT 'X'.

*------------------------------------------------------------------*
* AT SELECTION-SCREEN
*------------------------------------------------------------------*
AT SELECTION-SCREEN.
*------------------------------------------------------------------*
* START-OF-SELECTION.
*------------------------------------------------------------------*
START-OF-SELECTION.
PERFORM INT_SEC.
PERFORM DATA_CHK.
PERFORM WRITE_DATE.

*------------------------------------------------------------------*
* END-OF-SELECTION.
*------------------------------------------------------------------*
END-OF-SELECTION.
*------------------------------------------------------------------*
* TOP-OF-PAGE.
*------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  INT_SEC
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM INT_SEC.
DATA : l_dat1(10) type c ,
l_dat2(10) type c .
* サーバから入力（入力ファイル名は必須）
* Mod ES-UP 2012/08/21 -->
*  OPEN DATASET P_INFILE IN TEXT MODE.     " ファイルのオープン
****START DEL 2014/08/29 ISID18****
*  DATA L_CODEPAGE TYPE ABAP_ENCODING.
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
****END DEL 2014/08/29 ISID18****

**** START ADD 2015/02/03 ISID18 ****
DATA:
L_Z_OUTPUT_CP TYPE ZTEGZZM001-Z_OUTPUT_CP,
L_CODEPAGE    TYPE ABAP_ENCODING,
L_SAPCODEPAGE TYPE STRING,
L_FLGUTF8     TYPE FLAG.

CALL FUNCTION 'ZEG_ZZ_GLOBAL_PGM_CONFIG_GET'
EXPORTING
IMPPGM      = SY-REPID
IMPBUKRS    = TEXT-006
IMPORTING
EXPCODEPAGE = L_Z_OUTPUT_CP
EXPFLGUTF8  = L_FLGUTF8.
IF L_FLGUTF8 IS INITIAL.
L_SAPCODEPAGE = L_Z_OUTPUT_CP.
IF L_SAPCODEPAGE IS NOT INITIAL.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( L_SAPCODEPAGE ).
ENDIF.
TRY.
OPEN DATASET P_INFILE FOR INPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
CATCH CX_SY_CODEPAGE_CONVERTER_INIT.
SY-SUBRC = 8.
ENDTRY.
ELSE.
**** END ADD 2015/02/03 ISID18 ****
OPEN DATASET P_INFILE FOR INPUT
**** START UPD 2014/08/31 ISID19 ****
*    IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IN TEXT MODE ENCODING UTF-8
**** END UPD 2014/08/31 ISID19 ****
**** START ADD 2015/01/12 ISID11 ****
SKIPPING BYTE-ORDER MARK
**** END ADD 2015/01/12 ISID11 ****
IGNORING CONVERSION ERRORS.
****START ADD 2015/02/04 ISID18 ****
ENDIF.
****END ADD 2015/02/04 ISID18 ****

* Mod ES-UP 2012/08/21 <--
IF SY-SUBRC > 0.
MESSAGE S209.
STOP.
ENDIF.

DO.
* レコードのゲット
* Mod ES-UP 2012/10/23 -->
*    READ DATASET P_INFILE INTO H_UPFILE-RECORD .
READ DATASET P_INFILE INTO H_UPFILE-RECORD .
* Mod ES-UP 2012/10/23 <--
IF SY-SUBRC > 0.
EXIT.
ENDIF.

* 2012/01/13 DEL START
*    CHECK SY-INDEX > 1.
* 2012/01/13 DEL END
* Mod ES-UP 2012/08/21 -->
*    SPLIT H_UPFILE AT W_TAB
SPLIT H_UPFILE-record AT CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
* Mod ES-UP 2012/08/21 <--
INTO H_JUTYU-VBELN
H_JUTYU-BSTKD
*          H_JUTYU-VDATU
l_dat1
H_JUTYU-YUSOU
H_JUTYU-SYUKA
*          H_JUTYU-BSTDK_E.
l_dat2.
* H_JUTYU-VDATU = l_dat1 .
* H_JUTYU-BSTDK_E =  L_dat2  .

IF L_DAT1 CN '1234567890/ ' OR L_DAT1 = '/' OR L_DAT1 = SPACE.
H_JUTYU-VDATU = L_DAT1.
ELSE.
PERFORM DATE_CONV Using : L_DAT1 H_JUTYU-VDATU .
ENDIF.

IF L_DAT2 CN '1234567890/ ' OR L_DAT2 = '/' OR L_DAT2 = SPACE.
H_JUTYU-BSTDK_E = L_DAT2.
ELSE.
PERFORM DATE_CONV Using : L_DAT2 H_JUTYU-BSTDK_E.
ENDIF.

APPEND H_JUTYU TO T_JUTYU.
ENDDO.

CLOSE DATASET P_INFILE.

IF T_JUTYU IS INITIAL.
MESSAGE S400 WITH '対象データがありません'.
ENDIF.

ENDFORM.                    " INT_SEC
*&---------------------------------------------------------------------*
*&      Form  DATA_CHK
*&---------------------------------------------------------------------*
*       データチェック・編集
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DATA_CHK.
DATA: WL_FLG(1)      TYPE C,
WL_VBELN(10)   TYPE N,
WL_VDATU       TYPE VBAK-VDATU,
WL_YUSOU(50)   TYPE C,
WL_SYUKA(50)   TYPE C,
WL_BSTDK_E     TYPE VBKD-BSTDK_E,
WL_FRDAY(10)   TYPE C,
WL_TODAY(10)   TYPE C,
WL_ERFLG(1)    TYPE C.

LOOP AT T_JUTYU INTO H_JUTYU.
CLEAR: WL_FLG, H_WRITE.

* 受注番号の存在チェック
IF NOT H_JUTYU-VBELN IS INITIAL.
PERFORM SEL_VBAK.
ENDIF.

* 得意先発注番号のみ入力された場合、得意先発注番号を元に受注番号を検索
IF H_JUTYU-VBELN IS INITIAL AND NOT H_JUTYU-BSTKD IS INITIAL.
PERFORM SEL_M_VMVAA.
* 2012/01/13 MOD START
*      IF SY-DBCNT > 1.
*        APPEND H_WRITE TO T_WRITE.
*        CONTINUE.
*      ENDIF.
IF H_WRITE-BSTKD = H_JUTYU-BSTKD.
CONTINUE.
ENDIF.
* 2012/01/13 MOD END
ENDIF.

* 受注番号が取得出来なかった場合、メッセージ入力
IF SY-SUBRC <> 0 or H_JUTYU-VBELN is initial .
MOVE-CORRESPONDING H_JUTYU TO H_WRITE.
H_WRITE-TEXT = '対象受注番号が存在しません'.
APPEND H_WRITE TO T_WRITE.
CONTINUE.
ENDIF.

* 受注番号に前ゼロ付加
WL_VBELN = H_JUTYU-VBELN.
H_JUTYU-VBELN = WL_VBELN.

* 得意先回答納期が適切ではない場合、メッセージ入力
IF NOT H_JUTYU-BSTDK_E IS INITIAL AND H_JUTYU-BSTDK_E <> '/'.
IF H_JUTYU-BSTDK_E CN '1234567890/ '.
MOVE-CORRESPONDING H_JUTYU TO H_WRITE.
H_WRITE-TEXT = '日付が無効です'.
APPEND H_WRITE TO T_WRITE.
CONTINUE.
ELSEIF H_JUTYU-BSTDK_E <> '/'.
PERFORM CHECK_DATA USING H_JUTYU-BSTDK_E.
IF SY-SUBRC <> 0.
MOVE-CORRESPONDING H_JUTYU TO H_WRITE.
H_WRITE-TEXT = '日付が無効です'.
APPEND H_WRITE TO T_WRITE.
CONTINUE.
ENDIF.
ENDIF.
ENDIF.

* 希望納期が適切ではない場合、メッセージ入力
IF NOT H_JUTYU-VDATU IS INITIAL AND H_JUTYU-VDATU <> '/'.
IF H_JUTYU-VDATU CN '1234567890/ '.
MOVE-CORRESPONDING H_JUTYU TO H_WRITE.
H_WRITE-TEXT = '日付が無効です'.
APPEND H_WRITE TO T_WRITE.
CONTINUE.
ELSEIF H_JUTYU-VDATU <> '/'.
PERFORM CHECK_DATA USING H_JUTYU-VDATU.
IF SY-SUBRC <> 0.
MOVE-CORRESPONDING H_JUTYU TO H_WRITE.
H_WRITE-TEXT = '日付が無効です'.
APPEND H_WRITE TO T_WRITE.
CONTINUE.
ENDIF.
ENDIF.
ENDIF.

* 指定納期が入力されていた場合、変更前データ取得
IF NOT H_JUTYU-VDATU IS INITIAL.
PERFORM SEL_VDATU CHANGING WL_VDATU.
MOVE-CORRESPONDING H_JUTYU TO H_WRITE.
if H_JUTYU-VDATU ne '/' .
WRITE WL_VDATU TO WL_FRDAY USING EDIT MASK '____/__/__'..
WRITE H_JUTYU-VDATU TO WL_TODAY USING EDIT MASK '____/__/__'..
If WL_FRDAY NE WL_TODAY .
CONCATENATE WL_FRDAY ' →' ' ' WL_TODAY
'  (指定納期)'
INTO H_WRITE-TEXT.
Else .
CONCATENATE '変更なし'
' (指定納期)'
INTO H_WRITE-TEXT.
EndIf .
APPEND H_WRITE TO T_WRITE.
WL_FLG = 'X'.
CLEAR: H_WRITE.
endif .
ENDIF.

* 得意先回答納期が入力されていた場合、変更前データ取得
IF NOT H_JUTYU-BSTDK_E IS INITIAL.
PERFORM SEL_BSTDK_E CHANGING WL_BSTDK_E.
MOVE-CORRESPONDING H_JUTYU TO H_WRITE.
WRITE WL_BSTDK_E TO WL_FRDAY USING EDIT MASK '____/__/__'..
if H_JUTYU-BSTDK_E NE '/' .
WRITE H_JUTYU-BSTDK_E TO WL_TODAY USING EDIT MASK '____/__/__'..
If WL_FRDAY NE WL_TODAY .
CONCATENATE WL_FRDAY ' →' ' ' WL_TODAY
'  (得意先回答納期)'
INTO H_WRITE-TEXT.
Else .
CONCATENATE '変更なし'
' (得意先回答納期)'
INTO H_WRITE-TEXT.
EndIf .

else .
CONCATENATE WL_BSTDK_E ' →' ' ' 'クリア'
'  (得意先回答納期)'
INTO H_WRITE-TEXT.
endif .
APPEND H_WRITE TO T_WRITE.
WL_FLG = 'X'.
CLEAR: H_WRITE.
ENDIF.

* 輸送手段等が入力されていた場合、変更前データ取得
IF NOT H_JUTYU-YUSOU IS INITIAL.
PERFORM READ_TEXT USING 'Z910' H_JUTYU-YUSOU.
MOVE-CORRESPONDING H_JUTYU TO H_WRITE.
APPEND H_WRITE TO T_WRITE.
CLEAR: H_WRITE.
ENDIF.

* 出荷指示備考が入力されていた場合、変更前データ取得
IF NOT H_JUTYU-SYUKA IS INITIAL.
PERFORM READ_TEXT USING '9001' H_JUTYU-SYUKA.
MOVE-CORRESPONDING H_JUTYU TO H_WRITE.
APPEND H_WRITE TO T_WRITE.
CLEAR: H_WRITE.
ENDIF.

CHECK NOT WL_FLG IS INITIAL.
PERFORM BDC_GET.

ENDLOOP.

ENDFORM.                    " DATA_CHK

*---------------------------------------------------------------------*
*       FORM SEL_VBAK                                                 *
*---------------------------------------------------------------------*
*       受注伝票検索                                                  *
*---------------------------------------------------------------------*
FORM SEL_VBAK.
DATA: WL_VBELN(10) TYPE N.

WL_VBELN = H_JUTYU-VBELN.

SELECT SINGLE
*
INTO VBAK
FROM VBAK
WHERE VBELN = WL_VBELN.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM SEL_M_VMVAA                                              *
*---------------------------------------------------------------------*
*       得意先発注番号を元に受注番号検索                              *
*---------------------------------------------------------------------*
FORM SEL_M_VMVAA.
DATA: WL_BSTKD TYPE VBKD-BSTKD.

* 2012/01/13 ADD START
DATA:
WL_VBELN  TYPE VBAK-VBELN,
LIT_VBELN TYPE TABLE OF VBAK-VBELN,
WL_CNT    TYPE I.
* 2012/01/13 ADD END

WL_BSTKD = H_JUTYU-BSTKD.
TRANSLATE WL_BSTKD TO UPPER CASE.

* 2012/01/13 MOD START
*  SELECT VBELN
*    INTO H_JUTYU-VBELN
*    FROM M_VMVAA
*   WHERE BSTKD = WL_BSTKD.
*
** 受注番号が複数取得された場合、メッセージを出力
*    IF SY-DBCNT > 1.
*      APPEND H_WRITE TO T_WRITE.
*    ENDIF.
*      MOVE H_JUTYU-BSTKD TO H_WRITE-BSTKD.
*    CONCATENATE '受注番号が複数存在します' '：' H_JUTYU-VBELN
*    INTO H_WRITE-TEXT.
*
*  ENDSELECT.

SELECT VBELN
INTO TABLE LIT_VBELN
FROM M_VMVAA
WHERE BSTKD = WL_BSTKD.

IF SY-SUBRC = 0.
*   重複除去
SORT LIT_VBELN.
DELETE ADJACENT DUPLICATES FROM LIT_VBELN.

DESCRIBE TABLE LIT_VBELN LINES WL_CNT.

*   受注伝票番号が複数存在する場合、メッセージを出力
IF WL_CNT > 1.
LOOP AT LIT_VBELN INTO WL_VBELN.
CLEAR H_WRITE.
MOVE H_JUTYU-BSTKD TO H_WRITE-BSTKD.
CONCATENATE '受注番号が複数存在します' '：' WL_VBELN
INTO H_WRITE-TEXT.
APPEND H_WRITE TO T_WRITE.
ENDLOOP.
ELSE.
READ TABLE LIT_VBELN INTO WL_VBELN INDEX 1.
H_JUTYU-VBELN = WL_VBELN.
ENDIF.
ENDIF.
* 2012/01/13 MOD END

ENDFORM.

*---------------------------------------------------------------------*
*       FORM SEL_VDATU                                                *
*---------------------------------------------------------------------*
*       指定納期更新前取得                                            *
*---------------------------------------------------------------------*
*  -->  VDATU                                                         *
*---------------------------------------------------------------------*
FORM SEL_VDATU CHANGING VDATU.

SELECT SINGLE
VDATU
INTO VDATU
FROM VBAK
WHERE VBELN = H_JUTYU-VBELN.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM SEL_BSTDK_E                                              *
*---------------------------------------------------------------------*
*       得意先回答納期更新前取得                                      *
*---------------------------------------------------------------------*
*  -->  BSTDK_E                                                       *
*---------------------------------------------------------------------*
FORM SEL_BSTDK_E CHANGING BSTDK_E.
SELECT SINGLE
BSTDK_E
INTO BSTDK_E
FROM VBKD
WHERE VBELN = H_JUTYU-VBELN.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM READ_TEXT                                                *
*---------------------------------------------------------------------*
*       受注テキストチェック                                          *
*---------------------------------------------------------------------*
FORM READ_TEXT USING W_ID LINE.
DATA: WK_VBELNP      TYPE THEAD-TDNAME,
WH_TLINE       TYPE TLINE,
WT_TLINE       TYPE TABLE OF TLINE,
WT_TLINE2      TYPE TABLE OF TLINE,
L_TEXT(20)         tYPE c .

* テキストの内容が '/' だった場合、クリアする
IF LINE = '/'.
CLEAR: LINE.
ENDIF.

CASE W_ID .
WHEN 'Z910' .
l_text = ' (輸送手段等)' .

WHEN '9001'.
l_text = ' (出荷指示備考)' .


ENDCASE .
WH_TLINE-TDLINE = LINE.
APPEND WH_TLINE TO WT_TLINE2.

CLEAR:   WK_VBELNP, WH_TLINE.
REFRESH: WT_TLINE.

CONCATENATE H_JUTYU-VBELN
'000010'
INTO WK_VBELNP.



* 受注テキスト読み込み
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID              = W_ID
LANGUAGE        = 'J'
NAME            = WK_VBELNP
OBJECT          = 'VBBP'
TABLES
LINES           = WT_TLINE
EXCEPTIONS
NOT_FOUND       = 4
REFERENCE_CHECK = 5
OTHERS          = 8.

* 本実行の場合、受注テキスト更新
IF P_TEST IS INITIAL.
CALL FUNCTION 'CREATE_TEXT'
EXPORTING
FID       = W_ID
FLANGUAGE = 'J'
FNAME     = WK_VBELNP
FOBJECT   = 'VBBP'
TABLES
FLINES    = WT_TLINE2
EXCEPTIONS
NO_INIT   = 4
NO_SAVE   = 5.
ENDIF.

IF SY-SUBRC = 0 OR SY-SUBRC = 4.
IF LINE IS INITIAL.
LINE = 'クリア'.
ENDIF.
READ TABLE WT_TLINE INDEX 1 INTO WH_TLINE.
IF WH_TLINE-TDLINE IS INITIAL.
WH_TLINE-TDLINE = '登録無し'.
ENDIF.
if WH_TLINE-TDLINE ne LINE .
CONCATENATE WH_TLINE-TDLINE ' → ' LINE
'  ' L_TEXT
INTO H_WRITE-TEXT.
else .
CONCATENATE '変更なし'
L_TEXT
INTO H_WRITE-TEXT.
endif .
ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM BDC_GET                                                  *
*---------------------------------------------------------------------*
*       BDCテーブル作成                                               *
*---------------------------------------------------------------------*
FORM BDC_GET.
PERFORM DYNPRO USING: 'X' 'SAPMV45A'   '0102',
' ' 'BDC_CURSOR' 'VBAK-VBELN',
' ' 'BDC_OKCODE' '/00',
' ' 'VBAK-VBELN' H_JUTYU-VBELN.

PERFORM DYNPRO USING: 'X' 'SAPMV45A'   '4001',
' ' 'BDC_CURSOR' 'RV45A-KETDAT',
' ' 'BDC_OKCODE' '=KBES'.

* 希望納期が入力されていた場合、更新or削除
IF H_JUTYU-VDATU = '/'.
*    PERFORM DYNPRO USING: ' ' 'RV45A-KETDAT' ' '.
ELSEIF NOT H_JUTYU-VDATU IS INITIAL.
PERFORM DYNPRO USING: ' ' 'RV45A-KETDAT' H_JUTYU-VDATU.
ENDIF.

* 本実行の場合、保存する
IF P_TEST IS INITIAL.
PERFORM DYNPRO USING: 'X' 'SAPMV45A'   '4002',
' ' 'BDC_CURSOR' 'VBKD-BSTDK_E',
' ' 'BDC_OKCODE' '=SICH'.
* テスト実行の場合、保存せずに戻る
ELSE.
PERFORM DYNPRO USING: 'X' 'SAPMV45A'   '4002',
' ' 'BDC_OKCODE' '/EABBA'.
ENDIF.

* 得意先回答納期が入力されていた場合、更新or削除
IF H_JUTYU-BSTDK_E = '/'.
PERFORM DYNPRO USING: ' ' 'VBKD-BSTDK_E' SPACE.
ELSEIF NOT H_JUTYU-BSTDK_E IS INITIAL.
PERFORM DYNPRO USING: ' ' 'VBKD-BSTDK_E' H_JUTYU-BSTDK_E.
ENDIF.

* コールトランザクション
PERFORM CALL_TRAN.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM dynpro                                                   *
*---------------------------------------------------------------------*
*       BDC作成                                                       *
*---------------------------------------------------------------------*
*  -->  DYNBEGIN                                                      *
*  -->  NAME                                                          *
*  -->  VALUE                                                         *
*---------------------------------------------------------------------*
FORM DYNPRO USING DYNBEGIN NAME VALUE.

CLEAR:H_BDC.

IF DYNBEGIN = 'X'.
MOVE NAME  TO H_BDC-PROGRAM.
MOVE VALUE TO H_BDC-DYNPRO.
MOVE 'X'   TO H_BDC-DYNBEGIN.
ELSE.
MOVE NAME  TO H_BDC-FNAM.
MOVE VALUE TO H_BDC-FVAL.
ENDIF.

APPEND H_BDC TO T_BDC.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM CALL_TRAN                                                *
*---------------------------------------------------------------------*
*       コールトランザクション                                        *
*---------------------------------------------------------------------*
FORM CALL_TRAN.
DATA: WL_MODE(1) TYPE C VALUE 'N'.

CALL TRANSACTION 'VA02'              "請求書登録
USING  T_BDC
MODE   WL_MODE                     "非表示
UPDATE 'S'
MESSAGES INTO T_MSG .           "MSGテーブル

IF SY-SUBRC <> 0.
ENDIF.
refresh T_BDC .
ENDFORM.
*---------------------------------------------------------------------*
*       FORM WRITE_DATE                                               *
*---------------------------------------------------------------------*
*       一覧出力処理                                                  *
*---------------------------------------------------------------------*
FORM WRITE_DATE.
* 2012/01/13 ADD START
DATA WL_FLG   TYPE C.
* 2012/01/13 ADD END
DATA WL_VBELN TYPE VBAK-VBELN.
wl_vbeln = '9999999999' .

LOOP AT T_WRITE INTO H_WRITE.
AT FIRST.
WRITE: 30 '処理結果',
/01 '受注伝票番号',
15 '得意先発注番号',
45 'メッセージ'.
ULINE.
ENDAT.

* 2012/01/13 MOD START
*    IF WL_VBELN <> H_WRITE-VBELN.
*      WL_VBELN = H_WRITE-VBELN.
*      WRITE: /01 H_WRITE-VBELN,
*              15 H_WRITE-BSTKD,
*              45 H_WRITE-TEXT.
*    ELSE.
*      WRITE: /45 H_WRITE-TEXT.
*    ENDIF.
AT NEW BSTKD.
WL_FLG = 'X'.
ENDAT.

IF WL_FLG = 'X'.
CLEAR WL_FLG.
WRITE: /01 H_WRITE-VBELN,
15 H_WRITE-BSTKD,
45 H_WRITE-TEXT.
ELSE.
WRITE: /45 H_WRITE-TEXT.
ENDIF.
* 2012/01/13 MOD END
ENDLOOP.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM DATE_CONV                                                *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  DATE1                                                         *
*  -->  DATE2                                                         *
*---------------------------------------------------------------------*
Form DATE_CONV Using DATE1 DATE2 .
DATA : L_NEN(4) TYPE C ,
L_MON(2) TYPE C ,
L_DAY(2) TYPE C .

DATA : L_NENN(4) TYPE N ,
L_MONN(2) TYPE N ,
L_DAYN(2) TYPE N .

Split DATE1 At '/' Into  L_NEN L_MON L_DAY .
If SY-SUBRC NE 0 .
DATE2 = DATE1 .
ENDIF .
L_NENN = L_NEN .
L_MONN = L_MON .
L_DAYN = L_DAY .

Concatenate L_NENN L_MONN L_DAYN Into DATE2 .


EndForm .
*---------------------------------------------------------------------*
*       FORM CHECK_DATA                                               *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM CHECK_DATA USING DATA.
DATA WL_DATA TYPE D.

WL_DATA = DATA.

CALL FUNCTION 'DATE_CHECK_PLAUSIBILITY'
EXPORTING
DATE                      = WL_DATA
EXCEPTIONS
PLAUSIBILITY_CHECK_FAILED = 1
OTHERS                    = 2.
ENDFORM.
