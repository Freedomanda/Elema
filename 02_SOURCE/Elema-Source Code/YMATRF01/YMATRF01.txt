*----------------------------------------------------------------------*
*   INCLUDE YMATRF01                                                   *
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  USER_COMMAND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*
*
************************************************************************

FORM USER_COMMAND
TABLES NODE STRUCTURE SEUCOMM
USING VALUE(COMMAND) CHANGING VALUE(EXIT) VALUE(LIST_REFRESH).

* Declarations
*    DATA: STRING1(4), STRING2(2),STRING3(2), T_STRING(10).
*    DATA: NODE_TYP       LIKE DF41S-NODE_TYP,
*          OBJ_TYP        LIKE DF41S-PARENT_TYP,
*          NODE_OBJ       LIKE DF41S-PARENT_OBJ.
*    PERFORM YMA_RECOGN_NEW_TREE.
* Initialize EXIT
DATA L_SY-SUBRC LIKE SY-SUBRC.
EXIT = SPACE.
* Execute command
CASE COMMAND.

WHEN 'HELP'.

CALL FUNCTION 'POPUP_DISPLAY_TEXT'
EXPORTING
LANGUAGE       = SY-LANGU
POPUP_TITLE    = 'Tree of Parameters'(HLP)
*         START_COLUMN   = 10
*         START_ROW      = 3
TEXT_OBJECT    = 'YMA_CUST'
*         HELP_MODAL     = 'X'
*    IMPORTING
*         CANCELLED      =
EXCEPTIONS
TEXT_NOT_FOUND = 1
OTHERS         = 2.

WHEN 'RESE'.
*       PERFORM YMA_REARRANGE_TREE.
*
WHEN 'BACK' OR '%EX' OR 'EXIT'.
IF G_ALL_CHANGED = 1.
*
IF G_ALL_CHANGED = 1.
PERFORM YWA_POPUP_TO_CONFIRM_STEP USING 'Tree changed'(TRC)
'Save first?'(SVF) 'Confirm Save'(CSV) CHANGING G_ANSWR.
CASE G_ANSWR.
WHEN 'J'.
PERFORM YMA_SAVE_ALL.
PERFORM YMA_REFRESH_AFTER_SAVE.
PERFORM YMA_SAVE_CHANGES.
PERFORM  YMA_DELETE_AND_SAVE.
LEAVE PROGRAM.
WHEN 'N'.
LEAVE PROGRAM.
WHEN 'A'.
ENDCASE.
ENDIF.
ENDIF.
*
WHEN 'ABLE'.
*
*        select single * from yma_ot_gp
*           where param_name = 'AUTHORITY_CHECK'.
*        if ( sy-subrc = 0 and yma_ot_gp-in_value co '0 ' ) or
*           sy-subrc <> 0.
*           auth_val = 0.
*        else.
*
OPERATION = 'Changing Parameters'(A01).
PERFORM TR_AUTHORITY_CHECK USING 'MA' 'PARAMETERS' '02'
OPERATION
CHANGING AUTH_VAL.
*        endif.
CHECK AUTH_VAL IS INITIAL.

CLEAR: NONE.
***********
DATA: L_SUBRC LIKE SY-SUBRC , L_MSGV1 LIKE  SY-MSGV1.

IF G_EDIT = 0.



CALL FUNCTION 'ENQUEUE_EYMA_TREE'
EXCEPTIONS
FOREIGN_LOCK   = 1
SYSTEM_FAILURE = 2
OTHERS         = 3.
L_SUBRC = SY-SUBRC.
IF L_SUBRC NE 0.

*    LOCKING WAS PERFORMED SUCCESSFULLY
L_MSGV1 = SY-MSGV1.
MESSAGE I077 WITH L_MSGV1 .

*      perform yco_set_param_pf_status.
*       perform yco_submit_ycopa000 using  p_mode.

ELSE.





G_CHANGED = 1.
*        IF G_EDIT = 0.
CALL FUNCTION 'ENQUEUE_EYMA_TREE'.
G_EDIT = 1.
SET PF-STATUS 'TREE' .
PERFORM YMA_REARRANGE_TREE USING 2.
*ENDIF.
ENDIF.
***********************************************************************

ELSEIF G_EDIT = 1 .
DATA IO_ANSWER.
IF G_ALL_CHANGED = 1.
CALL FUNCTION 'POPUP_TO_CONFIRM_STEP'
EXPORTING
DEFAULTOPTION  = 'Y'
TEXTLINE1      = 'You changed mode'(077)
TEXTLINE2      = 'Do You Want to Save Changes?'(078)
TITEL          = 'Confirm Change Mode'(079)
START_COLUMN   = 25
START_ROW      = 6
CANCEL_DISPLAY = 'X'
IMPORTING
ANSWER         = IO_ANSWER
EXCEPTIONS
OTHERS         = 1.
IF IO_ANSWER = 'J'.
PERFORM YMA_SAVE_ALL.
PERFORM YMA_REFRESH_AFTER_SAVE.
PERFORM YMA_SAVE_CHANGES.
PERFORM  YMA_DELETE_AND_SAVE.

REFRESH TAB.
MOVE 'DELE' TO TAB-G_FCODE.
APPEND TAB.
MOVE 'CREA' TO TAB-G_FCODE.
APPEND TAB.
MOVE 'CHAN' TO TAB-G_FCODE.
APPEND TAB.
*         move 'ABLE' to tab-g_fcode.
*        append tab.
MOVE 'SAVE' TO TAB-G_FCODE.
APPEND TAB.
MOVE 'COPY' TO TAB-G_FCODE.
APPEND TAB.

G_EDIT = 0.
SET PF-STATUS 'TREE' EXCLUDING TAB.
CALL FUNCTION 'DEQUEUE_EYMA_TREE'.
PERFORM YMA_REARRANGE_TREE USING 3.

ELSEIF IO_ANSWER = 'N'.
REFRESH TAB.
MOVE 'DELE' TO TAB-G_FCODE.
APPEND TAB.
MOVE 'CREA' TO TAB-G_FCODE.
APPEND TAB.
MOVE 'CHAN' TO TAB-G_FCODE.
APPEND TAB.
*         move 'ABLE' to tab-g_fcode.
*        append tab.
MOVE 'SAVE' TO TAB-G_FCODE.
APPEND TAB.
MOVE 'COPY' TO TAB-G_FCODE.
APPEND TAB.

G_EDIT = 0.
SET PF-STATUS 'TREE' EXCLUDING TAB.
CALL FUNCTION 'DEQUEUE_EYMA_TREE'.
PERFORM YMA_REARRANGE_TREE USING 3.
ENDIF.

ELSE.
REFRESH TAB.
MOVE 'DELE' TO TAB-G_FCODE.
APPEND TAB.
MOVE 'CREA' TO TAB-G_FCODE.
APPEND TAB.
MOVE 'CHAN' TO TAB-G_FCODE.
APPEND TAB.
*         move 'ABLE' to tab-g_fcode.
*        append tab.
MOVE 'SAVE' TO TAB-G_FCODE.
APPEND TAB.
MOVE 'COPY' TO TAB-G_FCODE.
APPEND TAB.

G_EDIT = 0.
SET PF-STATUS 'TREE' EXCLUDING TAB.
CALL FUNCTION 'DEQUEUE_EYMA_TREE'.
PERFORM YMA_REARRANGE_TREE USING 3.

ENDIF.



ENDIF.
**************
* F3 (back)
WHEN 'TRRT'.
CALL FUNCTION 'DEQUEUE_EYMA_TREE'.
LEAVE PROGRAM.
* F15 (end)
WHEN 'TREX'.
LEAVE PROGRAM.
WHEN 'TRPI' OR 'CHAN'.           "Double click or expand '+'
*********************'Settings' expending dbl-clck on icon @22@
PERFORM YMA_RECOGN_NEW_TREE.
* IF NODE-TYPE = '*'.
**   PERFORM GE_MORE.
* ELSEIF NODE-TYPE(1) CA 'BC'.
IF NODE-SELFIELD   = 'SYM_DOCUMENT'.
G_NODE = NODE.
PERFORM YMA_GEN_DOCU_TEXT.
ELSE.
IF COMMAND NE 'CHAN' AND   NODE-SELFIELD NE 'TEXT4'.
IF  NODE-TEXT4 NE 'Exclude'(023)
OR     NODE-TEXT4 NE 'Include'(022).
*             "avoid expending of node by pushing buton" change"
*             "and click on Include/Exclude
IF NODE-COMPRESS NE SPACE.
CALL FUNCTION 'RS_TREE_EXPAND'
EXPORTING
NODE_ID     = NODE-ID
LIST_SCROLL = 'X'
EXCEPTIONS
OTHERS.
ELSE.
*identifier of node to be compresse
* the complete subtree is deleted
CALL FUNCTION 'RS_TREE_COMPRESS'
EXPORTING
NODE_ID = NODE-ID
EXCEPTIONS
OTHERS.
ENDIF.
ENDIF.
ENDIF.
*********************toggle doublk expend - **************
IF NODE-TYPE = TEXT-X49.
CASE G_TOGLE_SET.
WHEN SPACE.
G_TOGLE_SET = 'X'.
*"*"Locl Var:
*"       IMPORTING
*"             VALUE(NODE_ID) LIKE  SNODE-ID
*"             VALUE(ALL) DEFAULT SPACE
*"             VALUE(LIST_SCROLL) OPTIONAL
*"             VALUE(DEPTH) TYPE  I DEFAULT 1
*"       EXCEPTIONS
*"              NOT_FOUND
CALL FUNCTION 'RS_TREE_EXPAND'
EXPORTING
NODE_ID     = NODE-ID
ALL         = ' '
LIST_SCROLL = 'X'
DEPTH       = 1
EXCEPTIONS
NOT_FOUND   = 1
OTHERS      = 2.
WHEN 'X'.
G_TOGLE_SET = SPACE.
*"*"Global Var:
*"       IMPORTING
*"             VALUE(NODE_ID) LIKE  SNODE-ID
*"       EXCEPTIONS
*"              NOT_FOUND
*Identifier of node to be compresse
CALL FUNCTION 'RS_TREE_COMPRESS'
EXPORTING
NODE_ID   = NODE-ID
EXCEPTIONS
NOT_FOUND = 1
OTHERS    = 2.
ENDCASE.
ENDIF.
*********************General Params*************************************
CASE NODE-TEXT.
*"Time Interval Parameters
WHEN TEXT-211.             "Time Interval Parameters
PERFORM YMA_TIME_INTERVAL_PARAMETERS.
*"SNMP Parameters
WHEN TEXT-213.             "SNMP Parameters
PERFORM YMA_SNMP_PARAMETERS.
*"Pager Parameters
WHEN TEXT-214.             "Pager Parameters
PERFORM YMA_PAGER_PARAMETERS.
* R/3 Mail Users
WHEN TEXT-215.             " R/3 Mail Users
PERFORM YMA_R3_MAIL_USERS.
*" Problematic SQL General parameters
WHEN TEXT-217.             " Problematic SQL General paramet
PERFORM YMA_PROBLEMATIC_SQL_GENERAL.
WHEN TEXT-218.             " Authorizations Check
PERFORM YMA_AUTHORIZATIONS_CHECK.
ENDCASE.
*********                                     **************************
*        CASE NODE-NAME.
*          WHEN 'Settings'.
*            CALL SCREEN 0004 STARTING AT 20  5
*                             ENDING   AT 60 14.
*        ENDCASE.
*
********************Resource Limits Parameters*************************
*
IF NODE-TEXT5 = 'RLP'.       "Resource Limits Parameters"
G_NODE = NODE.
*          READ TABLE TB_NODES WITH KEY TEXT6(65) = NODE-TEXT6(65).
READ TABLE TB_NODES WITH KEY ID = NODE-ID.
DATA INDEX TYPE I.
INDEX = TB_NODES-ID.
G_ALL_SERV_IND  = NODE-ID.
*          ADD 1 TO INDEX.
CASE G_NODE-TEXT3.
WHEN TEXT-007.
INDEX = INDEX.
WHEN TEXT-009.
INDEX = INDEX - 1.
WHEN TEXT-010.
INDEX = INDEX - 2.
WHEN TEXT-011.
INDEX = INDEX - 3.
ENDCASE.
PERFORM YMA_RECOGN_NEW_TREE.
READ TABLE TB_NODES WITH KEY ID = INDEX.
Y_THRESHOLD = TB_NODES-TEXT2.
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
R_THRESHOLD = TB_NODES-TEXT2.
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
PRIORITY = TB_NODES-TEXT2.
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
G_ML_CANC = TB_NODES-TEXT2.
*
CALL SCREEN 0002 STARTING AT 1 14  ENDING AT 35 18.
DO 100 TIMES.
IF SET_ERROR1 = 1.
CALL SCREEN 0002 STARTING AT 1 14  ENDING AT 35 18.
ELSE .
EXIT.
ENDIF.
ENDDO.
PERFORM YMA_RECOGN_NEW_TREE.
EXIT.
ENDIF.
***********change jobs under "system"**********************************
IF NODE-TEXT6(2) = 'JB'.
PERFORM YMA_RECOGN_NEW_TREE.
G_NODE = NODE.
CASE NODE-TEXT6+3(1).
*
WHEN 'V'.
READ TABLE TB_NODES INDEX NODE-ID.
G_JOP_VAL = NODE-TEXT2.
TB_NODES-ID = TB_NODES-ID + 1.
READ TABLE TB_NODES INDEX TB_NODES-ID.
G_JOP_PRT = TB_NODES-TEXT2.
WHEN 'P'.
READ TABLE TB_NODES INDEX NODE-ID.
G_JOP_PRT = TB_NODES-TEXT2.
TB_NODES-ID = TB_NODES-ID - 1.
READ TABLE TB_NODES INDEX TB_NODES-ID.
G_JOP_VAL = TB_NODES-TEXT2.
ENDCASE.

CALL SCREEN 0001 STARTING AT 1 14  ENDING AT 35 20.
FIELDS_CHANGED = 0.
ENDIF.
*##############Events for jobs******************************************
*
*###############end jobs
*#############Events for Operation Mode

IF NODE-TEXT6+47(3) = 'MIN' OR NODE-TEXT6+47(3) = 'MAX' AND
NODE-TEXT7(7) = 'EXECUTE'.

PERFORM YMA_RECOGN_NEW_TREE.
G_NODE = NODE.
READ TABLE TB_NODES INDEX NODE-ID.
G_MIN =  G_NODE-TEXT7(6).
YMA_SCREEN-YMA_EX_MAL =  G_NODE-TEXT2.
CALL SCREEN 0303 STARTING AT 7 12 ENDING AT 35 17.
ELSEIF NODE-TEXT6+47(3) = 'MIN' OR NODE-TEXT6+47(3) = 'MAX'
AND NODE-TEXT7 NE 'EXECUTE'.

PERFORM YMA_RECOGN_NEW_TREE.
G_NODE = NODE.
READ TABLE TB_NODES INDEX NODE-ID.

G_MIN =  G_NODE-TEXT7(6).
G_MAX =  G_NODE-TEXT7+7(6).
PERFORM YMA_CHANGE_OPMOD.
ENDIF.
*##############End operation Mode
*#############Servers:
IF NODE-TEXT6+65(3)  = 'RED' OR NODE-TEXT6+65(3)  = 'YEL' OR
NODE-TEXT6+65(3)  = 'PRT' OR NODE-TEXT6+65(3) = 'Mai' OR
NODE-TEXT6+65(3) = 'Can'.
PERFORM YMA_RECOGN_NEW_TREE.
G_NODE = NODE.
READ TABLE TB_NODES WITH KEY TEXT6(65) = NODE-TEXT6(65).
********************* next step ******************************
INDEX = TB_NODES-ID.
G_ALL_SERV_IND  = NODE-ID.
ADD 1 TO INDEX.
READ TABLE TB_NODES INDEX INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.

Y_THRESHOLD = TB_NODES-TEXT6+68(7).
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
R_THRESHOLD = TB_NODES-TEXT6+68(7).
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
*         PRIORITY = TB_NODES-TEXT6+68(7).
PRIORITY = TB_NODES-TEXT2.
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
G_ML_CANC = TB_NODES-TEXT2.
*****new
INDEX = G_NODE-ID.
CASE G_NODE-TEXT3.
WHEN TEXT-007.
INDEX = INDEX.
WHEN TEXT-009.
INDEX = INDEX - 1.
WHEN TEXT-010.
INDEX = INDEX - 2.
WHEN TEXT-011.
INDEX = INDEX - 3.
ENDCASE.
PERFORM YMA_RECOGN_NEW_TREE.
READ TABLE TB_NODES WITH KEY ID = INDEX.
Y_THRESHOLD = TB_NODES-TEXT2.
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
R_THRESHOLD = TB_NODES-TEXT2.
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
PRIORITY = TB_NODES-TEXT2.
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
G_ML_CANC = TB_NODES-TEXT2.
*****endnew
***********     88888888888888888888888888888888888888888888888888888
CALL SCREEN 200 STARTING AT 1 10  ENDING AT 35 17.
DO 100 TIMES.
IF SET_ERROR = 1.
CALL SCREEN 200 STARTING AT 1 10  ENDING AT 35 17.
ELSE .
EXIT.
ENDIF.
ENDDO.
PERFORM YMA_RECOGN_NEW_TREE.
ENDIF.
********************** Lock  Manager ***********************************
*1   ******************** % Lock Table Utilization
* TB_NODES-TEXT6 = 'PLTU'.
PERFORM YMA_RECOGN_NEW_TREE.
IF NODE-TEXT6(4) EQ 'PLTU'.
G_NODE = NODE.
*          READ TABLE TB_NODES WITH KEY TEXT6(65) = NODE-TEXT6(65).
READ TABLE TB_NODES WITH KEY ID = NODE-ID.

INDEX = TB_NODES-ID.
G_ALL_SERV_IND  = NODE-ID.
*          ADD 1 TO INDEX.
CASE G_NODE-TEXT3.
WHEN TEXT-007.
INDEX = INDEX.
WHEN TEXT-009.
INDEX = INDEX - 1.
WHEN TEXT-010.
INDEX = INDEX - 2.
WHEN TEXT-011.
INDEX = INDEX - 3.
ENDCASE.
READ TABLE TB_NODES WITH KEY ID = INDEX.
Y_THRESHOLD = TB_NODES-TEXT2.
ADD 1 TO INDEX.
*
READ TABLE TB_NODES WITH KEY ID = INDEX.
R_THRESHOLD = TB_NODES-TEXT2.
ADD 1 TO INDEX.

READ TABLE TB_NODES WITH KEY ID = INDEX.
PRIORITY = TB_NODES-TEXT2.
ADD 1 TO INDEX.
*
READ TABLE TB_NODES WITH KEY ID = INDEX.
G_ML_CANC = TB_NODES-TEXT2.
*
IF NODE-TEXT6+5(10) = 'LOCKS'.
LOCK_TEXT = '%Lock Table Utilization'(069).
ELSEIF NODE-TEXT6+5(10) = 'LOCKS_TIME'.
LOCK_TEXT = 'Maximum lock time  [sec]'(083).
ENDIF.
CALL SCREEN 2001 STARTING AT 1 10  ENDING AT 35 17.
DO 100 TIMES.
IF SET_ERROR1 = 1.
CALL SCREEN 2001 STARTING AT 1 10  ENDING AT 35 17.
ELSE .
EXIT.
ENDIF.
ENDDO.

APPEND TB_MODIFY_LOCK_TR.
PERFORM YMA_RECOGN_NEW_TREE.
ENDIF.
*
************************ Job Manager  *********************************
IF NODE-TEXT6(3) = 'JOB' AND NODE-TLENGTH NE 20.
G_NODE = NODE.
*          READ TABLE TB_NODES WITH KEY TEXT6(65) = NODE-TEXT6(65).
READ TABLE TB_NODES WITH KEY ID = NODE-ID.
INDEX = TB_NODES-ID.
G_ALL_SERV_IND  = NODE-ID.
*          ADD 1 TO INDEX.
CASE G_NODE-TEXT3.
WHEN TEXT-007.
INDEX = INDEX.
WHEN TEXT-031.
INDEX = INDEX - 1.
ENDCASE.
READ TABLE TB_NODES WITH KEY ID = INDEX.
Y_THRESHOLD = TB_NODES-TEXT2.
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
PRTY = TB_NODES-TEXT2.
*
CALL SCREEN 2002 STARTING AT 1 15  ENDING AT 30 19.
*
ENDIF.
******               Problematic SQL
IF NODE-TEXT6(3) =  'SQL'.
G_NODE = NODE.
*          READ TABLE TB_NODES WITH KEY TEXT6(65) = NODE-TEXT6(65).
READ TABLE TB_NODES WITH KEY ID = NODE-ID.
INDEX = TB_NODES-ID.
G_ALL_SERV_IND  = NODE-ID.
*          ADD 1 TO INDEX.
CASE G_NODE-TEXT3.
WHEN TEXT-007.
INDEX = INDEX.
WHEN TEXT-009.
INDEX = INDEX - 1.
WHEN TEXT-010.
INDEX = INDEX - 2.
WHEN TEXT-011.
INDEX = INDEX - 3.
ENDCASE.
*
READ TABLE TB_NODES WITH KEY ID = INDEX.
Y_THRESHOLD = TB_NODES-TEXT2.
ADD 1 TO INDEX.
*
READ TABLE TB_NODES WITH KEY ID = INDEX.
R_THRESHOLD = TB_NODES-TEXT2.
ADD 1 TO INDEX.
*
READ TABLE TB_NODES WITH KEY ID = INDEX.
PRIORITY = TB_NODES-TEXT2.
ADD 1 TO INDEX.
*
READ TABLE TB_NODES WITH KEY ID = INDEX.
G_ML_CANC = TB_NODES-TEXT2.
CALL SCREEN 202 STARTING AT 1 10  ENDING AT 35 17.
ENDIF.
ENDIF.
*"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
************************************************************************
WHEN 'MINUS'.
WHEN 'SAVE'.
******************modify.
G_ALL_CHANGED = 0.
PERFORM YMA_SAVE_ALL.
PERFORM YMA_REFRESH_AFTER_SAVE.
****************changes include-exclude.
PERFORM YMA_SAVE_CHANGES.
******************Delete *******************************
PERFORM  YMA_DELETE_AND_SAVE.
******************************End 'Save'*******************************
*      WHEN 'TREP'.
*      WHEN 'TRDT'.
*      when 'CDEP'.
*      WHEN 'CXRF'.
*      WHEN 'RESE'.

WHEN 'DELE'.
OPERATION = 'Deleting Parameters'(A02).
*
*  select single * from yma_ot_gp
*         where param_name = 'AUTHORITY_CHECK'.
*  if ( sy-subrc = 0 and yma_ot_gp-in_value co '0 ' ) or
*     sy-subrc <> 0.
*     auth_val = 0.
*  else.
*
PERFORM TR_AUTHORITY_CHECK USING 'MA' 'PARAMETERS' '01'
OPERATION
CHANGING AUTH_VAL.
* endif.
CHECK AUTH_VAL IS INITIAL.

G_NODE = NODE.
IS_DELITE = SPACE.
PERFORM YMA_CONFIRM_DEL CHANGING IS_DELITE.
IF IS_DELITE = 'Y'.
G_ALL_CHANGED = 1.

*******************Del under Problematic SQL *************************
IF NODE-TEXT6(5) = 'm_sql' OR NODE-TEXT6+6(4) = 'USER'.
G_NODE = NODE.
PERFORM YMA_DEL_YMA_TR_SQL .
ENDIF.
******************** Del under Job Manager  ****************************
IF NODE-TEXT7   = 'JobM' AND NODE-TLENGTH = 20.
G_NODE = NODE.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = NODE-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
PERFORM YMA_RECOGN_NEW_TREE.
*         MODIFY YMA_TREE_J FROM  TABLE  TB_MODIFY_YMA_TREE_J.
PERFORM YMA_PREP_DEL_YMA_TREE_J.
ENDIF.
*
******************Del Jobs under Batch Manager*************************
IF NODE-TEXT6(6) = 'JIbPUI'.

CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = NODE-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
PERFORM YMA_RECOGN_NEW_TREE.
*YMA_TR_JOP.
YMA_TR_JOP_DELETE-YMA_USERNM = NODE-TEXT. "NODE-TEXT6+7(12).
APPEND YMA_TR_JOP_DELETE.

********************************************************************
IF NODE-TEXT1 = 'Group'(046).

SELECT  * FROM  USR02      CLIENT SPECIFIED
WHERE  MANDT       = SY-MANDT
AND    CLASS       = NODE-TEXT           .


LOOP AT TB_NODES WHERE TEXT = USR02-BNAME
AND  TEXT4 = TEXT-023 AND TEXT6(6) = 'JIbPUI'.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = TB_NODES-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
YMA_TR_JOP_DELETE-YMA_USERNM = TB_NODES-TEXT.
APPEND YMA_TR_JOP_DELETE.
ENDLOOP.
ENDSELECT.
ENDIF.
ENDIF.
********************* Delete Transactions ******************************
IF NODE-TEXT7(2) = 'CT' AND NODE-TEXT9(3) = 'App' .
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = NODE-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
PERFORM YMA_RECOGN_NEW_TREE.
TB_DEL_YMA_TREE_U-YOP_MSNAME = NODE-TEXT6(20).
*          TB_DEL_YMA_TREE_U-YMA_TCODE  = NODE-TEXT6+22(4). "MMM
TB_DEL_YMA_TREE_U-YMA_TCODE  = NODE-TEXT.

APPEND TB_DEL_YMA_TREE_U.
ENDIF.
******************Delete user under Resorse limit **********************
*       IF NODE-TEXT9 = 'App' AND NODE-TCOLOR = 2 AND NODE-TLENGTH = 04.
IF NODE-TEXT9 = 'App' AND NODE-TCOLOR = 7 AND NODE-TLENGTH = 12.
G_NODE = NODE.             "XXlst
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = NODE-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
PERFORM YMA_PREP_DEL_USER_RLP.
*     TB_DEL_USER_RLP_LOOP.
ENDIF.
********************** Prepare  Jobs under Batch Managment to delete.***
IF
NODE-TEXT6(4)      = 'Jobs'
AND NODE-TEXT NE 'System'(020)
AND NODE-TEXT1 = 'User'(045) OR NODE-TEXT1 = 'Group'(046).
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = NODE-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
*DATA: YMA_DEL_JBS LIKE YMA_TR_JOP OCCURS 1 WITH HEADER LINE.
YMA_DEL_JBS-YMA_PARAME = NODE-TEXT6+29(30).
YMA_DEL_JBS-YMA_USERNM = NODE-TEXT.
APPEND YMA_DEL_JBS.
PERFORM YMA_RECOGN_NEW_TREE.

ENDIF.
**************delete LockSystem Managment  ***************************.
IF NODE-TEXT6(10) = 'LockSystem'.
G_NODE = NODE.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = NODE-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
PERFORM YMA_PREP_DEL_LOCK.
PERFORM YMA_RECOGN_NEW_TREE.
ENDIF.
ENDIF.
************************************************************************
WHEN 'COPY'.
****************** Resourse Limits Copy *******************************

OPERATION = 'Copying Parameters'(A03).
PERFORM TR_AUTHORITY_CHECK USING 'MA' 'PARAMETERS' '01'
OPERATION
CHANGING AUTH_VAL.
CHECK AUTH_VAL IS INITIAL.

CASE NODE-TEXT7.
WHEN 'CT'.
REFRESH TB_AUX_NODES.
G_NODE = NODE.
YMA_TREE_U-YMA_TCODE = SPACE.
CALL SCREEN 0350 STARTING AT 5 10  ENDING AT 35 15.

*          WHEN 'CA'.
*            REFRESH TB_AUX_NODES.
*            G_NODE = NODE.
**            LOOP AT TB_NODES WHERE TEXT6(26) = NODE-TEXT6(26)."?
**    LOOP AT TB_NODES WHERE TEXT9 = 'App' AND TEXT6(20) = APSERVER.
**              MOVE-CORRESPONDING TB_NODES TO TB_AUX_APP.
**              APPEND TB_AUX_APP.
**            ENDLOOP.
*            CALL SCREEN 0351 STARTING AT 5 10  ENDING AT 35 15.
ENDCASE.

*
*     ***     *******         *********           **         **********
*   **        **   **         **              **  **         *   **   *
*  **         *******         *****          *******             **
*   **        **     **       **            **    **             **
*     ***     **      **      *********    **     **             **
WHEN 'CREA'.
****************create dinamically new nodes****************************

OPERATION = 'Creating Parameters'(A04).
PERFORM TR_AUTHORITY_CHECK USING 'MA' 'PARAMETERS' '01'
OPERATION
CHANGING AUTH_VAL.
CHECK AUTH_VAL IS INITIAL.

G_NODE = NODE.
****************   Job manager
IF NODE-TEXT = 'Job manager'(065)  .
CALL SCREEN 3300 STARTING AT 5 10  ENDING AT 35 20.
ENDIF.
***************    "Jobs" under "Batch Manager     ************
IF NODE-TEXT6(4) = 'Jobs' AND NODE-TEXT = 'System'(020).
"misha jobs
CALL SCREEN 0102 STARTING AT 5 10  ENDING AT 35 16.
ENDIF.
********************'Problematic SQL**********************************

CASE NODE-TEXT6(5).
*         WHEN 'Problematic SQL'.
WHEN 'm_sql'.
G_NODE = NODE.
CALL SCREEN 1100 STARTING AT 1 10  ENDING AT 40 22.
ENDCASE.
DO 10 TIMES.
IF  G_SQL_ERROR = 1.
CALL SCREEN 1100 STARTING AT 1 10  ENDING AT 40 22.
ENDIF.
ENDDO.
********************  Resource Limits  *********************************
IF NODE-TLENGTH NE 12.
CASE NODE-TEXT9.
G_BUTTON_LOCD = 0.
PERFORM YMA_RECOGN_NEW_TREE.

WHEN 'App'.

YMA_TREE_U-YMA_TCODE = SPACE.
"misha 28.2000
IF NODE-TEXT = TEXT-012 OR NODE-TEXT2 = 'Transaction'(060)
OR  NODE-TEXT2(3) = 'Job'(005).

G_APP_NAME = NODE-TEXT6.
G_PASS_NODE = NODE.

IF  NODE-TEXT2  = 'Transaction'(060) OR
NODE-TEXT2(3)  = 'Job'(005) .
G_BUTTON_LOCD = 1.
CASE NODE-TEXT2.
WHEN 'Transaction'.
TR_RATIO = 'Job'(005).
YMA_SCREEN-Y_TRANS = NODE-TEXT.
WHEN 'Job' OR 'Jobs'.
TR_RATIO = 'Trans.'(076).
YMA_TREE_U-YMA_TCODE = NODE-TEXT.

ENDCASE.
G_ON_TRANSACTION = 1.

*               YMA_SCREEN-Y_TRANS = NODE-TEXT.
READ TABLE TB_NODES WITH KEY TEXT9 = 'App'   TEXT6(20) = NODE-TEXT6(20)
TEXT = 'Transaction'(060).
SY-SUBRC = SY-SUBRC.
MOVE-CORRESPONDING TB_NODES TO NODE.
G_PASS_NODE = NODE.
G_APP_NAME = NODE-TEXT6.
ENDIF.
FL_EXIST = 0.

CALL SCREEN 100 STARTING AT 1 10  ENDING AT 35 15.
DO 10 TIMES.
IF G_FIELDS_EMPTY = 1.
*              G_FIELDS_EMPTY = 0.
USER_RATIO = 'User'.
CALL SCREEN 100 STARTING AT 1 10  ENDING AT 35 15.
ENDIF.
ENDDO.

PERFORM YMA_RECOGN_NEW_TREE.
FL_EXIST = 0.
LOOP AT TB_NODES.
CASE USER_RATIO.
WHEN 'Group'.
CASE TR_RATIO.
WHEN 'Job'(005).
IF  TB_NODES-TEXT6(22)   =  NODE-TEXT6(22)
AND  TB_NODES-TEXT6+22(4) =  'Tran'
AND  TB_NODES-TEXT5 =  YMA_SCREEN-Y_TRANS.

*                                          "AND TB_NODES-TYPE NE 'TSPN'.
FL_EXIST = 1.
EXIT.
ENDIF.
WHEN 'Trans.'(076).
IF  TB_NODES-TEXT6(22)   =  G_NODE-TEXT6(22)
AND  TB_NODES-TEXT6+22(4) =  'Jobs'
AND TB_NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
*                                          "AND TB_NODES-TYPE NE 'TSPN'.
FL_EXIST = 1.
EXIT.
ENDIF.


ENDCASE.
************
WHEN 'User'.
CASE TR_RATIO.
WHEN 'Job'(005).

IF  TB_NODES-TEXT6(22)   =  NODE-TEXT6(22)
AND  TB_NODES-TEXT5 =  YMA_SCREEN-Y_TRANS
AND  TB_NODES-TEXT6+22(4) =  'Tran'.
FL_EXIST = 1.
EXIT.
ENDIF.
WHEN 'Trans.'(076).
IF  TB_NODES-TEXT6(22)   =  G_NODE-TEXT6(22)
AND  TB_NODES-TEXT6+22(4) =  'Jobs'
AND TB_NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
*                                          "AND TB_NODES-TYPE NE 'TSPN'.
FL_EXIST = 1.
EXIT.
ENDIF.

ENDCASE.
ENDCASE.

ENDLOOP.
IF FL_EXIST = 1.
MOVE-CORRESPONDING TB_NODES TO G_PASS_NODE.
ELSE.
G_PASS_NODE = NODE.
ENDIF.
IF G_CHANGE_SCREEN = 1.
******if choosen transactiom not exist********************************

DATA: IN_EX(20), MODIF TYPE I.
MODIFY_YMA_TREE_U-Y_ALRT_E_I = 'I'.
MODIF = 0.
PERFORM YMA_BELONG_USER_GROUP USING  IN_EX   MODIF.

IF  G_ANS = '1' AND G_ANSWER = '1'.
LOOP AT MODIFY_YMA_TREE_U
WHERE   YOP_MSNAME = NODE-TEXT6(20)
AND     YMA_TCODE  = YMA_SCREEN-Y_TRANS
AND     YMA_USERNM = US_NAME.
MODIFY_YMA_TREE_U-Y_ALRT_E_I = 'E'.
MODIFY MODIFY_YMA_TREE_U.
ENDLOOP.
ENDIF.

IF  G_ANS = '1' OR G_ANSWER = '1' OR MODIF = 0.
G_ANSWER = 0. G_ANS = 0.
PERFORM YMA_MODIFY_TREE_1  USING IN_EX.
*               PERFORM YMA_REARRANGE_TREE.
ELSEIF G_ANS = '2'.
PERFORM YMA_MODIFY_TREE_1  USING IN_EX.    "!!!
*               PERFORM YMA_REARRANGE_TREE.
ENDIF.
G_CHANGE_SCREEN = 0.
*endif
PERFORM YMA_RECOGN_NEW_TREE.

G_ON_TRANSACTION = 0.
YMA_SCREEN-Y_TRANS = SPACE.
ENDIF.
ENDIF.
ENDCASE.
ENDIF.
*************Maximum lock time******************************************
IF G_NODE-TEXT = 'Maximum lock time  [sec]'(083).
USER_RATIO = 'Group'.
CALL SCREEN 110 STARTING AT 1 10  ENDING AT 35 17.
ENDIF.
************************************************************************
ENDCASE.                           "COMMAND
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  BUILD_INTAB
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_BUILD_INTAB_APP.
*1                                    "tlevel = 1
PERFORM YMA_BUILD_TITLES.
*2                                     "tlevel = 2...4~
PERFORM YMA_BUILD_CONTENCE.
*3
ENDFORM.                             " BUILD_INTAB

*&---------------------------------------------------------------------*
*&      Form  BUILD_TITLES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_BUILD_TITLES.
CLEAR TB_NODES.
TB_NODES-COLOR     =   G_1_COLOR.
TB_NODES-INTENSIV  =  '0' .
TB_NODES-TCOLOR     =   G_N1_COLOR.
TB_NODES-TINTENSIV  =  '1' .
TB_NODES-TLENGTH   = 10.
TB_NODES-TLEVEL    = 1.
TB_NODES-TEXT      = TEXT-004.
TB_NODES-TEXT1      = TEXT-000.
TB_NODES-TPOS1      = '30'.
TB_NODES-TLENGTH1   = 20.

APPEND TB_NODES.
*       IF SY-INDEX  1.
CLEAR TB_NODES.
TB_NODES-TYPE       = TEXT-X49.
TB_NODES-TEXT       = 'ICON_SYSTEM_SETTINGS'.
TB_NODES-KIND       = 'I'.
TB_NODES-TLENGTH    = 3.
TB_NODES-HOTSPOT    = 'X'.
TB_NODES-TPOS       = '6'.
TB_NODES-NAME       = TEXT-008.
TB_NODES-TEXT1      = TEXT-008.
TB_NODES-COLOR      = 1.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TLENGTH1   = 11.
TB_NODES-TLEVEL     = 2.
TB_NODES-TPOS1      = '9'.
TB_NODES-TCOLOR1    = 1.
TB_NODES-TINTENSIV1 = '0'.
APPEND TB_NODES.
************************************************************************
*#############: "Time Interval Parameters
CLEAR TB_NODES.
TB_NODES-TYPE       = TEXT-X49.
TB_NODES-NAME       = TEXT-211.
TB_NODES-TEXT       = TEXT-211.    "Time Interval Parameters
TB_NODES-COLOR      = 1.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TLENGTH    = 40.
TB_NODES-TLEVEL     = 3.
TB_NODES-TCOLOR     = 4.
TB_NODES-TINTENSIV  = '1'.
APPEND TB_NODES.

*    TB_NODES-TYPE       = TEXT-X49.
*    TB_NODES-NAME       = TEXT-212.
*    TB_NODES-TEXT       = TEXT-212.
*    TB_NODES-COLOR      = 1.
*    TB_NODES-INTENSIV   = '1'.
*    TB_NODES-TLENGTH    = 40.
*    TB_NODES-TLEVEL     = 3.
*    TB_NODES-TCOLOR     = 4.
*    TB_NODES-TINTENSIV  = '1'.
*    APPEND TB_NODES.
*
*"SNMP Parameters
TB_NODES-TYPE       = TEXT-X49.
TB_NODES-NAME       = TEXT-213.
TB_NODES-TEXT       = TEXT-213.    "SNMP Parameters
TB_NODES-COLOR      = 1.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TLENGTH    = 40.
TB_NODES-TLEVEL     = 3.
TB_NODES-TCOLOR     = 4.
TB_NODES-TINTENSIV  = '1'.
APPEND TB_NODES.
**ager Parameters
TB_NODES-TYPE       = TEXT-X49.
TB_NODES-NAME       = TEXT-214.
TB_NODES-TEXT       = TEXT-214.    "Pager Parameters
TB_NODES-COLOR      = 1.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TLENGTH    = 40.
TB_NODES-TLEVEL     = 3.
TB_NODES-TCOLOR     = 4.
TB_NODES-TINTENSIV  = '1'.
APPEND TB_NODES.
*R/3 Mail Users
TB_NODES-TYPE       = TEXT-X49.
TB_NODES-NAME       = TEXT-215.
TB_NODES-TEXT       = TEXT-215.    "R/3 Mail Users
TB_NODES-COLOR      = 1.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TLENGTH    = 40.
TB_NODES-TLEVEL     = 3.
TB_NODES-TCOLOR     = 4.
TB_NODES-TINTENSIV  = '1'.
APPEND TB_NODES.
*"/Problematic SQL General parameters
TB_NODES-TYPE       = TEXT-X49.
TB_NODES-NAME       = TEXT-216.
TB_NODES-TEXT       = TEXT-217.
TB_NODES-COLOR      = 1.      "/Problematic SQL General parameters
TB_NODES-INTENSIV   = '1'.
TB_NODES-TLENGTH    = 40.
TB_NODES-TLEVEL     = 3.
TB_NODES-TCOLOR     = 4.
TB_NODES-TINTENSIV  = '1'.
*    if sy-dbsys   = 'ORACLE' or sy-dbsys = 'DB6'.
IF SY-DBSYS(3) = 'ORA' OR SY-DBSYS(3) = 'DB6' OR
( SY-DBSYS(3) = 'DB2' AND SY-SAPRL(2) >= '45' ).
APPEND TB_NODES.
ENDIF.
********************************************************************
*"/Problematic SQL General parameters
TB_NODES-TYPE       = TEXT-X49.
TB_NODES-NAME       = TEXT-218.
TB_NODES-TEXT       = TEXT-218.
TB_NODES-COLOR      = 1.      "/Problematic SQL General parameters
TB_NODES-INTENSIV   = '1'.
TB_NODES-TLENGTH    = 40.
TB_NODES-TLEVEL     = 3.
TB_NODES-TCOLOR     = 4.
TB_NODES-TINTENSIV  = '1'.
APPEND TB_NODES.
*    TB_NODES-COLOR     =  G_1_COLOR.
*    TB_NODES-INTENSIV  = '0'.
*    TB_NODES-TCOLOR     = G_N1_COLOR.
*    TB_NODES-TLENGTH   = 15.
*    TB_NODES-TLEVEL    = 2.
*    TB_NODES-TEXT      = TEXT-008.
**   TB_NODES-TEXT6 = TB_INST_NAME.
*    APPEND TB_NODES.
CLEAR TB_NODES.
TB_NODES-COLOR     = G_1_COLOR.
*      TB_NODES-INTENSIV  = '1'.
TB_NODES-TCOLOR     = G_N1_COLOR.
TB_NODES-TLENGTH   = 20.
TB_NODES-TLEVEL    = 2.
TB_NODES-COLOR     = G_2_COLOR.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TEXT = TEXT-013.          "= G_N2_COLOR.

TB_NODES-TEXT6 = TB_INST_NAME.
*   APPEND TB_NODES.
*   APPEND TB_NODES.
CLEAR TB_NODES.
TB_NODES-COLOR     = G_2_COLOR.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TCOLOR     = G_N1_COLOR.
TB_NODES-TLENGTH   = 20.
TB_NODES-TLEVEL    = 2.
TB_NODES-TEXT      = TEXT-002.
*      TB_NODES-TEXT6 = TB_INST_NAME.
APPEND TB_NODES.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TCOLOR     = G_4_COLOR.
TB_NODES-TINTENSIV = 1.
TB_NODES-COLOR     = G_2_COLOR.
TB_NODES-TLENGTH   = 29.
TB_NODES-TLEVEL    = 3.
TB_NODES-TEXT6 = TB_INST_NAME-YOP_MSNAME.
TB_NODES-TEXT      =  TEXT-003.    "Resource Limits Parameters
*    "Resource Limits Parameters
APPEND TB_NODES.
***************  filling yma_parame (CPU ,RUN ,i/o ,Storage)       *****
LOOP AT TB_TREE
WHERE YMA_TCODE = SPACE.
TB_NODES-TLENGTH4 = 0.
TB_NODES-TEXT1 = SPACE.
TB_NODES-KIND1 = SPACE.
TB_NODES-TLENGTH1 = SPACE.
TB_NODES-TLENGTH3 = 0.
TB_NODES-HOTSPOT4 = SPACE.
TB_NODES-TLENGTH2 = 0.
TB_NODES-KIND = SPACE.
TB_NODES-TLENGTH   = 38.
* "here purple
TB_NODES-TCOLOR     = 7.         "here purple
TB_NODES-TINTENSIV = 1.
TB_NODES-TLEVEL    = 4.
TB_NODES-TEXT      = TB_TREE-YMA_PARAME.
ASP_NAME = TB_TREE-YMA_PARAME.
READ TABLE TB_TREE WITH KEY YOP_MSNAME = SPACE
YMA_PARAME = TB_NODES-TEXT INTO G_DESCRIPTION.
TB_NODES-TEXT = G_DESCRIPTION-YMA_DESC_S.
TB_NODES-TEXT6 = TB_INST_NAME-YOP_MSNAME.

APPEND TB_NODES.
************************************ open tablke WIDE TO DEEP
TB_NODES-TEXT5 = 'RLP'.
PERFORM WIDE_TO_DEEP1.
TB_NODES-TEXT5 = SPACE.
************************************* end WIDE TO DEEP
TB_NODES-TLENGTH   = 18.
ENDLOOP.
CLEAR TB_NODES.
TB_NODES-COLOR     = G_1_COLOR.
*      TB_NODES-INTENSIV  = '1'.
TB_NODES-TCOLOR     = G_N2_COLOR.
TB_NODES-TLENGTH   = 15.
TB_NODES-TLEVEL    = 3.
TB_NODES-COLOR     = G_2_COLOR.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TEXT = TEXT-016.          "= G_N2_COLOR.
TB_NODES-TCOLOR     = G_4_COLOR.
TB_NODES-TINTENSIV = 1.
TB_NODES-TEXT6 = TB_INST_NAME.
APPEND TB_NODES.
TB_NODES-TLENGTH = 20.
ENDFORM.                             " BUILD_TITLES
*&---------------------------------------------------------------------*
*&      Form  BUILD_CONTENCE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*transactions and users per application servers
*----------------------------------------------------------------------*
FORM YMA_BUILD_CONTENCE.
****   * transactions and users per application servers
DATA: F , T, OLD_NAME LIKE TB_TREE-YOP_MSNAME.
SORT TB_INST_NAME BY YOP_MSNAME.
TB_PASS_INST[] = TB_INST_NAME[].
****************************  "App. server names or 'All servers'
LOOP AT TB_INST_NAME .
PERFORM YMA_FILL_INSTNS_ND.    "App. server names or 'All servers'
APPEND TB_NODES.
************************ "NODE STRING ->'Transaction'
CLEAR TB_NODES.
PERFORM YMA_FILL_TRANS_ND.       "NODE STRING ->'Transaction'
APPEND TB_NODES.
TB_NODES-HOTSPOT = SPACE.

LOOP AT TB_TREE
WHERE YOP_MSNAME = TB_INST_NAME-YOP_MSNAME. "TB_TREE-YOP_MSNAME.
*      AND  YNA_LVL = 'A'
*       AND YMA_TCODE NE  SPACE.
TB_NODES-TEXT6(73) = SPACE.
USERNM = TB_TREE-YMA_USERNM.
***********************"flag "at new" ***************************

T = SPACE.                     "flag "at new".
IF OLD_NAME NE TB_INST_NAME-YOP_MSNAME.
T = 'X'.
ENDIF.
OLD_NAME = TB_INST_NAME-YOP_MSNAME.
IF TB_TREE-YMA_TCODE NE TCODE  OR T = 'X'.
OLD_NAME = SPACE.
CLEAR TB_NODES.
*" Transaction codes: e.g. 'YPTR'
PERFORM YMA_FILL_TRCODE_ND.  " Transaction codes: e.g. 'YPTR'
APPEND TB_NODES.
TCODE = TB_TREE-YMA_TCODE.
ENDIF.
TB_NODES-TEXT7 = SPACE.

TB_NODES-HOTSPOT = SPACE.
************************* sub node 'USER' ******************************
LOOP AT TB_TREE

WHERE YOP_MSNAME = TB_INST_NAME-YOP_MSNAME  "TB_TREE-YOP_MSNAME
AND YMA_TCODE =  TB_TREE-YMA_TCODE.
*        AND  YNA_LVL =  'A'.
F = SPACE.
IF OLD_NAME NE TB_TREE-YOP_MSNAME.
F = 'X'.
ENDIF.
OLD_NAME = TB_TREE-YOP_MSNAME.

IF  OLD_USERNM NE USERNM OR F = 'X'.
CLEAR TB_NODES.
PERFORM YMA_FILL_USER_ND.  "USERNM
*            APPEND TB_NODES.
*clear 2 textfeild.(text 'user' or 'group')
*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.

LOOP AT TB_TREE
WHERE YOP_MSNAME = TB_INST_NAME-YOP_MSNAME  "TB_TREE-YOP_MS
AND YMA_TCODE =  TB_TREE-YMA_TCODE
AND YMA_USERNM =  USERNM .
TEXT6 = TB_NODES-TEXT6.
IF IS_FIRST = 0.
*   TB_NODES-COLOR     = G_2_COLOR.
*   TB_NODES-INTENSIV  = '1'.
TB_NODES-TCOLOR4     = 3.
TB_NODES-TINTENSIV4  = 3.
TB_NODES-TLENGTH4  = 9.
TB_NODES-HOTSPOT4 = 'X'.
CASE TB_TREE-Y_ALRT_E_I.
WHEN 'I'.
TB_NODES-TEXT4      = TEXT-022.
TB_NODES-TLENGTH4   = 0.
WHEN 'E'.
TB_NODES-TEXT4      =  TEXT-023.

ENDCASE.
IF TB_TREE-YMA_GR_USR = 'U'.
TB_NODES-TEXT1     =  'User'(045).
ELSE.
TB_NODES-TEXT1     =  'Group'(046).
ENDIF.
*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.

*                CLEAR TB_NODES.
*                PERFORM YMA_FILL_INCL?EXL_ND.
APPEND TB_NODES.
ENDIF.
IS_FIRST = 1.
FL_EX = 0.
IF TB_TREE-Y_ALRT_E_I = 'E'.
FL_EX = 1.
ENDIF.
TB_NODES-TCOLOR4     = SPACE.
TB_NODES-TINTENSIV4  = SPACE.
TB_NODES-TLENGTH4  = SPACE.
TB_NODES-HOTSPOT4 = SPACE.
*******************************block************************************
IF FL_EX = 0.
PERFORM YMA_FILL_PARAMS_NDS. "Aspect names e.g. Cpu ,page
APPEND TB_NODES.
TB_NODES-HOTSPOT = SPACE.
********   SUB NODES WITH ALERTS VALUE ***************************
PERFORM WIDE_TO_DEEP2. "subnodes
ENDIF.
************************endblock.***************************************
ENDLOOP.
ENDIF.

IS_FIRST = 0.
EXIT.
ENDLOOP.

*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.
OLD_USERNM = USERNM.
DESCRIBE TABLE TB_NODES LINES G_LINE.
READ TABLE TB_NODES INDEX G_LINE.
*        TB_NODES-TEXT6+68(3) = 'END'.
MODIFY  TB_NODES INDEX G_LINE.
ENDLOOP.
ENDLOOP.
ENDFORM.                             " BUILD_CONTENCE
*&---------------------------------------------------------------------*
*&      Form  WIDE_TO_DEEP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
INCLUDE <ICON>.
*---------------------------------------------------------------------*
*       FORM WIDE_TO_DEEP                                             *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.
FORM WIDE_TO_DEEP1.
********** 1 half  Performance Parameter.*****************************
TB_NODES-TLEVEL    = 5.
TB_NODES-TLENGTH = 1.
TB_NODES-TEXT    = 'SYM_DOCUMENT'.
TB_NODES-HOTSPOT = 'X'.
TB_NODES-KIND = 'S'.
TB_NODES-TCOLOR  = 3.
**********************Restore afterward *****************************
TB_NODES-TEXT1 = 'ICON_BUSINAV_PROC_EXIST'.
TB_NODES-KIND1 = 'I'.
TB_NODES-TLENGTH1 = 3.
*    TB_NODES-TEXT5 = 'RLP'.
TB_NODES-TLENGTH2 = 10.
TB_NODES-TEXT2 = TB_TREE-YOP_QT_YEL.
TB_NODES-TCOLOR2 = 1.

TB_NODES-TLENGTH3 = 19.
TB_NODES-TEXT3 = TEXT-007.

TB_NODES-TEXT4 = 'ICON_EXECUTE_OBJECT'.
TB_NODES-KIND4 = 'I'.
TB_NODES-TLENGTH4 = 3.
TB_NODES-HOTSPOT4 = 'X'.
TB_NODES-TEXT8 = ASP_NAME.
APPEND TB_NODES.

TB_NODES-TEXT3 = TEXT-009.
TB_NODES-TEXT2 = TB_TREE-YOP_QT_RED.
TB_NODES-TEXT8 = ASP_NAME.
APPEND TB_NODES.

TB_NODES-TEXT3 = TEXT-010.
TB_NODES-TEXT2 = TB_TREE-YOP_QT_PRT.
*    TB_NODES-TEXT5 = 'RLP'.
TB_NODES-TEXT8 = ASP_NAME.
APPEND TB_NODES.
TB_NODES-TEXT3 = TEXT-011.
IF TB_TREE-Y_ALRT_M_C = 'M'.
TB_NODES-TEXT2 = TEXT-028.
ELSEIF TB_TREE-Y_ALRT_M_C = 'C'.
TB_NODES-TEXT2 = TEXT-029.
ENDIF.
*TB_NODES-TEXT5 = 'RLP'.
TB_NODES-TEXT6+65 = TB_NODES-TEXT2.
TB_NODES-TEXT6+68 = TB_NODES-TEXT3.
TB_NODES-TEXT8 = ASP_NAME.
APPEND TB_NODES.
ENDFORM.                             " WIDE_TO_DEEP
*&---------------------------------------------------------------------*
*&      Form  WIDE_TO_DEEP2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.

FORM WIDE_TO_DEEP2.
TB_NODES-TEXT6(73) = SPACE.
TB_NODES-TLEVEL    = 11.
TB_NODES-TLENGTH = 1.
TB_NODES-TEXT    = 'SYM_DOCUMENT'.
TB_NODES-HOTSPOT = 'X'.
TB_NODES-KIND = 'S'.
TB_NODES-TCOLOR  = 3.
**********************Restore afterward *****************************
***********YELLOW  THRESHOLD
TB_NODES-TEXT1 = 'ICON_BUSINAV_PROC_EXIST'.
TB_NODES-KIND1 = 'I'.
TB_NODES-TLENGTH1 = 3.
TB_NODES-TLENGTH2 = 10.
TB_NODES-TEXT2 = TB_TREE-YOP_QT_YEL.
TB_NODES-TCOLOR2 = 1.
TB_NODES-TLENGTH3 = 19.
TB_NODES-TEXT3 = TEXT-007.
TB_NODES-TEXT4 = 'ICON_EXECUTE_OBJECT'.
TB_NODES-KIND4 = 'I'.
TB_NODES-TLENGTH4 = 3.
TB_NODES-HOTSPOT4 = 'X'.
TB_NODES-TEXT6 =    TB_INST_NAME-YOP_MSNAME.
TB_NODES-TEXT6+22 = TB_TREE-YMA_TCODE.
IF TB_TREE-YMA_TJSIGN = 'J'.
TB_NODES-TEXT6+22 = 'Jobs'.
TB_NODES-TEXT5 = TB_TREE-YMA_TCODE.
ENDIF.

TB_NODES-TEXT6+27 = USERNM.
TB_NODES-TEXT6+40 = TB_TREE-YMA_PARAME.
TB_NODES-TEXT6+65 = 'YEL'.
TB_NODES-TEXT6+68 = TB_TREE-YOP_QT_YEL.
TB_NODES-TEXT8 = ASP_NAME .
APPEND TB_NODES.
************Red Threshold
TB_NODES-TEXT3 = TEXT-009.
TB_NODES-TEXT2 = TB_TREE-YOP_QT_RED.
TB_NODES-TEXT6+68 = TB_TREE-YOP_QT_RED.
TB_NODES-TEXT6+65 = 'RED'.
TB_NODES-TEXT6+68 = TB_TREE-YOP_QT_RED.
TB_NODES-TEXT8 = ASP_NAME .
APPEND TB_NODES.
*********Priority
TB_NODES-TEXT3 = TEXT-010.
TB_NODES-TEXT2 = TB_TREE-YOP_QT_PRT.
TB_NODES-TEXT6+65 = 'PRT'.
TB_NODES-TEXT6+68 = TB_TREE-YOP_QT_PRT.
TB_NODES-TEXT8 = ASP_NAME .
APPEND TB_NODES.
*********Include/Exclude
TB_NODES-TEXT3 = TEXT-011.
IF TB_TREE-Y_ALRT_M_C = 'M'.
TB_NODES-TEXT2 = TEXT-028.
ELSEIF TB_TREE-Y_ALRT_M_C = 'C'.
TB_NODES-TEXT2 = TEXT-029.
ENDIF.
TB_NODES-TEXT6+65 = TB_NODES-TEXT2.
TB_NODES-TEXT6+68 = TB_NODES-TEXT3.
TB_NODES-TEXT8 = ASP_NAME .
APPEND TB_NODES.
ENDFORM.                             " WIDE_TO_DEEP2
*&---------------------------------------------------------------------*
*&      Form  MODIFY_TREE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.

FORM YMA_MODIFY_TREE_1 USING IN_EX.
DATA EXL TYPE I.
PERFORM YMA_RECOGN_NEW_TREE.
*CLEAR G_PASS_NODE-ID.
G_TEXT6 = G_NODE-TEXT6.
IF TR_RATIO = 'Trans.'.
READ TABLE TB_NODES WITH KEY TEXT = YMA_TREE_U-YMA_TCODE
TEXT6(20) = G_NODE-TEXT6(20)  TEXT9(3) = 'App'
TEXT6+22(4) = 'Jobs'.
G_PASS_NODE-ID = TB_NODES-ID.
IF SY-SUBRC NE 0.
G_PASS_NODE-ID = G_NODE-ID.
ENDIF.
ELSE.
READ TABLE TB_NODES WITH KEY TEXT5 = YMA_SCREEN-Y_TRANS    "misha
TEXT6(20) = G_NODE-TEXT6(20)  TEXT9(3) = 'App'
TEXT6+22(4) = 'Tran'.
G_PASS_NODE-ID = TB_NODES-ID.
FL_EXIST = 1.
IF SY-SUBRC NE 0.
G_PASS_NODE-ID = G_NODE-ID.
FL_EXIST = 0.
ENDIF.
ENDIF.
**************  Additional checking *******************
IF TR_RATIO = 'Trans.'.
READ TABLE TB_NODES WITH KEY TEXT7 = 'CT'

TEXT = YMA_TREE_U-YMA_TCODE.
IF SY-SUBRC = 0 .
FL_EXIST = 1.
ENDIF.
*************
ELSE.
READ TABLE TB_NODES WITH KEY TEXT7 = 'CT'

TEXT = YMA_SCREEN-Y_TRANS.
IF SY-SUBRC = 0.
FL_EXIST = 1.
ENDIF.
ENDIF.
************************
CLEAR NODES.
NODES-TLENGTH3 = 0.
NODES-TLENGTH4 = 0.
NODES-HOTSPOT4 = SPACE.
*    NODES-TEXT1 = SPACE.
*    NODES-KIND1 = SPACE.
NODES-TLENGTH1 = SPACE.
NODES-TEXT6 = TB_INST_NAME.
NODES-TLENGTH2 = 0.

NODES-KIND = SPACE.
NODES-COLOR     = G_2_COLOR.
NODES-INTENSIV  = '1'.
NODES-TCOLOR     = G_N2_COLOR.
NODES-TINTENSIV = 1.
NODES-TLENGTH   = 4.
NODES-TLENGTH1   = 12.
*      NODES-TEXT      = NODES-TEXT
NODES-TEXT  = YMA_SCREEN-Y_TRANS.
NODES-TEXT1 = 'Transaction'(060).
NODES-TEXT2 = NODES-TEXT1.
IF TR_RATIO = 'Trans.'.
NODES-TEXT  = YMA_TREE_U-YMA_TCODE.
NODES-TEXT1 = 'Job'(005).
ENDIF.
NODES-TLENGTH = 20.
NODES-TEXT6(20) = G_NODE-TEXT6(20).
NODES-TEXT6+22(4)  = YMA_SCREEN-Y_TRANS.
NODES-TEXT5 = YMA_SCREEN-Y_TRANS.
IF TR_RATIO = 'Trans.'.
NODES-TEXT6+22(4)  = 'Jobs'.
NODES-TEXT2 = NODES-TEXT6+22(4).
NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
ENDIF.
NODES-TEXT7  = 'CT'.
NODES-TEXT9 = 'App'.
G_PASS_NODE-ID = G_PASS_NODE-ID.
********
IF FL_EXIST NE 1 .                 "OR TR_RATIO = 'Trans.'(076). "m
G_PASS_NODE-ID = G_PASS_NODE-ID.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = G_PASS_NODE-ID
RELATIONSHIP       = 'BABY'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
ELSE.
IO_NEW_ID =  G_PASS_NODE-ID.
ENDIF.
FL_EXIST = 0.

NODES-TEXT  = US_NAME.
NODES-TCOLOR = 7.
NODES-TLENGTH   =  12.
NODES-TLENGTH1   =  7.
NODES-TINTENSIV = 0.
NODES-TEXT7  = SPACE.              "'CT'."m
CASE USER_RATIO.
WHEN 'Group'(046).
NODES-TEXT1  = 'User'(045).
NODES-TEXT  = US_NAME.
WHEN 'User'(045).
NODES-TEXT1  = 'Group'(046).
NODES-TEXT  = GROUP_NAME.
ENDCASE.
NODES-TEXT6+27(12) = NODES-TEXT .
NODES-TCOLOR4     = 3.
NODES-TINTENSIV4  = 3.
NODES-TLENGTH4  = 9.
NODES-HOTSPOT4 = 'X'.
NODES-TEXT4 = TEXT-022.
IF NODES-TEXT4 = TEXT-022.
NODES-TLENGTH4 = 0.
ENDIF.
IF IN_EX = 'Ex'.
NODES-TEXT4 = TEXT-023.
EXL = 1.
NODES-TLENGTH4 = 9.
CLEAR IN_EX.
ENDIF.
*    NODES-TEXT9 = SPACE.
* New node name
* Identifier of the node at the insert posit.
* Relationship (CHILD/NEXT/BABY)
* Node is reference node
* Type of new node
*
* Identifier for new node
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
CLEAR NODES.

NODES-COLOR = 2.
*NODES-INTENSIVE = 0.
NODES-TLENGTH1 = 0.
NODES-TEXT1 = TEXT-022.
IF NODES-TEXT1 = TEXT-022.

NODES-TLENGTH1 = 0.
ENDIF.
IF GR_EXIST = 1.
NODES-TEXT1 = TEXT-023.
NODES-TLENGTH1 = 10.
ENDIF.
NODES-TCOLOR1  = 3.
NODES-TINTENSIV  = 1.
NODES-INTENSIV  = 1.
NODES-TCOLOR1 = SPACE.
*    IF GR_EXIST = 1.
IF EXL = 0.
PERFORM YMA_1_LEVEL_DEEP USING EXL.
ELSE.
EXL = 0.
ENDIF.
*      GR_EXIST = 0.
*    ENDIF.
DATA TB_YMA_TREE LIKE YMA_TREE OCCURS 1 WITH HEADER LINE.
REFRESH TB_YMA_TREE.
LOOP AT  TB_TREE WHERE YOP_MSNAME = SPACE .
MOVE-CORRESPONDING TB_TREE TO TB_YMA_TREE.
APPEND TB_YMA_TREE.
ENDLOOP.
SY = SY.

SELECT * FROM YMA_TREE
WHERE LANG = SY-LANGU(1). "Mishka

*LOOP AT TB_YMA_TREE.
MOVE-CORRESPONDING YMA_TREE TO MODIFY_YMA_TREE_U. " ASP_NAME.
*           MODIFY_YMA_TREE_U = YMA_TREE_U.
MODIFY_YMA_TREE_U-YOP_MSNAME = G_APP_NAME.
MODIFY_YMA_TREE_U-Y_ALRT_E_I = 'I'.                   "XXX
IF GR_EXIST = 1 AND G_ANS = '1'.
MODIFY_YMA_TREE_U-Y_ALRT_E_I = 'E'.
ELSE.
MODIFY_YMA_TREE_U-Y_ALRT_E_I = 'I'.
ENDIF.
MODIFY_YMA_TREE_U-YMA_TCODE =  YMA_SCREEN-Y_TRANS .
CASE USER_RATIO.
WHEN 'Group'.
MODIFY_YMA_TREE_U-YMA_USERNM = US_NAME.
MODIFY_YMA_TREE_U-YMA_GR_USR = 'U' .
WHEN 'User'.
MODIFY_YMA_TREE_U-YMA_USERNM = GROUP_NAME.
MODIFY_YMA_TREE_U-YMA_GR_USR = 'G' .
ENDCASE.
IF G_ANS = '2'.
LOOP AT DBL_MODIFY_YMA_TREE_U.
DBL_MODIFY_YMA_TREE_U-Y_ALRT_E_I = 'I'.
MODIFY DBL_MODIFY_YMA_TREE_U.
ENDLOOP.
CLEAR G_ANS .
ENDIF.
LOOP AT DBL_MODIFY_YMA_TREE_U.
MODIFY_YMA_TREE_U = DBL_MODIFY_YMA_TREE_U .
APPEND MODIFY_YMA_TREE_U.
ENDLOOP.
REFRESH DBL_MODIFY_YMA_TREE_U.
IF IS_APPENDED NE 1.
APPEND MODIFY_YMA_TREE_U.
ENDIF.

ENDSELECT.
LOOP AT TB_YMA_TREE.
LOOP AT MODIFY_YMA_TREE_U WHERE YMA_PARAME = TB_YMA_TREE-YMA_PARAME.
MODIFY_YMA_TREE_U-YOP_QT_YEL = TB_YMA_TREE-YOP_QT_YEL.
MODIFY_YMA_TREE_U-YOP_QT_PRT = TB_YMA_TREE-YOP_QT_PRT.
MODIFY_YMA_TREE_U-YOP_QT_RED = TB_YMA_TREE-YOP_QT_RED.
MODIFY_YMA_TREE_U-Y_ALRT_M_C = TB_YMA_TREE-Y_ALRT_M_C.
MODIFY MODIFY_YMA_TREE_U INDEX SY-TABIX.
ENDLOOP.
ENDLOOP.
ENDFORM.                             " MODIFY_TREE
*&---------------------------------------------------------------------*
*&      Form  MODIFY_TREE_2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.
*----------------------------------------------------------------------*
*  FORM YMA_MODIFY_TREE_2.
*  ENDFORM.                             " MODIFY_TREE_2

*&---------------------------------------------------------------------*
*&      Form  1_LEVEL_DEEP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_1_LEVEL_DEEP USING EXL.

*          NODES-TLENGTH4 = 0.
*          NODES-TEXT1 = SPACE.
*          NODES-KIND1 = SPACE.
*          NODES-TLENGTH1 = SPACE.
*          NODES-TLENGTH3 = 0.
*          NODES-HOTSPOT4 = SPACE.
*          NODES-TLENGTH2 = 0.
*          NODES-KIND = SPACE.
*          NODES-TLENGTH   = 32.
*          NODES-TCOLOR     = G_4_COLOR.
*          NODES-TEXT      = TB_TREE-YMA_PARAME.
*          READ TABLE TB_TREE WITH KEY YOP_MSNAME = SPACE
*          YMA_PARAME = NODES-TEXT INTO G_DESCRIPTION.
*          NODES-TEXT = G_DESCRIPTION-YMA_DESC_S.
*          NODES-TEXT6 =   G_NODE-TEXT6(20).
*          NODES-TEXT6+22 = YMA_SCREEN-Y_TRANS.
**          NODES-TEXT6+27 = USERNM.
*          NODES-HOTSPOT = SPACE.
*          NODES-TEXT6(20) =  G_NODE-TEXT6(20).
*          NODES-TEXT6+22(4)  =  YMA_SCREEN-Y_TRANS .
*          CASE USER_RATIO.
*            WHEN 'Group'(046).
*              NODES-TEXT6+27(12) =  US_NAME.
*            WHEN 'User'(045).
*              NODES-TEXT6+27(12) =  GROUP_NAME.
*          ENDCASE.
*          NODES-TEXT6+40(24) = TB_TREE-YMA_PARAME.
DATA: INDEXX LIKE SY-TABIX, INDEXXX LIKE INDEXX.
DATA : TB_AUX_NODES LIKE TB_NODES OCCURS 10 WITH HEADER LINE.
READ TABLE TB_NODES WITH KEY TEXT =
TEXT-003 ."('Resource Limits Parameters').
INDEXX = SY-TABIX.
INDEXXX = 1.
ADD 2 TO INDEXX.
DATA END_INDEX  LIKE SY-TABIX.
END_INDEX = INDEXX + 30.
REFRESH TB_AUX_NODES.
LOOP AT TB_NODES." WHERE SY-TABIX >= INDEXX AND SY-TABIX <= END_INDEX.
IF SY-TABIX >= INDEXX AND SY-TABIX <= END_INDEX.
MOVE TB_NODES TO TB_AUX_NODES.
APPEND TB_AUX_NODES.
ENDIF.
IF SY-TABIX > END_INDEX.
EXIT.
ENDIF.
ENDLOOP.
INDEXX = 1.
DELETE TB_AUX_NODES WHERE TEXT NE 'SYM_DOCUMENT'.
LOOP  AT TB_TREE.
READ TABLE TB_AUX_NODES INDEX INDEXX.
TB_TREE-YOP_QT_YEL  = TB_AUX_NODES-TEXT2.
ADD 1 TO INDEXX.
READ TABLE TB_AUX_NODES INDEX INDEXX.
TB_TREE-YOP_QT_RED  = TB_AUX_NODES-TEXT2.
ADD 1 TO INDEXX.
READ TABLE TB_AUX_NODES INDEX INDEXX.
TB_TREE-YOP_QT_PRT  = TB_AUX_NODES-TEXT2.
ADD 1 TO INDEXX.
READ TABLE TB_AUX_NODES INDEX INDEXX.
TB_TREE-Y_ALRT_M_C  = TB_AUX_NODES-TEXT2.
ADD 1 TO INDEXX.
MODIFY TB_TREE.
ENDLOOP.
".
*
*
*
*    LOOP AT TB_TREE WHERE YOP_MSNAME = SPACE.
*      SELECT SINGLE * FROM  YMA_TREE
*             WHERE  YMA_PARAME  = TB_TREE-YMA_PARAME
*             AND    LANG        = SY-LANGU.
**       AND    YOP_QT_PRT  = ___
**       AND    YOP_QT_RED  = ___
**       AND    Y_ALRT_M_C  = ___
**       AND    YOP_QT_YEL  = ___
**       AND    YMA_PAR_UN  = ___
**       AND    YMA_DESC_S  = ___            .
*      MOVE-CORRESPONDING YMA_TREE TO TB_TREE.
*      MODIFY TB_TREE.
**yma_tree
*    ENDLOOP.

REFRESH TB_TREE_LKL.
DATA FIX_ID LIKE IO_NEW_ID.
DATA INDEX TYPE I.
INDEX = 0.
LOOP AT TB_TREE WHERE
*                        YOP_MSNAME = G_TEXT6(21) AND
YMA_TCODE = SPACE AND  YMA_USERNM = SPACE.
INDEX = INDEX + 1.
CASE INDEX.
WHEN 1.
*ERFORM 2_LEVEL_DEEPER.
NODES-TLENGTH4 = 0.
NODES-TEXT1 = SPACE.
NODES-KIND1 = SPACE.
NODES-TLENGTH1 = SPACE.
NODES-TLENGTH3 = 0.
NODES-HOTSPOT4 = SPACE.
NODES-TLENGTH2 = 0.
NODES-KIND = SPACE.
NODES-TLENGTH   = 32.
NODES-TCOLOR     = G_4_COLOR.
NODES-TEXT      = TB_TREE-YMA_PARAME.
READ TABLE TB_TREE WITH KEY YOP_MSNAME = SPACE
YMA_PARAME = NODES-TEXT INTO G_DESCRIPTION.
NODES-TEXT = G_DESCRIPTION-YMA_DESC_S.
NODES-TEXT6 =   G_NODE-TEXT6(20).
NODES-TEXT6+22 = YMA_SCREEN-Y_TRANS.
NODES-TEXT5 = YMA_SCREEN-Y_TRANS.
IF TR_RATIO = 'Trans.'.
NODES-TEXT6+22(4)  = 'Jobs'.
NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
ENDIF.

*          NODES-TEXT6+27 = USERNM.
NODES-HOTSPOT = SPACE.
NODES-TEXT6(20) =  G_NODE-TEXT6(20).
NODES-TEXT6+22(4)  =  YMA_SCREEN-Y_TRANS .
CASE USER_RATIO.
WHEN 'Group'(046).
NODES-TEXT6+27(12) =  US_NAME.
WHEN 'User'(045).
NODES-TEXT6+27(12) =  GROUP_NAME.
ENDCASE.
NODES-TEXT6+40(24) = TB_TREE-YMA_PARAME.

CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
FIX_ID = IO_NEW_ID.
*          CLEAR NODES-NODISPLAY.
TB_TREE_LKL-YMA_PARAME = 'CPU USAGE'.
TB_TREE_LKL-YOP_QT_YEL = TB_TREE-YOP_QT_YEL.
TB_TREE_LKL-YOP_QT_RED = TB_TREE-YOP_QT_RED.
TB_TREE_LKL-YOP_QT_PRT = TB_TREE-YOP_QT_PRT.
TB_TREE_LKL-Y_ALRT_M_C = TB_TREE-Y_ALRT_M_C.
PERFORM YMA_2_LEVEL_DEEPER USING EXL.
CLEAR TB_TREE_LKL.
WHEN 2 OR 3 OR 4 OR 5 OR 6.
TB_TREE_LKL = TB_TREE.
APPEND TB_TREE_LKL.
ENDCASE.
ENDLOOP.
*************************YMA_PARAME
SORT  TB_TREE_LKL BY YMA_PARAME DESCENDING.
LKL = 1.

*      NODES-TLENGTH4 = 0.
*      NODES-TEXT1 = SPACE.
*      NODES-KIND1 = SPACE.
*      NODES-TLENGTH1 = SPACE.
*      NODES-TLENGTH3 = 0.
*      NODES-HOTSPOT4 = SPACE.
*      NODES-TLENGTH2 = 0.
*      NODES-KIND = SPACE.
*      NODES-TLENGTH   = 32.
*      NODES-TCOLOR    = G_4_COLOR.
*      NODES-TEXT      = TB_TREE_LKL-YMA_PARAME .
*      READ TABLE TB_TREE WITH KEY YOP_MSNAME = SPACE
*      YMA_PARAME = NODES-TEXT INTO G_DESCRIPTION.
*      NODES-TEXT = G_DESCRIPTION-YMA_DESC_S.
*      NODES-TEXT6(20) =    G_NODE-TEXT6(20).
*      NODES-TEXT6+22 = TB_TREE_LKL-YMA_TCODE.
*      NODES-TEXT6+27 = US_NAME.


LOOP AT TB_TREE_LKL.
NODES-TLENGTH4 = 0.
NODES-TEXT1 = SPACE.
NODES-KIND1 = SPACE.
NODES-TLENGTH1 = SPACE.
NODES-TLENGTH3 = 0.
NODES-HOTSPOT4 = SPACE.
NODES-TLENGTH2 = 0.
NODES-KIND = SPACE.
NODES-TLENGTH   = 32.
NODES-TCOLOR    = G_4_COLOR.
NODES-TEXT      = TB_TREE_LKL-YMA_PARAME .
READ TABLE TB_TREE WITH KEY YOP_MSNAME = SPACE
YMA_PARAME = NODES-TEXT INTO G_DESCRIPTION.
NODES-TEXT = G_DESCRIPTION-YMA_DESC_S.
NODES-TEXT6(20) =    G_NODE-TEXT6(20).
NODES-TEXT6+22 = TB_TREE_LKL-YMA_TCODE.
NODES-TEXT6+27 = US_NAME.
*      NODES-TEXT6+40 = TB_TREE_LKL-YMA_PARAME.
TB_NODES-HOTSPOT = SPACE.
NODES-TEXT6+22(4)  =  YMA_SCREEN-Y_TRANS .
NODES-TEXT6+27(12) =  US_NAME.
NODES-TEXT6+40(24) = TB_TREE_LKL-YMA_PARAME.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = FIX_ID
RELATIONSHIP       = 'NEXT'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
*      CLEAR  NODES-NODISPLAY .
PERFORM YMA_2_LEVEL_DEEPER USING EXL.
ENDLOOP.
REFRESH TB_TREE_LKL.
LKL  = 0.
ENDFORM.                             " 1_LEVEL_DEEP
*&---------------------------------------------------------------------*
*&      Form  2_LEVEL_DEEPER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.
*----------------------------------------------------------------------*
FORM YMA_2_LEVEL_DEEPER USING EXL.

*    LOOP AT TB_TREE WHERE YOP_MSNAME = NODES-TEXT6(21) AND
*    YMA_TCODE = SPACE AND  YMA_USERNM = SPACE.
NODES-TEXT6(73) = SPACE.

NODES-TLENGTH = 1.
NODES-TEXT    = 'SYM_DOCUMENT'.
NODES-HOTSPOT = 'X'.
NODES-KIND = 'S'.
NODES-TCOLOR  = 3.
**********************Restore afterward *****************************

*    NODES-TEXT1 = 'ICON_BUSINAV_PROC_EXIST'.
*    NODES-KIND1 = 'I'.
*    NODES-TLENGTH1 = 3.
*
*    NODES-TLENGTH2 = 10.
*    NODES-TEXT2 = TB_TREE_LKL-YOP_QT_YEL.
*    NODES-TCOLOR2 = 1.
*
*    NODES-TLENGTH3 = 19.
*    NODES-TEXT3 = TEXT-007.
*
*    NODES-TEXT4 = 'ICON_EXECUTE_OBJECT'.
*    NODES-KIND4 = 'I'.
*    NODES-TLENGTH4 = 3.
*    NODES-HOTSPOT4 = 'X'.
*    NODES-TEXT6(20) =    G_NODE-TEXT6(20).
*    NODES-TEXT6+22 = YMA_SCREEN-Y_TRANS.


**********************************************************************
NODES-TEXT1 = 'ICON_BUSINAV_PROC_EXIST'.
NODES-KIND1 = 'I'.
NODES-TLENGTH1 = 3.

NODES-TLENGTH2 = 10.
NODES-TEXT2 = TB_TREE_LKL-YOP_QT_YEL.
NODES-TCOLOR2 = 1.

NODES-TLENGTH3 = 19.
NODES-TEXT3 = TEXT-007.

NODES-TEXT4 = 'ICON_EXECUTE_OBJECT'.
NODES-KIND4 = 'I'.
NODES-TLENGTH4 = 3.
NODES-HOTSPOT4 = 'X'.
NODES-TEXT6(20) =    G_NODE-TEXT6(20).
NODES-TEXT6+22 = YMA_SCREEN-Y_TRANS.
NODES-TEXT5 = YMA_SCREEN-Y_TRANS.
IF TR_RATIO = 'Trans.'.
NODES-TEXT6+22(4)  = 'Jobs'.
NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
ENDIF.

CASE USER_RATIO.
WHEN 'Group'(046).
NODES-TEXT6+27(12) =  US_NAME.
WHEN 'User'(045).
NODES-TEXT6+27(12) =  GROUP_NAME.
ENDCASE.
*    NODES-TEXT6+40 = TB_TREE-YMA_PARAME.
NODES-TEXT6+65 = 'YEL'.
NODES-TEXT6+68 = TB_TREE_LKL-YOP_QT_YEL.

*    NODES-TEXT6+40(24) = TB_TREE-YMA_PARAME.     " !!!misha
*IF  LKL = 1.
NODES-TEXT6+40(24) = TB_TREE_LKL-YMA_PARAME.
*ENDIF.
NODES-TEXT8 = TB_TREE_LKL-YMA_PARAME.

CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
NODES-TEXT2 = TB_TREE_LKL-YOP_QT_RED.
NODES-TEXT3 = TEXT-009.
NODES-TEXT6(20) =    G_NODE-TEXT6(20).
NODES-TEXT6+65 = 'RED'.
NODES-TEXT6+68 = TB_TREE_LKL-YOP_QT_RED.

CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'NEXT'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
NODES-TEXT2 = TB_TREE_LKL-YOP_QT_PRT.
NODES-TEXT3 = TEXT-010.
NODES-TEXT6+65 = 'PRT'.
NODES-TEXT6+68 = TB_TREE_LKL-YOP_QT_PRT.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'NEXT'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
NODES-TEXT6(20) =    G_NODE-TEXT6(20).
IF TB_TREE_LKL-Y_ALRT_M_C = 'M'.
NODES-TEXT2 = 'Mail'(053).
ELSE.
NODES-TEXT2 = 'Cancel'(063).
ENDIF.
NODES-TEXT3 = TEXT-044.
NODES-TEXT6+65 = 'Mail'.
NODES-TEXT6+68 = TB_TREE_LKL-Y_ALRT_M_C.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'NEXT'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
*    CLEAR TB_NODES-NODISPLAY .
ENDFORM.                             " 2_LEVEL_DEEPER
*&---------------------------------------------------------------------*
*&      Form  FIRST_SELECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.
*----------------------------------------------------------------------*
FORM YMA_FIRST_SELECT.

CALL FUNCTION 'TH_SERVER_LIST'
*        EXPORTING
*             SERVICES       = 255
TABLES
LIST           = LIST
EXCEPTIONS
NO_SERVER_LIST = 1
OTHERS         = 2.

*    LOOP AT LIST.
*      TB_INST_NAME-YOP_MSNAME = LIST-NAME.
*      APPEND TB_INST_NAME.
*    ENDLOOP.
SELECT  * FROM    YMA_TREE
INTO CORRESPONDING FIELDS OF TB_TREE
WHERE LANG = SY-LANGU(1).
APPEND  TB_TREE.
ENDSELECT.
SELECT  * FROM    YMA_TREE_U
*              WHERE  YOP_MSNAME  = TB_INST_NAME
ORDER BY   YOP_MSNAME YMA_TJSIGN
YMA_TCODE  YMA_USERNM YMA_PARAME.
*              AND    YMA_TCODE   = ___
*              AND    YMA_USERNM  = ___
*              AND    YMA_PARAME  = ___
*              AND    YOP_QT_PRT  = ___
*              AND    YOP_QT_RED  = ___
*              AND    YOP_QT_YEL  = ___
*              AND    YMA_PAR_UN  = ___            .
TB_TREE = YMA_TREE_U.
APPEND TB_TREE.
ENDSELECT.
*    LOOP AT TB_INST_NAME WHERE YOP_MSNAME NE TEXT-032.
*      READ TABLE LIST WITH KEY NAME =  TB_INST_NAME-YOP_MSNAME.
*      IF SY-SUBRC NE 0.
*        TB_INST_NAME-IS_ACTIVE = TEXT-001.
*        MODIFY TB_INST_NAME.
*      ENDIF.
*    ENDLOOP.
*
*    READ TABLE TB_INST_NAME WITH KEY YOP_MSNAME = TEXT-032.
*    IF SY-SUBRC NE 0.
*      TB_INST_NAME-YOP_MSNAME = TEXT-032.
*      APPEND TB_INST_NAME.
*    ENDIF.

SELECT  DISTINCT YOP_MSNAME INTO
CORRESPONDING FIELDS OF  TB_INST_NAME  FROM  YMA_TREE_U
WHERE YOP_MSNAME NE SPACE.
COLLECT TB_INST_NAME.
ENDSELECT.
*    SELECT  DISTINCT YOP_MSNAME INTO
*        LIST-NAME   FROM  YMA_TREE_U
*         WHERE YOP_MSNAME NE SPACE.
*      COLLECT TB_INST_NAME.
*    ENDSELECT.
LOOP AT LIST.
TB_INST_NAME-YOP_MSNAME = LIST-NAME.
COLLECT TB_INST_NAME.
ENDLOOP.

LOOP AT TB_INST_NAME WHERE YOP_MSNAME NE TEXT-032.
READ TABLE LIST WITH KEY NAME =  TB_INST_NAME-YOP_MSNAME.
IF SY-SUBRC NE 0.
TB_INST_NAME-IS_ACTIVE = TEXT-001.
MODIFY TB_INST_NAME.
ENDIF.
ENDLOOP.

READ TABLE TB_INST_NAME WITH KEY YOP_MSNAME = TEXT-032.
IF SY-SUBRC NE 0.
TB_INST_NAME-YOP_MSNAME = TEXT-032.
APPEND TB_INST_NAME.
ENDIF.

*    LOOP AT TB_INST_NAME WHERE YOP_MSNAME NE TEXT-032.
*      READ TABLE LIST WITH KEY NAME =  TB_INST_NAME-YOP_MSNAME.
*      IF SY-SUBRC NE 0.
*        TB_INST_NAME-IS_ACTIVE = TEXT-001.
*        MODIFY TB_INST_NAME.
*      ENDIF.
*    ENDLOOP.
*
*    READ TABLE TB_INST_NAME WITH KEY YOP_MSNAME = TEXT-032.
*    IF SY-SUBRC NE 0.
*      TB_INST_NAME-YOP_MSNAME = TEXT-032.
*      APPEND TB_INST_NAME.
*    ENDIF.


ENDFORM.                             " FIRST_SELECT
*&---------------------------------------------------------------------*
*&      Form  BUILD_INTAB_JOB
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.
*----------------------------------------------------------------------*
FORM YMA_BUILD_INTAB_JOB.
PERFORM YMA_JOB_TITLE.
PERFORM YMA_JOB_LIST.
*    PERFORM YMA_JOB_LIST_BY_APPSER.
ENDFORM.                             " BUILD_INTAB_JOB
*&---------------------------------------------------------------------*
*&      Form  JOB_TITLE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM YMA_JOB_TITLE.
CLEAR TB_NODES.
TB_NODES-COLOR     = G_1_COLOR.
*      TB_NODES-INTENSIV  = '1'.
TB_NODES-TCOLOR     = G_N1_COLOR.
TB_NODES-TLENGTH   = 12.
TB_NODES-TLEVEL    = 3.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TEXT = TEXT-017.          "= G_N2_COLOR.
TB_NODES-TCOLOR     = G_4_COLOR.
TB_NODES-TINTENSIV = 1.
APPEND TB_NODES.
ENDFORM.                             " JOB_TITLE
*&---------------------------------------------------------------------*
*&      Form  JOB_LIST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*            form YMA_JOB_LIST.
*            TB_NODES-TLENGTH1    = 0.
********************
*
*
*            ENDIF.
*----------------------------------------------------------------------*
FORM YMA_JOB_LIST.
DATA GR_USER(8).
CLEAR TB_NODES.
TB_NODES-TEXT      = TEXT-013 .    "LIST-NAME.
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N4_COLOR.
TB_NODES-TLENGTH    = 22.
TB_NODES-TLEVEL     = 4.
TB_NODES-COLOR = 2.
TB_NODES-TCOLOR = 7.
TB_NODES-TINTENSIV = 1.
TB_NODES-INTENSIV = 1.
TB_NODES-TEXT6(4)     =     'Jobs'.
TB_NODES-TEXT6+5(21)  = TEXT-020.  "'System'.
APPEND TB_NODES.
SELECT * FROM YMA_TR_JOP  WHERE   YMA_PARAME NE  'SPOOL JOB'
ORDER
BY   YMA_USERNM YMA_PARAME.
*       SELECT  SINGLE * FROM YMA_TR_JOB
*       LANG = SY-LANGU(1).
ON CHANGE OF YMA_TR_JOP-YMA_USERNM .

CLEAR TB_NODES.
TB_NODES-TEXT6      = TEXT-017.
TB_NODES-TEXT6+4(20) = TEXT-013." USERNM
TB_NODES-TEXT6+29(20) = YMA_TR_JOP-YMA_PARAME. " USERNM
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-TCOLOR     = G_N2_COLOR.
TB_NODES-TINTENSIV    = 1.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N2_COLOR.
TB_NODES-TLENGTH    = 12.
TB_NODES-TLEVEL     = 5.
TB_NODES-TLENGTH1 = 6.
IF YMA_TR_JOP-YMA_GR_USR = 'U'.
TB_NODES-TLENGTH1 = 6.
GR_USER =   TB_NODES-TEXT1       = TEXT-045.
ELSEIF
YMA_TR_JOP-YMA_GR_USR = 'G'.
GR_USER =       TB_NODES-TEXT1       = TEXT-046.
ENDIF.
TB_NODES-TEXT       = YMA_TR_JOP-YMA_USERNM.
*       APPEND TB_NODES.
************include
*       CLEAR TB_NODES.

IF YMA_TR_JOP-Y_ALRT_E_I = 'E'.
TB_NODES-TEXT4     = TEXT-023.
TB_NODES-TLENGTH4 = 8.
TB_NODES-TCOLOR4 = 3.
ELSEIF
YMA_TR_JOP-Y_ALRT_E_I = 'I'.
TB_NODES-TEXT4    = TEXT-022.
ENDIF.
*        TB_NODES-COLOR      = G_2_COLOR.
*        TB_NODES-INTENSIV   = '1'.
*        TB_NODES-TCOLOR     = G_N4_COLOR.
*        TB_NODES-TLENGTH    = 10.
*        TB_NODES-TLEVEL     = 6.
*        TB_NODES-COLOR = 2.
*        TB_NODES-TCOLOR = 4.
*        TB_NODES-TINTENSIV = 0.
*        TB_NODES-INTENSIV = 1.
TB_NODES-TEXT6 = 'JIbPUI'.
TB_NODES-TEXT6+7(12) = YMA_TR_JOP-YMA_USERNM. "user/group name
TB_NODES-TEXT6+20(8) = GR_USER."user ? group

APPEND TB_NODES.

IF YMA_TR_JOP-Y_ALRT_E_I NE 'E'.
SELECT * FROM YMA_TR_JOP
WHERE
YMA_USERNM  =   YMA_TR_JOP-YMA_USERNM
ORDER BY YMA_USERNM YMA_PARAME YMA_SUBKEY.
SELECT  SINGLE * FROM YMA_TR_JOB
WHERE YMA_PARAME = YMA_TR_JOP-YMA_PARAME
AND YMA_SUBKEY = YMA_TR_JOP-YMA_SUBKEY
AND LANG = SY-LANGU(1).
******************************************************************
****************************include exlude ***********************
ON CHANGE OF YMA_TR_JOB-YMA_DESC_S .
*********************primary descri
*ptio*********************************
CLEAR TB_NODES.
TB_NODES-TEXT6     =  YMA_TR_JOB-YMA_DESC_S.
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N2_COLOR.
TB_NODES-TLENGTH    = 60.
IF SY-LANGU(1) = 'D'.
TB_NODES-TLENGTH    = 66.
ENDIF.
TB_NODES-TLEVEL     = 7.
TB_NODES-TEXT       =  YMA_TR_JOB-YMA_DESC_S. "TEXT-012.
TB_NODES-TEXT6        = TEXT-017.
TB_NODES-TEXT6+4(20)  = TEXT-013. " USERNM
TB_NODES-TEXT6+29(20) = YMA_TR_JOP-YMA_PARAME. " USERNM
TB_NODES-TEXT6+50(12) = YMA_TR_JOP-YMA_USERNM.
APPEND TB_NODES.
ENDON.
**************secondary description.******************************
IF YMA_TR_JOP-YMA_SUBKEY NE SPACE.
ON CHANGE OF YMA_TR_JOP-YMA_PARAME
OR YMA_TR_JOP-YMA_SUBKEY.
CLEAR TB_NODES.
TB_NODES-TEXT6     =  YMA_TR_JOB-YMA_DESC_K.
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N2_COLOR.
TB_NODES-TLENGTH    = 22.
TB_NODES-TLEVEL     = 8.
TB_NODES-TEXT       =  YMA_TR_JOB-YMA_DESC_K.
TB_NODES-TEXT6        = TEXT-017.
TB_NODES-TEXT6+4(20)  = TEXT-013. " USERNM
TB_NODES-TEXT6+29(20) = YMA_TR_JOP-YMA_PARAME. " USERNM
TB_NODES-TEXT6+50(12) = YMA_TR_JOP-YMA_USERNM.
APPEND TB_NODES.
ENDON.
ENDIF.
********************
ON CHANGE OF
YMA_TR_JOP-YMA_PARAME
OR YMA_TR_JOP-YMA_SUBKEY.
PERFORM YMA_JOB_DETLS.
ENDON.
G_JOB_USERNM = YMA_TR_JOP-YMA_USERNM.
*             G_JOB_PARAME = YMA_TR_JOP-YMA_PARAME.
ENDSELECT.
*           G_JOB_USERNM = YMA_TR_JOP-YMA_USERNM.
G_JOB_PARAME = YMA_TR_JOP-YMA_PARAME.
*        ENDIF.
ENDIF.
ENDON.

ENDSELECT.

ENDFORM.                             " JOB_LIST
*&---------------------------------------------------------------------*
*&      Form  JOB_WIDE_TO_DEEP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.
*----------------------------------------------------------------------*
FORM YMA_JOB_WIDE_TO_DEEP.
ENDFORM.                             " JOB_WIDE_TO_DEEP
*&---------------------------------------------------------------------*
*&      Form  BUILD_INTAB_JOB2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*            TB_NODES-TEXT1 = SPACE.
*            TB_NODES-TLENGTH1    = 0.
********************
*            IF SY-SUBRC = 0.
*              G_TRANFL = 1.
*            ENDIF.
*----------------------------------------------------------------------*
FORM YMA_BUILD_INTAB_JOB2.
CLEAR TB_NODES.
TB_NODES-COLOR     = G_1_COLOR.
*      TB_NODES-INTENSIV  = '1'.
TB_NODES-TCOLOR     = G_N1_COLOR.
TB_NODES-TLENGTH   = 12.
TB_NODES-TLEVEL    = 3.
TB_NODES-TEXT7 = 'JobM'.
TB_NODES-COLOR     = G_1_COLOR.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TEXT = TEXT-030.          "= G_N2_COLOR.
TB_NODES-TCOLOR     = G_4_COLOR.
TB_NODES-TINTENSIV = 1.
*
APPEND TB_NODES.
*
LOOP AT TB_JOB_TREE.
CLEAR TB_NODES.
TB_NODES-TEXT7 = 'JobM'.
TB_NODES-TEXT      = TB_JOB_TREE-YMA_JOB.
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N2_COLOR.
TB_NODES-TLENGTH    = 20.
TB_NODES-TLEVEL     = 4.
TB_NODES-TEXT6      = TB_JOB_TREE-YMA_JOB. "TEXT-012.
APPEND TB_NODES.

TB_NODES-TLEVEL    = 5.
TB_NODES-TEXT7 = 'JobM'.
TB_NODES-TLENGTH = 1.
TB_NODES-TEXT    = 'SYM_DOCUMENT'.
TB_NODES-HOTSPOT = 'X'.
TB_NODES-KIND = 'S'.
TB_NODES-TCOLOR  = 3.
**********************Restore afterward *****************************
TB_NODES-TEXT1 = 'ICON_BUSINAV_PROC_EXIST'.
TB_NODES-TEXT7 = 'JobM'.
TB_NODES-KIND1 = 'I'.
TB_NODES-TLENGTH1 = 3.
TB_NODES-TLENGTH2 = 10.
TB_NODES-TEXT2 = TB_JOB_TREE-YOP_QT_YEL.
TB_NODES-TCOLOR2 = 1.
TB_NODES-TLENGTH3 = 19.
TB_NODES-TEXT3 = TEXT-007.
TB_NODES-TEXT4 = 'ICON_EXECUTE_OBJECT'.
TB_NODES-KIND4 = 'I'.
TB_NODES-TLENGTH4 = 3.
TB_NODES-HOTSPOT4 = 'X'.
TB_NODES-TEXT6    =  TB_TREE-YMA_USERNM.
TB_NODES-TEXT6   =  'JOB'.
TB_NODES-TEXT6+15 =  TB_JOB_TREE-YMA_JOB.
TB_NODES-TEXT6+47 =  'YEL'.
TB_NODES-TEXT6+50 =  TB_JOB_TREE-YOP_QT_YEL.
APPEND TB_NODES.
TB_NODES-TEXT7 = 'JobM'.
TB_NODES-TEXT3 = TEXT-031.
TB_NODES-TEXT2 = TB_JOB_TREE-YMA_PRT_JB.
TB_NODES-TEXT6+47 = 'PRT'.
TB_NODES-TEXT6+50 = TB_JOB_TREE-YMA_PRT_JB.
APPEND TB_NODES.
ENDLOOP.
ENDFORM.                             " BUILD_INTAB_JOB2
*&---------------------------------------------------------------------*
*&      Form  SECOND_SELECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SECOND_SELECT.
SELECT        * FROM  YMA_TREE_J
INTO TB_JOB_TREE.
APPEND TB_JOB_TREE.
ENDSELECT.

ENDFORM.                             " SECOND_SELECT
*&---------------------------------------------------------------------*
*&      Form  YMA_PROBL_SQL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_LOCK_MANAGEMENT.
DATA USERNM LIKE YMA_LOC_TR-YMA_USERNM.
DATA FL_EX TYPE I.
CLEAR TB_NODES.
TB_NODES-COLOR     = G_2_COLOR.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TCOLOR     = G_N1_COLOR.
TB_NODES-TLENGTH   = 20.
TB_NODES-TLEVEL    = 2.
*      TB_NODES-TEXT6 = TB_INST_NAME.
TB_NODES-TEXT       =  TEXT-051.
APPEND TB_NODES.
DATA TB_YMA_LOC_TR LIKE YMA_LOC_TR OCCURS 1 WITH HEADER LINE.
DATA LIN TYPE I.
SELECT * FROM  YMA_LOC_TR ORDER BY YMA_PARAME YMA_USERNM.
MOVE-CORRESPONDING YMA_LOC_TR TO TB_YMA_LOC_TR.
APPEND TB_YMA_LOC_TR.
ENDSELECT.
DESCRIBE TABLE TB_YMA_LOC_TR LINES LIN.
IF LIN < 2.
TB_YMA_LOC_TR-YMA_PARAME = 'LOCKS_TIME'.

APPEND TB_YMA_LOC_TR.
ENDIF.
SORT TB_YMA_LOC_TR BY YMA_PARAME..
LOOP   AT TB_YMA_LOC_TR.
*       WHERE  YMA_PARAME  = ___
*       AND    YMA_USERNM  = ___
*       AND    YMA_GR_USR  = ___
*       AND    YOP_QT_PRT  = ___
*       AND    YOP_QT_RED  = ___
*       AND    Y_ALRT_M_C  = ___
*       AND    YOP_QT_YEL  = ___
*       AND    Y_ALRT_E_I  = ___            .
USERNM = TB_YMA_LOC_TR-YMA_USERNM.
AT NEW   YMA_PARAME .

SELECT SINGLE * FROM  YMA_TR_LOC
WHERE  YMA_PARAME  = TB_YMA_LOC_TR-YMA_PARAME
AND    LANG        =  SY-LANGU(1).
*       AND    YMA_DESC_S  = ___

CLEAR TB_NODES.
TB_NODES-TEXT      = YMA_TR_LOC-YMA_DESC_S.
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N4_COLOR.
TB_NODES-TLENGTH    = 24.
TB_NODES-TLEVEL     = 4.
TB_NODES-COLOR = 2.
TB_NODES-TCOLOR = 7.
TB_NODES-TCOLOR     = G_4_COLOR.
TB_NODES-TINTENSIV = 1.
APPEND TB_NODES.

*        IF TB_YMA_LOC_TR-YMA_PARAME =  'LOCKS_TIME'.
SELECT * FROM  YMA_LOC_TR WHERE
YMA_PARAME = TB_YMA_LOC_TR-YMA_PARAME.
CLEAR TB_NODES.
TB_NODES-TEXT6     = YMA_LOC_TR-YMA_USERNM.
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N2_COLOR.
TB_NODES-TINTENSIV   = 1.
TB_NODES-TLENGTH    = 12.
TB_NODES-TLEVEL     = 6.
TB_NODES-TEXT       = YMA_LOC_TR-YMA_USERNM.
TB_NODES-TLENGTH1 = 6.
IF TB_YMA_LOC_TR-YMA_PARAME =  'LOCKS_TIME'.
IF YMA_LOC_TR-YMA_GR_USR = 'U'.
TB_NODES-TEXT1       = TEXT-045.
ELSEIF
YMA_LOC_TR-YMA_GR_USR = 'G'.
TB_NODES-TEXT1       = TEXT-046.
ENDIF.
TB_NODES-TEXT6        = TEXT-057.                 "Lock
TB_NODES-TEXT6+4(20)  = TEXT-013.               "
TB_NODES-TEXT6+29(20) = TB_YMA_LOC_TR-YMA_PARAME. " USERNM
TB_NODES-TEXT6+50(12) = TB_YMA_LOC_TR-YMA_USERNM.
IF YMA_LOC_TR-Y_ALRT_E_I = 'I'.
TB_NODES-TEXT4      = TEXT-022 .
TB_NODES-TLENGTH4 = 0.
ELSEIF
YMA_LOC_TR-Y_ALRT_E_I = 'E'.
TB_NODES-TEXT4      = TEXT-023 .
TB_NODES-TLENGTH4 = 13.
TB_NODES-TCOLOR4 =   3.  " color
TB_NODES-TINTENSIV4 = 1.
ENDIF.
APPEND TB_NODES.
ENDIF.
************************************************************************
CLEAR TB_NODES.
IF YMA_LOC_TR-Y_ALRT_E_I = 'I'.
TB_NODES-TEXT      = TEXT-022 .
ELSEIF
TB_YMA_LOC_TR-Y_ALRT_E_I = 'E'.
FL_EX = 1.
TB_NODES-TEXT      = TEXT-023 .
ENDIF.
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N4_COLOR.
TB_NODES-TLENGTH    = 9.
TB_NODES-TLEVEL     = 7.
TB_NODES-COLOR = 2.
TB_NODES-TCOLOR = 4.
TB_NODES-TINTENSIV = 0.
TB_NODES-INTENSIV = 1.
*            APPEND TB_NODES.
IF TB_YMA_LOC_TR-YMA_PARAME =  'LOCKS_TIME'.
IF YMA_LOC_TR-Y_ALRT_E_I = 'I'.
PERFORM YMA_LOC_DETAIL.
ENDIF.
ENDIF.
ENDSELECT.
*        ENDIF.
CLEAR TB_NODES.

IF  TB_YMA_LOC_TR-YMA_PARAME = 'LOCKS' .
PERFORM YMA_LOC_DETAIL1.
ENDIF.
ENDAT.

ENDLOOP.
*  ENDSELECT.
ENDFORM.                             " YMA_PROBL_SQL
*&---------------------------------------------------------------------*
*&      Form  YMA_PROBLEMATIC_SQL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
* DATA USER LIKE YMA_SQL_TR-Y_MSNAME.
*---------------------------------------------------------------------*
*       FORM YMA_PROBLEMATIC_SQL                                      *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
* DATA APP_FLAG TYPE I.
*---------------------------------------------------------------------*
*       FORM YMA_PROBLEMATIC_SQL                                      *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM YMA_PROBLEMATIC_SQL.
DATA:  FLAG TYPE I VALUE 1, FLAG2 TYPE I VALUE 1.
CLEAR TB_NODES.
TB_NODES-COLOR     = G_2_COLOR.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TCOLOR     = G_N1_COLOR.
TB_NODES-TLENGTH   = 20.
TB_NODES-TLEVEL    = 2.
TB_NODES-TEXT       =  TEXT-059.
APPEND TB_NODES.
CLEAR YMA_SQL_TR.
SELECT * FROM  YMA_SQL_TR
ORDER BY Y_PARAME Y_USER Y_TCODE Y_PROGRAM.
*
ON CHANGE OF YMA_SQL_TR-Y_PARAME.
SELECT SINGLE * FROM  YMA_TR_SQL
WHERE  Y_PARAME  = YMA_SQL_TR-Y_PARAME
AND    LANG        =  SY-LANGU(1).
CLEAR TB_NODES.
CLEAR YMA_SQL_TR.
MOVE-CORRESPONDING YMA_TR_SQL TO YMA_SQL_TR.
TB_NODES-TEXT      = YMA_TR_SQL-YMA_DESC_S.
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N4_COLOR.
TB_NODES-TLENGTH    = 40.
TB_NODES-TLEVEL     = 4.
TB_NODES-COLOR = 2.
TB_NODES-TEXT6 = 'Problematic SQL'(070).
TB_NODES-TCOLOR     = G_4_COLOR.
TB_NODES-TINTENSIV = 1.
TB_NODES-TEXT6 = 'm_sql_SQL'.
TB_NODES-TEXT7 = YMA_SQL_TR.
TB_NODES-TEXT8 = YMA_SQL_TR+75.
APPEND TB_NODES.
LOOP AT TB_INST_NAME.
*        SELECT * FROM  YMA_SQL_TR WHERE  Y_PARAME = YMA_SQL_TR-Y_PARAME
*         AND Y_MSNAME  = TB_INST_NAME-YOP_MSNAME.
TB_NODES-TLENGTH3 = 0.
TB_NODES-TLENGTH4 = 0.
TB_NODES-HOTSPOT4 = SPACE.
TB_NODES-TEXT1 = TB_INST_NAME-IS_ACTIVE.
TB_NODES-KIND1 = SPACE.
TB_NODES-TLENGTH1 = 12.
TB_NODES-TCOLOR1 = 0.
IF TB_INST_NAME-IS_ACTIVE NE SPACE.
TB_NODES-TCOLOR1 = 6.      "color
ENDIF.
TB_NODES-TLENGTH2 = 0.
TB_NODES-TEXT9 = SPACE.
TB_NODES-KIND = SPACE.
TB_NODES-COLOR     = G_2_COLOR.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TLENGTH   = 22.
TB_NODES-TLEVEL    = 5.
TB_NODES-TEXT      = TB_INST_NAME-YOP_MSNAME.
TB_NODES-TEXT6      = TB_INST_NAME-YOP_MSNAME.
TB_NODES-TCOLOR     = 7.
TB_NODES-TINTENSIV = 1.
TB_NODES-TEXT6 = 'm_sql_APP'.
TB_NODES-TEXT7 = TB_INST_NAME-YOP_MSNAME.

*       ON CHANGE OF YMA_SQL_TR-Y_MSNAME OR YMA_SQL_TR-Y_PARAME.
APPEND TB_NODES.
*ENDON.
CLEAR TB_NODES.
SELECT * FROM  YMA_SQL_TR WHERE  Y_PARAME = YMA_SQL_TR-Y_PARAME
AND Y_MSNAME  = TB_INST_NAME-YOP_MSNAME
ORDER BY    Y_USER Y_TCODE Y_PROGRAM.
****************  User names block *********************************
CLEAR TB_NODES.
TB_NODES-TEXT6     = YMA_SQL_TR-Y_USER."TB_TREE-YMA_USERNM
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N2_COLOR.
TB_NODES-TINTENSIV   = 1.
TB_NODES-TLENGTH    = 12.
TB_NODES-TLEVEL     = 6.
*"TEXT-012.
TB_NODES-TEXT       = YMA_SQL_TR-Y_USER. "TEXT-012.
TB_NODES-TEXT1       = TEXT-046.
TB_NODES-TLENGTH1 = 7.
IF YMA_SQL_TR-Y_GR_USR = 'U'.
TB_NODES-TEXT1       = 'User'(045).
ELSEIF
YMA_SQL_TR-Y_GR_USR = 'G'.
TB_NODES-TEXT1       = 'Group'(046).
ENDIF.
TB_NODES-TLENGTH4 = 13.
IF YMA_SQL_TR-Y_ALRT_E_I = 'I'.
TB_NODES-TEXT4     = 'Include'(022).
TB_NODES-TLENGTH4 = 0.
ELSEIF
YMA_SQL_TR-Y_ALRT_E_I = 'E'.
TB_NODES-TEXT4     = 'Exclude'(023) .
TB_NODES-TCOLOR4 = 3 .
TB_NODES-TINTENSIV4 = 'X' .
ENDIF.
TB_NODES-TEXT6 = 'm_sql_USER'.
TB_NODES-TEXT7 = YMA_SQL_TR.
TB_NODES-TEXT8 = YMA_SQL_TR+75.

**********Avoid not showing old user name at new App. server

APP_FLAG = 0.
ON CHANGE OF YMA_SQL_TR-Y_MSNAME .
IF FLAG NE 1.
APPEND TB_NODES.
ENDIF.
APP_FLAG = 1.            " Up flag " User alredy  shown
ENDON.
IF FLAG = 1.
APP_FLAG = 0.
FLAG = 0.
ENDIF.



IF APP_FLAG NE 1.
************* Show only once duplicated user names at same app. server
ON CHANGE OF   YMA_SQL_TR-Y_USER ."OR YMA_SQL_TR-Y_PARAME .
APPEND TB_NODES.
ENDON.
ENDIF.

***********************************

*            IF YMA_SQL_TR-Y_ALRT_E_I = 'I'.
CLEAR TB_NODES.
IF YMA_SQL_TR-Y_ALRT_E_I = 'I'.
APP_FLAG = 0.
IF FLAG2 NE 1.
ON CHANGE OF YMA_SQL_TR-Y_GR_USR OR YMA_SQL_TR-Y_MSNAME.
PERFORM YMA_SQL_TRANSACT.
APP_FLAG = 1.
FLAG2 = 0.

ENDON.
ENDIF.
IF APP_FLAG NE 1.
ON CHANGE OF   YMA_SQL_TR-Y_TCODE OR  YMA_SQL_TR-Y_MSNAME.

PERFORM YMA_SQL_TRANSACT.
ENDON.
ENDIF.
PERFORM YMA_SQL_PROGRAM.

PERFORM YMA_SQL_DETAIL.
ENDIF.
ENDSELECT.
ENDLOOP.
ENDON.
ENDSELECT.

ENDFORM.                             " YMA_PROBLEMATIC_SQL
*&---------------------------------------------------------------------*
*&      Form  YMA_JOB_DETLS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_JOB_DETLS.
TB_NODES-TLEVEL    = 10.
TB_NODES-TLENGTH = 1.
TB_NODES-TEXT    = 'SYM_DOCUMENT'.
TB_NODES-HOTSPOT = 'X'.
TB_NODES-KIND = 'S'.
TB_NODES-TCOLOR  = 3.
***********************Restore afterward *****************************
TB_NODES-TEXT1 = 'ICON_BUSINAV_PROC_EXIST'.
TB_NODES-KIND1 = 'I'.
TB_NODES-TLENGTH1 = 3.
TB_NODES-TEXT2 = YMA_TR_JOP-YOP_QT_VAL.
TB_NODES-TLENGTH2 = 10.
*TB_NODES-TEXT2 = TB_TREE-YOP_QT_YEL.
TB_NODES-TCOLOR2 = 1.
TB_NODES-TLENGTH3 = 20.
TB_NODES-TEXT3 = TEXT-049.
TB_NODES-TEXT4 = 'ICON_EXECUTE_OBJECT'.
TB_NODES-KIND4 = 'I'.
TB_NODES-TLENGTH4 = 3.
TB_NODES-HOTSPOT4 = 'X'.
**TB_NODES-TLENGTH4 = 1.
TB_NODES-TEXT6(2)    = 'JB'.
TB_NODES-TEXT6+3(1) = 'V'.
TB_NODES-TEXT6+4(1) = YMA_TR_JOP-YMA_GR_USR.
TB_NODES-TEXT6+5(1) = YMA_TR_JOP-Y_ALRT_E_I.
*    TB_NODES-TEXT6+7(20)  = YMA_TR_JOP-YMA_MSNAME.
TB_NODES-TEXT6+28(12) = YMA_TR_JOP-YMA_USERNM.
TB_NODES-TEXT6+41(25) = YMA_TR_JOP-YMA_PARAME.
TB_NODES-TEXT6+67(8)  = YMA_TR_JOP-YMA_SUBKEY.
APPEND TB_NODES.
*********second nod
TB_NODES-TEXT3 = TEXT-050.
TB_NODES-TEXT2 = YMA_TR_JOP-YOP_QT_PRT.
TB_NODES-TEXT6(2)    = 'JB'.
TB_NODES-TEXT6+3(1) = 'P'.
APPEND TB_NODES.
ENDFORM.                             " YMA_JOB_DETLS
*&---------------------------------------------------------------------*
*&      Form  YMA_COPY_APPSERVER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
FORM YMA_COPY_APPSERVER.
READ TABLE TB_AUX_APP INDEX 1.
DATA NOD LIKE G_NODE-ID.

DATA CUR_IND LIKE NOD.
*    NOD = TB_NODES-ID.
NOD = ID .
DATA TTT LIKE NOD.
DATA TTX LIKE NOD.
MOVE-CORRESPONDING  TB_AUX_APP TO NODES.
NODES-TEXT6(20) = APSERVER.
CUR_IND = 1.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = NOD
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             =  IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
NOD = NOD + 1.

DATA INDEX TYPE I.
INDEX = 2.
DATA RELATIONSHIP(5).
DATA REL LIKE RELATIONSHIP.
DATA RELATE LIKE RELATIONSHIP.
DATA COMP TYPE I.
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
************************************************************************
RELATIONSHIP = 'CHILD'.
NOD = IO_NEW_ID .

SORT TB_AUX_APP ASCENDING.
LOOP AT TB_AUX_APP WHERE TLEVEL = '06'.
CUR_IND = CUR_IND + 1.
MOVE-CORRESPONDING TB_AUX_APP TO NODES.
NODES-TEXT6(20) = APSERVER.
*IF SY-TABIX > 2.
*RELATIONSHIP = 'NEXT'.
*ENDIF.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = NOD
RELATIONSHIP       = RELATIONSHIP
LINK               = ''
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
SORT TB_AUX_APP ASCENDING.
LOOP AT TB_AUX_APP WHERE TLEVEL = '07' AND PARENT = TB_AUX_APP-ID.
CUR_IND = CUR_IND + 1.
MOVE-CORRESPONDING TB_AUX_APP TO NODES.
NODES-TEXT6(20) = APSERVER.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = RELATIONSHIP
LINK               = ''
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
INDEX = INDEX + 1.
IF RELATIONSHIP = 'CHILD'.
RELATIONSHIP = 'NEXT'.
ENDIF.
SORT TB_AUX_APP ASCENDING.
LOOP AT TB_AUX_APP WHERE TLEVEL = '08' AND PARENT = TB_AUX_APP-ID.
CUR_IND = CUR_IND + 1.
MOVE-CORRESPONDING TB_AUX_APP TO NODES.
NODES-TEXT6(20) = APSERVER.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'CHILD'
LINK               = ''
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = TTT
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
INDEX = INDEX + 1.
RELATIONSHIP = 'NEXT'.
REL = 'CHILD'.
SORT TB_AUX_APP BY ID  ASCENDING.
LOOP AT TB_AUX_APP WHERE TLEVEL = '09' AND PARENT = TB_AUX_APP-ID.
CUR_IND = CUR_IND + 1.
MOVE-CORRESPONDING TB_AUX_APP TO NODES.
NODES-TEXT6(20) = APSERVER.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = TTT
RELATIONSHIP       = REL
LINK               = ''
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = TTT
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
INDEX = INDEX + 1.
RELATIONSHIP = 'NEXT'.
REL = 'NEXT'.
RELATE = 'CHILD'.
TTX = TTT.
SORT TB_AUX_APP ASCENDING.
LOOP AT TB_AUX_APP WHERE TLEVEL = '10' AND PARENT = TB_AUX_APP-ID.
CUR_IND = CUR_IND + 1.
MOVE-CORRESPONDING TB_AUX_APP TO NODES.
NODES-TEXT6(20) = APSERVER.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = TTX
RELATIONSHIP       = RELATE
LINK               = ''
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = TTX
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
INDEX = INDEX + 1.
RELATIONSHIP = 'NEXT'.
REL = 'NEXT'.
RELATE = 'NEXT'.
ENDLOOP.
ENDLOOP.

ENDLOOP.
ENDLOOP.
RELATIONSHIP = 'CHILD'.
ENDLOOP.
REFRESH TB_AUX_APP.
ENDFORM.                             " YMA_COPY_APPSERVER
*&---------------------------------------------------------------------*
*&      Form  YMA_CREATE_JOB_DET1
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
FORM YMA_CREATE_JOB_DET1.

NODES-TLENGTH = 1.
NODES-TEXT    = 'SYM_DOCUMENT'.
NODES-HOTSPOT = 'X'.
NODES-KIND = 'S'.
NODES-TCOLOR  = 3.
***********************Restore afterward *****************************
NODES-TEXT1 = 'ICON_BUSINAV_PROC_EXIST'.
NODES-KIND1 = 'I'.
NODES-TLENGTH1 = 3.
NODES-TEXT2 = YMA_TR_JOB-YOP_QT_VAL.
NODES-TLENGTH2 = 10.
NODES-TCOLOR2 = 1.
NODES-TLENGTH3 = 20.
NODES-TEXT3 = TEXT-049.
NODES-TEXT4 = 'ICON_EXECUTE_OBJECT'.
NODES-KIND4 = 'I'.
NODES-TLENGTH4 = 3.
NODES-HOTSPOT4 = 'X'.
NODES-TEXT6 = SPACE.                                    "
NODES-TEXT6(2)    = 'JB'.
NODES-TEXT6+3(1) = 'V'.
NODES-TEXT6+4(1) = GR_USER.
NODES-TEXT6+5(1) = 'I'.            "YMA_TR_JOB-Y_ALRT_E_I.
NODES-TEXT6+7(20)  = G_NODE-TEXT.
NODES-TEXT6+28(12) = US_NAME.
NODES-TEXT6+41(25) = YMA_TR_JOB-YMA_PARAME.
NODES-TEXT6+67(8)  = YMA_TR_JOB-YMA_SUBKEY.
DATA NEW LIKE IO_NEW_ID.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'JOB SYSTEM'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       =  'CHILD'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = NEW
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.


NODES-TEXT6(2)    = 'JB'.
NODES-TEXT6+3(1) = 'P'.
NODES-TEXT3 = TEXT-050.
NODES-TEXT2 = YMA_TR_JOB-YOP_QT_PRT.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'JOB SYSTEM'
INSERT_ID          = NEW
RELATIONSHIP       =  'NEXT'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = NEW
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.



ENDFORM.                             " YMA_CREATE_JOB_DET1
*&---------------------------------------------------------------------*
*&      Form  YMA_ADD_NODE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_ADD_NODE1.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'JOB SYSTEM'
INSERT_ID          = G_NODE-ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.

ENDFORM.                             " YMA_ADD_NODE
*&---------------------------------------------------------------------*
*&      Form  YMA_CHANGE_INCLUDE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_CHANGE_INCLUDE USING CLASS .
DATA TEXTX(15).
DATA TEXT(59).
TEXTX = 'from group'(062).
CONCATENATE:
TEXTX  CLASS    INTO TEXT
SEPARATED BY ' ' .
CALL FUNCTION 'POPUP_TO_DECIDE'
EXPORTING
*         DEFAULTOPTION  = '1'
TEXTLINE1      = '@19@One or more users '(061)
TEXTLINE2      = TEXT
TEXTLINE3      = 'were already defined.'(064)
TEXT_OPTION1   = '@1P@Exclude All'(025)
TEXT_OPTION2   = '@02@Cancel'(026)
TITEL          = 'Choose your Action'(019)
*         START_COLUMN   = 25
*         START_ROW      = 6
CANCEL_DISPLAY = SPACE
IMPORTING
ANSWER         = G_ANSWER
EXCEPTIONS
OTHERS         = 1.

SY = SY.                                                "m
IF G_ANSWER = '1'.
LOOP AT TB_NODES WHERE TEXT6(6) = 'JIbPUI' AND
TEXT1 = 'User'(045).
*                            TEXT6+20(8) = 'User'(045).

SELECT SINGLE * FROM   USR02      CLIENT SPECIFIED
WHERE  MANDT       =  SY-MANDT
AND    BNAME       = TB_NODES-TEXT.
*                                              TB_NODES-TEXT6+7(12).
IF USR02-CLASS = CLASS.
PERFORM YMA_CHANGE_SAVE_EXCLUDE USING USR02-BNAME.
TB_NODES-TEXT4 = 'Exclude'(023).
TB_NODES-TLENGTH4 = 8.
TB_NODES-TINTENSIV4 = 1.
TB_NODES-TCOLOR4 = 3 .

CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = TB_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
YMA_JB_CHANGE_INCLUDE-YMA_USERNM = USR02-BNAME.
"TB_NODES-TEXT6+7(12).
COLLECT YMA_JB_CHANGE_INCLUDE.
DATA XXID LIKE TB_NODES-ID.

XXID = TB_NODES-ID.
LOOP AT  TB_NODES WHERE PARENT = XXID.

CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = TB_NODES-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
ENDLOOP.

ENDIF.
ENDLOOP.
*  PERFORM YMA_CHANGE_SAVE_EXCLUDE USING .
PERFORM YMA_RECOGN_NEW_TREE.
ENDIF.
ENDFORM.                             " YMA_CHANGE_INCLUDE
*&---------------------------------------------------------------------*
*&      Form  TR_AUTHORITY_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_1682   text                                                *
*      -->P_1683   text                                                *
*      -->P_1684   text                                                *
*      -->P_1685   text                                                *
*      <--P_AUTH_VAL  text                                             *
*----------------------------------------------------------------------*
FORM TR_AUTHORITY_CHECK USING    PROD
PARAM
AUTHORITY
OP
CHANGING P_AUTH_VAL.

CLEAR AUTH_VAL.

SELECT SINGLE * FROM YMA_OT_GP
WHERE PARAM_NAME = 'AUTHORITY_CHECK'.

CHECK YMA_OT_GP-IN_VALUE EQ '1'.

CALL FUNCTION 'Y_GO_AUTHORITY_CHECK'
EXPORTING
PRODUCT        = PROD
PARAMETER      = PARAM
AUTHORITY      = AUTHORITY
OPERATION      = OP
*         MESSAGE_TYPE   =
EXCEPTIONS
NO_AUTHORITY   = 1
DEFINE_PROBLAM = 2
OTHERS         = 3.

P_AUTH_VAL = SY-SUBRC.
ENDFORM.                             " TR_AUTHORITY_CHECK
*&---------------------------------------------------------------------*
*&      Form  YMA_AUTHORIZATIONS_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_AUTHORIZATIONS_CHECK.
CALL SCREEN 0218  STARTING AT 1 7  ENDING AT 40 10.
ENDFORM.                    " YMA_AUTHORIZATIONS_CHECK
