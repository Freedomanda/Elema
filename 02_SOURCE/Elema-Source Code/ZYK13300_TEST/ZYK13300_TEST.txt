*----------------------------------------------------------------------*
*  売掛管理データ作成                                                  *
*    機能：検収データ、売上データ、入金予定データ、伝票明細より、      *
*          売上照合の結果を、得意先ごとに一覧可能なデータを作成する    *
*          このプログラムで作成したデータを用いて、帳票を作成する      *
*          プログラムがある（YK013400）                                *
*          データ作成と帳票作成を分離したのは、データのみを他の        *
*          プログラム（SAPMYK31）でも使用するため                      *
*    前提：                                                            *
*    受注先１：１支払人、支払人ｎ：１入金先の階層を想定                *
*    会計で起票した得意先明細の参照キー１には、支払人コードが格納され  *
*    ていることを想定                                                  *
*    作成：2002/06/03 KURANO                                           *
*    変更：2002/08/05 KURANO 締日の反映もれを修正                      *
*    変更：2002/08/07 KURANO 高千穂請求書対応のバグ修正                *
*    変更：2002/08/29 KURANO 未入力への加算対象を変更                  *
*    変更：2002/10/02 KAJISA アンマッチ時、締日以前を対象に変更        *
*    変更：2002/11/05 KAJSIA 検収税込金額取得ロジック修正              *
*    変更：2002/11/08 KAJSIA 入金予定の検索条件                        *
*    変更：2002/11/15 KAJSIA 営業所営業GRP取得ロジック変更             *
*    変更：2002/12/04 KAJSIA 高千穂請求書対象のチェックの追加          *
*    変更：2002/12/11 KAJSIA アンマッチ金額と、残高差違の算出方変更    *
*    変更：2002/12/13 KAJSIA YK310読み込みエラー時の対応               *
*    変更：2003/05/06 ABE    営業Ｇスペース処理対応                    *
*    変更：2006/03/14 MIKAMI XXX対応                                   *
*----------------------------------------------------------------------*
REPORT YK013300 .

* 使用テーブル
TABLES BSID.  "会計管理: 得意先の二次索引
TABLES BSAD.  "会計管理: 得意先の二次索引 (決済明細)
TABLES KNVV.  "得意先マスタ: 販売データ
TABLES KNVP.  "得意先マスタ 取引先機能
TABLES YK110. "検収データ
TABLES YK130. "売上データ
TABLES YK310. "入金予定データ
TABLES YK330. "売掛管理表
TABLES STXH.  "STXD SAPscript テキストファイルヘッダ 2002/08/07

* グローバル変数
DATA I_YK330 LIKE STANDARD TABLE OF YK330 WITH HEADER LINE.
*2002/11/05 ADD START
DATA:BEGIN OF ST_K_SUM,  "当日締日のみの入金予定計
BUKRS        LIKE YK330-BUKRS,
KUNNR        LIKE YK330-KUNNR,
VKORG        LIKE YK330-VKORG,
VTWEG        LIKE YK330-VTWEG,
SPART        LIKE YK330-SPART,
* ZFBDT        LIKE YK330-ZFBDT,
WAERS        LIKE YK330-WAERS,
VKBUR        LIKE YK330-VKBUR,
VKGRP        LIKE YK330-VKGRP,
NYUKINYOTEI  LIKE YK330-NYUKINYOTEI,
END OF ST_K_SUM.
DATA I_K_SUM LIKE  STANDARD TABLE OF ST_K_SUM WITH HEADER LINE.
DATA:WK_TDNAME LIKE STXH-TDNAME. "2002/12/04 ADD
DATA:FLG_YK310ERR. "2002/12/13 ADD
DATA:FLG_KUNNR_N1. "1件のみ入力チェック2002/12/13 ADD
DATA:FLG_VKBUR_N1. "1件のみ入力チェック2002/12/13 ADD
DATA:FLG_VKGRP_N1. "1件のみ入力チェック2002/12/13 ADD
*2002/11/05 ADD END
* 選択画面
PARAMETERS P_BUKRS LIKE YK330-BUKRS OBLIGATORY. "会社コード
PARAMETERS P_VKORG LIKE YK330-VKORG OBLIGATORY. "販売組織
PARAMETERS P_VTWEG LIKE YK330-VTWEG OBLIGATORY. "流通チャネル
PARAMETERS P_SPART LIKE YK330-SPART OBLIGATORY. "製品部門
PARAMETERS P_ZFBDT LIKE YK330-ZFBDT OBLIGATORY. "締日
SELECT-OPTIONS S_KUNNR FOR YK330-KUNNR. "得意先コード
SELECT-OPTIONS S_VKBUR FOR YK330-VKBUR. "営業所
SELECT-OPTIONS S_VKGRP FOR YK330-VKGRP. "営業グループ
SELECT-OPTIONS S_HKONT FOR BSID-HKONT. "売掛金勘定コード
PARAMETERS P_TDID LIKE STXH-TDID. "テキストID 2002/08/07

*----------------------------------------------------------------------*
INITIALIZATION.
PERFORM F_INIT. "選択画面初期化

START-OF-SELECTION.
PERFORM F_URIKAKEZAN.  "売掛残①
PERFORM F_KENSYU.      "当月検収額②
PERFORM F_ZENZENMIKEN. "前々回以前未検収③
PERFORM F_ZENMIKEN.    "前回以前未検収④
PERFORM F_TOUMIKEN.    "当回以前未検収⑤
PERFORM F_MINYURYOKU.  "未入力⑥
PERFORM F_UNMATCH.     "アンマッチ⑦
PERFORM F_NYUKINYOTEI. "入金予定⑧
PERFORM F_SAI.         "残高差異⑨
PERFORM F_UPDATE.      "テーブル更新

*---------------------------------------------------------------------*
*       FORM f_init                                                   *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_INIT.
* 選択画面の初期化
GET PARAMETER ID 'BUK' FIELD P_BUKRS. "会社コード
GET PARAMETER ID 'VKO' FIELD P_VKORG. "販売組織
GET PARAMETER ID 'VTW' FIELD P_VTWEG. "流通チャネル
GET PARAMETER ID 'SPA' FIELD P_SPART. "製品部門
P_TDID = 'ZK01'. "テキストID 2002/08/07
WRITE:'kokohadoudesuka?'.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_urikakezan                                             *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_URIKAKEZAN.
* ローカル変数
TYPES: BEGIN OF ST_BSID,
BUKRS LIKE BSID-BUKRS,
KUNNR LIKE BSID-KUNNR,
XREF1 LIKE BSID-XREF1, "支払人＝受注先
WAERS LIKE BSID-WAERS,
SHKZG LIKE BSID-SHKZG,
WRBTR LIKE BSID-WRBTR,
VKBUR LIKE KNVV-VKBUR, "営業所
VKGRP LIKE KNVV-VKGRP, "営業グループ
END OF ST_BSID.
DATA I_BSID TYPE STANDARD TABLE OF ST_BSID WITH HEADER LINE.
* 未決済明細検索
SELECT BUKRS KUNNR XREF1 WAERS SHKZG SUM( WRBTR )
FROM   BSID
INTO   TABLE I_BSID
WHERE  BUKRS  = P_BUKRS  "指定された会社
AND    KUNNR IN S_KUNNR  "指定された得意先
AND    BUDAT <= P_ZFBDT  "締日以前に転記
AND    HKONT IN S_HKONT  "売掛金勘定
GROUP  BY BUKRS KUNNR XREF1 WAERS SHKZG.
* 決済明細検索
SELECT BUKRS KUNNR XREF1 WAERS SHKZG SUM( WRBTR )
FROM   BSAD
APPENDING TABLE I_BSID
WHERE  BUKRS  = P_BUKRS  "指定された会社
AND    KUNNR IN S_KUNNR  "指定された得意先
AND    BUDAT <= P_ZFBDT  "締日以前に転記
AND    AUGDT  > P_ZFBDT  "締日の後で決済
AND    HKONT IN S_HKONT  "売掛金勘定
GROUP  BY BUKRS KUNNR XREF1 WAERS SHKZG.
* 営業所/営業グループの取付けと更新用内部テーブルへの保存
* （営業所/営業グループは、得意先マスタで決定される）
SORT I_BSID BY XREF1 KUNNR.
LOOP AT I_BSID.
*    IF I_BSID-XREF1 IS INITIAL.               "2002/11/15 DEL
* 2003/05/06 MOD-S
*      SELECT SINGLE VKBUR VKGRP
*             FROM   KNVV
*             INTO   (I_BSID-VKBUR,I_BSID-VKGRP)
SELECT SINGLE VKBUR
FROM   KNVV
INTO   (I_BSID-VKBUR)
* 2003/05/06 MOD-E
WHERE  KUNNR  = I_BSID-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART.
*    ELSE.                                     "2002/11/15 DEL START
*      SELECT SINGLE VKBUR VKGRP
*             FROM   KNVV
*             INTO   (I_BSID-VKBUR,I_BSID-VKGRP)
*             WHERE  KUNNR  = I_BSID-XREF1
*             AND    VKORG  = P_VKORG
*             AND    VTWEG  = P_VTWEG
*             AND    SPART  = P_SPART.
*      IF SY-SUBRC = 0.
*        I_BSID-KUNNR = I_BSID-XREF1. "得意先コード←支払人
*      ELSE.
*        SELECT SINGLE VKBUR VKGRP
*               FROM   KNVV
*               INTO   (I_BSID-VKBUR,I_BSID-VKGRP)
*               WHERE  KUNNR  = I_BSID-KUNNR
*               AND    VKORG  = P_VKORG
*               AND    VTWEG  = P_VTWEG
*               AND    SPART  = P_SPART.
*      ENDIF.
*    ENDIF.                                   "2002/11/15 DEL END
* 2003/05/06 MOD-S
*    IF I_BSID-VKBUR IN S_VKBUR AND
*       I_BSID-VKGRP IN S_VKGRP.
IF I_BSID-VKBUR IN S_VKBUR.
* 2003/05/06 MOD-E
CLEAR I_YK330.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNRG
WHERE  KUNNR  = I_BSID-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'PY'. "支払人（RG）
IF SY-SUBRC <> 0.
I_YK330-KUNRG = I_BSID-KUNNR.
ENDIF.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNR1
WHERE  KUNNR  = I_BSID-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'Y3'. "入金先（Y3）
IF SY-SUBRC <> 0.
I_YK330-KUNR1 = I_BSID-KUNNR.
ENDIF.
I_YK330-BUKRS = P_BUKRS.
I_YK330-KUNNR = I_BSID-KUNNR.
I_YK330-VKORG = P_VKORG.
I_YK330-VTWEG = P_VTWEG.
I_YK330-SPART = P_SPART.
I_YK330-ZFBDT = P_ZFBDT.
I_YK330-WAERS = I_BSID-WAERS.
I_YK330-VKBUR = I_BSID-VKBUR.
I_YK330-VKGRP = I_BSID-VKGRP.
IF I_BSID-SHKZG = 'S'. "借方が正
I_YK330-URIKAKEZAN = I_BSID-WRBTR.
ELSE.
I_YK330-URIKAKEZAN = I_BSID-WRBTR * -1.
ENDIF.
IF I_BSID-VKBUR IN S_VKBUR AND "選択条件に合致
* 2003/05/06 DEL-S
*         I_BSID-VKGRP IN S_VKGRP AND
* 2003/05/06 DEL-E
I_BSID-KUNNR IN S_KUNNR.
APPEND I_YK330.
ENDIF.
ENDIF.
ENDLOOP.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_kensyu                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_KENSYU.
* ローカル変数
TYPES: BEGIN OF ST_YK110,
KUNNR LIKE YK110-KUNNR,
VKBUR LIKE YK110-VKBUR,
VKGRP LIKE YK110-VKGRP,
WAERS LIKE YK110-WAERS,
KNETXAMT LIKE YK110-KNETXAMT,
END OF ST_YK110.
DATA I_YK110 TYPE STANDARD TABLE OF ST_YK110 WITH HEADER LINE.
* 当月検収額検索
REFRESH I_YK110.
SELECT KUNNR VKBUR VKGRP WAERS SUM( KNETXAMT )
FROM   YK110
INTO   TABLE  I_YK110
WHERE  BUKRS   = P_BUKRS
AND    DELFLG  = SPACE
AND    KUNNR  IN S_KUNNR
AND    VKORG   = P_VKORG
AND    VTWEG   = P_VTWEG
AND    SPART   = P_SPART
AND    VKBUR  IN S_VKBUR
AND    VKGRP  IN S_VKGRP
AND    ZFBDT   = P_ZFBDT "当月分
GROUP  BY KUNNR VKBUR VKGRP WAERS.
* 更新用内部テーブルへ保存
LOOP AT I_YK110.
CLEAR I_YK330.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNRG
WHERE  KUNNR  = I_YK110-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'PY'. "支払人（RG）
IF SY-SUBRC <> 0.
I_YK330-KUNRG = I_YK110-KUNNR.
ENDIF.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNR1
WHERE  KUNNR  = I_YK110-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'Y3'. "入金先（Y3）
IF SY-SUBRC <> 0.
I_YK330-KUNR1 = I_YK110-KUNNR.
ENDIF.
I_YK330-BUKRS = P_BUKRS.
I_YK330-KUNNR = I_YK110-KUNNR.
I_YK330-VKORG = P_VKORG.
I_YK330-VTWEG = P_VTWEG.
I_YK330-SPART = P_SPART.
I_YK330-ZFBDT = P_ZFBDT.
I_YK330-WAERS = I_YK110-WAERS.
I_YK330-VKBUR = I_YK110-VKBUR.
I_YK330-VKGRP = I_YK110-VKGRP.
I_YK330-KENSYU = I_YK110-KNETXAMT. "当月検収額←税込金額
APPEND I_YK330.
ENDLOOP.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_zenzenmiken                                            *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_ZENZENMIKEN.
* ローカル変数
DATA W_DATE LIKE SY-DATUM.
* 2006/03/14 INS START
DATA: LW_LINE TYPE TLINE.
* 2006/03/14 INS END
TYPES: BEGIN OF ST_YK130,
KUNNR LIKE YK130-KUNNR,
VKBUR LIKE YK130-VKBUR,
VKGRP LIKE YK130-VKGRP,
WAERS LIKE YK130-WAERS,
KNETXAMT LIKE YK130-KNETXAMT,
END OF ST_YK130.
DATA I_YK130 TYPE STANDARD TABLE OF ST_YK130 WITH HEADER LINE.
* 前々回の締日の作成
CALL FUNCTION 'LAST_DAY_OF_MONTHS'
EXPORTING
DAY_IN            = P_ZFBDT
IMPORTING
LAST_DAY_OF_MONTH = W_DATE
EXCEPTIONS
DAY_IN_NO_DATE    = 1
OTHERS            = 2.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
IF P_ZFBDT = W_DATE. "締日が月末の場合
W_DATE+6(2) = '01'. "当月月初
W_DATE = W_DATE - 1. "前月月末
W_DATE+6(2) = '01'. "前月月初
W_DATE = W_DATE - 1. "前々月月末
ELSE. "締日が月末でない場合
W_DATE+6(2) = '01'. "当月月初
W_DATE = W_DATE - 1. "前月月末
W_DATE+6(2) = '01'. "前月月初
W_DATE = W_DATE - 1. "前々月月末
W_DATE+6(2) = P_ZFBDT+6(2).
ENDIF.
* 売上データの検索
SELECT KUNNR VKBUR VKGRP WAERS SUM( KNETXAMT )
FROM   YK130
INTO   TABLE  I_YK130
WHERE  KEKKBN  = '1' "未検収
AND    KUNNR  IN S_KUNNR
AND    VKORG   = P_VKORG
AND    VTWEG   = P_VTWEG
AND    SPART   = P_SPART
AND    VKBUR  IN S_VKBUR
AND    VKGRP  IN S_VKGRP
AND    BUKRS   = P_BUKRS
AND    ZFBDT  <= W_DATE  "前々回以前
GROUP  BY KUNNR VKBUR VKGRP WAERS.
* 更新用内部テーブルへ保存
LOOP AT I_YK130.
* 2006/03/14 MOD START
*    CLEAR:I_YK330,WK_TDNAME.
CLEAR:I_YK330,WK_TDNAME,LW_LINE.
* 2006/03/14 MOD END
***2002.12.04 add >>>
WK_TDNAME+0(10) = I_YK130-KUNNR.
WK_TDNAME+10(4) = P_BUKRS.
* 2006/03/14 MOD START
*    SELECT SINGLE TDNAME INTO STXH-TDNAME FROM  STXH
*           WHERE  TDOBJECT  = 'KNB1'
*           AND    TDNAME    = WK_TDNAME
*           AND    TDID      = P_TDID
*           AND    TDSPRAS   = SY-LANGU.
*    IF SY-SUBRC = 0.
*      CONTINUE.
*    ENDIF.
PERFORM GET_KAIKEI_TEXT USING WK_TDNAME    "前々回未検収
CHANGING LW_LINE.
CASE LW_LINE.
WHEN SPACE.
WHEN 'X'.
CONTINUE.
WHEN 'XX'.
CONTINUE.
WHEN 'XXX'.
WHEN OTHERS.
ENDCASE.
* 2006/03/14 MOD END
***2002.12.04 add <<<
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNRG
WHERE  KUNNR  = I_YK130-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'PY'. "支払人（RG）
IF SY-SUBRC <> 0.
I_YK330-KUNRG = I_YK130-KUNNR.
ENDIF.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNR1
WHERE  KUNNR  = I_YK130-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'Y3'. "入金先（Y3）
IF SY-SUBRC <> 0.
I_YK330-KUNR1 = I_YK130-KUNNR.
ENDIF.
I_YK330-BUKRS = P_BUKRS.
I_YK330-KUNNR = I_YK130-KUNNR.
I_YK330-VKORG = P_VKORG.
I_YK330-VTWEG = P_VTWEG.
I_YK330-SPART = P_SPART.
I_YK330-ZFBDT = P_ZFBDT. "締日
I_YK330-WAERS = I_YK130-WAERS.
I_YK330-VKBUR = I_YK130-VKBUR.
I_YK330-VKGRP = I_YK130-VKGRP.
I_YK330-ZENZENMIKEN = I_YK130-KNETXAMT. "前々回未検収←税込金額
APPEND I_YK330.
ENDLOOP.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_zenmiken                                               *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_ZENMIKEN.
* ローカル変数
DATA W_DATE LIKE SY-DATUM.
* 2006/03/16 INS START
DATA: LW_LINE TYPE TLINE.
* 2006/03/16 INS END
TYPES: BEGIN OF ST_YK130,
KUNNR LIKE YK130-KUNNR,
VKBUR LIKE YK130-VKBUR,
VKGRP LIKE YK130-VKGRP,
WAERS LIKE YK130-WAERS,
KNETXAMT LIKE YK130-KNETXAMT,
END OF ST_YK130.
DATA I_YK130 TYPE STANDARD TABLE OF ST_YK130 WITH HEADER LINE.
* 前回の締日の作成
CALL FUNCTION 'LAST_DAY_OF_MONTHS'
EXPORTING
DAY_IN            = P_ZFBDT
IMPORTING
LAST_DAY_OF_MONTH = W_DATE
EXCEPTIONS
DAY_IN_NO_DATE    = 1
OTHERS            = 2.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
IF P_ZFBDT = W_DATE. "締日が月末の場合
W_DATE+6(2) = '01'. "当月月初
W_DATE = W_DATE - 1. "前月月末
ELSE. "締日が月末でない場合
W_DATE+6(2) = '01'. "当月月初
W_DATE = W_DATE - 1. "前月月末
W_DATE+6(2) = P_ZFBDT+6(2).
ENDIF.
* 売上データの検索
SELECT KUNNR VKBUR VKGRP WAERS SUM( KNETXAMT )
FROM   YK130
INTO   TABLE  I_YK130
WHERE  KEKKBN  = '1' "未検収
AND    KUNNR  IN S_KUNNR
AND    VKORG   = P_VKORG
AND    VTWEG   = P_VTWEG
AND    SPART   = P_SPART
AND    VKBUR  IN S_VKBUR
AND    VKGRP  IN S_VKGRP
AND    BUKRS   = P_BUKRS
AND    ZFBDT   = W_DATE  "前回
GROUP  BY KUNNR VKBUR VKGRP WAERS.
* 更新用内部テーブルへ保存
LOOP AT I_YK130.

* 2006/03/16 MOD START
*    CLEAR:I_YK330,WK_TDNAME.
CLEAR:I_YK330,WK_TDNAME,LW_LINE.
* 2006/03/16 MOD END

***2002.12.04 add >>>
WK_TDNAME+0(10) = I_YK130-KUNNR.
WK_TDNAME+10(4) = P_BUKRS.

* 2006/03/16 MOD START
*    SELECT SINGLE TDNAME INTO STXH-TDNAME FROM  STXH
*           WHERE  TDOBJECT  = 'KNB1'
*           AND    TDNAME    = WK_TDNAME
*           AND    TDID      = P_TDID
*           AND    TDSPRAS   = SY-LANGU.
*    IF SY-SUBRC = 0.
*      CONTINUE.
*    ENDIF.
PERFORM GET_KAIKEI_TEXT USING WK_TDNAME    "前回未検収
CHANGING LW_LINE.
CASE LW_LINE.
WHEN SPACE.
WHEN 'X'.
CONTINUE.
WHEN 'XX'.
CONTINUE.
WHEN 'XXX'.
WHEN OTHERS.
ENDCASE.
* 2006/03/16 MOD END

***2002.12.04 add <<<
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNRG
WHERE  KUNNR  = I_YK130-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'PY'. "支払人（RG）
IF SY-SUBRC <> 0.
I_YK330-KUNRG = I_YK130-KUNNR.
ENDIF.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNR1
WHERE  KUNNR  = I_YK130-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'Y3'. "入金先（Y3）
IF SY-SUBRC <> 0.
I_YK330-KUNR1 = I_YK130-KUNNR.
ENDIF.
I_YK330-BUKRS = P_BUKRS.
I_YK330-KUNNR = I_YK130-KUNNR.
I_YK330-VKORG = P_VKORG.
I_YK330-VTWEG = P_VTWEG.
I_YK330-SPART = P_SPART.
I_YK330-ZFBDT = P_ZFBDT. "締日
I_YK330-WAERS = I_YK130-WAERS.
I_YK330-VKBUR = I_YK130-VKBUR.
I_YK330-VKGRP = I_YK130-VKGRP.
I_YK330-ZENMIKEN = I_YK130-KNETXAMT. "前回未検収←税込金額
APPEND I_YK330.
ENDLOOP.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_toumiken                                               *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_TOUMIKEN.
* ローカル変数
DATA W_DATE LIKE SY-DATUM.
* 2006/03/16 INS START
DATA: LW_LINE TYPE TLINE.
* 2006/03/16 INS END
TYPES: BEGIN OF ST_YK130,
KUNNR LIKE YK130-KUNNR,
VKBUR LIKE YK130-VKBUR,
VKGRP LIKE YK130-VKGRP,
WAERS LIKE YK130-WAERS,
KNETXAMT LIKE YK130-KNETXAMT,
END OF ST_YK130.
DATA I_YK130 TYPE STANDARD TABLE OF ST_YK130 WITH HEADER LINE.
* 売上データの検索
SELECT KUNNR VKBUR VKGRP WAERS SUM( KNETXAMT )
FROM   YK130
INTO   TABLE  I_YK130
WHERE  KEKKBN  = '1' "未検収
AND    KUNNR  IN S_KUNNR
AND    VKORG   = P_VKORG
AND    VTWEG   = P_VTWEG
AND    SPART   = P_SPART
AND    VKBUR  IN S_VKBUR
AND    VKGRP  IN S_VKGRP
AND    BUKRS   = P_BUKRS
AND    ZFBDT   = P_ZFBDT  "当回
GROUP  BY KUNNR VKBUR VKGRP WAERS.
* 更新用内部テーブルへ保存
LOOP AT I_YK130.

* 2006/03/16 MOD START
*    CLEAR:I_YK330,WK_TDNAME.
CLEAR:I_YK330,WK_TDNAME,LW_LINE.
* 2006/03/16 MOD END

***2002.12.04 add >>>
WK_TDNAME+0(10) = I_YK130-KUNNR.
WK_TDNAME+10(4) = P_BUKRS.

* 2006/03/16 MOD START
*    SELECT SINGLE TDNAME INTO STXH-TDNAME FROM  STXH
*           WHERE  TDOBJECT  = 'KNB1'
*           AND    TDNAME    = WK_TDNAME
*           AND    TDID      = P_TDID
*           AND    TDSPRAS   = SY-LANGU.
*    IF SY-SUBRC = 0.
*      CONTINUE.
*    ENDIF.
PERFORM GET_KAIKEI_TEXT USING WK_TDNAME    "当回未検収
CHANGING LW_LINE.
CASE LW_LINE.
WHEN SPACE.
WHEN 'X'.
CONTINUE.
WHEN 'XX'.
CONTINUE.
WHEN 'XXX'.
WHEN OTHERS.
ENDCASE.
* 2006/03/16 MOD END

***2002.12.04 add <<<
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNRG
WHERE  KUNNR  = I_YK130-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'PY'. "支払人（RG）
IF SY-SUBRC <> 0.
I_YK330-KUNRG = I_YK130-KUNNR.
ENDIF.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNR1
WHERE  KUNNR  = I_YK130-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'Y3'. "入金先（Y3）
IF SY-SUBRC <> 0.
I_YK330-KUNR1 = I_YK130-KUNNR.
ENDIF.
I_YK330-BUKRS = P_BUKRS.
I_YK330-KUNNR = I_YK130-KUNNR.
I_YK330-VKORG = P_VKORG.
I_YK330-VTWEG = P_VTWEG.
I_YK330-SPART = P_SPART.
I_YK330-ZFBDT = P_ZFBDT. "締日
I_YK330-WAERS = I_YK130-WAERS.
I_YK330-VKBUR = I_YK130-VKBUR.
I_YK330-VKGRP = I_YK130-VKGRP.
I_YK330-TOUMIKEN = I_YK130-KNETXAMT. "当回未検収←税込金額
APPEND I_YK330.
ENDLOOP.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_minyuryoku                                             *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_MINYURYOKU.
* ローカル変数
TYPES: BEGIN OF ST_YK110,
KUNNR LIKE YK110-KUNNR,
VKBUR LIKE YK110-VKBUR,
VKGRP LIKE YK110-VKGRP,
WAERS LIKE YK110-WAERS,
KNETXAMT LIKE YK110-KNETXAMT,
END OF ST_YK110.
DATA I_YK110 TYPE STANDARD TABLE OF ST_YK110 WITH HEADER LINE.
* 検収データの検索
SELECT KUNNR VKBUR VKGRP WAERS SUM( KNETXAMT )
FROM   YK110
INTO   TABLE  I_YK110
WHERE  KEKKBN  = '2'      "未入力
AND    KUNNR  IN S_KUNNR
AND    DELFLG  = SPACE    "有効
AND    VKORG   = P_VKORG
AND    VTWEG   = P_VTWEG
AND    SPART   = P_SPART
AND    VKBUR  IN S_VKBUR
AND    VKGRP  IN S_VKGRP
AND    BUKRS   = P_BUKRS
*        AND    zfbdt   = p_zfbdt  "当回 2002/08/29 MOD
AND    ZFBDT  <= P_ZFBDT  "当回以前
GROUP  BY KUNNR VKBUR VKGRP WAERS.
* 更新用内部テーブルへ保存
LOOP AT I_YK110.
CLEAR I_YK330.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNRG
WHERE  KUNNR  = I_YK110-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'PY'. "支払人（RG）
IF SY-SUBRC <> 0.
I_YK330-KUNRG = I_YK110-KUNNR.
ENDIF.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNR1
WHERE  KUNNR  = I_YK110-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'Y3'. "入金先（Y3）
IF SY-SUBRC <> 0.
I_YK330-KUNR1 = I_YK110-KUNNR.
ENDIF.
I_YK330-BUKRS = P_BUKRS.
I_YK330-KUNNR = I_YK110-KUNNR.
I_YK330-VKORG = P_VKORG.
I_YK330-VTWEG = P_VTWEG.
I_YK330-SPART = P_SPART.
I_YK330-ZFBDT = P_ZFBDT. "締日
I_YK330-WAERS = I_YK110-WAERS.
I_YK330-VKBUR = I_YK110-VKBUR.
I_YK330-VKGRP = I_YK110-VKGRP.
I_YK330-MINYURYOKU = I_YK110-KNETXAMT. "未入力←税込金額
APPEND I_YK330.
ENDLOOP.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_unmatch                                                *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_UNMATCH.
* ローカル変数
TYPES: BEGIN OF ST_YK130,
KUNNR LIKE YK130-KUNNR,
VKBUR LIKE YK130-VKBUR,
VKGRP LIKE YK130-VKGRP,
WAERS LIKE YK130-WAERS,
KNETXAMT LIKE YK130-KNETXAMT,
END OF ST_YK130.
DATA I_YK130 TYPE STANDARD TABLE OF ST_YK130 WITH HEADER LINE.
TYPES: BEGIN OF ST_YK110,
KUNNR LIKE YK110-KUNNR,
VKBUR LIKE YK110-VKBUR,
VKGRP LIKE YK110-VKGRP,
WAERS LIKE YK110-WAERS,
KNETXAMT LIKE YK110-KNETXAMT,
END OF ST_YK110.
DATA I_YK110 TYPE STANDARD TABLE OF ST_YK110 WITH HEADER LINE.
* 検収データの検索
SELECT KUNNR VKBUR VKGRP WAERS SUM( KNETXAMT )
FROM   YK110
INTO   TABLE  I_YK110
WHERE  KEKKBN  = '3'      "アンマッチ
AND    KUNNR  IN S_KUNNR
AND    DELFLG <> 'X'      "有効
AND    VKORG   = P_VKORG
AND    VTWEG   = P_VTWEG
AND    SPART   = P_SPART
AND    VKBUR  IN S_VKBUR
AND    VKGRP  IN S_VKGRP
AND    BUKRS   = P_BUKRS
*        AND    zfbdt   = p_zfbdt  "当回  2002/10/02 MOD
AND    ZFBDT   <= P_ZFBDT  "     2002/10/02 MOD
GROUP  BY KUNNR VKBUR VKGRP WAERS.
* 更新用内部テーブルへ保存
LOOP AT I_YK110.
CLEAR I_YK330.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNRG
WHERE  KUNNR  = I_YK110-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'PY'. "支払人（RG）
IF SY-SUBRC <> 0.
I_YK330-KUNRG = I_YK110-KUNNR.
ENDIF.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNR1
WHERE  KUNNR  = I_YK110-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'Y3'. "入金先（Y3）
IF SY-SUBRC <> 0.
I_YK330-KUNR1 = I_YK110-KUNNR.
ENDIF.
I_YK330-BUKRS = P_BUKRS.
I_YK330-KUNNR = I_YK110-KUNNR.
I_YK330-VKORG = P_VKORG.
I_YK330-VTWEG = P_VTWEG.
I_YK330-SPART = P_SPART.
I_YK330-ZFBDT = P_ZFBDT. "締日
I_YK330-WAERS = I_YK110-WAERS.
I_YK330-VKBUR = I_YK110-VKBUR.
I_YK330-VKGRP = I_YK110-VKGRP.
*    I_YK330-UNMATCH = I_YK110-KNETXAMT * -1. "2002/12/11 MOD
I_YK330-UNMATCH = I_YK110-KNETXAMT.        "2002/12/11 MOD
"アンマッチ＝売上－検収
APPEND I_YK330.
ENDLOOP.
* 売上データの検索
SELECT KUNNR VKBUR VKGRP WAERS SUM( KNETXAMT )
FROM   YK130
INTO   TABLE  I_YK130
WHERE  KEKKBN  = '3' "アンマッチ
AND    KUNNR  IN S_KUNNR
AND    VKORG   = P_VKORG
AND    VTWEG   = P_VTWEG
AND    SPART   = P_SPART
AND    VKBUR  IN S_VKBUR
AND    VKGRP  IN S_VKGRP
AND    BUKRS   = P_BUKRS
*         AND    zfbdt   = p_zfbdt  "当回  2002/10/02 MOD
AND    ZFBDT   <= P_ZFBDT  "      2002/10/02 MOD
GROUP  BY KUNNR VKBUR VKGRP WAERS.
* 更新用内部テーブルへ保存
LOOP AT I_YK130.
CLEAR I_YK330.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNRG
WHERE  KUNNR  = I_YK130-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'PY'. "支払人（RG）
IF SY-SUBRC <> 0.
I_YK330-KUNRG = I_YK130-KUNNR.
ENDIF.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNR1
WHERE  KUNNR  = I_YK130-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'Y3'. "入金先（Y3）
IF SY-SUBRC <> 0.
I_YK330-KUNR1 = I_YK130-KUNNR.
ENDIF.
I_YK330-BUKRS = P_BUKRS.
I_YK330-KUNNR = I_YK130-KUNNR.
I_YK330-VKORG = P_VKORG.
I_YK330-VTWEG = P_VTWEG.
I_YK330-SPART = P_SPART.
I_YK330-ZFBDT = P_ZFBDT. "締日
I_YK330-WAERS = I_YK130-WAERS.
I_YK330-VKBUR = I_YK130-VKBUR.
I_YK330-VKGRP = I_YK130-VKGRP.
*    I_YK330-UNMATCH = I_YK130-KNETXAMT.     "2002/12/11 MOD
I_YK330-UNMATCH = I_YK130-KNETXAMT * -1. "2002/12/11 MOD
"アンマッチ＝売上－検収
APPEND I_YK330.
ENDLOOP.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_nyukinyotei                                            *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_NYUKINYOTEI.
*2002/11/05 ADD START
REFRESH I_K_SUM.
*2002/11/05 ADD END
* ローカル変数
TYPES: BEGIN OF ST_YK310,
KUNNR LIKE YK310-KUNNR,
VKBUR LIKE YK310-VKBUR,
VKGRP LIKE YK310-VKGRP,
WAERS LIKE YK310-WAERS,
ZFBDT LIKE YK310-ZFBDT,  "2002/11/05 ADD
INCAMT LIKE YK310-INCAMT,
END OF ST_YK310.
DATA I_YK310 TYPE STANDARD TABLE OF ST_YK310 WITH HEADER LINE.
*2002/11/08 ADD START
TYPES: BEGIN OF ST_YK310_2,
KUNNR LIKE YK310-KUNNR,
VKBUR LIKE YK310-VKBUR,
VKGRP LIKE YK310-VKGRP,
WAERS LIKE YK310-WAERS,
ZFBDT LIKE YK310-ZFBDT,
INCDAT LIKE YK310-INCDAT,
INCAMT LIKE YK310-INCAMT,
END OF ST_YK310_2.
DATA I_YK310_2 TYPE STANDARD TABLE OF ST_YK310_2 WITH HEADER LINE.
DATA I_YK310_3 TYPE STANDARD TABLE OF ST_YK310_2 WITH HEADER LINE.
TYPES: BEGIN OF ST_T052,
KUNNR LIKE YK320-KUNNR, "得意先コード
ZSMN1 LIKE T052-ZSMN1,
END OF  ST_T052.
DATA I_T052 TYPE STANDARD TABLE OF ST_T052 WITH HEADER LINE.
CLEAR  :I_T052,I_YK310,I_YK310_2.
REFRESH:I_T052,I_YK310,I_YK310_2.
*2002/11/08 ADD END
*2002/12/13 ADD START
CLEAR: FLG_YK310ERR,FLG_KUNNR_N1,FLG_VKBUR_N1,FLG_VKGRP_N1.
*2002/12/13 ADD END
*2002/11/08 MOD START
** 入金予定の検索
**  SELECT kunnr vkbur vkgrp waers SUM( incamt )      "2002/11/05 MOD
*  SELECT kunnr vkbur vkgrp waers ZFBDT SUM( incamt ) "2002/11/05 MOD
*         FROM   yk310
*         INTO   TABLE  i_yk310
*         WHERE  bukrs   = p_bukrs
*         AND    kunnr  IN s_kunnr
*         AND    zfbdt  <= p_zfbdt "締日以前に登録されたもので
*         AND    incdat  > p_zfbdt "締日以降に入金予定日がくるもの
*         AND    vkorg   = p_vkorg
*         AND    vtweg   = p_vtweg
*         AND    spart   = p_spart
*         AND    vkbur  IN s_vkbur
*         AND    vkgrp  IN s_vkgrp
*         AND    delflg  = space   "2002/07/12 ADD
**        GROUP  by kunnr vkbur vkgrp waers.      "2002/11/05 MOD
*        GROUP  by kunnr vkbur vkgrp waers ZFBDT. "2002/11/05 MOD
SELECT KUNNR VKBUR VKGRP WAERS ZFBDT INCDAT INCAMT
FROM   YK310
INTO CORRESPONDING  FIELDS OF  TABLE  I_YK310_2
WHERE  BUKRS   = P_BUKRS
AND    KUNNR  IN S_KUNNR
AND    ZFBDT  <= P_ZFBDT "締日以前に登録されたもので
AND    INCDAT => P_ZFBDT "締日以降に入金予定日がくるもの
AND    VKORG   = P_VKORG
AND    VTWEG   = P_VTWEG
AND    SPART   = P_SPART
AND    VKBUR  IN S_VKBUR
AND    VKGRP  IN S_VKGRP
AND    DELFLG  = SPACE.
SORT I_YK310_2 BY KUNNR.
I_YK310_3[] = I_YK310_2[].
READ TABLE I_YK310_2 INDEX 1.
IF SY-SUBRC = 0.
SELECT KNVV~KUNNR T052~ZSMN1
INTO CORRESPONDING  FIELDS OF TABLE I_T052
FROM KNVV INNER JOIN T052
ON KNVV~ZTERM =  T052~ZTERM
FOR ALL ENTRIES IN I_YK310_2
WHERE KUNNR = I_YK310_2-KUNNR
AND VKORG = P_VKORG
AND VTWEG = P_VTWEG
AND SPART = P_SPART.
SORT I_T052  BY KUNNR.
*2002/12/13 ADD START
ELSE.
READ TABLE S_KUNNR INDEX 2.
IF SY-SUBRC <> 0.
READ TABLE S_KUNNR INDEX 1.
IF SY-SUBRC = 0.
IF S_KUNNR-HIGH IS INITIAL.
FLG_KUNNR_N1 = 'X'.       "得意先は１件しか入力されていない
ENDIF.
ENDIF.
ENDIF.
READ TABLE S_VKBUR INDEX 2.
IF SY-SUBRC <> 0.
READ TABLE S_VKBUR INDEX 1.
IF SY-SUBRC = 0.
IF S_VKBUR-HIGH IS INITIAL.
FLG_VKBUR_N1 = 'X'.       "営業所は１件しか入力されていない
ENDIF.
ENDIF.
ENDIF.
READ TABLE S_VKGRP INDEX 2.
IF SY-SUBRC <> 0.
READ TABLE S_VKGRP INDEX 1.
IF SY-SUBRC = 0.
IF S_VKGRP-HIGH IS INITIAL.
FLG_VKGRP_N1 = 'X'.       "営業GRPは１件しか入力されていない
ENDIF.
ENDIF.
ENDIF.
IF  FLG_VKBUR_N1 = 'X'
AND FLG_VKGRP_N1 = 'X'
AND FLG_KUNNR_N1 = 'X'.
FLG_YK310ERR = 'X'.
ENDIF.
*2002/12/13 ADD END.
ENDIF.
LOOP AT I_YK310_2.
AT NEW KUNNR.
CLEAR I_T052.
READ TABLE I_T052 WITH KEY KUNNR = I_YK310_2-KUNNR.
IF SY-SUBRC = 0 AND I_T052-ZSMN1 <> 0.
DELETE I_YK310_3 WHERE KUNNR = I_YK310_2-KUNNR
AND INCDAT = P_ZFBDT.
ENDIF.
ENDAT.
ENDLOOP.
DELETE I_YK310_3 WHERE ZFBDT < P_ZFBDT
AND INCDAT = P_ZFBDT.
SORT I_YK310_3  BY KUNNR VKBUR VKGRP WAERS ZFBDT.
LOOP AT I_YK310_3.
AT END OF ZFBDT.
SUM.
CLEAR I_YK310.
MOVE-CORRESPONDING I_YK310_3 TO I_YK310.
APPEND I_YK310.
ENDAT.
ENDLOOP.
FREE: I_YK310_2, I_YK310_3.
SORT I_YK310 BY KUNNR VKBUR VKGRP WAERS ZFBDT.
*2002/11/08 MOD END
* 更新用内部テーブルへ保存
LOOP AT I_YK310.
CLEAR I_YK330.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNRG
WHERE  KUNNR  = I_YK310-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'PY'. "支払人（RG）
IF SY-SUBRC <> 0.
I_YK330-KUNRG = I_YK310-KUNNR.
ENDIF.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNR1
WHERE  KUNNR  = I_YK310-KUNNR
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'Y3'. "入金先（Y3）
IF SY-SUBRC <> 0.
I_YK330-KUNR1 = I_YK310-KUNNR.
ENDIF.
I_YK330-BUKRS = P_BUKRS.
I_YK330-KUNNR = I_YK310-KUNNR.
I_YK330-VKORG = P_VKORG.
I_YK330-VTWEG = P_VTWEG.
I_YK330-SPART = P_SPART.
I_YK330-ZFBDT = P_ZFBDT. "締日
I_YK330-WAERS = I_YK310-WAERS.
I_YK330-VKBUR = I_YK310-VKBUR.
I_YK330-VKGRP = I_YK310-VKGRP.
I_YK330-NYUKINYOTEI = I_YK310-INCAMT. "入金予定←入金予定額
APPEND I_YK330.
*2002/11/05 ADD START (同日締めデータのみの計を作成
IF I_YK310-ZFBDT = P_ZFBDT. "締日
CLEAR I_K_SUM.
MOVE-CORRESPONDING I_YK330 TO I_K_SUM.
I_K_SUM-NYUKINYOTEI = I_YK310-INCAMT.
COLLECT I_K_SUM. "集計
ENDIF.
*2002/11/05 ADD END
ENDLOOP.
*2002/11/05 ADD START
SORT I_K_SUM BY BUKRS KUNNR VKORG VTWEG SPART WAERS VKBUR VKGRP.
*2002/11/05 ADD END
*2002/12/13 ADD START (YK310読み込みエラーで、選択画面,得意先が１件のみ)
CHECK FLG_YK310ERR = 'X'.
CLEAR I_YK330.
READ TABLE S_KUNNR INDEX 1.
READ TABLE S_VKBUR INDEX 1.
READ TABLE S_VKGRP INDEX 1.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNRG
WHERE  KUNNR  = S_KUNNR-LOW
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'PY'. "支払人（RG）
IF SY-SUBRC <> 0.
I_YK330-KUNRG = S_KUNNR-LOW.
ENDIF.
SELECT SINGLE KUNNR
FROM   KNVP
INTO   I_YK330-KUNR1
WHERE  KUNNR  = S_KUNNR-LOW
AND    VKORG  = P_VKORG
AND    VTWEG  = P_VTWEG
AND    SPART  = P_SPART
AND    PARVW  = 'Y3'. "入金先（Y3）
IF SY-SUBRC <> 0.
I_YK330-KUNR1 =  S_KUNNR-LOW.
ENDIF.
I_YK330-BUKRS = P_BUKRS.
I_YK330-KUNNR = S_KUNNR-LOW.
I_YK330-VKORG = P_VKORG.
I_YK330-VTWEG = P_VTWEG.
I_YK330-SPART = P_SPART.
I_YK330-ZFBDT = P_ZFBDT. "締日
*   I_YK330-WAERS = I_YK310-WAERS.
I_YK330-VKBUR = S_VKBUR-LOW.
I_YK330-VKGRP = S_VKGRP-LOW.
I_YK330-NYUKINYOTEI = 0. "入金予定←入金予定額
SELECT SINGLE WAERS INTO  I_YK330-WAERS FROM KNVV
WHERE  KUNNR   = S_KUNNR-LOW
AND    VKORG   = P_VKORG
AND    VTWEG   = P_VTWEG
AND    SPART   = P_SPART.
APPEND I_YK330.
*2002/12/13 ADD END

ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_sai                                                    *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_SAI.
* ローカル変数
DATA I_YK330_SUM LIKE STANDARD TABLE OF YK330 WITH HEADER LINE.
DATA W_TDNAME LIKE STXH-TDNAME. "2002/08/07 ADD
* 2006/03/16 INS START
DATA: LW_LINE TYPE TLINE.
* 2006/03/16 INS END
* 集計
SORT I_YK330 BY KUNNR WAERS.
LOOP AT I_YK330.
CLEAR I_YK330_SUM.
MOVE-CORRESPONDING I_YK330 TO I_YK330_SUM.
COLLECT I_YK330_SUM. "集計
ENDLOOP.
* 残高差異と変更用データ格納
REFRESH I_YK330.
LOOP AT I_YK330_SUM.
CLEAR I_YK330.
MOVE-CORRESPONDING I_YK330_SUM TO I_YK330.
*   高千穂請求書対象のチェック 2002/08/07
CLEAR W_TDNAME.
* 2006/03/16 INS START
CLEAR: LW_LINE.
* 2006/03/16 INS END
W_TDNAME+0(10) = I_YK330-KUNNR.
W_TDNAME+10(4) = I_YK330-BUKRS.
* 2006/03/16 MOD START
*    SELECT SINGLE * FROM  STXH
*           WHERE  TDOBJECT  = 'KNB1'
*           AND    TDNAME    = W_TDNAME
*           AND    TDID      = P_TDID
*           AND    TDSPRAS   = SY-LANGU.
PERFORM GET_KAIKEI_TEXT USING W_TDNAME    "残高差異
CHANGING LW_LINE.

*    IF SY-SUBRC = 0.
IF LW_LINE = 'X' OR LW_LINE = 'XX'.
* 2006/03/16 MOD END
SELECT SINGLE * FROM  YK330
WHERE  BUKRS  = I_YK330-BUKRS
AND    KUNNR  = I_YK330-KUNNR
AND    VKORG  = I_YK330-VKORG
AND    VTWEG  = I_YK330-VTWEG
AND    SPART  = I_YK330-SPART
AND    ZFBDT  = I_YK330-ZFBDT
AND    WAERS  = I_YK330-WAERS
AND    VKBUR  = I_YK330-VKBUR
AND    VKGRP  = I_YK330-VKGRP.
IF SY-SUBRC = 0.
"次の金額は検収実績調整入力で変更可能
I_YK330-KENSYU     = YK330-KENSYU.     "検収税込金額
I_YK330-TOUMIKEN   = YK330-TOUMIKEN.   "今回未検収額
I_YK330-MINYURYOKU = YK330-MINYURYOKU. "未入力額
I_YK330-UNMATCH    = YK330-UNMATCH.    "アンマッチ額
ENDIF.
"検収実績調整入力で変更されていない場合
"入金予定額と検収税込金額を一致させる
IF I_YK330-KENSYU     = 0 AND
I_YK330-TOUMIKEN   = 0 AND
I_YK330-MINYURYOKU = 0 AND
I_YK330-UNMATCH    = 0.
*2002/11/05 MOD START
*        i_yk330-kensyu = i_yk330-nyukinyotei.
CLEAR I_K_SUM.
READ TABLE I_K_SUM WITH KEY BUKRS = I_YK330-BUKRS
KUNNR = I_YK330-KUNNR
VKORG = I_YK330-VKORG
VTWEG = I_YK330-VTWEG
SPART = I_YK330-SPART
*                                    ZFBDT
WAERS = I_YK330-WAERS
VKBUR = I_YK330-VKBUR
VKGRP = I_YK330-VKGRP
BINARY SEARCH.
I_YK330-KENSYU = I_K_SUM-NYUKINYOTEI.
*2002/11/05 MOD END
ENDIF.
ENDIF.
*   差異計算
I_YK330-SAI = I_YK330-URIKAKEZAN   "売掛残①
- I_YK330-ZENZENMIKEN  "前々回以前未検収③
- I_YK330-ZENMIKEN     "前回以前未検収④
- I_YK330-TOUMIKEN     "当回以前未検収⑤
+ I_YK330-MINYURYOKU   "未入力⑥
*                - I_YK330-UNMATCH      "アンマッチ⑦
+ I_YK330-UNMATCH      "アンマッチ⑦     "2002/12/11
- I_YK330-NYUKINYOTEI. "入金予定⑧
APPEND I_YK330.
ENDLOOP.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_update                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_UPDATE.
* ローカル変数
DATA W_INSCNT LIKE SY-DBCNT.
DATA W_UPDCNT LIKE SY-DBCNT.
* 締日チェック 2002/08/05 ADD
LOOP AT I_YK330.
CALL FUNCTION 'YK_ZFBDT_CHECK_BY_KNVV'
EXPORTING
I_CORD        = I_YK330-KUNNR
I_VKORG       = I_YK330-VKORG
I_VTWEG       = I_YK330-VTWEG
I_SPART       = I_YK330-SPART
I_DAY         = P_ZFBDT
EXCEPTIONS
INVALID_ZFBDT = 1
NO_GET_ZTERM  = 2
OTHERS        = 3.
IF SY-SUBRC <> 0.
DELETE I_YK330.
ENDIF.
ENDLOOP.
* ロック
LOOP AT I_YK330.
CALL FUNCTION 'ENQUEUE_EY_YK330'
EXPORTING
BUKRS          = I_YK330-BUKRS
KUNNR          = I_YK330-KUNNR
VKORG          = I_YK330-VKORG
VTWEG          = I_YK330-VTWEG
SPART          = I_YK330-SPART
ZFBDT          = I_YK330-ZFBDT
WAERS          = I_YK330-WAERS
VKBUR          = I_YK330-VKBUR
VKGRP          = I_YK330-VKGRP
EXCEPTIONS
FOREIGN_LOCK   = 1
SYSTEM_FAILURE = 2
OTHERS         = 3.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
ENDLOOP.
* 更新
LOOP AT I_YK330.
CLEAR YK330.
SELECT SINGLE *
FROM   YK330
WHERE  BUKRS  = I_YK330-BUKRS
AND    KUNNR  = I_YK330-KUNNR
AND    VKORG  = I_YK330-VKORG
AND    VTWEG  = I_YK330-VTWEG
AND    SPART  = I_YK330-SPART
AND    ZFBDT  = I_YK330-ZFBDT
AND    WAERS  = I_YK330-WAERS
AND    VKBUR  = I_YK330-VKBUR
AND    VKGRP  = I_YK330-VKGRP.
IF SY-SUBRC = 0. "売掛管理データが存在する場合
I_YK330-SGTXT = YK330-SGTXT.
I_YK330-INSDAT = YK330-INSDAT.
I_YK330-INSTIM = YK330-INSTIM.
I_YK330-INSUSR = YK330-INSUSR.
I_YK330-UPDDAT = SY-DATUM.
I_YK330-UPDTIM = SY-UZEIT.
I_YK330-UPDUSR = SY-UNAME.
UPDATE YK330 FROM I_YK330.
IF SY-SUBRC <> 0.
MESSAGE E400(Y1) WITH '売掛管理データが変更できません'.
ELSE.
ADD 1 TO W_UPDCNT.
ENDIF.
ELSE. "存在しない場合
I_YK330-INSDAT = SY-DATUM.
I_YK330-INSTIM = SY-UZEIT.
I_YK330-INSUSR = SY-UNAME.
INSERT INTO YK330 VALUES I_YK330.
IF SY-SUBRC <> 0.
MESSAGE E400(Y1) WITH '売掛管理データが登録できません'.
ELSE.
ADD 1 TO W_INSCNT.
ENDIF.
ENDIF.
ENDLOOP.
* アンロック
LOOP AT I_YK330.
CALL FUNCTION 'DEQUEUE_EY_YK330'
EXPORTING
BUKRS = I_YK330-BUKRS
KUNNR = I_YK330-KUNNR
VKORG = I_YK330-VKORG
VTWEG = I_YK330-VTWEG
SPART = I_YK330-SPART
ZFBDT = I_YK330-ZFBDT
WAERS = I_YK330-WAERS
VKBUR = I_YK330-VKBUR
VKGRP = I_YK330-VKGRP.

ENDLOOP.
* 件数表示
MESSAGE S403(Y1) WITH '登録件数' W_INSCNT '更新件数' W_UPDCNT.

ENDFORM.

* 2006/03/14 INS START
*&---------------------------------------------------------------------*
*&      Form  GET_KAIKEI_TEXT
*&---------------------------------------------------------------------*
*       得意先の会計テキストの取得
*----------------------------------------------------------------------*
*       -->  PA_TEXT  取得した得意先の会計テキスト画面の項目値
*----------------------------------------------------------------------*
FORM GET_KAIKEI_TEXT USING PA_TDNAME
CHANGING PA_TEXT.

DATA:
I_TLINE LIKE STANDARD TABLE OF TLINE WITH HEADER LINE.

CALL FUNCTION 'READ_TEXT'  "テキストデータ読込
EXPORTING
*      CLIENT                        = SY-MANDT
ID                            = P_TDID
LANGUAGE                      = SY-LANGU
NAME                          = PA_TDNAME
OBJECT                        = 'KNB1'
TABLES
LINES                         = I_TLINE
EXCEPTIONS
ID                            = 1
LANGUAGE                      = 2
NAME                          = 3
NOT_FOUND                     = 4
OBJECT                        = 5
REFERENCE_CHECK               = 6
WRONG_ACCESS_TO_ARCHIVE       = 7
OTHERS                        = 8
.
CASE SY-SUBRC.
WHEN 0 OR 4.
WHEN OTHERS.
MESSAGE S001(Z1) WITH '汎用モジュールエラー' SY-SUBRC.
ENDCASE.
READ TABLE I_TLINE INTO I_TLINE INDEX 1.

PA_TEXT = I_TLINE-TDLINE.

ENDFORM.
* 2006/03/14 INS END
