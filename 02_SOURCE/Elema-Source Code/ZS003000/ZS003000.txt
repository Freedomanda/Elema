*& ISID Co.,Ltd. 2012 All rights.reserved.
*&---------------------------------------------------------------------*
*& プログラム：ZS003000 LIS予定データ登録更新
*& 作成者    ：ISID11
*& 作成日付  ：2012/09/13
*& 機能ID    ：N/A
*&---------------------------------------------------------------------*
*& 処理概要：
*& 月ごとに予定金額と粗利を登録、更新、確認する
*&*--------------------------------------------------------------------*
*& 更新履歴&
*& No.   更新日付    更新者    更新内容
*& 新規  2012/09/13  ISID11
*&       2013/01/15  ISID06    マイナス値対応
*&---------------------------------------------------------------------*
report  zs003000.
*&---------------------------------------------------------------------*
*&  項目定義
*&---------------------------------------------------------------------*
*>>> 2013/01/15 マイナス値対応
constants: c_min_value type p value -9999999999999,
c_max_value type p value  9999999999999.
*<<< 2013/01/15 マイナス値対応
*日付用
data: wk_date1 like p0001-begda,
wk_date2 like s901-spmon,
wk_date3 like s901-spmon.
*退避日付用
data: wk_date1dy like wk_date1,
wk_date2dy like wk_date1,
wk_date3dy like wk_date1.

data: wk_begda like p0001-begda,
input_date2 like p0001-begda.
data: wk_toptext type t024-eknam.

data:wk_c18(23),
wk_d18(24),
wk_dummy(15),
wk_inputdy(15),
wk_popy(4),
wk_popn(6).
*入力値の比較用
*DB用
data:wk_dum6 like wk_d18,
wk_dum7 like wk_d18,
wk_dum8 like wk_d18,
wk_dum10 like wk_d18,
wk_dum11 like wk_d18,
wk_dum12 like wk_d18 .

data: wk_ans(2)."POPUP汎用モジュール用"

*-------------------------------------------------------------*
*TABLE
*-------------------------------------------------------------*
tables sscrfields.
data: it_s901 type table of s901,
wk_s901 type s901.
data: it_modifys901 like it_s901.

*----------------------------------------------------------------------*
*   選択画面定義
*----------------------------------------------------------------------*


*テーブル定義
data: begin of input_field,
p_tx(23) type c,
p_tou(24) type c,
p_yok(24) type c,
p_yoky(24) type c,
currency like s901-stwae,
end of input_field.


data: begin of input_field2,
p_tx2(23) type c,
p_tou2(24) type c,
p_yok2(24) type c,
p_yoky2(24) type c,
currency2 like s901-stwae,
end of input_field2.
*販売組織
selection-screen begin of line.
selection-screen: comment 1(33) wk_orgt for field p_vkorg. "項目名"
parameters: p_vkorg like s901-vkorg obligatory.  "販売組織"
selection-screen: comment 44(40) wk_vkorg.           "値"
selection-screen end of line.

*営業所
selection-screen begin of line.
selection-screen: comment 1(33) wk_burt for field p_vkbur. "項目名"
parameters: p_vkbur like s901-vkbur obligatory.   "営業所"
selection-screen: comment 44(40) wk_vkbur.           "値"
selection-screen end of line.

*当月
parameters: p_date type datmoja obligatory.        "当月日付"

*間をあける処理
selection-screen skip 3.

*表示のテーブル
*一段目
selection-screen begin of line.
parameters: p_text1 like wk_c18 .
parameters: p_text2 like wk_d18 ."当月ヘッダー"
parameters: p_text3 like wk_d18 ."翌月ヘッダー"
parameters: p_text4 like wk_d18 ."翌々月ヘッダー"
selection-screen end of line.

*二段目
selection-screen begin of line.
parameters: p_text5 like input_field-p_tx."項目名"
parameters: p_text6 like input_field-p_tou."当月売上予定"
parameters: p_text7 like input_field-p_yok."翌月売上予定"
parameters: p_text8 like input_field-p_yoky."翌々月売上予定"
selection-screen end of line.

*三段目
selection-screen begin of line.
parameters: p_text9    like input_field2-p_tx2."項目名"
parameters: p_text10  like input_field2-p_tou2."当月粗利予定"
parameters: p_text11  like input_field2-p_yok2."翌月粗利予定"
parameters: p_text12  like input_field2-p_yoky2."翌々粗利予定"
selection-screen end of line.
*再読み込みボタン
selection-screen function key 1.

*----------------------------------------------------------------------*
at selection-screen output.
*----------------------------------------------------------------------*
*POPUP汎用モジュール用
wk_popy = 'はい'.
wk_popn = 'いいえ'.
*テーブルテキスト
p_text5 = '売上予定'.                "項目名"
p_text9 = '粗利予定'.                "項目名"

*選択項目ヘッダーテキスト
wk_orgt = '販売組織'.              "販売組織項目名"
wk_burt = '営業所'.              "営業所項目名"

*ボタンのテキスト
sscrfields-functxt_01 = '再読込'.

perform change_guistatus."GUIステータスを変更
perform text_restriction. "入力制限"
perform  get_date. "当月日付の取得"
perform input_text. "ヘッダーテキスト入力"

*初回起動時に今の入力パラメーターを格納
if p_vkorg = ''
or p_vkbur = ''
or p_date = ''.
concatenate p_vkorg p_vkbur p_date into wk_dummy.
endif.

*----------------------------------------------------------------------*
at selection-screen.
*----------------------------------------------------------------------*
*今のパラメーター値を格納"
concatenate p_vkorg p_vkbur p_date into wk_inputdy.
*I/Fの値の存在チェック
perform check_para.
*当月日付の取得
perform  get_date.
*CASE文での分岐処理
perform plc_case.
*I/Fの値のテキスト出力
perform into_para.
*&---------------------------------------------------------------------*
*&      Form  GET_DATE
*&---------------------------------------------------------------------*
*       当月日付の取得
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form get_date .

*日付退避用
move:p_date to wk_date1dy,
wk_date2 to wk_date2dy,
wk_date3 to wk_date3dy.
*日付の取得用
clear:wk_date1,
wk_date2,
wk_date3.

if p_date = ''.
p_date = syst-datum.      "当月の挿入 YYYY/MM"
endif.

*日付形式の変更'ｙｙｙｙｍｍ'→''yyyymmdd''
move p_date to wk_date1.
move '01' to  wk_date1+6(2).

perform calc_month: using wk_date1
changing wk_date2 wk_begda, "翌月の値"
using wk_begda "翌月のYYYY/MM/DD"
changing wk_date3 wk_begda. "翌々月の値"

endform.                    " GET_DATE
*&---------------------------------------------------------------------*
*&      Form  GET_S901DATA
*&---------------------------------------------------------------------*
*       Ｓ901のデータ取得
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form get_s901data .
*日付を使ってＳ９０１のデータを取得
clear:   p_text6,
p_text10,
p_text7,
p_text11,
p_text8,
p_text12.

if p_vkbur <> ''.
select * from s901
into table  it_s901
where vkbur = p_vkbur
and vkorg = p_vkorg
and (  spmon = p_date
or  spmon = wk_date2
or  spmon = wk_date3 )
and vrsio = '901'.
endif.

endform.                    " GET_S901DATA
*&---------------------------------------------------------------------*
*&      Form  CALC_MONTH
*&---------------------------------------------------------------------*
*       年月の取得
*----------------------------------------------------------------------*
*      -->P_WK_DATE  text
*      <--P_WK_DATE2  text
*----------------------------------------------------------------------*
form calc_month  using    input_date
changing output_date output_nextdate.
*日付データの変更
input_date2 = input_date.

*日付の繰り上げ処理のEXIT
call function 'RP_CALC_DATE_IN_INTERVAL_SG'
exporting
date      = input_date2
days      = '0000'
months    = '0001'
signum    = '+'
years     = '0000'
importing
calc_date = output_nextdate.

*変わった値をセットする
output_date = output_nextdate.

endform.                    " CALC_MONTH
*&---------------------------------------------------------------------*
*&      Form  SET_S901DATA
*&---------------------------------------------------------------------*
*       S901のデータをテーブルに表示
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form set_s901data .
*取得した情報をテーブルに格納する
clear:  wk_s901.


loop at it_s901 into wk_s901.

if wk_s901-spmon = p_date. "当月"

input_field-currency = 'JPY'.
input_field2-currency2 = 'JPY'.
*>>> 2013/01/15 マイナス値対応
*      write wk_s901-netwr to p_text6 currency 'JPY' .
write wk_s901-netwr to p_text6 currency 'JPY' left-justified.
shift p_text6 up to '-' left circular.
condense p_text6 no-gaps.
*<<< 2013/01/15 マイナス値対応
write p_text6 to p_text6 right-justified."右寄せ"
*>>> 2013/01/15 マイナス値対応
*      write wk_s901-zzaraigaku to p_text10 currency 'JPY'.
write wk_s901-zzaraigaku to p_text10 currency 'JPY' left-justified.
shift p_text10 up to '-' left circular.
condense p_text10 no-gaps.
*<<< 2013/01/15 マイナス値対応
write p_text10 to p_text10 right-justified."右寄せ"
endif.



if wk_s901-spmon = wk_date2. "翌月"

input_field-currency = 'JPY'.
input_field2-currency2 = 'JPY'.
*>>> 2013/01/15 マイナス値対応
*      write wk_s901-netwr to p_text7 currency 'JPY'.
write wk_s901-netwr to p_text7 currency 'JPY' left-justified.
shift p_text7 up to '-' left circular.
condense p_text7 no-gaps.
*<<< 2013/01/15 マイナス値対応
write p_text7 to p_text7 right-justified."右寄せ"
*>>> 2013/01/15 マイナス値対応
*      write wk_s901-zzaraigaku to p_text11 currency 'JPY'.
write wk_s901-zzaraigaku to p_text11 currency 'JPY' left-justified.
shift p_text11 up to '-' left circular.
condense p_text11 no-gaps.
*<<< 2013/01/15 マイナス値対応
write p_text11 to p_text11 right-justified."右寄せ"
endif.

if wk_s901-spmon = wk_date3. "翌々月"

input_field-currency = 'JPY'.
input_field2-currency2 = 'JPY'.
*>>> 2013/01/15 マイナス値対応
*      write wk_s901-netwr to p_text8 currency 'JPY' .
write wk_s901-netwr to p_text8 currency 'JPY' left-justified.
shift p_text8 up to '-' left circular.
condense p_text8 no-gaps.
*<<< 2013/01/15 マイナス値対応
write p_text8 to p_text8 right-justified."右寄せ"
*>>> 2013/01/15 マイナス値対応
*      write wk_s901-zzaraigaku to p_text12 currency 'JPY'.
write wk_s901-zzaraigaku to p_text12 currency 'JPY' left-justified.
shift p_text12 up to '-' left circular.
condense p_text12 no-gaps.
*<<< 2013/01/15 マイナス値対応
write p_text12 to p_text12 right-justified."右寄せ"
endif.

endloop.

*0は表示させないためにクリア
perform arg_clear: using p_text6,
using p_text10,
using p_text7,
using p_text11,
using p_text8,
using p_text12.

endform.                    " SET_S901DATA
*&---------------------------------------------------------------------*
*&      Form  INPUT_TEXT
*&---------------------------------------------------------------------*
*       テーブルのヘッダー項目名
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form input_text .
wk_toptext = '月度予定'.

concatenate p_date+0(4) '/' p_date+4(2) wk_toptext into p_text2."当月"
concatenate wk_date2+0(4) '/' wk_date2+4(2) wk_toptext into p_text3."翌月"
concatenate wk_date3+0(4) '/' wk_date3+4(2) wk_toptext into p_text4."翌々月"
endform.                    " INPUT_TEXT
*&---------------------------------------------------------------------*
*&      Form  MODIFY_TABLE
*&---------------------------------------------------------------------*
*       更新処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form modify_table .

*テーブルを更新
modify s901 from table  it_modifys901.
if sy-subrc <> 0.
message id 'Z1'  type 'E' number '639'.
endif.
*金額０レコード消去
delete from s901
where netwr = 0
and    zzaraigaku = 0
and     vrsio =  '901'.

if sy-subrc = 0.
*DELETEあり正常
commit work.
*パラメーター退避する
perform set_dumm. "パラメーターの退避"
perform arg_memory_set."メモリーに退避"
message id 'Z1'  type 'S' number '011'.
elseif sy-subrc = 4.
*DELETE無し正常
commit work.
* パラメーター退避
perform set_dumm. "パラメーターの退避"
perform arg_memory_set."メモリーに退避"
message id 'Z1'  type 'S' number '011'.
else.
*エラーの場合
rollback work.
message id 'Z1'  type 'E' number '639'.
endif.

endform.                    " MODIFY_TABLE
*&---------------------------------------------------------------------*
*&      Form  MOVE_CHANGEDATA
*&---------------------------------------------------------------------*
*       MOVE&APPEND処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form move_changedata .
data: wk_movetext1 like wk_s901, "当月"
wk_movetext2 like wk_s901, "翌月"
wk_movetext3 like wk_s901.  "翌々月"
data: wk_text6(18) type n,
wk_text10 like wk_text6,
wk_text7 like wk_text6,
wk_text11 like wk_text6,
wk_text8 like wk_text6,
wk_text12 like wk_text6.

*値の変換
*当月
perform frm_change_value: using p_text6
changing wk_text6 ,
using p_text10
changing wk_text10.
*翌月
perform frm_change_value: using p_text7
changing wk_text7,
using p_text11
changing wk_text11.
*翌々月
perform frm_change_value: using p_text8
changing wk_text8,
using p_text12
changing wk_text12.
*MOVE処理
*当月
perform frm_check_value: using wk_text6 p_text2 'の売上'
changing wk_movetext1-netwr,
using wk_text10 p_text2 'の粗利'
changing wk_movetext1-zzaraigaku.
*翌月
perform frm_check_value: using wk_text7 p_text3 'の売上'
changing wk_movetext2-netwr,
using wk_text11 p_text3 'の粗利'
changing wk_movetext2-zzaraigaku.
*翌々月
perform frm_check_value: using wk_text8 p_text4 'の売上'
changing wk_movetext3-netwr,
using wk_text12 p_text4 'の粗利'
changing wk_movetext3-zzaraigaku.

perform arg_change_cur: changing wk_movetext1-netwr,
changing wk_movetext1-zzaraigaku,
changing wk_movetext2-netwr,
changing wk_movetext2-zzaraigaku,
changing wk_movetext3-netwr,
changing wk_movetext3-zzaraigaku.

*当月
move:   p_vkbur  to wk_movetext1-vkbur,           "営業所"
p_vkorg to wk_movetext1-vkorg,           "販売組織"
p_date to wk_movetext1-spmon,             "月"
syst-mandt to wk_movetext1-mandt,   "クライアント"
'JPY' to wk_movetext1-stwae,                "通貨"
'901' to wk_movetext1-vrsio.                  "バージョン"
*翌月
move: p_vkbur  to wk_movetext2-vkbur,           "営業所"
p_vkorg to wk_movetext2-vkorg,           "販売組織"
wk_date2 to wk_movetext2-spmon,             "月"
syst-mandt to wk_movetext2-mandt,   "クライアント"
'JPY' to wk_movetext2-stwae,                "通貨"
'901' to wk_movetext2-vrsio.                  "バージョン"
*翌々月
move: p_vkbur  to wk_movetext3-vkbur,           "営業所"
p_vkorg to wk_movetext3-vkorg,           "販売組織"
wk_date3 to wk_movetext3-spmon,             "月"
syst-mandt to wk_movetext3-mandt,   "クライアント"
'JPY' to wk_movetext3-stwae,                "通貨"
'901' to wk_movetext3-vrsio.                  "バージョン"

*WKを１つにまとめる
append: wk_movetext1 to it_modifys901,"当月"'
wk_movetext2 to it_modifys901,"翌月"
wk_movetext3 to it_modifys901."翌々月"

endform.                    "MOVE_CHANGEDATA
" MOVE_CHANGEDATA
*&---------------------------------------------------------------------*
*&      Form  TEXT_RESTRICTION
*&---------------------------------------------------------------------*
*       入力制限
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form text_restriction .
*入力不可制限
loop at screen.
if screen-name = 'P_TEXT1'
or screen-name = 'P_TEXT2'
or screen-name =  'P_TEXT3'
or screen-name =  'P_TEXT4'
or screen-name =  'P_TEXT5'
or screen-name = 'P_TEXT9'.

screen-input       = 0.
screen-intensified = 1.   " 強調表示項目
modify screen.
endif.
endloop.
endform.                    " TEXT_RESTRICTION
*&---------------------------------------------------------------------*
*&      Form  CHECK_PARA
*&---------------------------------------------------------------------*
*       値の存在チェック
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form check_para .

data: lc_vkorg like s901-vkorg,  "販売組織"
lc_vkbur like s901-vkbur .  "営業所"
*販売組織
select single    vkorg
from   tvko
into lc_vkorg
where  vkorg  = p_vkorg.
if sy-subrc <> 0.
message id 'Z1'  type 'E' number '012' with'販売組織'.
endif.
*営業所
select  single   vkbur
from tvbur
into  lc_vkbur
where  vkbur  = p_vkbur.

if sy-subrc <> 0.
message id 'Z1'  type 'E' number '012' with'営業所'.
endif.

if p_date > '999910' .
message id 'Z1'  type 'E' number '601' with '年月' '9999/10以降'.
endif.

endform.                    " CHECK_PARA
*&---------------------------------------------------------------------*
*&      Form  INTO_PARA
*&---------------------------------------------------------------------*
*       I/Fに表示値を入れる
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form into_para .
data: lc_vtext like tvkot-vtext,  "販売組織"
lc_bezei like tvkbt-bezei .  "営業所"
*販売組織
if p_vkorg <> ''.
select single    vtext
from  tvkot
into lc_vtext
where  vkorg  = p_vkorg
and      spras  =  syst-langu.
*値のセット
wk_vkorg  = lc_vtext."販売組織"

endif.
*営業所
if p_vkbur <> ''.
select  single   bezei
from tvkbt
into  lc_bezei
where  vkbur  = p_vkbur
and      spras  = syst-langu.
*値のセット
wk_vkbur  = lc_bezei."営業所".
endif.

endform.                    " INTO_PARA
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_VALUE
*&---------------------------------------------------------------------*
*       金額の入力制限
*----------------------------------------------------------------------*
*      -->P_P_TEXT6  text
*      -->P_P_TEXT2  text
*      -->P_0571   text
*      <--P_WK_MOVETEXT1_NETWR  text
*----------------------------------------------------------------------*
form frm_check_value  using     arg_input
arg_manth
arg_type
changing arg_netwr.
*>>> 2013/01/15 マイナス値対応
*  if arg_input <= 10000000000000."桁数制限"
data: wk_n  type p,
l_c24 type c length 24.
l_c24 = arg_input.
replace all occurrences of ',' in l_c24 with space.
wk_n = l_c24.
if wk_n between c_min_value and c_max_value.
*<<< 2013/01/15 マイナス値対応
*入力された金額をそのまま表示
*>>> 2013/01/15 マイナス値対応
*    move: arg_input to arg_netwr.
arg_netwr = wk_n.
*<<< 2013/01/15 マイナス値対応
*>>> 2013/01/15 マイナス値対応
*  elseif arg_input >= 10000000000000.
else.
*<<< 2013/01/15 マイナス値対応
message id 'Z1'  type 'E' number '901' with arg_manth  arg_type  'は13桁以下で入力してください'.
endif.

endform.                    " FRM_CHECK_VALUE
*&---------------------------------------------------------------------*
*&      Form  CHANGE_GUISTATUS
*&---------------------------------------------------------------------*
*       GUIステータスセット処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form change_guistatus .
*  DATA: LT_EXCLUDE LIKE RSEXFCODE OCCURS 0 WITH HEADER LINE.
data:  stat_exclude type table of sy-ucomm.
call function 'RS_SET_SELSCREEN_STATUS'
exporting
p_status  = 'MANU_01'
p_program = 'ZS003000 '
tables
p_exclude = stat_exclude.

endform.                    " CHANGE_GUISTATUS
*&---------------------------------------------------------------------*
*&      Form  SET_DUMM
*&---------------------------------------------------------------------*
*       ダミーに値をセット
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form set_dumm .

concatenate p_vkorg p_vkbur p_date into wk_dummy.

endform.                    " SET_DUMM
*&---------------------------------------------------------------------*
*&      Form  PLC_CASE
*&---------------------------------------------------------------------*
*       分岐処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form plc_case .

case sy-ucomm.

when 'SAV'. "保存時の処理"
perform ucom_sav .
when 'FC1'."再読み込みボタン"
perform ucom_fc1.
when 'BACK'."戻る"
perform ucom_back.
when others."ENTERのとき"
perform ucom_other.

endcase.

endform.                    " PLC_CASE
*&---------------------------------------------------------------------*
*&      Form  UCOM_SAV
*&---------------------------------------------------------------------*
*       保存時の処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form ucom_sav .
*入力値チェック
perform check_input.
*MOVE&APPEND処理
perform move_changedata.
*更新処理
perform modify_table.

endform.                    " UCOM_SAV
*&---------------------------------------------------------------------*
*&      Form  UCOM_FC1
*&---------------------------------------------------------------------*
*       再読込
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form ucom_fc1 .

if p_text6 = ''
and p_text10 = ''
and p_text7 = ''
and p_text11 = ''
and p_text8 = ''
and p_text12 = ''.

perform set_dumm. "パラメーターの退避"
perform  get_s901data. "Ｓ901のデータ取得
perform arg_write. "値を格納して右寄せ"
perform arg_memory_set."メモリーに退避"

elseif p_text6 = wk_dum6
and p_text10 = wk_dum10
and p_text7 = wk_dum7
and p_text11 = wk_dum11
and p_text8 = wk_dum8
and p_text12 = wk_dum12.

perform set_dumm. "パラメーターの退避"
perform  get_s901data. "Ｓ901のデータ取得
perform arg_write. "値を格納して右寄せ"
perform arg_memory_set."メモリーに退避"

else.
*POPUP処理
perform popup_fc."POPUP"
endif.

if wk_ans ='1'.
perform set_dumm. "パラメーターの退避"
perform  get_s901data. "Ｓ901のデータ取得
perform arg_write. "値を格納して右寄せ"
perform arg_memory_set."メモリーに退避"
elseif wk_ans ='2'
or wk_ans = 'A'.
*値を元に戻す
perform back_para.
endif.
endform.                    " UCOM_FC1
*&---------------------------------------------------------------------*
*&      Form  UCOM_OTHER
*&---------------------------------------------------------------------*
*       ENTER処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form ucom_other .
*入力値チェック
perform check_input.
*WKに値が入ったら、金額値を右寄せ
perform prc_right.
*0は表示させないためにクリア
perform arg_clear: using p_text6,
using p_text10,
using p_text7,
using p_text11,
using p_text8,
using p_text12.
if wk_dummy = p_date.
perform set_dumm. "パラメーターの退避"
perform  get_s901data. "Ｓ901のデータ取得
perform arg_write. "値を格納して右寄せ"
perform arg_memory_set."メモリーに退避"
else.

if wk_dummy <> wk_inputdy. "今選択項目値とチェック"

if p_text6 <> wk_dum6
or p_text10 <> wk_dum10
or p_text7 <> wk_dum7
or p_text11 <> wk_dum11
or p_text8 <> wk_dum8
or p_text12 <> wk_dum12.

"POPUP処理など"
perform popup_fc."POPUP"
if wk_ans ='1'.
perform set_dumm. "パラメーターの退避"
perform  get_s901data. "Ｓ901のデータ取得
perform arg_write. "値を格納して右寄せ"
perform arg_memory_set."メモリーに退避"

elseif wk_ans ='2'
or wk_ans = 'A'.
*値を元に戻す
perform back_para.
endif.
else.
perform set_dumm. "パラメーターの退避"
perform  get_s901data. "Ｓ901のデータ取得
perform arg_write. "値を格納して右寄せ"
perform arg_memory_set."メモリーに退避"
endif.
endif.
endif.
endform.                    " UCOM_OTHER
*&---------------------------------------------------------------------*
*&      Form  FRM_CHANGE_VALUE
*&---------------------------------------------------------------------*
*       型変更と丸め処理
*----------------------------------------------------------------------*
*      -->P_P_TEXT6  text
*      <--P_WK_TEXT6  text
*----------------------------------------------------------------------*
form frm_change_value  using    arg_number
changing arg_text.
*<<< 2013/01/15 マイナス値対応
* data: wk_n(18) type n.
* wk_n  =  arg_number."N型に変換"
data: wk_n  type p,
l_c24 type c length 24.
l_c24 = arg_number.
replace all occurrences of ',' in l_c24 with space.
wk_n = l_c24.
*<<< 2013/01/15 マイナス値対応
write wk_n to arg_text no-zero.
endform.                    " FRM_CHANGE_VALUE
*&---------------------------------------------------------------------*
*&      Form  PRC_RIGHT
*&---------------------------------------------------------------------*
*       金額表示にして右寄せ処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form prc_right .
if p_text6 <> ''
or p_text10 <> ''
or p_text7 <> ''
or p_text11 <> ''
or p_text8 <> ''
or p_text12 <> '' .
*表示金額をカンマ区切りにする
perform change_p.
*右寄せ処理
write p_text6 to p_text6 right-justified. "当月"
write p_text10 to p_text10 right-justified. "当月"
write p_text7 to p_text7 right-justified. "翌月"
write p_text11 to p_text11 right-justified. "翌月"
write p_text8 to p_text8 right-justified. "翌々月"
write p_text12 to p_text12 right-justified. "翌々月"


*桁チェック
perform arg_check_keta:using p_text6 p_text2 'の売上',
using p_text10 p_text2 'の粗利',
using p_text7 p_text3 'の売上',
using p_text11 p_text3 'の粗利',
using p_text8 p_text4 'の売上',
using p_text12 p_text4 'の粗利'.

endif.

endform.                    " PRC_RIGHT
*&---------------------------------------------------------------------*
*&      Form  CHECK_INPUT
*&---------------------------------------------------------------------*
*       入力形式と桁数チェック
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form check_input .

*当月の入力値
perform frm_check_inpu: using p_text6 p_text2 'の売上',
using p_text10 p_text2 'の粗利'.
*翌月の入力値
perform frm_check_inpu: using p_text7 p_text3 'の売上',
using p_text11 p_text3 'の粗利'.
*翌々月の入力値
perform frm_check_inpu: using p_text8 p_text4 'の売上',
using p_text12 p_text4 'の粗利'.

endform.                    " CHECK_INPUT
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_INPU
*&---------------------------------------------------------------------*
*       入力形式と桁数チェック
*----------------------------------------------------------------------*
*      -->P_P_TEXT6  text
*      -->P_P_TEXT2  text
*      -->P_1215   text
*----------------------------------------------------------------------*
form frm_check_inpu  using   inpu_text
inpu_month
inpu_type.
*数字とカンマ以外のチェック
*>>> 2013/01/15 マイナス値対応
*  IF INPU_TEXT CN '1234567890 ,'.
data: l_c24 type c length 24,
l_num type p,
l_rc  type i.
l_c24 = inpu_text.
replace all occurrences of ',' in l_c24 with space.
try.
l_num = l_c24.
catch cx_dynamic_check.
l_rc = 4.
endtry.
if l_rc <> 0.
*<<< 2013/01/15 マイナス値対応
message id  'Z1' type 'E' number '901' with inpu_month inpu_type 'に不正な値が含まれています'.
endif.
endform.                    " FRM_CHECK_INPU
*&---------------------------------------------------------------------*
*&      Form  CHANGE_P
*&---------------------------------------------------------------------*
*       表示する値の変更処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form change_p .
perform prc_mov: changing p_text6,
changing p_text10,
changing p_text7,
changing p_text11,
changing p_text8,
changing p_text12.
endform.                    " CHANGE_P
*&---------------------------------------------------------------------*
*&      Form  PRC_MOV
*&---------------------------------------------------------------------*
*       表示する値の変更処理(空と０は行わない)
*----------------------------------------------------------------------*
*      -->P_P_TEXT6  text
*----------------------------------------------------------------------*
form prc_mov  changing  arg_p_text.
*>>> 2013/01/15 マイナス値対応
*  DATA: ARG_TEXTN(24) TYPE N,
*        ARG_TEXTP(16) TYPE P.
**データ型C→Nへ変換
*  MOVE  ARG_P_TEXT TO ARG_TEXTN .
**データ型N→Ｐへ変換
*  MOVE ARG_TEXTN TO ARG_TEXTP.
**WRITE文
*  WRITE ARG_TEXTP TO ARG_P_TEXT CURRENCY 'JPY'.
data: arg_textp type p,
l_c24 type c length 24.
l_c24 = arg_p_text.
replace all occurrences of ',' in l_c24 with space.
arg_textp = l_c24.
*WRITE文
write arg_textp to arg_p_text currency 'JPY' left-justified.
shift arg_p_text up to '-' left circular.
condense arg_p_text no-gaps.
*<<< 2013/01/15 マイナス値対応
endform.                    " PRC_MOV
*&---------------------------------------------------------------------*
*&      Form  SETDUM_S901
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form setdum_s901 .
*DBの値と入力値との確認
clear:wk_dum6,
wk_dum10,
wk_dum7,
wk_dum11,
wk_dum8,
wk_dum12.

move: p_text6 to wk_dum6,
p_text10 to wk_dum10,
p_text7 to wk_dum7,
p_text11 to wk_dum11,
p_text8  to wk_dum8,
p_text12 to wk_dum12.
endform.                    " SETDUM_S901
*&---------------------------------------------------------------------*
*&      Form  POPUP_FC
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form popup_fc .
clear wk_ans.

call function 'POPUP_TO_CONFIRM'
exporting
titlebar                    = '確認 '
*   DIAGNOSE_OBJECT             = ' '
text_question               = '入力値を破棄し、データを読込ますがよろしいですか'
text_button_1               = wk_popy
*   ICON_BUTTON_1               = ' '
text_button_2               = wk_popn
*   ICON_BUTTON_2               = ' '
default_button              = '1'
display_cancel_button       = 'X'
*   USERDEFINED_F1_HELP         = ' '
start_column                = 25
start_row                   = 6
*   POPUP_TYPE                  =
*   IV_QUICKINFO_BUTTON_1       = ' '
*   IV_QUICKINFO_BUTTON_2       = ' '
importing
answer                      =  wk_ans
* TABLES
*   PARAMETER                   =
* EXCEPTIONS
*   TEXT_NOT_FOUND              = 1
*   OTHERS                      = 2
.
endform.                    " POPUP_FC
*&---------------------------------------------------------------------*
*&      Form  UCOM_BACK
*&---------------------------------------------------------------------*
*       戻る処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form ucom_back .
*DBと一緒
if p_text6 = wk_dum6
and p_text10  = wk_dum10
and p_text7 = wk_dum7
and p_text11 = wk_dum11
and p_text8 = wk_dum8
and p_text12 = wk_dum12 .
leave program.
*何も入力値なし
elseif p_text6 = ''
and p_text10 = ''
and p_text7 = ''
and p_text11 = ''
and p_text8 = ''
and p_text12 = ''.
leave program.
*DBと異なる場合はPOPUP
elseif p_text6 <> wk_dum6
or p_text10  <> wk_dum10
or p_text7 <> wk_dum7
or p_text11 <> wk_dum11
or p_text8 <> wk_dum8
or p_text12 <> wk_dum12 .
*POPUPを出す
perform popup_end."POPUP"

if wk_ans ='1'.
leave program.
endif.
*一つでも値がある場合はPOPUP
elseif p_text6 <> ''
or p_text10 <> ''
or p_text7 <> ''
or p_text11 <> ''
or p_text8 <> ''
or p_text12 <> ''.
perform popup_end."POPUP"
if wk_ans ='1'.
leave program.
endif.
else.
leave program.
endif.

endform.                    " UCOM_BACK
*&---------------------------------------------------------------------*
*&      Form  POPUP_END
*&---------------------------------------------------------------------*
*       戻る時のポップアップ
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form popup_end .
clear wk_ans.

call function 'POPUP_TO_CONFIRM'
exporting
titlebar                    = '確認 '
*   DIAGNOSE_OBJECT             = ' '
text_question               = '入力値が破棄されますが、よろしいですか'
text_button_1               = wk_popy
*   ICON_BUTTON_1               = ' '
text_button_2               = wk_popn
*   ICON_BUTTON_2               = ' '
default_button              = '1'
display_cancel_button       = 'X'
*   USERDEFINED_F1_HELP         = ' '
start_column                = 25
start_row                   = 6
*   POPUP_TYPE                  =
*   IV_QUICKINFO_BUTTON_1       = ' '
*   IV_QUICKINFO_BUTTON_2       = ' '
importing
answer                      =  wk_ans
* TABLES
*   PARAMETER                   =
* EXCEPTIONS
*   TEXT_NOT_FOUND              = 1
*   OTHERS                      = 2
.
endform.                    " POPUP_END
*&---------------------------------------------------------------------*
*&      Form  BACK_PARA
*&---------------------------------------------------------------------*
*       値を戻す処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form back_para .
*パラメーターの変更
wk_toptext = '月度予定'.
clear wk_inputdy.

move wk_dummy to wk_inputdy.

p_vkorg = wk_inputdy+0(4).
p_vkbur = wk_inputdy+4(4).
p_date   = wk_inputdy+8(6).

concatenate wk_date1dy+0(4) '/' wk_date1dy+4(2) wk_toptext into p_text2."当月"
concatenate wk_date2dy+0(4) '/' wk_date2dy+4(2) wk_toptext into p_text3."翌月"
concatenate wk_date3dy+0(4) '/' wk_date3dy+4(2) wk_toptext into p_text4."翌々月"

*0は表示させないためにクリア
perform arg_clear: using p_text6,
using p_text10,
using p_text7,
using p_text11,
using p_text8,
using p_text12.

endform.                    " BACK_PARA
*&      Form  ARG_WRITE
*&---------------------------------------------------------------------*
*       テーブルに書き込む処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form arg_write .

perform  set_s901data. "S901のデータをテーブルに表示

endform.                    " ARG_WRITE
*&---------------------------------------------------------------------*
*&      Form  ARG_MEMORY_SET
*&---------------------------------------------------------------------*
*       メモリーに退避させる処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form arg_memory_set .
perform setdum_s901."DBのデータを退避"
endform.                    " ARG_MEMORY_SET
*&---------------------------------------------------------------------*
*&      Form  ARG_CHANGE_CUR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_WK_MOVETEXT1_NETWR  text
*----------------------------------------------------------------------*
form arg_change_cur  changing p_wk_netwr.

data wk_para like bapicurr-bapicurr.
wk_para = p_wk_netwr.
call function 'BAPI_CURRENCY_CONV_TO_INTERNAL'
exporting
currency             = 'JPY'
amount_external      = wk_para
max_number_of_digits = 15
importing
amount_internal      = p_wk_netwr
*     RETURN               =
.
endform.                    " ARG_CHANGE_CUR
*&---------------------------------------------------------------------*
*&      Form  ARG_CHECK_KETA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_TEXT6  text
*      -->P_P_TEXT2  text
*      -->P_1480   text
*----------------------------------------------------------------------*
form arg_check_keta  using inpu_t
inpu_mon
inpu_ty.
*>>> 2013/01/15 マイナス値対応
*  DATA :WK_INP(18) TYPE N.
*  CLEAR :WK_INP.
**INPUTの形式を変更
*  wk_inp = inpu_t.
*  IF WK_INP >= 10000000000000.
data: wk_inp type p,
l_c24  type c length 24,
l_rc   type i.
l_c24 = inpu_t.
replace all occurrences of ',' in l_c24 with space.
try.
wk_inp = l_c24.
catch cx_dynamic_check.
l_rc = 4.
endtry.
if l_rc <> 0.
message id  'Z1' type 'E' number '901' with inpu_mon  inpu_ty 'に不正な値が含まれています'.
endif.
if wk_inp not between c_min_value and c_max_value.
*<<< 2013/01/15 マイナス値対応
message id 'Z1'  type 'E' number '901' with inpu_mon  inpu_ty  'は13桁以下で入力してください'.
endif.


endform.                    " ARG_CHECK_KETA
*&---------------------------------------------------------------------*
*&      Form  ARG_CLEAR
*&---------------------------------------------------------------------*
*       表示時に０は空白にする
*----------------------------------------------------------------------*
*      -->P_P_TEXT6  text
*----------------------------------------------------------------------*
form arg_clear  using  arg_textcl.
data wk_lccr(15) type n.
move arg_textcl to wk_lccr.

if wk_lccr = 0.

clear arg_textcl.

endif.

endform.                    " ARG_CLEAR
