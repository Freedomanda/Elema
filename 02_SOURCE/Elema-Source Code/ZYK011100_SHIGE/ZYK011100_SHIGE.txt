*&--------------------------------------------------------------------*
*&                                                                    *
*& 検収照合システム                                                   *
*&     プログラム名称：売上データ入力                                 *
*&     プログラムＩＤ：YK011100                                       *
*&     作成者　　　　：K.NAKASONE(NSP)   作成日　　　　：2001/12/03   *
*&     更新者　　　　：K.NAKASONE        更新日　　　　：2001/12/12   *
*　　　　　　　　             　       仕様変更        ：2002/01/09   *
*                     :K.KAJISA          更新日　　　　：2002/02/14   *
*                      RRFLGへの値のセット                            *
*                     :K.KAJISA          更新日　　　　：2002/03/04   *
*                      選択画面のレイアウト変更                       *
*                     :K.KAJISA          更新日　　　　：2002/03/13   *
*                      単価算出ロジックの変更                         *
*                     :KURANO            更新日　　　　：2002/05/27   *
*                      品目コードが無くても削除しないように変更       *
*                     :INAGOSHI          更新日　　　　：2002/06/11a  *
*                      NAST無効の場合、最初に得意先をPARV=Y4に限定    *
*                     :KURANO            更新日　　　　：2002/07/25   *
*                      VBRKのSELECT文の修正                           *
*                     :KAJISA            更新日　　　　：2002/08/06   *
*                     受注伝票上の明細カテゴリを取得し､
*                     その値がパラメータで与えられた値であれば､
*                     その明細に対しての品目テキストが取得できない場合に
*                     出力されるコメントを現在出力されているもの
*                     ではないコメントを出力するものです。
*                     :KAJISA            更新日　　　　：2002/08/09   *
*                     営業所、営業GRPの有効無効ボタン作成
*                     :KAJISA            更新日　　　　：2002/09/05   *
*                     メッセージのインフォメーション化
*                     :KAJISA            更新日　　　　：2002/10/09   *
*                     R3から取り込む時点で照合結果 ='1'
*{   INSERT         TEDK906063                                        2
*                     :DMC A.MASUDA      更新日        ：2005/01/18   *
*                     処理対象レコードの内、得意先請求書:会計テキスト画
*                     面の「項目：高千穂請求書」が空白の得意先のデータの
*                     み登録を行う
*}   INSERT
*{   INSERT         TEDK906228                                        3
*                     :DMC K.ONODA       更新日        ：2005/01/18   *
*                     処理対象レコードの内、得意先請求書会計テキスト画
*                     面の「項目：高千穂請求書」が『空白』かつ『XXX』の
*                     得意先のデータのみ登録を行う
*}   INSERT
*&--------------------------------------------------------------------*
report     yk011100
line-size 170
line-count 58
no standard page heading
message-id y1 .
*---------------------------------------------------------------------
*   宣言部
*---------------------------------------------------------------------
tables:  yk130,                     " 売上データ
yk140,                     " 売上集計データ
vbak,                      " 販売伝票ヘッダデータ
vbap,                      " 販売伝票明細データ
vbpa,                      " 販売伝票:取引先　　　
vbkd,                      " 販売伝票:ビジネスデータ
fplt,                      " 請求計画:日付
vbrk,                      " 請求書：ヘッダデータ
vbrp,                      " 請求伝票：明細データ
tvfk,                      " 請求伝票:伝票タイプ
nast,                      " ﾒｯｾｰｼﾞｽﾃｰﾀｽ用データ
makt,                      " ﾃｷｽﾄデータ
knvp.                      " 得意先マスタ 取引先機能データ

* 初期処理用共用テーブル
data: begin of ita_tbl occurs 0,
vbeln      like vbrk-vbeln,    " 請求伝票ヘッダデータ
objky      like nast-objky,    " 対象キー
kappl      like nast-kappl,    " アプリケーション
kschl      like nast-kschl,    " メッセージタイプ
spras      like nast-spras,    " メッセージ言語
parnr      like nast-parnr,    " メッセージ取引先
parvw      like nast-parvw,    " パートンナ機能
erdat      like nast-erdat,    " ステータスﾚｺｰﾄﾞ登録日
eruhr      like nast-eruhr,    " ステータスﾚｺｰﾄﾞ登録時刻
vstat      like nast-vstat,    " 出力処理ステータス
end of ita_tbl.

*　 請求伝票コード格納テーブル1
data: begin of itbl_1 occurs 0,
mandt       like yk130-mandt,     " クライアント
vbeln       like vbrp-vbeln,      " 請求伝票番号
posnr       like vbrp-posnr,      " 請求伝票明細
fixflg      like yk130-fixflg,    " 確定フラグ
kekkbn      like yk130-kekkbn,    " 照合結果区分
kunag       like vbrk-kunag,      " 得意先コード
kunn2       like knvp-kunn2,      " 検収先
vkorg       like vbrk-vkorg,      " 販売組織
vtweg       like vbrk-vtweg,      " 流通ﾁｬﾝﾈﾙ
spart       like vbrk-spart,      " 製品部門
vkbur       like vbrp-vkbur,      " 営業所
vkgrp       like vbrp-vkgrp,      " 営業ｸﾞﾙｰﾌﾟ
bukrs       like vbrk-bukrs,      " 会社ｺｰﾄﾞ
gsber       like vbrp-gsber,      " 事業領域
bstkd       like vbkd-bstkd,      " 得意先発注番号
maktx       like makt-maktx,      " 品目テキスト
matnr       like vbrp-matnr,      " 請求伝票明細:品目ｺｰﾄﾞ
kdmat       like vbap-kdmat,      " 得意先品目ｺｰﾄﾞ
ykyear      like yk130-ykyear,    " 暦年
zfbdt       like yk130-zfbdt,     " 締日
fkdat       like vbrk-fkdat,      " 請求日
fkimg       like vbrp-fkimg,      " 数量
vrkme       like vbrp-vrkme,      " 単位　
knuntprc    like yk130-knuntprc,  " 単価
netwr       like vbrp-netwr,      " 税抜金額
mwsbp       like vbrp-mwsbp,      " 消費税
knetxamt    like yk130-knetxamt,  " 税込金額
waerk       like vbrk-waerk,      " 通貨コード
prcdat      like yk130-prcdat,    " 処理日
prcno       like yk130-prcno,     " 処理番号
insdat      like syst-datum,      " 登録日
instim      like syst-uzeit,      " 登録時刻
insusr      like syst-uname,      " 登録ユーザ
upddat      like yk130-upddat,    " 変更日
updtim      like yk130-updtim,    " 変更時刻
updusr      like yk130-updusr,    " 変更ユーザ
objky       like nast-objky,      " 選択'有効'対象キー
aubel       like vbrp-aubel,      " 販売伝票
aupos       like vbrp-aupos,      " 販売伝票明細
vbtyp       like tvfk-vbtyp,      " 販売伝票ｶﾃｺﾞﾘ
vgtyp       like vbrp-vgtyp,      "2002/02/14 ADD
rrflg       like yk130-rrflg,     "2002/02/14 ADD
fkart       like vbrk-fkart,      " 請求タイプ
erdat       like nast-erdat,      " ステータスﾚｺｰﾄﾞ登録日
eruhr       like nast-eruhr,      " ステータスﾚｺｰﾄﾞ登録時刻
fg_1(3),                          " YK130ﾁｪｯｸエラー記録フラグ
fg_vbrk(2),                       " 記号フラグ定義
fg_vbkd(2),                       " 記号フラグ定義
fg_vbap(2),                       " 記号フラグ定義
fg_knvp(2),                       " 記号フラグ定義
fg_zfbdt(2),                      " 締日ｴﾗｰ記号フラグ定義
fg_makt(2),                       " 記号フラグ定義
*2002/08/06 ADD START
PSTYV        LIKE VBAP-PSTYV,     " 受注明細テキスト?
FG_KIGOU(2),                      " 記号フラグ定義?
*2002/08/06 ADD END
end   of itbl_1.


*　 ｴﾗｰﾃﾞｰﾀ格納テーブル3
data: begin of itbl_3 occurs 0,
mandt       like yk130-mandt,     " クライアント
vbeln       like vbrp-vbeln,      " 請求伝票番号
posnr       like vbrp-posnr,      " 請求伝票明細
fixflg      like yk130-fixflg,    " 確定フラグ
kekkbn      like yk130-kekkbn,    " 照合結果区分
kunag       like vbrk-kunag,      " 得意先コード
kunn2       like knvp-kunn2,      " 検収先
vkorg       like vbrk-vkorg,      " 販売組織
vtweg       like vbrk-vtweg,      " 流通ﾁｬﾝﾈﾙ
spart       like vbrk-spart,      " 製品部門
vkbur       like vbrp-vkbur,      " 営業所
vkgrp       like vbrp-vkgrp,      " 営業ｸﾞﾙｰﾌﾟ
bukrs       like vbrk-bukrs,      " 会社ｺｰﾄﾞ
gsber       like vbrp-gsber,      " 事業領域
bstkd       like vbkd-bstkd,      " 得意先発注番号
maktx       like makt-maktx,      " 品目テキスト
matnr       like vbrp-matnr,      " 請求伝票明細:品目ｺｰﾄﾞ
kdmat       like vbap-kdmat,      " 得意先品目ｺｰﾄﾞ
ykyear      like yk130-ykyear,    " 暦年
zfbdt       like yk130-zfbdt,     " 締日
fkdat       like vbrk-fkdat,      " 請求日
fkimg       like vbrp-fkimg,      " 数量
vrkme       like vbrp-vrkme,      " 単位　
knuntprc    like yk130-knuntprc,  " 単価
netwr       like vbrp-netwr,      " 税抜金額
mwsbp       like vbrp-mwsbp,      " 消費税
knetxamt    like yk130-knetxamt,  " 税込金額
waerk       like vbrk-waerk,      " 通貨コード
prcdat      like yk130-prcdat,    " 処理日
prcno       like yk130-prcno,     " 処理番号
insdat      like syst-datum,      " 登録日
instim      like syst-uzeit,      " 登録時刻
insusr      like syst-uname,      " 登録ユーザ
upddat      like yk130-upddat,    " 変更日
updtim      like yk130-updtim,    " 変更時刻
updusr      like yk130-updusr,    " 変更ユーザ
objky       like nast-objky,      " 選択'有効'対象キー
aubel       like vbrp-aubel,      " 販売伝票
aupos       like vbrp-aupos,      " 販売伝票明細
vbtyp       like tvfk-vbtyp,      " 販売伝票ｶﾃｺﾞﾘ
fkart       like vbrk-fkart,      " 請求タイプ
erdat       like nast-erdat,      " ステータスﾚｺｰﾄﾞ登録日
eruhr       like nast-eruhr,      " ステータスﾚｺｰﾄﾞ登録時刻
fg_1(3),                          " YK130ﾁｪｯｸエラー記録フラグ
fg_vbrk(2),                       " 記号フラグ定義
fg_vbkd(2),                       " 記号フラグ定義
fg_vbap(2),                       " 記号フラグ定義
fg_knvp(2),                       " 記号フラグ定義
fg_zfbdt(2),                      " 締日ｴﾗｰ記号フラグ定義
fg_makt(2),                       " 記号フラグ定義
*2002/08/06 ADD START
PSTYV        LIKE VBAP-PSTYV,
FG_KIGOU(2),                      " 記号フラグ定義?
*2002/08/06 ADD END
end of itbl_3.

*  ﾃﾞｰﾀﾍﾞｰｽ130出力用ﾃｰﾌﾞﾙ
data:begin of data_130tbl occurs 1.         " YK130更新用
include structure yk130.
data: fg_2 type c.
data:end of data_130tbl.

* ﾃﾞｰﾀﾍﾞｰｽ140出力用ﾃｰﾌﾞﾙ
data:begin of itbl_4 occurs 1.             " YK140更新用
include structure yk140.
data:end of itbl_4.
data w_waers like yk140-waers.             " 通貨退避用

*  YK130の登録件数統計カウント
data: ct_yk130_out  type i.               " 登録件数統計カウント
*DATA: ITBL_1_OUT TYPE I.

*  YK140の登録件数統計カウント
data: ct_yk140_out  type i.               " 登録件数統計カウント

*  YK140の更新件数統計カウント
data: ct_yk140_new_out type i.  " 更新件数統計カウント

* YK140ﾃｰﾌﾞﾙ税抜金額更新用集計項目ﾊﾞｯﾌｧ
data w_knitxamt like yk140-knitxamt.

* YK140ﾃｰﾌﾞﾙ消費税額更新用集計項目ﾊﾞｯﾌｧ
data w_kntaxamt like yk140-kntaxamt.

* YK140ﾃｰﾌﾞﾙ税込金額更新用集計項目ﾊﾞｯﾌｧ
data w_knetxamt like yk140-knetxamt.

data: fg_lockerr type c.               "エラー判定フラグ

*ADD 2002/06/05
data: wa_spart like vbrk-spart.        "ADD 2002/05/05
*ADD(END)

*DATA ROW_CNT TYPE I.  " データ検査
*{   INSERT         TEDK906063                                        1
* 2005/01/18 APPEND DMC A.MASUDA START -->
RANGES: gr_kunnr FOR knvp-kunnr.
* 2005/01/18 APPEND DMC A.MASUDA END   <--
*}   INSERT
*---------------------------------------------------------------------
*   入力画面定義
*---------------------------------------------------------------------
**2002/03/04 ADD START
*PARAMETERS:P_BUKRS LIKE VBRK-BUKRS MEMORY ID BUK OBLIGATORY, "会社
*           P_VKORG LIKE VBRK-VKORG MEMORY ID VKO OBLIGATORY, "販売組織
*           P_VTWEG LIKE VBRK-VTWEG MEMORY ID VTW OBLIGATORY, "流通
*           P_SPART LIKE VBRK-SPART MEMORY ID SPA OBLIGATORY. "製品部門
*SELECT-OPTIONS: S_GSBER FOR VBRP-GSBER,   "事業領域
*                S_VKBUR FOR VBRP-VKBUR,   "営業所
*                S_VKGRP FOR VBRP-VKGRP.   "営業グループ
**2002/03/04 ADD END
*SELECTION-SCREEN SKIP 1.
* 第一枠
*SELECTION-SCREEN BEGIN OF BLOCK BLKO1 WITH FRAME .
select-options s_vbeln for vbrk-vbeln. "請求伝票番号
*SELECTION-SCREEN SKIP 1.
select-options s_kunag for vbrk-kunag. "得意先コード
*SELECTION-SCREEN END OF BLOCK BLKO1.
*2002/08/07 ADD START
select-options s_PSTYV for VBAP-PSTYV.
*2002/08/07 ADD END

* 第二枠
*SELECTION-SCREEN BEGIN OF BLOCK BLKO2 WITH FRAME .
parameters: p_kappl like nast-kappl obligatory default 'V3'.
*SELECTION-SCREEN SKIP 1.
parameters: p_kschl like nast-kschl obligatory default 'YK01'.
*SELECTION-SCREEN END OF BLOCK BLKO2.

* 第三枠
*SELECTION-SCREEN BEGIN OF BLOCK BLKO3 WITH FRAME TITLE TEXT-006.
*SELECTION-SCREEN SKIP 1.
parameters: b_on radiobutton group g1.         " 有効
parameters: b_off radiobutton group g1.        " 無効
*SELECTION-SCREEN SKIP 1.
*SELECTION-SCREEN END OF BLOCK BLKO3.
*2002/08/09 ADD START
parameters: b_VKBUR1 radiobutton group g2.        " 有効
parameters: b_VKBUR2 radiobutton group g2.        " 無効
parameters: b_VKGRP1 radiobutton group g3.        " 有効
parameters: b_VKGRP2 radiobutton group g3.        " 無効
*2002/08/09 ADD END
**********************************************************************
initialization.
data  w_vbeln_low  type vbrk-vbeln.
data  w_vbeln_high type vbrk-vbeln.
*請求番号の初期値提案
clear s_vbeln.
select single max( vbeln ) into w_vbeln_low from yk130
where vbeln >= 0 and vbeln < 9999999999.
if sy-subrc = 0.
s_vbeln-sign   = 'I'.
s_vbeln-option = 'EQ'.
add 1 to w_vbeln_low.
else.
clear w_vbeln_low.
endif.
s_vbeln-low = w_vbeln_low. "請求番号の初期値-LOW
select single max( vbeln ) into w_vbeln_high from vbrk
where vbeln >= 0 and vbeln <= 9999999999.
if sy-subrc = 0.
add 0 to w_vbeln_high. "数値として比較するため
if w_vbeln_high ge w_vbeln_low.
s_vbeln-sign   = 'I'.
s_vbeln-option = 'BT'.
s_vbeln-low    = w_vbeln_low.  "請求番号の初期値-LOW
s_vbeln-high   = w_vbeln_high. "請求番号の初期値-HIGH
else.
clear s_vbeln-high.
endif.
endif.
append s_vbeln.

MESSAGE S400 WITH s_vbeln-LOW.
**********************************************************************
*  PERFORM PARAM_CHECK_RTN.       " ユーザパラメータのチェック
**********************************************************************
at selection-screen.
**********************************************************************
start-of-selection.
**********************************************************************
**
MESSAGE S400 WITH s_vbeln-LOW.
perform sec_gamen.                        " 選択画面処理
perform int_sec.                          " 初期処理
perform main_sec.                         " メイン処理
perform end_sec.                          " 終了処理
**
**********************************************************************
end-of-selection.
**********************************************************************
*TOP-OF-PAGE.
*  PERFORM OUTPUT_HEADER.
*&--------------------------------------------------------------------
*       選択画面処理
*---------------------------------------------------------------------
form sec_gamen.
if b_on = 'X'.      " 有効を選択された場合
perform  get_nast.
else.
b_off = 'X'.      " 無効を選択された場合
perform get_vbrk.
endif.
endform.                                                " SEC_GAMEN
*&--------------------------------------------------------------------
*&      Form  INT_SEC
*&--------------------------------------------------------------------
*       初期処理
*---------------------------------------------------------------------
form int_sec.
* YK130がロックされます
call function 'ENQUEUE_EY_YK130'
exporting
mandt          = sy-mandt
exceptions
foreign_lock   = 1
system_failure = 2
others         = 3.
if sy-subrc <> 0.
fg_lockerr = 'X'.        "ロックエラー
*    message s682 with 'YK130'.                     " 2002/01/30
message i682 with 'YK130'.                     " 2002/09/04 MOD
*      WRITE: /5 '売上データがロックできませんでした'.
endif.
check fg_lockerr is initial.

*  YK140がロックされます
call function 'ENQUEUE_EY_YK140'
exporting
mandt          = sy-mandt
exceptions
foreign_lock   = 1
system_failure = 2
others         = 3.
if sy-subrc <> 0.
fg_lockerr = 'X'.      "ロックエラー
*    message s682 with 'YK140'   .                      " 2002/01/30
message I682 with 'YK140'   .                      " 2002/09/05 MOD
*     WRITE: /5 '合計データがロックできませんでした'.
stop.
endif.
endform.                                                   " INT_SEC
*&--------------------------------------------------------------------
*&      Form  MAIN_SEC
*&--------------------------------------------------------------------
*       メイン処理
*---------------------------------------------------------------------
form main_sec.
perform get_vbrp.         " メインﾃﾞｰﾀﾍﾞｰｽﾃﾞｰﾀを取得する
perform get_hosoku.       " 補足ﾃﾞｰﾀﾍﾞｰｽﾃﾞｰﾀを取得する
perform check_yk130.      " データチェック、ﾃﾞｰﾀﾍﾞｰｽﾃｰﾌﾞﾙYK130を登録
perform get_syukei.       " データ集計
*  PERFORM CHECK_YK140.      " データチェック、ﾃﾞｰﾀﾍﾞｰｽﾃｰﾌﾞﾙを登録或更新
perform err_out.          " エラーメッセージを出力
endform.                                                  " MAIN_SEC
*&--------------------------------------------------------------------
*&      Form  GET_NAST
*&--------------------------------------------------------------------
*       画面入力値取得
*---------------------------------------------------------------------
*      　有効処理
*---------------------------------------------------------------------
form get_nast.
clear: nast.
select objky kappl kschl spras parnr parvw erdat eruhr
into corresponding fields of ita_tbl
from nast where kappl = p_kappl
and kschl = p_kschl
and vstat <> '1'.        " 12/3仕様追加
ita_tbl-vbeln = ita_tbl-objky.
ita_tbl-erdat = nast-erdat.
ita_tbl-eruhr = nast-eruhr.
append ita_tbl.
endselect.
*  SKIP 1.                                     " 2002/01/31変更
*  WRITE: / 'NAST検索：　　有効'.              " 2002/01/31変更
endform.                                                  " GET_NAST
*&--------------------------------------------------------------------
*&      Form  GET_VBRK
*&--------------------------------------------------------------------
*       画面ﾊﾟﾗﾒｰﾀ取得
*---------------------------------------------------------------------
*       無効処理
*---------------------------------------------------------------------
form get_vbrk.
***--- ADD 2002/06/12a (start)
ranges: r_kunnr for  knvp-kunnr.
data  : w_kunnr like knvp-kunnr.
data    w_vbrk  like vbrk. "ADD 2002/07/25

refresh r_kunnr.
clear   r_kunnr.
select kunnr into w_kunnr
from knvp
where kunnr in s_kunag
and parvw = 'Y4'.
r_kunnr-sign   ='I'.
r_kunnr-option = 'EQ'.
r_kunnr-low    = w_kunnr.
append r_kunnr.
clear r_kunnr.
endselect.
if sy-subrc <> 0.
*   message s400 with 'KNVP-PARVW=Y4 ; Not Found'.
message i400 with 'KNVP-PARVW=Y4 ; Not Found'. "2002/09/05 MOD
stop.
endif.
***--- ADD 2002/06/12a (end)
clear: vbrk.
* MOD 2002/07/25 START r_kunnr が大きすぎたためSQLエラーが発生
* select vbeln into corresponding fields of ita_tbl
*              from vbrk where vbeln in s_vbeln
*                           and kunag in s_kunag. "MOD 2002/06/12a
*                          and kunag in r_kunnr.
*   append ita_tbl.
* endselect.
select * into  w_vbrk
from  vbrk
where vbeln in s_vbeln.
if w_vbrk-kunag in r_kunnr.
move-corresponding w_vbrk to ita_tbl.
append ita_tbl.
endif.
endselect.
* MOD 2002/07/25 END
if sy-subrc <> 0.           " 2002/01/31
message s683 .            " 2002/01/31
stop.                     " 2002/01/31
endif.
*  SKIP 1.
*  WRITE: / 'NAST検索：　　無効'.         " 12/3仕様追加
endform.                                                " GET_VBRK
*&--------------------------------------------------------------------
*&      Form  GET_VBRP
*&--------------------------------------------------------------------
*       3-1: 請求明細データを取得する
*---------------------------------------------------------------------
form get_vbrp.
clear: vbrp.
loop at ita_tbl.
select vbeln posnr matnr fkimg netwr mwsbp aubel
aupos gsber vrkme vkbur vkgrp
vgtyp "2002/02/14 ADD
into corresponding fields of itbl_1
from vbrp
where vbeln = ita_tbl-vbeln.
itbl_1-insdat = syst-datum.
itbl_1-instim = syst-uzeit.
itbl_1-insusr = syst-uname.
*2002/08/09 ADD START
IF B_VKBUR2 = 'X'. CLEAR itbl_1-VKBUR. ENDIF. "営業所クリア
IF B_VKGRP2 = 'X'. CLEAR itbl_1-VKGRP. ENDIF. "営業GRPクリア
*2002/08/09 ADD END
append itbl_1.
endselect.
endloop.

sort itbl_1 by vbeln posnr. " 2002/01/31
if sy-subrc <> 0.           " 2002/01/31
message s683 .            " 2002/01/31
stop.                     " 2002/01/31
endif.

*  IF ITBL_1[] IS INITIAL.
*    MESSAGE E008 WITH
*     '該当データは存在しません。'  SY-REPID.  " ﾌﾟﾛｸﾞﾗﾑID
*  ENDIF.
endform.                                                   " GET_VBRP
*&---------------------------------------------------------------------*
*&      Form  GET_HOSOKU
*&---------------------------------------------------------------------*
*       補足請求明細データを取得する
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form get_hosoku.
loop at itbl_1.
perform get_vbrk_1.       " 請求伝票ヘッダﾃﾞｰﾀの取得
perform get_vbkd.         " 販売伝票ビジネスデータの取得
perform get_vbap.         " 販売伝票明細データの取得
perform get_knvp.         " 検収先ﾃﾞｰﾀを取得する
perform get_makt.         " 品目テキストﾃﾞｰﾀを取得する
perform get_zfbdt.        " 締日ﾃﾞｰﾀを取得する
perform get_vbtyp.        " 販売伝票カテゴリを取得する
modify itbl_1.             " 請求情報格納
endloop.
*{   INSERT         TEDK906063                                        1
* 2005/01/18 APPEND DMC A.MASUDA START -->
DATA W_CNT TYPE I.
DESCRIBE TABLE gr_kunnr LINES W_CNT.
IF W_CNT <> 0.
DELETE itbl_1 WHERE kunag IN gr_kunnr.
ENDIF.
* 2005/01/18 APPEND DMC A.MASUDA END   <--
*}   INSERT
endform.                                                  " GET_HOSOKU
*&---------------------------------------------------------------------*
*&      Form  GET_VBRK_1
*&---------------------------------------------------------------------*
* 3-2: 請求伝票ヘッダデータを取得
*----------------------------------------------------------------------*
form get_vbrk_1.
select single vkorg vtweg spart fkdat kunag bukrs waerk fkart
vbtyp "2002/02/14 ADD
into corresponding fields of itbl_1
from vbrk where vbeln = itbl_1-vbeln.

if sy-subrc <> 0.
itbl_1-fg_vbrk = 'ON'.
move-corresponding itbl_1 to itbl_3.
append: itbl_3.
else.                   "2002/02/14 ADD START
case itbl_1-vbtyp.
when 'P'.
if itbl_1-vgtyp = 'L' or itbl_1-vgtyp = 'M'.
itbl_1-rrflg = 'X'.
endif.
when 'O'.
if itbl_1-vgtyp = 'K' or itbl_1-vgtyp = 'M'.
itbl_1-rrflg = 'X'.
endif.
when 'N'.
if itbl_1-vgtyp = 'L'.
itbl_1-rrflg = 'X'.
endif.
when 'S'.
if itbl_1-vgtyp = 'K'.
itbl_1-rrflg = 'X'.
endif.
endcase.
*{   INSERT         TEDK906063                                        1
* 2005/01/18 APPEND DMC A.MASUDA START -->
PERFORM check_kaikei_text.
* 2005/01/18 APPEND DMC A.MASUDA END   <--
*}   INSERT
endif.
endform.                                                 " GET_VBRK_1
*{   INSERT         TEDK906063                                        1
* 2005/01/18 APPEND DMC A.MASUDA START -->
*&---------------------------------------------------------------------*
*&      Form  CHECK_KAIKEI_TEXT
*&---------------------------------------------------------------------*
*       得意先の会計テキストのチェック
*----------------------------------------------------------------------*
FORM check_kaikei_text.

DATA:
i_tline LIKE STANDARD TABLE OF tline WITH HEADER LINE.
DATA:
lw_name LIKE thead-tdname.

CONCATENATE itbl_1-kunag
itbl_1-bukrs
INTO lw_name.

CALL FUNCTION 'READ_TEXT'  "テキストデータ読込
EXPORTING
*      CLIENT                        = SY-MANDT
id                            = 'ZK01'
language                      = sy-langu
name                          = lw_name
object                        = 'KNB1'
TABLES
lines                         = i_tline
EXCEPTIONS
id                            = 1
language                      = 2
name                          = 3
not_found                     = 4
object                        = 5
reference_check               = 6
wrong_access_to_archive       = 7
OTHERS                        = 8
.
CASE sy-subrc.
WHEN 0 OR 4.
WHEN OTHERS.
MESSAGE s001(z1) WITH '汎用モジュールエラー' sy-subrc.
ENDCASE.
READ TABLE i_tline INTO i_tline INDEX 1.
* 1BYTE目が'X'は対象外
IF ( i_tline-tdline(1) = 'X' )
* 2005/04/20 START_ADD
* 3BYTE目が'X'は対象外
AND ( i_tline-tdline+2(1) <> 'X' ).
* 2005/04/20 END_ADD
gr_kunnr-sign   = 'I'.
gr_kunnr-option = 'EQ'.
gr_kunnr-low = itbl_1-kunag.
APPEND gr_kunnr.
ENDIF.
ENDFORM.
* 2005/01/18 APPEND DMC A.MASUDA END   <--
*}   INSERT
*&---------------------------------------------------------------------*
*&      Form  GET_VBKD
*&---------------------------------------------------------------------*
* 3-3: 販売伝票ﾋﾞｼﾞﾈｽデータを取得
*----------------------------------------------------------------------*
form get_vbkd.
select single bstkd
into corresponding fields of itbl_1
from vbkd where vbeln = itbl_1-aubel
and posnr = '000000'.
if sy-subrc <> 0.
select single bstkd
into corresponding fields of itbl_1
from vbkd where vbeln = itbl_1-aubel
and posnr = itbl_1-aupos.
if sy-subrc <> 0.
itbl_1-fg_vbkd = 'ON'.
move-corresponding itbl_1 to itbl_3.
append: itbl_3.
endif.
endif.
endform.                                                   " GET_VBKD
*&---------------------------------------------------------------------*
*&      Form  GET_VBAP
*&---------------------------------------------------------------------*
* 3-4: 販売伝票明細データを取得
*----------------------------------------------------------------------*
form get_vbap.
*2002/08/06 MOD START
*  select single kdmat
select single kdmat PSTYV
*2002/08/06 MOD END
into corresponding fields of itbl_1
from vbap where vbeln = itbl_1-aubel
and posnr = itbl_1-aupos.

if sy-subrc <> 0.
itbl_1-fg_vbap = 'ON'.
move-corresponding itbl_1 to itbl_3.
append: itbl_3.
endif.
endform.                                                   " GET_VBAP
*&---------------------------------------------------------------------*
*&      Form  GET_KNVP
*&---------------------------------------------------------------------*
* 3-4-2: 検収先を取得する
*----------------------------------------------------------------------*
form get_knvp.

**ADD 2002/06/05
select single spaku into wa_spart from tvta
where vkorg = itbl_1-vkorg
and  vtweg = itbl_1-vtweg.

if sy-subrc <> 0.
wa_spart = itbl_1-spart.
endif.
**ADD(END) 2002/06/05

select kunn2
into corresponding fields of itbl_1
from knvp up to 1 rows
where kunnr = itbl_1-kunag
and vkorg = itbl_1-vkorg
and vtweg = itbl_1-vtweg
*               and spart = itbl_1-spart
and spart = wa_spart   "ADD 2002/06/05
and parvw = 'Y4'.
endselect.
if sy-subrc <> 0.
itbl_1-fg_knvp = 'ON'.
move-corresponding itbl_1 to itbl_3.
append: itbl_3.
endif.
endform.                                                   " GET_KNVP
*&---------------------------------------------------------------------*
*&      Form  GET_MAKT
*&---------------------------------------------------------------------*
*       3-4-3: 品目テキストﾃﾞｰﾀを取得
*----------------------------------------------------------------------*
form get_makt.
select single maktx
into corresponding fields of itbl_1
from makt where matnr = itbl_1-matnr
and spras = sy-langu.

if sy-subrc <> 0.
itbl_1-fg_makt = 'ON'.
move-corresponding itbl_1 to itbl_3.
*2002/08/06 ADD START
CLEAR  itbl_3-FG_KIGOU.
IF ITBL_3-PSTYV IN S_PSTYV.
itbl_3-FG_KIGOU = 'ON'.
ENDIF.
*2002/08/06 ADD START
append: itbl_3.
endif.
endform.                                                  " GET_MAKT
*&---------------------------------------------------------------------*
*&      Form  GET_ZFBDT
*&---------------------------------------------------------------------*
* 3-5: 締切日を取得
*----------------------------------------------------------------------*
form get_zfbdt.

**---ADD 2002/06/05
select single spaku into wa_spart from tvta
where vkorg = itbl_1-vkorg
and vtweg = itbl_1-vtweg.

if sy-subrc <> 0.
wa_spart = itbl_1-spart.
endif.
**---ADD(END) 2002/06/05

call function 'YK_ZFBDT_GET_BY_KNVV'
exporting
i_cord         = itbl_1-kunag  " 請求伝票ﾍｯﾀﾞ受注先
i_vkorg        = itbl_1-vkorg  " 請求伝票ﾍｯﾀﾞ販売組織
i_vtweg        = itbl_1-vtweg  " 請求伝票ﾍｯﾀﾞ流通ﾁｬﾝﾈﾙ
*           i_spart        = itbl_1-spart  " 請求伝票ﾍｯﾀﾞ製品部門
i_spart        = wa_spart      " ADD 2002/06/05
i_day          = itbl_1-fkdat  " 請求伝票ﾍｯﾀﾞ請求日
importing
e_zfbdt        = itbl_1-zfbdt  " 締日
exceptions
no_get_t052    = 1
no_good_getday = 2
no_get_zterm   = 3
others         = 4.
if sy-subrc <> 0.
itbl_1-fg_zfbdt = 'ON'.
move-corresponding itbl_1 to itbl_3.
append: itbl_3.
endif.
endform.                                                  " GET_ZFBDT
*&---------------------------------------------------------------------*
*&      Form  GET_VBTYP
*&---------------------------------------------------------------------*
* 3-6:請求明細から、単価、金額を算出する
*----------------------------------------------------------------------*
form get_vbtyp.
*2002/03/13 ADD START
data: w_kingaku  like bapicurr-bapicurr,
w_kingaku2 like bapicurr-bapicurr.
clear w_kingaku.
w_kingaku2 = itbl_1-netwr.
call function 'CURRENCY_AMOUNT_SAP_TO_BAPI'
exporting
currency          = itbl_1-waerk
sap_amount        = w_kingaku2
importing
bapi_amount       = w_kingaku.
*2002/03/13 ADD END
if itbl_1-fkimg > 0.
*    ITBL_1-KNUNTPRC = ITBL_1-NETWR / ITBL_1-FKIMG.  "2002/03/13 MOD
itbl_1-knuntprc = w_kingaku    / itbl_1-fkimg.  "2002/03/13 MOD
itbl_1-knetxamt = itbl_1-netwr + itbl_1-mwsbp.
else.
itbl_1-fkimg = 1.
*    ITBL_1-KNUNTPRC = ITBL_1-NETWR / ITBL_1-FKIMG.  "2002/03/13 MOD
itbl_1-knuntprc = w_kingaku    / itbl_1-fkimg.  "2002/03/13 MOD
itbl_1-knetxamt = itbl_1-netwr + itbl_1-mwsbp.
endif.
*  販売伝票ｶﾃｺﾞﾘ取得
select single vbtyp
into corresponding fields of itbl_1
from tvfk where fkart = itbl_1-fkart.
if itbl_1-vbtyp = 'N' or itbl_1-vbtyp = 'O'.
itbl_1-fkimg = itbl_1-fkimg * -1.
itbl_1-netwr = itbl_1-netwr * -1.
itbl_1-knetxamt = itbl_1-knetxamt * -1.
itbl_1-mwsbp = itbl_1-mwsbp * -1.
elseif
itbl_1-vbtyp = 'P' or
itbl_1-vbtyp = 'S' or
itbl_1-vbtyp = 'M'.
endif.
endform.                                                 " GET_VBTYP
*&---------------------------------------------------------------------*
*&      Form  CHECK_YK130
*&---------------------------------------------------------------------*
* 3-8: 売上ﾃﾞｰﾀを検索、ﾁｪｯｸ
*----------------------------------------------------------------------*
form check_yk130.
* ｴﾗｰﾃｰﾌﾞﾙ中どんな伝票のﾃﾞｰﾀ取得できないを判断する
loop at itbl_3.
if itbl_3-fg_vbrk = 'ON'.
delete itbl_1 where vbeln = itbl_3-vbeln.
endif.
if itbl_3-fg_vbkd = 'ON'.
delete itbl_1 where vbeln = itbl_3-vbeln.
endif.
if itbl_3-fg_vbap = 'ON'.
delete itbl_1 where vbeln = itbl_3-vbeln.
endif.
if itbl_3-fg_knvp = 'ON'.
delete itbl_1 where vbeln = itbl_3-vbeln.
endif.
if itbl_3-fg_makt = 'ON'.
* 2002/05/27 DEL 品目コードが無くても削除しない
*     delete itbl_1 where vbeln = itbl_3-vbeln.
endif.
if itbl_3-fg_zfbdt = 'ON'.
delete itbl_1 where vbeln = itbl_3-vbeln.
endif.
endloop.

loop at itbl_1.
select single * from yk130
where vbeln = itbl_1-vbeln
and posnr = itbl_1-posnr.
if sy-subrc <> 0.
itbl_1-fg_1 = 'OFF'. "
move-corresponding itbl_1 to itbl_3.
append: itbl_3.
else.
itbl_1-fg_1 = 'ON'.
move-corresponding itbl_1 to itbl_3.
append: itbl_3.
endif.
endloop.

loop at itbl_3. " YK130と比較した同じﾃﾞｰﾀあれば
if itbl_3-fg_1 = 'ON'.
delete itbl_1 where vbeln = itbl_3-vbeln.
endif.
endloop.

loop at itbl_1.
move-corresponding itbl_1 to data_130tbl.
data_130tbl-ykyear = itbl_1-zfbdt+0(4).
data_130tbl-kunnr = itbl_1-kunag.
data_130tbl-kunr2 = itbl_1-kunn2.
data_130tbl-knquan = itbl_1-fkimg.
data_130tbl-knunit = itbl_1-vrkme.
data_130tbl-knitxamt = itbl_1-netwr.
data_130tbl-kntaxamt = itbl_1-mwsbp.
data_130tbl-waers = itbl_1-waerk.
append data_130tbl.
endloop.
endform.                                                " CHECK_YK130
*&---------------------------------------------------------------------*
*&      Form  GET_SYUKEI
*&---------------------------------------------------------------------*
*       データ集計
*----------------------------------------------------------------------*
* 3-10: 請求伝票ごとにエラーチェック
form get_syukei.
loop at data_130tbl.
data_130tbl-KEKKBN = '1'.             "2002/10/09 ADD
insert into yk130 values data_130tbl. " ﾃﾞｰﾀﾍﾞｰｽﾃｰﾌﾞﾙに出力用
if sy-subrc = 0.
ct_yk130_out = ct_yk130_out + 1.
* NAST検索条件より、出力処理ステータスを更新してロック解除
if b_on = 'X'.  " 有効場合
nast-objky = data_130tbl-vbeln.
call function 'ENQUEUE_EZNAST'     " NASTﾚｺｰﾄﾞのロック
exporting
mode_nast  = 'E'
mandt      = sy-mandt
kappl      = ita_tbl-kappl
objky      = ita_tbl-objky
kschl      = ita_tbl-kschl
spras      = ita_tbl-spras
parnr      = ita_tbl-parnr
parvw      = ita_tbl-parvw
erdat      = ita_tbl-erdat
eruhr      = ita_tbl-eruhr
exceptions
foreign_lock    = 1
system_failure  = 2
others          = 3.

* ロック成功したかどうかを判断する
if sy-subrc <> 0.
write: / 'ﾒｯｾｰｼﾞデータがロックできませんでした！'.
endif.

update nast set vstat = 1
where kappl = p_kappl
and kschl = p_kschl
and objky = data_130tbl-vbeln.

call function 'DEQUEUE_EZNAST'     " NASTﾚｺｰﾄﾞの解除
exporting
mode_nast    = 'E'
mandt        = sy-mandt
kappl        = ita_tbl-kappl
objky        = ita_tbl-objky
kschl        = ita_tbl-kschl
spras        = ita_tbl-spras
parnr        = ita_tbl-parnr
parvw        = ita_tbl-parvw
erdat        = ita_tbl-erdat
eruhr        = ita_tbl-eruhr.
endif.             " 有効
endif.
endloop.

* 3-11:　内部ﾃｰﾌﾞﾙから各ﾃﾞｰﾀを集計し、別の内部ﾃｰﾌﾞﾙに保存する
* 内部ﾃｰﾌﾞﾙ４に格納
sort itbl_1 by bukrs ykyear kunag kunn2 vkorg vtweg
spart vkbur vkgrp gsber zfbdt.
loop at itbl_1.
move-corresponding itbl_1 to itbl_4.
itbl_4-ykyear = itbl_1-zfbdt+0(4). " 暦年の計算
itbl_4-kunnr = itbl_1-kunag.   " ITBL_2とITBL_4不同名項目が統一
itbl_4-kunr2 = itbl_1-kunn2.
itbl_4-waers = itbl_1-waerk.
itbl_4-knitxamt = itbl_1-netwr.
itbl_4-kntaxamt = itbl_1-mwsbp.
itbl_4-knetxamt = itbl_4-knitxamt + itbl_4-kntaxamt.
append: itbl_4.
endloop.

loop at itbl_4.
w_waers = itbl_4-waers.
at end of zfbdt.
sum.
select single knitxamt kntaxamt knetxamt
from yk140
into (w_knitxamt,w_kntaxamt,w_knetxamt) " 各集計キー
where bukrs = itbl_4-bukrs
and ykyear = itbl_4-ykyear
and kunnr = itbl_4-kunnr
and kunr2 = itbl_4-kunr2
and vkorg = itbl_4-vkorg
and vtweg = itbl_4-vtweg
and spart = itbl_4-spart
and vkbur = itbl_4-vkbur
and vkgrp = itbl_4-vkgrp
and gsber = itbl_4-gsber
and zfbdt = itbl_4-zfbdt.

if sy-subrc <> 0.  "YK140登録データを登録する
itbl_4-insdat = syst-datum.
itbl_4-instim = syst-uzeit.
itbl_4-insusr = syst-uname.
itbl_4-waers  = w_waers.
clear: itbl_4-upddat,itbl_4-updtim,itbl_4-updusr.

insert into yk140 values itbl_4.
ct_yk140_out = ct_yk140_out + 1.
else.             "YK140に加算して、更新する
perform yk140_new_out.
endif.
endat.
endloop.
endform.                                                " GET_SYUKEI
*&--------------------------------------------------------------------
*&      Form  YK140_NEW_OUT(更新)
*---------------------------------------------------------------------
form yk140_new_out.
*CLEAR: W_KNITXAMT,W_KNTAXAMT,W_KNETXAMT.
w_knitxamt = w_knitxamt + itbl_4-knitxamt.
w_kntaxamt = w_kntaxamt + itbl_4-kntaxamt.
w_knetxamt = w_knetxamt + itbl_4-knetxamt.

update yk140 set knitxamt = w_knitxamt
kntaxamt = w_kntaxamt
knetxamt = w_knetxamt
upddat = syst-datum
updtim = syst-uzeit
updusr = syst-uname
where bukrs = itbl_4-bukrs
and ykyear = itbl_4-ykyear
and kunnr = itbl_4-kunnr
and kunr2 = itbl_4-kunr2
and vkorg = itbl_4-vkorg
and vtweg = itbl_4-vtweg
and spart = itbl_4-spart
and gsber = itbl_4-gsber
and vkbur = itbl_4-vkbur
and vkgrp = itbl_4-vkgrp
and zfbdt = itbl_4-zfbdt.

ct_yk140_new_out = ct_yk140_new_out + 1.
endform.                                              " YK140_NEW_OUT
*&---------------------------------------------------------------------*
*&      Form  ERR_OUT
*&---------------------------------------------------------------------*
*       画面出力
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form err_out.
*  出力ﾍｯﾀﾞ表示
skip 1.
if b_on = 'X'.                     " 2002/1/31変更
write: /'NAST検索：　　有効'.    " 2002/1/31変更
skip 1.                          " 2002/1/31変更
else.
b_off = 'X'.                     " 2002/1/31変更
write: /'NAST検索：　　無効'.    " 2002/1/31変更
skip 1.                          " 2002/1/31変更
endif.

write: /1 '請求伝票',
15 '明細番号',
32 'ステータス'.
write: /  sy-uline.

* 画面に出力
* 4-1 内部ﾃｰﾌﾞﾙ３にINSTERｴﾗｰ情報が存在すれば、画面に出力
sort itbl_3 by vbeln posnr.
loop at itbl_3.
if itbl_3-fg_vbrk = 'ON'.
on change of itbl_3-vbeln.
write: /1 itbl_3-vbeln,      " 請求伝票番号
15 itbl_3-posnr,     " 請求伝票明細番号
32 'VBRK取得エラー'.
endon.
endif.

if itbl_3-fg_vbkd = 'ON'.
on change of itbl_3-vbeln.
write: /1  itbl_3-vbeln,     " 請求伝票番号
15 itbl_3-posnr,     " 請求伝票明細番号
32 'VBKD取得エラー'.
endon.
endif.

if itbl_3-fg_vbap = 'ON'.
on change of itbl_3-vbeln.
write: /1  itbl_3-vbeln,     " 請求伝票番号
15 itbl_3-posnr,     " 請求伝票明細番号
32 'VBAP取得エラー'.
endon.
endif.

if itbl_3-fg_knvp = 'ON'.
on change of itbl_3-vbeln.
write: /1  itbl_3-vbeln,     " 請求伝票番号
15 itbl_3-posnr,     " 請求伝票明細番号
32 'KNVP取得エラー'.
endon.
endif.

if itbl_3-fg_makt = 'ON'.
on change of itbl_3-vbeln.
write: /1  itbl_3-vbeln,     " 請求伝票番号
15 itbl_3-maktx.     " 請求伝票明細番号
*2002/08/06 MOD START
*                32 'MAKT取得エラー'.
IF itbl_3-FG_KIGOU = 'ON'.
WRITE: 32 '明細確認'.
ELSE.
WRITE: 32 'MAKT取得エラー'.
ENDIF.
*2002/08/06 MOD END
endon.
endif.

if itbl_3-fg_zfbdt = 'ON'.
on change of itbl_3-vbeln.
write: /1 itbl_3-vbeln,       " 請求伝票番号
15 itbl_3-posnr,      " 請求伝票明細番号
32 '締日取得エラー'.
endon.
endif.
endloop.

loop at itbl_3.
if itbl_3-fg_1 = 'ON'.
write: /1 itbl_3-vbeln,          " 請求伝票番号
15 itbl_3-posnr,         " 請求伝票明細番号
32 'INSERT処理エラー'.
endif.
endloop.
endform.                                                   " ERR_OUT
*&--------------------------------------------------------------------
*&      Form  END_SEC
*&--------------------------------------------------------------------
*       終了処理
*---------------------------------------------------------------------
form end_sec.
skip 1.
* 4-2 YK130ﾃｰﾌﾞﾙの件数を画面に出力
write:/ '登録したYK130の件数:',ct_yk130_out,'件'.

* 4-3 YK140ﾃｰﾌﾞﾙの件数を画面に出力
write:/ '登録したYK140の件数:',ct_yk140_out,'件'.

* 4-4 更新したYK140ﾃｰﾌﾞﾙの件数を画面に出力
write:/ '更新したYK140の件数:',ct_yk140_new_out,'件'.

* アドオンテーブルのロック解除
perform kega_end.     " ﾛｯｸされたﾃｰﾌﾞﾙが解除
endform.                                                  " END_SEC
*&--------------------------------------------------------------------
*&      Form  KEGA_END
*&--------------------------------------------------------------------
*       ロック解除
*---------------------------------------------------------------------
form kega_end.
call function 'DEQUEUE_EY_YK130'    " YK130ロックが解除
exporting
mandt             = sy-mandt.

call function 'DEQUEUE_EY_YK140'            " YK140ロックが解除
exporting
mandt            = sy-mandt.

endform.                                                 " KEGA_END
