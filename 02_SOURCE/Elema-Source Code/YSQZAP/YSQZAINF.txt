***---------------------------------------------------------------------
** (c) Copyright 1998 OptiSystems Solutions LTD. All Rights Reserved  **
***---------------------------------------------------------------------
*-------------------------------------------------------------------
***INCLUDE YSQZAINF .
*-------------------------------------------------------------------
*&---------------------------------------------------------------------*
*&      Form  INF_IMPORT
*&---------------------------------------------------------------------*
FORM INF_IMPORT.
****
IMPORT NAMP    TO STS-NAMP
TB_SQLT TO TB_SQLT
FROM  MEMORY ID 'ZSQLSEL'.
DESCRIBE TABLE TB_SELL LINES STS-NGSEL.
*******
ENDFORM.                    " INF_IMPORT
*&---------------------------------------------------------------------*
*&      Form  INF_EXPORT
*&---------------------------------------------------------------------*
FORM INF_EXPORT.
****
IF STS-RC >= 0.
DESCRIBE TABLE TB_SELL LINES STS-RC.
ENDIF.
****
IF STS-RC > 0.
READ TABLE TB_SELL INDEX 1.
STS-NAMI = TB_SELL-NAMI.
STS-NUMS = TB_SELL-NUMS.
ENDIF.
****
EXPORT RC      FROM STS-RC
NAMI    FROM STS-NAMI
NUMS    FROM STS-NUMS
TB_SELL FROM TB_SELL
TB_SELT FROM TB_SELT
TB_INX  FROM TB_INX
TO MEMORY ID 'ZSQLSEL'.
*******
ENDFORM.                    " INF_EXPORT
*&---------------------------------------------------------------------*
*&      Form  DB_LOAD_TXT
*&---------------------------------------------------------------------*
FORM DB_LOAD_TXT USING PNAMP TYPE YSQZS_TYPES-NAM.
****
read report pnamp into txtp.
IF SY-SUBRC <> 0.
STS-SGS = 'e'.
EXIT.
ENDIF.
****
LOOP AT TXTP.
TRANSLATE TXTP TO UPPER CASE.
MODIFY TXTP.
ENDLOOP.
*******
ENDFORM.                    " DB_LOAD_TXT
*&---------------------------------------------------------------------*
*&      Form  DB_FOR_FROM
*&---------------------------------------------------------------------*
FORM DB_FOR_FROM USING PST_SEL TYPE YSQZS_ST_SEL.
DATA: BEGIN OF L_DBFG OCCURS 0,
FIELDNAME LIKE DD03L-FIELDNAME,
KEYFLAG   LIKE DD03L-KEYFLAG,
END OF L_DBFG.
****
LOOP AT PST_SEL-FROM-TABS INTO WNAMTB.
SELECT SINGLE * FROM DD02L WHERE TABNAME = WNAMTB.
*  select single * from dd02l where tabname = pst_sel-from-tab.
IF SY-TABIX < 0.  PST_SEL-DD-SG_DD = 'n'.  ENDIF.
****
PST_SEL-DD-SG_DD = 'y'.
PST_SEL-DD-TBUFF = DD02L-BUFFERED.
IF DD02L-TABCLASS = 'TRANSP'.  PST_SEL-DD-SG_TRSP = 'y'.
ELSE.                          PST_SEL-DD-SG_TRSP = 'n'.
ENDIF.
IF DD02L-CLIDEP <> ' '.
PST_SEL-DD-SG_MNDT = 'y'.
ELSE.                       PST_SEL-DD-SG_MNDT = 'n'.
ENDIF.
****
REFRESH PST_SEL-DD-FLSG.  PST_SEL-DD-KKEY = 0.
SELECT * FROM DD03L
WHERE TABNAME = WNAMTB
*           where tabname = pst_sel-from-tab
AND FIELDNAME <> '.INCLUDE'
ORDER BY POSITION.
MOVE-CORRESPONDING DD03L TO L_DBFG.
APPEND L_DBFG TO PST_SEL-DD-FLSG.
IF DD03L-KEYFLAG <> ' '.  ADD 1 TO PST_SEL-DD-KKEY.  ENDIF.
ENDSELECT.
****
ENDLOOP.
*******
ENDFORM.                    " DB_FOR_FROM
*&---------------------------------------------------------------------*
*&      Form  DB_GET_INDEX
*&---------------------------------------------------------------------*
FORM DB_GET_INDEX USING PTABN .  " like dd02l-tabname.
DATA: LTABN LIKE DD02L-TABNAME.
****
LTABN = PTABN.
REFRESH: TB_INXL,  TB_INXF.
CALL FUNCTION 'DB_GET_INDEXES'
EXPORTING TABNAME   = LTABN
TABLES    DBINDEXES = TB_INXL
DBINDFLDS = TB_INXF
EXCEPTIONS  OTHERS    = 1.
*******
ENDFORM.                    " DB_GET_INDEX
