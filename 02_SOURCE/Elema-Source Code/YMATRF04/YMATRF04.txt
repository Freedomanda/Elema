*-------------------------------------------------------------------
***INCLUDE YMATRF04 .
*-------------------------------------------------------------------
*&---------------------------------------------------------------------*
*&      Form  YMA_CREATE_USER_EXCLUDED
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_G_USER_IN_GROUP  text                                      *
*----------------------------------------------------------------------*
FORM YMA_CREATE_USER_EXCLUDED USING    P_G_USER_IN_GROUP.
DATA TEXT(29).
CONCATENATE: 'in the group "' USR02-CLASS '" ' INTO TEXT.
G_ANS = 0.
CALL FUNCTION 'POPUP_TO_DECIDE'
EXPORTING
*         DEFAULTOPTION  = '1'
TEXTLINE1      = '@19@User already included '
TEXTLINE2      =  TEXT

TEXT_OPTION1   = '@1P@Exclude'(048)
TEXT_OPTION2   =  'Include'(022)
TEXT_OPTION3   =  'Cancel'(063)

*         TEXT_OPTION1   = '@1P@Exclude'(048)
*         TEXT_OPTION2   = '@02@Cancel'(026)
TITEL          = 'Choose your Action'(019)
*         START_COLUMN   = 25
*         START_ROW      = 6
CANCEL_DISPLAY = 'X'
IMPORTING
ANSWER         = G_ANS
EXCEPTIONS
OTHERS         = 1.
".
SY = SY.
IF G_ANS = '1'.
G_FLAG_EXCLUDE =  1.
ELSEIF G_ANS = '2'.
G_FLAG_EXCLUDE =  0.
ENDIF.
IF G_ANS = '1' OR G_ANS = '2'.
*    G_FLAG_EXCLUDE = 1.
PERFORM YMA_ADD_SYS_JOBS.

SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
ENDFORM.                               " YMA_CREATE_USER_EXCLUDED
*&---------------------------------------------------------------------*
*&      Form  YMA_CHECK_GROUP_CONTENT_RLM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_CHECK_GROUP_CONTENT_RLM.
IF USER_RATIO      = 'User'.
NODES-TEXT1      = TEXT-046.
NODES-TEXT       = GROUP_NAME.
ELSEIF USER_RATIO  = 'Group'.
NODES-TEXT1       = TEXT-045.
NODES-TEXT       = US_NAME.
ENDIF.

IF NODES-TEXT1       =  TEXT-045.    "as USER
G_USER_IN_GROUP = 0.

SELECT  SINGLE * FROM  USR02 CLIENT SPECIFIED
WHERE      MANDT = SY-MANDT
AND        BNAME = NODES-TEXT.
IF USR02-CLASS NE SPACE.
LOOP AT TB_NODES WHERE TEXT9 = 'App' AND  TEXT6(2) = ''.
IF TB_NODES-TEXT6+28(12) = USR02-CLASS.
* TABLES ICON.
G_USER_IN_GROUP = 1.
"User already included in the group.
ENDIF.

ENDLOOP.
ENDIF.
ELSE.
SELECT        * FROM  USR02 CLIENT SPECIFIED
WHERE  CLASS       = NODES-TEXT.
LOOP AT TB_NODES WHERE TEXT6(2) = 'JB' OR TEXT6(2) = 'JI'.
IF TB_NODES-TEXT6+28(12) =  USR02-BNAME.

G_GROUP_CONTAIN_USER = 1.

ENDIF.
ENDLOOP.
ENDSELECT.
ENDIF.

ENDFORM.                               " YMA_CHECK_GROUP_CONTENT_RLM
*&---------------------------------------------------------------------*
*&      Form  YMA_IS_NOT_GRATER_THEN_TOTAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_IS_NOT_GRATER_THEN_TOTAL USING IS_GRATER.
IS_GRATER = 0.

IF G_NODE-TEXT6+67(8) NE SPACE.
LOOP AT TB_NODES WHERE TEXT6+67(8) = SPACE
AND TEXT6+28(12) = G_NODE-TEXT6+28(12).
IF G_JOP_VAL > TB_NODES-TEXT2.

IS_GRATER = 1.
ENDIF.

ENDLOOP.
ELSE.
ENDIF.

ENDFORM.                               " YMA_IS_NOT_GRATER_THEN_TOTAL
*&---------------------------------------------------------------------*
*&      Form  YMA_PREP_DEL_USER_RLP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_PREP_DEL_USER_RLP.
DATA NOD LIKE  SNODE-ID.
TB_DEL_USER_RLP_LOOP-YOP_MSNAME = G_NODE-TEXT6(20).
CASE G_NODE-TEXT6+22(4).
WHEN 'Jobs'.
TB_DEL_USER_RLP_LOOP-YMA_TCODE  = G_NODE-TEXT5.
WHEN OTHERS.
*      TB_DEL_USER_RLP_LOOP-YMA_TCODE  = G_NODE-TEXT6+22(4). "MMM
TB_DEL_USER_RLP_LOOP-YMA_TCODE  = G_NODE-TEXT5.
ENDCASE.
TB_DEL_USER_RLP_LOOP-YMA_USERNM  = G_NODE-TEXT6+27(12).
APPEND TB_DEL_USER_RLP_LOOP.
IF G_NODE-TEXT1 = 'Group'(046).
SELECT  * FROM  USR02      CLIENT SPECIFIED
WHERE  MANDT       = SY-MANDT
AND    CLASS       = G_NODE-TEXT.
DATA: BEGIN OF NOD_ID OCCURS 5,
ID LIKE TB_NODES-ID,
END OF NOD_ID.
LOOP AT TB_NODES WHERE TEXT = USR02-BNAME
AND    TEXT9 = 'App' AND TEXT4 = TEXT-023
*                                                  'Exclude'(023)
AND  TEXT6(20) = G_NODE-TEXT6(20)  AND TEXT6+22(4) = G_NODE-TEXT6+22(4)
AND TEXT5 = G_NODE-TEXT5.
TB_NODES-TEXT4 = 'Include'(022).
TB_NODES-TLENGTH4 = 0.
NOD = TB_NODES-ID.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = NOD
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
TB_DEL_USER_RLP_LOOP-YOP_MSNAME = TB_NODES-TEXT6(20).
TB_DEL_USER_RLP_LOOP-YMA_TCODE  = TB_NODES-TEXT5.
TB_DEL_USER_RLP_LOOP-YMA_USERNM  = TB_NODES-TEXT6+27(12).
APPEND TB_DEL_USER_RLP_LOOP.
*        NOD_ID = TB_NODES-ID.
*        APPEND NOD_ID.
*        TB_INCLUDE_YMA_TREE_U-YOP_MSNAME = G_NODE-TEXT6(20).
*        TB_INCLUDE_YMA_TREE_U-YMA_TCODE = G_NODE-TEXT6+22(4).
*        TB_INCLUDE_YMA_TREE_U-YMA_USERNM = USR02-BNAME .
*        APPEND TB_INCLUDE_YMA_TREE_U.
ENDLOOP.
".
ENDSELECT.

LOOP AT NOD_ID.
READ TABLE TB_NODES WITH KEY NOD_ID-ID.
PERFORM YMA_RESTORE_SUBNDE USING NOD_ID.         "LAST
*     PERFORM YMA_RESTORE_SUBNDE1 USING NOD_ID.         "LAST
ENDLOOP.
ENDIF.

* PERFORM YMA_DEL_EMPTY_TRANSACT.

ENDFORM.                               " YMA_PREP_DEL_USER_RLP
*&---------------------------------------------------------------------*
*&      Form  YMA_CHECK_GROUP_CONTENT1
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_CHECK_GROUP_CONTENT1.
IF USER_RATIO      = 'User'.
NODES-TEXT1      = TEXT-046.
NODES-TEXT       = GROUP_NAME.
ELSEIF USER_RATIO  = 'Group'.
NODES-TEXT1       = TEXT-045.
NODES-TEXT       = US_NAME.
ENDIF.

IF NODES-TEXT1       =  TEXT-045.    "as USER
G_USER_IN_GROUP = 0.

SELECT  SINGLE * FROM  USR02 CLIENT SPECIFIED
WHERE      MANDT = SY-MANDT
AND        BNAME = NODES-TEXT.
IF USR02-CLASS NE SPACE.

LOOP AT TB_NODES WHERE TEXT6(2) = 'JB' OR TEXT6(2) = 'JI'.
IF TB_NODES-TEXT6+28(12) = USR02-CLASS.

G_USER_IN_GROUP = 1.
"User already included in the group.
ENDIF.

ENDLOOP.
ENDIF.
ELSE.
SELECT        * FROM  USR02 CLIENT SPECIFIED
WHERE  CLASS       = NODES-TEXT.         .
LOOP AT TB_NODES WHERE TEXT6(2) = 'JB' OR TEXT6(2) = 'JI'.
IF TB_NODES-TEXT6+28(12) =  USR02-BNAME.

G_GROUP_CONTAIN_USER = 1.

ENDIF.
ENDLOOP.
ENDSELECT.
ENDIF.

ENDFORM.                               " YMA_CHECK_GROUP_CONTENT1
*&---------------------------------------------------------------------*
*&      Form  YMA_BELONG_USER_GROUP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IN_EX  text                                                *
*----------------------------------------------------------------------*
FORM YMA_BELONG_USER_GROUP USING    P_IN_EX MODIF.
DATA: TEXT(60), EXIST TYPE I , US_EXIST TYPE I.
DATA TRAN_JOB(30).
CASE TR_RATIO.
WHEN  'Job'(005).
TRAN_JOB = YMA_SCREEN-Y_TRANS.
WHEN  'Trans.'(076).
TRAN_JOB = YMA_TREE_U-YMA_TCODE.
ENDCASE.
CASE USER_RATIO.

WHEN 'Group'(046).                 "e.a. user
EXIST = 0.
SELECT SINGLE * FROM  USR02      CLIENT SPECIFIED
WHERE  MANDT       = SY-MANDT
AND    BNAME       = US_NAME.
IF USR02-CLASS NE SPACE.
READ TABLE TB_NODES WITH KEY TEXT        =   USR02-CLASS
TEXT1       =  'Group'(046)
TEXT6(20)   =   G_NODE-TEXT6(20)
TEXT5 =   TRAN_JOB.    "MMM
IF SY-SUBRC = 0.
EXIST = 1.
ENDIF.
ENDIF.
CONCATENATE: 'in the group "' USR02-CLASS '" ' INTO TEXT.
G_ANS = '0'.
IF EXIST = 1.
MODIF = 1.
CALL FUNCTION 'POPUP_TO_DECIDE'
EXPORTING
*         DEFAULTOPTION  = '1'
TEXTLINE1      = '@19@User already included '
TEXTLINE2      =  TEXT
TEXT_OPTION1   = '@1P@Exclude'(048)
*               TEXT_OPTION2   = '@02@Cancel'(026)
TEXT_OPTION2  =  '@B_PATT@Include'
TITEL          = 'Choose your Action'(019)
*         START_COLUMN   = 25
*         START_ROW      = 6
CANCEL_DISPLAY = 'X'
IMPORTING
ANSWER         = G_ANS
EXCEPTIONS
OTHERS         = 1.
".
IF G_ANS = '1'.
P_IN_EX = 'Ex'.
MODIFY_YMA_TREE_U-Y_ALRT_E_I = 'E'.
ENDIF.
ENDIF.
****************************** Group ********************************
WHEN  'User'(045).
GROUP_NAME = GROUP_NAME.
SELECT  * FROM  USR02      CLIENT SPECIFIED
WHERE  MANDT       = SY-MANDT
AND    CLASS       = GROUP_NAME.
READ TABLE TB_NODES WITH KEY TEXT9 = 'App' TEXT = USR02-BNAME
TEXT4 = 'Include'(022)
TEXT6(20) = G_NODE-TEXT6(20)
TEXT5 = TRAN_JOB.                          "MMM
IF SY-SUBRC = 0.
US_EXIST = 1.
EXIT.
ENDIF.
ENDSELECT.
CLASS = GROUP_NAME.
IF US_EXIST = 1.
DATA TEXTX(15).
*    DATA TEXT(59).
TEXTX = 'from group'(062).
CONCATENATE:
TEXTX  CLASS    INTO TEXT
SEPARATED BY ' ' .


CALL FUNCTION 'POPUP_TO_DECIDE'
EXPORTING
*         DEFAULTOPTION  = '1'
TEXTLINE1      = '@19@One or more users '(061)
TEXTLINE2      = TEXT
TEXTLINE3      = 'were already defined.'(064)
TEXT_OPTION1   = '@1P@Exclude All'(025)
TEXT_OPTION2   = '@02@Cancel'(026)
TITEL          = 'Choose your Action'(019)
*         START_COLUMN   = 25
*         START_ROW      = 6
CANCEL_DISPLAY = SPACE
IMPORTING
ANSWER         = G_ANSWER
EXCEPTIONS
OTHERS         = 1.

*        CONCATENATE:
*        '@19@'  ' Group  "'  CLASS '"  already ' INTO TEXT
*                 SEPARATED BY ' ' .
*        MODIF = 1.
*        CALL FUNCTION 'POPUP_TO_DECIDE'
*             EXPORTING
**         DEFAULTOPTION  = '1'
*                  TEXTLINE1      = TEXT
*               TEXTLINE2      = 'contains  one  or  more  defined'(021)
*                  TEXTLINE3      = 'users. '(024)
*                  TEXT_OPTION1   = '@1P@Exclude All'(025)
*                  TEXT_OPTION2   = '@02@Cancel'(026)
*                  TITEL          = 'Choose your Action'(019)
**         START_COLUMN   = 25
**         START_ROW      = 6
*                  CANCEL_DISPLAY = SPACE
*            IMPORTING
*                 ANSWER         = G_ANSWER
*             EXCEPTIONS
*                  OTHERS         = 1.
IF G_ANSWER = '1'.

SELECT  * FROM  USR02      CLIENT SPECIFIED
WHERE  MANDT       = SY-MANDT
AND    CLASS       = GROUP_NAME.

LOOP AT TB_NODES WHERE TEXT = USR02-BNAME
AND    TEXT9 = 'App'  "?
AND TEXT4 = 'Include'
AND  TEXT6(20) = G_NODE-TEXT6(20)
AND TEXT5 = TRAN_JOB                             "MMM
AND TEXT1 = 'User'(045).
TB_NODES-TEXT4 = 'Exclude'(023).
TB_NODES-TLENGTH4 = 9.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = TB_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.

DATA PARENT LIKE TB_NODES-PARENT.
INDEX = TB_NODES-ID + 1.
PARENT = TB_NODES-PARENT.
DATA IND LIKE INDEX.
IND = INDEX + 28.
IF G_IS_FIRST = SPACE.
TB_D_NODES[] = TB_NODES[].              "Misha-reassign
G_IS_FIRST = '1'.
ENDIF.
DATA XID LIKE  TB_NODES-ID.
XID = TB_NODES-CHILD.
DO 6 TIMES.
READ TABLE TB_NODES WITH KEY ID = XID.
*               LOOP AT TB_NODES WHERE CHILD = PARENT.
*              LOOP AT TB_NODES WHERE ID >= INDEX AND ID <= IND.
*                TB_NODES-NODISPLAY = SPACE.
MODIFY TB_NODES.
*               DATA TB_D_NODES LIKE TB_NODES OCCURS 1 WITH HEADER LINE.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = TB_NODES-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
*              ENDLOOP.
ADD 5 TO XID.
ENDDO.


TB_EXCLUDE_YMA_TREE_U-YOP_MSNAME = G_NODE-TEXT6(20).
TB_EXCLUDE_YMA_TREE_U-YMA_TCODE = YMA_SCREEN-Y_TRANS .
TB_EXCLUDE_YMA_TREE_U-YMA_USERNM = USR02-BNAME .
APPEND TB_EXCLUDE_YMA_TREE_U.
ENDLOOP.
ENDSELECT.



ENDIF.
ENDIF.



ENDCASE.
SY = SY.
ENDFORM.                               " YMA_BELONG_USER_GROUP
*&---------------------------------------------------------------------*
*&      Form  YMA_COPY_RLP_DETAILS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_CUR_IND  text                                              *
*----------------------------------------------------------------------*
FORM YMA_COPY_RLP_DETAILS USING    P_CUR_IND P_NOD   INDEX.
*   DATA INDEX TYPE I.
INDEX = 2.
DATA RELATIONSHIP(5).
DATA COMP TYPE I.
DO 6 TIMES.
P_CUR_IND = P_CUR_IND + 1.

*READ TABLE TB_AUX_NODES INDEX  2.
READ TABLE TB_AUX_NODES INDEX  INDEX.
MOVE-CORRESPONDING TB_AUX_NODES TO NODES.
"1
NODES-TEXT6+22(4) = RSSTCD-T_TCODE.

IF G_NODE-TEXT6+22(4) = 'Jobs' .
NODES-TEXT6+22(4) = 'Jobs'.      "yma_tree_u-yma_tcode.
NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
ELSE.
NODES-TEXT6+22(4) = 'Tran'.      "   "MMM
NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
ENDIF.
IF INDEX > 4 .
RELATIONSHIP = 'NEXT'.
*IO_NEW_ID = G_NODE-ID.
ELSE.
RELATIONSHIP = 'CHILD'.
*IO_NEW_ID = CUR_IND.
ENDIF.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = RELATIONSHIP
LINK               = ''
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
INDEX = INDEX + 1.

ENDDO.
*INDEX = INDEX + 1.
*NOD = G_NODE-ID - 2.
DO 5 TIMES.
P_NOD = IO_NEW_ID - 4.
READ TABLE TB_AUX_NODES INDEX  INDEX.
MOVE-CORRESPONDING TB_AUX_NODES TO NODES.
NODES-TEXT6+22(4) = RSSTCD-T_TCODE.
IF G_NODE-TEXT6+22(4) = 'Jobs'.
NODES-TEXT6+22(4) = 'Jobs'.      "yma_tree_u-yma_tcode.
NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
ELSE.
NODES-TEXT6+22(4) = 'Tran'.      "yma_tree_u-yma_tcode. "MMM
NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
ENDIF.

CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          =  P_NOD
RELATIONSHIP       = 'NEXT'
LINK               = ''
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
RELATIONSHIP = 'CHILD'.
INDEX = INDEX + 1.
DO 4 TIMES.
P_CUR_IND = P_CUR_IND + 1.

*READ TABLE TB_AUX_NODES INDEX  2.
READ TABLE TB_AUX_NODES INDEX  INDEX.
MOVE-CORRESPONDING TB_AUX_NODES TO NODES.
NODES-TEXT6+22(4) = RSSTCD-T_TCODE.
IF G_NODE-TEXT6+22(4) = 'Jobs'.
NODES-TEXT6+22(4) = 'Jobs'.    "yma_tree_u-yma_tcode.
NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
ELSE.
NODES-TEXT6+22(4) = 'Tran'.    "yma_tree_u-yma_tcode. "MMM
NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
ENDIF.

CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = RELATIONSHIP
LINK               = ''
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
INDEX = INDEX + 1.
IF RELATIONSHIP = 'CHILD'.
RELATIONSHIP = 'NEXT'.
ENDIF.
ENDDO.
ENDDO.





ENDFORM.                               " YMA_COPY_RLP_DETAILS
*&---------------------------------------------------------------------*
*&      Form  YMA_TREE_U_COPY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_TREE_U_COPY.
*AT NEW TEXT6+27(12).               "'ANNA'- user name
*AT NEW TEXT6+40(25).             "Param name
* AT NEW TEXT6+65(10).           " values
DATA OLD(68).
DATA: BEGIN OF PARM OCCURS 2,
PAR(25) TYPE C,
VAL(100) TYPE C,
END OF PARM.
DATA: BEGIN OF NAME OCCURS 2,
NAM(20) TYPE C,
VAL(100) TYPE C,
END OF NAME.

LOOP AT  TB_AUX_NODES .
PARM-PAR = TB_AUX_NODES-TEXT6+40(25).
COLLECT PARM.
NAME-NAM = TB_AUX_NODES-TEXT6+27(12).
COLLECT NAME.
ENDLOOP.

LOOP AT NAME.
IF NAME-NAM = SPACE.
DELETE NAME.
ENDIF.
ENDLOOP.

LOOP AT NAME.
LOOP AT PARM.
LOOP AT TB_AUX_NODES WHERE TEXT6+27(12) = NAME-NAM AND
TEXT6+40(25) = PARM-PAR.
SELECT SINGLE * FROM  YMA_TREE
WHERE  YMA_PARAME  = PARM-PAR
AND    LANG        = SY-LANGU(1).

TB_YMA_TREE_U_COPY-YMA_PAR_UN = YMA_TREE-YMA_PAR_UN.

CASE TB_AUX_NODES-TEXT6+40(25).
WHEN SPACE.
TB_YMA_TREE_U_COPY-Y_ALRT_E_I = TB_AUX_NODES-TEXT4(1).
*            TB_YMA_TREE_U_COPY-YOP_MSNAME = TB_AUX_NODES-TEXT6(20).
*            TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).
*            TB_YMA_TREE_U_COPY-YMA_USERNM = TB_AUX_NODES-TEXT6+27(12).
TB_YMA_TREE_U_COPY-YMA_GR_USR = TB_AUX_NODES-TEXT1(1).
ENDCASE.
CASE TB_AUX_NODES-TEXT6+65(3).
WHEN 'YEL'.
TB_YMA_TREE_U_COPY-YMA_PARAME = PARM-PAR.
TB_YMA_TREE_U_COPY-YOP_MSNAME = TB_AUX_NODES-TEXT6(20).

TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'T'.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).
IF G_NODE-TEXT6+22(4) = 'Jobs'.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT5.
TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'J'.
ELSE.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT5.
TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'T'.
ENDIF.

TB_YMA_TREE_U_COPY-YMA_USERNM = TB_AUX_NODES-TEXT6+27(12).
TB_YMA_TREE_U_COPY-YOP_QT_YEL = TB_AUX_NODES-TEXT6+68(7).

WHEN 'RED'.
TB_YMA_TREE_U_COPY-YMA_PARAME = PARM-PAR.
TB_YMA_TREE_U_COPY-YOP_MSNAME = TB_AUX_NODES-TEXT6(20).
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).

TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'T'.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).
IF G_NODE-TEXT6+22(4) = 'Jobs'.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT5.
TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'J'.
ELSE.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT5.
TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'T'.
ENDIF.

TB_YMA_TREE_U_COPY-YMA_USERNM = TB_AUX_NODES-TEXT6+27(12).

TB_YMA_TREE_U_COPY-YOP_QT_RED = TB_AUX_NODES-TEXT6+68(7).
WHEN 'PRT'.
TB_YMA_TREE_U_COPY-YMA_PARAME = PARM-PAR.
TB_YMA_TREE_U_COPY-YOP_MSNAME = TB_AUX_NODES-TEXT6(20).
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).

TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'T'.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).
IF G_NODE-TEXT6+22(4) = 'Jobs'.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT5.
TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'J'.
ELSE.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT5.
TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'T'.
ENDIF.

TB_YMA_TREE_U_COPY-YMA_USERNM = TB_AUX_NODES-TEXT6+27(12).

TB_YMA_TREE_U_COPY-YOP_QT_PRT = TB_AUX_NODES-TEXT6+68(7).
WHEN 'Mai'.
TB_YMA_TREE_U_COPY-YMA_PARAME = PARM-PAR.
TB_YMA_TREE_U_COPY-YOP_MSNAME = TB_AUX_NODES-TEXT6(20).
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).

TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'T'.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).
IF G_NODE-TEXT6+22(4) = 'Jobs'.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT5.
TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'J'.
ELSE.
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT5."MMM
TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'T'.
ENDIF.

TB_YMA_TREE_U_COPY-YMA_USERNM = TB_AUX_NODES-TEXT6+27(12).
TB_YMA_TREE_U_COPY-Y_ALRT_M_C = TB_AUX_NODES-TEXT6+68(1).
ENDCASE.

ENDLOOP.
*      IF TB_YMA_TREE_U_COPY(20) NE SPACE AND
*     TB_YMA_TREE_U_COPY(68) NE OLD.
COLLECT TB_YMA_TREE_U_COPY.
*        OLD = TB_YMA_TREE_U_COPY(68).
*      ENDIF.
ENDLOOP.
*new
COLLECT TB_YMA_TREE_U_COPY.
*new
ENDLOOP.
DELETE TB_YMA_TREE_U_COPY WHERE YOP_MSNAME = SPACE .
SORT TB_YMA_TREE_U_COPY BY YMA_USERNM YMA_PARAME .

ENDFORM.                               " YMA_TREE_U_COPY
*&---------------------------------------------------------------------*
*&      Form  YMA_PREP_DEL_LOCK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_PREP_DEL_LOCK.
DATA NOD LIKE SNODE-ID.
TB_DEL_YMA_LOC_TR-YMA_USERNM = G_NODE-TEXT.
APPEND TB_DEL_YMA_LOC_TR.
IF G_NODE-TEXT1 = 'Group'(046).
SELECT  * FROM  USR02      CLIENT SPECIFIED
WHERE  MANDT       = SY-MANDT
AND    CLASS       = G_NODE-TEXT.

LOOP AT TB_NODES WHERE TEXT = USR02-BNAME
AND    TEXT6(10) = 'LockSystem'
AND TEXT4 = 'Exclude      '(023).
*AND  TEXT6(20) = G_NODE-TEXT6(20)  AND TEXT6+22(4) = G_NODE-TEXT6+22(4)
TB_NODES-TEXT4 = 'Include'(022).
TB_NODES-TLENGTH4 = 0.
NOD = TB_NODES-ID.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = NOD
*         WITHOUT_ROOT =
"    EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
TB_DEL_YMA_LOC_TR-YMA_USERNM = TB_NODES-TEXT.
APPEND TB_DEL_YMA_LOC_TR.

*        TB_EXCLUDE_YMA_LOC_TR-YMA_USERNM = USR02-BNAME .
*        APPEND TB_EXCLUDE_YMA_LOC_TR.
ENDLOOP.
ENDSELECT.

ENDIF.

ENDFORM.                               " YMA_PREP_DEL_LOCK
*&---------------------------------------------------------------------*
*&      Form  YMA_LOCK_MANGMNT_GROUP_CONTNT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_LOCK_MANGMNT_GROUP_CONTNT.
IF USER_RATIO      = 'User'.
NODES-TEXT1      = TEXT-046.
NODES-TEXT       = GROUP_NAME.
ELSEIF USER_RATIO  = 'Group'.
NODES-TEXT1       = TEXT-045.
NODES-TEXT       = US_NAME.
ENDIF.

IF NODES-TEXT1       =  TEXT-045.    "as USER
G_USER_IN_GROUP = 0.

SELECT  SINGLE * FROM  USR02 CLIENT SPECIFIED
WHERE      MANDT = SY-MANDT
AND        BNAME = NODES-TEXT.
IF USR02-CLASS NE SPACE.
LOOP AT TB_NODES WHERE TEXT6(10) =  'LockSystem' .
IF TB_NODES-TEXT = USR02-CLASS.
G_USER_IN_GROUP = 1.
"User already included in the group.
ENDIF.
ENDLOOP.

ENDIF.
ELSE.
SELECT        * FROM  USR02 CLIENT SPECIFIED
WHERE  CLASS       = NODES-TEXT.         .
LOOP AT TB_NODES WHERE TEXT6(10) =  'LockSystem'.
IF TB_NODES-TEXT =  USR02-BNAME.

G_GROUP_CONTAIN_USER = 1.

ENDIF.
ENDLOOP.
ENDSELECT.
ENDIF.

ENDFORM.                               " YMA_LOCK_MANGMNT_GROUP_CONTNT
*&---------------------------------------------------------------------*
*&      Form  YMA_CREATE_USER_EXCL_LOCK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_G_USER_IN_GROUP  text                                      *
*----------------------------------------------------------------------*
FORM YMA_CREATE_USER_EXCL_LOCK USING    P_G_USER_IN_GROUP.
DATA TEXT(29).
CONCATENATE: 'in the group "' USR02-CLASS '" ' INTO TEXT.
G_ANS = '0'.
CALL FUNCTION 'POPUP_TO_DECIDE'
EXPORTING
*         DEFAULTOPTION  = '1'
TEXTLINE1      = '@19@User already included '
TEXTLINE2      =  TEXT


TEXT_OPTION1   = '@1P@Exclude'(048)
TEXT_OPTION2   =  'Include'(022)
TEXT_OPTION3   =  'Cancel'(063)
TITEL          = 'Choose your Action'(019)      "Last
*         START_COLUMN   = 25
*         START_ROW      = 6
CANCEL_DISPLAY = 'X'
IMPORTING
ANSWER         = G_ANS
EXCEPTIONS
OTHERS         = 1.

IF G_ANS = '1'.
G_FLAG_EXCLUDE = 1.
ENDIF.

ENDFORM.                               " YMA_CREATE_USER_EXCL_LOCK
*&---------------------------------------------------------------------*
*&      Form  YMA_CHANGE_INCLUDE_LOCK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_CLASS  text                                                *
*----------------------------------------------------------------------*
FORM YMA_CHANGE_INCLUDE_LOCK USING    CLASS.
DATA TEXTX(15).
DATA TEXT(59).
TEXTX = 'from group'(062).
CONCATENATE:
TEXTX  CLASS    INTO TEXT
SEPARATED BY ' ' .


CALL FUNCTION 'POPUP_TO_DECIDE'
EXPORTING
*         DEFAULTOPTION  = '1'
TEXTLINE1      = '@19@One or more users '(061)
TEXTLINE2      = TEXT
TEXTLINE3      = 'were already defined.'(064)
TEXT_OPTION1   = '@1P@Exclude All'(025)
TEXT_OPTION2   = '@02@Cancel'(026)
TITEL          = 'Choose your Action'(019)
*         START_COLUMN   = 25
*         START_ROW      = 6
CANCEL_DISPLAY = SPACE
IMPORTING
ANSWER         = G_ANSWER
EXCEPTIONS
OTHERS         = 1.

*  DATA TEXT(59).
*  CONCATENATE:
*  '@19@'  ' Group  "'  CLASS '"  already ' INTO TEXT
*           SEPARATED BY ' ' .
*  G_ANSWER = '0'.
*  CALL FUNCTION 'POPUP_TO_DECIDE'
*       EXPORTING
**         DEFAULTOPTION  = '1'
*            TEXTLINE1      = TEXT
*            TEXTLINE2      = 'contains  one  or  more  defined'(021)
*            TEXTLINE3      = 'users. '(024)
*            TEXT_OPTION1   = '@1P@Exclude All'(025)
*            TEXT_OPTION2   = '@02@Cancel'(026)
*            TITEL          = 'Choose your Action'(019)      "Last
**         START_COLUMN   = 25
**         START_ROW      = 6
*            CANCEL_DISPLAY = SPACE
*      IMPORTING
*           ANSWER         = G_ANSWER
*       EXCEPTIONS
*            OTHERS         = 1.
IF G_ANSWER = '1'.
LOOP AT TB_NODES WHERE TEXT6(10) = 'LockSystem' AND TEXT1 = 'User'.
SELECT SINGLE * FROM   USR02      CLIENT SPECIFIED
WHERE  MANDT       =  SY-MANDT
AND    BNAME       =  TB_NODES-TEXT.
IF USR02-CLASS = CLASS.
TB_NODES-TEXT4 = 'Exclude'(023).
TB_NODES-TLENGTH4 = 13.
TB_NODES-TCOLOR4 = 3.
TB_NODES-TINTENSIV4 = 1.

CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = TB_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
DATA XXXID LIKE TB_NODES-ID.
XXXID = TB_NODES-ID + 1.
DO 4 TIMES.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = XXXID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
XXXID = XXXID + 1.
ENDDO.

YMA_LOCK_CHANGE_INCLUDE-YMA_USERNM = TB_NODES-TEXT.
APPEND YMA_LOCK_CHANGE_INCLUDE .
ENDIF.
ENDLOOP.
PERFORM YMA_RECOGN_NEW_TREE.
ENDIF.

ENDFORM.                               " YMA_CHANGE_INCLUDE_LOCK
*&---------------------------------------------------------------------*
*&      Form  YMA_SAVE_ALL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SAVE_ALL.
MODIFY YMA_TREE_U FROM TABLE  TB_YMA_TREE_U_COPY.

*  MODIFY YMA_OP_MOD FROM TABLE  TB_MODIFY_YMA_OP_MOD.
LOOP AT TB_MODIFY_YMA_OP_MOD.
SELECT SINGLE * FROM  YMA_OP_MOD
WHERE  YMA_MSNAME  = TB_MODIFY_YMA_OP_MOD-YMA_MSNAME
AND    YMA_PARAME  = TB_MODIFY_YMA_OP_MOD-YMA_PARAME
AND    YMA_SUBKEY  = TB_MODIFY_YMA_OP_MOD-YMA_SUBKEY
AND    YMA_PROCES  = TB_MODIFY_YMA_OP_MOD-YMA_PROCES
AND    YMA_LVL     = TB_MODIFY_YMA_OP_MOD-YMA_LVL     .
YMA_OP_MOD-YMA_VAL = TB_MODIFY_YMA_OP_MOD-YMA_VAL.
MODIFY YMA_OP_MOD.
ENDLOOP.

MODIFY YMA_TREE   FROM TABLE  TB_MODIFY_YMA_TREE.
MODIFY YMA_TREE_U FROM TABLE  YMA_ADD_APPSERVERS.
MODIFY YMA_OT_GP  FROM TABLE  TB_YMA_OT_GP.
MODIFY YMA_OT_GP  FROM  TABLE  TB_YMA_OT_GP2.
MODIFY YMA_LOC_TR FROM  TABLE  TB_MODIFY_YMA_LOC_TR.
MODIFY YMA_LOC_TR FROM  TABLE  TB_MODIFY_LOCK_TR.
MODIFY YMA_TR_JOP FROM  TABLE  YMA_ADD_YMA_TR_JOP.
MODIFY YMA_SQL_TR FROM  TABLE  TB_AD_YMA_SQL_TR.
MODIFY YMA_SQL_TR FROM  TABLE  TB_MODIFY_YMA_SQL_TR.
MODIFY YMA_TREE_J FROM  TABLE  TB_ADD_YMA_TREE_J.
MODIFY YMA_TREE_J FROM  TABLE  TB_MODIFY_YMA_TREE_J.
LOOP AT TB_EXCL_YMA_SQL_TR.
SELECT SINGLE * FROM  YMA_SQL_TR
WHERE  Y_MSNAME    = TB_EXCL_YMA_SQL_TR-Y_MSNAME
AND    Y_USER      = TB_EXCL_YMA_SQL_TR-Y_USER
AND    Y_TCODE     = TB_EXCL_YMA_SQL_TR-Y_TCODE
AND    Y_PROGRAM   = TB_EXCL_YMA_SQL_TR-Y_PROGRAM.
*           AND    Y_PARAME    = TB_EXCL_YMA_SQL_TR-Y_PARAME.
YMA_SQL_TR-Y_ALRT_E_I = 'E'.
MODIFY YMA_SQL_TR.
ENDLOOP.
ENDFORM.                               " YMA_SAVE_ALL
*&---------------------------------------------------------------------*
*&      Form  YMA_REFRESH_AFTER_SAVE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_REFRESH_AFTER_SAVE.
REFRESH TB_YMA_TREE_U_COPY.
REFRESH TB_MODIFY_YMA_LOC_TR.
*  REFRESH TB_YMA_OT_GP2.
REFRESH TB_MODIFY_LOCK_TR.
REFRESH YMA_ADD_YMA_TR_JOP.
REFRESH TB_MODIFY_YMA_TREE_J.
REFRESH TB_AD_YMA_SQL_TR.
REFRESH TB_EXCL_YMA_SQL_TR.
ENDFORM.                               " YMA_REFRESH_AFTER_SAVE
*&---------------------------------------------------------------------*
*&      Form  YMA_SAVE_CHANGES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SAVE_CHANGES.

*        MODIFY YMA_TREE_U FROM TABLE MODIFY_YMA_TREE_U.
*DATA APSRV YMA_TREE_U-OP_MSNAME.
*DATA TRN LIKE YMA_TREE_U-YMA_TCODE.
*DATA NM LIKE YMA_TREE_U-YOP_MSNAME.
*LOOP AT MODIFY_YMA_TREE_U WHERE Y_ALRT_E_I = 'E'.
*APSRV = MODIFY_YMA_TREE_U-OP_MSNAME.
*TRN = MODIFY-YMA_TREE_U-YMA_TCODE.
*NM = MODIFY-YMA_TREE_U-YOP_MSNAME.
*LOOP AT MODIFY_YMA_TREE_U WHERE.
*
*ENDLOP.

MODIFY YMA_TREE_U FROM TABLE MODIFY_YMA_TREE_U.
COMMIT WORK .

MODIFY YMA_TR_JOP FROM TABLE TB_TR_JOP.

DATA EX_IN.
REFRESH MODIFY_YMA_TREE_U.
SELECT SINGLE * FROM  YMA_TR_JOP
WHERE  YMA_USERNM  = TB_TR_JOP-YMA_USERNM
AND    YMA_SUBKEY  = SPACE.
EX_IN  = YMA_TR_JOP-Y_ALRT_E_I.
SELECT *  FROM  YMA_TR_JOP  WHERE  YMA_USERNM  = TB_TR_JOP-YMA_USERNM
AND    YMA_SUBKEY  NE SPACE.
YMA_TR_JOP-Y_ALRT_E_I = EX_IN.
MODIFY YMA_TR_JOP.
ENDSELECT.


REFRESH TB_TR_JOP.
MODIFY YMA_OP_MOD FROM TABLE OP_MOD.
REFRESH  OP_MOD. REFRESH TB_MODIFY_YMA_TREE.
DATA M_YMA_TREE_Y LIKE MODIFY_YMA_TREE_Y.

LOOP AT TB_DEL_USER_RLP_LOOP.
DELETE FROM YMA_TREE_U
WHERE     YOP_MSNAME = TB_DEL_USER_RLP_LOOP-YOP_MSNAME
AND       YMA_TCODE  = TB_DEL_USER_RLP_LOOP-YMA_TCODE
AND       YMA_USERNM = TB_DEL_USER_RLP_LOOP-YMA_USERNM.
ENDLOOP.
REFRESH TB_DEL_USER_RLP_LOOP.

***************
*    REFRESH PASS_NODES.
*  ELSE.
MODIFY YMA_TREE_U FROM TABLE MODIFY_YMA_TREE_Y.
REFRESH MODIFY_YMA_TREE_Y.
*  ENDIF.

G_NODE_NEW = '0'.
***********************************************************************
LOOP AT TB_EXCLUDE_YMA_TREE_U.
SELECT        * FROM  YMA_TREE_U
WHERE  YOP_MSNAME  = TB_EXCLUDE_YMA_TREE_U-YOP_MSNAME
AND    YMA_TCODE   = TB_EXCLUDE_YMA_TREE_U-YMA_TCODE
AND    YMA_USERNM  = TB_EXCLUDE_YMA_TREE_U-YMA_USERNM.
YMA_TREE_U-Y_ALRT_E_I = 'E'.
MODIFY YMA_TREE_U.
ENDSELECT.
ENDLOOP.
REFRESH TB_EXCLUDE_YMA_TREE_U.

LOOP AT TB_INCLUDE_YMA_TREE_U.
SELECT        * FROM  YMA_TREE_U
WHERE  YOP_MSNAME  = TB_INCLUDE_YMA_TREE_U-YOP_MSNAME
AND    YMA_TCODE   = TB_INCLUDE_YMA_TREE_U-YMA_TCODE
AND    YMA_USERNM  = TB_INCLUDE_YMA_TREE_U-YMA_USERNM.
YMA_TREE_U-Y_ALRT_E_I = 'I'.
MODIFY YMA_TREE_U.
ENDSELECT.
ENDLOOP.
REFRESH TB_INCLUDE_YMA_TREE_U.
LOOP AT YMA_LOCK_CHANGE_INCLUDE.
SELECT  * FROM  YMA_LOC_TR
WHERE YMA_USERNM = YMA_LOCK_CHANGE_INCLUDE-YMA_USERNM.
YMA_LOC_TR-Y_ALRT_E_I = 'E'.
MODIFY YMA_LOC_TR.
ENDSELECT.
ENDLOOP.
REFRESH YMA_LOCK_CHANGE_INCLUDE.




LOOP AT TB_EXCLUDE_YMA_LOC_TR.       "-YMA_USERNM
SELECT  * FROM  YMA_LOC_TR
WHERE YMA_USERNM = TB_EXCLUDE_YMA_LOC_TR-YMA_USERNM.
YMA_LOC_TR-Y_ALRT_E_I = 'I'.
MODIFY YMA_LOC_TR.
ENDSELECT.
ENDLOOP.
REFRESH TB_EXCLUDE_YMA_LOC_TR.



ENDFORM.                               " YMA_SAVE_CHANGES
*&---------------------------------------------------------------------*
*&      Form  YMA_DELETE_AND_SAVE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_DELETE_AND_SAVE.
*1**************** Delete Users of Resours Limits->Structure************
LOOP  AT TB_YMA_TREE_J_DEL.
DELETE FROM YMA_TREE_J WHERE YMA_JOB = TB_YMA_TREE_J_DEL-YMA_JOB.

ENDLOOP.
REFRESH TB_YMA_TREE_J_DEL.

LOOP AT TB_DEL_YMA_TREE_U.
*   IF TB_DEL_YMA_TREE_U-YMA_USERNM NE SPACE.
DELETE FROM YMA_TREE_U
WHERE YOP_MSNAME = TB_DEL_YMA_TREE_U-YOP_MSNAME
AND   YMA_TCODE  = TB_DEL_YMA_TREE_U-YMA_TCODE.

*   ENDIF.
ENDLOOP.

*2*********** Delete Jobs under Batch Manager *************************
LOOP  AT  YMA_DEL_JBS.
DELETE FROM YMA_TR_JOP
WHERE YMA_USERNM = YMA_DEL_JBS-YMA_USERNM
AND   YMA_PARAME  = YMA_DEL_JBS-YMA_PARAME.
ENDLOOP.
************************Delete lock Managment YMA_LOC_TR*************
LOOP AT TB_DEL_YMA_LOC_TR.
DELETE FROM YMA_LOC_TR WHERE YMA_USERNM = TB_DEL_YMA_LOC_TR-YMA_USERNM.
ENDLOOP.
REFRESH TB_DEL_YMA_LOC_TR.
DELETE FROM YMA_TREE_U WHERE YOP_MSNAME = SPACE.
DELETE FROM YMA_LOC_TR WHERE YMA_PARAME = SPACE.
********************End Delete ****************************************
***************** Change   INCLUDE/EXCLUDE******************************
*1******************* Jobs under Batch Manager***********************
LOOP AT YMA_JB_CHANGE_INCLUDE.
SELECT  * FROM YMA_TR_JOP
WHERE YMA_USERNM = YMA_JB_CHANGE_INCLUDE-YMA_USERNM.
YMA_TR_JOP-Y_ALRT_E_I = 'E'.
MODIFY YMA_TR_JOP.
ENDSELECT.
ENDLOOP.
LOOP AT YMA_TR_JOP_DELETE.
DELETE FROM YMA_TR_JOP WHERE YMA_USERNM = YMA_TR_JOP_DELETE-YMA_USERNM.
ENDLOOP.
REFRESH YMA_TR_JOP_DELETE.
********************** Delete Problematic SQL***************************
LOOP AT TB_DEL_YMA_SQL_TR.
CASE TB_DEL_YMA_SQL_TR-CASE.
WHEN 'PROG'.
DELETE  FROM  YMA_SQL_TR
WHERE  Y_MSNAME    = TB_DEL_YMA_SQL_TR-Y_MSNAME
AND    Y_PROGRAM   = TB_DEL_YMA_SQL_TR-Y_PROGRAM.
*               AND    Y_PARAME    = TB_DEL_YMA_SQL_TR-Y_PARAME    .

WHEN 'TR'.
DELETE  FROM  YMA_SQL_TR
WHERE  Y_MSNAME    = TB_DEL_YMA_SQL_TR-Y_MSNAME
AND    Y_TCODE     = TB_DEL_YMA_SQL_TR-Y_TCODE
AND    Y_PROGRAM   = TB_DEL_YMA_SQL_TR-Y_PROGRAM.
*               AND    Y_PARAME    = TB_DEL_YMA_SQL_TR-Y_PARAME    .

WHEN  'USER'.
DELETE FROM  YMA_SQL_TR
WHERE  Y_MSNAME    = TB_DEL_YMA_SQL_TR-Y_MSNAME
AND    Y_USER      = TB_DEL_YMA_SQL_TR-Y_USER
AND    Y_TCODE     = TB_DEL_YMA_SQL_TR-Y_TCODE
AND    Y_PROGRAM   = TB_DEL_YMA_SQL_TR-Y_PROGRAM.
*               AND    Y_PARAME    = TB_DEL_YMA_SQL_TR-Y_PARAME    .

ENDCASE.
ENDLOOP.
ENDFORM.                               " YMA_DELETE_AND_SAVE
*&---------------------------------------------------------------------*
*&      Form  YWA_POPUP_TO_CONFIRM_STEP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0056   text                                                *
*      -->P_0057   text                                                *
*      -->P_0058   text                                                *
*      <--P_G_ANSWR  text                                              *
*----------------------------------------------------------------------*
FORM YWA_POPUP_TO_CONFIRM_STEP USING    I_TEXT1
I_TEXT2
I_TITLE
CHANGING IO_ANSWER.
CALL FUNCTION 'POPUP_TO_CONFIRM_STEP'
EXPORTING
DEFAULTOPTION  = 'Y'
TEXTLINE1      = I_TEXT1
TEXTLINE2      = I_TEXT2
TITEL          = I_TITLE
START_COLUMN   = 25
START_ROW      = 6
CANCEL_DISPLAY = 'X'
IMPORTING
ANSWER         = IO_ANSWER
EXCEPTIONS
OTHERS         = 1.


ENDFORM.                               " YWA_POPUP_TO_CONFIRM_STEP
*&---------------------------------------------------------------------*
*&      Form  YMA_EXIT_OF_TREE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_EXIT_OF_TREE.
IF G_ALL_CHANGED = 1.
IF G_ALL_CHANGED = 1.
PERFORM YWA_POPUP_TO_CONFIRM_STEP USING    'Tree changed'(TRC)
'Save first?'(SVF)
'Confirm Save'(CSV)
CHANGING G_ANSWR.
CASE G_ANSWR.
WHEN 'J'.
PERFORM  YMA_SAVE_ALL.
PERFORM  YMA_REFRESH_AFTER_SAVE.
PERFORM  YMA_SAVE_CHANGES.
PERFORM  YMA_DELETE_AND_SAVE.
LEAVE PROGRAM.
WHEN 'N'.

LEAVE PROGRAM.
WHEN 'A'.
CALL FUNCTION 'RS_TREE_CONSTRUCT'
TABLES
NODETAB            = TB_NODES
EXCEPTIONS
TREE_FAILURE       = 01
ID_NOT_FOUND       = 02
WRONG_RELATIONSHIP = 03.
CALL FUNCTION 'RS_TREE_LIST_DISPLAY'
EXPORTING
CALLBACK_PROGRAM       =  'YMATR000'
CALLBACK_USER_COMMAND  =  'USER_COMMAND'
NODE_LENGTH            = 50
TEXT_LENGTH            = 80
NODE_LENGTH1           = 50
TEXT_LENGTH1           = 80
*         CALLBACK_TOP_OF_PAGE  = 'TOP_OF_PAGE_WRITE'
STATUS                = 'AP_SHOW'
*         SUPPRESS_NODE_OUTPUT  = 'X'
IMPORTING
F15                   = F15.

*       CALL FUNCTION 'RS_TREE_POP'
*            EXCEPTIONS
*                 EMPTY_STACK = 1
*                 OTHERS      = 2.
G_RETURN = 1.

ENDCASE.
ENDIF.
ENDIF.

ENDFORM.                               " YMA_EXIT_OF_TREE
*&---------------------------------------------------------------------*
*&      Form  YMA_RESTORE_SUBNDE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_RESTORE_SUBNDE USING NOD_ID-ID.
IS_FIRST = 0.
DATA CONST LIKE TB_NODES-ID.
PERFORM YMA_RECOGN_NEW_TREE.
DATA FIX_ID LIKE IO_NEW_ID.
DATA: BEGIN OF END ,
ID LIKE TB_NODES-ID,
END OF END.
IO_NEW_ID = NOD_ID-ID .
FIX_ID = NOD_ID-ID.

*LENGTH                     12
*LENGTH1                    07
*LENGTH3                    00
INDEX = 0.
DATA  START LIKE END.
START-ID  = NOD_ID-ID + 1 .
END-ID = START-ID + 4.
DATA TB_AUX_NOD LIKE TB_NODES OCCURS 1 WITH HEADER LINE.
*  REFRESH TB_AUX_NOD.
DATA REL(10).

DO 6 TIMES.
REFRESH TB_AUX_NOD.
DATA TB_SAVE_NODES LIKE TB_NODES OCCURS 1 WITH HEADER LINE.
IF G_IS_FIRST = SPACE.
TB_SAVE_NODES[] = TB_NODES[].
ELSE.
TB_SAVE_NODES[] = TB_D_NODES[].
ENDIF.
LOOP AT TB_SAVE_NODES WHERE   ID >= START-ID   AND ID <= END-ID.
TB_AUX_NOD = TB_SAVE_NODES.
APPEND TB_AUX_NOD.
DELETE TB_SAVE_NODES.
ENDLOOP.
START-ID = START-ID + 5.
END-ID = END-ID + 5.
LOOP AT TB_AUX_NOD.
MOVE-CORRESPONDING TB_AUX_NOD TO NODES.
*      NODES-NODISPLAY = SPACE.
*    DELETE TB_NODES.
INDEX = INDEX + 1.
IF IS_FIRST = 0.
IS_FIRST = 1.
REL = 'CHILD'.
ELSE.
REL = 'NEXT'.
ENDIF.
IF INDEX = 6.
INDEX = 1.
ENDIF.
CASE INDEX.
WHEN 1 .

CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = FIX_ID
RELATIONSHIP       = REL
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
CONST =   FIX_ID = IO_NEW_ID.


*      WHEN  6 OR   12 OR 16 OR 21 OR 26.
*
*        CALL FUNCTION 'RS_TREE_ADD_NODE'
*             EXPORTING
*                  NEW_NAME           = 'TABLESPACE PARAMETER NAME'
*                  INSERT_ID          = FIX_ID
*                  RELATIONSHIP       = 'NEXT'
*                  LINK               = ' '
*                  NEW_TYPE           =  'TSPN'
*                  DISPLAY_ATTRIBUTES =  NODES
*             IMPORTING
*                  NEW_ID             = IO_NEW_ID
**         NODE_INFO          =
*             EXCEPTIONS
*                  ID_NOT_FOUND       = 1
*                  OTHERS             = 2.

*WHEN 7.
*        CALL FUNCTION 'RS_TREE_ADD_NODE'
*             EXPORTING
*                  NEW_NAME           = 'TABLESPACE PARAMETER NAME'
*                  INSERT_ID          = IO_NEW_ID
*                  RELATIONSHIP       = 'CHILD'
*                  LINK               = ' '
*                  NEW_TYPE           =  'TSPN'
*                  DISPLAY_ATTRIBUTES =  NODES
*             IMPORTING
*                  NEW_ID             = IO_NEW_ID
**         NODE_INFO          =
*             EXCEPTIONS
*                  ID_NOT_FOUND       = 1
*                  OTHERS             = 2.


WHEN  2 .                      "OR 7 OR  12 OR 17 OR 22 .

CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
WHEN OTHERS.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'NEXT'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.

ENDCASE.


ENDLOOP.
ENDDO.
CONST = CONST + 29.
*CALL FUNCTION 'RS_TREE_DELETE_NODE'
*     EXPORTING
*          NODE_ID      = CONST
**          WITHOUT_ROOT =
*     EXCEPTIONS
*          ID_NOT_FOUND = 1
*          OTHERS       = 2.



ENDFORM.                               " YMA_RESTORE_SUBNDE
*&---------------------------------------------------------------------*
*&      Form  YMA_RESTORE_SUBNDE1
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_NOD_ID  text                                               *
*----------------------------------------------------------------------*
FORM YMA_RESTORE_SUBNDE1 USING    P_NOD_ID.
PERFORM YMA_RECOGN_NEW_TREE.
DATA FIX_ID LIKE IO_NEW_ID.
DATA: BEGIN OF END ,
ID LIKE TB_NODES-ID,
END OF END.
*LENGTH                     12
*LENGTH1                    07
*LENGTH3                    00
INDEX = 0.
DATA ID  LIKE  TB_NODES-ID.

*ID = P_NOD_ID + 1.
LOOP AT TB_NODES WHERE   ID >= ID .

*  IF TB_NODES-NODISPLAY = SPACE.
*   EXIT.
*   ENDIF.

*    TB_NODES-NODISPLAY = SPACE.
INDEX = INDEX + 1.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = TB_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
ENDLOOP.

ENDFORM.                               " YMA_RESTORE_SUBNDE1
*&---------------------------------------------------------------------*
*&      Form  YMA_REARRANGE_TREE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_REARRANGE_TREE USING TYPE.
PERFORM YMA_RECOGN_NEW_TREE.

CALL FUNCTION 'RS_TREE_LIST'
*    EXPORTING
*         NODE_ID         = 1
*         ALL             = ' '
*         WITH_ATTRIBUTES = ' '
TABLES
LIST            = TB_EXPAND_LIST
EXCEPTIONS
CYCLE_DETECTED  = 1
NODE_NOT_FOUND  = 2
OTHERS          = 3.
EXPORT TB_EXPAND_LIST TO  MEMORY ID 'YPMN_CHANGE'.
*IMPORT TB_EXPAND_LIST FROM MEMORY ID 'YPGR_CHANGE'.
EXPORT TB_NODES  TO MEMORY ID 'YPMM_CHNG'.


SUBMIT YMATR000 WITH P_TYPE = TYPE.

*CALL FUNCTION 'RS_TREE_DELETE_NODE'
*     EXPORTING
*          NODE_ID      =  1
**         WITHOUT_ROOT =
*     EXCEPTIONS
*          ID_NOT_FOUND = 1
*          OTHERS       = 2.


* CALL FUNCTION 'RS_TREE_CONSTRUCT'
*      TABLES
*           NODETAB            = TB_NODES
*      EXCEPTIONS
*           TREE_FAILURE       = 01
*           ID_NOT_FOUND       = 02
*           WRONG_RELATIONSHIP = 03.
* CALL FUNCTION 'RS_TREE_LIST_DISPLAY'
*      EXPORTING
*         CALLBACK_PROGRAM       =  'YMATR000'
*         CALLBACK_USER_COMMAND  =  'USER_COMMAND'
*           NODE_LENGTH            = 50
*           TEXT_LENGTH            = 80
*           NODE_LENGTH1           = 50
*           TEXT_LENGTH1           = 80
**         CALLBACK_TOP_OF_PAGE  = 'TOP_OF_PAGE_WRITE'
*           STATUS                = 'AP_SHOW'
**           SUPPRESS_NODE_OUTPUT  = 'X'
*
*      IMPORTING
*           F15                   = F15.

ENDFORM.                               " YMA_REARRANGE_TREE
*&---------------------------------------------------------------------*
*&      Form  YMA_BUILD_TREE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_BUILD_TREE.

CALL FUNCTION 'RS_TREE_CONSTRUCT'
TABLES
NODETAB            = TB_NODES
EXCEPTIONS
TREE_FAILURE       = 01
ID_NOT_FOUND       = 02
WRONG_RELATIONSHIP = 03.

ENDFORM.                               " YMA_BUILD_TREE
*&---------------------------------------------------------------------*
*&      Form  YMA_SET_DEFAULT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SET_DEFAULT.

SELECT SINGLE * FROM  YMA_TREE
WHERE  YMA_PARAME  = G_NODE-TEXT6+40(25)
AND    LANG        = SY-LANGU(1).
R_THRESHOLD  =   YMA_TREE-YOP_QT_RED.
Y_THRESHOLD  =   YMA_TREE-YOP_QT_YEL.
PRIORITY     =   YMA_TREE-YOP_QT_PRT.
IF YMA_TREE-Y_ALRT_M_C = 'M'.
G_ML_CANC    =   'Mail'(053).
ELSE.
G_ML_CANC    =   'Cancel'(063).
ENDIF.
ENDFORM.                               " YMA_SET_DEFAULT
*&---------------------------------------------------------------------*
*&      Form  YMA_PREP_DEL_YMA_TREE_J
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_PREP_DEL_YMA_TREE_J.
TB_YMA_TREE_J_DEL-YMA_JOB = G_NODE-TEXT.
APPEND TB_YMA_TREE_J_DEL.

ENDFORM.                               " YMA_PREP_DEL_YMA_TREE_J
*&---------------------------------------------------------------------*
*&      Form  YMA_GEN_DOCU_TEXT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_GEN_DOCU_TEXT.
DATA DOCU_TEXT LIKE RSFIN-TXTKEY.
*CASE G_NODE-TEXT7+44(30) .
*    WHEN 'TIME_LIMIT' .               DOCU_TEXT = 'TXYMAD_TIME_LIMIT'.
CASE G_NODE-TEXT6(3).
WHEN 'SQL'.   DOCU_TEXT = 'TXYMAD_TIME_LIMIT'.
ENDCASE.
CASE G_NODE-TEXT8.
WHEN 'CPU USAGE'.                 DOCU_TEXT = 'TXYMAD_CPU'.
WHEN 'I/O TIME'.                  DOCU_TEXT = 'TXYMAD_I/O'.
WHEN 'RUN TIME'.                  DOCU_TEXT = 'TXYMAD_RUN'.
WHEN 'STORAGE USAGE / EXTENDED'.  DOCU_TEXT = 'TXYMAD_EXTENDED'.
WHEN 'STORAGE USAGE / PAGING'.    DOCU_TEXT = 'TXYMAD_PAGING'.
WHEN 'STORAGE USAGE / ROLL'.      DOCU_TEXT = 'TXYMAD_ROLL'.
ENDCASE.

CASE G_NODE-TEXT6+5(20).
WHEN 'LOCKS_TIME'. DOCU_TEXT = 'TXYMAD_LOCKS_TIME'.

WHEN 'LOCKS'. DOCU_TEXT = 'TXYMAD_LOCKS'.
ENDCASE.

IF G_NODE-TEXT6(6) =  'JBbVUI' OR G_NODE-TEXT6(6) =  'JBbPUI' .
CASE G_NODE-TEXT6+67(8).
WHEN SPACE.     DOCU_TEXT = 'TXYMAD_BATCH_PRIORITY'.
WHEN 'CLASS A'. DOCU_TEXT = 'TXYMAD_BATCH_PRIORITY_A'.
WHEN 'CLASS B'. DOCU_TEXT = 'TXYMAD_BATCH_PRIORITY_B'.
WHEN 'CLASS C'. DOCU_TEXT = 'TXYMAD_BATCH_PRIORITY_C'.
ENDCASE.
ENDIF.

IF G_NODE-TEXT6(3) = 'JOB' .         " Job Manager'.
DOCU_TEXT = 'TXYMAD_JOBGEN'.
ENDIF.

IF G_NODE-TEXT6+47(6) = 'MAXOPM'.
CASE G_NODE-TEXT7(32).
WHEN 'MAX_WAIT' OR 'MAX_WP' OR  'WAIT_WP' OR 'MIN_WP'.
CONCATENATE 'TXYMAD_'  G_NODE-TEXT7(32)  '_' G_NODE-TEXT7+32(10)
INTO DOCU_TEXT.

WHEN OTHERS.
CONCATENATE 'TXYMAD_'  G_NODE-TEXT7(32)   INTO DOCU_TEXT.

ENDCASE.
ENDIF.

".

CALL FUNCTION 'SF_SHOW_DOKU'
EXPORTING
KEY    = DOCU_TEXT
EXCEPTIONS
OTHERS = 1.



ENDFORM.                               " YMA_GEN_DOCU_TEXT
*&---------------------------------------------------------------------*
*&      Form  YMA_CHECK_USER_GROUP_VALID
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_CHECK_USER_GROUP_VALID.
DATA TEXT(20).
G_USER_GROUP_ERROR = 0.
IF SY-DYNNR = '0100'.
REPLACE '*'  WITH '%'  INTO YMA_SCREEN-Y_TRANS.
TABLES TSTC.
IF TR_RATIO = 'Job'(005).
SELECT SINGLE * FROM  TSTC
WHERE  TCODE     LIKE  YMA_SCREEN-Y_TRANS.
*       AND    PGMNA       = ___
*       AND    DYPNO       = ___
*       AND    MENUE       = ___
*       AND    CINFO       = ___
*       AND    ARBGB       = ___            .
IF SY-SUBRC NE 0.
G_USER_GROUP_ERROR = 1.
MESSAGE I028.

ENDIF.
ENDIF.
REPLACE '%'  WITH '*'  INTO YMA_SCREEN-Y_TRANS.
ENDIF.


CASE USER_RATIO.
WHEN 'User'(045).                  "Group
REPLACE '*'  WITH '%'  INTO GROUP_NAME.
*CONCATENATE GROUP_NAME '%' INTO TEXT.
*SELECT SINGLE * FROM  USR02      CLIENT SPECIFIED
*       WHERE  MANDT       =  SY-MANDT
*       AND    CLASS      LIKE GROUP_NAME.
SELECT SINGLE * FROM  USGRP      CLIENT SPECIFIED
WHERE  MANDT       = SY-MANDT
AND    USERGROUP   LIKE GROUP_NAME.         .
IF SY-SUBRC NE 0.
MESSAGE I024.
G_USER_GROUP_ERROR = 1.
ENDIF.
REPLACE '%'  WITH '*'  INTO GROUP_NAME.
*          NAME  = GROUP_NAME.
*          GR_US = 'G'.

WHEN 'Group'(046).
REPLACE '*'  WITH '%'  INTO US_NAME.
*CONCATENATE US_NAME '%' INTO TEXT.
SELECT SINGLE * FROM  USR02      CLIENT SPECIFIED
WHERE  MANDT       =  SY-MANDT
AND    BNAME LIKE US_NAME.
IF SY-SUBRC NE 0.
MESSAGE I026.
G_USER_GROUP_ERROR = 1 .
ENDIF.
REPLACE '%'  WITH '*'  INTO US_NAME.

*          NAME  = US_NAME.
*          GR_US = 'U'.
ENDCASE.
ENDFORM.                               " YMA_CHECK_USER_GROUP_VALID
*&---------------------------------------------------------------------*
*&      Form  YMA_LOC_DETAIL1
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_LOC_DETAIL1.
TB_NODES-TLEVEL    = 8.
TB_NODES-TLENGTH = 1.
TB_NODES-TEXT    = 'SYM_DOCUMENT'.
TB_NODES-HOTSPOT = 'X'.
TB_NODES-KIND = 'S'.
TB_NODES-TCOLOR  = 3.
***********************Restore afterward *****************************
TB_NODES-TEXT1 = 'ICON_BUSINAV_PROC_EXIST'.
TB_NODES-KIND1 = 'I'.
TB_NODES-TLENGTH1 = 3.
TB_NODES-TEXT2 = YMA_LOC_TR-YOP_QT_YEL.
TB_NODES-TLENGTH2 = 10.
*        TB_NODES-TEXT2 = TB_TREE-YOP_QT_YEL.
TB_NODES-TCOLOR2 = 1.

TB_NODES-TLENGTH3 = 20.
TB_NODES-TEXT3 = TEXT-055.

TB_NODES-TEXT4 = 'ICON_EXECUTE_OBJECT'.
TB_NODES-KIND4 = 'I'.
TB_NODES-TLENGTH4 = 3.
TB_NODES-HOTSPOT4 = 'X'.
**TB_NODES-TLENGTH4 = 1.
******************popup data forming here !!!!**************************
TB_NODES-TEXT6+15 = SPACE.                                "
TB_NODES-TEXT6+47 = SPACE.                                "
TB_NODES-TEXT6+50 = SPACE.                                "
***********************************************************************
TB_NODES-TEXT6 = 'PLTU'.
TB_NODES-TEXT6+5(20) = 'LOCKS'.      "YMA_LOC_TR-YMA_PARAME.
*   TB_NODES-TEXT6+26(12) = YMA_LOC_TR-YMA_USERNM.
APPEND TB_NODES.
************************************************************************

TB_NODES-TEXT3 = TEXT-056.
TB_NODES-TEXT2 = YMA_LOC_TR-YOP_QT_RED.
TB_NODES-TEXT6 = 'PLTU'.
TB_NODES-TEXT6+5(20) = 'LOCKS'.      "YMA_LOC_TR-YMA_PARAME.
*   TB_NODES-TEXT6+26(12) = YMA_LOC_TR-YMA_USERNM.
APPEND TB_NODES.

TB_NODES-TEXT3 = TEXT-050.
TB_NODES-TEXT2 = YMA_LOC_TR-YOP_QT_PRT.
TB_NODES-TEXT6 = 'PLTU'.
TB_NODES-TEXT6+5(20) =  'LOCKS'.     "YMA_LOC_TR-YMA_PARAME.
*   TB_NODES-TEXT6+26(12) = YMA_LOC_TR-YMA_USERNM.
APPEND TB_NODES.

TB_NODES-TEXT3 = TEXT-011.
IF YMA_LOC_TR-Y_ALRT_M_C = 'M'.
TB_NODES-TEXT2 = TEXT-028.
ELSEIF YMA_LOC_TR-Y_ALRT_M_C = 'C'.
TB_NODES-TEXT2 = TEXT-029.
ENDIF.
TB_NODES-TEXT6 = 'PLTU'.
TB_NODES-TEXT6+5(20) = 'LOCKS'.      ""YMA_LOC_TR-YMA_PARAME.
*   TB_NODES-TEXT6+26(12) = YMA_LOC_TR-YMA_USERNM.
APPEND TB_NODES.

ENDFORM.                               " YMA_LOC_DETAIL1
*&---------------------------------------------------------------------*
*&      Form  YMA_SQL_TRANSACT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SQL_TRANSACT.
TB_NODES-TEXT  = YMA_SQL_TR-Y_TCODE.
TB_NODES-TLENGTH = 20.
TB_NODES-TEXT1 = 'Transaction'(060).
TB_NODES-TLENGTH1 = 12.
TB_NODES-TLEVEL = 7.
TB_NODES-TCOLOR = 1.
TB_NODES-TINTENSIV = 'X'.
TB_NODES-INTENSIV = '1'.
TB_NODES-COLOR = 2.
TB_NODES-TEXT6 = 'm_sql_TR'.
TB_NODES-TEXT7 = YMA_SQL_TR.
TB_NODES-TEXT8 = YMA_SQL_TR-Y_TCODE.
TB_NODES-TEXT9 = YMA_SQL_TR-Y_PROGRAM.
APPEND TB_NODES.

ENDFORM.                               " YMA_SQL_TRANSACT
*&---------------------------------------------------------------------*
*&      Form  YMA_SQL_PROGRAM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SQL_PROGRAM.
TB_NODES-TEXT = YMA_SQL_TR-Y_PROGRAM.
TB_NODES-TEXT1 =  'Program'(082).
TB_NODES-TLENGTH1 =  11.
TB_NODES-TLENGTH = 40.
TB_NODES-TLEVEL = 6.
TB_NODES-TCOLOR = 5.
TB_NODES-COLOR = 2.
TB_NODES-TINTENSIV = 'X'.
TB_NODES-INTENSIV = '1'.
TB_NODES-TEXT6 = 'm_sql_PROG'.
TB_NODES-TEXT7 = YMA_SQL_TR.
TB_NODES-TEXT8 = YMA_SQL_TR-Y_TCODE.
TB_NODES-TEXT9 = YMA_SQL_TR-Y_PROGRAM.
APPEND TB_NODES.

ENDFORM.                               " YMA_SQL_PROGRAM
*&---------------------------------------------------------------------*
*&      Form  CHECK_LOW_LIMIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_CHECK_LOW_LIMIT.

CASE G_NODE-TEXT6+40(25).
WHEN 'CPU USAGE'  OR 'RUN TIME'.
IF Y_THRESHOLD < 1 OR R_THRESHOLD < 1 .
MESSAGE W017.
SET SCREEN 0.
SET_ERROR = 1.
LEAVE SCREEN.
ENDIF.
WHEN     'I/O TIME'.
IF Y_THRESHOLD < 20 OR R_THRESHOLD < 20 .
MESSAGE W011.
SET SCREEN 0.
SET_ERROR = 1.
LEAVE SCREEN.
ENDIF.
WHEN  'STORAGE USAGE / EXTENDED' OR  'STORAGE USAGE / PAGING'
OR 'STORAGE USAGE / ROLL'.
IF Y_THRESHOLD < 5 OR R_THRESHOLD < 5 .
MESSAGE W016.
SET SCREEN 0.
SET_ERROR = 1.
LEAVE SCREEN.
ENDIF.

ENDCASE.

ENDFORM.                               " CHECK_LOW_LIMIT
*&---------------------------------------------------------------------*
*&      Form  YMA_CHECK_LOW_LEVEL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_CHECK_LOW_LEVEL.
CASE G_NODE-TEXT8.
WHEN  'CPU USAGE' OR   'I/O TIME' OR   'RUN TIME'.
IF Y_THRESHOLD < 20 OR R_THRESHOLD < 20 .
MESSAGE W011.
SET SCREEN 0.
SET_ERROR1 = 1.
LEAVE SCREEN.
ENDIF.
WHEN  'STORAGE USAGE / EXTENDED' OR  'STORAGE USAGE / PAGING'
OR 'STORAGE USAGE / ROLL'.
IF Y_THRESHOLD < 5 OR R_THRESHOLD < 5 .
MESSAGE W016.
SET SCREEN 0.
SET_ERROR1 = 1.
LEAVE SCREEN.
ENDIF.

ENDCASE.

ENDFORM.                               " YMA_CHECK_LOW_LEVEL
*&---------------------------------------------------------------------*
*&      Form  YMA_CHECK_LOW_LIMIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_CHECK_LOW_LIMIT1.
CASE G_NODE-TEXT6+26(12).
WHEN SPACE.
IF Y_THRESHOLD < 5 OR R_THRESHOLD < 5 .
MESSAGE W016.
SET SCREEN 0.
SET_ERROR1 = 1.
LEAVE SCREEN.
ENDIF.
WHEN OTHERS.
IF Y_THRESHOLD < 20 OR R_THRESHOLD < 20 .
MESSAGE W011.
SET SCREEN 0.
SET_ERROR1 = 1.
LEAVE SCREEN.
ENDIF.

ENDCASE.
ENDFORM.                               " YMA_CHECK_LOW_LIMIT
*&---------------------------------------------------------------------*
*&      Form  YMA_UNLOCK0_SCREEN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_UNLOCK0_SCREEN.
* SCREEN-REQUIRED
*   SCREEN-INPUT = 1.
SCREEN-OUTPUT = 1.
* SCREEN-INTENSIFIED
SCREEN-ACTIVE = 1.
SCREEN-INVISIBLE = 0.
*G_ON_TRANSACTION = 0.
MODIFY SCREEN.

ENDFORM.                               " YMA_UNLOCK0_SCREEN
*&---------------------------------------------------------------------*
*&      Form  YMA_USER_LEVEL_SQL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_USER_LEVEL_SQL.
LOOP AT SCREEN.
IF SCREEN-NAME = 'USER_RATIO' .
SCREEN-INPUT = 0.
MODIFY SCREEN.
ENDIF.
ENDLOOP.
IF G_NODE-TEXT8+1(1) = 'G'.
USER_RATIO = 'User'.
GROUP_NAME = G_NODE-TEXT7+20(12).
ELSE.
USER_RATIO = 'Group'.
US_NAME = G_NODE-TEXT7+20(12).
ENDIF.
FL_USGROUP = 1.
Y_APPSERV = G_NODE-TEXT7(20).
LOOP AT SCREEN.
IF SCREEN-NAME = 'YMA_SCREEN-Y_PROGRAM'.
SCREEN-INPUT = 1.
SCREEN-OUTPUT = 1.
SCREEN-ACTIVE = 1.
SCREEN-INVISIBLE = 0.
MODIFY SCREEN.
ENDIF.
ENDLOOP.
ENDFORM.                               " YMA_USER_LEVEL_SQL
*&---------------------------------------------------------------------*
*&      Form  YMA_SQL_APP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SQL_USER USING INEX_FL.
CLEAR NODES.
IF USER_RATIO = 'Group'.

NODES-TEXT = NODES-TEXT6 = US_NAME ."TB_TREE-YMA_USERNM
ELSEIF  USER_RATIO = 'User'.
NODES-TEXT = NODES-TEXT6     = GROUP_NAME.
ENDIF.
NODES-COLOR      = G_2_COLOR.
NODES-INTENSIV   = '1'.
NODES-TCOLOR     = G_N2_COLOR.
NODES-TINTENSIV   = 1.
NODES-TLENGTH    = 12.
*            NODES-TEXT       = YMA_SQL_TR-Y_USER. "TEXT-012.
NODES-TEXT1       = TEXT-046.
NODES-TLENGTH1 = 7.

IF  USER_RATIO = 'Group'.            "YMA_SQL_TR-Y_GR_USR = 'U'.
NODES-TEXT1       = 'User'(045).
ELSEIF
USER_RATIO = 'User'.                "YMA_SQL_TR-Y_GR_USR = 'G'.
NODES-TEXT1       = 'Group'(046).
ENDIF.
TB_NODES-TLENGTH4 = 13.
IF  INEX_FL = 0.                     "YMA_SQL_TR-Y_ALRT_E_I = 'I'.
NODES-TEXT4     = 'Include'(022).
NODES-TLENGTH4 = 0.
ELSEIF    INEX_FL = 1.

NODES-TEXT4     = 'Exclude'(023) .
NODES-TCOLOR4 = 3 .
NODES-TINTENSIV4 = 'X' .
ENDIF.
NODES-TEXT6 = '      USER'.
IF  USER_RATIO = 'User'(045).
YMA_SQL_TR-Y_USER = GROUP_NAME.                         "m
ELSEIF  USER_RATIO = 'Group'(046).
YMA_SQL_TR-Y_USER = US_NAME.
ENDIF.
NODES-TEXT7 = YMA_SQL_TR.
NODES-TEXT8 = YMA_SCREEN-Y_TRANS.
NODES-TEXT9 = YMA_SCREEN-Y_PROGRAM.

CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           = 'TSPN'
DISPLAY_ATTRIBUTES = NODES
IMPORTING
NEW_ID             = IO_NEW_ID.


ENDFORM.                               " YMA_SQL_USER
*&---------------------------------------------------------------------*
*&      Form  YMA_SQL_TRANS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SQL_TRANS.
CLEAR NODES.
NODES-TEXT  = YMA_SCREEN-Y_TRANS.    "YMA_SQL_TR-Y_TCODE.
NODES-TLENGTH = 20.
*     NODES-TLEVEL = 7.
NODES-TCOLOR = 1.
NODES-TINTENSIV = 'X'.
NODES-INTENSIV = '1'.
NODES-COLOR = 2.
NODES-TEXT6 = 'm_sql_TR'.
NODES-TEXT7 = YMA_SQL_TR.
NODES-TEXT8 = YMA_SCREEN-Y_TRANS.
NODES-TEXT9 = YMA_SCREEN-Y_PROGRAM.
NODES-TEXT1  =  'Transaction'(060).
NODES-TLENGTH1  =  13.


CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           = 'TSPN'
DISPLAY_ATTRIBUTES = NODES
IMPORTING
NEW_ID             = IO_NEW_ID.

*
ENDFORM.                               " YMA_SQL_TRANS
*&---------------------------------------------------------------------*
*&      Form  YMA_SQL_PROG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SQL_PROG.
CLEAR NODES .
NODES-TEXT  =  YMA_SCREEN-Y_PROGRAM. "YMA_SQL_TR-Y_PROGRAM.
NODES-TEXT1  =  'Program'(082).
NODES-TLENGTH1  =  10.
NODES-TLENGTH = 40.
*     NODES-TLEVEL = 8.
NODES-TCOLOR = 5.
NODES-COLOR = 2.
NODES-TINTENSIV = 'X'.
NODES-INTENSIV = '1'.
NODES-TEXT6 = 'm_sql_PROG'.
NODES-TEXT7 = YMA_SQL_TR.
*  NODES-TEXT8 = YMA_SQL_TR+75.
*  NODES-TEXT9 = YMA_SCREEN-Y_PROGRAM.
NODES-TEXT8 = YMA_SCREEN-Y_TRANS.
NODES-TEXT9 = YMA_SCREEN-Y_PROGRAM.

CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           = 'TSPN'
DISPLAY_ATTRIBUTES = NODES
IMPORTING
NEW_ID             = IO_NEW_ID.

ENDFORM.                               " YMA_SQL_PROG
*&---------------------------------------------------------------------*
*&      Form  YMA_SQL_DEFAULT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SQL_DEFAULT.
SELECT SINGLE * FROM  YMA_TR_SQL
WHERE  Y_PARAME    = 'TIME_LIMIT '
AND    LANG        = SY-LANGU.
*       Y_VL_PRT    = ___
*       Y_VL_RED    = ___            .
*       Y_ALRT_M_C
*       Y_VL_YEL
*       YMA_PAR_UN
*       YMA_DESC_S
MOVE-CORRESPONDING YMA_TR_SQL TO YMA_SQL_TR.
YMA_SQL_TR-Y_MSNAME    = Y_APPSERV.
CASE USER_RATIO.
WHEN 'Group'.
YMA_SQL_TR-Y_USER      = US_NAME.
YMA_SQL_TR-Y_GR_USR   = 'U'.
WHEN 'User'.
YMA_SQL_TR-Y_USER      = GROUP_NAME.
YMA_SQL_TR-Y_GR_USR   = 'G'.
ENDCASE.
YMA_SQL_TR-Y_TCODE     = YMA_SCREEN-Y_TRANS.
YMA_SQL_TR-Y_PROGRAM   = YMA_SCREEN-Y_PROGRAM.
YMA_SQL_TR-Y_ALRT_E_I  =  'I'.
IF YMA_SQL_TR-Y_GR_USR   = 'U'.
YMA_SQL_TR-Y_ALRT_E_I  =  'I'.
ENDIF.

ENDFORM.                               " YMA_SQL_DEFAULT
*&---------------------------------------------------------------------*
*&      Form  YMA_SQL_CHECK_FIELDS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SQL_CHECK_FIELDS_EMPTY.
CASE USER_RATIO.
WHEN 'User'.
IF GROUP_NAME = SPACE.
MESSAGE I022.
G_SQL_ERROR = 1.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
WHEN 'Group'.
IF US_NAME = SPACE.
MESSAGE I022.
G_SQL_ERROR = 1.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
ENDCASE.

IF Y_APPSERV = SPACE
OR YMA_SCREEN-Y_TRANS =   SPACE
OR YMA_SCREEN-Y_PROGRAM = SPACE.
MESSAGE I022.
G_SQL_ERROR = 1.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
ENDFORM.                               " YMA_SQL_CHECK_FIELDS
*&---------------------------------------------------------------------*
*&      Form  YMA_SQL_CHECK_FIELDS_VALID
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SQL_CHECK_FIELDS_VALID.
REPLACE '*'  WITH '%'  INTO YMA_SCREEN-Y_TRANS.
SELECT SINGLE * FROM  TSTC
WHERE  TCODE     LIKE  YMA_SCREEN-Y_TRANS.
*       AND    PGMNA       = ___
*       AND    DYPNO       = ___
*       AND    MENUE       = ___
*       AND    CINFO       = ___
*       AND    ARBGB       = ___            .
* REPLACE '%'  WITH '*'  INTO YMA_SCREEN-Y_TRANS.
IF SY-SUBRC NE 0.
REPLACE '%'  WITH '*'  INTO YMA_SCREEN-Y_TRANS.
MESSAGE I028 WITH YMA_SCREEN-Y_TRANS.
G_SQL_ERROR = 1.
SET SCREEN 0.
LEAVE SCREEN.

ENDIF.
REPLACE '%'  WITH '*'  INTO YMA_SCREEN-Y_TRANS.

CASE USER_RATIO.
WHEN 'User'.
REPLACE '*'  WITH '%'  INTO GROUP_NAME.
SELECT SINGLE * FROM  USGRP      CLIENT SPECIFIED
WHERE  MANDT       = SY-MANDT
AND    USERGROUP   LIKE GROUP_NAME.         .

IF SY-SUBRC NE 0.
REPLACE '%'  WITH '*'  INTO GROUP_NAME.
MESSAGE I024 WITH GROUP_NAME.
G_SQL_ERROR = 1.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
REPLACE '%'  WITH '*'  INTO GROUP_NAME.
WHEN 'Group'.
REPLACE '*'  WITH '%'  INTO US_NAME.
SELECT SINGLE * FROM  USR02      CLIENT SPECIFIED
WHERE  MANDT       =  SY-MANDT
AND    BNAME LIKE US_NAME.

IF SY-SUBRC NE 0.
REPLACE '%'  WITH '*'  INTO US_NAME.
MESSAGE I026 WITH US_NAME.
G_SQL_ERROR = 1.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
REPLACE '%'  WITH '*'  INTO US_NAME.
ENDCASE.

REPLACE '*'  WITH '%'  INTO YMA_SCREEN-Y_PROGRAM .

SELECT SINGLE * FROM  TRDIR
WHERE  NAME        LIKE YMA_SCREEN-Y_PROGRAM        .
IF SY-SUBRC NE 0.
REPLACE '%'  WITH '*'  INTO YMA_SCREEN-Y_PROGRAM .
MESSAGE I029 WITH US_NAME.
G_SQL_ERROR = 1.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
REPLACE '%'  WITH '*'  INTO YMA_SCREEN-Y_PROGRAM .




ENDFORM.                               " YMA_SQL_CHECK_FIELDS_VALID
*&---------------------------------------------------------------------*
*&      Form  YMA_PROBLEMATIC_SQL1
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_PROBLEMATIC_SQL1.
READ TABLE TB_INST_NAME INDEX 1.
DATA PARAM_NAME LIKE YMA_SQL_TR-Y_PARAME.
DATA:  FLAG TYPE I VALUE 1, FLAG2 TYPE I VALUE 1.
CLEAR TB_NODES.
TB_NODES-COLOR     = G_2_COLOR.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TCOLOR     = G_N1_COLOR.
TB_NODES-TLENGTH   = 20.
TB_NODES-TLEVEL    = 2.
TB_NODES-TEXT       =  TEXT-059.
APPEND TB_NODES.
CLEAR YMA_SQL_TR.
SELECT * FROM  YMA_SQL_TR
ORDER BY Y_PARAME Y_USER Y_TCODE Y_PROGRAM.

*   IF YMA_SQL_TR-Y_MSNAME = SPACE.
*      TB_NODES-TEXT      = YMA_TR_SQL-YMA_DESC_S.
*      TB_NODES-COLOR      = G_2_COLOR.
*      TB_NODES-INTENSIV   = '1'.
*      TB_NODES-TCOLOR     = G_N4_COLOR.
*      TB_NODES-TLENGTH    = 40.
*      TB_NODES-TLEVEL     = 3.
*      TB_NODES-COLOR = 2.
*      TB_NODES-TEXT6 = 'Problematic SQL'(070).
*      TB_NODES-TCOLOR     = G_4_COLOR.
*      TB_NODES-TINTENSIV = 1.
*      TB_NODES-TEXT6 = 'm_sql_SQL'.
*      YMA_SQL_TR-Y_PARAME = PARAM_NAME.
*      YMA_SQL_TR-Y_MSNAME = TB_INST_NAME-YOP_MSNAME.
*      TB_NODES-TEXT7 = YMA_SQL_TR.
*      TB_NODES-TEXT8 = YMA_SQL_TR+75.
*      APPEND TB_NODES.
*
*      LOOP AT TB_INST_NAME.
**       SELECT * FROM  YMA_SQL_TR WHERE  Y_PARAME = YMA_SQL_TR-Y_PARAME
**         AND Y_MSNAME  = TB_INST_NAME-YOP_MSNAME.
*        TB_NODES-TLENGTH3 = 0.
*        TB_NODES-TLENGTH4 = 0.
*        TB_NODES-HOTSPOT4 = SPACE.
*        TB_NODES-TEXT1 = TB_INST_NAME-IS_ACTIVE.
*        TB_NODES-KIND1 = SPACE.
*        TB_NODES-TLENGTH1 = 12.
*        TB_NODES-TCOLOR1 = 0.
*        IF TB_INST_NAME-IS_ACTIVE NE SPACE.
*          TB_NODES-TCOLOR1 = 6.        "color
*        ENDIF.
*        TB_NODES-TLENGTH2 = 0.
*        TB_NODES-TEXT9 = SPACE.
*        TB_NODES-KIND = SPACE.
*        TB_NODES-COLOR     = G_2_COLOR.
*        TB_NODES-INTENSIV  = '1'.
*        TB_NODES-TLENGTH   = 22.
*        TB_NODES-TLEVEL    = 4.
*        TB_NODES-TEXT      = TB_INST_NAME-YOP_MSNAME.
*        TB_NODES-TCOLOR     = 7.
*        TB_NODES-TINTENSIV = 1.
*        TB_NODES-TEXT6 = 'm_sql_APP'.
*        TB_NODES-TEXT7    = TB_INST_NAME-YOP_MSNAME.
*
**       TB_NODES-TEXT7 = YMA_SQL_TR.
**      TB_NODES-TEXT8 = YMA_SQL_TR+75.
**       ON CHANGE OF YMA_SQL_TR-Y_MSNAME OR YMA_SQL_TR-Y_PARAME.
*        APPEND TB_NODES.
*ENDLOOP.
*
*   ENDIF.
PARAM_NAME = YMA_SQL_TR-Y_PARAME.
ON CHANGE OF YMA_SQL_TR-Y_PARAME.
SELECT SINGLE * FROM  YMA_TR_SQL
WHERE  Y_PARAME  = YMA_SQL_TR-Y_PARAME
AND    LANG        =  SY-LANGU(1).
CLEAR TB_NODES.

************************* Aspect node (e.g time_limit)*****************
*        CLEAR YMA_SQL_TR.

MOVE-CORRESPONDING YMA_TR_SQL TO YMA_SQL_TR.

TB_NODES-TEXT      = YMA_TR_SQL-YMA_DESC_S.
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N4_COLOR.
TB_NODES-TLENGTH    = 40.
TB_NODES-TLEVEL     = 4.
TB_NODES-COLOR = 2.
TB_NODES-TEXT6 = 'Problematic SQL'(070).
TB_NODES-TCOLOR     = G_4_COLOR.
TB_NODES-TINTENSIV = 1.
TB_NODES-TEXT6 = 'm_sql_SQL'.
YMA_SQL_TR-Y_PARAME = PARAM_NAME.
YMA_SQL_TR-Y_MSNAME = TB_INST_NAME-YOP_MSNAME.
TB_NODES-TEXT7 = YMA_SQL_TR.
TB_NODES-TEXT8 = YMA_SQL_TR+75.
APPEND TB_NODES.
******************* End name of aspect ***************************
LOOP AT TB_INST_NAME.
*        SELECT * FROM  YMA_SQL_TR WHERE  Y_PARAME = YMA_SQL_TR-Y_PARAME
*         AND Y_MSNAME  = TB_INST_NAME-YOP_MSNAME.
TB_NODES-TLENGTH3 = 0.
TB_NODES-TLENGTH4 = 0.
TB_NODES-HOTSPOT4 = SPACE.
TB_NODES-TEXT1 = TB_INST_NAME-IS_ACTIVE.
TB_NODES-KIND1 = SPACE.
TB_NODES-TLENGTH1 = 15.
TB_NODES-TCOLOR1 = 0.
IF TB_INST_NAME-IS_ACTIVE NE SPACE.
TB_NODES-TCOLOR1 = 6.        "color
ENDIF.
TB_NODES-TLENGTH2 = 0.
TB_NODES-TEXT9 = SPACE.
TB_NODES-KIND = SPACE.
TB_NODES-COLOR     = G_2_COLOR.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TLENGTH   = 22.
TB_NODES-TLEVEL    = 5.
TB_NODES-TEXT      = TB_INST_NAME-YOP_MSNAME.
TB_NODES-TCOLOR     = 7.
TB_NODES-TINTENSIV = 1.
TB_NODES-TEXT6 = 'm_sql_APP'.
TB_NODES-TEXT7    = TB_INST_NAME-YOP_MSNAME.

*       TB_NODES-TEXT7 = YMA_SQL_TR.
*      TB_NODES-TEXT8 = YMA_SQL_TR+75.
*       ON CHANGE OF YMA_SQL_TR-Y_MSNAME OR YMA_SQL_TR-Y_PARAME.
APPEND TB_NODES.
*ENDON.
CLEAR TB_NODES.
*************             INNER SELECT *********************************

SELECT * FROM  YMA_SQL_TR WHERE  Y_PARAME = YMA_SQL_TR-Y_PARAME
AND Y_MSNAME  = TB_INST_NAME-YOP_MSNAME
ORDER BY Y_PARAME Y_PROGRAM Y_TCODE Y_USER.
ON CHANGE OF  YMA_SQL_TR-Y_MSNAME OR
YMA_SQL_TR-Y_PARAME OR YMA_SQL_TR-Y_PROGRAM.
PERFORM YMA_SQL_PROGRAM.
**************** Prog names block *********************************
ENDON.

CLEAR TB_NODES.

*            ON CHANGE OF   YMA_SQL_TR-Y_TCODE OR YMA_SQL_TR-Y_PROGRAM
*OR YMA_SQL_TR-Y_PARAME OR  YMA_SQL_TR-Y_MSNAME.
********************** Transaction ***********************************
ON CHANGE OF YMA_SQL_TR-Y_MSNAME OR
*                 YMA_SQL_TR-Y_USER OR
YMA_SQL_TR-Y_PARAME OR
YMA_SQL_TR-Y_PROGRAM OR
YMA_SQL_TR-Y_TCODE.
PERFORM YMA_SQL_TRANSACT.
ENDON.
************************* USER NAMES *********************************
CLEAR TB_NODES.
TB_NODES-TEXT6     = YMA_SQL_TR-Y_USER."TB_TREE-YMA_USERNM
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N2_COLOR.
TB_NODES-TINTENSIV   = 1.
TB_NODES-TLENGTH    = 12.
TB_NODES-TLEVEL     = 8.
TB_NODES-TEXT       = YMA_SQL_TR-Y_USER. "TEXT-012.
TB_NODES-TEXT1       = TEXT-046.
TB_NODES-TLENGTH1 = 7.
IF YMA_SQL_TR-Y_GR_USR = 'U'.
TB_NODES-TEXT1       = 'User'(045).
ELSEIF
YMA_SQL_TR-Y_GR_USR = 'G'.
TB_NODES-TEXT1       = 'Group'(046).
ENDIF.
TB_NODES-TLENGTH4 = 13.
IF YMA_SQL_TR-Y_ALRT_E_I = 'I'.
TB_NODES-TEXT4     = 'Include'(022).
TB_NODES-TLENGTH4 = 0.
ELSEIF
YMA_SQL_TR-Y_ALRT_E_I = 'E'.
TB_NODES-TEXT4     = 'Exclude'(023) .
TB_NODES-TCOLOR4 = 3 .
TB_NODES-TINTENSIV4 = 'X' .
ENDIF.
TB_NODES-TEXT6 = '      USER'.
*            TB_NODES-TEXT6 = 'm_sql_USER'.
*
*         TB_NODES-TEXT8 = YMA_SQL_TR+75.
*         TB_NODES-TEXT9  YMA_SQL_TR+75.
TB_NODES-TEXT7 = YMA_SQL_TR.
TB_NODES-TEXT8 = YMA_SQL_TR-Y_TCODE.
TB_NODES-TEXT9 = YMA_SQL_TR-Y_PROGRAM.

APPEND TB_NODES.
CLEAR TB_NODES-TEXT6.
************************************************************************
CLEAR TB_NODES.
IF YMA_SQL_TR-Y_ALRT_E_I = 'I'.
PERFORM YMA_SQL_DETAIL.
ENDIF.
*      ENDON.
*        ENDON.
ENDSELECT.
ENDLOOP.
ENDON.
ENDSELECT.
****************** Empty table***************************************
********************************************************************
IF SY-SUBRC NE 0.
SELECT SINGLE * FROM  YMA_TR_SQL
WHERE LANG        =  SY-LANGU(1).
TB_NODES-TEXT      = YMA_TR_SQL-YMA_DESC_S.
TB_NODES-COLOR      = G_2_COLOR.
TB_NODES-INTENSIV   = '1'.
TB_NODES-TCOLOR     = G_N4_COLOR.
TB_NODES-TLENGTH    = 40.
TB_NODES-TLEVEL     = 3.
TB_NODES-COLOR = 2.
TB_NODES-TEXT6 = 'Problematic SQL'(070).
TB_NODES-TCOLOR     = G_4_COLOR.
TB_NODES-TINTENSIV = 1.
TB_NODES-TEXT6 = 'm_sql_SQL'.
YMA_SQL_TR-Y_PARAME = PARAM_NAME.
YMA_SQL_TR-Y_MSNAME = TB_INST_NAME-YOP_MSNAME.
TB_NODES-TEXT7 = YMA_SQL_TR.
TB_NODES-TEXT8 = YMA_SQL_TR+75.
APPEND TB_NODES.

LOOP AT TB_INST_NAME.
*        SELECT * FROM  YMA_SQL_TR WHERE  Y_PARAME = YMA_SQL_TR-Y_PARAME
*         AND Y_MSNAME  = TB_INST_NAME-YOP_MSNAME.
TB_NODES-TLENGTH3 = 0.
TB_NODES-TLENGTH4 = 0.
TB_NODES-HOTSPOT4 = SPACE.
TB_NODES-TEXT1 = TB_INST_NAME-IS_ACTIVE.
TB_NODES-KIND1 = SPACE.
TB_NODES-TLENGTH1 = 12.
TB_NODES-TCOLOR1 = 0.
IF TB_INST_NAME-IS_ACTIVE NE SPACE.
TB_NODES-TCOLOR1 = 6.          "color
ENDIF.
TB_NODES-TLENGTH2 = 0.
TB_NODES-TEXT9 = SPACE.
TB_NODES-KIND = SPACE.
TB_NODES-COLOR     = G_2_COLOR.
TB_NODES-INTENSIV  = '1'.
TB_NODES-TLENGTH   = 22.
TB_NODES-TLEVEL    = 4.
TB_NODES-TEXT      = TB_INST_NAME-YOP_MSNAME.
TB_NODES-TCOLOR     = 7.
TB_NODES-TINTENSIV = 1.
TB_NODES-TEXT6 = 'm_sql_APP'.
TB_NODES-TEXT7    = TB_INST_NAME-YOP_MSNAME.

*       TB_NODES-TEXT7 = YMA_SQL_TR.
*      TB_NODES-TEXT8 = YMA_SQL_TR+75.
*       ON CHANGE OF YMA_SQL_TR-Y_MSNAME OR YMA_SQL_TR-Y_PARAME.
APPEND TB_NODES.
ENDLOOP.

ENDIF.

ENDFORM.                               " YMA_PROBLEMATIC_SQL1
*&---------------------------------------------------------------------*
*&      Form  YMA_SQL_DETAILS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SQL_DETAILS.
SELECT SINGLE * FROM  YMA_TR_SQL
WHERE  Y_PARAME    = G_NODE-TEXT7+44(20)
AND    LANG        = SY-LANGU   .


NODES-TLENGTH = 1.
NODES-TEXT    = 'SYM_DOCUMENT'.
NODES-HOTSPOT = 'X'.
NODES-KIND = 'S'.
NODES-TCOLOR  = 3.
***********************Restore afterward *****************************
NODES-TEXT1 = 'ICON_BUSINAV_PROC_EXIST'.
NODES-KIND1 = 'I'.
NODES-TLENGTH1 = 3.
NODES-TEXT2 = YMA_TR_SQL-Y_VL_YEL.
NODES-TLENGTH2 = 10.
*        TB_NODES-TEXT2 = TB_TREE-YOP_QT_YEL.
NODES-TCOLOR2 = 1.

NODES-TLENGTH3 = 20.
NODES-TEXT3 = TEXT-055.

NODES-TEXT4 = 'ICON_EXECUTE_OBJECT'.
NODES-KIND4 = 'I'.
NODES-TLENGTH4 = 3.
NODES-HOTSPOT4 = 'X'.
**    ODES-TLENGTH4 = 1.
NODES-TEXT6    = 'SQL'.                                   "
*  ****NODES-TEXT6+4(1) = YMA_SQL_TR-Y_ALRT_E_I.
NODES-TEXT7   =    YMA_SQL_TR.                            "
NODES-TEXT8 = YMA_SCREEN-Y_TRANS.
NODES-TEXT9 = YMA_SCREEN-Y_PROGRAM.

**    ************popup data forming here !!!!**************************
**    *****************************************************************
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           = 'TSPN'
DISPLAY_ATTRIBUTES = NODES
IMPORTING
NEW_ID             = IO_NEW_ID.

NODES-TEXT3 = TEXT-056.
NODES-TEXT2 = YMA_TR_SQL-Y_VL_RED.

CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'NEXT'
LINK               = ' '
NEW_TYPE           = 'TSPN'
DISPLAY_ATTRIBUTES = NODES
IMPORTING
NEW_ID             = IO_NEW_ID.

NODES-TEXT3 = TEXT-050.
NODES-TEXT2 = YMA_TR_SQL-Y_VL_PRT.

CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'NEXT'
LINK               = ' '
NEW_TYPE           = 'TSPN'
DISPLAY_ATTRIBUTES = NODES
IMPORTING
NEW_ID             = IO_NEW_ID.


*  NODES-TEXT3 = TEXT-011.
*  IF YMA_SQL_TR-Y_ALRT_M_C = 'M'.
*    NODES-TEXT2 = TEXT-028.
*  ELSEIF YMA_SQL_TR-Y_ALRT_M_C = 'C'.
*    NODES-TEXT2 = TEXT-029.
*  ENDIF.
*
*  CALL FUNCTION 'RS_TREE_ADD_NODE'
*       EXPORTING
*            NEW_NAME           = 'TABLESPACE PARAMETER NAME'
*            INSERT_ID          = IO_NEW_ID
*            RELATIONSHIP       = 'NEXT'
*            LINK               = ' '
*            NEW_TYPE           = 'TSPN'
*            DISPLAY_ATTRIBUTES = NODES
*       IMPORTING
*            NEW_ID             = IO_NEW_ID.

CLEAR NODES.

ENDFORM.                               " YMA_SQL_DETAILS
*&---------------------------------------------------------------------*
*&      Form  YMA_SQL_DETERMINATE_EXLUDE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SQL_DETERMINATE_EXLUDE USING EXCL_INCL.
DATA FLAG_ALRESDY_EXIST TYPE I.
EXCL_INCL = 'I'.
DATA TEXTX(15).
DATA TEXT(59).
DATA TEMP LIKE TB_NODES OCCURS 1 WITH HEADER LINE.
PERFORM YMA_RECOGN_NEW_TREE.
DATA APPLAY_EXCL TYPE I.
APPLAY_EXCL = 0.

IF USER_RATIO = 'User'(045).
SELECT        * FROM  USR02 CLIENT SPECIFIED
WHERE  CLASS      = GROUP_NAME       .

*      READ TABLE TB_NODES WITH KEY TEXT6+6(4) = 'USER'
READ TABLE TB_NODES WITH KEY TEXT1 = 'User'(045)
*          TEXT7+44(31) = G_NODE-TEXT7+44(31)    " TB_NODES-TEXT7+44(31)
TEXT7(20)     =  Y_APPSERV  " TB_NODES-TEXT7(20)
TEXT9   = YMA_SCREEN-Y_PROGRAM  " TB_NODES-TEXT7+36(8)
TEXT8   =  YMA_SCREEN-Y_TRANS    " TB_NODES-TEXT7+32(4)
TEXT = USR02-BNAME .        " TB_NODES-TEXT7+20(12)
SY = SY.
IF SY-SUBRC = 0.
FLAG_ALRESDY_EXIST = 1.
TEXT6+6(4) = 'USER'.           " TB_NODES-TEXT6+6(4)
EXIT.
ENDIF.
ENDSELECT.
SY = SY.

IF FLAG_ALRESDY_EXIST = 1.
CLASS = USR02-CLASS.
TEXTX = 'from group'(062).
CONCATENATE:
TEXTX  CLASS    INTO TEXT
SEPARATED BY ' ' .


CALL FUNCTION 'POPUP_TO_DECIDE'
EXPORTING
*         DEFAULTOPTION  = '1'
TEXTLINE1      = '@19@One or more users '(061)
TEXTLINE2      = TEXT
TEXTLINE3      = 'were already defined.'(064)
TEXT_OPTION1   = '@1P@Exclude All'(025)
TEXT_OPTION2   = '@02@Cancel'(026)
TITEL          = 'Choose your Action'(019)
*         START_COLUMN   = 25
*         START_ROW      = 6
CANCEL_DISPLAY = SPACE
IMPORTING
ANSWER         = G_ANSWER
EXCEPTIONS
OTHERS         = 1.

IF G_ANSWER = '1'.
APPLAY_EXCL = 1.
SELECT        * FROM  USR02 CLIENT SPECIFIED
WHERE  CLASS      = GROUP_NAME       .

READ TABLE TB_NODES WITH KEY TEXT6+6(4) = 'USER'
*          TEXT7+44(31) = G_NODE-TEXT7+44(31)    " TB_NODES-TEXT7+44(31)
TEXT7(20)     =  Y_APPSERV  " TB_NODES-TEXT7(20)
TEXT9   = YMA_SCREEN-Y_PROGRAM "TB_NODES-TEXT7+36(8
TEXT8   =  YMA_SCREEN-Y_TRANS" TB_NODES-TEXT7+32(4)
TEXT = USR02-BNAME      " TB_NODES-TEXT7+20(12)
TEXT1 = 'User'(045).    " TB_NODES-TEXT6+6(4)
IF SY-SUBRC = 0.
TB_NODES-TEXT4 = 'Exclude'(023).
TB_NODES-TLENGTH4 = 11.
TB_NODES-TINTENSIV4 = 1.
TB_NODES-TCOLOR4 = 3 .

CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = TB_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
TB_EXCL_YMA_SQL_TR =  TB_NODES-TEXT7.
TB_EXCL_YMA_SQL_TR-Y_TCODE = G_NODE-TEXT8.
TB_EXCL_YMA_SQL_TR-Y_PROGRAM = G_NODE-TEXT9.
IF    APPLAY_EXCL = 1.
APPEND TB_EXCL_YMA_SQL_TR.
ENDIF.
DO 3 TIMES.
ADD 1 TO TB_NODES-ID.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = TB_NODES-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
ENDDO.
ENDIF.
ENDSELECT.
ENDIF.
ENDIF.
SY = SY.
ELSEIF USER_RATIO = 'Group'(046).
SELECT SINGLE * FROM  USR02 CLIENT SPECIFIED
WHERE BNAME       =  US_NAME.

*       AND    CLASS       = ___            .

READ TABLE TB_NODES WITH KEY TEXT6+6(4) = 'USER'
*          TEXT7+44(31) = G_NODE-TEXT7+44(31)    " TB_NODES-TEXT7+44(31)
TEXT7(20)     =  Y_APPSERV    " TB_NODES-TEXT7(20)
TEXT9   =  YMA_SCREEN-Y_PROGRAM    " TB_NODES-TEXT7+36(8)
TEXT8   =  YMA_SCREEN-Y_TRANS " TB_NODES-TEXT7+32(4)
TEXT = USR02-CLASS            " TB_NODES-TEXT7+20(12)
TEXT6+6(4) = 'USER'.          " TB_NODES-TEXT6+6(4)
IF SY-SUBRC  = 0.
CONCATENATE: 'in the group "' USR02-CLASS '" ' INTO TEXT.
G_ANS = 0.
CALL FUNCTION 'POPUP_TO_DECIDE'
EXPORTING
*         DEFAULTOPTION  = '1'
TEXTLINE1      = '@19@User already included '
TEXTLINE2      =  TEXT

TEXT_OPTION1   = '@1P@Exclude'(048)
TEXT_OPTION2   =  'Include'(022)
TEXT_OPTION3   =  'Cancel'(063)

*         TEXT_OPTION1   = '@1P@Exclude'(048)
*         TEXT_OPTION2   = '@02@Cancel'(026)
TITEL          = 'Choose your Action'(019)
*         START_COLUMN   = 25
*         START_ROW      = 6
CANCEL_DISPLAY = 'X'
IMPORTING
ANSWER         = G_ANS
EXCEPTIONS
OTHERS         = 1.
IF G_ANS = '1'.

READ TABLE TB_NODES WITH KEY TEXT6+6(4) = 'USER'
*          TEXT7+44(31) = G_NODE-TEXT7+44(31)    " TB_NODES-TEXT7+44(31)
TEXT7(20)     =  Y_APPSERV" TB_NODES-TEXT7(20)
TEXT9   =  YMA_SCREEN-Y_PROGRAM" TB_NODES-TEXT7+36(8)
TEXT8   =  YMA_SCREEN-Y_TRANS  " TB_NODES-TEXT7+32(4)
TEXT = US_NAME            " TB_NODES-TEXT7+20(12)
TEXT6+6(4) = 'USER'.      " TB_NODES-TEXT6+6(4)

TB_NODES-TEXT4 = 'Exclude'(023).
TB_NODES-TLENGTH4 = 11.
TB_NODES-TINTENSIV4 = 1.
TB_NODES-TCOLOR4 = 3 .

CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = TB_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
DO 4 TIMES.
ADD 1 TO TB_NODES-ID.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = TB_NODES-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
ENDDO.
EXCL_INCL = 'E'.
ENDIF.
ENDIF.
ENDIF.
ENDFORM.                               " YMA_SQL_DETERMINATE_EXLUDE
*&---------------------------------------------------------------------*
*&      Form  YMA_DEL_YMA_TR_SQL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_DEL_YMA_TR_SQL  .

CASE G_NODE-TEXT6+6(4).
WHEN 'PROG'.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = G_NODE-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
TB_DEL_YMA_SQL_TR = G_NODE-TEXT7.
TB_DEL_YMA_SQL_TR-Y_TCODE = G_NODE-TEXT8.
TB_DEL_YMA_SQL_TR-Y_PROGRAM = G_NODE-TEXT9.
TB_DEL_YMA_SQL_TR-CASE = 'PROG'.
APPEND TB_DEL_YMA_SQL_TR.
WHEN  'TR'.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = G_NODE-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
TB_DEL_YMA_SQL_TR = G_NODE-TEXT7.
TB_DEL_YMA_SQL_TR-Y_TCODE = G_NODE-TEXT8.
TB_DEL_YMA_SQL_TR-Y_PROGRAM = G_NODE-TEXT9.
TB_DEL_YMA_SQL_TR-CASE = 'TR'.
APPEND TB_DEL_YMA_SQL_TR.

WHEN 'USER'.
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = G_NODE-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.


TB_DEL_YMA_SQL_TR = G_NODE-TEXT7.
TB_DEL_YMA_SQL_TR-Y_USER = G_NODE-TEXT.
TB_DEL_YMA_SQL_TR-Y_TCODE = G_NODE-TEXT8.
TB_DEL_YMA_SQL_TR-Y_PROGRAM = G_NODE-TEXT9.
TB_DEL_YMA_SQL_TR-CASE = 'USER'.
APPEND TB_DEL_YMA_SQL_TR.
*      IF G_NODE-TEXT8+1(1) = 'G'.
SY = SY.
IF G_NODE-TEXT1(1) = 'G'.
SELECT        * FROM  USR02 CLIENT SPECIFIED
WHERE  CLASS      = G_NODE-TEXT.
" G_NODE-TEXT7+20(12)      .

READ TABLE TB_NODES WITH KEY TEXT6+6(4) = 'USER'
*          TEXT7+44(31) = G_NODE-TEXT7+44(31)    " TB_NODES-TEXT7+44(31)
TEXT7(20)     =  G_NODE-TEXT7(20)
TEXT9         =  G_NODE-TEXT9
* *              TEXT7+36(8)   =  G_NODE-TEXT7+36(8)
TEXT8   =  G_NODE-TEXT8
TEXT7+20(12) = USR02-BNAME.
*               TEXT4 = TEXT-023       " TB_NODES-TEXT6+6(4)
*               TEXT2 = 'User'(045).       " TB_NODES-TEXT6+6(4)

IF SY-SUBRC = 0.
*          PERFORM YMA_RECOGN_NEW_TREE.
TB_DEL_YMA_SQL_TR = TB_NODES-TEXT7.
*            TB_DEL_YMA_SQL_TR-Y_USER = G_NODE-TEXT.
TB_DEL_YMA_SQL_TR-CASE = 'USER'.
TB_DEL_YMA_SQL_TR-Y_TCODE = G_NODE-TEXT8.
TB_DEL_YMA_SQL_TR-Y_PROGRAM = G_NODE-TEXT9.

APPEND TB_DEL_YMA_SQL_TR.

CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = TB_NODES-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
ENDIF.
ENDSELECT.
ENDIF.
ENDCASE.
PERFORM YMA_RECOGN_NEW_TREE.
ENDFORM.                               " YMA_DEL_YMA_TR_SQL
*&---------------------------------------------------------------------*
*&      Form  YMA_PROBLEMATIC_SQL_GENERAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_PROBLEMATIC_SQL_GENERAL.
CALL SCREEN 3005  STARTING AT 1 7  ENDING AT 60 15.
DO 15 TIMES .
IF G_SQL_PRM_ERROR = 1.
CALL SCREEN 3005  STARTING AT 1 7  ENDING AT 60 15.
ENDIF.
ENDDO.
ENDFORM.                               " YMA_PROBLEMATIC_SQL_GENERAL
*&---------------------------------------------------------------------*
*&      Form  YMA_SELECT_SQL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_SELECT_SQL.
DATA IN_VALUE(15) TYPE N.
SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'OPTISQL_COL1_INTERVAL'.

IN_VALUE = YMA_OT_GP-IN_VALUE.
YMA_SCREEN-YMA_INTRV1 = IN_VALUE.
SHIFT YMA_SCREEN-YMA_INTRV1 LEFT  DELETING LEADING  '0'.

SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'OPTISQL_COL2_INTERVAL'.
IN_VALUE = YMA_OT_GP-IN_VALUE.
YMA_SCREEN-YMA_INTRV2 = IN_VALUE.
SHIFT YMA_SCREEN-YMA_INTRV2 LEFT  DELETING LEADING  '0'.


SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'OPTISQL_CLEAR_DAYS'.
IN_VALUE = YMA_OT_GP-IN_VALUE.
YMA_SCREEN-YMA_DELDAY = IN_VALUE.
SHIFT YMA_SCREEN-YMA_DELDAY LEFT  DELETING LEADING  '0'.


SELECT SINGLE * FROM  YMA_TR_SQL
WHERE  Y_PARAME    = 'TIME_LIMIT'
AND    LANG        = SY-LANGU.
*       AND    Y_VL_PRT    = ___
*       AND    Y_VL_RED    = ___
*       AND    Y_ALRT_M_C  = ___
*       AND    Y_VL_YEL    = ___
*       AND    YMA_PAR_UN  = ___
*       AND    YMA_DESC_S  = ___            . Y_ALRT_M_C

YMA_SCREEN-YMA_YELTIM = YMA_TR_SQL-Y_VL_YEL.
YMA_SCREEN-YMA_REDTIM = YMA_TR_SQL-Y_VL_RED.
YMA_SCREEN-YMA_PRITIM = YMA_TR_SQL-Y_VL_PRT.
CASE YMA_TR_SQL-Y_ALRT_M_C.
WHEN 'M'.
YMA_SCREEN-YMA_MALTIM = 'Mail'(053).
WHEN 'C'.
YMA_SCREEN-YMA_MALTIM = 'Cancel'(063).
ENDCASE.
INTERVAL1_PREV = YMA_SCREEN-YMA_INTRV1.
ENDFORM.                               " YMA_SELECT_SQL
*&---------------------------------------------------------------------*
*&      Form  YMA_FIT_SQL_THRESHOLDS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
* This form is fitting all entered Red and Yellow thresholds
* according to value of Intrval 1, e.g. for example
*if Intrval 1 = 90 that means all values must be not less 180
*but it does not change values  grater then mim.fitted.
*
*----------------------------------------------------------------------*
FORM YMA_FIT_SQL_THRESHOLDS.

DATA THRESHOLD TYPE I.
DATA DOUBLE TYPE I.
DOUBLE = YMA_SCREEN-YMA_INTRV1.
DOUBLE = DOUBLE * 2.

*MA_SCREEN-YMA_INTRV1
SELECT  * FROM  YMA_SQL_TR.
THRESHOLD = YMA_SQL_TR-Y_VL_YEL.
IF DOUBLE > YMA_SQL_TR-Y_VL_YEL.
YMA_SQL_TR-Y_VL_YEL = DOUBLE.
YMA_SQL_TR-Y_VL_RED = DOUBLE.
SHIFT YMA_SQL_TR-Y_VL_YEL LEFT  DELETING LEADING  SPACE.
SHIFT YMA_SQL_TR-Y_VL_RED LEFT  DELETING LEADING  SPACE.

MODIFY YMA_SQL_TR.

READ TABLE TB_NODES WITH KEY TEXT6 = 'SQL I'  TEXT7(54) = YMA_SQL_TR(54)
TEXT3 = 'Yel. Threshold'.
TB_NODES-TEXT2 = YMA_SQL_TR-Y_VL_YEL.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = TB_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.

READ TABLE TB_NODES WITH KEY TEXT6 = 'SQL I'  TEXT7(54) = YMA_SQL_TR(54)
TEXT3 = 'Red  Threshold'.
TB_NODES-TEXT2 = YMA_SQL_TR-Y_VL_YEL.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = TB_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.

ENDIF.
ENDSELECT.




ENDFORM.                               " YMA_FIT_SQL_THRESHOLDS
*&---------------------------------------------------------------------*
*&      Form  YMA_TREE_U_COPY_JOB
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_TREE_U_COPY_JOB.
DATA OLD(68).
DATA: BEGIN OF PARM OCCURS 2,
PAR(25) TYPE C,
VAL(100) TYPE C,
END OF PARM.
DATA: BEGIN OF NAME OCCURS 2,
NAM(20) TYPE C,
VAL(100) TYPE C,
END OF NAME.

LOOP AT  TB_AUX_NODES .
PARM-PAR = TB_AUX_NODES-TEXT5.
COLLECT PARM.
NAME-NAM = TB_AUX_NODES-TEXT6+27(12).
COLLECT NAME.
ENDLOOP.

LOOP AT NAME.
IF NAME-NAM = SPACE.
DELETE NAME.
ENDIF.
ENDLOOP.

LOOP AT NAME.
LOOP AT PARM.
LOOP AT TB_AUX_NODES WHERE TEXT6+27(12) = NAME-NAM AND
TEXT6+40(25) = PARM-PAR.
SELECT SINGLE * FROM  YMA_TREE
WHERE  YMA_PARAME  = PARM-PAR
AND    LANG        = SY-LANGU(1).

TB_YMA_TREE_U_COPY-YMA_PAR_UN = YMA_TREE-YMA_PAR_UN.

CASE TB_AUX_NODES-TEXT6+40(25).
WHEN SPACE.
TB_YMA_TREE_U_COPY-Y_ALRT_E_I = TB_AUX_NODES-TEXT4(1).
*            TB_YMA_TREE_U_COPY-YOP_MSNAME = TB_AUX_NODES-TEXT6(20).
*            TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).
*            TB_YMA_TREE_U_COPY-YMA_USERNM = TB_AUX_NODES-TEXT6+27(12).
TB_YMA_TREE_U_COPY-YMA_GR_USR = TB_AUX_NODES-TEXT1(1).
ENDCASE.
CASE TB_AUX_NODES-TEXT6+65(3).
WHEN 'YEL'.
TB_YMA_TREE_U_COPY-YMA_PARAME = PARM-PAR.
TB_YMA_TREE_U_COPY-YOP_MSNAME = TB_AUX_NODES-TEXT6(20).
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).
TB_YMA_TREE_U_COPY-YMA_USERNM = TB_AUX_NODES-TEXT6+27(12).

TB_YMA_TREE_U_COPY-YOP_QT_YEL = TB_AUX_NODES-TEXT6+68(7).
WHEN 'RED'.
TB_YMA_TREE_U_COPY-YMA_PARAME = PARM-PAR.
TB_YMA_TREE_U_COPY-YOP_MSNAME = TB_AUX_NODES-TEXT6(20).
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).
TB_YMA_TREE_U_COPY-YMA_USERNM = TB_AUX_NODES-TEXT6+27(12).

TB_YMA_TREE_U_COPY-YOP_QT_RED = TB_AUX_NODES-TEXT6+68(7).
WHEN 'PRT'.
TB_YMA_TREE_U_COPY-YMA_PARAME = PARM-PAR.
TB_YMA_TREE_U_COPY-YOP_MSNAME = TB_AUX_NODES-TEXT6(20).
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).
TB_YMA_TREE_U_COPY-YMA_USERNM = TB_AUX_NODES-TEXT6+27(12).

TB_YMA_TREE_U_COPY-YOP_QT_PRT = TB_AUX_NODES-TEXT6+68(7).
WHEN 'Mai'.
TB_YMA_TREE_U_COPY-YMA_PARAME = PARM-PAR.
TB_YMA_TREE_U_COPY-YOP_MSNAME = TB_AUX_NODES-TEXT6(20).
TB_YMA_TREE_U_COPY-YMA_TCODE = TB_AUX_NODES-TEXT6+22(4).
TB_YMA_TREE_U_COPY-YMA_USERNM = TB_AUX_NODES-TEXT6+27(12).

TB_YMA_TREE_U_COPY-Y_ALRT_M_C = TB_AUX_NODES-TEXT6+68(1).
ENDCASE.

ENDLOOP.
IF TB_YMA_TREE_U_COPY(20) NE SPACE AND
TB_YMA_TREE_U_COPY(68) NE OLD.
COLLECT TB_YMA_TREE_U_COPY.
OLD = TB_YMA_TREE_U_COPY(68).
ENDIF.
ENDLOOP.
ENDLOOP.

ENDFORM.                               " YMA_TREE_U_COPY_JOB
*&---------------------------------------------------------------------*
*&      Form  YMA_COPY_BLOCK_JOB
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_COPY_BLOCK_JOB.
DATA NOD LIKE G_NODE-ID.
NOD = G_NODE-PARENT.
DATA CUR_IND LIKE NOD.
CUR_IND = NOD.
MOVE-CORRESPONDING G_NODE TO NODES.
NODES-TEXT = YMA_TREE_U-YMA_TCODE.

TB_AUX_NODES = TB_AUX_NODES.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = NOD
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             =  IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
NOD = NOD + 1.
DATA C LIKE IO_NEW_ID.
************************************************************************
DATA: INDEX TYPE I, TRANS(12), LIN TYPE I .
INDEX = 2.
C = IO_NEW_ID.

PERFORM YMA_COPY_RLP_DETAILS USING CUR_IND   NOD  INDEX.

DO 30 TIMES.
READ TABLE TB_AUX_NODES INDEX 2.
TRANS = TB_AUX_NODES-TEXT6+27(12).
LOOP AT TB_AUX_NODES WHERE TEXT6+27(12) = TRANS.
DELETE TB_AUX_NODES.
ENDLOOP.
IO_NEW_ID = C.
DESCRIBE TABLE TB_AUX_NODES LINES LIN.
IF LIN < 2.
EXIT.
ENDIF.
PERFORM YMA_COPY_RLP_DETAILS USING CUR_IND   NOD  INDEX .
ENDDO.
REFRESH TB_AUX_NODES.

ENDFORM.                               " YMA_COPY_BLOCK_JOB
*&---------------------------------------------------------------------*
*&      Form  YMA_TB_MODIF_U
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_TB_MODIF_U.
*               SELECT        * FROM  YMA_TREE
*                      WHERE  LANG        = SY-LANGU         .
*MOVE-CORRESPONDING YMA_TREE TO MODIFY_YMA_TREE_Y.
*
*               ENDSELECT.

LOOP AT TB_YMA_TREE_U_COPY.
MOVE-CORRESPONDING TB_YMA_TREE_U_COPY TO  MODIFY_YMA_TREE_U.
TB_YMA_TREE_U_COPY-YMA_TCODE  = YMA_TREE_U-YMA_TCODE.
TB_YMA_TREE_U_COPY-YMA_TJSIGN = 'J'.
MODIFY_YMA_TREE_U-YMA_TCODE  = YMA_TREE_U-YMA_TCODE.
MODIFY_YMA_TREE_U-YMA_TJSIGN  = 'J'.

APPEND  MODIFY_YMA_TREE_U.
MODIFY TB_YMA_TREE_U_COPY.
ENDLOOP.
ENDFORM.                               " YMA_TB_MODIF_U
*&---------------------------------------------------------------------*
*&      Form  YMA_REBUILD_TREE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_REBUILD_TREE.

PERFORM YMA_FIRST_INTERVAL_SLCT1.    " selects for settings scr 0300
PERFORM YMA_FIRST_INTERVAL_SLCT2.    " selects for settings scr 3003

PERFORM YMA_FIRST_SELECT.            "don't perform other time

PERFORM YMA_BUILD_INTAB_APP.

PERFORM YMA_LOCK_MANAGEMENT.

PERFORM YMA_TITLE_BATCH_MANAGER.
******************** job part of tree.
PERFORM YMA_BUILD_INTAB_JOB.
*different one job
PERFORM YMA_SECOND_SELECT.           "don't perform other time

PERFORM YMA_BUILD_INTAB_JOB2.        "Job Manager

PERFORM YMA_OPERATION_MODE.

*   PERFORM YMA_PROBLEMATIC_SQL.
*  if sy-dbsys = 'ORACLE' or sy-dbsys = 'DB6'.
IF SY-DBSYS(3) = 'ORA' OR SY-DBSYS(3) = 'DB6' OR
( SY-DBSYS(3) = 'DB2' AND SY-SAPRL(2) >= '45' ).
PERFORM YMA_PROBLEMATIC_SQL1.
ENDIF.
*********************  VALUE(LIST_REFRESH).   **************************

LOOP AT TB_NODES.
TB_NODES-ID = SY-TABIX.
MODIFY TB_NODES INDEX SY-TABIX.
ENDLOOP.

ENDFORM.                               " YMA_REBUILD_TREE
*&---------------------------------------------------------------------*
*&      Form  YMA_CHANGE_SAVE_EXCLUDE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM YMA_CHANGE_SAVE_EXCLUDE USING USR02-BNAME.
LOOP AT YMA_ADD_YMA_TR_JOP WHERE YMA_USERNM  = USR02-BNAME.
YMA_ADD_YMA_TR_JOP-Y_ALRT_E_I = 'E'.
MODIFY YMA_ADD_YMA_TR_JOP INDEX SY-TABIX.
ENDLOOP.
ENDFORM.                               " YMA_CHANGE_SAVE_EXCLUDE
*&---------------------------------------------------------------------*
*&      Form  YMA_CONFIRM_DEL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_IS_DELITE  text                                            *
*----------------------------------------------------------------------*
FORM YMA_CONFIRM_DEL CHANGING P_IS_DELITE.
G_NODE-TEXT1 = G_NODE-TEXT1.
DATA: TEXT0XA(50) , TEXT0XB(50), TEXT0XC(50), TEXT0XD(50), TEXT0XE(50),
TITEL(90)   .
PERFORM YMA_GET_PROD_NAME.
TITEL(27) = G_W.
TEXT0XA = 'You are about to delete '.
TEXT0XC = 'Are You Sure?    '(085).
IF G_NODE-TEXT2 = 'Transaction'(060) OR G_NODE-TEXT2 = 'Job'(005).
CONCATENATE G_NODE-TEXT2  ' " ' G_NODE-TEXT  ' " ' INTO TEXT0XB
SEPARATED BY '  '.
TITEL+14(50) = 'Resource Limits'(086).

ELSEIF G_NODE-TEXT1 = 'User'(045) OR G_NODE-TEXT1 = 'Group'(046).
CONCATENATE G_NODE-TEXT1  ' " ' G_NODE-TEXT  ' " ' INTO TEXT0XB
SEPARATED BY '  '.
IF G_NODE-TEXT9(3)  = 'App'.
TITEL+14(50) = 'Resource Limits'(086).
ENDIF.
IF G_NODE-TEXT6(10)  =  'LockSystem'.
ENDIF.
ELSEIF G_NODE-TEXT7 = 'JobM'.
CONCATENATE   'Job' ' " ' G_NODE-TEXT  ' " ' INTO TEXT0XB
SEPARATED BY '  '.
ELSEIF G_NODE-TEXT1 = 'Program'(082).
CONCATENATE   G_NODE-TEXT1' " ' G_NODE-TEXT  ' " ' INTO TEXT0XB
SEPARATED BY '  '.
ELSEIF G_NODE-TEXT1 = 'Transaction'(060).
CONCATENATE G_NODE-TEXT1  ' " ' G_NODE-TEXT  ' " ' INTO TEXT0XB
SEPARATED BY '  '.
ENDIF.

*'OptiManage: Confirm Delete'(084)
CALL FUNCTION 'POPUP_TO_CONFIRM_WITH_MESSAGE'
EXPORTING
DIAGNOSETEXT1  = TEXT0XA
DIAGNOSETEXT2  = TEXT0XB
DIAGNOSETEXT3  = TEXT0XC
TEXTLINE1      = TEXT0XD
TEXTLINE2      = TEXT0XE
TITEL          = TITEL
*         START_COLUMN   = 25
*         START_ROW      = 6
CANCEL_DISPLAY = ''
IMPORTING
ANSWER         =  ANSWER
EXCEPTIONS
OTHERS         = 1.
CASE ANSWER.
WHEN   'J'.
P_IS_DELITE = 'Y'.
WHEN   'N'.
P_IS_DELITE = 'N'.
ENDCASE.
ENDFORM.                               " YMA_CONFIRM_DEL
*&---------------------------------------------------------------------*
*&      Form  YMA_GET_PROD_NAME
*&---------------------------------------------------------------------*
FORM YMA_GET_PROD_NAME.
TABLES: YGO_CPROD.
SELECT SINGLE * FROM YGO_CPROD WHERE YOP_PRD_NM = 'MA'.
IF SY-SUBRC = 0 AND YGO_CPROD-YOP_PRD_FN CN SPACE.
G_W = YGO_CPROD-YOP_DESC.
ENDIF.
ENDFORM.                               " YMA_GET_PROD_NAME
*----------------------------------------------------------------------*
FORM WRITE_USERS_LIST.
*----------------------------------------------------------------------*
NEW-LINE NO-SCROLLING.
WRITE /1(41) SY-ULINE.
WRITE /1(41) '|Client|User name     |Type|ERDAT       |'(087).
WRITE /1(41) SY-ULINE.
LOOP AT I_USER.
WRITE: /  '|', I_USER-MANDT,
' |', I_USER-BNAME,
'|', I_USER-USTYP,
' |', I_USER-ERDAT, '|'.
HIDE: I_USER-BNAME.
ENDLOOP.
WRITE: /1(41) SY-ULINE.

ENDFORM.                               " WRITE_USERS_LIST

*----------------------------------------------------------------------*
FORM GET_USERS_LIST.
*----------------------------------------------------------------------*
DATA: LASTCHAR(1) TYPE C,
LEN LIKE SY-FDPOS,
TMP_US_NAME LIKE YTR_SCREEN-USER_ID.

REFRESH I_USER.  CLEAR I_USER.
IF US_NAME IS INITIAL.
SELECT * FROM  USR02 CLIENT SPECIFIED INTO TABLE I_USER.
ELSE.
LEN = STRLEN( US_NAME ) - 1.
LASTCHAR =  US_NAME+LEN(1).
IF US_NAME(1) = '*' OR LASTCHAR = '*'.
TMP_US_NAME = US_NAME.
IF TMP_US_NAME(1) = '*'.
TMP_US_NAME(1) = '%'.
ENDIF.
IF LASTCHAR = '*'.
TMP_US_NAME = TMP_US_NAME(LEN).
CONCATENATE TMP_US_NAME '%' INTO TMP_US_NAME.
ENDIF.
SELECT * FROM  USR02 CLIENT SPECIFIED INTO TABLE I_USER
WHERE BNAME LIKE TMP_US_NAME.
ELSE.
SELECT * FROM  USR02 CLIENT SPECIFIED INTO TABLE I_USER
WHERE BNAME = US_NAME.
ENDIF.
ENDIF.
SORT I_USER BY MANDT BNAME USTYP ERDAT.

SET SCREEN 0.
CALL SCREEN 9100 STARTING AT 10 2 ENDING AT 56 12.

ENDFORM.                               " GET_USERS_LIST
