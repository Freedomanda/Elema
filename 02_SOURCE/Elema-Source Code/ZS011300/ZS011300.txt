************************************************************************
*  高千穂電気プロジェクト・予算ﾃﾞｰﾀ登録更新処理(開発グループ)
************************************************************************
* [プログラム名]
*  　ZS011300
*  [処理概要]
*  １.予算ファイルからデータ読込、S904テーブルに予算データとして
*　　　登録する。
*  ２.指定された年度の全予算データを削除する。
*  [改定履歴]
************************************************************************
*  Author              : PSD Co.,Ltd.
*                        Minako Anekawa
*  Create Date         : 2001/1/11
*  Program Type        : Report
*  Description         : ADD-ON PROGRAM
*  Modifications       :
*    Date        Programmer          Description
*    YYYY/MM/DD  修正者名            説明
*    2002/01/18  PSD Minako Anekawa  エラーログファイルヘッダ行追加
*    2002/01/18  PSD Minako Anekawa  全処理ファイルでエラー・正常ＭＳＧ
*    2002/01/30  PSD Minako Anekawa  開発グループCHEK修正
*    2002/03/20  PSD M.ARAI          ファイル名ﾊﾞﾘｱﾝﾄ取得方法変更
*    2002/03/21  psd m.arai          削除不具合対応
*    2002/03/21  psd m.arai          キー項目チェック不具合対応
*    2002/05/15  PSD K.ARAI          データ登録時重複データは上書き更新
*                                    とする。
*    2002/05/20  PSD K.ARAI          入力ファイル名変更
*    2002/05/20  PSD K.ARAI          入力ファイル名変更(再)
*    2002/05/20  PSD K.ARAI          年度切替時不具合対応
*    2002/06/04  PSD T.SAITOH        ディレクトリ分離保持のため結合処理
*    2002/06/20  PSD T.SAITOH        再移送
*    2002/06/20  PSD T.SAITOH        ファイルサイズエラー255に修正
*    2002/06/20  PSD T.SAITOH        エラーファイル名サイズ修正
*    2002/06/28  PSD T.SAITOH        入力チェック処理追加
*&   2012/08/22  ISID                ES-UP
************************************************************************
REPORT  ZS011300     NO STANDARD PAGE HEADING.

************************************************************************
*   画面レイアウト
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.                              "行纏め開始
SELECTION-SCREEN POSITION 3.                        "ﾗｼﾞｵﾎﾞﾀﾝ3ﾊﾞｲﾄ目から
PARAMETERS: R_ENTRY RADIOBUTTON GROUP RGR1.        "ﾗｼﾞｵﾎﾞﾀﾝ予算ﾃﾞｰﾀ登録
SELECTION-SCREEN COMMENT 5(15) TEXT-001 FOR FIELD R_ENTRY.         "ｺﾒﾝﾄ
SELECTION-SCREEN COMMENT 21(10) TEXT-002 FOR FIELD P_ENDAY.   "ｺﾒﾝﾄ(期初
PARAMETERS: P_ENDAY(4) DEFAULT sy-datum.                         "期初日
SELECTION-SCREEN END OF LINE.                                "行纏め終了

SELECTION-SCREEN SKIP 1.                                  "空白行（1行）

SELECTION-SCREEN BEGIN OF LINE.                              "行纏め開始
SELECTION-SCREEN POSITION 3.                        "ﾗｼﾞｵﾎﾞﾀﾝ3ﾊﾞｲﾄ目から
PARAMETERS: R_DELETE RADIOBUTTON GROUP RGR1.       "ﾗｼﾞｵﾎﾞﾀﾝ予算ﾃﾞｰﾀ登録
SELECTION-SCREEN COMMENT 5(15) TEXT-003 FOR FIELD R_DELETE.        "ｺﾒﾝﾄ
SELECTION-SCREEN COMMENT 21(10) TEXT-002 FOR FIELD P_DEDAY.   "ｺﾒﾝﾄ(期初
PARAMETERS: P_DEDAY(4) DEFAULT sy-datum.                         "期初日
SELECTION-SCREEN END OF LINE.                                "行纏め終了

************************************************************************
*    内部TBL宣言
************************************************************************

***予算データ内部TBL宣言***
DATA:  GT_BUDGET1      TYPE  TABLE OF ZSREAD_FILE02.   "予算ﾃﾞｰﾀ内部TBL

***登録エラーログ内部TBL***
TYPES: BEGIN           OF     TYP_ERROR,
*---MODIFY START PSD T.SAITOH 2002/06/20 ---------------------------*
*      FILE(45)        TYPE   C,                                 "ﾌｧｲﾙ名
FILE(58)        TYPE   C,                                 "ﾌｧｲﾙ名
*---MODIFY END   PSD T.SAITOH 2002/06/20 ---------------------------*
NOMAL(40)       TYPE   C,                                   "正常
WARNING(40)     TYPE   C,                                   "警告
ERROR(40)       TYPE   C,                                    "ｴﾗｰ
END             OF     TYP_ERROR.

DATA:  GT_ERROR        TYPE   TABLE OF TYP_ERROR.            "ｴﾗｰ内部TBL

***ファイル名内部TBL***
TYPES: BEGIN           OF     TYP_FILE,
*---MODIFY START PSD T.SAITOH 2002/06/04 ---------------------------*
*       FILENM(45)      TYPE   C,
FILENM(255)      TYPE   C,
*---MODIFY END   PSD T.SAITOH 2002/06/04 ---------------------------*
END             OF     TYP_FILE.

DATA:  GT_FILE         TYPE   TABLE OF TYP_FILE.          "ﾌｧｲﾙ名内部TBL


************************************************************************
*  構造宣言
************************************************************************
***ﾃﾞｰﾀ登録用構造***
DATA:  GF_S904         TYPE   S904.

***予算ﾃﾞ-ﾀ構造***
DATA:  GF_BUDGET1      TYPE   ZSREAD_FILE02.   "GT_BUDGET1用構造
DATA:  GF_BUDGET2      TYPE   ZSREAD_FILE02.  "S901登録用構造売上設定時

***登録ｴﾗｰﾛｸﾞ構造***
DATA:  GF_ERROR        TYPE   TYP_ERROR.

***ファイル名構造***
DATA:  GF_FILE         TYPE   TYP_FILE.

************************************************************************
*   変数宣言
************************************************************************
***汎用モジュール用(READしたデータを予算データフォーマットに変換
DATA:  G_TABCUT(512)   TYPE   C.

***1レコード目の予算ファイルセグメント区分をデータ登録用構造の品目階層設
***定時使用
DATA:  G_FLAG1         TYPE   P.

***開発グループ存在チェック時***
DATA:  G_MVGR4         TYPE  TVM4-MVGR4.                     "開発ｸﾞﾙｰﾌﾟ
DATA:  G_MVGR4CHEK     TYPE  TVM4-MVGR4.
DATA:  G_FLAG5         TYPE  P.
DATA:  G_MVGR4_1       TYPE  TVM4-MVGR4.

***営業所コード･営業グループ･得意先コード存在チェック時***
DATA:  G_VKBUR         TYPE   tvbur-vkbur.                   "営業所ｺｰﾄﾞ
DATA:  G_VKGRP         TYPE   tvkgr-vkgrp.                   "営業ｸﾞﾙｰﾌﾟ
DATA:  G_KUNNR         TYPE   kna1-kunnr.                    "得意先ｺｰﾄﾞ

***予算データ登録時の登録件数を格納する際使用***
DATA: G_DBCNT1         TYPE   SY-DBCNT.

***予算データ登録失敗時FLAG***
DATA: G_ERRORFLAG2      TYPE    P.

***予算データ削除DELETE時と予算データ登録時の分析_月に使用***
DATA:  G_SPMON1        TYPE   S901-SPMON.     "予算ﾃﾞｰﾀ登録･予算ﾃﾞｰﾀ削除
DATA:  G_SPMON2        TYPE   S901-SPMON.                  "予算ﾃﾞｰﾀ削除
DATA:  G_SPMON3        TYPE   S901-SPMON.                  "予算ﾃﾞｰﾀ削除
DATA:  G_SPMON4        TYPE   S901-SPMON.                  "予算ﾃﾞｰﾀ削除

*---MODIFY START PSD T.SAITOH 2002/06/04 ---------------------------*
****エラーログ出力処理***
* ↓ MODIFY 2002/03/20 PSD M.ARAI エラーログファイル名不具合対応
*DATA:  G_ERRORFILE(80) VALUE '/work/予算（開発グループ)エラーログ.txt'.
*DATA:  G_ERRORFILE(80) TYPE C.          " エラーログファイル名
* ↑
DATA:  G_ERRORFILE(255) TYPE C.          " エラーログファイル名
*---MODIFY END   PSD T.SAITOH 2002/06/04 ---------------------------*

***営業所コード・営業グループ・得意先コードシステムエラー時***
DATA: G_ERRORFLAG1     TYPE    P.                           "エラーFLAG
DATA: G_SYSUBRC        TYPE    N.  "エラーログファイル用SY-SUBRCの値格納
DATA: G_EMESSAGE1(40)  TYPE    C.          "開発グループエラーメッセージ
DATA: G_EMESSAGE2(40)  TYPE    C.          "営業所コードエラーメッセージ
DATA: G_EMESSAGE3(40)  TYPE    C.          "営業グループエラーメッセージ
DATA: G_EMESSAGE4(40)  TYPE    C.          "得意先コードエラーメッセージ

***予算データ削除時POP_UP用***
DATA: G_ANSWER         TYPE    C.    "汎用モジュールANSWERのﾘﾀｰﾝｺ-ﾄﾞ格納
DATA: G_QUESTION(50)   TYPE    C.                        "POP-UPのﾒｯｾｰｼﾞ

***全て処理ﾌｧｲﾙ終了時のメッセージ
*----------------------------------*追加変数
DATA  G_ERRORMSGFLAG      TYPE    P.
*----------------------------------*2002/01/18 PSD M-Anekawa

************************************************************************
*  定数宣言
************************************************************************
CONSTANTS: CNS_VRSIO(3)     TYPE  C  VALUE '001',   "ﾃﾞｰﾀ構成ﾊﾞｰｼﾞｮﾝ番号
CNS_VKORG(4)     TYPE  C  VALUE '1000',             "販売組織
CNS_STWAE(5)     TYPE  C  VALUE 'JPY',            "統計用通貨
CNS_REPORT(8)    TYPE  C  VALUE 'ZS011300',        "MESSEGE用
* Mod ES-UP 2012/08/22 -->
*           CNS_TABLE(5)     TYPE  C  VALUE 'TVARV',           "MESSEGE用
CNS_TABLE(6)     TYPE  C  VALUE 'TVARVC',           "MESSEGE用
* Mod ES-UP 2012/08/22 <--
CNS_CLASS(2)     TYPE C VALUE 'ZS',                "開発区分
CNS_ULINE(1)     TYPE C VALUE '_'.                 "下線
* Add ES-UP 2012/08/22 -->
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
* Add ES-UP 2012/08/22 <--
************************************************************************
* イベント処理　AT SELECTION-SCREEN　入力チェック
************************************************************************
AT SELECTION-SCREEN.
***期初年必須チェック***

***ラジオボタンが予算データ登録選択時必須項目チェック（ブランクchek）***
CASE R_ENTRY.
WHEN 'X'.
IF P_ENDAY = ' '.
MESSAGE E006(Z1) WITH TEXT-002.
ENDIF.
ENDCASE.

***ラジオボタンが予算データ登録選択時必須項目チェック（ブランクchek）***
CASE R_DELETE.
WHEN 'X'.
IF P_DEDAY = ' '.
MESSAGE E006(Z1) WITH TEXT-002.
ENDIF.
ENDCASE.


***ファイル名バリアント設定済みチェック***
* ↓ MODIFY 2002/03/20 PSD M.ARAI ﾌｧｲﾙ名ﾊﾞﾘｱﾝﾄ取得方法変更
perform get_filename.
*  SELECT LOW FROM TVARV
*              INTO  TABLE GT_FILE
*              WHERE NAME = 'ZS_Y2'
*              AND TYPE = 'S'.
* ↑

***エラー処理***
CASE SY-SUBRC.
WHEN 0.                                               "正常 次処理
WHEN 4.                                      "ﾌｧｲﾙ名取得出来ない時
MESSAGE E805(Z1) WITH TEXT-200.
WHEN OTHERS.                                              "ｼｽﾃﾑｴﾗｰ
MESSAGE A603(Z1) WITH CNS_REPORT CNS_TABLE SY-SUBRC.
ENDCASE.

* ↓ APPEND 2002/03/20 PSD M.ARAI ﾌｧｲﾙ名ﾊﾞﾘｱﾝﾄ取得方法変更
* エラーログファイル名取得
perform get_ERR_filename.
***エラー処理***
CASE SY-SUBRC.
WHEN 0.                                               "正常 次処理
WHEN 4.                                      "ﾌｧｲﾙ名取得出来ない時
MESSAGE E805(Z1) WITH TEXT-201.
WHEN OTHERS.                                              "ｼｽﾃﾑｴﾗｰ
MESSAGE A603(Z1) WITH CNS_REPORT CNS_TABLE SY-SUBRC.
ENDCASE.
* ↑

************************************************************************
*　イベント処理　START-OF-SELECTION　主処理
************************************************************************
START-OF-SELECTION.

***ラジオボタン予算データ登録選択***
IF  R_ENTRY = 'X'.
PERFORM FRM_BUDGETINSERT1.
ENDIF.

***ラジオボタン予算データ削除選択***
IF R_DELETE = 'X'.
PERFORM FRM_POPUP.
CASE G_ANSWER.
WHEN '1'.
PERFORM FRM_BUDGETDELETE.
WHEN '2'.
EXIT.
WHEN 'A'.
EXIT.
ENDCASE.
ENDIF.

************************************************************************
*       Form  FRM_BUDGETINSERT1
************************************************************************
*  バリアント設定・ファイルオープン・S904登録用構造設定
*　対象データ取得・非設定除外処理
************************************************************************
FORM FRM_BUDGETINSERT1.
* Add ES-UP 2012/08/22 -->
DATA L_CODEPAGE TYPE ABAP_ENCODING.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
* Add ES-UP 2012/08/22 <--
***バリアント設定したファイル名内部TBLをLOOP***
LOOP AT GT_FILE INTO GF_FILE.

*--- APPEND PSD K.ARAI 2002/05/20
***ファイル名称に選択画面の期初年を追加する
PERFORM FRM_FILENAME_ADD.
*--- APPEND END

***ファイルオープン***
* Mod ES-UP 2012/08/22 -->
*    OPEN DATASET GF_FILE FOR INPUT IN text MODE.
OPEN DATASET GF_FILE FOR INPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
* Mod ES-UP 2012/08/22 <--
***ファイルオープン失敗時***
IF SY-SUBRC <> 0.
CLEAR GF_ERROR.                          "ｴﾗｰﾛｸﾞ登録構造初期化
GF_ERROR-FILE = GF_FILE.       "ﾌｧｲﾙ名ｴﾗｰﾛｸﾞ登録構造ﾌｧｲﾙ名代入
GF_ERROR-ERROR = TEXT-004.          "ｵｰﾌﾟﾝｴﾗｰを登録構造ｴﾗｰ代入
APPEND GF_ERROR TO GT_ERROR.   "ｴﾗｰﾛｸﾞ登録構造〜内部TBLへ追加
CLOSE DATASET GF_FILE.                            "ﾌｧｲﾙｸﾛｰｽﾞ

*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
CONTINUE.                                            "次のﾌｧｲﾙへ
ENDIF.

***ファイルのデータ行のDOループ***
DO.

***営業所チェック・営業グループ・得意先コードエラー時次ファイルへ***
IF G_ERRORFLAG1 = 1.
CLOSE DATASET GF_FILE.
CLEAR G_ERRORFLAG1.
EXIT.
ENDIF.

***DB登録エラー時次ファイル処理***
IF G_ERRORFLAG2 = 1.
CLOSE DATASET GF_FILE.
CLEAR G_ERRORFLAG2.
EXIT.
ENDIF.

***ﾃﾞｰﾀ登録用構造定数設定***
GF_S904-VRSIO = CNS_VRSIO.               "データ構成バージョン番号
GF_S904-VKORG = CNS_VKORG.                               "販売組織
GF_S904-STWAE = CNS_STWAE.                             "統計用通貨

***対象データ取得処理***
***予算データファイルよりレコード1行を読み込み***
READ DATASET GF_FILE INTO G_TABCUT.

IF SY-SUBRC <> 0.
PERFORM frm_notread.
EXIT.
ENDIF.

***汎用モジュール(READしたデータを予算データフォーマットに変換***
PERFORM FRM_READDATATABCUT.

IF GF_BUDGET2-DATATYPE = 'D' AND GF_BUDGET1-DATATYPE = 'D'.
*---APPEND START PSD T.SAITOH 2002/06/27 ---------------------------*
*         入力データチェック
perform frm_inputcheck using GF_BUDGET1 GF_BUDGET2.
*---APPEND END   PSD T.SAITOH 2002/06/27 ---------------------------*
APPEND GF_BUDGET2 TO GT_BUDGET1.
APPEND GF_BUDGET1 TO GT_BUDGET1.
*----------------------------------*追加
G_FLAG5 = G_FLAG5 + 1.
G_MVGR4CHEK = GF_BUDGET2-MVGR4.
*----------------------------------*2002/01/30 PSD M-ANEKAWA
perform FRM_2LINE.
ENDIF.
GF_BUDGET2 = GF_BUDGET1.
ENDDO.
PERFORM FRM_CLEAR.
CLEAR G_FLAG5.
ENDLOOP.

***エラーログ出力処理***
DELETE DATASET G_ERRORFILE.
* Mod ES-UP 2012/08/22 -->
*    OPEN DATASET G_ERRORFILE FOR OUTPUT IN text MODE.
OPEN DATASET G_ERRORFILE FOR OUTPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
* Mod ES-UP 2012/08/22 <--
*-------------------------------*ヘッダの追加
GF_ERROR-FILE = TEXT-021.
GF_ERROR-NOMAL = TEXT-022.
GF_ERROR-WARNING = TEXT-023.
GF_ERROR-ERROR = TEXT-024.
TRANSFER GF_ERROR TO G_ERRORFILE.
CLEAR GF_ERROR.
*-------------------------------*2002/01/18 PSD M-ANEKAWA
LOOP AT GT_ERROR INTO GF_ERROR.
TRANSFER GF_ERROR TO G_ERRORFILE.
ENDLOOP.
CLOSE DATASET G_ERRORFILE.

***全処理ファイル処理（エラー・正常メッセージ処理）
CASE G_ERRORMSGFLAG.
WHEN 0.
MESSAGE S807(Z1) WITH P_ENDAY.
WHEN 1.
MESSAGE S809(Z1) WITH P_ENDAY TEXT-025.
ENDCASE.

***内部データクリア***
PERFORM FRM_CLEAR2.


ENDFORM.                    " FRM_BUDGETINSERT1

************************************************************************
*       Form  FRM_READDATACHANGE
************************************************************************
*     汎用モジュール(READしたデータを予算データフォーマットに変換
************************************************************************
FORM FRM_READDATATABCUT.
CALL FUNCTION 'Z_STABCUT_2'

EXPORTING
TEXT          = G_TABCUT

IMPORTING
DATA          = GF_BUDGET1.

ENDFORM.                    " FRM_READDATATABCUT

************************************************************************
*       Form  form FRM_2LINE
************************************************************************
*  2レコードに対しての処理
*　得意先ｺｰﾄﾞ･営業ｸﾞﾙｰﾌﾟ･得意先ｺｰﾄﾞﾌﾞﾗﾝｸﾁｪｯｸ・データ登録用構造設定
*　品目階層設定
************************************************************************
form FRM_2LINE.

***得意先コード･営業グループ･得意先コードブランクチェック***
***予算データ内部ＴＢＬ２レコードループ***
LOOP AT GT_BUDGET1 INTO GF_BUDGET1.

**開発グループ存在チェック***
*    IF GF_BUDGET1-MVGR4 = ' '.
*----------------------------------------*追加
IF G_FLAG5 = 1 AND  G_MVGR4CHEK = ' '.
*----------------------------------------*2002/01/30 PSD M-Anekawa
ROLLBACK WORK.
CLEAR GF_ERROR.
GF_ERROR-FILE = GF_FILE.
GF_ERROR-ERROR = TEXT-015.
APPEND GF_ERROR TO GT_ERROR.
G_ERRORFLAG1 = 1.
*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
EXIT.
ENDIF.
*-------------------------------------------*追加
IF G_MVGR4CHEK <> ' '.
*-------------------------------------------*2002/01/30 PSD M-ANEKAWA

SELECT SINGLE MVGR4 FROM TVM4
INTO G_MVGR4
*--------------------------------------------*追加
*               WHERE MVGR4 = GF_BUDGET1-MVGR4.
WHERE MVGR4 = G_MVGR4CHEK.

G_MVGR4_1 =  G_MVGR4CHEK.
*--------------------------------------------*2002/01/30 PSD M-ANEKAWA


***SY-SUBRCの値代入***
G_SYSUBRC = SY-SUBRC.

***エラーの時***
CASE SY-SUBRC.
WHEN 0.
*---------------------------------------------*追加
*            GF_S904-MVGR4 = GF_BUDGET1-MVGR4.
GF_S904-MVGR4 = G_MVGR4CHEK.
*---------------------------------------------*2002/01/30 PSD M-ANEKAWA

WHEN 4.
ROLLBACK WORK.
CLEAR GF_ERROR.
GF_ERROR-FILE = GF_FILE.
GF_ERROR-ERROR = TEXT-015.
APPEND GF_ERROR TO GT_ERROR.
G_ERRORFLAG1 = 1.
*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
EXIT.
WHEN OTHERS.
ROLLBACK WORK.
CLEAR GF_ERROR.
CONCATENATE TEXT-016 G_SYSUBRC TEXT-020
INTO G_EMESSAGE1.
GF_ERROR-FILE = GF_FILE.
GF_ERROR-ERROR = G_EMESSAGE1.
APPEND GF_ERROR TO GT_ERROR.
G_ERRORFLAG1 = 1.
*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
EXIT.
ENDCASE.
ENDIF.
*------------------------------------*追加
IF G_MVGR4CHEK = GF_BUDGET1-MVGR4.
GF_S904-MVGR4 = G_MVGR4_1.
ENDIF.
*------------------------------------*2002/01/30 PSD M-Anekawa

***品目階層設定時1レコードをS901登録用構造に代入する際使用***
G_FLAG1 = G_FLAG1 + 1.

***得意先コード･営業グループ･得意先コードがブランクで無い時***
* ↓ modify 2002/03/21 psd m.arai キー項目チェック不具合対応
*    IF GF_BUDGET1-VKBUR <> ' ' AND GF_BUDGET1-VKGRP <> ' ' AND
*      GF_BUDGET1-KUNNR <> ' '.
if not gf_budget1-vkbur is initial.
* ↑
***営業所コード存在チェック***
SELECT SINGLE VKBUR FROM TVKBT  "営業所DBテーブルの営業所コード抽出
INTO G_VKBUR "営業所ｺｰﾄﾞ
WHERE SPRAS = 'J' "言語キー
AND VKBUR = GF_BUDGET1-VKBUR."予算ファイルの営業所ｺｰﾄﾞ

***SY-SUBRCの値代入***
G_SYSUBRC = SY-SUBRC.

***エラーの時***
CASE SY-SUBRC.
WHEN 0.
GF_S904-VKBUR = GF_BUDGET1-VKBUR.               "営業所ｺｰﾄﾞ
WHEN 4.
ROLLBACK WORK.
CLEAR GF_ERROR.
GF_ERROR-FILE = GF_FILE.
GF_ERROR-ERROR = TEXT-005.
APPEND GF_ERROR TO GT_ERROR.
G_ERRORFLAG1 = 1.
*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
EXIT.
WHEN OTHERS.
ROLLBACK WORK.
CLEAR GF_ERROR.
CONCATENATE TEXT-017 G_SYSUBRC TEXT-020
INTO G_EMESSAGE2.
GF_ERROR-FILE = GF_FILE.
GF_ERROR-ERROR = G_EMESSAGE2.
APPEND GF_ERROR TO GT_ERROR.
G_ERRORFLAG1 = 1.
*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
EXIT.
ENDCASE.
endif.
* ↓ modify 2002/03/21 psd m.arai キー項目チェック不具合対応
if not gf_budget1-vkgrp is initial.
* ↑
***営業グループ存在チェック***
SELECT SINGLE VKGRP FROM TVGRT   "組織単位営業ﾃｷｽﾄの営業所ｸﾞﾙｰﾌﾟ抽出
INTO G_VKGRP                                  "営業ｸﾞﾙｰﾌﾟ
WHERE SPRAS = 'J'                               "言語キー
AND VKGRP = GF_BUDGET1-VKGRP.   "予算ファイルの営業ｸﾞﾙｰﾌﾟ

***SY-SUBRCの値代入***
G_SYSUBRC = SY-SUBRC.

***エラーの時***
CASE SY-SUBRC.
WHEN 0.
GF_S904-VKGRP = GF_BUDGET1-VKGRP.                "営業所ｸﾞﾙｰﾌﾟ
WHEN 4.
ROLLBACK WORK.
CLEAR GF_ERROR.
GF_ERROR-FILE = GF_FILE.
GF_ERROR-ERROR = TEXT-006.
APPEND GF_ERROR TO GT_ERROR.
G_ERRORFLAG1 = 1.
*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
EXIT.
WHEN OTHERS.
ROLLBACK WORK.
CLEAR GF_ERROR.
GF_ERROR-FILE = GF_FILE.
CONCATENATE TEXT-018 G_SYSUBRC TEXT-020
INTO G_EMESSAGE3.
GF_ERROR-ERROR = G_EMESSAGE3.
APPEND GF_ERROR TO GT_ERROR.
G_ERRORFLAG1 = 1.
*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
EXIT.
ENDCASE.
endif.
* ↑

* ↓ modify 2002/03/21 psd m.arai キー項目チェック不具合対応
if not gf_budget1-kunnr is initial.
* ↑
***得意先存在チェック***
SELECT SINGLE KUNNR FROM KNA1          "得意先ﾏｽﾀの得意先コード抽出
INTO G_KUNNR                                 "得意先ｺｰﾄﾞ
WHERE KUNNR = GF_BUDGET1-KUNNR.     "予算ﾌｧｲﾙの得意先ｺｰﾄﾞ

***SY-SUBRCの値代入***
G_SYSUBRC = SY-SUBRC.

***エラーの時***
CASE SY-SUBRC.
WHEN 0.
GF_S904-PKUNAG = GF_BUDGET1-KUNNR.             "得意先ｺｰﾄﾞ
WHEN 4.
ROLLBACK WORK.
CLEAR GF_ERROR.
GF_ERROR-FILE = GF_FILE.
GF_ERROR-ERROR = TEXT-007.
APPEND GF_ERROR TO GT_ERROR.
G_ERRORFLAG1 = 1.
*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
EXIT.
WHEN OTHERS.
ROLLBACK WORK.
CLEAR GF_ERROR.
CONCATENATE TEXT-019 G_SYSUBRC TEXT-020
INTO G_EMESSAGE4.
GF_ERROR-FILE = GF_FILE.
GF_ERROR-ERROR = G_EMESSAGE4.
APPEND GF_ERROR TO GT_ERROR.
G_ERRORFLAG1 = 1.
*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
EXIT.
ENDCASE.

ENDIF.

***品目階層設定***
IF G_FLAG1 = 1.
GF_S904-PRODH = GF_BUDGET1-PRODH.
ENDIF.

***1月〜12月データの登録***
PERFORM FRM_1-2ENTRY.

ENDLOOP.
endform.                    " FRM_2LINE

************************************************************************
*       Form  FRM_1-2ENTRY
************************************************************************
*  　　1レコード・2レコード（正味額・粗利額）
************************************************************************
FORM FRM_1-2ENTRY.

***ﾚｺｰﾄﾞ数***
CASE G_FLAG1.
WHEN 1.
GF_BUDGET2 = GF_BUDGET1.
WHEN 2.
PERFORM FRM_SPMON.
PERFORM FRM_CLEAR.
ENDCASE.
ENDFORM.                    " FRM_1-2ENTRY

************************************************************************
*       Form  FRM_SPMON
************************************************************************
*       分析月の設定（1月〜12月）
************************************************************************
FORM FRM_SPMON.
***初期年を分析月に設定***
G_SPMON1+0(4) = P_ENDAY.
G_SPMON1+4(2) = 3.

***分析月の設定(1月〜12月の設定)***
DO 13 TIMES.
G_SPMON1+4(2) = G_SPMON1+4(2) + 1.
GF_S904-SPMON = G_SPMON1.
CASE G_SPMON1+4(2).
WHEN 4.
GF_S904-NETWR = GF_BUDGET2-MON04 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON04 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
WHEN 5.
GF_S904-NETWR = GF_BUDGET2-MON05 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON05 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
WHEN 6.
GF_S904-NETWR = GF_BUDGET2-MON06 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON06 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
WHEN 7.
GF_S904-NETWR = GF_BUDGET2-MON07 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON07 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
WHEN 8.
GF_S904-NETWR = GF_BUDGET2-MON08 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON08 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
WHEN 9.
GF_S904-NETWR = GF_BUDGET2-MON09 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON09 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
WHEN 10.
GF_S904-NETWR = GF_BUDGET2-MON10 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON10 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
WHEN 11.
GF_S904-NETWR = GF_BUDGET2-MON11 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON11 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
WHEN 12.
GF_S904-NETWR = GF_BUDGET2-MON12 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON12 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
WHEN 13.
*--- MODIFY PSD K.ARAI 2002/05/20
G_SPMON1+0(4) = G_SPMON1+0(4) + 1.
*          G_SPMON1+3(1) = G_SPMON1+3(1) + 1.
*--- MODIFY END
G_SPMON1+4(2) = G_SPMON1+4(2) - 13.
WHEN 1.
GF_S904-NETWR = GF_BUDGET2-MON01 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON01 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
WHEN 2.
GF_S904-NETWR = GF_BUDGET2-MON02 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON02 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
WHEN 3.
GF_S904-NETWR = GF_BUDGET2-MON03 * 10.
GF_S904-ZZARAIGAKU = GF_BUDGET1-MON03 * 10.
PERFORM FRM_ENTRY2.
IF G_ERRORFLAG2 = 1.
EXIT.
ENDIF.
ENDCASE.
ENDDO.

ENDFORM.                    " FRM_SPMON

************************************************************************
*       Form  FRM_ENTRY2
************************************************************************
*       S904テーブルへ追加処理
************************************************************************
FORM FRM_ENTRY2.

*S904DBテーブル登録処理***
*--- 2002/05/14 MODIFY PSD K.ARAI
MODIFY S904 FROM GF_S904.
*  INSERT INTO S904 VALUES GF_S904.
*--- 2002/05/14 END
G_DBCNT1 = SY-DBCNT.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
CLEAR GF_ERROR.
GF_ERROR-FILE = GF_FILE.
GF_ERROR-WARNING = TEXT-008.
APPEND GF_ERROR TO GT_ERROR.
G_ERRORFLAG2 = 1.
*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
ENDIF.

ENDFORM.                    " FRM_ENTRY2

************************************************************************
*      Form  FRM_CLEAR
************************************************************************
*       登録処理時の項目・内部TBL・構造クリア
************************************************************************
FORM FRM_CLEAR.
CLEAR G_MVGR4CHEK.
CLEAR G_FLAG1.

REFRESH GT_BUDGET1.
CLEAR GF_BUDGET1.
CLEAR GF_BUDGET2.

ENDFORM.                    " FRM_CLEAR

************************************************************************
*　      Form  FRM_NOTREAD
************************************************************************
*       対象データ取得出来無かった時
************************************************************************
FORM FRM_NOTREAD.

***処理件数チェック(現行ファイルが登録件数0件の時)***
IF G_DBCNT1 = 0.
CLEAR GF_ERROR.
CLEAR G_DBCNT1.
GF_ERROR-FILE = GF_FILE.
GF_ERROR-WARNING = TEXT-014.
APPEND GF_ERROR TO GT_ERROR.
close DATASET GF_FILE.
*---------------------------*追加･最後の処理ﾌｧｲﾙｴﾗｰ･正常終了ｽﾃｰﾀｽﾊﾞｰMSG
G_ERRORMSGFLAG = 1.
*---------------------------*2002/01/18 PSD M-Anekawa
ENDIF.

***処理件数チェック（現行ファイルが登録件数1件以上の時）***
IF G_DBCNT1 > 0.
CLEAR GF_ERROR.
CLEAR G_DBCNT1.
GF_ERROR-FILE = GF_FILE.
GF_ERROR-NOMAL = TEXT-009.
APPEND GF_ERROR TO GT_ERROR.
***コミット***
COMMIT WORK.
***ファイルクローズ***
CLOSE DATASET GF_FILE.
ENDIF.
ENDFORM.                    " FRM_NOTREAD

************************************************************************
*　      Form  FRM_CLEAR2
************************************************************************
*       内部データクリア
************************************************************************
FORM FRM_CLEAR2.
REFRESH  GT_BUDGET1.
REFRESH  GT_ERROR.
REFRESH  GT_FILE.
CLEAR    GF_S904.
CLEAR    GF_BUDGET1.
CLEAR    GF_BUDGET2.
CLEAR    GF_ERROR.
CLEAR    GF_FILE.
CLEAR    G_FLAG1.
CLEAR    G_DBCNT1.
CLEAR    G_VKBUR.
CLEAR    G_VKGRP.
CLEAR    G_KUNNR.
CLEAR    G_SYSUBRC.
CLEAR    G_ERRORFLAG1.
CLEAR    G_ERRORFLAG2.
CLEAR    G_ERRORMSGFLAG.
CLEAR    G_EMESSAGE1.
CLEAR    G_EMESSAGE2.
CLEAR    G_EMESSAGE3.
CLEAR    G_EMESSAGE4.
CLEAR    G_ANSWER.
CLEAR    G_QUESTION.
CLEAR    G_SPMON1.
CLEAR    G_SPMON2.
CLEAR    G_SPMON3.
CLEAR    G_SPMON4.
CLEAR    G_MVGR4_1.
EXIT.

ENDFORM.                    " FRM_CLEAR2

************************************************************************
*　      Form  FRM_POPUP
************************************************************************
*       汎用モジュール（警告）POPUP
************************************************************************
FORM FRM_POPUP.
***QUESTIONのG_QUESTION設定***
CONCATENATE P_DEDAY TEXT-011 INTO G_QUESTION.

***汎用モジュール（警告）***
CALL FUNCTION 'POPUP_TO_CONFIRM'
EXPORTING
TITLEBAR                    = TEXT-010
*   DIAGNOSE_OBJECT             = ' '
TEXT_QUESTION               = G_QUESTION
TEXT_BUTTON_1               = TEXT-012
*   ICON_BUTTON_1               = 'YES'
TEXT_BUTTON_2               = TEXT-013
ICON_BUTTON_2               = 'NO'
DEFAULT_BUTTON              = '1'
DISPLAY_CANCEL_BUTTON       = 'X'
*   USERDEFINED_F1_HELP         = ' '
START_COLUMN                = 25
START_ROW                   = 6
*   POPUP_TYPE                  =
IMPORTING
ANSWER                      = G_ANSWER
* TABLES
*   PARAMETER                   =
EXCEPTIONS
TEXT_NOT_FOUND              = 1
OTHERS                      = 2.

IF SY-SUBRC <> 0.
*      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                    " FRM_POPUP

************************************************************************
*　      Form  FRM_BUDGETDELETE
************************************************************************
*       予算データ削除処理
************************************************************************
FORM FRM_BUDGETDELETE.

***DELETE(月)の設定***
G_SPMON1+0(4) = P_DEDAY.                    "変数に画面入力期初年代入
G_SPMON1+5(1) = 4.                                    "変数に月の設定
G_SPMON2+0(4) = P_DEDAY.                    "変数に画面入力期初年代入
G_SPMON2+4(2) = 12.                                   "変数に月の設定
G_SPMON3+0(4) = P_DEDAY.                    "変数に画面入力期初年代入
*--- MODIFY PSD K.ARAI 2002/05/20
G_SPMON3+0(4) = G_SPMON3+0(4) + 1.                 "変数に年度にﾌﾟﾗｽ1
*  G_SPMON3+3(1) = G_SPMON3+3(1) + 1.                "変数に年度にﾌﾟﾗｽ1
*--- MODIFY END
G_SPMON3+5(1) = 1.                                    "変数に月の設定
G_SPMON4+0(4) = P_DEDAY.                    "変数に画面入力期初年代入
*--- MODIFY PSD K.ARAI 2002/05/20
G_SPMON4+0(4) = G_SPMON4+0(4) + 1.                 "変数に年度にﾌﾟﾗｽ1
*  G_SPMON4+3(1) = G_SPMON4+3(1) + 1.                "変数に年度にﾌﾟﾗｽ1
*--- MODIFY END
G_SPMON4+5(1) = 3.                                    "変数に月の設定

**S904(DBﾃｰﾌﾞﾙ)へ削除処理***
DELETE FROM S904
WHERE VRSIO = '001'
AND
* ↓ modify 2002/03/21 psd m.arai 削除不具合対応
*       SPMON >= G_SPMON1 AND SPMON <= G_SPMON2
*       OR SPMON >= G_SPMON3 AND SPMON <= G_SPMON4.
( SPMON >= G_SPMON1 AND SPMON <= G_SPMON2 OR
SPMON >= G_SPMON3 AND SPMON <= G_SPMON4 )
.
* ↑
IF SY-SUBRC <> 0.
MESSAGE S800(Z1).
ELSEIF SY-SUBRC = 0.
MESSAGE S802(Z1) WITH P_DEDAY.
ENDIF.

***変数のクリア***
CLEAR G_SPMON1.
CLEAR G_SPMON2.
CLEAR G_SPMON3.
CLEAR G_SPMON4.
CLEAR G_ANSWER.
ENDFORM.                    " FRM_BUDGETDELETE

*&---------------------------------------------------------------------*
*&      Form  get_filename
*&---------------------------------------------------------------------*
*       ファイル名取得
*----------------------------------------------------------------------*
form get_filename.
* --- ファイル名（後半）取得
DATA: L_FILENAME TYPE TVARV-NAME."ファイル取得用キー
*---APPEND START PSD T.SAITOH 2002/06/04 ---------------------------*
DATA: L_FILENAME_FRONT_DATA(255) TYPE C."ディレクトリ
PERFORM FRM_GET_FOLDER CHANGING L_FILENAME_FRONT_DATA.
*---APPEND END   PSD T.SAITOH 2002/06/04 ---------------------------*
*---MODIFY START PSD T.SAITOH 2002/06/04 ---------------------------*
CONCATENATE CNS_CLASS
SY-MANDT
SY-REPID
INTO      L_FILENAME
SEPARATED BY CNS_ULINE.

*  SELECT LOW FROM TVARV
*         INTO  TABLE GT_FILE
*         WHERE NAME = L_FILENAME
*         AND TYPE = 'S'.
* Mod ES-UP 2012/08/22 -->
*  SELECT LOW FROM TVARV
SELECT LOW FROM TVARVC
* Mod ES-UP 2012/08/22 <--
INTO (GF_FILE-FILENM)
WHERE NAME = L_FILENAME
AND TYPE = 'S'
* Add ES-UP 2012/12/25 -->
ORDER BY PRIMARY KEY.
* Add ES-UP 2012/12/25 <--
CONCATENATE L_FILENAME_FRONT_DATA
GF_FILE-FILENM
INTO        GF_FILE-FILENM.
APPEND GF_FILE TO GT_FILE.
ENDSELECT.
*---MODIFY END   PSD T.SAITOH 2002/06/04 ---------------------------*

endform.                    " get_filename

*&---------------------------------------------------------------------*
*&      Form  get_ERR_filename
*&---------------------------------------------------------------------*
*       ファイル名取得(エラーログ)
*----------------------------------------------------------------------*
form get_ERR_filename.

DATA: L_FILENAME TYPE TVARV-NAME.
*---APPEND START PSD T.SAITOH 2002/06/04 ---------------------------*
DATA: L_FILENAME_FRONT_DATA(255) TYPE C."ディレクトリ
PERFORM FRM_GET_FOLDER CHANGING L_FILENAME_FRONT_DATA.
*---APPEND END   PSD T.SAITOH 2002/06/04 ---------------------------*

CONCATENATE CNS_CLASS  CNS_ULINE
SY-MANDT   CNS_ULINE
SY-REPID
'LOG'
INTO      L_FILENAME.
* Mod ES-UP 2012/08/22 -->
*  SELECT SINGLE LOW FROM TVARV
SELECT SINGLE LOW FROM TVARVC
* Mod ES-UP 2012/08/22 <--
INTO  G_ERRORFILE
WHERE NAME = L_FILENAME
AND TYPE = 'P'.

*---APPEND START PSD T.SAITOH 2002/06/04 ---------------------------*
CONCATENATE L_FILENAME_FRONT_DATA
G_ERRORFILE
INTO G_ERRORFILE.
*---APPEND END   PSD T.SAITOH 2002/06/04 ---------------------------*

endform.                    " get_ERR_filename

************************************************************************
* イベント処理  END-OF-SELECTON.
************************************************************************
end-of-selection.
*&---------------------------------------------------------------------*
*&      Form  FRM_FILENAME_ADD
*&---------------------------------------------------------------------*
*       ファイル名に選択画面の期初年を追加する
*----------------------------------------------------------------------*
FORM FRM_FILENAME_ADD.
DATA : L_LEN(2)    TYPE N,            " フォルダ+ファイル名のバイト数
L_TXT(2)    TYPE N,            " ファイル名のバイト数
*---MODIFY START PSD T.SAITOH 2002/06/20 ---------------------------*
*         L_FILNM(50) TYPE C.            " 期初年追加後のファイル名
L_FILNM(255) TYPE C.            " 期初年追加後のファイル名
*---MODIFY END   PSD T.SAITOH 2002/06/20 ---------------------------*

L_LEN = STRLEN( GF_FILE-FILENM ).
L_TXT = STRLEN( GF_FILE-FILENM ).
*--- GF_FILE-FILENMの末尾から'\'を検索する
DO L_LEN TIMES.
L_LEN = L_LEN - 1.
CHECK GF_FILE-FILENM+L_LEN(1) = '\'.
L_TXT = L_TXT - L_LEN.
L_LEN = L_LEN + 1.
CONCATENATE GF_FILE-FILENM+0(L_LEN)     " ファイル名'\'まで
P_ENDAY                     " 選択画面の期初年
GF_FILE-FILENM+L_LEN(L_TXT) " ファイル名'\'以降
INTO L_FILNM.
EXIT.
ENDDO.
*--- '\' が存在した場合
IF L_LEN > 0.
GF_FILE-FILENM = L_FILNM.
ELSE.
*--- '\'が存在しなかった場合はGF_FILE-FILENMの先頭に選択画面の
*--- 期初年を追加する
CONCATENATE P_ENDAY GF_FILE-FILENM INTO GF_FILE-FILENM.
ENDIF.
ENDFORM.                    " FRM_FILENAME_ADD
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_FOLDER
*&---------------------------------------------------------------------*
*       フォルダ名（前半）取得
*----------------------------------------------------------------------*
*      <--P_FILE  text
*----------------------------------------------------------------------*
FORM FRM_GET_FOLDER CHANGING P_FILE.

*---APPEND START PSD T.SAITOH 2002/06/04 ---------------------------*
DATA: L_KEY TYPE TVARV-NAME.
* --- ファイル名（前半）設定
* --- ファイル取得用キー設定
CONCATENATE CNS_CLASS    "開発クラス(ZS)
SY-MANDT     "クライアント
'COMMON'     "COMMON
INTO      L_KEY
SEPARATED BY CNS_ULINE.
* Mod ES-UP 2012/08/22 -->
*  SELECT SINGLE LOW FROM TVARV
SELECT SINGLE LOW FROM TVARVC
* Mod ES-UP 2012/08/22 <--
INTO (P_FILE)
WHERE NAME = L_KEY
AND TYPE = 'P'.

*---APPEND END   PSD T.SAITOH 2002/06/04 ---------------------------*

ENDFORM.                    " FRM_GET_FOLDER

*&---------------------------------------------------------------------*
*&      Form  frm_numericcheck
*&---------------------------------------------------------------------*
*       数字チェック
*----------------------------------------------------------------------*
*      --> p_in_data    入力データ（１セル）
*      --> p_col_data   項目名
*----------------------------------------------------------------------*
FORM frm_numericcheck USING     value(p_in_data)
CHANGING  p_ret.

DATA: p_in_data_size TYPE i, "入力セルデータサイズ格納
x_in_data      TYPE c, "入力データ1バイトごとの文字コード格納
c_loop         TYPE i. "ループカウンタ

CLEAR p_ret.

* 未入力なら処理をしない-----------------------------------------------*
IF p_in_data IS INITIAL.
EXIT.
ENDIF.
*----------------------------------------------------------------------*
* Del ES-UP 2012/08/22 -->
*  FIELD-SYMBOLS <fs_x_in_data> TYPE x.
*  ASSIGN x_in_data TO <fs_x_in_data> CASTING TYPE x.
* Del ES-UP 2012/08/22 <--
p_in_data_size = strlen( p_in_data ). "入力文字サイズ

CLEAR c_loop.
WHILE p_in_data_size > c_loop.

x_in_data = p_in_data+c_loop(1).
*   1文字目がマイナスなら問題なし
if c_loop = 0.
* Mod ES-UP 2012/08/22 -->
*      IF (     <fs_x_in_data> <  '30'
*            OR <fs_x_in_data> >  '39' )
*        and <fs_x_in_data> <> '2D'.
IF (     x_in_data <  '0'
OR x_in_data >  '9' )
and x_in_data <> '-'.
* Mod ES-UP 2012/08/22 <--
p_ret = 'ERROR'.
EXIT.
ENDIF.
c_loop = c_loop + 1.
continue.
endif.
* Mod ES-UP 2012/08/22 -->
*    IF <fs_x_in_data> < '30' OR <fs_x_in_data> > '39'.
IF x_in_data < '0' OR x_in_data > '9'.
* Mod ES-UP 2012/08/22 <--
p_ret = 'ERROR'.
EXIT.
ENDIF.

c_loop = c_loop + 1.

ENDWHILE.

ENDFORM.                    " frm_numericcheck
*&---------------------------------------------------------------------*
*&      Form  frm_inputcheck
*&---------------------------------------------------------------------*
*       入力データチェック
*----------------------------------------------------------------------*
FORM frm_inputcheck using pf1 like gf_budget1 pf2 like gf_budget1.
data: L_ret(12) type c.

perform frm_numericcheck using pf1-mon01 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon01.
endif.
perform frm_numericcheck using pf1-mon02 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon02.
endif.
perform frm_numericcheck using pf1-mon03 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon03.
endif.
perform frm_numericcheck using pf1-mon04 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon04.
endif.
perform frm_numericcheck using pf1-mon05 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon05.
endif.
perform frm_numericcheck using pf1-mon06 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon06.
endif.
perform frm_numericcheck using pf1-mon07 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon07.
endif.
perform frm_numericcheck using pf1-mon08 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon08.
endif.
perform frm_numericcheck using pf1-mon09 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon09.
endif.
perform frm_numericcheck using pf1-mon10 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon10.
endif.
perform frm_numericcheck using pf1-mon11 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon11.
endif.
perform frm_numericcheck using pf1-mon12 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf1-mon12.
endif.

perform frm_numericcheck using pf2-mon01 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon01.
endif.
perform frm_numericcheck using pf2-mon02 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon02.
endif.
perform frm_numericcheck using pf2-mon03 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon03.
endif.
perform frm_numericcheck using pf2-mon04 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon04.
endif.
perform frm_numericcheck using pf2-mon05 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon05.
endif.
perform frm_numericcheck using pf2-mon06 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon06.
endif.
perform frm_numericcheck using pf2-mon07 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon07.
endif.
perform frm_numericcheck using pf2-mon08 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon08.
endif.
perform frm_numericcheck using pf2-mon09 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon09.
endif.
perform frm_numericcheck using pf2-mon10 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon10.
endif.
perform frm_numericcheck using pf2-mon11 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon11.
endif.
perform frm_numericcheck using pf2-mon12 changing L_ret.
if L_ret <> space.
perform frm_error_write using pf2-mon12.
endif.


ENDFORM.                    " frm_inputcheck
*&---------------------------------------------------------------------*
*&      Form  frm_error_write
*&---------------------------------------------------------------------*
*       エラー出力
*----------------------------------------------------------------------*
*      -->P_PF1  text
*----------------------------------------------------------------------*
FORM frm_error_write USING p_data.

write:/ '不正なデータを検出しました。ファイルを修正してください'.
uline.
write:/ '開発グループ'        ,g_mvgr4.
write:/ , / p_data.

stop.


ENDFORM.                    " frm_error_write
