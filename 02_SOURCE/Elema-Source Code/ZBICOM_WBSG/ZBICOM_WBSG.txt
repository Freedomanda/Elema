REPORT ZBICOM_WBSG .
*
*---------------------------------------------------------------------*
*   declarations
*   (insert your declarations in this section)
*---------------------------------------------------------------------*
data:
ZSBI0007                       type ZSBI0007                      ,
it_data type standard table of ZSBI0007                      .

CONSTANTS:
C_SETCLASS LIKE SETHEADER-SETCLASS VALUE '0110',
C_SUBCLASS LIKE SETHEADER-SUBCLASS VALUE SPACE.

DATA:
IT_SETHD     LIKE TABLE OF SETHEADER,
IS_SETHD     LIKE SETHEADER,
IT_SETLEAF   LIKE TABLE OF SETLEAF,
IS_SETLEAF   LIKE SETLEAF,
IT_SETHDT    LIKE TABLE OF SETHEADERT,
IS_SETHDT    LIKE SETHEADERT.

DATA:
IT_HIER   LIKE TABLE OF SETHIER,
IS_HIER   LIKE SETHIER,
IS_HIER_NXT LIKE SETHIER,
IT_VALUES LIKE TABLE OF SETVALUES,
IS_VALUES LIKE SETVALUES.

DATA:
IS_ZSBI0007 LIKE ZSBI0007.

DATA:
L_SETID    LIKE SETHIER-SETID,
L_SETCLASS LIKE SETNODE-SETCLASS,
L_SUBCLASS LIKE SETNODE-SUBCLASS,
L_SETNAME  LIKE SETNODE-SETNAME,
L_LEVEL_NXT LIKE SETHIER-LEVEL,
L_INDEX_NXT LIKE SY-TABIX.

DATA:
L_NAME(20)     TYPE C,
L_NAME_TXT(23) TYPE C,
L_NUM(2)   TYPE N,
L_COUNT    TYPE I,
L_TABIX    LIKE SY-TABIX.

CONSTANTS:
C_ITEM(18)     TYPE C VALUE 'IS_ZSBI0007-WS_LEV',
C_ITEM_TXT(21) TYPE C VALUE 'IS_ZSBI0007-WS_LEVTXT',
C_MAXCOUNT     TYPE I VALUE 2.

field-symbols:
<ITEM>     type ANY,
<ITEM_TXT> TYPE ANY.

field-symbols: <struc> type ZSBI0007                      .

*-------------------------------------------------------------------*
*   selection screen statements
*-------------------------------------------------------------------*
*   (define your selection-screen here)
PARAMETERS P_LANGU LIKE SY-LANGU DEFAULT 'JA'.

* !! the following comment MUST NOT BE CHANGED !!
*<QUERY_HEAD>


*-------------------------------------------------------------------*
*   read data into IT_DATA
*-------------------------------------------------------------------*
*  (select your data here into internal table IT_DATA)

CLEAR: IT_SETHD[].
SELECT * INTO TABLE IT_SETHD
FROM SETHEADER
WHERE SETCLASS = C_SETCLASS
AND SUBCLASS = C_SUBCLASS.
SORT IT_SETHD BY SETNAME.

CLEAR: IT_SETLEAF[].
SELECT * INTO TABLE IT_SETLEAF
FROM SETLEAF
WHERE SETCLASS = C_SETCLASS
AND SUBCLASS = C_SUBCLASS.
SORT IT_SETLEAF BY SETNAME.

CLEAR: IT_SETHDT[].
SELECT * INTO TABLE IT_SETHDT
FROM SETHEADERT
WHERE SETCLASS = C_SETCLASS
AND SUBCLASS = C_SUBCLASS
AND LANGU    = P_LANGU.
SORT IT_SETHDT BY SETNAME.

CLEAR: IT_DATA[], IS_SETHD.
LOOP AT IT_SETHD INTO IS_SETHD.

CLEAR: L_SETID.
CONCATENATE IS_SETHD-SETCLASS IS_SETHD-SUBCLASS
IS_SETHD-SETNAME INTO L_SETID.

CLEAR: IT_HIER[], IT_VALUES[].
CALL FUNCTION 'G_SET_TREE_IMPORT'
EXPORTING
setid             = L_SETID
tables
set_hierarchy     = IT_HIER[]
set_values        = IT_VALUES[]
EXCEPTIONS
others            = 1.

CLEAR: IS_ZSBI0007.
IS_ZSBI0007-TOPNODE = IS_SETHD-SETNAME.

CLEAR: IS_HIER.
LOOP AT IT_HIER INTO IS_HIER.

L_TABIX = SY-TABIX.

L_NUM = IS_HIER-LEVEL + 1.
CONCATENATE C_ITEM L_NUM INTO L_NAME.
ASSIGN (L_NAME) TO <ITEM>.
CONCATENATE C_ITEM_TXT L_NUM INTO L_NAME_TXT.
ASSIGN (L_NAME_TXT) TO <ITEM_TXT>.
<ITEM> = IS_HIER-SHORTNAME.
CLEAR: IS_SETHDT.
READ TABLE IT_SETHDT INTO IS_SETHDT
WITH KEY SETNAME = IS_HIER-SHORTNAME
BINARY SEARCH.
<ITEM_TXT> = IS_SETHDT-DESCRIPT.

IF IS_HIER-VCOUNT > 0.
CLEAR: IS_SETLEAF.
L_NUM = L_NUM + 1.
LOOP AT IT_SETLEAF INTO IS_SETLEAF
WHERE SETNAME = IS_HIER-SHORTNAME.
CONCATENATE C_ITEM L_NUM INTO L_NAME.
ASSIGN (L_NAME) TO <ITEM>.
CONCATENATE C_ITEM_TXT L_NUM INTO L_NAME_TXT.
ASSIGN (L_NAME_TXT) TO <ITEM_TXT>.
<ITEM> = IS_SETLEAF-VALFROM.
IS_ZSBI0007-POSID = IS_SETLEAF-VALFROM.
APPEND IS_ZSBI0007 TO IT_DATA.
ENDLOOP.
ENDIF.

L_INDEX_NXT = L_TABIX + 1.
READ TABLE IT_HIER INTO IS_HIER_NXT INDEX L_INDEX_NXT.
IF SY-SUBRC = 0.
IF IS_HIER_NXT-LEVEL <= IS_HIER-LEVEL.
L_COUNT = IS_HIER_NXT-LEVEL + 1.
WHILE L_COUNT <= C_MAXCOUNT.
L_NUM = L_COUNT.
CONCATENATE C_ITEM L_NUM INTO L_NAME.
ASSIGN (L_NAME) TO <ITEM>.
CONCATENATE C_ITEM_TXT L_NUM INTO L_NAME_TXT.
ASSIGN (L_NAME_TXT) TO <ITEM_TXT>.
CLEAR: <ITEM>, <ITEM_TXT>.
L_COUNT = L_COUNT + 1.
ENDWHILE.
ENDIF.
ENDIF.

ENDLOOP.

ENDLOOP.

*------------------------------------------------------------*
*   output of the data
*   (this section can be left unchanged)
*------------------------------------------------------------*
loop at it_data assigning <struc>.
move-corresponding <struc> to ZSBI0007                      .
* !! the following comment MUST NOT BE CHANGED !!
*<QUERY_BODY>
endloop.
