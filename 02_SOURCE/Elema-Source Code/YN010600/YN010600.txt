*&---------------------------------------------------------------------*
*& Report YN010600                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*
*& 程序      ：支払明細通知書                                          *
*& 作者      ：服部                                                    *
*& 作成日    ：2006/07/07                                              *
*& コピー    ：2006/07/27                                              *
*& 管理番号  ：                                                        *
*&---------------------------------------------------------------------*
*& 処理概要&                                                           *
*& 照合済の売上データについて、支払明細通知書を作成する　　　　　　　　*
*&---------------------------------------------------------------------*
*& 更新履歴 ：2007/02/28 Vertion2 R.Tomoeda
*& 更新内容 ：Version2 (2007/02/28 R.Tomoeda)
*&          ：・大量データ対応
*&          ：・ヘッダテキスト追加
*&          ：・選択画面にコメント/照合番号/照合日/照合ユーザ追加
*& 更新履歴 ：2007/05/15 K.Matsuura
*& 変更内容 ：会計年度対応（キー追加）
*& 更新履歴 ：2008/01/30 S.Arii
*& 変更内容 ：STOP命令置き換え
*& 変更履歴 ： 2009/02/02
*& 変更内容 ： テンプレート改善ＰＪ (2009/01/13 OODUCHI)
*&          ：・画面定義をYN010400に合わせる
*&---------------------------------------------------------------------*
REPORT YN010600 MESSAGE-ID YN01.

*-- 構築定義 --
* データエレメント取得用
TYPES: BEGIN OF GTS_DATAELEMENT,
FLDNM    LIKE DD03L-FIELDNAME,              "項目名
ROLLNM   LIKE DD03L-ROLLNAME,               "データエレメント
END OF GTS_DATAELEMENT.
* 画面項目名称取得用
TYPES: BEGIN OF GTS_SCRINFO,
FLDNM    LIKE DD03L-FIELDNAME,              "項目名
CAPNM    LIKE DFIES-SCRTEXT_L,              "画面項目名称
END OF GTS_SCRINFO.
* 会社コードチェック用
TYPES: BEGIN OF GTS_BUKRS,
BUKRS    LIKE T001-BUKRS,                   "会社コード
END OF GTS_BUKRS.
* 自社データ格納用
TYPES: BEGIN OF GTS_JISYADATA,
BUKRS    LIKE YN120-BUKRS,                  "会社コード
VRFCTON  LIKE YN120-VRFCTON,                "得意先コード
YNGJAHR  LIKE YN120-GJAHR,                  "会計伝票会計年度
BELNR    LIKE YN120-BELNR,                  "会計伝票番号
BUZEI    LIKE YN120-BUZEI,                  "会計伝票明細番号
WAERS    LIKE YN120-WAERS,                  "通貨コード
VBELN    LIKE BSID-VBELN,                   "請求伝票
ZFBDT    LIKE BSID-ZFBDT,                   "支払基準日
ZBD1T    LIKE BSID-ZBD1T,                   "正味支払条件期間
CSTS     LIKE YN120-CSTS,                   "照合ステータス
KNITXAMT LIKE YN120-KNITXAMT,               "支払額(税抜金額)
KNETXAMT LIKE YN120-KNETXAMT,               "総額(税込金額)
*INSERT 20061031 HATTORI
SLPDOC   LIKE YN120-SLPDOC,                 "会計伝票番号
*INSERT END

END OF GTS_JISYADATA.
* 削除対象
TYPES: BEGIN OF GTS_DEL,
BUKRS    LIKE YN120-BUKRS,                  "会社コード
VRFCTON  LIKE YN120-VRFCTON,                "得意先コード
WAERS    LIKE YN120-WAERS,                  "通貨コード
YNGJAHR  LIKE YN120-GJAHR,                  "会計伝票会計年度
BELNR    LIKE YN120-BELNR,                  "会計伝票番号
BUZEI    LIKE YN120-BUZEI,                  "会計伝票明細番号
END OF GTS_DEL.
* エラー削除後
TYPES: BEGIN OF GTS_SHHRKJ,
BUKRS    LIKE YN120-BUKRS,                  "会社コード
VRFCTON  LIKE YN120-VRFCTON,                "得意先コード
YNGJAHR  LIKE YN120-GJAHR,                  "会計伝票会計年度
BELNR    LIKE YN120-BELNR,                  "会計伝票番号
BUZEI    LIKE YN120-BUZEI,                  "会計伝票明細番号
WAERS    LIKE YN120-WAERS,                  "通貨コード
VBELN    LIKE BSID-VBELN,                   "請求伝票
ZFBDT    LIKE BSID-ZFBDT,                   "支払基準日
ZBD1T    LIKE BSID-ZBD1T,                   "正味支払条件期間
CSTS     LIKE YN120-CSTS,                   "照合ステータス
KNITXAMT LIKE YN120-KNITXAMT,               "支払額
KNETXAMT LIKE YN120-KNETXAMT,               "総額
END OF GTS_SHHRKJ.
*明細データ取得用
TYPES: begin of st_meisai,
bukrs like rfradc-bukrs,
koart like rfradc-koart,
KONTO like rfradc-konto,
avsid like rfradc-avsid,
waers like avik-waers,
zaldt like avik-zaldt,
nebtr like avip-nebtr,
wrbtr like avip-wrbtr,
belnr like avip-belnr,
gjahr like avip-gjahr,
buzei like avip-buzei,
vbeln like avip-vbeln,
redat like avip-redat,
bstnk like avip-bstnk,
xref1 like avip-xref1,
xref2 like avip-xref2,
zuonr like avip-zuonr,
sgtxt like avip-sgtxt,
end of st_meisai.
*ヘッダデータ取得用
TYPES: begin of st_head,
bukrs like rfradc-bukrs,
koart like rfradc-koart,
konto like rfradc-konto,
avsid like rfradc-avsid,
waers like avik-waers,
rwbtr like avik-rwbtr,
end of st_head.
*メッセージ取得用
data:begin of st_msg,
msgid like sy-msgid,
msgno like sy-msgno,
msgty like sy-msgty,
msgv1 like sy-msgv1,
msgv2 like sy-msgv2,
msgv3 like sy-msgv3,
msgv4 like sy-msgv4,
end of st_msg.

*BDCデータ取得用
data:begin of st_bdc occurs 1.
include structure bdcdata.
data:end of st_bdc.
*&Ver2 対応 2007/02/28 >>>
TYPES: begin of st_avip,
BUKRS like AVIP-BUKRS,
KONTO like avip-KONTO,
BELNR like avip-BELNR,
*&会計年度対応 2007/05/08 >>>
GJAHR like avip-GJAHR,
BUZEI like avip-BUZEI,
*&会計年度対応 2007/05/08 <<<
end of st_avip.

TYPES: begin of st_bsid,
BUKRS    LIKE BSID-BUKRS,
GJAHR    LIKE BSID-GJAHR,
BELNR    LIKE BSID-BELNR,
BUZEI    LIKE BSID-BUZEI,
VBELN    LIKE BSID-VBELN,                   "請求伝票
ZFBDT    LIKE BSID-ZFBDT,                   "支払基準日
ZBD1T    LIKE BSID-ZBD1T,                   "正味支払条件期間
end of st_bsid.
*&Ver2 対応 2007/02/28 <<<
*-- テーブル定義 --
TABLES: YN120,                                       "自社データ(売上)
BDCMSGCOLL.                         "SAPシステムのメッセージ収集

TABLES:AVIK,                                       "
AVIP.                                       "AVIP

*-- 内部テーブル定義 --
DATA: GDT_DATAELEMENT TYPE STANDARD TABLE OF GTS_DATAELEMENT,
"データエレメント取得用
GDT_SCRINFO     TYPE STANDARD TABLE OF GTS_SCRINFO,
"画面項目名称取得用
GDT_JISYADATA   TYPE STANDARD TABLE OF GTS_JISYADATA,
"自社データ格納用
GDT_BUKRS       TYPE STANDARD TABLE OF GTS_BUKRS,
"会社コードチェック用
GDT_SHHRKJ      TYPE STANDARD TABLE OF GTS_SHHRKJ,
"エラー削除後
GDT_SHUKEI      TYPE STANDARD TABLE OF GTS_SHHRKJ
WITH HEADER LINE,
"集計後
GDT_DEL          TYPE STANDARD TABLE OF GTS_DEL,
"削除対象
GDT_BDCDATA     LIKE STANDARD TABLE OF BDCDATA,
"バッチインプット処理用
GDT_MSG         LIKE STANDARD TABLE OF BDCMSGCOLL.
"結果MSG格納用

data : i_head       TYPE STANDARD TABLE OF st_head    with header line,
i_meisai     TYPE STANDARD TABLE OF st_meisai  with header line,
i_bdc        like table of st_bdc     with header line,
i_bdcmsgcoll like table of bdcmsgcoll with header line .
*&Ver2 対応 2007/02/28 >>>
DATA: LW_AVIP type STANDARD TABLE OF ST_AVIP
with header line. "存在チェック用work
DATA: LW_BSID type STANDARD TABLE OF ST_BSID
with header line. "BSID取得用work
*&Ver2 対応 2007/02/28 <<<
*-- 作業領域定義 --
DATA: GDS_DATAELEMENT TYPE GTS_DATAELEMENT,      "データエレメント取得用
GDS_SCRINFO     TYPE GTS_SCRINFO,          "画面項目名称取得用
GDS_JISYADATA   TYPE GTS_JISYADATA,        "自社データ格納用
GDS_BUKRS       TYPE GTS_BUKRS,            "会社コードチェック用
GDS_SHHRKJ      TYPE GTS_SHHRKJ,           "エラー削除後
GDS_DEL         TYPE GTS_DEL,              "削除対象
GDS_BDCDATA     LIKE BDCDATA,              "バッチインプット処理用
GDS_MSG         LIKE BDCMSGCOLL.           "結果MSG格納用

************************************************************************
* ワーク定義
data:ct_rec      type p,
W_FAEDE     LIKE FAEDE,       "送信用
W_FAEDE2    LIKE FAEDE,       "受信用
W_ZFBDT     LIKE avip-xref1,  "支払基準日フォーマット用
W_ZALDT     LIKE avip-xref2,  "支払日フォーマット用
w_shiharai  like YN120-zfbdt, "支払日取得用
w_avik      like avik,
w_rfradc    like rfradc,
w_e_rfradc  like rfradc,
w_message   like message,
w_kin_n(16) type n,
fg_err(1)   type c,
fg_last(1)  type c,
c_mode(1)   type c value 'N'.

************************************************************************

*-- 変数定義 --
DATA: GDF_JISYA_TBL(5)        TYPE C VALUE 'YN120', "自社テーブル
GDF_NJSI_TBL(4)         TYPE C,        "会計管理: 二次索引テーブル
GDF_JISYA_LINE          LIKE SY-TABIX,         "自社情報件数
GDF_SHHRKJ_LINE       LIKE SY-TABIX.         "エラー削除後件数

*-- 20090202 INS STA
TYPES: TYP_T_DD03P TYPE STANDARD TABLE OF DD03P.

* エレメント内部テーブル
DATA: T_DD03P_YN110 TYPE TYP_T_DD03P,
T_DD03P_YN120 TYPE TYP_T_DD03P,
T_DD03P_YN210 TYPE TYP_T_DD03P,
T_DD03P_YN220 TYPE TYP_T_DD03P.

* 売上／仕入区分
DATA: P_MODE TYPE C VALUE '1'.
*-- 20090202 INS END


*-- 定数定義 --
CONSTANTS: GCF_C_X(1)         TYPE C VALUE 'X',      "'X'
GCF_C_N(1)         TYPE C VALUE 'N',      "'N'
GCF_C_Y(1)         TYPE C VALUE 'Y',      "'Y'
GCF_C_SEVEN(1)     TYPE C VALUE '7',      "'7'
GCF_C_EIGHT(1)     TYPE C VALUE '8',      "'8'
GCF_I_ZERO         TYPE I VALUE '0',      "0
GCF_I_ONE          TYPE I VALUE '1',      "1
GCF_I_TNY_SEVEN    TYPE I VALUE '27',     "27
GCF_MSGNO(3)       TYPE C VALUE '300',           "'300'
GCF_TBL_DD03L(5)   TYPE C VALUE 'DD03L',         "'DD03L'
GCF_JISYA_TBL_U(5) TYPE C VALUE 'YN120',  "自社データ(売上)
GCF_JISYA_TBL_S(5) TYPE C VALUE 'YN220',  "自社データ(仕入)
GCF_NJSI_TBL_U(4)  TYPE C VALUE 'BSID',
"会計管理: 得意先の二次索引
GCF_NJSI_TBL_S(4)  TYPE C VALUE 'BSIK',
"会計管理: 仕入先の二次索引
GCF_SAPMF05L(8)    TYPE C VALUE 'SAPMF05L',
"'SAPMF05L'
GCF_0102(4)        TYPE C VALUE '0102',          "'0102'
GCF_RF05LBELNR(11) TYPE C VALUE 'RF05L-BELNR',
"'RF05L-BELNR'
GCF_RF05LBUKRS(11) TYPE C VALUE 'RF05L-BUKRS',
"'RF05L-BUKRS'
GCF_RF05LGJAHR(11) TYPE C VALUE 'RF05L-GJAHR',
"'RF05L-GJAHR'
GCF_RF05LBUZEI(11) TYPE C VALUE 'RF05L-BUZEI',
"'RF05L-BUZEI'
GCF_RF05LXKKRE(11) TYPE C VALUE 'RF05L-XKKRE',
"'RF05L-XKKRE'
GCF_BDCOKCODE(10)  TYPE C VALUE 'BDC_OKCODE',
"'BDC_OKCODE'
GCF_00(3)          TYPE C VALUE '/00',           "'/00'
GCF_0301(4)        TYPE C VALUE '0301',          "'0301'
GCF_0302(4)        TYPE C VALUE '0302',          "'0302'
GCF_BSEGZLSPR(10)  TYPE C VALUE 'BSEG-ZLSPR',
"'BSEG-ZLSPR'
GCF_AE(3)          TYPE C VALUE '=AE',    "'=AE'
GCF_VRFCT_LOW      LIKE DYNPREAD-FIELDNAME
VALUE 'P_VRFCT-LOW',    "'P_VRFCT-LOW'
GCF_VRFCT_HIGH     LIKE DYNPREAD-FIELDNAME
VALUE 'P_VRFCT-HIGH',   "'P_VRFCT-HIGH'
GCF_VRFCTON(7)     TYPE C VALUE 'VRFCTON'."'VRFCTON'

* パラメータ定義、選択画面の項目名称の設定、照合対象データの取得
INCLUDE YN01_YN010600_0000.

*-- 20090202 INS STA 画面項目定義方法をYN010400と合わせる
*&---------------------------------------------------------------------*
*&   Event LOAD-Of-PROGRAM
*&---------------------------------------------------------------------*
LOAD-Of-PROGRAM.

* 出力項目定義取得
PERFORM GET_TABLE_FIELDS.
*-- 20090202 INS END 画面項目定義方法をYN010400と合わせる

*&---------------------------------------------------------------------*
*& EVENT INITIALIZATION                                                *
*&---------------------------------------------------------------------*
INITIALIZATION.
*-- 20090202 UPD STA 画面項目定義方法をYN010400と合わせる
* 選択画面の項目名称の初期設定
*  PERFORM CAPTION_SET.
PERFORM SET_DYNPRO_TEXT.
*-- 20090202 UPD END 画面項目定義方法をYN010400と合わせる
* 初期処理
PERFORM INIT.

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VRFCT-LOW.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING GCF_VRFCT_LOW.

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VRFCT-HIGH.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING GCF_VRFCT_HIGH.

*&---------------------------------------------------------------------*
*& EVENT AT SELECTION-SCREEN                                           *
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN.
CASE SY-UCOMM.
WHEN 'RADIO'.
*-- 20090202 UPD STA 画面項目定義方法をYN010400と合わせる
* 選択画面の項目名称の再設定
*      PERFORM CAPTION_SET.
*-- 20090202 UPD END 画面項目定義方法をYN010400と合わせる
WHEN OTHERS.
* 入力チェック
PERFORM CHECK.
ENDCASE.

*&---------------------------------------------------------------------*
*& EVENT AT START-OF-SELECTION                                         *
*&---------------------------------------------------------------------*
START-OF-SELECTION.

PERFORM SYOGO_DATA_GET.     "照合対象データの取得
PERFORM DEL_ERR.            "照合エラーの除外
PERFORM SUM_GDT_SHHRKJ.     "自社データの金額集計
PERFORM EDIT_REC.           "明細内部テーブルの作成
PERFORM EDIT_HEAD.          "ヘッダ内部テーブルの作成
PERFORM CALL_BDC.           "バッチモジュールコール

*&---------------------------------------------------------------------*
*& EVENT TOP-OF-PAGE                                                   *
*&---------------------------------------------------------------------*
TOP-OF-PAGE.
* タイトルの出力
PERFORM TITLE_PRINT.

*&---------------------------------------------------------------------*
*& EVENT END-OF-PAGE                                                   *
*&---------------------------------------------------------------------*
END-OF-PAGE.
* ページ数の出力
PERFORM PAGE_CNT_PRINT.

*&---------------------------------------------------------------------*
*&      Form  INIT
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM INIT.
* 初期化
CLEAR: GDS_DATAELEMENT,
GDS_SCRINFO,
GDS_JISYADATA,
GDS_BUKRS,
GDS_SHHRKJ,
GDS_BDCDATA,
GDS_MSG.

REFRESH: GDT_DATAELEMENT,
GDT_SCRINFO,
GDT_JISYADATA,
GDT_BUKRS,
GDT_SHHRKJ,
GDT_BDCDATA,
GDT_MSG.

GDF_JISYA_LINE          = GCF_I_ZERO.

ENDFORM.                    " INIT

*&---------------------------------------------------------------------*
*&      Form  CHECK
*&---------------------------------------------------------------------*
*       入力チェック
*----------------------------------------------------------------------*
FORM CHECK.
* 会社コードのチェック
IF P_BUKRS-LOW <> SPACE.
SELECT COUNT(*)                                  "会社コード
FROM T001
WHERE BUKRS = P_BUKRS-LOW.
IF SY-SUBRC <> 0.
MESSAGE E750 WITH P_BUKRS-LOW.
ENDIF.
ENDIF.
SELECT BUKRS                                       "会社コード
FROM T001
INTO TABLE GDT_BUKRS
WHERE BUKRS IN P_BUKRS.
IF SY-SUBRC <> 0.
MESSAGE E762.
ENDIF.
* 権限チェック
LOOP AT GDT_BUKRS
INTO GDS_BUKRS.
AUTHORITY-CHECK OBJECT 'F_KNA1_BUK'
ID 'BUKRS' FIELD GDS_BUKRS-BUKRS
ID 'ACTVT' DUMMY.
IF SY-SUBRC <> 0.
MESSAGE E751 WITH GDS_BUKRS-BUKRS.
ENDIF.
ENDLOOP.
DATA: L_EVAL TYPE STRING.
* 取引先コード存在チェック
PERFORM CHECK_VRFCTON_RANGE TABLES   P_VRFCT
CHANGING L_EVAL.
IF NOT L_EVAL IS INITIAL.
MESSAGE E752 WITH L_EVAL.
ENDIF.
* 利益センタのチェック
IF P_PRCTR-LOW <> SPACE.
SELECT COUNT(*)                                  "利益センタ
FROM CEPC AS A
INNER JOIN TKA02 AS B
ON A~KOKRS = B~KOKRS
WHERE A~PRCTR = P_PRCTR-LOW
AND B~BUKRS IN P_BUKRS.
IF SY-SUBRC <> 0.
MESSAGE E761 WITH P_PRCTR-LOW.
ENDIF.
ENDIF.
ENDFORM.                    " CHECK

*&---------------------------------------------------------------------
*&      Form  DEL_ERR
*&---------------------------------------------------------------------
*       エラーレコード除外処理
*----------------------------------------------------------------------
FORM DEL_ERR.
* ソート
SORT GDT_JISYADATA BY BUKRS
VRFCTON
YNGJAHR
BELNR
BUZEI.

*削除対象内部テーブルの作成
LOOP AT GDT_JISYADATA INTO GDS_JISYADATA.
IF GDS_JISYADATA-CSTS <> GCF_C_SEVEN
AND GDS_JISYADATA-CSTS <> GCF_C_EIGHT.

GDS_DEL-BUKRS   = GDS_JISYADATA-BUKRS.
GDS_DEL-VRFCTON = GDS_JISYADATA-VRFCTON.
GDS_DEL-YNGJAHR   = GDS_JISYADATA-YNGJAHR.
GDS_DEL-BELNR   = GDS_JISYADATA-BELNR.
GDS_DEL-BUZEI   = GDS_JISYADATA-BUZEI.

APPEND GDS_DEL TO GDT_DEL.

ENDIF.
ENDLOOP.

* エラー削除後内部テーブルの作成
*&Ver2 対応 2007/02/28 >>>
REFRESH:LW_AVIP.CLEAR:LW_AVIP.
*&会計年度対応 2007/05/08 >>>
* SELECT BUKRS KONTO BELNR FROM AVIP INTO table LW_AVIP
SELECT BUKRS KONTO BELNR GJAHR BUZEI FROM AVIP INTO table LW_AVIP
*&会計年度対応 2007/05/08 <<<
WHERE KONTO IN P_VRFCT.
*&Ver2 対応 2007/02/28 <<<
LOOP AT GDT_JISYADATA INTO GDS_JISYADATA.

GDS_SHHRKJ-BUKRS   = GDS_JISYADATA-BUKRS.
GDS_SHHRKJ-VRFCTON = GDS_JISYADATA-VRFCTON.
GDS_SHHRKJ-YNGJAHR   = GDS_JISYADATA-YNGJAHR.
GDS_SHHRKJ-BELNR   = GDS_JISYADATA-BELNR.
GDS_SHHRKJ-BUZEI   = GDS_JISYADATA-BUZEI.
GDS_SHHRKJ-WAERS   = GDS_JISYADATA-WAERS.
GDS_SHHRKJ-VBELN   = GDS_JISYADATA-VBELN.
GDS_SHHRKJ-ZFBDT   = GDS_JISYADATA-ZFBDT.
GDS_SHHRKJ-ZBD1T   = GDS_JISYADATA-ZBD1T.
GDS_SHHRKJ-CSTS    = GDS_JISYADATA-CSTS.
GDS_SHHRKJ-KNITXAMT = GDS_JISYADATA-KNITXAMT.
GDS_SHHRKJ-KNETXAMT = GDS_JISYADATA-KNETXAMT.

*(削除対象内部テーブルを読み、ヒットしなければアペンドする)
READ TABLE GDT_DEL INTO GDS_DEL
WITH KEY BUKRS   = GDS_JISYADATA-BUKRS
VRFCTON = GDS_JISYADATA-VRFCTON
YNGJAHR   = GDS_JISYADATA-YNGJAHR
BELNR   = GDS_JISYADATA-BELNR
BUZEI   = GDS_JISYADATA-BUZEI.
IF SY-SUBRC = 4.
*&Ver2 対応 2007/02/28 >>>
*既に支払明細通知書が出力されている明細は除外する
READ TABLE LW_AVIP WITH KEY
BUKRS  = GDS_JISYADATA-BUKRS
KONTO  = GDS_JISYADATA-VRFCTON
*&会計年度対応 2007/05/08 >>>
*                           BELNR  = GDS_JISYADATA-BELNR.
BELNR  = GDS_JISYADATA-BELNR
GJAHR  = GDS_JISYADATA-YNGJAHR
BUZEI  = GDS_JISYADATA-BUZEI.
*&会計年度対応 2007/05/08 <<<
IF SY-SUBRC <> 0.
APPEND GDS_SHHRKJ TO GDT_SHHRKJ.
ENDIF.
*&Ver2 対応 2007/02/28 <<<
ENDIF.
ENDLOOP.

DESCRIBE TABLE GDT_SHHRKJ LINES GDF_SHHRKJ_LINE.
IF GDF_SHHRKJ_LINE = 0.
MESSAGE I762 .
*20080122 STOP命令置き換え >>>
LEAVE LIST-PROCESSING.
*    STOP.
*20080122 <<<
ENDIF.
*&Ver2 対応 2007/02/28 >>>
FREE LW_AVIP.
*&Ver2 対応 2007/02/28 <<<
ENDFORM.                    "DEL_ERR

*&---------------------------------------------------------------------*
*&      Form TITLE_PRINT
*&---------------------------------------------------------------------*
*       タイトルの出力
*----------------------------------------------------------------------*
FORM TITLE_PRINT.
*  WRITE:/2 '次の支払明細通知書が作成されました'.
*  WRITE:/.
WRITE:/4 TEXT-S01. "'会社コード'.
WRITE:19 TEXT-S02. "'得意先コード'.
WRITE:34 TEXT-S04. "'通貨コード'.
WRITE:56 TEXT-S05. "'支払額'.
WRITE:65 TEXT-S06. "'支払明細通知書番号'.
WRITE:86 TEXT-S09. "'ヘッダテキスト'.
ULINE.

ENDFORM.                    " TITLE_PRINT

*&---------------------------------------------------------------------*
*&      Form PAGE_CNT_PRINT
*&---------------------------------------------------------------------*
*       ページ数の出力
*----------------------------------------------------------------------*
FORM PAGE_CNT_PRINT.
WRITE: /102 TEXT-S16,                              "'ページ:'
110 SY-PAGNO.                              "ページ数
ENDFORM.                    " PAGE_CNT_PRINT

*&---------------------------------------------------------------------*
*&      Form RUNTIME_VRFCT_F4HELP_CHANGE
*&---------------------------------------------------------------------*
*       ランタイム環境での得意先コード/仕入先コードＦ４ヘルプの変更
*----------------------------------------------------------------------*
FORM RUNTIME_VRFCT_F4HELP_CHANGE USING LDF_FLD_NM.
* ローカル変数
DATA: LDF_TABNAME   LIKE DFIES-TABNAME,
LDF_FIELDNAME LIKE DFIES-FIELDNAME,
LDT_RTN       LIKE STANDARD TABLE OF DDSHRETVAL,
LDS_RTN       LIKE DDSHRETVAL,
LDF_VALUE     LIKE DYNPREAD-FIELDVALUE,
LDT_DYFIELDS  LIKE STANDARD TABLE OF DYNPREAD,
LDS_DYFIELDS  LIKE DYNPREAD.
DATA: L_DFNAME TYPE HELP_INFO-DYNPROFLD,
L_REPID LIKE SY-REPID,
L_DYNNR LIKE SY-DYNNR.

LDF_TABNAME = GDF_JISYA_TBL.
LDF_FIELDNAME = GCF_VRFCTON.
L_REPID = SY-REPID.
L_DYNNR = SY-DYNNR.
L_DFNAME = LDF_FLD_NM.

CALL FUNCTION 'F4IF_FIELD_VALUE_REQUEST'
EXPORTING
TABNAME           = LDF_TABNAME
FIELDNAME         = LDF_FIELDNAME
DYNPPROG          = L_REPID
DYNPNR            = L_DYNNR
DYNPROFIELD       = L_DFNAME
TABLES
RETURN_TAB        = LDT_RTN
EXCEPTIONS
FIELD_NOT_FOUND   = 1
NO_HELP_FOR_FIELD = 2
INCONSISTENT_HELP = 3
NO_VALUES_FOUND   = 4
OTHERS            = 5.

IF SY-SUBRC = 0.
READ TABLE LDT_RTN
INTO LDS_RTN
INDEX GCF_I_ONE.
LDF_VALUE = LDS_RTN-FIELDVAL.
ENDIF.

ENDFORM.                    " RUNTIME_VRFCT_F4HELP_CHANGE

*&---------------------------------------------------------------------*
*&      Form  SUM_GDT_SHHRKJ
*&---------------------------------------------------------------------*
*       エラー削除後内部テーブルの金額集計
*----------------------------------------------------------------------*
FORM SUM_GDT_SHHRKJ.

SORT GDT_SHHRKJ BY BUKRS
VRFCTON
YNGJAHR
BELNR
BUZEI.

LOOP AT GDT_SHHRKJ INTO GDS_SHHRKJ.
AT END OF ZBD1T.

CLEAR GDT_SHUKEI.
GDT_SHUKEI-BUKRS    =  GDS_SHHRKJ-BUKRS.      "会社コード
GDT_SHUKEI-VRFCTON  =  GDS_SHHRKJ-VRFCTON.    "得意先コード
GDT_SHUKEI-YNGJAHR  =  GDS_SHHRKJ-YNGJAHR.    "会計伝票会計年度
GDT_SHUKEI-BELNR    =  GDS_SHHRKJ-BELNR.      "会計伝票番号
GDT_SHUKEI-BUZEI    =  GDS_SHHRKJ-BUZEI.      "会計伝票明細番号
GDT_SHUKEI-WAERS    =  GDS_SHHRKJ-WAERS.      "通貨コード
GDT_SHUKEI-VBELN    =  GDS_SHHRKJ-VBELN.      "請求伝票
GDT_SHUKEI-ZFBDT    =  GDS_SHHRKJ-ZFBDT.      "支払基準日
GDT_SHUKEI-ZBD1T    =  GDS_SHHRKJ-ZBD1T.      "支払条件期間

SUM.
GDT_SHUKEI-KNITXAMT =  GDS_SHHRKJ-KNITXAMT.   "支払額
GDT_SHUKEI-KNETXAMT =  GDS_SHHRKJ-KNETXAMT.   "総額

APPEND GDT_SHUKEI.

ENDAT.
ENDLOOP.

ENDFORM.                    "SUM_GDT_SHHRKJ
*&---------------------------------------------------------------------*
*&      Form  EDIT_REC
*&---------------------------------------------------------------------*
*       明細内部テーブルの作成
*----------------------------------------------------------------------*
FORM EDIT_REC .

loop at GDT_SHUKEI.
clear :i_meisai.

*支払日の取得
clear: w_shiharai,W_FAEDE,W_FAEDE2,W_ZFBDT,W_ZALDT.

W_FAEDE-KOART        = 'D'.
W_FAEDE-ZFBDT        = GDT_SHUKEI-ZFBDT.
W_FAEDE-ZBD1T        = GDT_SHUKEI-ZBD1T.

call function 'DETERMINE_DUE_DATE'
EXPORTING
I_FAEDE = W_FAEDE
IMPORTING
E_FAEDE = W_FAEDE2.
*      exceptions

*支払基準日フォーマット
CONCATENATE GDT_SHUKEI-ZFBDT+0(4) '/' GDT_SHUKEI-ZFBDT+4(2) '/'
GDT_SHUKEI-ZFBDT+6(2) INTO W_ZFBDT.
*支払日フォーマット
CONCATENATE W_FAEDE2-SK1DT+0(4) '/' W_FAEDE2-SK1DT+4(2) '/'
W_FAEDE2-SK1DT+6(2) INTO W_ZALDT.

*明細の格納
I_MEISAI-BUKRS = GDT_SHUKEI-BUKRS.
I_MEISAI-KOART = 'D'.
I_MEISAI-KONTO = GDT_SHUKEI-VRFCTON.
I_MEISAI-AVSID = '04'.
I_MEISAI-WAERS = GDT_SHUKEI-WAERS.
I_MEISAI-ZALDT = W_FAEDE2-SK1DT.
I_MEISAI-NEBTR = GDT_SHUKEI-KNETXAMT. "税込金額
I_MEISAI-WRBTR = GDT_SHUKEI-KNETXAMT.
I_MEISAI-BELNR = GDT_SHUKEI-BELNR.
I_MEISAI-GJAHR = GDT_SHUKEI-YNGJAHR.
I_MEISAI-BUZEI = GDT_SHUKEI-BUZEI.
I_MEISAI-VBELN = GDT_SHUKEI-VBELN.
I_MEISAI-REDAT = GDT_SHUKEI-ZFBDT. "支払基準日を格納
I_MEISAI-XREF1 = W_ZFBDT.
I_MEISAI-XREF2 = W_ZALDT.
CONCATENATE GDT_SHUKEI-VRFCTON '/' GDT_SHUKEI-ZFBDT
INTO I_MEISAI-SGTXT.

APPEND I_MEISAI.
ENDLOOP.
ENDFORM.                    " EDIT_REC

*&---------------------------------------------------------------------*
*&      Form  EDIT_HEAD
*&---------------------------------------------------------------------*
*       ヘッダ内部テーブルの作成
*----------------------------------------------------------------------*
form edit_head.
sort i_meisai by bukrs koart konto avsid waers. "zaldt.
loop at i_meisai.
at end of waers. "zaldt.
clear i_head.
sum.
move-corresponding i_meisai to i_head.
i_head-rwbtr = i_meisai-nebtr.
append i_head.
endat.
endloop.
endform.                    " EDIT_HEAD
*&---------------------------------------------------------------------*
*&      Form  CALL_BDC
*&---------------------------------------------------------------------*
*       バッチモジュールコール
*----------------------------------------------------------------------*
form call_bdc.
sort i_head by bukrs koart konto avsid waers. "zaldt.
sort i_meisai by bukrs koart konto avsid waers. "zaldt.
loop at i_head.
clear:w_e_rfradc,w_message,fg_last.
refresh: i_bdc,i_bdcmsgcoll.
perform set_bdc_head.          "BDCのヘッダ部セット
loop at i_meisai where bukrs = i_head-bukrs
and koart = i_head-koart
and konto = i_head-konto
and avsid = i_head-avsid
and waers = i_head-waers.
perform set_bdc_rec.        "BDCの明細部セット
at end of waers. "zaldt.
fg_last = 'X'.
endat.
perform set_bdc_rec2.       "繰り返しか、終了か
endloop.

call transaction 'FBE1' using i_bdc mode c_mode  update 'S'
messages into i_bdcmsgcoll.
call function 'RZL_SLEEP'     "1秒待つ(自動採番のため）
exporting
seconds              = 1
exceptions
argument_error       = 1
others               = 2.

loop at i_bdcmsgcoll.
clear w_message.
st_msg-msgid         = i_bdcmsgcoll-msgid.
st_msg-msgno         = i_bdcmsgcoll-msgnr.
st_msg-msgty         = i_bdcmsgcoll-msgtyp.
st_msg-msgv1         = i_bdcmsgcoll-msgv1(50).
st_msg-msgv2         = i_bdcmsgcoll-msgv2(50).
st_msg-msgv3         = i_bdcmsgcoll-msgv3(50).
st_msg-msgv4         = i_bdcmsgcoll-msgv4(50).
call function 'WRITE_MESSAGE'
EXPORTING
msgid = st_msg-msgid
msgno = st_msg-msgno
msgty = st_msg-msgty
msgv1 = st_msg-msgv1
msgv2 = st_msg-msgv2
msgv3 = st_msg-msgv3
msgv4 = st_msg-msgv4
IMPORTING
messg = w_message.


endloop.
WRITE:/4 I_HEAD-BUKRS.
WRITE:19 I_HEAD-KONTO.
WRITE:34 I_HEAD-WAERS.
WRITE:45 I_HEAD-RWBTR CURRENCY i_head-waers.
WRITE:65 st_msg-msgv1.
WRITE:86 p_avtxt.

endloop.
message S765.
endform.                    " CALL_BDC

*&---------------------------------------------------------------------*
*&      Form  SET_BDC_HEAD
*&---------------------------------------------------------------------*
*       BDCのヘッダ部セット
*----------------------------------------------------------------------*
form set_bdc_head.

perform dynpro_set using 'SAPMF06A'  '0100'.       "第１画面
perform data_set using 'RF06A-BUKRS' i_head-bukrs. "会社コード
perform data_set using 'RF06A-KOART' i_head-koart. "勘定タイプ
perform data_set using 'RF06A-KONTO' i_head-konto. "勘定コード
perform data_set using 'BDC_OKCODE'  '/00'.        "ENTER

perform dynpro_set using 'SAPLFRAD'  '0200'.       "第２画面
write i_head-rwbtr to w_kin_n currency i_head-waers.
perform data_set using 'AVIK-RWBTR' w_kin_n.       "支払額
perform data_set using 'AVIK-WAERS' i_head-waers.  "通貨コード
*&Ver2 対応 2007/02/28 >>>
perform data_set using 'AVIK-AVTXT' p_avtxt.       "ヘッダテキスト
*&Ver2 対応 2007/02/28 <<<
perform data_set using 'BDC_OKCODE'  '=NEWP'.      "ENTER

endform.                    " SET_BDC_HEAD
*&---------------------------------------------------------------------*
*&      Form  DYNPRO_SET
*&---------------------------------------------------------------------*
*       ディンプロセット
*----------------------------------------------------------------------*
*      -->P_ID     画面
*      -->P_DYN    番号
*----------------------------------------------------------------------*
form dynpro_set using  p_id  p_dyn .
clear i_bdc.
i_bdc-program = p_id.
i_bdc-dynpro  = p_dyn.
i_bdc-dynbegin   = 'X'.
append i_bdc.

endform.                    " DYNPRO_SET
*&---------------------------------------------------------------------*
*&      Form  DATA_SET
*&---------------------------------------------------------------------*
*  項目名と値をセット
*----------------------------------------------------------------------*
*      -->P_FNAM  セット先
*      -->P_FVAL  セット内容
*----------------------------------------------------------------------*
form data_set using p_fnam p_fval.
clear i_bdc.
i_bdc-fnam = p_fnam.
i_bdc-fval = p_fval.
append  i_bdc.

endform.                    " DATA_SET
*&---------------------------------------------------------------------*
*&      Form  SET_BDC_REC
*&---------------------------------------------------------------------*
*       BDC明細部セット
*----------------------------------------------------------------------*
form set_bdc_rec.

perform dynpro_set using 'SAPLFRAD'  '0219'.         "第１画面
write i_meisai-nebtr to w_kin_n currency i_meisai-waers.
perform data_set using 'AVIP-NEBTR' w_kin_n.         "支払額
perform data_set using 'AVIP-BELNR' i_meisai-belnr.  "伝票番号
perform data_set using 'AVIP-GJAHR' i_meisai-gjahr.  "会計年度
perform data_set using 'AVIP-BUZEI' i_meisai-buzei.  "明細番号
perform data_set using 'AVIP-VBELN' i_meisai-vbeln.  "請求番号
perform data_set using 'AVIP-REDAT' i_meisai-redat.  "請求日付
perform data_set using 'AVIP-XREF1' i_meisai-xref1.       "参照キー1
perform data_set using 'AVIP-BSTNK' i_meisai-bstnk.  "得意先発注番号
perform data_set using 'AVIP-XREF2' i_meisai-xref2.       "参照キー2
perform data_set using 'AVIP-ZUONR' i_meisai-zuonr.  "ソートキー
perform data_set using 'AVIP-SGTXT' i_meisai-sgtxt.  "明細テキスト
perform data_set using 'BDC_OKCODE' '=CHBE'.         "総額

perform dynpro_set using 'SAPLFRAD'  '0219'.         "第１画面
perform data_set using 'BDC_OKCODE'  '/00'.          "ENTER

endform.                    " SET_BDC_REC
*&---------------------------------------------------------------------*
*&      Form  SET_BDC_REC2
*&---------------------------------------------------------------------*
*       明細部入力
*----------------------------------------------------------------------*
form set_bdc_rec2.
if fg_last = 'X'.         "最終明細
perform dynpro_set using 'SAPLFRAD'  '0219'.         "第１画面
perform data_set using 'BDC_OKCODE'  '=UPDA'.        "保存
else.                     "次明細有り
perform dynpro_set using 'SAPLFRAD'  '0219'.         "第１画面
perform data_set using 'BDC_OKCODE'  '=NEWP'.      "ENTER
endif.
endform.                    " SET_BDC_REC2
*&---------------------------------------------------------------------*
*&      Form  CHECK_VRFCTON_RANGE
*&---------------------------------------------------------------------*
*       取引先コード存在チェック
*----------------------------------------------------------------------*
*      -->PT_VRFCTON  取引先コード
*      <--P_EVAL  text
*----------------------------------------------------------------------*
FORM CHECK_VRFCTON_RANGE  TABLES   PT_VRFCTON
CHANGING P_EVAL.

FIELD-SYMBOLS: <FS1>, <FS2>, <FS3>.

CLEAR: P_EVAL.
LOOP AT PT_VRFCTON.
ASSIGN COMPONENT 1 OF STRUCTURE PT_VRFCTON TO <FS1>.
ASSIGN COMPONENT 2 OF STRUCTURE PT_VRFCTON TO <FS2>.
CHECK <FS1> = 'I' AND <FS2> = 'EQ'.
ASSIGN COMPONENT 3 OF STRUCTURE PT_VRFCTON TO <FS3>.
SELECT COUNT(*) FROM KNB1
WHERE BUKRS IN P_BUKRS AND KUNNR = <FS3>.
IF SY-SUBRC <> 0.
P_EVAL = <FS3>.
EXIT.
ENDIF.
ENDLOOP.

ENDFORM.                    " CHECK_VRFCTON_RANGE
*&---------------------------------------------------------------------*
*&      Form  SET_DYNPRO_TEXT
*&---------------------------------------------------------------------*
*       選択画面テキスト動的に設定
*----------------------------------------------------------------------*
FORM SET_DYNPRO_TEXT .

DATA: L_HELP_ID(20) TYPE C,
L_SNAME TYPE STRING,
L_FNAME TYPE STRING,
L_SCR_NAME TYPE STRING,
L_TEXT TYPE STRING.

FIELD-SYMBOLS: <FS> TYPE ANY.

FIELD-SYMBOLS: <FS_T_DD03P> TYPE TYP_T_DD03P.
DATA: L_H_DD03P LIKE LINE OF <FS_T_DD03P>.

CHECK SY-DYNNR = '1000'.
LOOP AT SCREEN.
IF SCREEN-GROUP1 = '020' OR SCREEN-GROUP1 = '010'.
CASE SCREEN-GROUP3.
WHEN 'TXT'.
L_SCR_NAME = SCREEN-NAME.
WHEN 'LOW'.
ASSIGN (SCREEN-NAME) TO <FS>.
DESCRIBE FIELD <FS> HELP-ID L_HELP_ID.
SPLIT L_HELP_ID AT '-' INTO L_SNAME L_FNAME.
CONCATENATE 'T_DD03P_YN' P_MODE SCREEN-GROUP1+1(2)
INTO L_SNAME.
ASSIGN (L_SNAME) TO <FS_T_DD03P>.
READ TABLE <FS_T_DD03P> INTO L_H_DD03P
WITH KEY FIELDNAME = L_FNAME.
IF SY-SUBRC = 0.
ASSIGN (L_SCR_NAME) TO <FS>.
<FS> = L_H_DD03P-DDTEXT.
ELSE.
MESSAGE E764.
ENDIF.
ENDCASE.
ENDIF.
ENDLOOP.

ENDFORM.                    " SET_DYNPRO_TEXT
*&---------------------------------------------------------------------*
*&      Form  GET_TABLE_FIELDS
*&---------------------------------------------------------------------*
*       項目テキスト取得
*----------------------------------------------------------------------*
FORM GET_TABLE_FIELDS .

PERFORM GET_DDIF_TABL TABLES T_DD03P_YN110
USING  'YN110'.
PERFORM GET_DDIF_TABL TABLES T_DD03P_YN120
USING  'YN120'.
PERFORM GET_DDIF_TABL TABLES T_DD03P_YN210
USING  'YN210'.
PERFORM GET_DDIF_TABL TABLES T_DD03P_YN220
USING  'YN220'.

ENDFORM.                    " GET_TABLE_FIELDS
*&---------------------------------------------------------------------*
*&      Form  GET_DDIF_TBL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_DD03P  text
*      -->P_TABNAME   text
*----------------------------------------------------------------------*
FORM GET_DDIF_TABL  TABLES   P_T_DD03P STRUCTURE DD03P
USING    P_TABNAME.

DATA: L_NAME TYPE DDOBJNAME.

REFRESH P_T_DD03P.
L_NAME = P_TABNAME.
CALL FUNCTION 'DDIF_TABL_GET'
EXPORTING
NAME          = L_NAME
LANGU         = SY-LANGU
TABLES
DD03P_TAB     = P_T_DD03P
EXCEPTIONS
ILLEGAL_INPUT = 1
OTHERS        = 2.

IF SY-SUBRC <> 0.
MESSAGE E754 WITH P_TABNAME.
ENDIF.

ENDFORM.                    " GET_DDIF_TBL
*Text symbol text・
*S01:Company
*S02:Customer
*S03:Payment Due
*S04:Currency
*S05:Paid
*S06:Payment Advice No.
*S07:Own Data Selection
*S08:Header Text
*S09:Header Text
*Selection text・
*P_AVTXT:        Header Text
