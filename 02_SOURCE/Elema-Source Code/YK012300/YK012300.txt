*&---------------------------------------------------------------------*
*                                                                      *
*& 検収照合システム                                                    *
*&     プログラム名称：請求チェックリスト                              *
*&     プログラムＩＤ：YK012300                                        *
*&     作成者　　　　：K.NAKASONE(NSP)   作成日　　　　：2001/12/14    *
*&     更新者　　　　：K.KAJISA(NDSC)    更新日　　　　：2002/03/04    *
*&                     選択画面調整                                    *
*&     更新者　　　　：K.KAJISA(NDSC)    更新日　　　　：2002/03/18    *
*&                     選択画面調整の２                                *
*&     更新者　　　　：K.KAJISA(NDSC)    更新日　　　　：2002/04/01    *
*&                     再出力可能なのはチェック済みのみに変更          *
*&     更新日　　　　：M.SHIRAISHI(NDSC) 更新日　　　　：2002/04/12    *
*&                     総合計ページ出力させない修正　　　　　　　　　　*
*&     更新者　　　　：Inagoshi(NDSC)    更新日        : 2002/05/17a   *
*&                     購買グループ提案の修正              　　　　　　*
*&     更新者　　　　：K.KAJISA(NDSC)    更新日        : 2002/10/01    *
*&                     複数プラント選択時のヘッダ表示修正              *
*&     更新者　　　　：KAJISA(NDSC)      更新日        : 2002/12/12    *
*&                     得意先が一件しか入力されてなく、かつ変わったら  *
*&                     初期値を提案する                                *
*&---------------------------------------------------------------------*
report     yk012300
line-size 170
line-count 58
no standard page heading
message-id y1 .
*---------------------------------------------------------------------
*   宣言部
*---------------------------------------------------------------------
type-pools: slis.
tables:  usr01,                    " ユーザマスタレコード
yk210,                    " 請求データ
lfa1,                     " 仕入先マスタ：一般セクション
t001w,                    " プラント/支店
pri_params.               " 印刷パラメータ受渡し用構造

*  YK210データ取得構造体の定義
types begin of i_audd_out.
include structure yk210.
types spda like usr01-spda.
types spld like usr01-spld.
types lfa1_name1 like lfa1-name1.
types name1 like t001w-name1.
types f_1(3) type c.
types f_2(3) type c.
types end of i_audd_out.

*   請求チェックリスト内部テーブル1
*DATA: I_SEIKYUCHECK TYPE I_AUDD_OUT OCCURS 1
*                WITH HEADER LINE.
data i_seikyucheck type standard table of i_audd_out
with header line.

*   請求チェックリスト内部テーブル2
data i_seikyucheck_flg type standard table of i_audd_out
with header line.

*   請求チェックリスト内部テーブル3
data i_seikyucheck_all type standard table of i_audd_out
with header line.

*   印刷パラメータ
data: begin of sp_params,
spld like usr01-spld,
spda like usr01-spda,
end of sp_params.

*   ALV関係の定義
*   （改頁、ソート）
data: w_sort     type slis_sortinfo_alv,    " 改頁のソートキー情報
i_sort     type slis_t_sortinfo_alv,  " (内部テーブル）
w_layout   type slis_layout_alv,      " 改頁処理の宣言

*   （ヘッダー出力）
w_event    type slis_alv_event,       " 実行可能なイベント群
i_event    type slis_t_event,         " （内部テーブル）

*   （フィールドカタログ）
w_sname    like dd02l-tabname value 'YK01230010',
i_fieldcat type slis_t_fieldcat_alv,  " （内部テーブル）

*   （帳票印刷用）
w_print    type slis_print_alv.

*   ワークエリア
data: w_repid like sy-repid.    " 当レポート名
data rs_data type slis_data_caller_exit.
data: print_params like pri_params. " パラメータ格納変数
data: ret type c value ' '.
data: w_subrc like sy-subrc.      " SY-SUBRCの一次保管

data row_cnt type i.  " データ検査
DATA W_OLD_LIFNR LIKE YK210-LIFNR.  "2002/12/12 ADD
*---------------------------------------------------------------------
*   入力画面定義
*---------------------------------------------------------------------
*2002/03/04 ADD START
parameters:p_bukrs like yk210-bukrs memory id buk obligatory, "会社コー
p_ekorg like yk210-ekorg memory id eko obligatory. "購買組織

select-options: s_werks for yk210-werks memory id wrk    "プラント
no intervals,       "2002/03/18 ADD
s_gsber for yk210-gsber memory id gsb,   "事業領域
*                s_ekgrp for yk210-ekgrp memory id ekg    "購買GRP
s_ekgrp for yk210-ekgrp     "購買GRP MOD 2002/05/17a
no intervals.       "2002/03/18 ADD
*2002/03/04 ADD END

*SELECTION-SCREEN SKIP 5.                              "2002/03/04 DEL
*SELECTION-SCREEN BEGIN OF LINE.                       "2002/03/04 DEL
*SELECTION-SCREEN POSITION 27.                         "2002/03/04 DEL
select-options s_lifnr for yk210-lifnr  "NO-EXTENSION. " 仕入先コード
*                  memory id lif                        "2002/03/18 ADD
"↑DEL 2002/12/12
no intervals.                        "2002/03/18 ADD
*SELECTION-SCREEN COMMENT 15(12) TEXT-001.             "2002/03/04 DEL
*SELECTION-SCREEN END OF LINE.                         "2002/03/04 DEL

*SELECTION-SCREEN SKIP 1.                              "2002/03/04 DEL
*SELECTION-SCREEN BEGIN OF LINE.                       "2002/03/04 DEL
*SELECTION-SCREEN POSITION 27.                         "2002/03/04 DEL
select-options s_zfbdt for yk210-zfbdt " NO-EXTENSION. " 締日
no intervals.                        "2002/03/18 ADD
*SELECTION-SCREEN COMMENT 15(12) TEXT-002.             "2002/03/04 DEL
*SELECTION-SCREEN END OF LINE.                         "2002/03/04 DEL

*SELECTION-SCREEN SKIP 1.                              "2002/03/04 DEL
*SELECTION-SCREEN BEGIN OF LINE.                       "2002/03/04 DEL
*SELECTION-SCREEN POSITION 27.                         "2002/03/04 DEL
select-options s_insdat for yk210-insdat " NO-EXTENSION. " 登録日
default sy-datum  no intervals.       "2002/03/18 ADD
*SELECTION-SCREEN COMMENT 15(12) TEXT-003.             "2002/03/04 DEL
*SELECTION-SCREEN END OF LINE.                         "2002/03/04 DEL

*SELECTION-SCREEN SKIP 1.                              "2002/03/04 DEL
*SELECTION-SCREEN BEGIN OF LINE.                       "2002/03/04 DEL
*SELECTION-SCREEN POSITION 27.                         "2002/03/04 DEL
select-options s_insusr for yk210-insusr " NO-EXTENSION. " 登録ユーザ
default sy-uname  no intervals.       "2002/03/18 ADD
*SELECTION-SCREEN COMMENT 15(12) TEXT-004.             "2002/03/04 DEL
*SELECTION-SCREEN END OF LINE.                         "2002/03/04 DEL

*SELECTION-SCREEN SKIP 1.                              "2002/03/04 DEL
*SELECTION-SCREEN BEGIN OF LINE.                       "2002/03/04 DEL
*SELECTION-SCREEN POSITION 27.                         "2002/03/04 DEL
select-options s_kekkbn for yk210-kekkbn." NO-EXTENSION. " 照合結果区分
*SELECTION-SCREEN COMMENT 15(12) TEXT-005.             "2002/03/04 DEL
*SELECTION-SCREEN END OF LINE.                         "2002/03/04 DEL

*SELECTION-SCREEN SKIP 1.                              "2002/03/04 DEL
*SELECTION-SCREEN BEGIN OF LINE.                       "2002/03/04 DEL
*SELECTION-SCREEN POSITION 30.                         "2002/03/04 DEL
parameters: p_print like usr01-spld. " DEFAULT W_SPLD. " プリンタ
*SELECTION-SCREEN COMMENT 15(8) TEXT-006.              "2002/03/04 DEL
*SELECTION-SCREEN END OF LINE.                         "2002/03/04 DEL
*SELECTION-SCREEN SKIP 1.                              "2002/03/04 DEL

*SELECTION-SCREEN BEGIN OF LINE.                       "2002/03/04 DEL
*SELECTION-SCREEN POSITION 30.                         "2002/03/04 DEL
parameters: p_line like pri_params-linct default 58. " 行数
*SELECTION-SCREEN COMMENT 15(4) TEXT-007.              "2002/03/04 DEL
*SELECTION-SCREEN END OF LINE.                         "2002/03/04 DEL
*SELECTION-SCREEN SKIP 1.                              "2002/03/04 DEL

*SELECTION-SCREEN BEGIN OF LINE.                       "2002/03/04 DEL
*SELECTION-SCREEN POSITION 30.                         "2002/03/04 DEL
parameters: p_size like pri_params-linsz default 170. " 桁数
*SELECTION-SCREEN COMMENT 15(4) TEXT-008.              "2002/03/04 DEL
*SELECTION-SCREEN END OF LINE.                         "2002/03/04 DEL
*SELECTION-SCREEN SKIP 1.                              "2002/03/04 DEL

*SELECTION-SCREEN BEGIN OF LINE.                       "2002/03/04 DEL
*SELECTION-SCREEN POSITION 30.                         "2002/03/04 DEL
*PARAMETERS: P_OUT AS CHECKBOX DEFAULT 'X'.  " 初期ﾁｪｯｸあり
parameters: p_out as checkbox.               " 再出力  "2002/03/04 DEL
*SELECTION-SCREEN COMMENT 15(8) TEXT-009.              "2002/03/04 DEL
*SELECTION-SCREEN END OF LINE.                         "2002/03/04 DEL
*SELECTION-SCREEN SKIP 1.                              "2002/03/04 DEL
parameters p_chk1 as checkbox. "購買グループの初期設定 ADD 2002/05/17a
**********************************************************************
initialization.
* 1: パラメータの初期表示
*   SPLD（スプール： 出力デバイス）, SPDA（印刷パラメータ3）の取得
select single spld spda
from usr01 into corresponding fields of sp_params
where bname = sy-uname.
p_print = sp_params-spld.   " プリンタ名
**********************************************************************
at selection-screen.
*2002/03/18 ADD START
data ct_rec type p.
*  check sy-ucomm is initial.          "ENTER時のみ処理 DEL 2002/12/12
describe table s_lifnr lines ct_rec.
if ct_rec = 1.
read table s_lifnr index 1.
IF W_OLD_LIFNR <> s_lifnr-LOW.
if  ( s_lifnr-option = 'EQ' or  s_lifnr-option = space ).
refresh: s_zfbdt, s_ekgrp.
perform set_zfbdt.              "締日初期値セット
perform set_eigyo.              "購買グループ初期値セット
message id 'Y1' type 'S' number '400' with '初期値設定しました'.
endif.
W_OLD_LIFNR = s_lifnr-LOW.        "2002/12/12 ADD
ENDIF.                              "2002/12/12 ADD
endif.
*2002/03/18 ADD END
**********************************************************************
start-of-selection.
*&--------------------------------------------------------------------*
*       請求データの取得
*---------------------------------------------------------------------*
* 呼出元を設定
w_repid = sy-repid.
*   項目カタログの作成
call function 'REUSE_ALV_FIELDCATALOG_MERGE'
exporting
i_structure_name       = w_sname
changing
ct_fieldcat            = i_fieldcat
exceptions
inconsistent_interface = 1
program_error          = 2
others                 = 3.
if sy-subrc <> 0.
*        MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*                WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
endif.

*   実行可能なイベント群の作成
w_event-form = 'TOP_OF_PAGE'.
w_event-name = 'TOP_OF_PAGE'.
append w_event to i_event.

w_event-form = 'CALLER_EXIT'.
w_event-name = 'CALLER_EXIT'.
append w_event to i_event.

*   "TOP-OF-PAGE"を定義
read table i_event into w_event with key name = 'TOP_OF_PAGE'.
w_event-form = 'TOP_OF_PAGE'.
modify i_event from w_event transporting
form where name = 'TOP_OF_PAGE'.

*   ソート & ページイジェクト
w_layout-group_change_edit = 'X'.
w_print-no_print_listinfos = 'X'.   " Extra printing pageを抑制
w_layout-no_totalline = 'X'.

w_sort-spos      = '01'.
w_sort-fieldname = 'ZFBDT'.    " 締日
w_sort-up        = 'X'.
w_sort-subtot    = 'X'.
w_sort-group     = '*'.
append w_sort to i_sort.

w_sort-spos      = '02'.
w_sort-fieldname = 'LIFNR'.    " 仕入先の項目名
w_sort-up        = 'X'.
w_sort-subtot    = 'X'.
w_sort-group     = '*'.
append w_sort to i_sort.

w_sort-spos      = '03'.
w_sort-fieldname = 'WERKS'.    " プラントの項目名
w_sort-up        = 'X'.
w_sort-subtot    = 'X'.
w_sort-group     = '*'.
append w_sort to i_sort.

* 3.1: YK210テーブルデータを取得
refresh i_seikyucheck.
*2002/04/01 ADD START
data w_outflg like yk210-outflg.
w_outflg =  p_out.
*2002/04/01 ADD END
select * from yk210
into corresponding fields of table i_seikyucheck
where delflg = space      " 削除フラグチェック
*2002/03/04 ADD START
and bukrs  = p_bukrs
and ekorg  = p_ekorg
and gsber in s_gsber
and werks in s_werks
and ekgrp in s_ekgrp
*2002/03/04 ADD END
*2002/04/01 ADD START
and outflg = w_outflg
*2002/04/01 ADD END
and lifnr in s_lifnr    " 仕入先コードチェック
and zfbdt in s_zfbdt    " 締日チェック
and insdat in s_insdat  " 登録日チェック
and insusr in s_insusr  " 登録ユーザチェック
and kekkbn in s_kekkbn. " 区分チェック
*   売上データに選択条件を満たすレコードが存在するかどうかのチェック
*   １件も存在しなければ，強制終了させる
if sy-subrc <> 0.
message s643 .
stop.
endif.

* 取得したデータが全件をバッファテーブルに移す
loop at i_seikyucheck.
move-corresponding i_seikyucheck to i_seikyucheck_all.
append: i_seikyucheck_all.
endloop.

* 3.1.2: 再出力フラグ＝0の場合
if p_out = space.

* 3.2: LFA1テーブルデータを取得
select single name1 from lfa1
into i_seikyucheck-lfa1_name1
where lifnr = i_seikyucheck-lifnr.

* 3.3: TOO1Wテーブルデータを取得
select single name1 from t001w
into corresponding fields of i_seikyucheck
where werks = i_seikyucheck-werks.
else.
* 3.1.3: 再出力フラグ＝'X'の場合
* 3.2: LFA1テーブルデータを取得
select single name1 from lfa1
into i_seikyucheck_all-lfa1_name1
where lifnr = i_seikyucheck-lifnr.

* 3.3: TOO1Wテーブルデータを取得
select single name1 from t001w
into corresponding fields of i_seikyucheck_all
where werks = i_seikyucheck-werks.
endif.


loop at i_seikyucheck.
if i_seikyucheck-outflg = ' '.
i_seikyucheck-f_1 = 'ON'.
else.
i_seikyucheck-f_1 = 'OFF'.
endif.
modify: i_seikyucheck.
endloop.

loop at i_seikyucheck.
move-corresponding i_seikyucheck to i_seikyucheck_flg.
append: i_seikyucheck_flg.
endloop.

loop at i_seikyucheck_flg.
if i_seikyucheck_flg-f_1 = 'OFF'.
delete i_seikyucheck where outflg = i_seikyucheck_flg-outflg.
endif.
endloop.

*  4: 内部テーブル（I_SEIKYUCHECK）のソーティング
sort i_seikyucheck by outflg zfbdt lifnr werks bildoc.
sort i_seikyucheck_flg by zfbdt lifnr werks bildoc.
*&---------------------------------------------------------------------*
*&      Form  TABLE_OUT
*&---------------------------------------------------------------------*
*       ALV帳票の出力
*----------------------------------------------------------------------*
* 3.1.2: 再出力フラグ＝0の場合
if p_out = space.

* 5: 再出力フラグ＝空白の場合、印刷/ﾃﾞｰﾀﾍﾞｰｽ更新
* 5.1 請求データYK210のロック
* データベース（YK210）をアイテム単位でロックする
perform enqueue_yk210 using w_subrc.
if w_subrc > 0.
perform dequeue_yk210.
stop.
endif.

*----------------------------------------------------------------------*
* 5.2.1 プリンタ・パラメータの作成
call function 'GET_PRINT_PARAMETERS'
exporting
destination            = p_print
immediately            = 'X'  " 即時印刷
line_count             = p_line
line_size              = p_size
new_list_id            = 'X'  " 新規依頼
release                = sp_params-spda  " 出力後削除
no_dialog              = 'X'  " BG印刷Paramの抑制
importing
out_parameters         = print_params
valid                  = ret  " 戻り値格納
exceptions
archive_info_not_found = 1
invalid_print_params   = 2
invalid_archive_params = 3
others                 = 4.
if sy-subrc <> 0.
*      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
endif.

* 5.2.2: 出力先の変更（画面->プリンタ）
new-page print on parameters print_params no dialog.

* 5.3: データベース更新
* 5.3.1 YK210のチェックリスト出力フラグOUTFLGをセット
*    W_SUBRC = 0.  (削除)
loop at i_seikyucheck.
if i_seikyucheck-outflg = ' '.

update yk210
set outflg = 'X'
upddat = sy-datum
updtim = sy-uzeit
updusr = sy-uname
where bukrs  = i_seikyucheck-bukrs
and ykyear = i_seikyucheck-ykyear
and bildoc = i_seikyucheck-bildoc.

if sy-subrc = 0.
commit work.
else.
message s644 .
rollback work.
endif.
endif.
endloop.

if sy-subrc <> 0. "(I_SEIKYUCHECKテーブル中一件も無かった時の判断)
message s645 .
stop .
endif.

* 5.4: 請求データYK210のロック解除
perform dequeue_yk210.
if w_subrc > 0.
stop.
endif.

**ERR*****
* 5.2.4: 出力先を元の表示に戻す（プリンタ->画面）
*         NEW-PAGE PRINT OFF.
**********

* 5.2.3: 印刷
*   レポート表示
call function 'REUSE_ALV_LIST_DISPLAY'
exporting
i_callback_program = w_repid
it_fieldcat        = i_fieldcat
i_save             = 'A'
it_events          = i_event[]
is_layout          = w_layout
it_sort            = i_sort
is_print           = w_print
tables
t_outtab           = i_seikyucheck
exceptions
program_error      = 1
others             = 2.

if sy-subrc <> 0.
* 5.2.5 印刷失敗した場合は、処理が終了。
stop.
endif.

*ﾌﾟﾘﾝﾄOFF*
new-page print off.
**********
endif. "2002/03/04 ADD
*ELSEは不必要のため以下をコメント02/07**************
** 内部テーブル1の中身を全部削除
* CLEAR:I_SEIKYUCHECK.
* REFRESH:I_SEIKYUCHECK.
*
*
** 6.1: 画面ALV帳票を出力
**   レポート表示
*ELSE.
*    CLEAR:I_SEIKYUCHECK.
*  REFRESH:I_SEIKYUCHECK.
****************************************************


*  DESCRIBE TABLE I_SEIKYUCHECK.  " データ検査
*  ROW_CNT = SY-TFILL.

*以下コメント02/07***********************************
*    LOOP AT I_SEIKYUCHECK_ALL.
*      MOVE-CORRESPONDING I_SEIKYUCHECK_ALL TO I_SEIKYUCHECK.
*      APPEND: I_SEIKYUCHECK.
*    ENDLOOP.
*****************************************************

*2002/02/07 ADD *************************************
if sy-batch <> 'X'.
*****************************************************

if p_out = space.  "2002/03/04 ADD

sort i_seikyucheck by zfbdt lifnr werks bildoc. " 2002/02/04

call function 'REUSE_ALV_LIST_DISPLAY'
exporting
i_callback_program = w_repid
it_fieldcat        = i_fieldcat
i_save             = 'A'
it_events          = i_event[]
is_layout          = w_layout
it_sort            = i_sort
is_print           = w_print
tables
t_outtab           = i_seikyucheck
exceptions
program_error      = 1
others             = 2.

********************************** 2002/03/04 ADD (START)

else.

sort i_seikyucheck_all by zfbdt lifnr werks bildoc.

call function 'REUSE_ALV_LIST_DISPLAY'
exporting
i_callback_program = w_repid
it_fieldcat        = i_fieldcat
i_save             = 'A'
it_events          = i_event[]
is_layout          = w_layout
it_sort            = i_sort
is_print           = w_print
tables
t_outtab           = i_seikyucheck_all
exceptions
program_error      = 1
others             = 2.

endif.

********************************** 2002/03/04 ADD (END)

if sy-subrc <> 0.
*    WRITE:/ 'ALV帳票の出力は失敗しました、処理が終了させる。'.
endif.

*02/07 ADD**********
endif.
********************

* ENDIF.   "2002/03/04 DEL
*&---------------------------------------------------------------------*
*&      Form  CALLER_EXIT
*&---------------------------------------------------------------------*
*       先頭行取得定義
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form caller_exit using rs_data type slis_data_caller_exit.
rs_data-callback_header_transport = 'FILITEXTS_TEXT_TRANSPORT'.
endform.            " CALLER_EXIT
**********************************************************************
***          TOP_OF_PAGE                                           ***
**********************************************************************
form top_of_page.
data: w_name1 like lfa1-name1
value '                  ',
w_bezei like t001w-name1
value '                  '.
*2002/10/01 ADD START
if p_out = 'X'.
move i_seikyucheck_all to i_seikyucheck.
endif.
*2002/10/01 ADD END
*   ページヘッダー
write: /1 '請求チェックリスト'.
write: /1 'Page:',
sy-pagno.
write: /1 '作成日時： ',
sy-datum using edit mask '____/__/__',
sy-uzeit using edit mask '__:__'.

if not ( i_seikyucheck-zfbdt is initial and
i_seikyucheck-lifnr is initial ).

write: /1 '締日：　　 ',                                "2002/02/05
13 i_seikyucheck-zfbdt.

write: /.
select single name1
from lfa1 into w_name1
where lifnr = i_seikyucheck-lifnr.
write: /1 '仕入先:    ',
12 i_seikyucheck-lifnr,
24 '仕入先名称:',
38 w_name1.

select single name1
from t001w into w_bezei
where werks = i_seikyucheck-werks.
write: /1 'プラント:',
12 i_seikyucheck-werks,
24 'プラント名称:',
38 w_bezei.
endif.
endform.
*&---------------------------------------------------------------------*
*&      Form  ENQUEUE_YK210
*&---------------------------------------------------------------------*
*       ロック処理
*----------------------------------------------------------------------*
form enqueue_yk210 using w_subrc.
loop at i_seikyucheck.
call function 'ENQUEUE_EY_YK210'
exporting
mode_yk210           = 'E'
mandt                = sy-mandt
*      DELFLG               = I_SEIKYUCHECK-DELFLG "削除フラグﾁｪｯｸ
*      DELFLG               = SPACE
bukrs                = i_seikyucheck-bukrs
ykyear                = i_seikyucheck-ykyear
bildoc                = i_seikyucheck-bildoc
exceptions
foreign_lock         = 1
system_failure       = 2
others               = 3.
w_subrc = sy-subrc.
if w_subrc > 0.
message s646 .
exit.
endif.
endloop.
endform.                    " ENQUEUE_YK210
*&---------------------------------------------------------------------*
*&      Form  DEQUEUE_YK210
*&---------------------------------------------------------------------*
*       ロック処理
*----------------------------------------------------------------------*
form dequeue_yk210.
loop at i_seikyucheck.
call function 'DEQUEUE_EY_YK210'
exporting
mode_yk210 = 'E'
mandt      = sy-mandt
*                DELFLG     = SPACE          " 削除フラグチェック
bukrs      = i_seikyucheck-bukrs
ykyear     = i_seikyucheck-ykyear
bildoc     = i_seikyucheck-bildoc
exceptions
others     = 1.

if sy-subrc > 0.
message s647 .
stop.
endif.
endloop.

endform.                    " DEQUEUE_YK210
*&---------------------------------------------------------------------*
*&      Form  SET_ZFBDT
*&---------------------------------------------------------------------*
*       締日の初期値セット 2002/03/18 add
*----------------------------------------------------------------------*
form set_zfbdt.
call function 'YK_ZFBDT_GET_BY_LFM1'
exporting
i_cord               = s_lifnr-low
i_ekorg              = p_ekorg
i_day                = sy-datum
importing
e_zfbdt_old          = s_zfbdt-low
exceptions
no_get_t052          = 1
no_good_getday       = 2
no_get_zterm         = 3
others               = 4.
if sy-subrc = 0.
s_zfbdt-sign   = 'I'.
s_zfbdt-option = 'EQ'.
append s_zfbdt.
endif.
endform.                    " SET_ZFBDT
*&---------------------------------------------------------------------*
*&      Form  SET_EIGYO
*&---------------------------------------------------------------------*
*       購買グループ初期値セット 2002/03/11 ADD => MOD 2002/05/17a
*----------------------------------------------------------------------*
form set_eigyo.
tables lfm1.
clear lfm1.
*  select single ekgrp into s_ekgrp-low from lfm1
*   where lifnr = s_lifnr-low
*     and ekorg = p_ekorg.
*  if sy-subrc = 0.
*    s_ekgrp-sign   = 'I'.
*    s_ekgrp-option = 'EQ'.
*    append s_ekgrp.
*  endif.
data w_cnt type p.
describe table s_ekgrp lines w_cnt.
if p_chk1 = 'X' and w_cnt = 0.
select * from   lfm1
where  lifnr in s_lifnr
and  ekorg =  p_ekorg.
s_ekgrp-low = lfm1-ekgrp.
s_ekgrp-sign  = 'I'.
s_ekgrp-option ='EQ'.
append s_ekgrp.
endselect.
endif.
endform.                    " SET_EIGYO
