*&---------------------------------------------------------------------*
*& 検収照合システム
*&   プログラム名称：請求データ確定
*&   プログラムＩＤ：YK012500
*&   作成者　　　　：K.ISHIKAWA(NSP)   　　　作成日：2001/12/20
*&   更新者　　　　：K.KAJISA(NDSC)    　　　更新日：2002/03/04
*&         選択画面調整
*&   更新者　　　　：K.KAJISA(NDSC)   　　　 更新日：2002/03/18
*&         選択画面調整の２
*&   更新者　　　　：Inagoshi(NDSC)    　　　更新日：2002/05/07
*&         YK260による税抜／税／税込の金額チェック選択機能追加
*&   更新者　　　　：Inagoshi(NDSC)          更新日：2002/05/10
*&         出力フラグのチェックを削除
*&   更新者　　　　：Inagoshi(NDSC)          更新日: 2002/05/17a
*&         購買グループ提案の修正              　　　　　　
*&   更新者　　　　：Inagoshi(NDSC)    更新日　　　　：2002/05/28a
*&         結果リスト・タイトル行の追加
*&   更新者　　　　：Inagoshi(NDSC)    更新日　　　　：2002/05/29a
*&      正常データリストを出力しない／エラーのある場合のみエラーリスト
*&   更新者        :SHIRAISHI(NDSC)    更新日        :2002/06/03
*&      エラーログ出力項目追加
*&   更新者       :M.Shiraishi(NDSC)   更新日        :2002/06/14
*&      締日→基準日へ変更
*&   更新者　　　　：K.KAJISA(NDSC)   　　　 更新日：2002/10/15
*&          請求先初期値提案の削除
*&   更新者　　　　：KAJISA(NDSC)      更新日        : 2002/12/12
*&                   仕入先が一件しか入力されてなく、かつ変わったら
*&                   初期値を提案する
*{   INSERT         TEDK906046                                        1
*&   更新者        : K.ABE(DMC)        更新日        : 2004/12/24
*                   数量属性の桁数変更
*}   INSERT
*&---------------------------------------------------------------------*
report      yk012500
line-count 58
line-size 170
no standard page heading
message-id y1.
*----------------------------------------------------------------------*
*   宣言部
*----------------------------------------------------------------------*
tables:     yk210,              " 請求データ
yk220,              " 請求合計データ
yk260.              " 仕入照合マスタ
*   請求データ
data: begin of i_seikyu occurs 1,
bukrs    like yk210-bukrs,      " 会社コード/M-K(1)/S-K(1)
ykyear   like yk210-ykyear,     " 暦年/M-K(2)/S-K(2)
lifnr    like yk210-lifnr,      " 仕入先コード/S-K(3)
lifn2    like yk210-lifn2,      " 請求先/S-K(4)
werks    like yk210-werks,      " プラント/S-K(5)
ekorg    like yk210-ekorg,      " 購買組織/S-K(6)
ekgrp    like yk210-ekgrp,      " 購買グループ/S-K(7)
gsber    like yk210-gsber,      " 事業領域/S-K(8)
zfbdt    like yk210-zfbdt,      " 締め日/S-K(9)
bildoc   like yk210-bildoc,     " 入力番号/M-K(3)
kekkbn   like yk210-kekkbn,     " 照合結果区分
*{   REPLACE        TEDK906046                                        2
*\        knquan   like yk210-knquan,     " 数量
KNQUAN(7) TYPE P DECIMALS 3,    " 数量
*}   REPLACE
knunit   like yk210-knunit,     " 単位
knuntprc like yk210-knuntprc,   " 単価
knitxamt like yk210-knitxamt,   " 税抜金額
kntaxamt like yk210-kntaxamt,   " 消費税額
knetxamt like yk210-knetxamt,   " 税込金額
waers    like yk210-waers,      " 通貨コード
fixflg   like yk210-fixflg,     " 確定フラグ
outflg   like yk210-outflg,     " チェックリスト出力フラグ
end of i_seikyu.

*   請求合計データ
data: begin of i_goukei occurs 1,
bukrs    like yk220-bukrs,      " 会社コード/M-/S-K(1)
ykyear   like yk220-ykyear,     " 暦年/M-/S-K(2)
lifnr    like yk220-lifnr,      " 仕入先コード/M-/S-K(3)
lifn2    like yk220-lifn2,      " 請求先/M-/S-K(4)
werks    like yk220-werks,      " プラント/M-/S-K(5)
ekorg    like yk220-ekorg,      " 購買組織/M-/S-K(6)
ekgrp    like yk220-ekgrp,      " 購買グループ/M-/S-K(7)
gsber    like yk220-gsber,      " 事業領域/M-/S-K(8)
zfbdt    like yk220-zfbdt,      " 締め日/M-/S-K(9)
knitxamt like yk220-knitxamt,   " 税抜金額
kntaxamt like yk220-kntaxamt,   " 消費税額
knetxamt like yk220-knetxamt,   " 税込金額
waers    like yk220-waers,      " 通貨コード
fg_err   type c,                " エラーフラグ('E': エラー)
ct_items like sy-dbcnt,         " 当合計データに対するアイテム数
ct_match like sy-dbcnt,         " 　　　〃　　　　　　
"  照合済み & 確定フラグONの件数
end of i_goukei.

*   正常データリスト
data: begin of right_list occurs 1,
bukrs   like yk220-bukrs,   " 会社コード/SK(1)
ykyear  like yk220-ykyear,  " 暦年/SK(2)
lifnr   like yk220-lifnr,   " 仕入先コード/SK(3)
lifn2   like yk220-lifn2,   " 請求先/SK(4)
werks   like yk220-werks,   " プラント/SK(5)
ekorg   like yk220-ekorg,   " 購買組織/SK(6)
ekgrp   like yk220-ekgrp,   " 購買グループ/SK(7)
gsber   like yk220-gsber,   " 事業領域/SK(8)
zfbdt   like yk220-zfbdt,   " 締め日/SK(9)
end of right_list.

*   エラーリスト
data: begin of wrong_list occurs 1,
bukrs   like yk220-bukrs,   " 会社コード/SK(1)
ykyear  like yk220-ykyear,  " 暦年/SK(2)
lifnr   like yk220-lifnr,   " 仕入先コード/SK(3)
lifn2   like yk220-lifn2,   " 請求先/SK(4)
werks   like yk220-werks,   " プラント/SK(5)
ekorg   like yk220-ekorg,   " 購買組織/SK(6)
ekgrp   like yk220-ekgrp,   " 購買グループ/SK(7)
gsber   like yk220-gsber,   " 事業領域/SK(8)
zfbdt   like yk220-zfbdt,   " 締め日/SK(9)
*       アイテムのエラーカウント
ct_erno like sy-dbcnt,      " 請求レコードが不在
"   =0: 存在, =1: 不在
ct_erfg like sy-dbcnt,      " チェックリスト出力フラグがSPACE
ct_ercu like sy-dbcnt,      " 通貨コードの不一致か不均質
ct_ervl like sy-dbcnt,      " 金額(類)合計不一致
end of wrong_list.

*   ワークエリア
data: w_lifnr   like yk220-lifnr,   " 仕入先コード
w_ekorg   like yk220-ekorg,   " 購買組織

ct_ttl210 like sy-dbcnt,      " YK210該当件数
ct_ttl220 like sy-dbcnt,      " YK220 〃
ct_upd210 like sy-dbcnt,      " YK210確定更新件数
ct_upd220 like sy-dbcnt,      " YK220 〃
ct_fix210 like sy-dbcnt,      " YK210確定済み件数
ct_fix220 like sy-dbcnt,      " YK220 〃
ct_ccl210 like sy-dbcnt,      " YK210確定解除件数
ct_ccl220 like sy-dbcnt,      " YK220 〃
ct_nox210 like sy-dbcnt,      " YK210確定解除済み件数
ct_nox220 like sy-dbcnt,      " YK220 〃
ct_mat210 like sy-dbcnt,      " YK210照合済み件数
ct_err210 like sy-dbcnt,      " YK210エラー件数
ct_err220 like sy-dbcnt,      " YK220 〃

ct_erno   like sy-dbcnt,      " 請求レコードが不在
"   =0: 存在, =1: 不在
ct_erfg   like sy-dbcnt,      " チェックリスト出力フラグがSPACE
ct_ercu   like sy-dbcnt,      " 通貨コードの不一致か不均質
ct_ervl   like sy-dbcnt.      " 金額(類)合計不一致

data: w_waers   like yk210-waers,   " 通貨コードの一時保管
w_waers2  like yk210-waers,   " 〃
w_flg1    like yk210-fixflg,  " 確定フラグの値保持
w_flg2    like yk210-fixflg,  " 〃
w_subrc   like sy-subrc,      " SY-SUBRCワーク
w_dbcnt1  like sy-dbcnt,      " SY-DBCNT　〃
w_dbcnt2  like sy-dbcnt,      " 〃
fg_erout  type c.             " エラー出力用フラグ

data: w_check_itx type c,  "金額チェック・税抜　ADD 2002/05/07
w_check_tax type c,  "金額チェック・税額　ADD 2002/05/07
w_check_etx type c,  "金額チェック・税込　ADD 2002/05/07
w_check_flg type p.  "金額チェックフラグ　ADD 2002/05/07
data: w_list_cnt1 type p. "ADD 2002/05/29a
DATA: W_OLD_LIFNR LIKE YK210-LIFNR. "2002/12/12 ADD
*----------------------------------------------------------------------*
*   入力画面定義
*----------------------------------------------------------------------*
*SELECTION-SCREEN SKIP 3.                               "2002/03/04 DEL
parameters p_bukrs  like yk220-bukrs   memory id buk  " 会社コード
obligatory.
parameters p_ykyear like yk220-ykyear.                " 暦年(締め日の
*                     OBLIGATORY.                       "2002/03/18 DEL)
*  select-options s_lifnr for yk220-lifnr memory id lif  " 仕入先コード
select-options s_lifnr for yk220-lifnr                "2002/12/12 MOD
no intervals.                        "2002/03/18 ADD
select-options s_lifn2 for yk220-lifn2                " 請求先
no intervals.                        "2002/03/18 ADD
select-options s_werks for yk220-werks memory id wrk  " プラント
no intervals.                        "2002/03/18 ADD
select-options s_ekorg for yk220-ekorg memory id eko  " 購買組織
no intervals.                        "2002/03/18 ADD
*  select-options s_ekgrp for yk220-ekgrp memory id ekg  " 購買グループ
select-options s_ekgrp for yk220-ekgrp " 購買グループ MOD 2002/05/17a
no intervals.                        "2002/03/18 ADD
select-options s_gsber for yk220-gsber memory id gsb  " 事業領域
no intervals.                        "2002/03/18 ADD
parameters p_zfbdt  like yk220-zfbdt                  " 締め日
default sy-datum                     "2002/03/18 ADD
obligatory.
parameters p_chk1 as checkbox. "購買グループの初期設定 ADD 2002/05/17a
*----------------------------------------------------------------------*
*   実行
*----------------------------------------------------------------------*
initialization.
*2002/10/15 DEL START
*** 取引先機能（WYT3）の読込み
**
*    get parameter id 'LIF' field w_lifnr.
*    get parameter id 'EKO' field w_ekorg.
*    s_lifn2-sign   = 'I'.
*    s_lifn2-option = 'EQ'.
*    select single lifn2
*                from wyt3
*                into s_lifn2-low
*                where lifnr = w_lifnr
*                  and ekorg = w_ekorg
*                  and parvw = 'Y2'.
*
*    if sy-subrc = 0.
*        append s_lifn2.
*    else.
*        move space to s_lifn2.
*    endif.
*2002/10/15 DEL END
CLEAR W_OLD_LIFNR.                    "2002/12/12 ADD
at selection-screen.
*2002/03/11 ADD START
data ct_rec type p.
*  check sy-ucomm is initial.          "ENTER時のみ処理 DEL 2002/12/12
describe table s_lifnr lines ct_rec.
check ct_rec = 1.
describe table s_ekorg lines ct_rec.
if ct_rec = 1.
read table s_lifnr index 1.
read table s_ekorg index 1.
IF W_OLD_LIFNR <> s_lifnr-LOW.      "2002/12/12 ADD
if  ( s_lifnr-option = 'EQ' or  s_lifnr-option = space )
and ( s_ekorg-option = 'EQ' or  s_ekorg-option = space ).
refresh: s_ekgrp.
perform set_zfbdt.              "締日初期値セット
perform set_eigyo.              "購買グループ初期値セット
message id 'Y1' type 'S' number '400' with '初期値設定しました'.
endif.
W_OLD_LIFNR = s_lifnr-LOW.      "2002/12/12 ADD
ENDIF.                            "2002/12/12 ADD
*2002/10/15 DEL START
* else.
*   refresh s_lifn2.
*2002/10/15 DEL END
endif.
*2002/10/15 DEL START
* p_ykyear = p_zfbdt(4).
*2002/10/15 DEL END
*2002/03/11 ADD END
start-of-selection.

*** １． データ抽出，および
*        内部テーブル（請求合計テーブル & 請求テーブル）の作成
*
*       - 前提条件（ただし，絶対的な条件ではない）：
*             請求合計データ（YK220）のソート順
*                 (1) BUKRS（会社コード）
*                 (2) YKYEAR（暦年）
*                 (3) LIFNR（仕入先コード）
*                 (4) LIFN2（請求先）
*                 (5) WERKS（プラント）
*                 (6) EKORG（購買組織）
*                 (7) EKGRP（購買グループ）
*                 (8) GSBER（事業領域）
*                 (9) ZFBDT（締め日）
*
*             請求データ（YK210）のソート順
*                 (1) BUKRS（会社コード）
*                 (2) YKYEAR（暦年）
*                 (3) BILDOC（入力番号）
*
*       - 事後条件：
*             エラーリスト（WRONG_LIST）のソート順
*                 (1) BUKRS（会社コード）
*                 (2) YKYEAR（暦年）
*                 (3) LIFNR（仕入先コード）
*                 (4) LIFN2（請求先）
*                 (5) WERKS（プラント）
*                 (6) EKORG（購買組織）
*                 (7) EKGRP（購買グループ）
*                 (8) GSBER（事業領域）
*                 (9) ZFBDT（締め日）
*2002/10/15 DEL START
* p_ykyear = p_zfbdt(4).
* refresh s_lifn2. "暫定仕様
*2002/10/15 DEL END
*   選択条件を満たす請求合計データ（YK220）レコードの読込み
clear i_goukei.
refresh i_goukei.
select *
from yk220
into corresponding fields of table i_goukei
where bukrs  =  p_bukrs     " 会社コードチェック
and ykyear =  p_ykyear    " 暦年チェック
and lifnr  in s_lifnr     " 仕入先コードチェック
and lifn2  in s_lifn2     " 請求先チェック
and werks  in s_werks     " プラントチェック
and ekorg  in s_ekorg     " 購買組織チェック
and ekgrp  in s_ekgrp     " 購買グループチェック
and gsber  in s_gsber     " 事業領域チェック
and zfbdt  =  p_zfbdt.    " 締め日チェック

*   請求合計データに選択条件を満たすレコードが存在するかどうかの
*   チェック
*   １件も存在しなければ，強制終了させる
if sy-subrc > 0.
message s633 .
stop.
endif.

*   内部テーブル（I_GOUKEI）のソーティング
sort i_goukei ascending
by bukrs      " (1) 会社コード
ykyear     " (2) 暦年
lifnr      " (3) 仕入先コード
lifn2      " (4) 請求先
werks      " (5) プラント
ekorg      " (6) 購買組織
ekgrp      " (7) 購買グループ
gsber      " (8) 事業領域
zfbdt.     " (9) 締め日

*   請求データ（YK210）の取得
clear i_seikyu.
loop at i_goukei.
select *
from yk210
into corresponding fields of i_seikyu
where delflg = space              " 削除フラグチェック
and bukrs  = i_goukei-bukrs     " 会社コードマッチ
and ykyear = i_goukei-ykyear    " 暦年マッチ
and lifnr  = i_goukei-lifnr     " 仕入先コードマッチ
and lifn2  = i_goukei-lifn2     " 請求先マッチ
and werks  = i_goukei-werks     " プラントマッチ
and ekorg  = i_goukei-ekorg     " 購買組織マッチ
and ekgrp  = i_goukei-ekgrp     " 購買グループマッチ
and gsber  = i_goukei-gsber     " 事業領域マッチ
and zfbdt  = i_goukei-zfbdt.    " 締め日マッチ
append i_seikyu.
clear i_seikyu.
endselect.
endloop.

*   内部テーブル（I_SEIKYU）のソーティング
sort i_seikyu ascending
by bukrs      " (1) 会社コード
ykyear     " (2) 暦年
lifnr      " (3) 仕入先コード
lifn2      " (4) 請求先
werks      " (5) プラント
ekorg      " (6) 購買組織
ekgrp      " (7) 購買グループ
gsber      " (8) 事業領域
zfbdt.     " (9) 締め日

*** ２． エラーチェック
*

*   エラーカウントのクリア & 該当件数の取得
clear: ct_ttl210, ct_ttl220,
ct_upd210, ct_upd220, ct_fix210, ct_fix220,
ct_ccl210, ct_ccl220, ct_nox210, ct_nox220, ct_mat210,
ct_err210, ct_err220.
describe table i_seikyu lines ct_ttl210.
describe table i_goukei lines ct_ttl220.

*   内部テーブルどうしのマッチング
clear wrong_list.
refresh wrong_list.
loop at i_goukei.
*       エラーフラグのクリア
clear: i_goukei-fg_err, i_goukei-ct_match.
*       カウンタクリア
clear: i_goukei-ct_items.
clear: ct_erno, ct_erfg, ct_ercu, ct_ervl.

*       マッチする請求データを読み込む
read table i_seikyu
with key    bukrs  = i_goukei-bukrs
ykyear = i_goukei-ykyear
lifnr  = i_goukei-lifnr
lifn2  = i_goukei-lifn2
werks  = i_goukei-werks
ekorg  = i_goukei-ekorg
ekgrp  = i_goukei-ekgrp
gsber  = i_goukei-gsber
zfbdt  = i_goukei-zfbdt.

*       マッチする請求データが存在するか
if sy-subrc > 0.
move-corresponding i_goukei to wrong_list.
ct_erno = 1.
else.
*------------------------------------ ADD 2002/05/07 (start)
*  　       金額チェックの為のYK260データの取得
clear: w_check_itx, w_check_tax, w_check_etx.
select single * from yk260
where bukrs  = i_goukei-bukrs  "会社コード
and lifnr  = i_goukei-lifn2  "仕入先 = 請求先
and ekorg  = i_goukei-ekorg. "購買組織
if sy-subrc = 0.
w_check_itx = yk260-b_ze_e.  "税抜チェック
w_check_tax = yk260-b_sh_e.  "税額チェック
w_check_etx = yk260-b_ko_e.  "税込チェック
else.
select single * from yk260
where bukrs  = i_goukei-bukrs  "会社コード
and lifnr  = 'DEFAULT'.      "仕入先 = default
if sy-subrc = 0.
w_check_itx = yk260-b_ze_e.
w_check_tax = yk260-b_sh_e.
w_check_etx = yk260-b_ko_e.
else.
w_check_itx = 'X'.
w_check_tax = ' '.
w_check_etx = ' '.
endif.
endif.
*------------------------------------ ADD 2002/05/07 (end)

*           マッチする請求データを順次読み込む
loop at i_seikyu
where bukrs  = i_goukei-bukrs
and ykyear = i_goukei-ykyear
and lifnr  = i_goukei-lifnr
and lifn2  = i_goukei-lifn2
and werks  = i_goukei-werks
and ekorg  = i_goukei-ekorg
and ekgrp  = i_goukei-ekgrp
and gsber  = i_goukei-gsber
and zfbdt  = i_goukei-zfbdt.

i_goukei-ct_items = i_goukei-ct_items + 1.
if ( '4' <= i_seikyu-kekkbn and i_seikyu-kekkbn <= '5' )
and i_seikyu-fixflg = 'X'.
i_goukei-ct_match = i_goukei-ct_match + 1.
endif.

**               チェックリスト出力フラグが'X'でないか？  DEL 2002/05/10
*                if not i_seikyu-outflg = 'X'.
*                    ct_erfg = ct_erfg + 1.
*                endif.
**
*               通貨コードのセーブ
w_waers2 = i_seikyu-waers.
*               キーブレーク
at new zfbdt.
w_waers = w_waers2.
endat.

*               通貨コードのチェック（不一致 or 不均質）
if i_seikyu-waers <> i_goukei-waers or
i_seikyu-waers <> w_waers.
ct_ercu = ct_ercu + 1.  " このcount upは意味がない
endif.

at end of zfbdt.
*------------------------------------ MOD 2002/05/07 (start)
*                   金額チェック
sum.
*                    if i_seikyu-knitxamt <> i_goukei-knitxamt or
*                       i_seikyu-kntaxamt <> i_goukei-kntaxamt or
*                       i_seikyu-knetxamt <> i_goukei-knetxamt.
*                        ct_ervl = 1.
*                    endif.
clear w_check_flg.
if w_check_itx = 'X'.  "税抜チェック
if i_seikyu-knitxamt <> i_goukei-knitxamt.
add 1 to w_check_flg.
endif.
endif.
if w_check_tax = 'X'.  "税額チェック
if i_seikyu-kntaxamt <> i_goukei-kntaxamt.
add 1 to w_check_flg.
endif.
endif.
if w_check_etx = 'X'.  "税込チェック
if i_seikyu-knetxamt <> i_goukei-knetxamt.
add 1 to w_check_flg.
endif.
endif.
if w_check_flg > 0.
ct_ervl = 1.
endif.
*------------------------------------ MOD 2002/05/07 (end)
endat.
endloop.    " AT I_SEIKYU
endif.

if ct_erno = 0 and ct_erfg = 0 and ct_ercu = 0 and ct_ervl = 0.
clear right_list.
move-corresponding i_goukei to right_list.
append right_list.
else.
*         if (CT_ERNO = 1 or CT_ERFG > 0 or CT_ERCU > 0 or CT_ERVL > 0)
clear wrong_list.
move-corresponding i_goukei to wrong_list.
i_goukei-fg_err = 'E'. " エラーフラグのセット
ct_err220 = ct_err220 + 1.
if ct_ercu = 0 and ct_ervl = 0.
*               この場合、請求データが不在か出力フラグがSPACEのエラー
*               （通貨コードまたは金額合計の不整合エラーがあれば，そちら
*                 のほうを優先してカウントする点に注意）
ct_err210 = ct_err210 + ct_erfg.
else.
*             if (CT_ERCU > 0 or CT_ERVL > 0)
*               つまり、この場合は通貨コードか金額エラーなので，
*               全請求データをエラー扱いとする
ct_err210 = ct_err210 + i_goukei-ct_items.
endif.

wrong_list-ct_erno = ct_erno.
wrong_list-ct_erfg = ct_erfg.
wrong_list-ct_ercu = ct_ercu.
wrong_list-ct_ervl = ct_ervl.
append wrong_list.
endif.

modify i_goukei.

endloop.    " AT I_GOUKEI

*** ３． データベースの更新
*

*   データベース（YK220 & YK210）の確定フラグのチェック & 更新
loop at i_goukei.
*       ロック処理
*       （合計データレコードに対して）
perform enqueue_yk220 using w_subrc.

if w_subrc = 0.
*           （アイテムブロックに対して）
loop at i_seikyu
where bukrs  = i_goukei-bukrs
and ykyear = i_goukei-ykyear
and lifnr  = i_goukei-lifnr
and lifn2  = i_goukei-lifn2
and werks  = i_goukei-werks
and ekorg  = i_goukei-ekorg
and ekgrp  = i_goukei-ekgrp
and gsber  = i_goukei-gsber
and zfbdt  = i_goukei-zfbdt.

perform enqueue_yk210 using w_subrc.

if w_subrc > 0.
exit.
endif.
endloop.    " AT I_SEIKYU
endif.

*       ロック処理に失敗したか
if w_subrc > 0.
rollback work.
perform dequeue_yk220.
perform dequeue_yk210.
stop.
endif.

*       確定フラグのセット
w_flg1 = space.
w_flg2 = 'X'.
if not i_goukei-fg_err is initial.
w_flg1 = 'X'.
w_flg2 = space.
endif.

*       データベースの確定フラグの更新(確定/解除)
update yk220
set fixflg = w_flg2
upddat = sy-datum
updtim = sy-uzeit
updusr = sy-uname
where bukrs  = i_goukei-bukrs
and ykyear = i_goukei-ykyear
and lifnr  = i_goukei-lifnr
and lifn2  = i_goukei-lifn2
and werks  = i_goukei-werks
and ekorg  = i_goukei-ekorg
and ekgrp  = i_goukei-ekgrp
and gsber  = i_goukei-gsber
and zfbdt  = i_goukei-zfbdt
and fixflg = w_flg1.

w_dbcnt1 = sy-dbcnt.
w_subrc  = sy-subrc.
if not ( w_subrc = 0 or w_subrc = 4 ).
message s634 with 'YK220' .
exit.
else.
*           データベースの確定フラグの更新(確定/解除)
update yk210
set fixflg = w_flg2
upddat = sy-datum
updtim = sy-uzeit
updusr = sy-uname
where delflg = space        " 削除フラグチェック
and bukrs  = i_goukei-bukrs
and ykyear = i_goukei-ykyear
and lifnr  = i_goukei-lifnr
and lifn2  = i_goukei-lifn2
and werks  = i_goukei-werks
and ekorg  = i_goukei-ekorg
and ekgrp  = i_goukei-ekgrp
and gsber  = i_goukei-gsber
and zfbdt  = i_goukei-zfbdt
and kekkbn < '4'
and fixflg = w_flg1.

w_dbcnt2 = sy-dbcnt.
w_subrc  = sy-subrc.
if not ( w_subrc = 0 or w_subrc = 4 ).
message s634 with 'YK210' .
exit.
endif.

*           更新/解除カウントは実際に更新されたレコード数とする
if i_goukei-fg_err is initial.
ct_upd220 = ct_upd220 + w_dbcnt1.
ct_upd210 = ct_upd210 + w_dbcnt2.
ct_fix220 = ct_fix220 + ( 1 - w_dbcnt1 ).
ct_fix210 = ct_fix210 +
( i_goukei-ct_items - w_dbcnt2 ).
else.
ct_ccl220 = ct_ccl220 + w_dbcnt1.
ct_ccl210 = ct_ccl210 + w_dbcnt2.
ct_nox220 = ct_nox220 + ( 1 - w_dbcnt1 ).
ct_nox210 = ct_nox210 +
( i_goukei-ct_items - w_dbcnt2 - i_goukei-ct_match ).
ct_mat210 = ct_mat210 + i_goukei-ct_match.
endif.
endif.
endloop.    " AT I_GOUKEI

*   コミットワーク or ロールバック
if w_subrc = 0 or w_subrc = 4.
commit work.
perform dequeue_yk220.
perform dequeue_yk210.
else.
rollback work.
perform dequeue_yk220.
perform dequeue_yk210.
stop.
endif.

*** ４． 結果表示
***--- ADD 2002/05/28a (start)
write: /1  '入力データチェックリスト'.
write /.
***--- ADD 2002/05/28a (end)
***--- DEL 2002/05/29a (start)
**   正常データの表題 & 見出し
*    write: /1  '正常データ'.
*    write /.
*    write: /1  '会社コード',
*            12 '暦年',
*            17 '仕入先コード',
*            31 '請求先',
*            42 'プラント',
*            52 '購買組織',
*            62 '購買GRP',
*            71 '事業領域',
*            83 '締日'.
*    uline.
**   正常データ各行の表示
*    loop at right_list.
*        write: /4   right_list-bukrs,     " 会社コード
*                12  right_list-ykyear,    " 暦年
*                18  right_list-lifnr,     " 仕入先コード
*                31  right_list-lifn2,     " 請求先
*                44  right_list-werks,     " プラント
*                54  right_list-ekorg,     " 購買組織
*                64  right_list-ekgrp,     " 購買グループ
*                73  right_list-gsber,     " 事業領域
*                80  right_list-zfbdt.     " 締め日
*    endloop.
*    uline.
***--- DEL 2002/05/29a (end)
***--- ADD 2002/05/29a (start)
describe table wrong_list lines w_list_cnt1.
if w_list_cnt1 > 0.
***--- ADD 2002/05/29a (end)
*   エラーデータの表題 & 見出し
write /.
write: /1  'エラーデータ'.
write /.
write: /1  '会社コード',
12 '暦年',
17 '仕入先コード',
31 '請求先',
42 'プラント',
52 '購買組織',
62 '購買GRP',
71 '事業領域',
*           83 '締日',          DEL 2002/06/14
83 '基準日',        "ADD 2002/06/14
92 'ステータス'.
uline.

*   エラーデータ各行の表示
loop at wrong_list.
fg_erout = '0'.
write: /4   wrong_list-bukrs,     " 会社コード
12  wrong_list-ykyear,    " 暦年
18  wrong_list-lifnr,     " 仕入先コード
31  wrong_list-lifn2,     " 請求先
44  wrong_list-werks,     " プラント
54  wrong_list-ekorg,     " 購買組織
64  wrong_list-ekgrp,     " 購買グループ
73  wrong_list-gsber,     " 事業領域
80  wrong_list-zfbdt.     " 締め日
if wrong_list-ct_erno > 0.
fg_erout = '1'.
write:  92 '請求データ不在'.
endif.
if wrong_list-ct_erfg > 0.
if fg_erout = '0'.
fg_erout = '1'.
write:  92 'チェックリスト未出力'.
else.
write: /92 'チェックリスト未出力'.
endif.
endif.
if wrong_list-ct_ercu > 0.
if fg_erout = '0'.
fg_erout = '1'.
write:  92 '通貨コード不一致'.
else.
write: /92 '通貨コード不一致'.
endif.
endif.
if wrong_list-ct_ervl > 0.
if fg_erout = '0'.
fg_erout = '1'.
write:  92 '金額不一致'.
else.
write: /92 '金額不一致'.
endif.
endif.
endloop.
uline.
endif. "ADD 2002/05/29a
***--- DEL 2002/05/29a (start)
*   write /.
*   write: /1 '請求データ該当件数',           29(4) ct_ttl210,  33 '件'.
*   write: /1 '請求合計データ該当件数',       29(4) ct_ttl220,  33 '件'.
*   write: /1 '請求データ確定更新件数',       29(4) ct_upd210,  33 '件'.
*   write: 38 '請求データ確定済件数',         68(4) ct_fix210,  72 '件'.
*   write: /1 '請求合計データ確定更新件数',   29(4) ct_upd220,  33 '件'.
*   write: 38 '請求合計データ確定済件数',     68(4) ct_fix220,  72 '件'.
*   write: /1 '請求データ確定解除件数',       29(4) ct_ccl210,  33 '件'.
*   write: 38 '請求データ確定解除済件数',     68(4) ct_nox210,  72 '件'.
*   write: 77 '請求データ照合済件数',         99(4) ct_mat210, 103 '件'.
*   write: /1 '請求合計データ確定解除件数',   29(4) ct_ccl220,  33 '件'.
*   write: 38 '請求合計データ確定解除済件数', 68(4) ct_nox220,  72 '件'.
*   write: /1 '請求データエラー件数',         29(4) ct_err210,  33 '件'.
*   write: /1 '請求合計データエラー件数',     29(4) ct_err220,  33 '件'.
***--- DEL 2002/05/29a (end)
***--- ADD 2002/06/03
write /.
write: /1 '請求データエラー件数',         29(4) ct_err210,  33 '件'.
write: /1 '請求合計データエラー件数',     29(4) ct_err220,  33 '件'.
***--- ADD 2002/06/03(END)
*----------------------------------------------------------------------*
*   FORM ENQUEUE/DEQUEUE_YK210
*   FORM ENQUEUE/DEQUEUE_YK220
*----------------------------------------------------------------------*
*       ロック処理/解除
*----------------------------------------------------------------------*
*   <- W_SUNRC: SY-SUBRC (ENQUEUE only)
*----------------------------------------------------------------------*

form enqueue_yk210 using w_subrc.
call function 'ENQUEUE_EY_YK210'
exporting
*2002/10/15 DEL START
*           mode_yk210     = 'E'
*           mandt          = sy-mandt
*           delflg         = space          " 削除フラグチェック
*2002/10/15 DEL END
bukrs          = i_seikyu-bukrs
ykyear         = i_seikyu-ykyear
*2002/10/15 MOD START
*           auddoc         = i_seikyu-bildoc
bildoc         = i_seikyu-bildoc
*2002/10/15 MOD END
exceptions
foreign_lock   = 1
system_failure = 2
others         = 3.

w_subrc = sy-subrc.
if w_subrc > 0.
message s635 with 'YK210' .
endif.
endform.

form dequeue_yk210.
loop at i_seikyu.
call function 'DEQUEUE_EY_YK210'
exporting
*2002/10/15 DEL START
*               mode_yk210 = 'E'
*               mandt      = sy-mandt
*               delflg     = space          " 削除フラグチェック
*2002/10/15 DEL END
bukrs      = i_seikyu-bukrs
ykyear     = i_seikyu-ykyear
*2002/10/15 MOD START
*               auddoc     = i_seikyu-bildoc
bildoc     = i_seikyu-bildoc
*2002/10/15 MOD END
exceptions
others     = 1.

if sy-subrc > 0.
message s636 with 'YK210' .
stop.
endif.
endloop.
endform.

form enqueue_yk220 using w_subrc.
call function 'ENQUEUE_EY_YK220'
exporting
mode_yk220     = 'E'
mandt          = sy-mandt
bukrs          = i_goukei-bukrs
ykyear         = i_goukei-ykyear
lifnr          = i_goukei-lifnr
lifn2          = i_goukei-lifn2
werks          = i_goukei-werks
ekorg          = i_goukei-ekorg
ekgrp          = i_goukei-ekgrp
gsber          = i_goukei-gsber
zfbdt          = i_goukei-zfbdt
exceptions
foreign_lock   = 1
system_failure = 2
others         = 3.

w_subrc = sy-subrc.
if w_subrc > 0.
message s635 with 'YK220' .
endif.
endform.

form dequeue_yk220.
loop at i_goukei.
call function 'DEQUEUE_EY_YK220'
exporting
mode_yk220     = 'E'
mandt          = sy-mandt
bukrs          = i_goukei-bukrs
ykyear         = i_goukei-ykyear
lifnr          = i_goukei-lifnr
lifn2          = i_goukei-lifn2
werks          = i_goukei-werks
ekorg          = i_goukei-ekorg
ekgrp          = i_goukei-ekgrp
gsber          = i_goukei-gsber
zfbdt          = i_goukei-zfbdt
exceptions
others         = 1.

if sy-subrc > 0.
message s636 with 'YK220' .
stop.
endif.
endloop.
endform.
*&---------------------------------------------------------------------*
*&      Form  SET_ZFBDT
*&---------------------------------------------------------------------*
*       締日の初期値セット 2002/03/18 add
*----------------------------------------------------------------------*
form set_zfbdt.
call function 'YK_ZFBDT_GET_BY_LFM1'
exporting
i_cord               = s_lifnr-low
i_ekorg              = s_ekorg-low
i_day                = sy-datum
importing
e_zfbdt_old          = p_zfbdt
exceptions
no_get_t052          = 1
no_good_getday       = 2
no_get_zterm         = 3
others               = 4.
p_ykyear = p_zfbdt(4).

endform.                    " SET_ZFBDT
*&---------------------------------------------------------------------*
*&      Form  SET_EIGYO
*&---------------------------------------------------------------------*
*       購買グループ初期値セット 2002/03/11 ADD  => MOD 2002/05/17a
*----------------------------------------------------------------------*
form set_eigyo.
tables lfm1.
clear lfm1.
*  select single ekgrp into s_ekgrp-low from lfm1
*   where lifnr = s_lifnr-low
*     and ekorg = s_ekorg-low.
*  if sy-subrc = 0.
*    s_ekgrp-sign   = 'I'.
*    s_ekgrp-option = 'EQ'.
*    append s_ekgrp.
*  endif.
data w_cnt type p.
describe table s_ekgrp lines w_cnt.
if p_chk1 = 'X' and w_cnt = 0.
select * from   lfm1
where  lifnr in s_lifnr
and  ekorg in s_ekorg.
s_ekgrp-low = lfm1-ekgrp.
s_ekgrp-sign  = 'I'.
s_ekgrp-option ='EQ'.
append s_ekgrp.
endselect.
endif.
endform.                    " SET_EIGYO
