***---------------------------------------------------------------------
** (c) Copyright 1998 OptiSystems Solutions LTD. All Rights Reserved  **
***---------------------------------------------------------------------
*-------------------------------------------------------------------
***INCLUDE YSQZDALC.
*-------------------------------------------------------------------
*&      Form  AA_MAIN
*&---------------------------------------------------------------------*
FORM AA_MAIN.
****
PERFORM PRE_AA_PREP.
STD-SGS = 's'.
PERFORM PRINT_STAT.

*******
ENDFORM.                    " AA_MAIN
*&---------------------------------------------------------------------*
*&   Event AT USER-COMAND
*&---------------------------------------------------------------------*
AT USER-COMMAND.
****
CASE SY-UCOMM.
*****
WHEN 'FANL'.  STD-SGO = 'a'.  PERFORM AA_MONITOR.
WHEN 'FDIS'.  STD-SGO = 'r'.  PERFORM AA_MONITOR.
****
*  WHEN 'FDIS'.  READ CURRENT LINE.
*
*            "    sy-sy-lisel
*                SUBMIT YMASQLPR  VIA SELECTION-SCREEN AND RETURN.
****
WHEN 'STBL'.  STD-SG_SORT = 't'.
STD-SGO = 'f'.  PERFORM AA_MONITOR.
****
WHEN 'SPRG'.  STD-SG_SORT = 'p'.
STD-SGO = 'f'.  PERFORM AA_MONITOR.
****
WHEN 'SDAT'.  STD-SG_SORT = 'd'.
STD-SGO = 'f'.  PERFORM AA_MONITOR.
****
WHEN 'SALL'.
CVD = 'X'.  STD-SGO = 'f'.  PERFORM AA_MONITOR.
WHEN 'SNOT'.
CVD = ' '.  STD-SGO = 'f'.  PERFORM AA_MONITOR.
****
WHEN 'BECK'.
STD-SGO = 'b'.
CLEAR SY-PFKEY.
PERFORM AA_MONITOR.
****
WHEN '%EX ' OR 'EXIT' OR 'RW  '.
SET USER-COMMAND 'BACK'.
****
WHEN OTHERS.
ENDCASE.
*&---------------------------------------------------------------------*
*&      Form  EXEC_ANAL
*&---------------------------------------------------------------------*
FORM AU_EXEC_ANAL.  "<-tb_lsql
DATA: NS LIKE SY-INDEX.
****
EXPORT P_DAT TB_TESQL FROM TB_LSQL TO MEMORY ID 'ZC'.
IF GS-DEB = 'y'.   BREAK-POINT.   ENDIF.
SUBMIT YSQZC000 AND RETURN.
IMPORT P_DAT TB_TESQL TO TB_LSQL FROM MEMORY ID 'ZC'.
*******
ENDFORM.                    " EXEC_ANAL
*&---------------------------------------------------------------------*
*&   Event AT LINE-SELECTION
*&---------------------------------------------------------------------*
AT LINE-SELECTION.
****
STD-SG_LIN = CVS.
STD-SGO = 'v'.  PERFORM AA_MONITOR.
****
*IF SY-PFKEY(3) = 'SUM'.
*   PERFORM AC_LINES.
*ELSE.
*   STD-SGS = 'd'.  PERFORM AC_LINES.  STD-SGS = ' '.
*ENDIF.
****
EXIT.
*&---------------------------------------------------------------------*
*&      Form  AC_LINES
*&---------------------------------------------------------------------*
FORM AC_LINES.
****
SY-LSIND = 1.
*if sy-pfkey = 'LIST'.   perform out_select.   exit.   endif.
*if sy-pfkey(3) = 'LIS' and std-sgs <> 'd'.
*   perform ac1_result_for_sql.
*   exit.
*endif.
**** SUM
CASE STD-SG_VLIST.
WHEN 'a'. SET PF-STATUS 'LISF'.
PERFORM LIST_FOR_ANL.
WHEN 'y'. SET PF-STATUS 'LISA'.
PERFORM LIST_AFTER_ANL.
*          PERFORM DB_LOAD_SQL USING 'FI'.
*WHEN 'p'. PERFORM DB_LOAD_SQL USING 'PR'.
*WHEN 'y'. PERFORM DB_LOAD_SQL USING 'AY'.
*WHEN 'n'. PERFORM DB_LOAD_SQL USING 'AN'.
*WHEN 'c'. PERFORM DB_LOAD_SQL USING 'CH'.
ENDCASE.
*******
ENDFORM.                    " AC_LINES
*&---------------------------------------------------------------------*
*&      Form  PRINT_LISTS
*&---------------------------------------------------------------------*
FORM PRINT_LISTS USING SGS.
****
CLEAR G_STATUS.
CASE SGS.
WHEN 'FI'.
*Vlad           write: / 'Programs for analysis'(014).
*Vlad      write: / '-------------------------------------------------'.
G_STATUS = 'FI'.
PERFORM PRINT_LINES TABLES TB_TESQL USING 'FI' TEXT-009.
WHEN 'CH'.
G_STATUS = 'CH'.
PERFORM PRINT_LINES TABLES TB_TESQL USING 'CH' TEXT-011.
WHEN 'AY'.
G_STATUS = 'AY'.
PERFORM PRINT_LINES TABLES TB_TESQL USING 'AY' TEXT-018.
ENDCASE.
*******
ENDFORM.                    " PRINT_LISTS
*&---------------------------------------------------------------------*
*&      Form  AA_MONITOR
*&---------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM AA_MONITOR.
****
CASE STD-SGS.
* statistic
WHEN 's'.
CASE STD-SGO.
WHEN 'v'.
IF STD-SG_LIN = ' '. EXIT. ENDIF.
STD-SGS = 'l'.   STD-SG_VLIST = STD-SG_LIN.
PERFORM AC_LINES.
WHEN 'b'.  SET USER-COMMAND 'BACK'.
WHEN 'r'.
READ CURRENT LINE.
IF CVS = ' '.
SUBMIT YMASQLPR  VIA SELECTION-SCREEN AND RETURN.
*                   perform db_load_sql using 'FI'.
*                   tb_lsql[] = tb_tesql[].
*                   perform au_exec_anal.  "<-tb_lsql
PERFORM PRINT_STAT.
*                    else.
*                      std-sgs = 'l'.   std-sg_vlist = std-sg_lin.
*                      perform ac_lines.
ENDIF.
WHEN 'f'.  PERFORM PRINT_STAT.
ENDCASE.
* list
WHEN 'l'.
CASE STD-SGO.
WHEN 'v'.
IF WSS = 0. EXIT. ENDIF.
IF STD-SG_LIN = '-'. EXIT. ENDIF.
PERFORM AR_RESULT_FOR_SQL.
IF STD-SGS <> 'd'.
PERFORM AC_LINES.
ENDIF.
WHEN 'b'.
STD-SGS = 's'.
PERFORM PRINT_STAT.
WHEN 'r'.
READ CURRENT LINE.
IF WSS = 0.
SUBMIT YMASQLPR  VIA SELECTION-SCREEN AND RETURN.
ELSE.
REFRESH TB_LSQL.
READ TABLE TB_TESQL INDEX WSS.
APPEND TB_TESQL TO TB_LSQL.
PERFORM AC_RESULT_LIST.  "<-tb_lsql
PERFORM AC_LINES.
ENDIF.
WHEN 'a'.
PERFORM READ_SQL_LIST.  "->tb_lsql
IF STD-KA_SQL = 0. EXIT. ENDIF.
PERFORM AU_EXEC_ANAL.  "<-tb_lsql   >-tb_lsql
*                    std-sgs = 'd'.
PERFORM AC_RESULT_LIST.  "<-tb_lsql
PERFORM AC_LINES.
WHEN 'f'.
PERFORM AC_LINES.
ENDCASE.
* details
*WHEN 'd'.
*         CASE STD-SGO.
*         WHEN 'v'.
*                    PERFORM AR_RESULT_FOR_DETAILS TABLES TB_LSQL.
*         WHEN 'b'.
*                    STD-SGS = 'l'.
*                    PERFORM AC_LINES.
*         WHEN 'a'.  "
*         WHEN 'f'.
*         ENDCASE.
ENDCASE.
*******
ENDFORM.                    " AA_MONITOR
*&---------------------------------------------------------------------*
*&      Form  AC_RESULT_LIST
*&---------------------------------------------------------------------*
FORM AC_RESULT_LIST.
* <-tb_lsql
DATA: TB_YSQ_SQL_EX LIKE YSQ_SQL_EX OCCURS 0.
****
TB_YSQ_SQL_EX[] = TB_LSQL[].
EXPORT TB_YSQ_SQL_EX TO MEMORY ID 'ZL'.
SUBMIT YMASQLPR WITH P_SAP = 'Z' AND RETURN.
EXIT.
*******************
SET PF-STATUS 'DETA'.
*write: / 'Results list of analisys.'.
*write: / '--------------------------------------------------------'.
*loop at tb_lsql.
PERFORM PRINT_LINES TABLES TB_LSQL USING 'res' TEXT-028.
*endloop.
*******
ENDFORM.                    " AC_RESULT_LIST
*&---------------------------------------------------------------------*
*&      Form  AR_RESULT_FOR_DETAILS
*&---------------------------------------------------------------------*
FORM AR_RESULT_FOR_DETAILS TABLES PTB_TESQL TYPE YSQZC_TB_TBL_EXP_SQL.
*   "<-tb_lsql
****
SY-LSIND = 2.
SY-TABIX = WSS.
READ TABLE PTB_TESQL INDEX SY-TABIX.
****
*if sy-pfkey = ''.
YSQ_SQL_EX = PTB_TESQL.
EXPORT YSQ_SQL_EX TO MEMORY ID 'ZL'.
SUBMIT YMASQLPR WITH P_SAP = 'Z' AND RETURN.
****
*endif.
*******
ENDFORM.                    " AR_RESULT_FOR_DETAILS
