*&-------------------------------------------------------------------
*& Report  ZF010200
*&-------------------------------------------------------------------
* [プログラム名]
*   ZF010200        支払実績リスト
*
* [処理概要]
*　　　支払実績リストを出力する
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2001/12/26   PSD T.SAITOH      新規開発　
*  2002/01/24   PSD T.SAITOH      伝票タイプ関連の追加
*  2002/01/24   PSD T.SAITOH      その他勘定の判定追加
*  2002/01/30   PSD T.SAITOH      事前相殺対応追加
*  2002/02/01   PSD T.SAITOH      相殺予定のみ不具合対応
*  2002/02/01   PSD T.SAITOH      部門詳細不具合対応
*  2002/02/01   PSD T.SAITOH      レイアウト変更
*  2002/02/02   PSD T.SAITOH      裏書手形見返対応追加
*  2002/02/04   PSD T.SAITOH      明細合計行の不具合対応
*  2002/02/04   PSD T.SAITOH      明細行支払条件／支払方法の不具合対応
*  2002/02/14   PSD T.SAITOH      項目位置変更
*  2002/02/14   PSD T.SAITOH      出力ファイルマイナス位置変更
*  2002/03/05   PSD T.SAITOH      仕入割引項目追加
*  2002/03/26   PSD T.SAITOH      支払基準日を決済日付に変更
*  2002/04/17   PSD T.SAITOH      ファイルで無駄な項目をクリア
*  2002/04/22   PSD T.SAITOH      アスタリスク選択時の不具合対応
*  2002/04/22〜2002/04/23
*               PSD T.SAITOH      支払計＝０かつ差額＜０を対象外
*                                 とする処理に変更
*  2002/04/22   PSD T.SAITOH      レイアウト調整
*  2002/06/20   PSD T.SAITOH      再移送
*  2002/09/12   PSD T.SAITOH      BSIK BSID 抽出ロジック修正
*  2002/09/12   PSD T.SAITOH      差額ロジック修正
*  2002/09/23   PSD T.SAITOH      ロジック改変　簡略化
*  2002/09/23   PSD T.SAITOH      BSAK→BSEGの関連条件を変更
*  2002/09/23   PSD T.SAITOH      集計ロジック改変3
*  2002/09/25   PSD T.SAITOH      仕入先マスタ名称２に変更
*                                【ソースは置換しただけ】
*  2002/09/25   PSD T.SAITOH      支払手形集計方法変更
*  2002/09/30   PSD T.YASUHARA    支払手形修正
*  2002/10/15   psd T.Imai        相殺金額抽出を変更
*  2002/10/28   PSD imai          相殺金額変更
*  2009/08/20   SOLFIS M.MAEKAWA  ファクタリング対応
*  2010/05/26   Solfis R.Hata     ファイル入力チェック修正
*  2012/08/08   ISID              ES-UP
*&-------------------------------------------------------------------
REPORT  ZF010200
*---MODIFY START PSD T.SAITOH 2002/03/05 ---------------------------*
*       LINE-SIZE 170
LINE-SIZE 185
*---MODIFY END   PSD T.SAITOH 2002/03/05 ---------------------------*
LINE-COUNT 58(1)
NO STANDARD PAGE HEADING.
*===================================================================*
* バリアント関連宣言
*===================================================================*
*--- バリアント情報取得TBL
DATA GT_VAR TYPE TABLE OF RSPARAMS.
DATA GF_VAR TYPE RSPARAMS.
*--- バリアント関連設定項目
DATA :G_HKONT LIKE BSIK-HKONT,                     "各勘定の型参照
G_BLART LIKE BSIK-BLART.                     "伝票タイプの型参照
DATA :G_ZFBDT LIKE BSIK-ZFBDT,                     "支払日
G_LIFNR LIKE BSIK-LIFNR.                     "仕入先コード
*CONSTANTS: CNS_VALID(128) TYPE C VALUE 'TEST',    "バリアントＩＤ
*           CNS_REPID(128) TYPE C VALUE 'ZF010200'."プログラムＩＤ
*===================================================================*
* 処理関連宣言
*===================================================================*
*--- ファイル名取得関連項目
DATA:  W_DEF_FILENM(255) TYPE C,                       "PCﾌｧｲﾙ名
PC_FILENM         LIKE RLGRAP-FILENAME.         "ファイル名

DATA: W_DEF_PATH(2)     TYPE C VALUE '',             "ドライブ
* Mod ES-UP 2012/08/16 -->
*      W_MASK(22)        TYPE C VALUE
*             ',*.TXT,*.TXT,*.*,*.*.',                  "ファイルの種類
W_MASK(29)        TYPE C VALUE
'テキストファイル(*.TXT)|*.TXT',                  "ファイルの種類
* Mod ES-UP 2012/08/16 <--
W_TITLE(14)       TYPE C VALUE 'ファイル名指定',  "表題
W_FILELENGTH(20)  TYPE C.                        "バイト数


*--- 定数項目
CONSTANTS:
CNS_INIT_RECNUM  TYPE P VALUE 4,"ヘッダレコード数
CNS_WAERK        LIKE VBAP-WAERK VALUE 'JPY',
CNS_REPTITLE(10) TYPE C VALUE '支払実績表',
CNS_FILENAME(6) TYPE C VALUE '出力先',
CNS_BUKRS(10)   TYPE C VALUE '会社コード',
CNS_BUKRSC(12)  TYPE C VALUE '会社コード：',
CNS_PAYDAY(8)   TYPE C VALUE '支払日：',
CNS_SAIMU(8)    TYPE C VALUE '債務勘定',
CNS_SAIKEN(8)   TYPE C VALUE '債権勘定',
CNS_GENKIN(8)   TYPE C VALUE '現金勘定',
CNS_YOKIN(8)    TYPE C VALUE '預金勘定',
*---MODIFY START SOLFIS M.MAEKAAWA 2009/08/20-----------------------*
*        CNS_SHTEGATA(8) TYPE C VALUE '支払手形',
CNS_SHTEGATA(9) TYPE C VALUE '手形･ﾌｧｸﾀ',
*---MODIFY END   SOLFIS M.MAEKAAWA 2009/08/20-----------------------*
CNS_SOUSAI(4)   TYPE C VALUE '相殺',
CNS_ETC(6)      TYPE C VALUE 'その他',
CNS_LFA1_J(30)  TYPE C VALUE '仕入先マスタ（一般セクション）',
CNS_LFB1_J(30)  TYPE C VALUE '仕入先マスタ（会社コード）',
CNS_BSIK_J(40)  TYPE C VALUE '会計管理：仕入先二次索引(未決済)'
,
CNS_BSID_J(40)  TYPE C VALUE '会計管理：得意先二次索引(未決済)'
,
CNS_BSAK_J(40)  TYPE C VALUE '会計管理：仕入先二次索引(決済)',
CNS_BSAD_J(40)  TYPE C VALUE '会計管理：得意先二次索引(決済)',
CNS_BSEG_J(40)  TYPE C VALUE '会計伝票明細',
CNS_ST_NO(3)    TYPE C VALUE 'No.',
CNS_ST_LIFNR(6) TYPE C VALUE '仕入先',
CNS_ST_ZTERM(8) TYPE C VALUE '支払条件',
CNS_ST_ZWELS(8) TYPE C VALUE '支払方法',
CNS_ST_ZUONR(6) TYPE C VALUE 'ソート',
CNS_ST_AP(6)    TYPE C VALUE '買掛金',
CNS_ST_AR(6)    TYPE C VALUE '売掛金',
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*        CNS_ST_CASH(4)  TYPE C VALUE '現金',
CNS_ST_CASH(8)  TYPE C VALUE '裏書手形',
*---MODIFY END   PSD T.SAITOH 2002/02/14 ---------------------------*
CNS_ST_BNKTR(8) TYPE C VALUE '銀行振込',
*---MODIFY START SOLFIS M.MAEKAAWA 2009/08/20-----------------------*
*        CNS_ST_ACCP(13) TYPE C VALUE '支払手形',
CNS_ST_ACCP(13) TYPE C VALUE '手形･ﾌｧｸﾀ',
*---MODIFY END   SOLFIS M.MAEKAAWA 2009/08/20-----------------------*
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
CNS_ST_DISCNT(8) TYPE C VALUE '仕入割引',
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
CNS_ST_FAXNUM(10) TYPE C VALUE 'ＦＡＸ番号',
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*
CNS_ST_ETC(6)   TYPE C VALUE 'その他',
CNS_ST_PSUMT(6) TYPE C VALUE '支払計',
CNS_ST_OFFSET(4) TYPE C VALUE '相殺',
CNS_ST_DIFFER(4) TYPE C VALUE '差額',
CNS_KARA(2)      TYPE C VALUE '〜',
CNS_TOTAL_J(6)  TYPE C VALUE '＊計＊',
CNS_LTOTAL_J(8) TYPE C VALUE '＊合計＊',
CNS_X           TYPE C VALUE 'X',"BSAKフラグ
CNS_H           TYPE C VALUE 'H',"借方貸借フラグ
CNS_S           TYPE C VALUE 'S',"貸方貸借フラグ
*     ADD START PSD T.SAITOH 2002/01/30 仕様変更対応
CNS_AB          LIKE BSAK-BLART VALUE 'AB'"伝票タイプ
*     ADD END   PSD T.SAITOH 2002/01/30 仕様変更対応
.
* Mod ES-UP 2012/08/16 -->
*CONSTANTS: CNSX_TAB     TYPE X VALUE '09'."TABコード
constants: CNSX_TAB type string value CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.

* Mod ES-UP 2012/08/16 <--
CONSTANTS: CNSX_SPACE   TYPE X VALUE '20'."SPACEコード

*--- 型の定義
* 仕入先マスタ（一般セクション）----------------------------*
TYPES: BEGIN OF TYP_LFA1,
LIFNR LIKE LFA1-LIFNR ,"仕入先コード
*---MODIFY START PSD T.SAITOH 2002/09/25 ---------------------------*
*  NAME1 LIKE LFA1-NAME1,"仕入先名
NAME2 LIKE LFA1-NAME2,"仕入先名
*---MODIFY END   PSD T.SAITOH 2002/09/25 ---------------------------*
KUNNR LIKE LFA1-KUNNR,"得意先コード
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
TELFX LIKE LFA1-TELFX,"仕入先ＦＡＸ番号
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*
END OF TYP_LFA1.

DATA: GT_LFA1 TYPE TABLE OF TYP_LFA1,"仕入先マスタA内部ＴＢＬ
GF_LFA1 TYPE TYP_LFA1         ,"仕入先マスタA構造
GT_LFA1_EXCL TYPE TABLE OF TYP_LFA1,"仕入先マスタ得意先
GF_LFA1_EXCL TYPE TYP_LFA1.         "仕入先マスタ得意先

* 仕入先マスタ（会社コード）--------------------------------*
TYPES: BEGIN OF TYP_LFB1,
BUKRS LIKE LFB1-BUKRS,"会社コード
LIFNR LIKE LFB1-LIFNR,"仕入先コード
ZWELS LIKE LFB1-ZWELS,"支払方法
ZTERM LIKE LFB1-ZTERM,"支払条件
END OF TYP_LFB1.

DATA: GT_LFB1 TYPE TABLE OF TYP_LFB1,"仕入先マスタB内部ＴＢＬ
GF_LFB1 TYPE TYP_LFB1         ."仕入先マスタB構造
* Header of Payment actual result matrix -----------------*
* 支払実績リストヘッダ項目[共用]
TYPES: BEGIN OF TYP_HOFPARM,
H_BUKRS(18)     TYPE C,"文字列”会社コード”
BUKRS(13)       TYPE C,"会社コード：画面入力値
BUTXT(20)       TYPE C,"会社名
H_ZFBDT(13)     TYPE C,"文字列”支払日”
ZFBDTFM(13)     TYPE C,"支払日(From)：画面入力値
M_MARK(13)      TYPE C,"文字列”〜”
ZFBDTTO(13)     TYPE C,"支払日(To)：画面入力値
H_NUM(13)       TYPE C,"文字列”No.”
H_LIFNR(13)     TYPE C,"文字列”仕入先”
H_ZTERM(13)     TYPE C,"文字列”支払条件”
H_ZWELS(13)     TYPE C,"文字列”支払方法”
H_ZUONR(13)     TYPE C,"文字列”ソート”
H_AP(13)        TYPE C,"文字列”買掛金”
H_AR(13)        TYPE C,"文字列”売掛金”
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*  H_CASH(13)      TYPE C,"文字列”現金”
H_CASH(13)      TYPE C,"文字列”裏書手形”
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
H_BNKTR(13)     TYPE C,"文字列”銀行振込”
H_ACCP(13)      TYPE C,"文字列”支払手形”
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
H_DISCNT(13)    TYPE C,"文字列”仕入割引”
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
H_ETC(13)       TYPE C,"文字列”その他”
H_PSUMT(13)     TYPE C,"文字列”支払計”
H_OFFSET(13)    TYPE C,"文字列”相殺”
H_DIFFER(13)    TYPE C,"文字列”差額”
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
H_FAX(30)       TYPE C,"文字列”ＦＡＸ番号”
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*
END OF TYP_HOFPARM.

DATA: GT_HOFPARM TYPE TABLE OF TYP_HOFPARM,"支払実績ＬＨ情報内部ＴＢＬ
GF_HOFPARM TYPE TYP_HOFPARM.         "支払実績ＬＨ情報構造
* Payment actual result matrix ---------------------------*
* 支払実績リスト明細[ファイル用→帳票用]
TYPES: BEGIN OF TYP_PARM,
F01(20)      TYPE C,"番号
F02(20)      TYPE C,"支払先／ソート／計
F03(35)      TYPE C,"支払先名称／買掛金
F04(35)      TYPE C,"売掛金
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*  F05(35)      TYPE C,"現金
F05(35)      TYPE C,"裏書手形
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
F06(35)      TYPE C,"支払条件／銀行振込
F07(35)      TYPE C,"支払方法／支払手形
F08(35)      TYPE C,"その他
F09(35)      TYPE C,"支払計
F10(35)      TYPE C,"相殺
F11(35)      TYPE C,"差額
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
F12(35)      TYPE C,"仕入割引
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
F03P(7)     TYPE P,"支払先名称／買掛金:帳票用データ
F04P(7)     TYPE P,"売掛金           :帳票用データ
F05P(7)     TYPE P,"現金             :帳票用データ
F06P(7)     TYPE P,"支払条件／銀行振込:帳票用データ
F07P(7)     TYPE P,"支払方法／支払手形:帳票用データ
F08P(7)     TYPE P,"その他           :帳票用データ
F09P(7)     TYPE P,"支払計           :帳票用データ
F10P(7)     TYPE P,"相殺             :帳票用データ
F11P(7)     TYPE P,"差額             :帳票用データ
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
F12P(7)     TYPE P,"仕入割引         ：帳票用データ
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
END OF TYP_PARM.

DATA: GT_PARM TYPE TABLE OF TYP_PARM,"支払実績Ｌ明細情報内部ＴＢＬ
GF_PARM TYPE TYP_PARM.         "支払実績Ｌ明細情報構造

* 支払実績リスト明細[ダウンロード用]
TYPES: BEGIN OF TYP_PARM_DW,
F01(20)      TYPE C,"番号
F02(20)      TYPE C,"支払先／ソート／計
F03(35)      TYPE C,"支払先名称／買掛金
F04(20)      TYPE C,"売掛金
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*  F05(20)      TYPE C,"現金
F05(20)      TYPE C,"裏書手形
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
F06(20)      TYPE C,"支払条件／銀行振込
F07(20)      TYPE C,"支払方法／支払手形
F08(20)      TYPE C,"その他
F09(20)      TYPE C,"支払計
F10(20)      TYPE C,"相殺
F11(20)      TYPE C,"差額
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
F12(20)      TYPE C,"仕入割引
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
END OF TYP_PARM_DW.

DATA: GT_PARM_DW TYPE TABLE OF TYP_PARM_DW ,"支払実績Ｌ明細情報内部ＴＢ
GF_PARM_DW TYPE TYP_PARM_DW.         "支払実績Ｌ明細情報構造

* Payment actual result matrix ---------------------------*
* 支払実績リスト総合計[ファイル＆帳票用]
TYPES: BEGIN OF TYP_PARMT,
F01(14)      TYPE P,"番号
F02(20)      TYPE C,"＊合計＊（文字列）
F03(7)       TYPE P,"買掛金
F04(7)       TYPE P,"売掛金
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*  F05(7)       TYPE P,"現金
F05(7)       TYPE P,"裏書手形
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
F06(7)       TYPE P,"銀行振込
F07(7)       TYPE P,"支払手形
F08(7)       TYPE P,"その他
F09(7)       TYPE P,"支払計
F10(7)       TYPE P,"相殺
F11(7)       TYPE P,"差額
F12(7)       TYPE P,"仕入割引
END OF TYP_PARMT.

DATA: GT_PARMT TYPE TABLE OF TYP_PARMT,"支払実績Ｌ総合計情報内部ＴＢＬ
GF_PARMT TYPE TYP_PARMT.         "支払実績Ｌ総合計情報構造

* Payment actual result matrix for process -----------------------*
* 支払実績リスト処理用
TYPES: BEGIN OF TYP_PARMPRO,
LIFNR  LIKE LFB1-LIFNR,"仕入先コード
ZUONR  LIKE BSID-ZUONR,"ソートキー
BUKRS  LIKE LFB1-BUKRS,"会社コード
ZFBDT  LIKE BSID-ZFBDT,"支払日
NAME2  LIKE LFA1-NAME2,"仕入先名
KUNNR  LIKE LFA1-KUNNR,"得意先コード
AUGDT  LIKE BSAK-AUGDT,"決済日付
AUGBL  LIKE BSAK-AUGBL,"決済伝票
BUDAT  LIKE BSAK-BUDAT,"転記日付
SHKZG  LIKE BSAK-SHKZG,"借方／貸借フラグ
DMBTR  LIKE BSAK-DMBTR,"国内通貨額
HKONT  LIKE BSAK-HKONT,"Ｇ／Ｌ勘定
ZWELS  LIKE LFB1-ZWELS,"支払方法
ZTERM  LIKE LFB1-ZTERM,"支払条件
FBSAK  TYPE C,         "BSAKフラグ（BSAKから取得）
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
TELFX LIKE LFA1-TELFX,"仕入先ＦＡＸ番号
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*
END OF TYP_PARMPRO.

DATA: GT_PARMPRO TYPE TABLE OF TYP_PARMPRO,"支払実績Ｌ処理情報内部TBL
GF_PARMPRO TYPE TYP_PARMPRO.         "支払実績Ｌ処理情報構造
*--- APPEND START PSD T.SATIOH 2002/02/01
DATA: GT_CP_PARMPRO TYPE TABLE OF TYP_PARMPRO,"支払実績L処理情報内部TBL
GF_CP_PARMPRO TYPE TYP_PARMPRO.         "支払実績Ｌ処理情報構造
*--- APPEND END   PSD T.SATIOH 2002/02/01

*---APPEND START PSD T.SAITOH 2002/09/23 ---------------------------*
* 最終集計用退避用
DATA: GT_TMP_PARMPRO TYPE TABLE OF TYP_PARMPRO,
GF_TMP_PARMPRO TYPE          TYP_PARMPRO.
*---APPEND END   PSD T.SAITOH 2002/09/23 ---------------------------*

* 支払金種別集計用 -------------------------------------------------*
TYPES: BEGIN OF TYP_PKIND,
LIFNR(14)  TYPE P,"仕入先コード
AP(14)     TYPE P,"買掛金
AR(14)     TYPE P,"売掛金
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*  CASH(14)   TYPE P,"現金
CASH(14)   TYPE P,"裏書手形
*---MODIFY END   PSD T.SAITOH 2002/02/14 ---------------------------*
BNKTR(14)  TYPE P,"銀行振込
LACCP(14)  TYPE P,"支払手形
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
DISCNT(14) TYPE P,"仕入割引
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
ETC(14)    TYPE P,"その他
PSUMT(14)  TYPE P,"支払計
OFFSET(14) TYPE P,"相殺
DIFFER(14) TYPE P,"差額
END OF TYP_PKIND.

DATA: GT_PKIND TYPE TABLE OF TYP_PKIND,"支払金種別集計用内部ＴＢＬ
GF_PKIND TYPE TYP_PKIND.         "支払金種別集計用構造
* --- ファイルイメージ
TYPES:BEGIN OF TYP_FILE_IMAGE,"ファイルイメージ
FLINE(255) TYPE C,
END OF TYP_FILE_IMAGE.

DATA: GT_FILE_IMAGE TYPE TABLE OF TYP_FILE_IMAGE,"ファイルイメージ
GF_FILE_IMAGE TYPE TYP_FILE_IMAGE.         "FILE IMAGE LINE

* 共通債務／債権読込用内部ＴＢＬ ------------------------------------*
TYPES: BEGIN OF TYP_BSXX,
LIFNR LIKE BSIK-LIFNR,"仕入先コード
KUNNR LIKE BSIK-LIFNR,"得意先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
* --- ADD START PSD T.SAITOH 2002/01/30 仕様変更対応
BLART LIKE BSAK-BLART,"伝票タイプ
* --- ADD END   PSD T.SAITOH 2002/01/30 仕様変更対応
END OF TYP_BSXX.

*10/10 START 相殺用内部テーブル
TYPES: BEGIN OF TYP_BSXZ,
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
LIFNR LIKE BSIK-LIFNR,"仕入先コード
KUNNR LIKE BSIK-LIFNR,"得意先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
BLART LIKE BSAK-BLART,"伝票タイプ
END OF TYP_BSXZ.
*10/10 END
*---APPEND START PSD T.SAITOH 2002/09/23 ---------------------------*
* 回転用
TYPES: BEGIN OF TYP_BSXK,
LIFNR LIKE BSIK-LIFNR,"仕入先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
BLART LIKE BSAK-BLART,"伝票タイプ
KUNNR LIKE BSIK-LIFNR,"得意先コード
END OF TYP_BSXK.

DATA: GT_TMP_BSXK TYPE TABLE OF TYP_BSXK,
GF_TMP_BSXK TYPE          TYP_BSXK.

TYPES: BEGIN OF TYP_BSXD,
KUNNR LIKE BSIK-LIFNR,"得意先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
BLART LIKE BSAK-BLART,"伝票タイプ
LIFNR LIKE BSIK-LIFNR,"仕入先コード
END OF TYP_BSXD.

DATA: GT_TMP_BSXD TYPE TABLE OF TYP_BSXD,
GF_TMP_BSXD TYPE          TYP_BSXD.

TYPES: BEGIN OF TYP_BSEG,
LIFNR LIKE BSIK-LIFNR,"仕入先コード
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
KUNNR LIKE BSIK-LIFNR,"得意先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
BLART LIKE BSAK-BLART,"伝票タイプ
END OF TYP_BSEG.

DATA: GT_TMP_BSEG TYPE TABLE OF TYP_BSEG,
GF_TMP_BSEG TYPE          TYP_BSEG.

*---APPEND END   PSD T.SAITOH 2002/09/23 ---------------------------*
*10/10 start
DATA G_SOUSAI    LIKE KNKK-KLIMK. "相殺計算用（伝票の相殺額）
DATA G_YOTEI     LIKE KNKK-KLIMK. "相殺計算用（伝票の相殺額）
DATA G_SOUSAI_1  LIKE KNKK-KLIMK. "相殺計算用（仕入先別合計）
DATA G_YOTEI_1   LIKE KNKK-KLIMK. "相殺計算用（仕入先別合計）
*10/10 end


DATA: GT_BSIK TYPE TABLE OF TYP_BSXX,"債務データ未決済内部ＴＢＬ
GF_BSIK TYPE TYP_BSXX.         "債務データ未決済構造
DATA: GT_BSID TYPE TABLE OF TYP_BSXX,"債権データ未決済内部ＴＢＬ
GF_BSID TYPE TYP_BSXX.         "債権データ未決済構造
DATA: GT_BSAK TYPE TABLE OF TYP_BSXX,"債務データ決済内部ＴＢＬ
GF_BSAK TYPE TYP_BSXX.         "債務データ決済構造
DATA: GT_BSAD TYPE TABLE OF TYP_BSXX,"債権データ決済内部ＴＢＬ
GF_BSAD TYPE TYP_BSXX.         "債権データ決済構造
DATA: GT_BSEG TYPE TABLE OF TYP_BSXX,"会計伝票内部ＴＢＬ
GF_BSEG TYPE TYP_BSXX.         "会計伝票構造
*10/10 START 相殺用内部テーブル
DATA: GT_BSEG2 TYPE TABLE OF TYP_BSXZ,"会計伝票内部ＴＢＬ
GF_BSEG2 TYPE TYP_BSXZ.         "会計伝票構造
*10/10 END
*---APPEND START PSD T.SAITOH 2002/04/22 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/09/23 ---------------------------*
* BSAKからBSEGを読みに行くデータの紐付く元データ格納用
DATA: GT_BSAK_AUGDT TYPE TABLE OF TYP_BSXX,"債務データ決済内部ＴＢＬ
GF_BSAK_AUGDT TYPE TYP_BSXX.         "債務データ決済構造
*---APPEND END   PSD T.SAITOH 2002/09/23 ---------------------------*


* アスタリスク不具合対応２
TYPES: BEGIN OF TYP_BSAD,
KUNNR LIKE BSIK-LIFNR,"得意先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
BLART LIKE BSAK-BLART,"伝票タイプ
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
LIFNR LIKE BSIK-LIFNR,"仕入先コード
END OF TYP_BSAD.

DATA: GT_WORK_BSAD TYPE TABLE OF TYP_BSAD,"集計不具合対策用
GF_WORK_BSAD TYPE TYP_BSAD.         "集計不具合対策用
*---APPEND END   PSD T.SAITOH 2002/04/22 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/04/22 ---------------------------*
* アスタリスク不具合対応３
TYPES: BEGIN OF TYP_BSAK,
LIFNR LIKE BSIK-LIFNR,"仕入先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
BLART LIKE BSAK-BLART,"伝票タイプ
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
KUNNR LIKE BSIK-LIFNR,"得意先コード
END OF TYP_BSAK.

DATA: GT_WORK_BSAK TYPE TABLE OF TYP_BSAK,"集計不具合対策用
GF_WORK_BSAK TYPE TYP_BSAK.         "集計不具合対策用
*---APPEND END   PSD T.SAITOH 2002/04/22 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/04/22 ---------------------------*
* 支払計＝０かつ差額＜０を対象外に変更
TYPES: BEGIN OF TYP_OUTOFLIST,
NUMBER(20) TYPE C,"対象外リスト番号
END OF TYP_OUTOFLIST.

DATA: GT_OUTLIST TYPE TABLE OF TYP_OUTOFLIST,"対象外ファイルテーブル
GF_OUTLIST TYPE TYP_OUTOFLIST.
*---APPEND END   PSD T.SAITOH 2002/04/22 ---------------------------*


*--- 共通項目
DATA: CNT_NUM(4)     TYPE N.          "番号採番
*DATA: GF_TMP_PARMPRO TYPE TYP_PARMPRO."前レコード
DATA: G_AP(14)       TYPE P,          "買掛金
G_AR(14)       TYPE P.          "売掛金
DATA: G_FLG_NEW  TYPE C,              "at new処理用フラグ
G_FLG_END  TYPE C,              "AT END処理フラグ
*      G_FLG_LAST TYPE C,              "AT LAST処理フラグ
*      G_FLG_NEW_ZUONR TYPE C,         "NEW ソートキーフラグ
G_FLG_END_ZUONR TYPE C.         "END ソートキーフラグ
* DATA: G_FLG_NEW_OK TYPE C.            "仕入先ブレイク処理済み
*--- 汎用モジュール&ファイル関連等(ショートダンプ対応用)
DATA: G_FILENAME   TYPE RLGRAP-FILENAME,"ダウンロードファイル名
G_REFILENAME TYPE RLGRAP-FILENAME."パスなしファイル名
*---MODIFY START PSD T.SAITOH 2002/03/06 ---------------------------*
*DATA: OPEN_FILE TYPE RLGRAP-FILENAME.   "ＡＰサーバー格納ファイル名
*---MODIFY END   PSD T.SAITOH 2002/03/06 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/04/22 ---------------------------*
* 支払計＝０かつ差額＜０を対象外に変更
* ローカル用
DATA:LT_PARM TYPE TABLE OF TYP_PARM,"出力用の編集用
LF_PARM TYPE TYP_PARM,         "集計用
L_SUBRC LIKE SY-SUBRC,         "リターン値
L_NUMBER(4) TYPE N.            "正規リスト番号
*---APPEND END   PSD T.SAITOH 2002/04/22 ---------------------------*

*---APPEND START PSD T.SAITOH 2002/09/25 ---------------------------*
* 支払手形集計用
DATA: GT_BSIK_BILL TYPE TABLE OF TYP_BSAK,"支払手形
GF_BSIK_BILL TYPE TYP_BSAK.         "支払手形
*---APPEND END   PSD T.SAITOH 2002/09/25 ---------------------------*

*--- プッシュボタン用
TABLES SSCRFIELDS.
*===================================================================*
* 選択画面定義
*===================================================================*
PARAMETERS: PR_BUKRS LIKE T001-BUKRS MEMORY ID BUK OBLIGATORY.
"会社ＣＤ

SELECT-OPTIONS: S_ZFBDT FOR G_ZFBDT OBLIGATORY, "支払日
S_LIFNR FOR G_LIFNR OBLIGATORY. "仕入先コード

PARAMETERS: PR_DETL AS CHECKBOX,     "部門詳細
PR_REP  AS CHECKBOX,     "レポートのみ
PR_OFFEO AS CHECKBOX,    "相殺予定のみ
pr_rdl RADIOBUTTON GROUP RB1,   "ローカルに出力
PR_FILE1(40)  TYPE C,
"参照しない場合のパス名＋ファイル名
PR_FILE2 LIKE RTERM-FILE NO-DISPLAY.
"参照した場合のパス名＋ファイル名
SELECTION-SCREEN PUSHBUTTON 78(4) BUTTON USER-COMMAND GETFNAME.


*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
PARAMETERS: pr_rds RADIOBUTTON GROUP RB1,   "サーバに出力
PR_SFILE LIKE RLGRAP-FILENAME."APサーバ格納先
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*

SELECTION-SCREEN BEGIN OF BLOCK DEBT
WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS: S_DEBT  FOR G_HKONT OBLIGATORY, "債務勘定
S_BLDT  FOR G_BLART OBLIGATORY, "伝票タイプ（債務）
S_CRDT  FOR G_HKONT OBLIGATORY, "債券勘定
S_BLCT  FOR G_BLART OBLIGATORY. "伝票タイプ（債権）

SELECTION-SCREEN END   OF BLOCK DEBT.

SELECTION-SCREEN BEGIN OF BLOCK PAY
WITH FRAME TITLE TEXT-002.
SELECT-OPTIONS: S_CASH  FOR G_HKONT OBLIGATORY, "現金勘定
S_DEPS  FOR G_HKONT OBLIGATORY, "預金勘定
S_BLPY  FOR G_HKONT OBLIGATORY, "支払手形
S_OFFEO FOR G_HKONT OBLIGATORY, "相殺
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
S_DCNT  FOR G_HKONT OBLIGATORY, "仕入割引
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
S_ETC   FOR G_HKONT OBLIGATORY. "その他
*---APPEND START PSD T.SAITOH 2002/09/23 ---------------------------*
SELECT-OPTIONS  S_BLBSEG  FOR G_BLART.          "伝票タイプ[BSEG]
*---APPEND END   PSD T.SAITOH 2002/09/23 ---------------------------*
SELECTION-SCREEN END   OF BLOCK PAY.

AT SELECTION-SCREEN.
* 参照ボタンのチェック
IF SSCRFIELDS-UCOMM = 'GETFNAME'.
PERFORM FRM_WS_FILENAME_GET.
PR_FILE2 = PC_FILENM.
PR_FILE1 = PR_FILE2+0(40).
ELSE.
PR_FILE2 = PR_FILE1.
PERFORM FRM_CHECK_T001 USING PR_BUKRS.   "会社コード存在チェック
PERFORM FRM_CHECK_SKB1 USING PR_BUKRS.   "各種勘定チェック
ENDIF.

*********************************************************************
* INITIALIZATION
*********************************************************************
INITIALIZATION.
BUTTON = TEXT-003.
*---DELETE START PSD T.SAITOH 2002/09/22 ---------------------------*
*  PERFORM FRM_RS_VARIANT.  "バリアントの読込処理
*  PERFORM FRM_VARIANT_SET. "バリアントの設定処理
*---DELETE END   PSD T.SAITOH 2002/09/22 ---------------------------*

*********************************************************************
* TOP-OF-PAGE
*********************************************************************
TOP-OF-PAGE.

PERFORM FRM_H_FIREP USING CNS_REPTITLE.

*********************************************************************
* END-OF-PAGE
*********************************************************************
*---APPEND START PSD T.SAITOH 2002/04/23 ---------------------------*
END-OF-PAGE.
PERFORM FRM_SY_ULINE.
*---APPEND END   PSD T.SAITOH 2002/04/23 ---------------------------*

*********************************************************************
* START-OF-SELECTION
*********************************************************************
START-OF-SELECTION.
* MAIN PROCESS
PERFORM FRM_CHECK_REPONLY."出力先入力チェック
* 「相殺予定のみ」でないとき
IF PR_OFFEO <> CNS_X.
PERFORM FRM_GET_LFA1.     "仕入先マスタ・得意先コード取得
* 「相殺予定のみ」のとき
ELSE.
PERFORM FRM_GET_LFA2.     "得意先コードがない場合省く
ENDIF.

PERFORM FRM_GET_LFB1.     "支払方法・支払条件取得
PERFORM FRM_H_SETDATE.    "ヘッダ支払日Ｆ＆Ｔの設定
PERFORM FRM_H_SETETC.     "ヘッダその他の設定

PERFORM FRM_GET_BSIK.     "債権データ（未決済）抽出処理
PERFORM FRM_COM_BSIK.     "債権データ（未決済）集計処理

PERFORM FRM_GET_BSID.     "債務データ（未決済）抽出処理
PERFORM FRM_COM_BSID.     "債務データ（未決済）集計処理

PERFORM FRM_GET_BSAK.     "債権データ（決済）抽出処理
PERFORM FRM_COM_BSAK.     "債権データ（決済）集計処理

PERFORM FRM_GET_BSAD.     "債務データ（決済）抽出処理
PERFORM FRM_COM_BSAD.     "債務データ（決済）集計処理

*---APPEND START PSD T.SAITOH 2002/09/23 ---------------------------*
PERFORM FRM_GET_BSAK_AUGDT.
*---APPEND END   PSD T.SAITOH 2002/09/23 ---------------------------*

PERFORM FRM_GET_BSEG.     "決済伝票明細抽出
* Accounts receivable check
* 「相殺予定のみ」の時
IF PR_OFFEO = CNS_X.
PERFORM FRM_AR_CHECKAND.
ENDIF.
* COMPUTE PROCESS
PERFORM FRM_COM_CRDB.     "債権／債務集計処理+決済伝票集計
PERFORM FRM_ZERO_CHECK.
PERFORM FRM_PUT_SUM.      "総合計を追加

*---APPEND START PSD T.SAITOH 2002/04/22 ---------------------------*
* 支払計＝０　AND 　差額＜０　のときは対象外とする
PERFORM FRM_OUT_OF_THE_TARGET.
PERFORM FRM_ZERO_CHECK.
*---APPEND END   PSD T.SAITOH 2002/04/22 ---------------------------*

* DOWNLOAD PROCESS
PERFORM FRM_LIST_DOWNLOAD."支払実績リストダウンロード

* FILE OPEN PROCESS
PERFORM FRM_LIST_FILE_UP_LOAD."ファイル処理

* MESSAGE PROCESS
PERFORM FRM_AFTER_MESSAGE."メッセージ処理

* OUTPUT PROCESS
PERFORM FRM_SCR_WRITE.    "帳票出力（画面）

*&------------------------------------------------------------------*
*&      Form  frm_time_check
*&------------------------------------------------------------------*
*       テスト用処理時間測定
*-------------------------------------------------------------------*
*  -->  p_flg_st   'X':計測開始 '':計測終了
*-------------------------------------------------------------------*
FORM FRM_TIME_CHECK USING P_FLG_ST.
DATA:L_TIME TYPE P.

GET RUN TIME FIELD L_TIME.
IF P_FLG_ST = SPACE.
WRITE:/'計測時間は[',L_TIME,']でした'.
ENDIF.

ENDFORM.                    " frm_time_check
*&------------------------------------------------------------------*
*&      Form  FRM_TEST_WRITE
*&------------------------------------------------------------------*
*       画面出力
*-------------------------------------------------------------------*
FORM FRM_SCR_WRITE.
*  DATA: TMP_MOD TYPE P.
DATA: TMP_NUM(4) TYPE N."採番された前明細番号

* 支払実績リストファイル出力用完成済内部ＴＢＬ
LOOP AT GT_PARM INTO GF_PARM.
*   ファイル出力用ヘッダ部は読み飛ばし
IF SY-TABIX <= CNS_INIT_RECNUM.
CONTINUE.
ENDIF.
*   アンダーバーの設定
IF    GF_PARM-F01 >= '0002'
AND GF_PARM-F01 =< '9999'.
IF    GF_PARM-F01 <> SPACE
AND GF_PARM-F01 > TMP_NUM
.
*       枠線の出力
*---MODIFY START PSD T.SAITOH 2002/03/05 ---------------------------*
*        WRITE AT:/1(1) SY-VLINE,
*                 1(170) SY-ULINE.
WRITE AT:/1(1) SY-VLINE,
1(185) SY-ULINE.
*---MODIFY END   PSD T.SAITOH 2002/03/05 ---------------------------*

ENDIF.
ENDIF.
*   明細行の設定
PERFORM FRM_DETAILS_WRITE.
*   採番された明細番号を前明細番号として確保
IF    GF_PARM-F01 >= '0000'
AND GF_PARM-F01 =< '9999'.
TMP_NUM = GF_PARM-F01.
ENDIF.

ENDLOOP.

ENDFORM.                    " FRM_TEST_WRITE

*&-------------------------------------------------------------------
*&      Form  FRM_RS_VARIANT
*&-------------------------------------------------------------------
*       バリアント読込処理
*--------------------------------------------------------------------
* 汎用モジュール'RS_VARIANT_CONTENTS'を使用し選択画面用の選択セットを
* 取得する。
*--------------------------------------------------------------------
* Del ES-UP 2012/08/16 -->
*FORM FRM_RS_VARIANT.
*
*  CALL FUNCTION 'RS_VARIANT_CONTENTS'
*    EXPORTING
*      REPORT                      = 'ZF010200'
*      VARIANT                     = 'ZF010200'
*      MOVE_OR_WRITE               = 'M'
**   NO_IMPORT                   = ' '
**   EXECUTE_DIRECT              = ' '
** IMPORTING
**   SP                          =
*    TABLES
**   L_PARAMS                    =
**   L_PARAMS_NONV               =
**   L_SELOP                     =
**   L_SELOP_NONV                =
*      VALUTAB                     = GT_VAR
**   OBJECTS                     =
**   FREE_SELECTIONS_DESC        =
**   FREE_SELECTIONS_VALUE       =
*   EXCEPTIONS
*     VARIANT_NON_EXISTENT        = 1
*     VARIANT_OBSOLETE            = 2
*     REPORT_NOT_EXISTENT         = 3
*     OTHERS                      = 4
*            .
*  IF SY-SUBRC <> 0.
** MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
*
*
*ENDFORM.                    " FRM_RS_VARIANT
* Del ES-UP 2012/08/16 <--
*&-------------------------------------------------------------------
*&      Form  FRM_VARIANT_SET
*&-------------------------------------------------------------------
*       バリアント設定処理
*--------------------------------------------------------------------
*  汎用モジュールで読込したバリアント値をパラメータに設定する
*--------------------------------------------------------------------
FORM FRM_VARIANT_SET.
LOOP AT GT_VAR INTO GF_VAR.
IF   GF_VAR-LOW  <> SPACE
OR GF_VAR-HIGH <> SPACE.
CASE GF_VAR-SELNAME.
WHEN 'PR_BUKRS'."会社コードのバリアント設定
*        PR_BUKRS = GF_VAR-LOW.
WHEN 'S_DEBT'.  "債務勘定のバリアント値
MOVE-CORRESPONDING GF_VAR TO S_DEBT.
APPEND S_DEBT.
WHEN 'S_CRDT'.  "債券勘定のバリアント値
MOVE-CORRESPONDING GF_VAR TO S_CRDT.
APPEND S_CRDT.
WHEN 'S_CASH'.  "現金勘定のバリアント値
MOVE-CORRESPONDING GF_VAR TO S_CASH.
APPEND S_CASH.
WHEN 'S_DEPS'.  "預金勘定のバリアント値
MOVE-CORRESPONDING GF_VAR TO S_DEPS.
APPEND S_DEPS.
WHEN 'S_BLPY'.  "支払手形のバリアント値
MOVE-CORRESPONDING GF_VAR TO S_BLPY.
APPEND S_BLPY.
WHEN 'S_OFFEO'. "相殺のバリアント値
MOVE-CORRESPONDING GF_VAR TO S_OFFEO.
APPEND S_OFFEO.
ENDCASE.
ENDIF.
ENDLOOP.

ENDFORM.                    " FRM_VARIANT_SET
*&------------------------------------------------------------------*
*&      Form  FRM_WS_FILENAME_GET
*&------------------------------------------------------------------*
*       ファイル名の設定ポップアップ
*-------------------------------------------------------------------*
*  ファイル名をポップアップで設定する
*-------------------------------------------------------------------*
FORM FRM_WS_FILENAME_GET.
* Del ES-UP 2012/08/16 -->
*  CALL FUNCTION 'WS_FILENAME_GET'
*       EXPORTING
*            DEF_FILENAME     = W_DEF_FILENM
**           DEF_PATH         = W_DEF_PATH
*            MASK             = W_MASK
*            TITLE            = '保存場所'
*       IMPORTING
*            FILENAME         = PC_FILENM
*       EXCEPTIONS
*            SELECTION_CANCEL = 1
*            OTHERS           = 2.
*
*  IF SY-SUBRC <> 0.
*    MESSAGE ID '00' TYPE 'S' NUMBER '208' WITH '処理中断'.
*    STOP.
*  ENDIF.
* Del ES-UP 2012/08/16 <--

* Add ES-UP 2012/08/16 -->
DATA: L_FILENAME    TYPE STRING,
L_PATH        TYPE STRING,
L_FULLPATH    TYPE STRING,
l_filter      type string,
L_USER_ACTION TYPE I.

clear: L_FILENAME, L_PATH, L_FULLPATH, L_USER_ACTION.

l_filter = W_MASK.

CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG(
EXPORTING
WINDOW_TITLE         = '保存場所'
*      DEFAULT_EXTENSION    = DEFAULT_EXTENSION
*      DEFAULT_FILE_NAME    = L_FULLpath
*      WITH_ENCODING        = WITH_ENCODING
FILE_FILTER          = l_filter
*      INITIAL_DIRECTORY    = INITIAL_DIRECTORY
*      PROMPT_ON_OVERWRITE  = 'X'
CHANGING
FILENAME             = L_FILENAME
PATH                 = L_PATH
FULLPATH             = L_FULLpath
USER_ACTION          = L_USER_ACTION
*      FILE_ENCODING        = FILE_ENCODING
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4 ).

if SY-SUBRC = 0 AND l_user_action = CL_GUI_FRONTEND_SERVICES=>ACTION_OK.
PC_FILENM = L_FULLpath.

endif.

* Add ES-UP 2012/08/16 <--
ENDFORM.                    " FRM_WS_FILENAME_GET
*&------------------------------------------------------------------*
*&      Form  FRM_CHECK_REPONLY
*&------------------------------------------------------------------*
*       「レポートのみ」が押下されているときのファイル名のチェック
*-------------------------------------------------------------------*
FORM FRM_CHECK_REPONLY.
* レポートのみ（チェックボックス）チェック
IF PR_REP = SPACE.
* Mod 2010/05/26 --->
*   IF PR_FILE2 = SPACE.
IF PR_FILE2 = SPACE and PR_RDL = 'X' .
* Mod 2010/05/26 --->
MESSAGE S006(Z1) WITH CNS_FILENAME.
STOP.
ENDIF.
ENDIF.
ENDFORM.                    " FRM_CHECK_REPONLY
*&------------------------------------------------------------------*
*&      Form  FRM_CHECK_T001
*&------------------------------------------------------------------*
*       会社コード存在チェック&会社名取得
*-------------------------------------------------------------------*
*  --> P_BUKRS 会社コード
*-------------------------------------------------------------------*
FORM FRM_CHECK_T001 USING P_BUKRS.

SELECT SINGLE BUKRS BUTXT FROM T001
INTO (GF_HOFPARM-BUKRS,GF_HOFPARM-BUTXT)
WHERE BUKRS = P_BUKRS.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_BUKRS.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'T001' SY-SUBRC.
*      STOP.
ENDCASE.

ENDFORM.                    " FRM_CHECK_T001
*&------------------------------------------------------------------*
*&      Form  FRM_GET_LFA1
*&------------------------------------------------------------------*
*       仕入先名称・得意先コード取得
*-------------------------------------------------------------------*
FORM FRM_GET_LFA1.

SELECT LIFNR
NAME2
KUNNR
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
TELFX "仕入先ＦＡＸ番号
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*
FROM LFA1
INTO CORRESPONDING FIELDS OF TABLE GT_LFA1
WHERE LIFNR IN S_LIFNR
.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_LFA1_J.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'LFA1' SY-SUBRC.
*      STOP.
ENDCASE.
* 得意先コードがないレコードは省き別の内部テーブルに格納する。
LOOP AT GT_LFA1 INTO GF_LFA1
WHERE KUNNR <> SPACE.
APPEND GF_LFA1 TO GT_LFA1_EXCL.
ENDLOOP.


ENDFORM.                    " FRM_GET_LFA1
*&------------------------------------------------------------------*
*&      Form  FRM_GET_LFA1
*&------------------------------------------------------------------*
*       仕入先名称・得意先コード取得 得意先コードがないものは省く
*-------------------------------------------------------------------*
FORM FRM_GET_LFA2.

SELECT LIFNR
NAME2
KUNNR
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
TELFX "仕入先ＦＡＸ番号
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*
FROM LFA1
INTO CORRESPONDING FIELDS OF TABLE GT_LFA1
WHERE LIFNR IN S_LIFNR
AND KUNNR <> SPACE
.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_LFA1_J.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'LFA1' SY-SUBRC.
*      STOP.
ENDCASE.
*--- APPEND START PSD T.SATIOH 2002/02/01
* 得意先コードがないレコードは省き別の内部テーブルに格納する。
LOOP AT GT_LFA1 INTO GF_LFA1
WHERE KUNNR <> SPACE.
APPEND GF_LFA1 TO GT_LFA1_EXCL.
ENDLOOP.
*--- APPEND END   PSD T.SATIOH 2002/02/01


ENDFORM.                    " FRM_GET_LFA2

*&------------------------------------------------------------------*
*&      Form  FRM_READ_LFA1
*&------------------------------------------------------------------*
*       仕入先マスタ内部ＴＢＬから仕入先名・得意先コードを取得する
*-------------------------------------------------------------------*
*      -->  P_LIFNR     仕入先コード
*      <--  P_NAME2     仕入先名
*      <--  P_KUNNR     得意先コード
*      <--  P_TELFX     ファックス番号
*-------------------------------------------------------------------*
FORM FRM_READ_LFA1 USING    P_LIFNR
CHANGING P_NAME2
P_KUNNR
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
P_TELFX.
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*

READ TABLE GT_LFA1 INTO GF_LFA1
WITH KEY LIFNR = P_LIFNR.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_LFA1_J.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'LFA1' SY-SUBRC.
*     STOP.
ENDCASE.

P_NAME2     = GF_LFA1-NAME2.
P_KUNNR     = GF_LFA1-KUNNR.
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
P_TELFX     = GF_LFA1-TELFX.
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*

ENDFORM.                    " FRM_READ_LFA1
*&------------------------------------------------------------------*
*&      Form  FRM_GET_LFB1
*&------------------------------------------------------------------*
*      支払条件・支払方法の取得
*        読込ＴＢＬ：LFB1：仕入先マスタ（会社コード）
*        ＴＢＬ読込条件３Ａ
*-------------------------------------------------------------------*
FORM FRM_GET_LFB1.

SELECT BUKRS
LIFNR
ZWELS
ZTERM
FROM LFB1
INTO CORRESPONDING FIELDS OF TABLE GT_LFB1
WHERE LIFNR IN S_LIFNR AND
BUKRS = PR_BUKRS
.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_LFB1_J.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'LFB1' SY-SUBRC.
*      STOP.
ENDCASE.


ENDFORM.                    " FRM_GET_LFB1
*&------------------------------------------------------------------*
*&      Form  FRM_READ_LFB1
*&------------------------------------------------------------------*
*       仕入先マスタ（会社コード）内部TBLから
*       支払方法・支払条件を読み込む
*-------------------------------------------------------------------*
*      -->  P_LIFNR     仕入先コード
*      <--  P_ZWELS     支払方法
*      <--  P_ZTERM     支払条件
*-------------------------------------------------------------------*
FORM FRM_READ_LFB1 USING    P_LIFNR
CHANGING P_ZWELS
P_ZTERM.

READ TABLE GT_LFB1 INTO GF_LFB1
WITH KEY LIFNR = P_LIFNR.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_LFB1_J.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'LFB1' SY-SUBRC.
*      STOP.
ENDCASE.

P_ZWELS     = GF_LFB1-ZWELS.
P_ZTERM     = GF_LFB1-ZTERM.

ENDFORM.                    " FRM_READ_LFB1
*&------------------------------------------------------------------*
*&      Form  FRM_CHECK_SKB1
*&------------------------------------------------------------------*
*       各種勘定チェック
*-------------------------------------------------------------------*
* --> P_BUKRS 会社コード
*-------------------------------------------------------------------*
FORM FRM_CHECK_SKB1 USING VALUE(P_BUKRS).
DATA: TMP_BUKRS LIKE SKB1-BUKRS."会社コード作業領域
* --- 債務勘定チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_DEBT.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_SAIMU.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
*      STOP.
ENDCASE.
* --- 債券勘定チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_CRDT.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_SAIKEN.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
*      STOP.
ENDCASE.

* --- 現金勘定チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_CASH.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_GENKIN.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
*      STOP.
ENDCASE.

* --- 預金勘定チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_DEPS.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_YOKIN.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
*      STOP.
ENDCASE.

* --- 支払手形チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_BLPY.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_SHTEGATA.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
*      STOP.
ENDCASE.

* --- 相殺チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_OFFEO.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_SOUSAI.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
*      STOP.
ENDCASE.

* --- その他チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_ETC.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_ETC.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
*      STOP.
ENDCASE.

ENDFORM.                    " FRM_CHECK_SKB1
*&------------------------------------------------------------------*
*&      Form  FRM_H_SETDATE
*&------------------------------------------------------------------*
*       ヘッダ支払日Ｆ＆Ｔの設定
*-------------------------------------------------------------------*
FORM FRM_H_SETDATE.
LOOP AT S_ZFBDT WHERE SIGN = 'I'.
WRITE S_ZFBDT-LOW  TO GF_HOFPARM-ZFBDTFM  .
WRITE S_ZFBDT-HIGH TO GF_HOFPARM-ZFBDTTO  .
ENDLOOP.
ENDFORM.                    " FRM_H_SETDATE

*&------------------------------------------------------------------*
*&      Form  FRM_H_SETETC
*&------------------------------------------------------------------*
*       ヘッダその他の設定
*-------------------------------------------------------------------*
FORM FRM_H_SETETC.

GF_HOFPARM-H_NUM = CNS_ST_NO.
GF_HOFPARM-H_LIFNR = CNS_ST_LIFNR.
GF_HOFPARM-H_ZTERM = CNS_ST_ZTERM.
GF_HOFPARM-H_ZWELS = CNS_ST_ZWELS.
GF_HOFPARM-H_ZUONR = CNS_ST_ZUONR.
GF_HOFPARM-H_AP = CNS_ST_AP.
GF_HOFPARM-H_AR = CNS_ST_AR.
GF_HOFPARM-H_CASH = CNS_ST_CASH.
GF_HOFPARM-H_BNKTR = CNS_ST_BNKTR.
GF_HOFPARM-H_ACCP = CNS_ST_ACCP.
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
GF_HOFPARM-H_DISCNT = CNS_ST_DISCNT.
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
GF_HOFPARM-H_ETC = CNS_ST_ETC.
GF_HOFPARM-H_PSUMT = CNS_ST_PSUMT.
GF_HOFPARM-H_OFFSET = CNS_ST_OFFSET.
GF_HOFPARM-H_DIFFER = CNS_ST_DIFFER.
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
GF_HOFPARM-H_FAX = CNS_ST_FAXNUM.
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*

*   ファイル出力用明細構造
*---ヘッダ部　会社コード行
WRITE: CNS_BUKRSC       TO GF_PARM-F01,
GF_HOFPARM-BUKRS TO GF_PARM-F02,
GF_HOFPARM-BUTXT TO GF_PARM-F03.
APPEND GF_PARM  TO GT_PARM .
CLEAR GF_PARM.

*---ヘッダ部　支払日行
WRITE: CNS_PAYDAY         TO GF_PARM-F01,
GF_HOFPARM-ZFBDTFM TO GF_PARM-F02,
CNS_KARA           TO GF_PARM-F03,
GF_HOFPARM-ZFBDTTO TO GF_PARM-F04.
APPEND GF_PARM TO GT_PARM .
CLEAR GF_PARM.

*---明細ヘッダ部
WRITE: GF_HOFPARM-H_NUM   TO GF_PARM-F01,
GF_HOFPARM-H_LIFNR TO GF_PARM-F02,
GF_HOFPARM-H_ZTERM TO GF_PARM-F06,
GF_HOFPARM-H_ZWELS TO GF_PARM-F07,
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
GF_HOFPARM-H_FAX   TO GF_PARM-F05."ＦＡＸ番号
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*

APPEND GF_PARM TO GT_PARM .
CLEAR GF_PARM.

WRITE: GF_HOFPARM-H_ZUONR  TO GF_PARM-F02,
GF_HOFPARM-H_AP     TO GF_PARM-F03,
GF_HOFPARM-H_AR     TO GF_PARM-F04,
GF_HOFPARM-H_CASH   TO GF_PARM-F05,
GF_HOFPARM-H_BNKTR  TO GF_PARM-F06,
GF_HOFPARM-H_ACCP   TO GF_PARM-F07,
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
GF_HOFPARM-H_DISCNT TO GF_PARM-F12,"仕入割引
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
GF_HOFPARM-H_ETC    TO GF_PARM-F08,
GF_HOFPARM-H_PSUMT  TO GF_PARM-F09,
GF_HOFPARM-H_OFFSET TO GF_PARM-F10,
GF_HOFPARM-H_DIFFER TO GF_PARM-F11.
APPEND GF_PARM TO GT_PARM .
CLEAR GF_PARM.


ENDFORM.
*&------------------------------------------------------------------*
*&      Form  FRM_GET_BSIK
*&------------------------------------------------------------------*
*   会計管理：仕入先二次索引（BSIK）ＴＢＬから債務データ（未決済）情報を
*   抽出する。
*-------------------------------------------------------------------*
FORM FRM_GET_BSIK.

*---MODIFY START PSD T.SAITOH 2002/09/12 ---------------------------*
LOOP AT GT_LFA1 INTO GF_LFA1.
SELECT LIFNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
FROM BSIK
APPENDING CORRESPONDING FIELDS OF TABLE GT_BSIK
WHERE BUKRS = PR_BUKRS
AND LIFNR = GF_LFA1-LIFNR
AND ZFBDT IN S_ZFBDT
AND HKONT IN S_DEBT
AND BLART IN S_BLDT
.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
*        MESSAGE S600(Z1) WITH CNS_BSIK_J.
*        STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSIK' SY-SUBRC.
*        STOP.
ENDCASE.
ENDLOOP.
*---MODIFY END   PSD T.SAITOH 2002/09/12 ---------------------------*

ENDFORM.                    " FRM_GET_BSIK
*&------------------------------------------------------------------*
*&      Form  FRM_COM_BSIK
*&------------------------------------------------------------------*
* 抽出した会計管理：仕入先二次索引（BSIK）ＴＢＬから債務データ（未決済）
* を集計する。
*-------------------------------------------------------------------*
FORM FRM_COM_BSIK.

* 集計用回転内部TBL GT_TMP_BSXK にデータをコピー
CLEAR: GF_TMP_BSXK.
LOOP AT GT_BSIK INTO GF_BSIK.
MOVE-CORRESPONDING GF_BSIK TO GF_TMP_BSXK.
APPEND GF_TMP_BSXK TO GT_TMP_BSXK.
ENDLOOP.

* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_TMP_BSXK  ASCENDING BY LIFNR
ZUONR.
*
LOOP AT GT_TMP_BSXK INTO GF_TMP_BSXK.
MOVE-CORRESPONDING GF_TMP_BSXK TO GF_BSIK.
*   集計処理
PERFORM PRM_SET_PERMPRO_BSIK.
AT END OF ZUONR.
APPEND GF_PARMPRO TO GT_PARMPRO.
CLEAR GF_PARMPRO.
ENDAT.
ENDLOOP.

ENDFORM.                    " FRM_COM_BSIK
*&------------------------------------------------------------------*
*&      Form  PRM_SET_PERMPRO_BSIK
*&------------------------------------------------------------------*
*       支払実績リスト処理用内部ＴＢＬの設定
*-------------------------------------------------------------------*
FORM PRM_SET_PERMPRO_BSIK.

* 仕入先コードから、仕入先名・得意先コードを読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFA1 USING    GF_BSIK-LIFNR
CHANGING GF_PARMPRO-NAME2
GF_PARMPRO-KUNNR
GF_PARMPRO-TELFX.

* 仕入先コードから、支払方法・支払条件を読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFB1 USING    GF_BSIK-LIFNR
CHANGING GF_PARMPRO-ZWELS
GF_PARMPRO-ZTERM.

GF_PARMPRO-BUKRS = PR_BUKRS.      "会社コード
GF_PARMPRO-LIFNR = GF_BSIK-LIFNR. "仕入先コード
GF_PARMPRO-ZUONR = GF_BSIK-ZUONR. "ソートキー
GF_PARMPRO-SHKZG = GF_BSIK-SHKZG. "借方／貸方フラグ

* 貸方／借方フラグをチェックし国内通貨額を加減算する
CASE GF_BSIK-SHKZG.
WHEN CNS_H.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR + GF_BSIK-DMBTR.
WHEN CNS_S.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR - GF_BSIK-DMBTR.
WHEN OTHERS.
ENDCASE.

GF_PARMPRO-HKONT = GF_BSIK-HKONT."ソートキー
GF_PARMPRO-ZFBDT = GF_BSIK-ZFBDT."支払基準日

ENDFORM.                    " PRM_SET_PERMPRO_BSIK
*&------------------------------------------------------------------*
*&      Form  FRM_GET_BSID
*&------------------------------------------------------------------*
*   会計管理：仕入先二次索引（BSID）ＴＢＬから債権データ（未決済）情報を
*   抽出する。
*-------------------------------------------------------------------*
FORM FRM_GET_BSID.
*--- APPEND START PSD T.SAITOH 2002/02/01 ---
DATA:L_CNT_PARMREC(14) TYPE N."GT_LFA1_EXCLのレコード数

DESCRIBE TABLE GT_LFA1_EXCL LINES L_CNT_PARMREC.
* ファイル出力用内部ＴＢＬが0件ならば再ブレイクと判断しない
IF L_CNT_PARMREC = 0.
EXIT.
ENDIF.
*---MODIFY START PSD T.SAITOH 2002/09/12 ---------------------------*
*--- APPEND START PSD T.SAITOH 2002/02/01 ---
LOOP AT GT_LFA1_EXCL INTO GF_LFA1_EXCL.
SELECT KUNNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
FROM BSID
APPENDING CORRESPONDING FIELDS OF TABLE GT_BSID
WHERE BUKRS = PR_BUKRS
AND KUNNR = GF_LFA1_EXCL-KUNNR
AND ZFBDT IN S_ZFBDT
AND HKONT IN S_CRDT
AND BLART IN S_BLCT
.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
*        MESSAGE S600(Z1) WITH CNS_BSID_J.
*        STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSID' SY-SUBRC.
*        STOP.
ENDCASE.
ENDLOOP.
*---MODIFY END   PSD T.SAITOH 2002/09/12 ---------------------------*

ENDFORM.                    " FRM_GET_BSID

*&------------------------------------------------------------------*
*&      Form  FRM_COM_BSID
*&------------------------------------------------------------------*
* 抽出した会計管理：得意先二次索引（BSID）ＴＢＬから債権データ（未決済）
* を集計する。
*-------------------------------------------------------------------*
FORM FRM_COM_BSID.
* 集計用回転内部TBL GF_TMP_BSXD にデータをコピー
CLEAR: GF_TMP_BSXD.
LOOP AT GT_BSID INTO GF_BSID.
MOVE-CORRESPONDING GF_BSID TO GF_TMP_BSXD.
APPEND GF_TMP_BSXD TO GT_TMP_BSXD.
ENDLOOP.
* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_TMP_BSXD  ASCENDING BY KUNNR
ZUONR.

LOOP AT GT_LFA1 INTO GF_LFA1.
LOOP AT GT_TMP_BSXD INTO GF_TMP_BSXD
WHERE KUNNR = GF_LFA1-KUNNR .
MOVE-CORRESPONDING GF_TMP_BSXD TO GF_BSID.
*     集計処理
PERFORM PRM_SET_PERMPRO_BSID.
AT END OF ZUONR.
APPEND GF_PARMPRO TO GT_PARMPRO.
CLEAR GF_PARMPRO.
ENDAT.
ENDLOOP.
ENDLOOP.
ENDFORM.                    " FRM_COM_BSID
*&------------------------------------------------------------------*
*&      Form  PRM_SET_PERMPRO_BSID
*&------------------------------------------------------------------*
*       支払実績リスト処理用内部ＴＢＬの設定
*-------------------------------------------------------------------*
FORM PRM_SET_PERMPRO_BSID.

* 仕入先コードから、仕入先名・得意先コードを読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
*  PERFORM FRM_READ_LFA1 USING    GF_BSID-LIFNR
*                        CHANGING GF_PARMPRO-NAME2
*                                 GF_PARMPRO-KUNNR.

GF_BSID-LIFNR    = GF_LFA1-LIFNR.
GF_PARMPRO-LIFNR = GF_LFA1-LIFNR.
GF_PARMPRO-NAME2 = GF_LFA1-NAME2.
GF_PARMPRO-KUNNR = GF_LFA1-KUNNR.

*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
GF_PARMPRO-telfx = GF_LFA1-telfx.
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*

* 仕入先コードから、支払方法・支払条件を読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFB1 USING    GF_BSID-LIFNR
CHANGING GF_PARMPRO-ZWELS
GF_PARMPRO-ZTERM.

GF_PARMPRO-BUKRS = PR_BUKRS.      "会社コード
GF_PARMPRO-LIFNR = GF_BSID-LIFNR. "仕入先コード
GF_PARMPRO-ZUONR = GF_BSID-ZUONR. "ソートキー
GF_PARMPRO-SHKZG = GF_BSID-SHKZG. "借方／貸方フラグ

* 貸方／借方フラグをチェックし国内通貨額を加減算する
CASE GF_BSID-SHKZG.
WHEN CNS_H.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR - GF_BSID-DMBTR.
WHEN CNS_S.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR + GF_BSID-DMBTR.
WHEN OTHERS.
ENDCASE.

GF_PARMPRO-HKONT = GF_BSID-HKONT."ソートキー
GF_PARMPRO-ZFBDT = GF_BSID-ZFBDT."支払基準日

ENDFORM.                    " PRM_SET_PERMPRO_BSID
*&------------------------------------------------------------------*
*&      Form  FRM_GET_BSAK
*&------------------------------------------------------------------*
*   会計管理：仕入先二次索引（BSAK）ＴＢＬから債務データ（決済）情報を
*   抽出する。
*-------------------------------------------------------------------*
FORM FRM_GET_BSAK.

SELECT LIFNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
AUGBL
AUGDT
GJAHR
BELNR
* --- ADD START PSD T.SAITOH 2002/01/30 仕様変更対応
BLART "伝票タイプ
* --- ADD END   PSD T.SAITOH 2002/01/30 仕様変更対応
FROM BSAK
INTO CORRESPONDING FIELDS OF TABLE GT_BSAK
FOR ALL ENTRIES IN GT_LFA1
WHERE BUKRS = PR_BUKRS
*           AND LIFNR IN S_LIFNR
AND LIFNR = GT_LFA1-LIFNR
*---MODIFY START PSD T.SAITOH 2002/09/23 ---------------------------*
AND ZFBDT IN S_ZFBDT
*           AND AUGDT IN S_ZFBDT
*---MODIFY END   PSD T.SAITOH 2002/09/23 ---------------------------*
AND HKONT IN S_DEBT
AND BLART IN S_BLDT
.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
*      MESSAGE S600(Z1) WITH CNS_BSAK_J.
*      STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSAK' SY-SUBRC.
*      STOP.
ENDCASE.

ENDFORM.                    " FRM_GET_BSAK
*&------------------------------------------------------------------*
*&      Form  FRM_COM_BSAK
*&------------------------------------------------------------------*
* 抽出した会計管理：仕入先二次索引（BSAK）ＴＢＬから債務データ（決済）
* を集計する。
*-------------------------------------------------------------------*
FORM FRM_COM_BSAK.
* 集計用回転内部TBL GT_TMP_BSXK
CLEAR: GF_TMP_BSXK, GT_TMP_BSXK.
LOOP AT GT_BSAK INTO GF_BSAK.
MOVE-CORRESPONDING GF_BSAK TO GF_TMP_BSXK.
APPEND GF_TMP_BSXK TO GT_TMP_BSXK.
ENDLOOP.
* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_TMP_BSXK  ASCENDING BY LIFNR
ZUONR.

LOOP AT GT_TMP_BSXK INTO GF_TMP_BSXK.
MOVE-CORRESPONDING GF_TMP_BSXK TO GF_BSAK.
*   集計処理
PERFORM PRM_SET_PERMPRO_BSAK.
AT END OF ZUONR.
APPEND GF_PARMPRO TO GT_PARMPRO.
CLEAR GF_PARMPRO.
ENDAT.
ENDLOOP.

ENDFORM.                    " FRM_COM_BSAK
*&------------------------------------------------------------------*
*&      Form  PRM_SET_PERMPRO_BSAK
*&------------------------------------------------------------------*
*       支払実績リスト処理用内部ＴＢＬの設定
*-------------------------------------------------------------------*
*       仕入先債務データは決済伝票との関連処理のため
*       BSAKフラグを用いて差別化する。
*-------------------------------------------------------------------*
FORM PRM_SET_PERMPRO_BSAK.

* 仕入先コードから、仕入先名・得意先コードを読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFA1 USING    GF_BSAK-LIFNR
CHANGING GF_PARMPRO-NAME2
GF_PARMPRO-KUNNR
GF_PARMPRO-TELFX.

* 仕入先コードから、支払方法・支払条件を読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFB1 USING    GF_BSAK-LIFNR
CHANGING GF_PARMPRO-ZWELS
GF_PARMPRO-ZTERM.

GF_PARMPRO-BUKRS = PR_BUKRS.      "会社コード
GF_PARMPRO-AUGBL = GF_BSAK-AUGBL. "決済伝票
GF_PARMPRO-AUGDT = GF_BSAK-AUGDT. "決済日付
GF_PARMPRO-LIFNR = GF_BSAK-LIFNR. "仕入先コード
GF_PARMPRO-ZUONR = GF_BSAK-ZUONR. "ソートキー
GF_PARMPRO-SHKZG = GF_BSAK-SHKZG. "借方／貸方フラグ
GF_PARMPRO-FBSAK = CNS_X.         "BSAKフラグセット

* 貸方／借方フラグをチェックし国内通貨額を加減算する
CASE GF_BSAK-SHKZG.
WHEN CNS_H.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR + GF_BSAK-DMBTR.
WHEN CNS_S.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR - GF_BSAK-DMBTR.
WHEN OTHERS.
ENDCASE.

GF_PARMPRO-HKONT = GF_BSAK-HKONT."ソートキー
GF_PARMPRO-ZFBDT = GF_BSAK-ZFBDT."支払基準日

ENDFORM.                    " PRM_SET_PERMPRO_BSAK
*&------------------------------------------------------------------*
*&      Form  FRM_GET_BSAD
*&------------------------------------------------------------------*
*   会計管理：得意先二次索引（BSAD）ＴＢＬから債権データ（決済）情報を
*   抽出する。
*-------------------------------------------------------------------*
FORM FRM_GET_BSAD.
*--- APPEND START PSD T.SAITOH 2002/02/01 ---
DATA:L_CNT_PARMREC(14) TYPE N."GT_LFA1_EXCLのレコード数

DESCRIBE TABLE GT_LFA1_EXCL LINES L_CNT_PARMREC.
* ファイル出力用内部ＴＢＬが0件ならば再ブレイクと判断しない
IF L_CNT_PARMREC = 0.
EXIT.
ENDIF.
*--- APPEND START PSD T.SAITOH 2002/02/01 ---

SELECT KUNNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
AUGBL
AUGDT
* --- ADD START PSD T.SAITOH 2002/01/30 仕様変更対応
BLART
* --- ADD END   PSD T.SAITOH 2002/01/30 仕様変更対応
FROM BSAD
INTO CORRESPONDING FIELDS OF TABLE GT_BSAD
FOR ALL ENTRIES IN GT_LFA1_EXCL
WHERE BUKRS = PR_BUKRS
AND KUNNR = GT_LFA1_EXCL-KUNNR
*---MODIFY START PSD T.SAITOH 2002/09/23 ---------------------------*
AND ZFBDT IN S_ZFBDT
*           AND AUGDT IN S_ZFBDT
*---MODIFY END   PSD T.SAITOH 2002/09/23 ---------------------------*
AND HKONT IN S_CRDT
AND BLART IN S_BLCT
.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
*      MESSAGE S600(Z1) WITH CNS_BSAD_J.
*      STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSAD' SY-SUBRC.
*      STOP.
ENDCASE.

ENDFORM.                    " FRM_GET_BSAD

*&------------------------------------------------------------------*
*&      Form  FRM_COM_BSAD
*&------------------------------------------------------------------*
* 抽出した会計管理：得意先二次索引（BSAD）ＴＢＬから債権データ（未決済）
* を集計する。
*-------------------------------------------------------------------*
FORM FRM_COM_BSAD.
* 集計用回転内部TBL GT_TMP_BSXD
CLEAR: GF_TMP_BSXD,GT_TMP_BSXD.
LOOP AT GT_BSAD INTO GF_BSAD.
MOVE-CORRESPONDING GF_BSAD TO GF_TMP_BSXD.
APPEND GF_TMP_BSXD TO GT_TMP_BSXD.
ENDLOOP.

* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_TMP_BSXD  ASCENDING BY KUNNR
ZUONR.
LOOP AT GT_LFA1 INTO GF_LFA1
WHERE KUNNR <> SPACE.
LOOP AT GT_TMP_BSXD INTO GF_TMP_BSXD
WHERE KUNNR = GF_LFA1-KUNNR .
MOVE-CORRESPONDING GF_TMP_BSXD TO GF_BSAD.
*     集計処理
PERFORM PRM_SET_PERMPRO_BSAD.
AT END OF ZUONR.
APPEND GF_PARMPRO TO GT_PARMPRO.
CLEAR GF_PARMPRO.
ENDAT.
ENDLOOP.
ENDLOOP.
ENDFORM.                    " FRM_COM_BSAD
*&------------------------------------------------------------------*
*&      Form  PRM_SET_PERMPRO_BSAD
*&------------------------------------------------------------------*
*       支払実績リスト処理用内部ＴＢＬの設定
*-------------------------------------------------------------------*
FORM PRM_SET_PERMPRO_BSAD.

* 仕入先コードから、仕入先名・得意先コードを読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
*  PERFORM FRM_READ_LFA1 USING    GF_BSAD-LIFNR
*                        CHANGING GF_PARMPRO-NAME2
*                                 GF_PARMPRO-KUNNR.

GF_BSAD-LIFNR    = GF_LFA1-LIFNR.
GF_PARMPRO-LIFNR = GF_LFA1-LIFNR.
GF_PARMPRO-NAME2 = GF_LFA1-NAME2.
GF_PARMPRO-KUNNR = GF_LFA1-KUNNR.
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
GF_PARMPRO-telfx = GF_LFA1-telfx.
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*

* 仕入先コードから、支払方法・支払条件を読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFB1 USING    GF_BSAD-LIFNR
CHANGING GF_PARMPRO-ZWELS
GF_PARMPRO-ZTERM.

GF_PARMPRO-BUKRS = PR_BUKRS.      "会社コード
GF_PARMPRO-AUGBL = GF_BSAK-AUGBL. "決済伝票
GF_PARMPRO-AUGDT = GF_BSAK-AUGDT. "決済日付
GF_PARMPRO-LIFNR = GF_BSAD-LIFNR. "仕入先コード
GF_PARMPRO-ZUONR = GF_BSAD-ZUONR. "ソートキー
GF_PARMPRO-SHKZG = GF_BSAD-SHKZG. "借方／貸方フラグ

* 貸方／借方フラグをチェックし国内通貨額を加減算する
CASE GF_BSAD-SHKZG.
WHEN CNS_H.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR - GF_BSAD-DMBTR.
WHEN CNS_S.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR + GF_BSAD-DMBTR.
WHEN OTHERS.
ENDCASE.

GF_PARMPRO-HKONT = GF_BSAD-HKONT."ソートキー
GF_PARMPRO-ZFBDT = GF_BSAD-ZFBDT."支払基準日

ENDFORM.                    " PRM_SET_PERMPRO_BSAD
*&------------------------------------------------------------------*
*&      Form  FRM_GET_BSEG
*&------------------------------------------------------------------*
*       決済伝票明細抽出処理
*-------------------------------------------------------------------*
FORM FRM_GET_BSEG.
*  パフォーマンステスト用
*  data: cnt_proc type p.
*  PERFORM FRM_TIME_CHECK USING 'X'.

*---MODIFY START PSD T.SAITOH 2002/09/23 ---------------------------*
*  LOOP AT GT_BSAK INTO GF_BSAK.
LOOP AT GT_BSAK_AUGDT INTO GF_BSAK_AUGDT.
*---MODIFY END   PSD T.SAITOH 2002/09/23 ---------------------------*

SELECT BUKRS
BELNR
GJAHR
BUZEI
ZUONR
SHKZG
DMBTR
HKONT
FROM BSEG
INTO CORRESPONDING FIELDS OF GF_BSEG
WHERE BUKRS = PR_BUKRS
AND GJAHR = GF_BSAK_AUGDT-GJAHR
AND BELNR = GF_BSAK_AUGDT-BELNR
*- append start 2002/09/30 yasuhara
*---MODIFY START SOLFIS M.MAEKAWA 2009/08/20------------------------*
*             AND SGTXT <> '支払手形決済'.
AND ( SGTXT <> '支払手形決済'
AND SGTXT <> 'ファクタリング決済' ) .
*---MODIFY END   SOLFIS M.MAEKAWA 2009/08/20------------------------*
*- append end

GF_BSEG-LIFNR = GF_BSAK_AUGDT-LIFNR.
APPEND GF_BSEG TO GT_BSEG.

ENDSELECT.
CASE SY-SUBRC.
WHEN 0.
*        パフォーマンステスト用 --------------------------------*
*        DESCRIBE TABLE gt_bseg LINES cnt_proc.
WHEN 4.
*        MESSAGE S600(Z1) WITH CNS_BSEG_J.
*        STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSEG' SY-SUBRC.
*        STOP.
ENDCASE.

ENDLOOP.

*---APPEND START PSD T.SAITOH 2002/09/23 ---------------------------*
CLEAR: GF_TMP_BSEG, GT_TMP_BSEG.
LOOP AT GT_BSEG INTO GF_BSEG.
MOVE-CORRESPONDING GF_BSEG TO GF_TMP_BSEG.
APPEND GF_TMP_BSEG TO GT_TMP_BSEG.
ENDLOOP.
*---APPEND END   PSD T.SAITOH 2002/09/23 ---------------------------*

SORT GT_TMP_BSEG ASCENDING BY LIFNR "追加 2002/09/25
BELNR
GJAHR
BUZEI.

*-------------------------------------------*
* 重複データ削除処理 APPEND START 2002/01/24
*-------------------------------------------*
DATA:GT_BSEG_MARGE TYPE TABLE OF TYP_BSXX."gt_bsegのマージ後のデータ

LOOP AT GT_TMP_BSEG INTO GF_TMP_BSEG.
MOVE-CORRESPONDING GF_TMP_BSEG TO GF_BSEG.
AT END OF BUZEI.
APPEND GF_BSEG TO GT_BSEG_MARGE.
ENDAT.
ENDLOOP.

GT_BSEG = GT_BSEG_MARGE.
*-------------------------------------------*
* 重複データ削除処理 APPEND END 2002/01/24
*-------------------------------------------*

*  パフォーマンステスト用 ------------------------------------------*
*  PERFORM FRM_TIME_CHECK USING ''.
*  WRITE:/'BSEG:',SY-TABIX,'回読み込みました'.
*  WRITE:/'BSEG:',cnt_proc,'件処理しました'.
*  STOP.

ENDFORM.                    " FRM_GET_BSEG
*&------------------------------------------------------------------*
*&      Form  FRM_COM_CRDB
*&------------------------------------------------------------------*
*       債権／債務の決済／未決済をそれぞれ仕入先＋ソートキーで
*       集計する
*-------------------------------------------------------------------*
FORM FRM_COM_CRDB.
* 構造の初期化
CLEAR: GF_PARM,
GF_TMP_PARMPRO,
GF_PKIND.
DATA: L_SUBRC TYPE SY-SUBRC.
* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_PARMPRO ASCENDING BY LIFNR
ZUONR.
* GT_PARMPRO 内部TBLの複数仕入先時に発生する
* 空（カラ）レコードを削除する
DELETE GT_PARMPRO WHERE BUKRS = SPACE.

LOOP AT GT_PARMPRO INTO GF_TMP_PARMPRO.
GF_PARMPRO = GF_TMP_PARMPRO.
*   仕入先コードブレイク時かつ初期レコードでない時---------*
AT NEW LIFNR.
PERFORM FRM_LIFNR_BREAK."仕入先コードブレイク時
ENDAT.
*   ソートキーの処理
L_SUBRC = 4.
AT END OF ZUONR.
L_SUBRC = 0.
PERFORM FRM_ZUONR_BREAK_END."ソートキーごとの処理
ENDAT.
IF L_SUBRC <> 0.
PERFORM FRM_ZUONR_BREAK."スタンダードソートキー
ENDIF.
*   ソートキーごとの処理
AT END OF LIFNR.
PERFORM FRM_LIFNR_REBREAK."仕入先コード再ブレイク時
ENDAT.
ENDLOOP.

ENDFORM.                    " FRM_COM_CRDB
*&------------------------------------------------------------------*
*&      Form  FRM_LIFNR_BREAK
*&------------------------------------------------------------------*
*       ファイル出力用内部ＴＢＬ格納
*       仕入先ブレイク時の処理
*-------------------------------------------------------------------*
FORM FRM_LIFNR_BREAK.
CNT_NUM = CNT_NUM + 1.                "仕入先ごとに採番する
*"採番された番号
WRITE CNT_NUM TO GF_PARM-F01.
*"支払先
WRITE GF_PARMPRO-LIFNR TO GF_PARM-F02.
*"名称
WRITE GF_PARMPRO-NAME2 TO GF_PARM-F03.
* --- MODIFY START 2002/02/04 --PSD SAITOH---------------
**"支払条件
*  WRITE GF_PARMPRO-ZWELS TO GF_PARM-F06.
WRITE GF_PARMPRO-ZWELS TO GF_PARM-F07.
**"支払方法
*  WRITE GF_PARMPRO-ZTERM TO GF_PARM-F07.
WRITE GF_PARMPRO-ZTERM TO GF_PARM-F06.
* --- MODIFY END   2002/02/04 --PSD SAITOH---------------
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
WRITE GF_PARMPRO-TELFX TO GF_PARM-F05."ＦＡＸ番号
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*

*  WRITE SPACE TO GF_PARM-F04.
*  WRITE SPACE TO GF_PARM-F05.
*  WRITE SPACE TO GF_PARM-F08.
*  WRITE SPACE TO GF_PARM-F09.
*  WRITE SPACE TO GF_PARM-F10.
*  WRITE SPACE TO GF_PARM-F11.

*   WRITE GF_PARMPRO TO GF_PARM-F.
*   明細1行目をAPPENDする
APPEND GF_PARM TO GT_PARM."１明細行を内部テーブルに追加
CLEAR GF_PARM.

ENDFORM.                    " FRM_LIFNR_BREAK
*&------------------------------------------------------------------*
*&      Form  FRM_ZUONR_BREAK
*&------------------------------------------------------------------*
*       ファイル出力内部ＴＢＬ格納
*       ソートキーごとの処理
*-------------------------------------------------------------------*
FORM FRM_ZUONR_BREAK.

* 通貨は「JPY」固定により「金額×１００」とする
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR * 100.

IF GF_PARMPRO-HKONT IN S_DEBT."債務勘定を処理対象
GF_PARM-F03P = GF_PARM-F03P + GF_PARMPRO-DMBTR.
WRITE GF_PARM-F03P TO GF_PARM-F03.    "買掛金
* --- MODIFY START 2002/02/04 --PSD SAITOH---------------
*    G_AP = GF_PARM-F03P + G_AP.           "合計明細に加算
G_AP = GF_PARMPRO-DMBTR + G_AP.       "合計明細に加算
* --- MODIFY END   2002/02/04 --PSD SAITOH---------------
ENDIF.

IF GF_PARMPRO-HKONT IN S_CRDT."債権勘定を処理対象
GF_PARM-F04P = GF_PARM-F04P + GF_PARMPRO-DMBTR.
WRITE GF_PARM-F04P TO GF_PARM-F04.    "売掛金
* --- MODIFY START 2002/02/04 --PSD SAITOH---------------
*    G_AR = GF_PARM-F04P + G_AR.           "合計明細に加算
G_AR = GF_PARMPRO-DMBTR + G_AR.       "合計明細に加算
* --- MODIFY END   2002/02/04 --PSD SAITOH---------------
ENDIF.

WRITE GF_PARMPRO-ZUONR TO GF_PARM-F02."ソートキー
* --- DELETE START 2002/01/23 --PSD SAITOH---------------
*    WRITE GF_PARM-F03P TO GF_PARM-F03.    "買掛金
*    G_AP = GF_PARM-F03P + G_AP.           "合計明細に加算
*    WRITE GF_PARM-F04P TO GF_PARM-F04.    "売掛金
*    G_AR = GF_PARM-F04P + G_AR.           "合計明細に加算
* --- DELETE END   2002/01/23 --PSD SAITOH---------------

*   買掛金と売掛金が共に０円の時
IF NOT ( GF_PARM-F03P = 0
AND  GF_PARM-F04P = 0 )
AND  PR_DETL = CNS_X.
GF_PARM-F05 = SPACE.
GF_PARM-F06 = SPACE.
GF_PARM-F07 = SPACE.
GF_PARM-F08 = SPACE.
GF_PARM-F09 = SPACE.
GF_PARM-F10 = SPACE.
GF_PARM-F11 = SPACE.
ENDIF.

ENDFORM.                    " FRM_ZUONR_BREAK
*&------------------------------------------------------------------*
*&      Form  FRM_ZUONR_BREAK_END
*&------------------------------------------------------------------*
*       ファイル出力内部ＴＢＬ格納
*       ソートキーごとの処理
*-------------------------------------------------------------------*
FORM FRM_ZUONR_BREAK_END.

* 通貨は「JPY」固定により「金額×１００」とする
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR * 100.

IF GF_PARMPRO-HKONT IN S_DEBT."債務勘定を処理対象
GF_PARM-F03P = GF_PARM-F03P + GF_PARMPRO-DMBTR.
WRITE GF_PARM-F03P TO GF_PARM-F03.    "買掛金
G_AP = GF_PARMPRO-DMBTR + G_AP.       "合計明細に加算
ENDIF.

IF GF_PARMPRO-HKONT IN S_CRDT."債権勘定を処理対象
GF_PARM-F04P = GF_PARM-F04P + GF_PARMPRO-DMBTR.
WRITE GF_PARM-F04P TO GF_PARM-F04.    "売掛金
G_AR = GF_PARMPRO-DMBTR + G_AR.       "合計明細に加算
ENDIF.

WRITE GF_PARMPRO-ZUONR TO GF_PARM-F02."ソートキー

*   買掛金と売掛金が共に０円の時
IF NOT ( GF_PARM-F03P = 0
AND  GF_PARM-F04P = 0 )
AND  PR_DETL = CNS_X.
GF_PARM-F05 = SPACE.
GF_PARM-F06 = SPACE.
GF_PARM-F07 = SPACE.
GF_PARM-F08 = SPACE.
GF_PARM-F09 = SPACE.
GF_PARM-F10 = SPACE.
GF_PARM-F11 = SPACE.
ENDIF.

* --- MODIFY START 2002/02/01 PSD T.SAITOH [部門詳細対応]
IF PR_DETL = CNS_X.
APPEND GF_PARM TO GT_PARM."２明細行を内部テーブルに追加
ENDIF.
CLEAR GF_PARM.
* --- MODIFY END   2002/02/01 PSD T.SAITOH [部門詳細対応]

ENDFORM.                    " FRM_ZUONR_BREAK_END

*&------------------------------------------------------------------*
*&      Form  FRM_LIFNR_REBREAK
*&------------------------------------------------------------------*
*       ファイル出力用内部ＴＢＬ格納
*       仕入先再ブレイク時の処理
*-------------------------------------------------------------------*
FORM FRM_LIFNR_REBREAK.
DATA:L_CNT_PARMREC(14) TYPE N."GT_PARMのレコード数

DESCRIBE TABLE GT_PARM LINES L_CNT_PARMREC.
* ファイル出力用内部ＴＢＬが0件ならば再ブレイクと判断しない
IF L_CNT_PARMREC < CNS_INIT_RECNUM.
EXIT.
ENDIF.
* ファイル出力用内部ＴＢＬが0件でなければ再ブレイクと判断する

* 支払金種別集計内部ＴＢＬから前レコードの仕入先コードで
* 支払金種別集計情報を集計。
PERFORM FRM_COM_BSEG.

ENDFORM.                    " FRM_LIFNR_REBREAK
*&---------------------------------------------------------------------*
*&      Form  FRM_COM_BSEG
*&---------------------------------------------------------------------*
*       仕入先ごとに支払金種別に集計し明細合計行を設定する。
*----------------------------------------------------------------------*
FORM FRM_COM_BSEG.

CLEAR GF_PKIND.
LOOP AT GT_BSEG INTO GF_BSEG
WHERE LIFNR = GF_PARMPRO-LIFNR.
*   通貨は「JPY」固定により「金額×１００」とする
GF_BSEG-DMBTR = GF_BSEG-DMBTR * 100.
*   現金勘定の設定---------------------------------------
IF GF_BSEG-HKONT IN S_CASH.
IF GF_BSEG-SHKZG = CNS_H."借方
*       支払実績リスト明細[帳票用]
GF_PKIND-CASH = GF_PKIND-CASH + GF_BSEG-DMBTR.
*       支払実績リスト総合計[帳票用]
GF_PARMT-F05 = GF_PARMT-F05 + GF_BSEG-DMBTR.
ELSE."貸方
*       支払実績リスト明細[帳票用]
GF_PKIND-CASH = GF_PKIND-CASH - GF_BSEG-DMBTR.
*       支払実績リスト総合計[帳票用]
GF_PARMT-F05 = GF_PARMT-F05 - GF_BSEG-DMBTR.
ENDIF.
ENDIF.
*   銀行振込の設定---------------------------------------
IF GF_BSEG-HKONT IN S_DEPS.
IF GF_BSEG-SHKZG = CNS_H."借方
*       支払実績リスト明細[帳票用]
GF_PKIND-BNKTR = GF_PKIND-BNKTR + GF_BSEG-DMBTR.
*       支払実績リスト総合計[帳票用]
GF_PARMT-F06 = GF_PARMT-F06 + GF_BSEG-DMBTR.
ELSE."貸方
*       支払実績リスト明細[帳票用]
GF_PKIND-BNKTR = GF_PKIND-BNKTR - GF_BSEG-DMBTR.
*       支払実績リスト総合計[帳票用]
GF_PARMT-F06 = GF_PARMT-F06 - GF_BSEG-DMBTR.
ENDIF.
ENDIF.
*---DELETE START PSD T.SAITOH 2002/09/25 ---------------------------*
*   支払手形の設定---------------------------------------
*    IF GF_BSEG-HKONT IN S_BLPY.
*      IF GF_BSEG-SHKZG = CNS_H."借方
**       支払実績リスト明細[帳票用]
*        GF_PKIND-LACCP = GF_PKIND-LACCP + GF_BSEG-DMBTR.
**       支払実績リスト総合計[帳票用]
*        GF_PARMT-F07 = GF_PARMT-F07 + GF_BSEG-DMBTR.
*      ELSE."貸方
**       支払実績リスト明細[帳票用]
*        GF_PKIND-LACCP = GF_PKIND-LACCP - GF_BSEG-DMBTR.
**       支払実績リスト総合計[帳票用]
*        GF_PARMT-F07 = GF_PARMT-F07 - GF_BSEG-DMBTR.
*      ENDIF.
*    ENDIF.
*---DELETE END   PSD T.SAITOH 2002/09/25 ---------------------------*
*   相殺の設定---------------------------------------
*    IF GF_BSEG-HKONT IN S_OFFEO.
*      IF GF_BSEG-SHKZG = CNS_H."借方
*       支払実績リスト明細[帳票用]
*        GF_PKIND-OFFSET = GF_PKIND-OFFSET + GF_BSEG-DMBTR.
*       支払実績リスト総合計[帳票用]
*        GF_PARMT-F10 = GF_PARMT-F10 + GF_BSEG-DMBTR.
*      ELSE."貸方
*       支払実績リスト明細[帳票用]
*        GF_PKIND-OFFSET = GF_PKIND-OFFSET - GF_BSEG-DMBTR.
*       支払実績リスト総合計[帳票用]
*        GF_PARMT-F10 = GF_PARMT-F10 - GF_BSEG-DMBTR.
*      ENDIF.
*    ENDIF.
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
*   仕入割引の設定  ---------------------------------------
IF GF_BSEG-HKONT IN S_DCNT.
IF GF_BSEG-SHKZG = CNS_H."借方
*        支払実績リスト明細[帳票用]
GF_PKIND-DISCNT = GF_PKIND-DISCNT + GF_BSEG-DMBTR.
*        支払実績リスト総合計[帳票用]
GF_PARMT-F12 = GF_PARMT-F12 + GF_BSEG-DMBTR.
ELSE.
*        支払実績リスト明細[帳票用]
GF_PKIND-DISCNT = GF_PKIND-DISCNT - GF_BSEG-DMBTR.
*        支払実績リスト総合計[帳票用]
GF_PARMT-F12 = GF_PARMT-F12 - GF_BSEG-DMBTR.
ENDIF.
ENDIF.
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
*   その他の設定  ---------------------------------------
IF GF_BSEG-HKONT IN S_ETC.
IF GF_BSEG-SHKZG = CNS_H."借方
*        支払実績リスト明細[帳票用]
GF_PKIND-ETC = GF_PKIND-ETC + GF_BSEG-DMBTR.
*        支払実績リスト総合計[帳票用]
GF_PARMT-F08 = GF_PARMT-F08 + GF_BSEG-DMBTR.
ELSE.
*        支払実績リスト明細[帳票用]
GF_PKIND-ETC = GF_PKIND-ETC - GF_BSEG-DMBTR.
*        支払実績リスト総合計[帳票用]
GF_PARMT-F08 = GF_PARMT-F08 - GF_BSEG-DMBTR.
ENDIF.
ENDIF.
ENDLOOP.

*10/10 START
PERFORM FRM_SOUSAI.
*10/10 END
*---APPEND START PSD T.SAITOH 2002/09/25 ---------------------------*
* 支払手形は別途再計算する
PERFORM FRM_SELECT_BSIK.

*---APPEND END   PSD T.SAITOH 2002/09/25 ---------------------------*

*   買掛金の設定    ---------------------------------------
*   買掛金明細合計[帳票用]
GF_PKIND-AP = G_AP.
*   買掛金総合計[帳票用]
GF_PARMT-F03 = GF_PARMT-F03 + G_AP.
*   売掛金の設定    ---------------------------------------
*   売掛金の明細合計[帳票用]
GF_PKIND-AR = G_AR.
*   売掛金総合計[帳票用]
GF_PARMT-F04 = GF_PARMT-F04 + G_AR.

*   支払計の加算  ---------------------------------------
GF_PKIND-PSUMT = GF_PKIND-CASH
+ GF_PKIND-BNKTR
+ GF_PKIND-LACCP
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
+ GF_PKIND-DISCNT
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
+ GF_PKIND-ETC.
GF_PARMT-F09   = GF_PARMT-F09 + GF_PKIND-PSUMT.
*   差額の計算      ---------------------------------------
*   差額の明細合計[帳票用]
*---MODIFY START PSD T.SAITOH 2002/09/12 23-------------------------*
*  GF_PKIND-DIFFER = GF_PKIND-AP - GF_PKIND-AR - GF_PKIND-PSUMT.
GF_PKIND-DIFFER = GF_PKIND-AP - GF_PKIND-PSUMT - GF_PKIND-OFFSET.
*---MODIFY END   PSD T.SAITOH 2002/09/12 23-------------------------*
*   差額の総合計[帳票用]
GF_PARMT-F11 = GF_PARMT-F11 + GF_PKIND-DIFFER.

*   文字列”＊計＊”の設定[帳票用]
GF_PARMT-F02 = CNS_TOTAL_J.
*   APPEND処理等
*   計算用→出力用[帳票用]
PERFORM FRM_PARM_WRITE.

* [帳票用]
APPEND GF_PARM TO GT_PARM."ファイル出力用明細　構造→内部ＴＢＬ

*   初期化処理
*   現在使用した計算用構造GF_PKINDを初期化する
CLEAR:
G_AP,
G_AR,
GF_PKIND.

ENDFORM.                    " FRM_COM_BSEG
*&---------------------------------------------------------------------*
*&      Form  FRM_PARM_WRITE
*&---------------------------------------------------------------------*
*       計算用構造から出力用構造に出力
*----------------------------------------------------------------------*
FORM FRM_PARM_WRITE.

*   ファイル出力用明細構造


* ファイル出力用
WRITE: CNS_TOTAL_J     TO GF_PARM-F02,
GF_PKIND-AP     TO GF_PARM-F03,
GF_PKIND-AR     TO GF_PARM-F04,
GF_PKIND-CASH   TO GF_PARM-F05,
GF_PKIND-BNKTR  TO GF_PARM-F06,
GF_PKIND-LACCP  TO GF_PARM-F07,
GF_PKIND-ETC    TO GF_PARM-F08,
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
GF_PKIND-DISCNT TO GF_PARM-F12,"仕入割引
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
GF_PKIND-PSUMT  TO GF_PARM-F09,
GF_PKIND-OFFSET TO GF_PARM-F10,
GF_PKIND-DIFFER TO GF_PARM-F11.

* 帳票出力用
MOVE:
*         CNS_TOTAL_J     TO GF_PARM-F02,
GF_PKIND-AP     TO GF_PARM-F03P,
GF_PKIND-AR     TO GF_PARM-F04P,
GF_PKIND-CASH   TO GF_PARM-F05P,
GF_PKIND-BNKTR  TO GF_PARM-F06P,
GF_PKIND-LACCP  TO GF_PARM-F07P,
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
GF_PKIND-DISCNT TO GF_PARM-F12P,"仕入割引
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
GF_PKIND-ETC    TO GF_PARM-F08P,
GF_PKIND-PSUMT  TO GF_PARM-F09P,
GF_PKIND-OFFSET TO GF_PARM-F10P,
GF_PKIND-DIFFER TO GF_PARM-F11P.

ENDFORM.                    " FRM_PARM_WRITE
*&---------------------------------------------------------------------*
*&      Form  FRM_PUT_SUM
*&---------------------------------------------------------------------*
*       支払実績リストファイル出力用総合計レコードを追加する
*----------------------------------------------------------------------*
FORM FRM_PUT_SUM.
*   ファイル出力用明細構造

WRITE: CNS_LTOTAL_J    TO GF_PARM-F02,
GF_PARMT-F03    TO GF_PARM-F03,
GF_PARMT-F04    TO GF_PARM-F04,
GF_PARMT-F05    TO GF_PARM-F05,
GF_PARMT-F06    TO GF_PARM-F06,
GF_PARMT-F07    TO GF_PARM-F07,
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
GF_PARMT-F12    TO GF_PARM-F12,"仕入割引
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
GF_PARMT-F08    TO GF_PARM-F08,
GF_PARMT-F09    TO GF_PARM-F09,
GF_PARMT-F10    TO GF_PARM-F10,
GF_PARMT-F11    TO GF_PARM-F11.


MOVE:  GF_PARMT-F03    TO GF_PARM-F03P,
GF_PARMT-F04    TO GF_PARM-F04P,
GF_PARMT-F05    TO GF_PARM-F05P,
GF_PARMT-F06    TO GF_PARM-F06P,
GF_PARMT-F07    TO GF_PARM-F07P,
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
GF_PARMT-F12    TO GF_PARM-F12P,
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
GF_PARMT-F08    TO GF_PARM-F08P,
GF_PARMT-F09    TO GF_PARM-F09P,
GF_PARMT-F10    TO GF_PARM-F10P,
GF_PARMT-F11    TO GF_PARM-F11P.

APPEND GF_PARM TO GT_PARM.

ENDFORM.                    " FRM_PUT_SUM
*&---------------------------------------------------------------------*
*&      Form  FRM_H_FIREP
*&---------------------------------------------------------------------*
*       ＦＩ共通ヘッダ
*----------------------------------------------------------------------*
*       改ページ処理時にヘッダを出力する
*----------------------------------------------------------------------*
FORM FRM_H_FIREP USING P_TITLE.

* 共通レポートヘッダー出力　（１７０バイト用）
* １行目
WRITE : /56   P_TITLE,
131  '出力日時:' ,
140  SY-DATUM ,
151  SY-UZEIT ,
160'PAGE:' ,
165  SY-PAGNO .

PERFORM FRM_H_DETAILS.

ENDFORM.                    " FRM_H_FIREP
*&---------------------------------------------------------------------*
*&      Form  FRM_H_DETAILS
*&---------------------------------------------------------------------*
*       帳票出力明細ヘッダの出力
*----------------------------------------------------------------------*
FORM FRM_H_DETAILS.
*---ヘッダ部　会社コード行
*  IF SY-PAGNO <> 1.
WRITE:/2   CNS_BUKRSC       ,
16  GF_HOFPARM-BUKRS ,
22  GF_HOFPARM-BUTXT .

*---ヘッダ部　支払日行
WRITE:/2   CNS_PAYDAY         ,
16  GF_HOFPARM-ZFBDTFM.

IF GF_HOFPARM-ZFBDTTO <> '0000/00/00'.
WRITE:  27  CNS_KARA,
30  GF_HOFPARM-ZFBDTTO .
ENDIF.

*---明細ヘッダ部
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
*  WRITE AT:  /1(170) SY-ULINE,
*             /1(1) SY-VLINE.
WRITE AT:  /1(185) SY-ULINE,
/1(1) SY-VLINE.
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*

FORMAT COLOR 4 ON INTENSIFIED.
WRITE:  4   GF_HOFPARM-H_NUM   ,
10  GF_HOFPARM-H_LIFNR ,
* --- MODIFY START 2002/02/02 PSD T.SATIOH --- レイアウト再変更
*          75  GF_HOFPARM-H_ZTERM ,
*          90  GF_HOFPARM-H_ZWELS ,
**---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*          80  GF_HOFPARM-H_ZTERM ,
*          95  GF_HOFPARM-H_ZWELS ,
65  GF_HOFPARM-H_ZTERM ,
80  GF_HOFPARM-H_ZWELS ,
*---MODIFY END   PSD T.SAITOH 2002/02/14 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
*          95  GF_HOFPARM-H_FAX, "取消
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*

* --- MODIFY START 2002/02/02 PSD T.SATIOH --- レイアウト再変更
*         170 SPACE.
*---MODIFY START PSD T.SAITOH 2002/03/05 ---------------------------*
*          170(1) SY-VLINE.
185(1) SY-VLINE.
*---MODIFY END   PSD T.SAITOH 2002/03/05 ---------------------------*

WRITE:/1(1) SY-VLINE,
10  GF_HOFPARM-H_ZUONR  ,
* --- MODIFY START 2002/02/01 PSD T.SATIOH --- レイアウト変更
*         30  GF_HOFPARM-H_AP     ,
*         45  GF_HOFPARM-H_AR     ,
*         60  GF_HOFPARM-H_CASH   ,
*         75  GF_HOFPARM-H_BNKTR  ,
*         90  GF_HOFPARM-H_ACCP   ,
*         105 GF_HOFPARM-H_ETC    ,
*         120 GF_HOFPARM-H_PSUMT  ,
*         135 GF_HOFPARM-H_OFFSET ,
*         150 GF_HOFPARM-H_DIFFER ,
37  GF_HOFPARM-H_AP     ,
52  GF_HOFPARM-H_AR     ,
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*         69  GF_HOFPARM-H_CASH   ,
*         80  GF_HOFPARM-H_BNKTR  ,
*         95  GF_HOFPARM-H_ACCP   ,
95  GF_HOFPARM-H_CASH   ,
65  GF_HOFPARM-H_BNKTR  ,
80  GF_HOFPARM-H_ACCP   ,
*---MODIFY END   PSD T.SAITOH 2002/02/14 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
110 GF_HOFPARM-H_DISCNT , "仕入割引
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
*---MODIFY START PSD T.SAITOH 2002/03/05 ---------------------------*
*         112 GF_HOFPARM-H_ETC    ,
*         127 GF_HOFPARM-H_PSUMT  ,
*         144 GF_HOFPARM-H_OFFSET ,
*         159 GF_HOFPARM-H_DIFFER ,
127 GF_HOFPARM-H_ETC    ,
142 GF_HOFPARM-H_PSUMT  ,
159 GF_HOFPARM-H_OFFSET ,
174 GF_HOFPARM-H_DIFFER ,
* --- MODIFY END   2002/02/01 PSD T.SATIOH --- レイアウト変更

*        170 SPACE.
*---MODIFY START PSD T.SAITOH 2002/03/05 ---------------------------*
*        170(1) SY-VLINE.
185(1) SY-VLINE.
*---MODIFY END   PSD T.SAITOH 2002/03/05 ---------------------------*
*  ULINE.
*---MODIFY START PSD T.SAITOH 2002/03/05 ---------------------------*
*  WRITE AT:  /1(170) SY-ULINE.
WRITE AT:  /1(185) SY-ULINE.
*---MODIFY END   PSD T.SAITOH 2002/03/05 ---------------------------*

FORMAT COLOR OFF.

*  ENDIF.
ENDFORM.                    " FRM_H_DETAILS
*&---------------------------------------------------------------------*
*&      Form  FRM_DETAILS_WRITE
*&---------------------------------------------------------------------*
*       帳票出力明細行の出力詳細
*----------------------------------------------------------------------*
FORM FRM_DETAILS_WRITE.
DATA:L_TMP_FIELD(14) TYPE P.

FORMAT COLOR 2 ON INTENSIFIED.
* 明細１行目の設定---
IF    GF_PARM-F01 >= '0000'
AND GF_PARM-F01 =< '9999'.
FORMAT COLOR 7 INTENSIFIED OFF.
* 枠線の出力
WRITE AT:/1(1) SY-VLINE.
WRITE: 4   GF_PARM-F01,
10  GF_PARM-F02,
22  GF_PARM-F03,
* --- MODIFY START 2002/02/02 PSD T.SATIOH --- レイアウト再変更
*          75  GF_PARM-F06,
*          90  GF_PARM-F07,
**---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
**           80  GF_PARM-F06,
**           95  GF_PARM-F07,
65  GF_PARM-F06,
80  GF_PARM-F07,
**---MODIFY END   PSD T.SAITOH 2002/02/14 ---------------------------*
* --- MODIFY END   2002/02/02 PSD T.SATIOH --- レイアウト再変更

*---APPEND START PSD T.SAITOH 2002/03/06 ---------------------------*
*           95  GF_PARM-F05, "仕入先ＦＡＸ番号 "取消
*---APPEND END   PSD T.SAITOH 2002/03/06 ---------------------------*

*---MODIFY START PSD T.SAITOH 2002/03/05 ---------------------------*
*           170(1) SY-VLINE.
185(1) SY-VLINE.
*---MODIFY END   PSD T.SAITOH 2002/03/05 ---------------------------*
FORMAT COLOR OFF.
* 明細２行目以降の設定---
ELSE.
WRITE AT:1(1) SY-VLINE.
*   合計行の明細パターン
IF GF_PARM-F02 = CNS_TOTAL_J.
FORMAT COLOR 3 ON INTENSIFIED.
PERFORM FRM_DETAILS_PT01.
*   総合計行のパターン
ELSEIF GF_PARM-F02 = CNS_LTOTAL_J.
FORMAT COLOR 3 ON INTENSIFIED.
*     総合計行明細出力
*---MODIFY START PSD T.SAITOH 2002/03/05 ---------------------------*
WRITE AT:/1(1) SY-VLINE.
*      WRITE AT:1(170) SY-ULINE.
*      WRITE AT:170(1) SY-VLINE.
WRITE AT:1(185) SY-ULINE.
WRITE AT:185(1) SY-VLINE.
PERFORM FRM_DETAILS_PT01.
WRITE AT:/1(1) SY-VLINE.
*      WRITE AT:1(170) SY-ULINE.
*      WRITE AT:170(1) SY-VLINE.
WRITE AT:1(185) SY-ULINE.
WRITE AT:185(1) SY-VLINE.
*---MODIFY END   PSD T.SAITOH 2002/03/05 ---------------------------*

*   通常明細
ELSE.
PERFORM FRM_DETAILS_PT02.
ENDIF.
*   枠線の出力
*---MODIFY START PSD T.SAITOH 2002/03/05 ---------------------------*
*    WRITE AT:170(1) SY-VLINE.
WRITE AT:185(1) SY-VLINE.
*---MODIFY END   PSD T.SAITOH 2002/03/05 ---------------------------*

ENDIF.
FORMAT COLOR OFF.
ENDFORM.                    " FRM_DETAILS_WRITE
*&---------------------------------------------------------------------*
*&      Form  FRM_DETAILS_PT01
*&---------------------------------------------------------------------*
*       明細合計行　パターン
*----------------------------------------------------------------------*
FORM FRM_DETAILS_PT01.
* 枠線の出力
*  WRITE AT:/1(1) SY-VLINE.
*  WRITE AT:1(170) SY-ULINE.

WRITE AT:/1(1) SY-VLINE.
* 明細合計行
WRITE: 4    GF_PARM-F01.
WRITE  10   GF_PARM-F02.
WRITE  30   GF_PARM-F03P.
WRITE  45   GF_PARM-F04P.
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*  WRITE  60   GF_PARM-F05P.
*  WRITE  75   GF_PARM-F06P.
*  WRITE  90   GF_PARM-F07P.
WRITE  60   GF_PARM-F06P.
WRITE  75   GF_PARM-F07P.
WRITE  90   GF_PARM-F05P.
*---MODIFY END   PSD T.SAITOH 2002/02/14 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
WRITE  105  GF_PARM-F12P.
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*  WRITE  105  GF_PARM-F08P.
*  WRITE  120  GF_PARM-F09P.
*  WRITE  135  GF_PARM-F10P.
*  WRITE  150  GF_PARM-F11P.
WRITE  120  GF_PARM-F08P.
WRITE  135  GF_PARM-F09P.
WRITE  150  GF_PARM-F10P.
WRITE  165  GF_PARM-F11P.
*---MODIFY END   PSD T.SAITOH 2002/02/14 ---------------------------*
* WRITE  170  SPACE.

* 枠線の出力
WRITE AT:1(1) SY-VLINE.
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*  WRITE AT:170(1) SY-VLINE.
WRITE AT:185(1) SY-VLINE.
*  WRITE AT:/1(170) SY-ULINE.
*---MODIFY END   PSD T.SAITOH 2002/02/14 ---------------------------*


ENDFORM.                    " FRM_DETAILS_PT01
*&---------------------------------------------------------------------*
*&      Form  FRM_DETAILS_PT02
*&---------------------------------------------------------------------*
*       ソートキー明細行
*----------------------------------------------------------------------*
FORM FRM_DETAILS_PT02.

WRITE:/4    SPACE.
WRITE  10   GF_PARM-F02.
WRITE  30   GF_PARM-F03P.
WRITE  45   GF_PARM-F04P.
WRITE  60   SPACE.
WRITE  75   SPACE.
WRITE  90   SPACE.
WRITE  105  SPACE.
WRITE  120  SPACE.
WRITE  135  SPACE.
WRITE  150  SPACE.
*  WRITE  170  SPACE.

ENDFORM.                    " FRM_DETAILS_PT02
*&---------------------------------------------------------------------*
*&      Form  FRM_LIST_DOWNLOAD
*&---------------------------------------------------------------------*
*       「レポートのみ」をチェックしなかった場合、指定された
*       ローカルフォルダにダウンロードする。
*----------------------------------------------------------------------*
FORM FRM_LIST_DOWNLOAD.
* 帳票用内部テーブルをダウンロード用内部ＴＢＬに格納する
*（FILE OPEN でも仕様）
*---MODIFY START PSD T.SAITOH 2002/02/14 ---------------------------*
*  GT_PARM_DW = GT_PARM.
*---APPEND START PSD T.SAITOH 2002/04/23 ---------------------------*
DATA:L_TABIX LIKE SY-TABIX."ヘッダ部日付欠落対応用
*---APPEND END   PSD T.SAITOH 2002/04/23 ---------------------------*

CLEAR:GF_PARM_DW,"ダウンロード用
GT_PARM_DW."ダウンロード用
LOOP AT GT_PARM INTO GF_PARM.
*---APPEND START PSD T.SAITOH 2002/04/23 ---------------------------*
L_TABIX = SY-TABIX."ヘッダ部日付欠落対応用
*---APPEND END   PSD T.SAITOH 2002/04/23 ---------------------------*
*   データ設定
CONDENSE GF_PARM-F01 NO-GAPS.
CONDENSE GF_PARM-F02 NO-GAPS.
CONDENSE GF_PARM-F03 NO-GAPS.
CONDENSE GF_PARM-F04 NO-GAPS.
CONDENSE GF_PARM-F06 NO-GAPS.
CONDENSE GF_PARM-F07 NO-GAPS.
CONDENSE GF_PARM-F05 NO-GAPS.
CONDENSE GF_PARM-F08 NO-GAPS.
CONDENSE GF_PARM-F09 NO-GAPS.
CONDENSE GF_PARM-F10 NO-GAPS.
IF GF_PARM-F11P < 0.
SHIFT GF_PARM-F11 RIGHT CIRCULAR.
ENDIF.
CONDENSE GF_PARM-F11 NO-GAPS.
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
CONDENSE GF_PARM-F12 NO-GAPS.
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*

*---MODIFY START PSD T.SAITOH 2002/03/05 ---------------------------*
*    GF_PARM_DW-F01 = GF_PARM-F01.
*    GF_PARM_DW-F02 = GF_PARM-F02.
*    GF_PARM_DW-F03 = GF_PARM-F03.
*    GF_PARM_DW-F04 = GF_PARM-F04.
*    GF_PARM_DW-F05 = GF_PARM-F06.
*    GF_PARM_DW-F06 = GF_PARM-F07.
*    GF_PARM_DW-F07 = GF_PARM-F05.
*    GF_PARM_DW-F08 = GF_PARM-F08.
*    GF_PARM_DW-F09 = GF_PARM-F09.
*    GF_PARM_DW-F10 = GF_PARM-F10.
*    GF_PARM_DW-F11 = GF_PARM-F11.

GF_PARM_DW-F01 = GF_PARM-F01.
GF_PARM_DW-F02 = GF_PARM-F02.
GF_PARM_DW-F03 = GF_PARM-F03.
GF_PARM_DW-F04 = GF_PARM-F04.
GF_PARM_DW-F05 = GF_PARM-F06.
GF_PARM_DW-F06 = GF_PARM-F07.
GF_PARM_DW-F07 = GF_PARM-F05.
GF_PARM_DW-F08 = GF_PARM-F12.
GF_PARM_DW-F09 = GF_PARM-F08.
GF_PARM_DW-F10 = GF_PARM-F09.
GF_PARM_DW-F11 = GF_PARM-F10.
GF_PARM_DW-F12 = GF_PARM-F11.
*---APPEND START PSD T.SAITOH 2002/04/17 無駄な項目非表示-----------*
* もとデータから取得しているため→もとデータが複雑なためここで対応
IF NOT ( GF_PARM_DW-F01 IS INITIAL ).
*---MODIFY START PSD T.SAITOH 2002/04/23 ---------------------------*
*     ヘッダ行はクリアしない。（ヘッダ以降を部分的クリアしている）
IF L_TABIX >= 5.
CLEAR: GF_PARM_DW-F04,
GF_PARM_DW-F08,
GF_PARM_DW-F09,
GF_PARM_DW-F10,
GF_PARM_DW-F11,
GF_PARM_DW-F12.
ENDIF.
*---MODIFY END   PSD T.SAITOH 2002/04/23 ---------------------------*
ENDIF.
*---APPEND END   PSD T.SAITOH 2002/04/17 ---------------------------*
*---MODIFY END   PSD T.SAITOH 2002/03/05 ---------------------------*
APPEND GF_PARM_DW TO GT_PARM_DW.
ENDLOOP.
*---MODIFY END   PSD T.SAITOH 2002/02/14 ---------------------------*
* ファイル名を指定の型に変換
G_FILENAME = PR_FILE2.
* レポートのみ　または　バッチ処理時はダウンロードしない
* Mod 2010/05/26 --->
*  IF PR_REP = SPACE AND SY-BATCH = SPACE.
IF PR_REP = SPACE AND SY-BATCH = SPACE AND PR_RDL = 'X' .
* Mod 2010/05/26 <---
* ----
LOOP AT GT_PARM_DW INTO GF_PARM_DW.
*   データ編集
PERFORM FRM_DATA_EDIT.

*   ファイルイメージ用
APPEND GF_FILE_IMAGE TO GT_FILE_IMAGE.
ENDLOOP.
* Del ES-UP 2012/08/16 -->
*    CALL FUNCTION 'WS_DOWNLOAD'
*     EXPORTING
**       BIN_FILESIZE                  = ' '
**       CODEPAGE                      = ' '
*        FILENAME                      = G_FILENAME
*        FILETYPE                      = 'DAT'
**       MODE                          = ' '
**       WK1_N_FORMAT                  = ' '
**       WK1_N_SIZE                    = ' '
**       WK1_T_FORMAT                  = ' '
**       WK1_T_SIZE                    = ' '
**       COL_SELECT                    = ' '
**       COL_SELECTMASK                = ' '
**       NO_AUTH_CHECK                 = ' '
**     IMPORTING
**       FILELENGTH                    =
*      TABLES
*        DATA_TAB                      = GT_FILE_IMAGE
**       FIELDNAMES                    =
*      EXCEPTIONS
*        FILE_OPEN_ERROR               = 1
*        FILE_WRITE_ERROR              = 2
*        INVALID_FILESIZE              = 3
*        INVALID_TYPE                  = 4
*        NO_BATCH                      = 5
*        UNKNOWN_ERROR                 = 6
*        INVALID_TABLE_WIDTH           = 7
*        GUI_REFUSE_FILETRANSFER       = 8
*        CUSTOMER_ERROR                = 9
*        OTHERS                        = 10
*              .
* Del ES-UP 2012/08/16 <--
* Add ES-UP 2012/08/16 -->

DATA: L_CODEPAGE TYPE ABAP_ENCODING,
l_filename type string.

*--- シフトJISのコードページを取得
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( 'shift_jis' ).
l_filename = G_FILENAME.

CL_GUI_FRONTEND_SERVICES=>GUI_DOWNLOAD(
EXPORTING
*    BIN_FILESIZE              = BIN_FILESIZE
FILENAME                  = l_filename
FILETYPE                  = 'DAT'
*    APPEND                    = SPACE
*    WRITE_FIELD_SEPARATOR     = SPACE
*    HEADER                    = '00'
*    TRUNC_TRAILING_BLANKS     = SPACE
*    WRITE_LF                  = 'X'
*    COL_SELECT                = SPACE
*    COL_SELECT_MASK           = SPACE
*    DAT_MODE                  = SPACE
*    CONFIRM_OVERWRITE         = SPACE
*    NO_AUTH_CHECK             = SPACE
CODEPAGE                  = L_CODEPAGE
IGNORE_CERR               = ABAP_FALSE
*    REPLACEMENT               = '#'
*    WRITE_BOM                 = SPACE
*    TRUNC_TRAILING_BLANKS_EOL = 'X'
*    WK1_N_FORMAT              = SPACE
*    WK1_N_SIZE                = SPACE
*    WK1_T_FORMAT              = SPACE
*    WK1_T_SIZE                = SPACE
*    SHOW_TRANSFER_STATUS      = 'X'
*    FIELDNAMES                = FIELDNAMES
*    WRITE_LF_AFTER_LAST_LINE  = 'X'
*  IMPORTING
*    FILELENGTH                = FILELENGTH
CHANGING
DATA_TAB                  = GT_FILE_IMAGE
EXCEPTIONS
FILE_WRITE_ERROR          = 1
NO_BATCH                  = 2
GUI_REFUSE_FILETRANSFER   = 3
INVALID_TYPE              = 4
NO_AUTHORITY              = 5
UNKNOWN_ERROR             = 6
HEADER_NOT_ALLOWED        = 7
SEPARATOR_NOT_ALLOWED     = 8
FILESIZE_NOT_ALLOWED      = 9
HEADER_TOO_LONG           = 10
DP_ERROR_CREATE           = 11
DP_ERROR_SEND             = 12
DP_ERROR_WRITE            = 13
UNKNOWN_DP_ERROR          = 14
ACCESS_DENIED             = 15
DP_OUT_OF_MEMORY          = 16
DISK_FULL                 = 17
DP_TIMEOUT                = 18
FILE_NOT_FOUND            = 19
DATAPROVIDER_EXCEPTION    = 20
CONTROL_FLUSH_ERROR       = 21
NOT_SUPPORTED_BY_GUI      = 22
ERROR_NO_GUI              = 23
OTHERS                    = 24 ).

* Add ES-UP 2012/08/16 <--
IF SY-SUBRC <> 0.
*     汎用モジュールエラー
* Mod ES-UP 2012/08/16 -->
*      MESSAGE S502(Z1) WITH 'WS_DOWNLOAD' SY-SUBRC.
MESSAGE S502(Z1) WITH 'GUI_DOWNLOAD' SY-SUBRC.
* Mod ES-UP 2012/08/16 <--
STOP.
ENDIF.

ENDIF."------ NO-BATCH = SPACE AND PR_REP = SPACE

ENDFORM.                    " FRM_LIST_DOWNLOAD
*&---------------------------------------------------------------------*
*&      Form  FRM_LIST_FILE_UP_LOAD
*&---------------------------------------------------------------------*
*       タブ区切りのデータを作成しＲ／３サーバーへデータを格納する
*----------------------------------------------------------------------*
FORM FRM_LIST_FILE_UP_LOAD.
* レポートのみ　または　ローカル出力時はファイル処理をしない
IF PR_REP = SPACE AND pr_rds = CNS_X.

* ファイル名の選定
PERFORM FRM_FILEPATH_CUT USING    G_FILENAME
CHANGING G_REFILENAME.
*---MODIFY START PSD T.SAITOH 2002/03/06 ---------------------------*
* Ｒ／３：ＡＰサーバー：パス＋ファイル名設定
*    CONCATENATE 'D:\WORK\' G_REFILENAME INTO OPEN_FILE.
* ファイルオープン
* Mod ES-UP 2012/08/16 -->
*    OPEN DATASET PR_SFILE FOR OUTPUT IN TEXT MODE.
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
DATA L_CODEPAGE TYPE CPCODEPAGE.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
OPEN DATASET PR_SFILE FOR OUTPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.

* Mod ES-UP 2012/08/16 <--
*---MODIFY END   PSD T.SAITOH 2002/03/06 ---------------------------*

*   ファイルオープンエラーチェック
IF SY-SUBRC <> 0.
MESSAGE S209(Z1).
STOP.
ENDIF.

* ----
LOOP AT GT_PARM_DW INTO GF_PARM_DW.
*   データ編集
PERFORM FRM_DATA_EDIT.

*   実際にＲ／３：ＡＰサーバーへ転送
TRANSFER GF_FILE_IMAGE TO PR_SFILE.
*   ファイルイメージ確認用
*    APPEND GF_FILE_IMAGE TO GT_FILE_IMAGE.
ENDLOOP.

* ファイルクローズ
CLOSE DATASET PR_SFILE.

* ファイルイメージ確認用
***  CALL FUNCTION 'WS_DOWNLOAD'
***   EXPORTING
****       BIN_FILESIZE                  = ' '
****       CODEPAGE                      = ' '
***      FILENAME                      = 'C:\TMP\FILEIMAGE.TXT'
***      FILETYPE                      = 'DAT'
****       MODE                          = ' '
****       WK1_N_FORMAT                  = ' '
****       WK1_N_SIZE                    = ' '
****       WK1_T_FORMAT                  = ' '
****       WK1_T_SIZE                    = ' '
****       COL_SELECT                    = ' '
****       COL_SELECTMASK                = ' '
****       NO_AUTH_CHECK                 = ' '
****     IMPORTING
****       FILELENGTH                    =
***    TABLES
***      DATA_TAB                      = GT_FILE_IMAGE
****       FIELDNAMES                    =
****     EXCEPTIONS
****       FILE_OPEN_ERROR               = 1
****       FILE_WRITE_ERROR              = 2
****       INVALID_FILESIZE              = 3
****       INVALID_TYPE                  = 4
****       NO_BATCH                      = 5
****       UNKNOWN_ERROR                 = 6
****       INVALID_TABLE_WIDTH           = 7
****       GUI_REFUSE_FILETRANSFER       = 8
****       CUSTOMER_ERROR                = 9
****       OTHERS                        = 10
***            .
***  IF SY-SUBRC <> 0.
***    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
***        WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
***  ENDIF.
***
***  WRITE:/'FILE TEST OK'.

ENDIF."------ NO-BATCH = SPACE AND PR_REP = CNS_X

ENDFORM.                    " FRM_LIST_FILE_UP_LOAD
*&---------------------------------------------------------------------*
*&      Form  FRM_SPACE_CUT
*&---------------------------------------------------------------------*
*       スペースをカットする
*----------------------------------------------------------------------*
*      -->P_GF_FILE_IMAGE_FLINE  text
*----------------------------------------------------------------------*
FORM FRM_SPACE_CUT USING    P_GF_FILE_IMAGE_FLINE.

DATA: L_STRING(256) TYPE C,
L_LEN         TYPE P,
L_CHANGE_LEN  TYPE P,
L_LOOP        TYPE P.

* 文字取得
L_STRING = P_GF_FILE_IMAGE_FLINE.
* 文字数取得
L_LEN = STRLEN( L_STRING ).

DO L_LEN TIMES.
IF L_STRING+L_LOOP(1) <> SPACE.
L_CHANGE_LEN = L_LEN - L_LOOP.
P_GF_FILE_IMAGE_FLINE = L_STRING+L_LOOP(L_CHANGE_LEN).
EXIT.
ENDIF.
L_LOOP = L_LOOP + 1.
ENDDO.

ENDFORM.                    " FRM_SPACE_CUT
*&---------------------------------------------------------------------*
*&      Form  FRM_FILEPATH_CUT
*&---------------------------------------------------------------------*
*       パスつきファイル名からパス名を取り除く
*----------------------------------------------------------------------*
FORM FRM_FILEPATH_CUT USING    P_FILENAME
CHANGING P_REFILENAME.
DATA: LEN TYPE I,
L_FILENAME(256) TYPE C.

L_FILENAME = P_FILENAME.

DO 256 TIMES.
LEN = STRLEN( L_FILENAME ).
SEARCH L_FILENAME FOR '\'.
IF SY-SUBRC = 4.
EXIT.
ENDIF.
SY-FDPOS = SY-FDPOS + 1.
L_FILENAME = L_FILENAME+SY-FDPOS(LEN).
ENDDO.

P_REFILENAME = L_FILENAME.

ENDFORM.                    " FRM_FILEPATH_CUT
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_EDIT
*&---------------------------------------------------------------------*
*       ファイルをＡＰサーバーに格納する前のデータを編集する
*----------------------------------------------------------------------*
FORM FRM_DATA_EDIT.

PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F01.
PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F02.
PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F03.
PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F04.
PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F05.
PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F06.
PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F07.
PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F08.
PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F09.
PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F10.
PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F11.
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
PERFORM FRM_SPACE_CUT USING GF_PARM_DW-F12.
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*

CONCATENATE:
GF_PARM_DW-F01 CNSX_TAB
GF_PARM_DW-F02 CNSX_TAB
GF_PARM_DW-F03 CNSX_TAB
GF_PARM_DW-F04 CNSX_TAB
GF_PARM_DW-F05 CNSX_TAB
GF_PARM_DW-F06 CNSX_TAB
GF_PARM_DW-F07 CNSX_TAB
GF_PARM_DW-F08 CNSX_TAB
GF_PARM_DW-F09 CNSX_TAB
GF_PARM_DW-F10 CNSX_TAB
GF_PARM_DW-F11 CNSX_TAB
*---APPEND START PSD T.SAITOH 2002/03/05 ---------------------------*
GF_PARM_DW-F12
*---APPEND END   PSD T.SAITOH 2002/03/05 ---------------------------*
INTO GF_FILE_IMAGE-FLINE.

ENDFORM.                    " FRM_DATA_EDIT
*&---------------------------------------------------------------------*
*&      Form  FRM_AFTER_MESSAGE
*&---------------------------------------------------------------------*
*       メッセージ処理
*----------------------------------------------------------------------*
FORM FRM_AFTER_MESSAGE.
* バッチ処理＋ファイル出力時時の完了メッセージ
IF PR_REP = SPACE AND SY-BATCH = CNS_X.
MESSAGE S853(Z1) WITH G_REFILENAME.
* オンライン時＋ファイル出力時のメッセージ
ELSEIF PR_REP = SPACE AND SY-BATCH = SPACE.
*   ファイル名の選定
PERFORM FRM_FILEPATH_CUT USING    G_FILENAME
CHANGING G_REFILENAME.
MESSAGE S853(Z1) WITH G_REFILENAME.
* ファイル出力しないときのメッセージ
ELSE.
MESSAGE S852(Z1).
ENDIF.
ENDFORM.                    " FRM_AFTER_MESSAGE
*&---------------------------------------------------------------------*
*&      Form  FRM_ZERO_CHECK
*&---------------------------------------------------------------------*
*       ０件チェック
*----------------------------------------------------------------------*
FORM FRM_ZERO_CHECK.

DATA:L_CNT_PARMREC(14) TYPE N."GT_PARMのレコード数

DESCRIBE TABLE GT_PARM LINES L_CNT_PARMREC.
* ファイル出力用内部ＴＢＬが0件ならば再ブレイクと判断しない
IF L_CNT_PARMREC <= CNS_INIT_RECNUM.
MESSAGE S204(Z1).
STOP.
ENDIF.

ENDFORM.                    " FRM_ZERO_CHECK
*&---------------------------------------------------------------------*
*&      Form  FRM_AR_CHECKAND
*&---------------------------------------------------------------------*
*       集計後の売掛金が０円の仕入先は対象外とする
*----------------------------------------------------------------------*
FORM FRM_AR_CHECKAND.
DATA:L_TMP_LIFNR LIKE LFA1-LIFNR,
L_WK_DMBTR  LIKE BSEG-DMBTR.

GT_CP_PARMPRO = GT_PARMPRO.
* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_CP_PARMPRO ASCENDING BY LIFNR
ZUONR.

LOOP AT GT_CP_PARMPRO INTO GF_CP_PARMPRO.
AT NEW LIFNR.
L_TMP_LIFNR = GF_CP_PARMPRO-LIFNR.
ENDAT.

IF GF_CP_PARMPRO-HKONT IN S_CRDT."債権勘定に含まれるもの
L_WK_DMBTR = L_WK_DMBTR + GF_CP_PARMPRO-DMBTR.
ENDIF.

AT END OF LIFNR.
IF L_WK_DMBTR = 0 AND L_TMP_LIFNR <> SPACE.
DELETE GT_PARMPRO WHERE LIFNR = L_TMP_LIFNR.
ENDIF.

CLEAR:L_TMP_LIFNR,
L_WK_DMBTR.
ENDAT.
ENDLOOP.


ENDFORM.                    " FRM_AR_CHECKAND
*---APPEND START PSD T.SAITOH 2002/04/22 ---------------------------*
* 支払計＝０かつ差額＜０を対象外に変更
*&---------------------------------------------------------------------*
*&      Form  FRM_OUT_OF_THE_TARGET
*&---------------------------------------------------------------------*
*       対象外データの削除
*----------------------------------------------------------------------*
FORM FRM_OUT_OF_THE_TARGET.

* 対象外番号リスト作成
LOOP AT GT_PARM INTO GF_PARM.
*   最初の４行は無条件CONTINUE
IF SY-TABIX < 5.
CONTINUE.
ENDIF.
*   番号設定し逃亡
IF GF_PARM-F01 <> SPACE.
GF_OUTLIST-NUMBER = GF_PARM-F01.
CONTINUE.
ENDIF.
*   合計行を見つけ比較
IF GF_PARM-F02 = CNS_TOTAL_J.
*     支払計＝０　AND　差額＜０ならば
IF GF_PARM-F09P = 0 AND GF_PARM-F11P < 0.
*       対象外リストに追加
APPEND GF_OUTLIST TO GT_OUTLIST.
ENDIF.
ENDIF.
ENDLOOP.

CLEAR: GF_OUTLIST,
GF_PARM.

LOOP AT GT_PARM INTO GF_PARM.
*---APPEND START PSD T.SAITOH 2002/04/23 現総合計は破棄------------*
*   最終レコードは破棄
AT LAST.
EXIT.
ENDAT.
*---APPEND END   PSD T.SAITOH 2002/04/23 ---------------------------*
*   最初の４行は無条件CONTINUE
IF SY-TABIX < 5.
APPEND GF_PARM TO LT_PARM.
CONTINUE.
ENDIF.
*   番号取得しリターン値設定
IF GF_PARM-F01 <> SPACE.
READ TABLE GT_OUTLIST INTO GF_OUTLIST
WITH KEY NUMBER = GF_PARM-F01.
L_SUBRC = SY-SUBRC.
*     正規番号書き換え
IF SY-SUBRC <> 0.
L_NUMBER = L_NUMBER + 1.
ENDIF.
ENDIF.
*   リターン値が０なら、対象外のため、APPENDしない
IF L_SUBRC <> 0.
*     新しい番号を設定
IF GF_PARM-F01 <> SPACE.
GF_PARM-F01 = L_NUMBER.
ENDIF.
*     合計行集計
IF GF_PARM-F02 = CNS_TOTAL_J.
PERFORM FRM_COMPUTE_LTOTAL.
ENDIF.
APPEND GF_PARM TO LT_PARM.
ENDIF.
ENDLOOP.
* 総合計行の編集
PERFORM FRM_LTOTAL_EDIT.
* 出力用テーブルに戻す
GT_PARM = LT_PARM.

ENDFORM.                    " FRM_OUTSIDE_OF_THE_TARGET
*---APPEND END   PSD T.SAITOH 2002/04/22 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/04/23 ---------------------------*
* 支払計＝０かつ差額＜０を対象外に変更
*&---------------------------------------------------------------------*
*&      Form  FRM_COMPUTE_LTOTAL
*&---------------------------------------------------------------------*
*       総合計行の再設定
*----------------------------------------------------------------------*
FORM FRM_COMPUTE_LTOTAL.
LF_PARM-F03P = LF_PARM-F03P + GF_PARM-F03P.
LF_PARM-F04P = LF_PARM-F04P + GF_PARM-F04P.
LF_PARM-F05P = LF_PARM-F05P + GF_PARM-F05P.
LF_PARM-F06P = LF_PARM-F06P + GF_PARM-F06P.
LF_PARM-F07P = LF_PARM-F07P + GF_PARM-F07P.
LF_PARM-F08P = LF_PARM-F08P + GF_PARM-F08P.
LF_PARM-F09P = LF_PARM-F09P + GF_PARM-F09P.
LF_PARM-F10P = LF_PARM-F10P + GF_PARM-F10P.
LF_PARM-F11P = LF_PARM-F11P + GF_PARM-F11P.
LF_PARM-F12P = LF_PARM-F12P + GF_PARM-F12P.
ENDFORM.                    " FRM_COMPUTE_LTOTAL
*&---------------------------------------------------------------------*
*&      Form  FRM_LTOTAL_EDIT
*&---------------------------------------------------------------------*
*       総合計行の編集
*----------------------------------------------------------------------*
FORM FRM_LTOTAL_EDIT.
LF_PARM-F02 = CNS_LTOTAL_J.
WRITE LF_PARM-F03P TO LF_PARM-F03.
WRITE LF_PARM-F04P TO LF_PARM-F04.
WRITE LF_PARM-F05P TO LF_PARM-F05.
WRITE LF_PARM-F06P TO LF_PARM-F06.
WRITE LF_PARM-F07P TO LF_PARM-F07.
WRITE LF_PARM-F08P TO LF_PARM-F08.
WRITE LF_PARM-F09P TO LF_PARM-F09.
WRITE LF_PARM-F10P TO LF_PARM-F10.
WRITE LF_PARM-F11P TO LF_PARM-F11.
WRITE LF_PARM-F12P TO LF_PARM-F12.

APPEND LF_PARM TO LT_PARM.

ENDFORM.                    " FRM_LTOTAL_EDIT
*---APPEND END   PSD T.SAITOH 2002/04/23 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/04/23 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_SY_ULINE
*&---------------------------------------------------------------------*
*       下の横線を引く
*----------------------------------------------------------------------*
FORM FRM_SY_ULINE.
WRITE : /1(185) SY-ULINE,
185(1)   SY-VLINE.
ENDFORM.                    " FRM_SY_ULINE
*---APPEND END   PSD T.SAITOH 2002/04/23 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_BSAK_AUGDT
*&---------------------------------------------------------------------*
*       指定月決済された伝票を取得する
*----------------------------------------------------------------------*
FORM FRM_GET_BSAK_AUGDT.

LOOP AT GT_LFA1 INTO GF_LFA1.

SELECT LIFNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
AUGBL
AUGDT
GJAHR
BELNR
BLART "伝票タイプ
FROM BSAK
APPENDING CORRESPONDING FIELDS OF TABLE GT_BSAK_AUGDT
WHERE BUKRS = PR_BUKRS
AND LIFNR = GF_LFA1-LIFNR
AND BUDAT IN S_ZFBDT
AND ( HKONT IN S_DEBT
OR HKONT IN S_CASH
OR HKONT IN S_DEPS
*---DELETE START PSD T.SAITOH 2002/09/25 ---------------------------*
*             OR HKONT IN S_BLPY
*---DELETE END   PSD T.SAITOH 2002/09/25 ---------------------------*
OR HKONT IN S_OFFEO
OR HKONT IN S_DCNT
OR HKONT IN S_ETC )
AND BLART IN S_BLBSEG
.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
*        MESSAGE S600(Z1) WITH CNS_BSAK_J.
*        STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSAK' SY-SUBRC.
*        STOP.
ENDCASE.
ENDLOOP.
ENDFORM.                    " FRM_GET_BSAK_AUGDT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_BSIK
*&---------------------------------------------------------------------*
*       支払手形再集計
*----------------------------------------------------------------------*
FORM FRM_SELECT_BSIK.

clear: GT_BSIK_BILL,gf_bsik_bill.

SELECT LIFNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
AUGBL
AUGDT
GJAHR
BELNR
BLART "伝票タイプ
FROM BSIK
APPENDING CORRESPONDING FIELDS OF TABLE GT_BSIK_BILL
WHERE BUKRS = PR_BUKRS
AND LIFNR = GF_PARMPRO-LIFNR
*---MODIFY START SOLFIS M.MAEKAWA 2009/08/20---------------------------*
*             AND UMSKZ = 'W'
AND ( UMSKZ = 'W' OR UMSKZ = 'Z' )
*---MODIFY END   SOLFIS M.MAEKAWA 2009/08/20---------------------------*
AND BUDAT IN S_ZFBDT
AND HKONT IN S_BLPY
AND BLART IN S_BLBSEG.

LOOP AT GT_BSIK_BILL INTO GF_BSIK_BILL.
IF GF_BSIK_BILL-SHKZG = CNS_H.
GF_PKIND-LACCP = GF_PKIND-LACCP + GF_BSIK_BILL-DMBTR * 100.
GF_PARMT-F07   = GF_PARMT-F07   + GF_BSIK_BILL-DMBTR * 100.
ELSE.
GF_PKIND-LACCP = GF_PKIND-LACCP - GF_BSIK_BILL-DMBTR * 100.
GF_PARMT-F07   = GF_PARMT-F07   - GF_BSIK_BILL-DMBTR * 100.
ENDIF.
ENDLOOP.


ENDFORM.                    " FRM_SELECT_BSIK
*&---------------------------------------------------------------------*
*&      Form  FRM_SOUSAI
*&--------------------------------------------------------------------
*　　　　相殺金額集計  2002/10/10
*----------------------------------------------------------------------*
FORM FRM_SOUSAI.
*相殺処理を行った会計伝票の明細を取得する
DATA: G_TAB_BSEG TYPE SORTED TABLE OF TYP_BSXZ
WITH UNIQUE KEY BELNR
GJAHR
BUZEI.
LOOP AT GT_BSEG INTO GF_BSEG
WHERE LIFNR = GF_PARMPRO-LIFNR
AND HKONT IN S_OFFEO    "相殺勘定
.
GF_BSEG2-GJAHR = GF_BSEG-GJAHR.
GF_BSEG2-BELNR = GF_BSEG-BELNR.
GF_BSEG2-BUZEI = GF_BSEG-BUZEI.
GF_BSEG2-LIFNR = GF_BSEG-LIFNR.
GF_BSEG2-KUNNR = GF_BSEG-KUNNR.
GF_BSEG2-ZUONR = GF_BSEG-ZUONR.
GF_BSEG2-SHKZG = GF_BSEG-SHKZG.
GF_BSEG2-DMBTR = GF_BSEG-DMBTR.
GF_BSEG2-HKONT = GF_BSEG-HKONT.
GF_BSEG2-ZFBDT = GF_BSEG-ZFBDT.
GF_BSEG2-AUGBL = GF_BSEG-AUGBL.
GF_BSEG2-AUGDT = GF_BSEG-AUGDT.
GF_BSEG2-BLART = GF_BSEG-BLART.
INSERT GF_BSEG2 INTO TABLE G_TAB_BSEG.
ENDLOOP.
*相殺処理を行った会計伝票の明細を取得する
DATA: G_TAB_BSEG_SOSAI TYPE SORTED TABLE OF TYP_BSXZ
WITH UNIQUE KEY BELNR
GJAHR
BUZEI.
LOOP AT G_TAB_BSEG INTO GF_BSEG2.
SELECT GJAHR BUZEI BELNR SHKZG HKONT DMBTR ZFBDT FROM BSEG
INTO CORRESPONDING FIELDS OF GF_BSEG2
WHERE BUKRS = PR_BUKRS       "会社コード
AND BELNR = GF_BSEG2-BELNR  "伝票番号
AND GJAHR = GF_BSEG2-GJAHR  "会計年度
AND ( HKONT IN S_OFFEO     "相殺勘定
OR HKONT IN S_DEBT )  "買掛勘定
.
INSERT GF_BSEG2 INTO TABLE G_TAB_BSEG_SOSAI.
ENDSELECT.
ENDLOOP.
*相殺金額の集計
*決済会計伝票から勘定コードを判定し相殺金額を求める
*SOUSAI・・・相殺勘定の合計
*YOTEI・・・売掛金勘定の合計
*上記は売掛金の一部相殺を考慮している
G_SOUSAI_1 = 0.
G_YOTEI_1  = 0.
*伝票毎の相殺額を取得
LOOP AT G_TAB_BSEG_SOSAI INTO GF_BSEG2.
AT NEW BELNR.
G_SOUSAI = 0.
G_YOTEI  = 0.
ENDAT.

IF GF_BSEG2-SHKZG = 'H'.
GF_BSEG2-DMBTR = GF_BSEG2-DMBTR * 100.
ELSE.
GF_BSEG2-DMBTR = GF_BSEG2-DMBTR * 100 * -1.
ENDIF.
IF GF_BSEG2-HKONT IN S_OFFEO.
G_SOUSAI = G_SOUSAI + GF_BSEG2-DMBTR.
ENDIF.
IF GF_BSEG2-HKONT IN S_DEBT.
G_YOTEI = G_YOTEI + GF_BSEG2-DMBTR.
ENDIF.

AT END OF BELNR.
G_SOUSAI_1 = G_SOUSAI_1 + G_SOUSAI.
G_YOTEI_1 = G_YOTEI_1 + G_YOTEI.
ENDAT.
ENDLOOP.
*仕入先毎の合計から実相殺額を求める
IF G_SOUSAI_1 < 0.
G_SOUSAI_1 = G_SOUSAI_1 * -1.
ENDIF.
IF G_YOTEI_1 < 0.
G_YOTEI_1  = G_YOTEI_1 * -1.
ENDIF.
IF G_SOUSAI_1 > G_YOTEI_1.
GF_PKIND-OFFSET = GF_PKIND-OFFSET + G_YOTEI_1.
GF_PARMT-F10    = GF_PARMT-F10    + G_YOTEI_1.
ELSE.
GF_PKIND-OFFSET = GF_PKIND-OFFSET + G_SOUSAI_1.
GF_PARMT-F10    = GF_PARMT-F10    + G_SOUSAI_1.
ENDIF.
ENDFORM.
