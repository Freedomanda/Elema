*&---------------------------------------------------------------------*
*& プログラムID : ZEGSDR2020
*& 作成者       : iSiD Wan
*& 作成日       : 2014/10/27
*& 処理概要     : 1.抽出条件を元に承認待ちの受注データを取得する。
*&                2.受注情報を変更し、一時保存と承認できること。
*&                3.受注自動登録ジョブエラーを最小限にするため、
*&                  承認する際に出来る限りにチェックを行い。
*&                4.リカバリを考慮し、エラーになった受注データを
*&                  一覧に表示し変更再承認できること。
*&                5.エラーデータをリカバリするため、オンライン
*&                  ALVで登録済とエラー一覧を確認する。
*&                6.承認済一覧（受注自動登録未）を確認できること。
*&---------------------------------------------------------------------*
*& 改定履歴
*& No   DATE       MODIFYED BY   SUMMARY
*& 0001 2015/3/3   iSiD Ruan    1.お客様のレビュー結果により、画面項目
*&                                を変更する
*&                              2.本社は購買明細ごとで受注伝票を作成、
*&                                海外現法は購買伝票ごとで受注伝票を作成
*& 0002    2015/04/24 iSiD Zhao   メッセージ変数追加対応
*& 0003    2015/07/13 iSiD Ren    PO-SO連携項目の要件変更対応
*& 0004    2015/08/04 iSiD Ren    読込テキスト名の作成処理の修正
*& 0005    2015/08/06 iSiD Ren    貿易条件と最終仕向地の対応
*&                                PO登録者の表示追加
*&                                支払条件の取得方法の変更
*& 0006    2015/08/13 iSiD Ren    品目読替えの対応
*& 0007    2015/08/21 iSiD Ren    EndUserの名称は、
*&                                名称１→名称2+名称3に変更する
*&                                変更する場合は、ロックを明記する
*&                                受注先を変更する場合は、営業所、
*&                                営業グループと営業員を書き換える
*& 0008    2015/08/28 iSiD Ren    承認画面の品目は、SAP品目⇒
*&                                得意先品目に直す
*&                                得意先品目と販売グループを変更可にする
*&                                品目のチェック処理を追加する
*& 0009    2015/08/31 iSiD Ren    明細カテゴリ初期提案改修
*& 0010    2015/09/22 iSiD21    販売価格マスタの価格情報を表示する。
*&                                　　　　　得意先発注番号のロジック変更
*&                                　　　　　用途を入力可に変更
*&---------------------------------------------------------------------*
REPORT  ZEGSDR2020 NO STANDARD PAGE HEADING.
INCLUDE ZEGSDR2020_TOP.

*&----------------------------------------------------------------------
* 選択画面定義(1000)
*&----------------------------------------------------------------------
PARAMETERS:
P_VKORG    TYPE VBAK-VKORG MEMORY ID VKO OBLIGATORY.
" 販売組織
SELECT-OPTIONS:
S_VTWEG    FOR  W_VTWEG MEMORY ID VTW,      " 流通チャネル
S_SPART    FOR  W_SPART MEMORY ID SPA,      " 製品部門
S_VKBUR    FOR  W_VKBUR MEMORY ID VKB,      " 営業所
S_VKGRP    FOR  W_VKGRP,                    " 営業グループ
S_DATE     FOR  W_ZECREYMD.                 " 登録日付

PARAMETERS:
RB_APP   RADIOBUTTON GROUP RB1 DEFAULT 'X', " 承認一覧
RB_ERR   RADIOBUTTON GROUP RB1.             " リカバリ一覧

SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS:
RB_LIST  RADIOBUTTON GROUP RB1.        " 承認済一覧（販売伝票未作成）
SELECTION-SCREEN COMMENT 2(48) TEXT-P01 FOR FIELD RB_LIST.
SELECTION-SCREEN END OF LINE.

*----------------------------------------------------------------------*
* AT SELETION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
* A-1-1．入力チェック
PERFORM CHECK_INPUT.

* A-1-2．整合性チェック
* A-1-2-1．販売エリアの整合性チェック
PERFORM CHECK_TVTA CHANGING TD_TVTA.

* A-1-3．権限チェック
PERFORM CHECK_TVTA_AUTH CHANGING TD_TVTA.

*----------------------------------------------------------------------*
* START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.
* 主処理
PERFORM MAIN_PROCESS.

*&---------------------------------------------------------------------*
*&       Class (Implementation)  CL_EVENT_RECEIVER
*&---------------------------------------------------------------------*
*        クラス:CL_EVENT_RECEIVER
*----------------------------------------------------------------------*
CLASS CL_EVENT_RECEIVER DEFINITION FINAL.

PUBLIC SECTION.
CLASS-METHODS:
*     画面値が変更される時事件
HANDLE_DATA_CHANGED
FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID
IMPORTING ER_DATA_CHANGED,

*     画面値が変更された後事件
HANDLE_DATA_CHANGED_FINISHED
FOR EVENT DATA_CHANGED_FINISHED OF CL_GUI_ALV_GRID
IMPORTING E_MODIFIED,

*     検索F4
HANDLE_F4
FOR EVENT ONF4 OF CL_GUI_ALV_GRID
IMPORTING ER_EVENT_DATA.

ENDCLASS.               "CL_EVENT_RECEIVER
*&---------------------------------------------------------------------*
*&       Class (Implementation)  GCL_EVENT_RECEIVER
*&---------------------------------------------------------------------*
*        クラス:CL_EVENT_RECEIVER
*----------------------------------------------------------------------*
CLASS CL_EVENT_RECEIVER IMPLEMENTATION.
*&---------------------------------------------------------------------*
*&       Method HANDLE_DATA_CHANGED
*&---------------------------------------------------------------------*
*        画面値が変更される時事件
*----------------------------------------------------------------------*
METHOD HANDLE_DATA_CHANGED.

DATA:
LST_MOD      TYPE LVC_S_MODI,
LST_ZTERM    TYPE TYP_ZTERM,
LST_ITEM     TYPE TYP_ALV_ITEM,
LST_MSG      TYPE LVC_S_MSG1,
**** START ADD BY ISID REN 2015/08/07 ****
LW_ERR_FLG   TYPE FLAG,
**** END ADD BY ISID REN 2015/08/07 ****
**** START ADD BY ISID REN 2015/08/28 ****
LW_KDMAT     TYPE KNMT-KDMAT, "得意先品目
LW_MATNR     TYPE KNMT-MATNR, "品目コード
LW_MEINH     TYPE MARM-MEINH, "発注単位
LW_PSTYV     TYPE ZSEGSD0010-PSTYV, "明細カテゴリ (販売伝票)
LST_MVKE_T184 TYPE TYP_MVKE_T184,
LW_MSGTX      TYPE SY-MSGV1,
**** END ADD BY ISID REN 2015/08/28 ****
LW_VALUE     TYPE DZTERM.

LOOP AT ER_DATA_CHANGED->MT_MOD_CELLS INTO LST_MOD.
CASE LST_MOD-FIELDNAME.
WHEN CNS_FNM_ZTERM.
IF LST_MOD-VALUE IS INITIAL.
CALL METHOD ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY
EXPORTING
I_MSGID     = '00'
I_MSGNO     = '055'
I_MSGTY     = CNS_MSG_E
I_FIELDNAME = LST_MOD-FIELDNAME
I_ROW_ID    = LST_MOD-ROW_ID.

CONTINUE.
ENDIF.

CLEAR LST_ZTERM.
LW_VALUE = LST_MOD-VALUE.

READ TABLE TD_ZTERM  INTO LST_ZTERM
WITH KEY ZTERM = LW_VALUE
BINARY SEARCH.

IF SY-SUBRC = 0.
CLEAR LST_ITEM.

LST_ITEM-TEXT1 = LST_ZTERM-TEXT1.

MODIFY TD_ITEM_ALV
FROM LST_ITEM
INDEX LST_MOD-ROW_ID
TRANSPORTING TEXT1.

ELSE.
CALL METHOD ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY
EXPORTING
I_MSGID     = 'V1'
I_MSGNO     = '398'
I_MSGTY     = CNS_MSG_E
I_MSGV1     = LST_MOD-VALUE
I_FIELDNAME = CNS_FNM_ZTERM
I_ROW_ID    = LST_MOD-ROW_ID.
ENDIF.

**** START ADD BY ISID REN 2015/08/28 ****
WHEN CNS_KDMAT.      "得意先品目
*         得意先品目の必須チェック
IF LST_MOD-VALUE IS INITIAL.
CALL METHOD ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY
EXPORTING
I_MSGID     = '00'
I_MSGNO     = '055'
I_MSGTY     = CNS_MSG_E
I_FIELDNAME = LST_MOD-FIELDNAME
I_ROW_ID    = LST_MOD-ROW_ID.
CONTINUE.
ENDIF.

CASE OK_CODE.
WHEN CNS_USER_SHOD
OR CNS_USER_SAVE.
*             チェックしない

WHEN OTHERS.
*             得意先品目マスタの存在チェック
LW_KDMAT = LST_MOD-VALUE. "得意先品目
CLEAR LW_MATNR.
SELECT MATNR  "品目コード
UP TO 1 ROWS
FROM KNMT "得意先/品目情報レコードデータテーブル
INTO LW_MATNR
WHERE VKORG = ST_ZSEGSD0009-VKORG     "販売組織
AND VTWEG = ST_ZSEGSD0009-VTWEG     "流通チャネル
AND KUNNR = ST_ZSEGSD0009-ZEKUNNR1  "受注先
AND KDMAT = LW_KDMAT.               "得意先品目
ENDSELECT.

*             データが存在しない場合
IF SY-SUBRC <> 0.
*               エラーメッセージを表示し、
*               カーソルを該当得意先コードにする
*               得意先品目 &1 は存在しません
CALL METHOD ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY
EXPORTING
I_MSGID     = 'ZMEGSD01'
I_MSGNO     = '126'
I_MSGV1     = LST_MOD-VALUE
I_MSGTY     = CNS_MSG_E
I_FIELDNAME = LST_MOD-FIELDNAME
I_ROW_ID    = LST_MOD-ROW_ID.
CONTINUE.
ENDIF.

*             品目単位の整合性をチェックする
PERFORM CHK_MARM
USING TD_ITEM_ALV          "ALV DATA
LST_MOD-ROW_ID       "ROW ID
LW_MATNR             "品目コード
CHANGING LW_ERR_FLG        "エラーフラグ
LW_PSTYV          "明細カテゴリ (販売伝票)
LW_MEINH.         "発注単位

*             データが存在しない場合
IF LW_ERR_FLG = ABAP_TRUE.
*               エラーメッセージを表示し、
*               カーソルを該当得意先コードにする
*               数量単位: 変換
CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
EXPORTING
INPUT          = LW_MEINH
LANGUAGE       = SY-LANGU
IMPORTING
OUTPUT         = LW_MSGTX
EXCEPTIONS
UNIT_NOT_FOUND = 1
OTHERS         = 2.

IF SY-SUBRC <> 0.
CLEAR LW_MSGTX.
ENDIF.

*               発注単位 &1 は品目マスタに存在しません
CALL METHOD ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY
EXPORTING
I_MSGID     = 'ZMEGSD01'
I_MSGNO     = '127'
I_MSGV1     = LW_MSGTX  "発注単位
I_MSGTY     = CNS_MSG_E
I_FIELDNAME = LST_MOD-FIELDNAME
I_ROW_ID    = LST_MOD-ROW_ID.
CONTINUE.
ENDIF.

*             販売伝票の明細カテゴリの取得処理
CLEAR LW_ERR_FLG.
SELECT SINGLE MATNR     "品目コード
MTPOS     "品目マスタの明細カテゴリグループ
FROM MVKE
INTO CORRESPONDING FIELDS OF LST_MVKE_T184
WHERE MATNR = LW_MATNR                "品目コード
AND VKORG = ST_ZSEGSD0009-VKORG     "販売組織
AND VTWEG = ST_ZSEGSD0009-VTWEG.    "流通チャネル

IF SY-SUBRC <> 0.
LW_ERR_FLG = ABAP_TRUE.
ELSE.
SELECT SINGLE PSTYV                "明細カテゴリ初期値
FROM T184
INTO LST_MVKE_T184-PSTYV
WHERE AUART = ST_ZSEGSD0009-AUART "販売伝票タイプ
AND MTPOS = LST_MVKE_T184-MTPOS "明細カテゴリグループ
AND VWPOS = SPACE               "明細用途
AND UEPST = SPACE. "上位レベル明細の明細カテゴリ

IF SY-SUBRC <> 0.
LW_ERR_FLG = ABAP_TRUE.
ENDIF.
ENDIF.

*             データが存在しない場合
IF LW_ERR_FLG = ABAP_TRUE.
*               エラーメッセージを表示し、
*               カーソルを該当得意先コードにする
*               明細カテゴリを決定できません
CALL METHOD ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY
EXPORTING
I_MSGID     = 'ZMEGSD01'
I_MSGNO     = '129'
I_MSGTY     = CNS_MSG_E
I_FIELDNAME = LST_MOD-FIELDNAME
I_ROW_ID    = LST_MOD-ROW_ID.
CONTINUE.
ENDIF.
ENDCASE.
**** END ADD BY ISID REN 2015/08/28 ****

WHEN CNS_FNM_POSNR
**** START DEL BY ISID REN 2015/08/28 ****
*           OR CNS_FNM_MATNR
**** END DEL BY ISID REN 2015/08/28 ****
OR CNS_FNM_ARKTX
OR CNS_FNM_KWMENG
OR CNS_FNM_VRKME
*           無償の場合、正味価格がゼロ
*            OR CNS_FNM_NETPR
OR CNS_FNM_KPEIN
OR CNS_FNM_WERKS
OR CNS_FNM_ZVRKME
OR CNS_FNM_EDATU.

IF LST_MOD-VALUE IS INITIAL.
CALL METHOD ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY
EXPORTING
I_MSGID     = '00'
I_MSGNO     = '055'
I_MSGTY     = CNS_MSG_E
I_FIELDNAME = LST_MOD-FIELDNAME
I_ROW_ID    = LST_MOD-ROW_ID.
ENDIF.

**** START ADD BY ISID REN 2015/08/07 ****
WHEN CNS_PSTYV. "明細カテゴリ
*         チェック明細カテゴリ
PERFORM CHK_PSTYV
USING TD_ITEM_ALV          "ALV DATA
LST_MOD-ROW_ID       "ROW ID
LST_MOD-VALUE        "明細カテゴリ
ST_ZSEGSD0009-VKORG  "販売組織
ST_ZSEGSD0009-VTWEG  "流通チャネル
ST_ZSEGSD0009-AUART  "販売伝票タイプ
CHANGING LW_ERR_FLG.       "エラーフラグ

*         チェックエラーフラグ
IF LW_ERR_FLG = ABAP_TRUE.
CALL METHOD ER_DATA_CHANGED->ADD_PROTOCOL_ENTRY
EXPORTING
I_MSGID     = 'V1'
I_MSGNO     = '321'
I_MSGV1     = LST_MOD-VALUE
I_MSGTY     = CNS_MSG_E
I_FIELDNAME = LST_MOD-FIELDNAME
I_ROW_ID    = LST_MOD-ROW_ID.
ENDIF.

WHEN OTHERS.
**** END ADD BY ISID REN 2015/08/07 ****
ENDCASE.
ENDLOOP.

CALL METHOD CI_ALV->ACTIVATE_DISPLAY_PROTOCOL( SPACE ).

CASE OK_CODE.
WHEN CNS_USER_BACK
OR  CNS_USER_EXIT.
*       処理なし

WHEN OTHERS.
CLEAR LST_MSG.

READ TABLE ER_DATA_CHANGED->MT_PROTOCOL INTO LST_MSG INDEX 1.

IF ER_DATA_CHANGED->MT_PROTOCOL IS NOT INITIAL.
MESSAGE ID LST_MSG-MSGID TYPE CNS_MSG_S NUMBER LST_MSG-MSGNO
WITH LST_MSG-MSGV1
LST_MSG-MSGV2
LST_MSG-MSGV3
LST_MSG-MSGV4
DISPLAY LIKE CNS_MSG_E.
ENDIF.
ENDCASE.

ENDMETHOD.                    "HANDLE_DATA_CHANGED
*&---------------------------------------------------------------------*
*&      Method  HANDLE_DATA_CHANGED_FINISHED
*&---------------------------------------------------------------------*
*&      データを変更された後
*&---------------------------------------------------------------------*
METHOD HANDLE_DATA_CHANGED_FINISHED.
CALL METHOD CL_GUI_CFW=>SET_NEW_OK_CODE
EXPORTING
NEW_CODE = CNS_USER_ENTR.

CALL METHOD CL_GUI_CFW=>FLUSH.

ENDMETHOD.                    "HANDLE_DATA_CHANGED_FINISHED
*&---------------------------------------------------------------------*
*&      Method  HANDLE_F4
*&---------------------------------------------------------------------*
*&      検索F4
*&---------------------------------------------------------------------*
METHOD HANDLE_F4.
*   検索F4
PERFORM FRM_F4_SHOW.
ER_EVENT_DATA->M_EVENT_HANDLED = ABAP_ON.

ENDMETHOD.                    "HANDLE_F4
ENDCLASS.               "GCL_EVENT_RECEIVER

INCLUDE ZEGSDR2020_F01.
INCLUDE ZEGSDR2020_O01.
INCLUDE ZEGSDR2020_I01.
*Text symbol text・
*B01:Delete
*B02:YES
*B03:NO
*B04:Confirm
*P01:Approved List (Sales Order are not created yet.)
*Selection text・
*P_VKORG:        Sales Organization
*RB_APP:        Approval subject List
*RB_ERR:        Error recovery
*RB_LIST:        Appr. List(SO are not created)
*S_DATE:        Create Date
*S_SPART:        Division
*S_VKBUR:        Sales Office
*S_VKGRP:        Sales Group
*S_VTWEG:        Distribution Channel
