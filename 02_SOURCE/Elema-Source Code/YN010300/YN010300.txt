*&---------------------------------------------------------------------*
*& Report YN010300                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*
*& プログラム：自動照合                                                *
*& 作者      ：梁憶                                                    *
*& 作成日期  ：2006/06/14                                              *
*&---------------------------------------------------------------------*
*& 処理概要&                                                           *
*& 外部データと自社データを照合し、処理結果をアドオンテーブルに格納する*
*&                                                                     *
*&---------------------------------------------------------------------*
*&  変更履歴 ： 2007/02/28 Vertion2
*&  変更内容 ： Version2 (2007/02/28 R.Tomoeda)
*&           ：・支払基準日更新のデフォルトチェックをはずす
*&           ：・照合番号/照合日/照合ユーザ追加
*&           ：・選択画面にコメントを追加
*&  変更履歴 ： 2007/12/03
*&  変更内容 ： 機能改善No.187対応 (2007/12/03 NEGISHI)
*&           ：・バックグラウンド実行時のスプール出力幅を255バイトに変更
*&  変更内容 ： 無効構文修正対応   (2008/01/22 ARII)
*&           ：・STOP命令を置き換え
*&  変更履歴 ： 2009/01/13
*&  変更内容 ： テンプレート改善ＰＪ (2009/01/13 OODUCHI)
*&           ：・パフォーマンス改善
*&  変更履歴 ： 2012/01/05
*&  変更内容 ： elematec様用仕様変更 (2012/01/05 S.Takikawa)
*&  変更履歴 ： 2012/03/05
*&  変更内容 ： elematec様用 QA対応 (2012/03/05 K.Kajisa)
*&           ： 選択画面の初期値提案
*&  変更履歴 ： 2012/04/09
*&  変更内容 ： 自社データ項目チェック 選択可能ボタン許可(K.Kajisa)
*&  変更履歴 ： 2012/04/23
*&  変更内容 ： QA196 パフォーマンス対策(k.kajisa)
*&---------------------------------------------------------------------*
*>>>2007/12/03 バックグラウンド実行時のスプール出力幅を255バイトに変更
*REPORT YN010300  NO STANDARD PAGE HEADING
*                 MESSAGE-ID YN01.
REPORT YN010300  NO STANDARD PAGE HEADING LINE-SIZE 255
MESSAGE-ID YN01.
*<<<2007/12/03 バックグラウンド実行時のスプール出力幅を255バイトに変更
*-- 構築定義 --
* データエレメント取得用
TYPES: BEGIN OF GTS_DATAELEMENT,
TBLID    LIKE DD03L-TABNAME,                "テーブル名
FLDNM    LIKE DD03L-FIELDNAME,              "項目名
ROLLNM   LIKE DD03L-ROLLNAME,               "データエレメント
END OF GTS_DATAELEMENT.
* 画面項目名称取得用
TYPES: BEGIN OF GTS_SCRINFO,
TBLID    LIKE DD03L-TABNAME,                "テーブル名
FLDNM    LIKE DD03L-FIELDNAME,              "項目名
CAPNM    LIKE DFIES-SCRTEXT_L,              "画面項目名称
END OF GTS_SCRINFO.
* 会社コードチェック用
TYPES: BEGIN OF GTS_BUKRS,
BUKRS    LIKE T001-BUKRS,                   "会社コード
END OF GTS_BUKRS.
* 処理対象得意先コード格納用
TYPES: BEGIN OF GTS_KNB1,
BUKRS    LIKE KNB1-BUKRS,                   "会社コード
KUNNR    LIKE KNB1-KUNNR,                   "得意先コード
END OF GTS_KNB1.
* 処理対象仕入先コード格納用
TYPES: BEGIN OF GTS_LFB1,
BUKRS    LIKE LFB1-BUKRS,                   "会社コード
LIFNR    LIKE LFB1-LIFNR,                   "仕入先コード
END OF GTS_LFB1.
* 外部データ格納用
TYPES: BEGIN OF GTS_GAIBUDATA,
BUKRS    LIKE YN110-BUKRS,                  "会社コード
VRFCTON  LIKE YN110-VRFCTON,                "得意先コード
CKEY1    LIKE YN110-CKEY1,                  "照合キー1
CKEY2    LIKE YN110-CKEY2,                  "照合キー2
CKEY3    LIKE YN110-CKEY3,                  "照合キー3
CKEY4    LIKE YN110-CKEY4,                  "照合キー4
CKEY5    LIKE YN110-CKEY5,                  "照合キー5
CKEY6    LIKE YN110-CKEY6,                  "照合キー6
CKEY7    LIKE YN110-CKEY7,                  "照合キー7
CKEY8    LIKE YN110-CKEY8,                  "照合キー8
WAERS    LIKE YN110-WAERS,                  "通貨コード
GJAHR    LIKE YN110-GJAHR,                  "伝票会計年度
SLPDOC   LIKE YN110-SLPDOC,                 "伝票番号
DTLDOC   LIKE YN110-DTLDOC,                 "伝票明細番号
KNQUAN   LIKE YN110-KNQUAN,                 "数量
KNITXAMT LIKE YN110-KNITXAMT,               "税抜金額
KNETXAMT LIKE YN110-KNETXAMT,               "税込金額
* elematec 対応 2012/01/05 ADD >>>
DVSON    LIKE YN110-DVSON,                  "営業所/プラント
* 2012/04/23 QA196 ADD START
LIST1    TYPE YN120-LIST1,
* 2012/04/23 QA196 ADD END
* elematec 対応 2012/01/05 ADD <<<
CSTS     LIKE YN110-CSTS,                   "照合ステータス
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC   LIKE YN110-CHKDOC,                 "照合番号
CHKDAT   LIKE YN110-CHKDOC,                 "照合日
CHKUSR   LIKE YN110-CHKDOC,                 "照合ユーザ
* elematec 対応 2012/01/05 ADD >>>
CZFBDT   LIKE YN110-CZFBDT,                 "照合締日
* elematec 対応 2012/01/05 ADD <<<
*&Ver2 対応 2007/02/28 <<<
END OF GTS_GAIBUDATA.
* 自社データ格納用
TYPES: BEGIN OF GTS_JISYADATA,
BUKRS    LIKE YN120-BUKRS,                  "会社コード
VRFCTON  LIKE YN120-VRFCTON,                "得意先コード
CKEY1    LIKE YN120-CKEY1,                  "照合キー1
CKEY2    LIKE YN120-CKEY2,                  "照合キー2
CKEY3    LIKE YN120-CKEY3,                  "照合キー3
CKEY4    LIKE YN120-CKEY4,                  "照合キー4
CKEY5    LIKE YN120-CKEY5,                  "照合キー5
CKEY6    LIKE YN120-CKEY6,                  "照合キー6
CKEY7    LIKE YN120-CKEY7,                  "照合キー7
CKEY8    LIKE YN120-CKEY8,                  "照合キー8
WAERS    LIKE YN120-WAERS,                  "通貨コード
GJAHR    LIKE YN120-GJAHR,                  "伝票会計年度
SLPDOC   LIKE YN120-SLPDOC,                 "伝票番号
DTLDOC   LIKE YN120-DTLDOC,                 "伝票明細番号
KNQUAN   LIKE YN120-KNQUAN,                 "数量
KNITXAMT LIKE YN120-KNITXAMT,               "税抜金額
KNETXAMT LIKE YN120-KNETXAMT,               "税込金額
* elematec 対応 2012/01/05 ADD >>>
DVSON    LIKE YN110-DVSON,                  "営業所/プラント
* elematec 対応 2012/01/05 ADD <<<
* 2012/04/23 QA196 ADD START
LIST1    TYPE YN120-LIST1,
* 2012/04/23 QA196 ADD END
CSTS     LIKE YN120-CSTS,                   "照合ステータス
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC   LIKE YN110-CHKDOC,                 "照合番号
CHKDAT   LIKE YN110-CHKDOC,                 "照合日
CHKUSR   LIKE YN110-CHKDOC,                 "照合ユーザ
* elematec 対応 2012/01/05 ADD >>>
CZFBDT   LIKE YN120-CZFBDT,                 "照合締日
* elematec 対応 2012/01/05 ADD <<<
*&Ver2 対応 2007/02/28 <<<
END OF GTS_JISYADATA.

*-- テーブル定義 --
TABLES: YN110,                                       "外部データ(売上)
YN120.                                       "自社データ(売上)

*-- 内部テーブル定義 --
DATA: GDT_DATAELEMENT TYPE STANDARD TABLE OF GTS_DATAELEMENT,
"データエレメント取得用
GDT_SCRINFO     TYPE STANDARD TABLE OF GTS_SCRINFO,
"画面項目名称取得用
GDT_BUKRS       TYPE STANDARD TABLE OF GTS_BUKRS,
"会社コードチェック用
*-- 20090113 UPD STA 自社データ、外部テーブルをソートテーブルに変更
GDT_JISYADATA   TYPE SORTED TABLE OF GTS_JISYADATA
WITH NON-UNIQUE KEY BUKRS VRFCTON CKEY1 CKEY2
CKEY3 CKEY4 CKEY5 CKEY6 CKEY7 CKEY8 WAERS,
"自社データ格納用
GDT_GAIBUDATA   TYPE SORTED TABLE OF GTS_GAIBUDATA
WITH NON-UNIQUE KEY BUKRS VRFCTON CKEY1 CKEY2
CKEY3 CKEY4 CKEY5 CKEY6 CKEY7 CKEY8 WAERS.
"外部データ格納用
*-- 20090113 UPD END
*-- 20090113 INS STA
TYPES : BEGIN OF GTS_LOCK,
BUKRS   LIKE YN110-BUKRS,
VRFCTON LIKE YN110-VRFCTON,
* elematec 対応 2012/01/05 ADD >>>
WERKS   TYPE WERKS_D,
* elematec 対応 2012/01/05 ADD <<<
END OF GTS_LOCK.
DATA : GDT_JISYA_LOCK   TYPE SORTED TABLE OF GTS_LOCK
WITH NON-UNIQUE KEY BUKRS VRFCTON,
"自社データ取引先ロック用
GDT_GAIBU_LOCK   TYPE SORTED TABLE OF GTS_LOCK
WITH NON-UNIQUE KEY BUKRS VRFCTON,
"外部データ取引先ロック用
GDS_JISYA_LOCK   TYPE GTS_LOCK,            "自社データ格納用
GDS_GAIBU_LOCK   TYPE GTS_LOCK.            "外部データ格納用

TYPES: TYP_T_DD03P TYPE STANDARD TABLE OF DD03P.

* エレメント内部テーブル
DATA: T_DD03P_YN110 TYPE TYP_T_DD03P,
T_DD03P_YN120 TYPE TYP_T_DD03P,
T_DD03P_YN210 TYPE TYP_T_DD03P,
T_DD03P_YN220 TYPE TYP_T_DD03P.

*-- 20090113 INS END

*-- 作業領域定義 --
DATA: GDS_DATAELEMENT TYPE GTS_DATAELEMENT,      "データエレメント取得用
GDS_SCRINFO     TYPE GTS_SCRINFO,              "画面項目名称取得用
GDS_BUKRS       TYPE GTS_BUKRS,              "会社コードチェック用
GDS_JISYADATA   TYPE GTS_JISYADATA,            "自社データ格納用
GDS_GAIBUDATA   TYPE GTS_GAIBUDATA.            "外部データ格納用

*-- 変数定義 --
DATA: GDF_GAIBU_TBL(5)  TYPE C,                      "外部テーブル
GDF_JISYA_TBL(5)  TYPE C,                      "自社テーブル
GDF_SYOGO_TBL(5)  TYPE C,                      "照合マスタテーブル
GDF_SYOGO_LINE    LIKE SY-TABIX,               "照合マスタ情報件数
GDF_GAIBU_LINE    LIKE SY-TABIX,               "外部情報件数
GDF_JISYA_LINE    LIKE SY-TABIX,               "自社情報件数
GDF_SYOGO_STATUS  LIKE YN110-CSTS,             "照合ステータス
GDF_LINE_CNT      LIKE SY-TABIX,               "変更した件数
GDF_TAISYO_KENSU  LIKE SY-TABIX,               "対象件数
GDF_SYOGO_KENSU_J LIKE SY-TABIX,               "照合件数(自社)
GDF_SYOGO_KENSU_G LIKE SY-TABIX,               "照合件数(外部)
GDF_SYOGO_KENSU   LIKE SY-TABIX,               "照合件数
GDF_SRSG_KENSU_J  LIKE SY-TABIX,               "数量差異件数(自社)
GDF_SRSG_KENSU_G  LIKE SY-TABIX,               "数量差異件数(外部)
GDF_SRSG_KENSU    LIKE SY-TABIX,               "数量差異件数
GDF_TKSG_KENSU_J  LIKE SY-TABIX,               "単価差異件数(自社)
GDF_TKSG_KENSU_G  LIKE SY-TABIX,               "単価差異件数(外部)
GDF_TKSG_KENSU    LIKE SY-TABIX,               "単価差異件数
GDF_GBDN_KENSU    LIKE SY-TABIX,               "外部データなし件数
GDF_JSDN_KENSU    LIKE SY-TABIX,               "自社データなし件数
GDF_KNITXAMT      LIKE YN110-KNITXAMT,         "税抜差額格納用
GDF_KNETXAMT      LIKE YN110-KNETXAMT,         "税込差額格納用
GDF_KNQUAN        LIKE YN110-KNQUAN,           "数量の差格納用
GDF_PRINT_FLAG(1) TYPE C.                "件数／エラー出力用フラグ

*-- 定数定義 --
CONSTANTS: GCF_C_X(1)         TYPE C VALUE 'X',      "'X'
GCF_C_ZERO(1)      TYPE C VALUE '0',      "'0'
GCF_C_ONE(1)       TYPE C VALUE '1',      "'1'
GCF_C_TWO(1)       TYPE C VALUE '2',      "'2'
GCF_C_THREE(1)     TYPE C VALUE '3',      "'3'
GCF_C_FOUR(1)      TYPE C VALUE '4',      "'4'
GCF_C_FIVE(1)      TYPE C VALUE '5',      "'5'
*-- 20090113 INS STA
GCF_C_SIX(1)       TYPE C VALUE '6',      "'6'
*-- 20090113 INS END
GCF_C_SEVEN(1)     TYPE C VALUE '7',      "'7'
GCF_C_EIGHT(1)     TYPE C VALUE '8',      "'8'
GCF_I_ZERO         TYPE I VALUE '0',      "0
GCF_I_ONE          TYPE I VALUE '1',      "1
GCF_I_TNY_SEVEN    TYPE I VALUE '27',     "27
GCF_C_DEFAULT(7)   TYPE C VALUE 'DEFAULT',"'DEFAULT'
GCF_PGM_ID(8)      TYPE C VALUE 'YN010300',
"'YN010300'
GCF_TBL_DD03L(5)   TYPE C VALUE 'DD03L',  "'DD03L'
GCF_GAIBU_TBL_U(5) TYPE C VALUE 'YN110',  "外部データ(売上)
GCF_JISYA_TBL_U(5) TYPE C VALUE 'YN120',  "自社データ(売上)
GCF_SYOGO_TBL_U(5) TYPE C VALUE 'YN130',  "照合マスタ(売上)
GCF_GAIBU_TBL_S(5) TYPE C VALUE 'YN210',  "外部データ(仕入)
GCF_JISYA_TBL_S(5) TYPE C VALUE 'YN220',  "自社データ(仕入)
GCF_SYOGO_TBL_S(5) TYPE C VALUE 'YN230',  "照合マスタ(仕入)
GCF_VRFCT1_LOW     LIKE DYNPREAD-FIELDNAME
VALUE 'P_VRFCT1-LOW',   "'P_VRFCT1-LOW'
GCF_VRFCT1_HIGH    LIKE DYNPREAD-FIELDNAME
VALUE 'P_VRFCT1-HIGH',  "'P_VRFCT1-HIGH'
GCF_VRFCT2_LOW     LIKE DYNPREAD-FIELDNAME
VALUE 'P_VRFCT2-LOW',   "'P_VRFCT2-LOW'
GCF_VRFCT2_HIGH    LIKE DYNPREAD-FIELDNAME
VALUE 'P_VRFCT2-HIGH',  "'P_VRFCT2-HIGH'
GCF_VRFCTON(7)     TYPE C VALUE 'VRFCTON',"'VRFCTON'
*** 2012/05/25 INSERT START ***
* 自社データ同時取込で使用する。
C_CANCEL(4) TYPE C VALUE 'MR8M'.
*** 2012/05/25 INSERT END ***

* 照合ステータス
CONSTANTS: C_CSTS_INIT                  TYPE C VALUE '1',
C_CSTS_NO_EXTERNAL           TYPE C VALUE '2',
C_CSTS_NO_INTERNAL           TYPE C VALUE '3',
C_CSTS_DIFFERENT_QUANTITY    TYPE C VALUE '4',
C_CSTS_DIFFERENT_PRICE       TYPE C VALUE '5',
C_CSTS_OK                    TYPE C VALUE '7'.

* 売上／仕入区分
CONSTANTS: C_MODE_SALES                 TYPE C VALUE '1',
C_MODE_PURCHASE              TYPE C VALUE '2'.

CONSTANTS: C_RC_CODE_ERROR         LIKE SY-SUBRC VALUE '9',
C_RC_CODE_DB_ERROR      LIKE SY-SUBRC VALUE '8',
C_RC_CODE_NOT_EXIST     LIKE SY-SUBRC VALUE '4',
C_RC_CODE_NO_AUTHORITY  LIKE SY-SUBRC VALUE '5'.

* 売上／仕入区分
DATA: P_MODE TYPE C,
OUTPUT_FLAG TYPE C,
RC_CODE LIKE SY-SUBRC .

* elematec 対応 2012/01/05 ADD >>>
CONSTANTS: C_ON                   TYPE CHAR1 VALUE 'X',
C_OTHER_VRFCTON        TYPE CHAR10 VALUE '+'.
* 得意先の支払人取得用
TYPES:BEGIN OF TYP_KNVP,
KUNNR  TYPE KUNNR,          "得意先(受注先)
KUNN2  TYPE KUNN2,          "得意先(支払人)
END   OF TYP_KNVP.
* 処理対象の得意先(受注先)/仕入先(発注先)内部テーブル
TYPES:BEGIN OF TYP_LIST1,
LIST1    TYPE CHAR10,       "得意先(受注先)/仕入先(発注先)
END   OF TYP_LIST1.
DATA:T_LIST1    TYPE STANDARD TABLE OF TYP_LIST1.
* 売上照合時・照合キー桁数取得用
TYPES:BEGIN OF TYP_YN130_CKEY,
VRFCTON   TYPE YNKUNNR,
BUKRS     TYPE BUKRS,
P_STRNO_U  TYPE ZNEP_STRNO_U,
P_ENDNO_U  TYPE ZNEP_ENDNO_U,
P_STRNO_K  TYPE ZNEP_STRNO_K,
P_ENDNO_K  TYPE ZNEP_ENDNO_K,
END   OF TYP_YN130_CKEY.
DATA:T_YN130_CKEY  TYPE STANDARD TABLE OF TYP_YN130_CKEY.
* elematec 対応 2012/01/05 ADD <<<
* 2012/03/06 ADD START
DATA:G_DATE(2) TYPE N. "照合締日 日付
* 2012/03/06 ADD END
*-- 20090113 UPD STA 画面項目定義方法をYN010400と合わせる
*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
* 売上/仕入区分
SELECTION-SCREEN BEGIN OF BLOCK BK1 WITH FRAME TITLE TEXT-T01.
SELECTION-SCREEN BEGIN OF LINE.
* 売上照合
PARAMETERS P_SALES RADIOBUTTON GROUP RAD1 DEFAULT 'X'
USER-COMMAND RADIO.
SELECTION-SCREEN COMMENT 4(18) TEXT-T02.
* 仕入照合
PARAMETERS P_PRCHS RADIOBUTTON GROUP RAD1.
SELECTION-SCREEN COMMENT 26(18) TEXT-T03.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK BK1.

* elematec 対応 2012/01/05 ADD >>>
SELECTION-SCREEN BEGIN OF BLOCK BK8 WITH FRAME TITLE TEXT-014.
PARAMETERS P_CZFBDT TYPE YN210-CZFBDT OBLIGATORY.
SELECTION-SCREEN END OF BLOCK BK8.
* elematec 対応 2012/01/05 ADD <<<

* パラメータ定義、照合対象データの取得
INCLUDE YN01_YN010300_0000.

* 処理オプション
SELECTION-SCREEN BEGIN OF BLOCK BK4 WITH FRAME TITLE TEXT-T06.
PARAMETERS P_PG TYPE C AS CHECKBOX.
SELECTION-SCREEN BEGIN OF BLOCK BK5 WITH FRAME TITLE TEXT-T07.
SELECT-OPTIONS: P_CPUDT FOR YN110-UPDDAT
* elematec 対応 2012/01/05 INSERT START
NO INTERVALS NO-EXTENSION ,
P_DVSON3 FOR YN120-DVSON   MODIF ID 020 NO INTERVALS,
P_LIST23 FOR YN120-LIST2   MODIF ID 020,
P_LIST33 FOR YN120-LIST3   MODIF ID 020.
* elematec 対応 2012/01/05 INSERT END

*&Ver2 対応 2007/02/28 >>> 支払基準日更新のデフォルトチェックをはずす
PARAMETERS P_OVWRT TYPE C AS CHECKBOX. "DEFAULT 'X'.
*&Ver2 対応 2007/02/28 <<<
SELECTION-SCREEN END OF BLOCK BK5.
SELECTION-SCREEN END OF BLOCK BK4.
*-- 20090113 UPD END 画面項目定義方法をYN010400と合わせる
*elematec 対応 2012/01/05 INSERT START
SELECTION-SCREEN BEGIN OF BLOCK BK6 WITH FRAME TITLE TEXT-S01.
PARAMETERS:P_EKORG TYPE LFM1-EKORG OBLIGATORY, "購買組織
P_PARVW TYPE WYT3-PARVW OBLIGATORY. "取引先機能
SELECTION-SCREEN END OF BLOCK BK6.
*
SELECTION-SCREEN BEGIN OF BLOCK BK7 WITH FRAME TITLE TEXT-S02.
PARAMETERS:P_VKORG TYPE KNVV-VKORG OBLIGATORY, "販売組織
P_VTWEG TYPE KNVV-VTWEG OBLIGATORY, "流通チャネル
P_SPART TYPE KNVV-SPART OBLIGATORY, "製品部門
P_PARVWK TYPE KNVP-PARVW OBLIGATORY. "取引先機能
SELECTION-SCREEN END OF BLOCK BK7.
*elematec 対応 2012/01/05 INSERT END

* 自社データ取込
INCLUDE YN01_YN010200.
* 照合
INCLUDE YN01_YN010400_0001.
* elematec 対応 2012/01/05 ADD >>>
TYPE-POOLS:SSCR.
* elematec 対応 2012/01/05 ADD <<<

*-- 20090113 INS STA 画面項目定義方法をYN010400と合わせる
*&---------------------------------------------------------------------*
*&   Event LOAD-Of-PROGRAM
*&---------------------------------------------------------------------*
LOAD-OF-PROGRAM.

* 出力項目定義取得
PERFORM GET_TABLE_FIELDS.
*-- 20090113 INS END 画面項目定義方法をYN010400と合わせる

*&---------------------------------------------------------------------*
*& EVENT INITIALIZATION                                                *
*&---------------------------------------------------------------------*
INITIALIZATION.
* 初期処理
PERFORM INIT.

* elematec 対応 2012/01/05 ADD >>>
*---選択画面の複数入力ボタン制御
PERFORM BUTTON_CONTROL.
*---デフォルト値設定
PERFORM INIT_OUT.
* elematec 対応 2012/01/05 ADD <<<

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VRFCT1-LOW.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING GCF_VRFCT1_LOW.

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VRFCT1-HIGH.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING GCF_VRFCT1_HIGH.

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VRFCT2-LOW.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING GCF_VRFCT2_LOW.

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VRFCT2-HIGH.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING GCF_VRFCT2_HIGH.

* elematec 対応 2012/01/05 ADD >>>
*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_LIST11-LOW.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING 'P_LIST11-LOW'.

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_LIST12-LOW.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING 'P_LIST12-LOW'.

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_DVSON1-LOW.
PERFORM F4_INPUT USING 'P_DVSON1-LOW'.
*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_DVSON2-LOW.
PERFORM F4_INPUT USING 'P_DVSON2-LOW'.
* elematec 対応 2012/01/05 ADD <<<

*&---------------------------------------------------------------------*
*& EVENT AT SELECTION-SCREEN OUTPUT                                    *
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN OUTPUT.
IF P_SALES = 'X'.
P_MODE = C_MODE_SALES.
ELSEIF P_PRCHS = 'X'.
P_MODE = C_MODE_PURCHASE.
ENDIF.
*-- 20090113 UPD STA 画面項目定義方法をYN010400と合わせる
* 選択画面の項目名称の初期設定
PERFORM SET_DYNPRO_TEXT.
*-- 20090113 UPD END 画面項目定義方法をYN010400と合わせる

*&---------------------------------------------------------------------*
*& EVENT AT SELECTION-SCREEN                                           *
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN.
CASE SY-UCOMM.
WHEN 'RADIO'.
*-- 20090113 UPD STA 画面項目定義方法をYN010400と合わせる
* 選択画面の項目名称の再設定
*      PERFORM CAPTION_SET.
*-- 20090113 UPD END 画面項目定義方法をYN010400と合わせる
WHEN OTHERS.
* 入力チェック
PERFORM CHECK.
ENDCASE.

*&---------------------------------------------------------------------*
*& EVENT AT START-OF-SELECTION                                         *
*&---------------------------------------------------------------------*
START-OF-SELECTION.
* 自社データ取込の実行
IF P_PG = GCF_C_X.
PERFORM YN010200_MAIN.
ENDIF.

* 照合マスタの自動照合許容範囲の取得
PERFORM GET_T_COMPARE_RANGE.
IF RC_CODE <> 0.
EXIT.
ENDIF.
* elematec 対応 2012/01/05 ADD >>>
* 対象の得意先(受注先)/仕入先(発注先)設定
PERFORM SET_LIST1.
* elematec 対応 2012/01/05 ADD <<<

* 照合対象データの取得
PERFORM SYOGO_DATA_GET.
*-- 20090113 MOV STA ロック処理をデータ取得後に移動
* テーブルのロック
PERFORM TABLE_LOCK.
*-- 20090113 MOV END
* 集計処理
PERFORM SET_T_COMPARE.
* elematec 対応 2012/01/05 ADD >>>
* キー項目の制御【売上】
PERFORM SUM_KEY.
* elematec 対応 2012/01/05 ADD <<<
* チェック処理
PERFORM CHECK_T_COMPARE.
* elematec 対応 2012/01/05 ADD >>>
* チェック処理2(自動照合独自チェック)
PERFORM CHECK_T_COMPARE2.
* elematec 対応 2012/01/05 ADD <<<
* 照合処理
PERFORM COMPARE.
* 内部テーブル更新
PERFORM SYOGO_DATA_UPDATE.
* テーブルの更新
PERFORM TABLE_UPDATE.
* コミット処理
COMMIT WORK.
* テーブルロックの解除
PERFORM TABLE_UNLOCK.
* 結果出力
OUTPUT_FLAG = '2'.
PERFORM RESULT_PRINT.

*&---------------------------------------------------------------------*
*&      Form  INIT
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM INIT.
* 初期化
CLEAR: GDS_DATAELEMENT,
GDS_SCRINFO,
GDS_BUKRS,
GDS_JISYADATA,
GDS_GAIBUDATA,
GDS_JISYA_LOCK,
GDS_GAIBU_LOCK.

REFRESH: GDT_DATAELEMENT,
GDT_SCRINFO,
GDT_BUKRS,
GDT_JISYADATA,
GDT_GAIBUDATA,
GDT_JISYA_LOCK,
GDT_GAIBU_LOCK.

GDF_SYOGO_LINE    = GCF_I_ZERO.
GDF_GAIBU_LINE    = GCF_I_ZERO.
GDF_JISYA_LINE    = GCF_I_ZERO.
GDF_LINE_CNT      = GCF_I_ZERO.
GDF_TAISYO_KENSU  = GCF_I_ZERO.
GDF_SYOGO_KENSU_J = GCF_I_ZERO.
GDF_SYOGO_KENSU_G = GCF_I_ZERO.
GDF_SYOGO_KENSU   = GCF_I_ZERO.
GDF_SRSG_KENSU_J  = GCF_I_ZERO.
GDF_SRSG_KENSU_G  = GCF_I_ZERO.
GDF_SRSG_KENSU    = GCF_I_ZERO.
GDF_TKSG_KENSU_J  = GCF_I_ZERO.
GDF_TKSG_KENSU_G  = GCF_I_ZERO.
GDF_TKSG_KENSU    = GCF_I_ZERO.
GDF_GBDN_KENSU    = GCF_I_ZERO.
GDF_JSDN_KENSU    = GCF_I_ZERO.
GDF_PRINT_FLAG    = GCF_C_ZERO.
ENDFORM.                    " INIT

*&---------------------------------------------------------------------*
*&      Form  CHECK
*&---------------------------------------------------------------------*
*       入力チェック
*----------------------------------------------------------------------*
FORM CHECK.
* 会社コードのチェック
IF P_BUKRS1-LOW <> SPACE.
SELECT COUNT(*)                                  "会社コード
FROM T001
WHERE BUKRS = P_BUKRS1-LOW.
IF SY-SUBRC <> 0.
MESSAGE E750 WITH P_BUKRS1-LOW.
ENDIF.
ENDIF.
IF P_BUKRS2-LOW <> SPACE.
SELECT COUNT(*)                                  "会社コード
FROM T001
WHERE BUKRS = P_BUKRS2-LOW.
IF SY-SUBRC <> 0.
MESSAGE E750 WITH P_BUKRS2-LOW.
ENDIF.
ENDIF.
SELECT BUKRS                                       "会社コード
FROM T001
APPENDING TABLE GDT_BUKRS
WHERE BUKRS IN P_BUKRS1.
IF SY-SUBRC <> 0.
MESSAGE E762.
ENDIF.
SELECT BUKRS                                       "会社コード
FROM T001
APPENDING TABLE GDT_BUKRS
WHERE BUKRS IN P_BUKRS2.
IF SY-SUBRC <> 0.
MESSAGE E762.
ENDIF.
*-- 20090113 INS STA
SORT GDT_BUKRS BY BUKRS.
DELETE ADJACENT DUPLICATES FROM GDT_BUKRS.
*-- 20090113 INS END
* 権限チェック
IF P_SALES = GCF_C_X.
LOOP AT GDT_BUKRS
INTO GDS_BUKRS.
AUTHORITY-CHECK OBJECT 'F_KNA1_BUK'
ID 'BUKRS' FIELD GDS_BUKRS-BUKRS
ID 'ACTVT' DUMMY.
IF SY-SUBRC <> 0.
MESSAGE E751 WITH GDS_BUKRS-BUKRS.
ENDIF.
ENDLOOP.
ENDIF.
IF P_PRCHS = GCF_C_X.
LOOP AT GDT_BUKRS
INTO GDS_BUKRS.
AUTHORITY-CHECK OBJECT 'F_LFA1_BUK'
ID 'BUKRS' FIELD GDS_BUKRS-BUKRS
ID 'ACTVT' DUMMY.
IF SY-SUBRC <> 0.
MESSAGE E751 WITH GDS_BUKRS-BUKRS.
ENDIF.
ENDLOOP.
ENDIF.
DATA: L_VRFCT LIKE YN110-VRFCTON.
* 取引先コードのチェック
* elematec 対応 2012/01/05 ADD >>>
* 必須チェック
IF P_LIST11[] IS INITIAL.
IF SY-UCOMM+0(1) <> '%'.    "複数入力ボタン押下以外
IF P_SALES = 'X'.
MESSAGE E901 WITH TEXT-012.
ENDIF.
IF P_PRCHS = 'X'.
MESSAGE E901 WITH TEXT-011.
ENDIF.
ENDIF.
ENDIF.
* 入力値チェック
PERFORM CHECK_VRFCTON_RANGE TABLES   P_LIST11
CHANGING L_VRFCT.
*  PERFORM CHECK_VRFCTON_RANGE TABLES   P_VRFCT1
*                              CHANGING L_VRFCT.
* elematec 対応 2012/01/05 ADD <<<
IF NOT L_VRFCT IS INITIAL.
* 2012/04/09 ADD START
IF SY-UCOMM+0(1) <> '%'.    "複数入力ボタン押下以外
* 2012/04/09 ADD END
IF P_SALES = 'X'.
MESSAGE E752 WITH L_VRFCT.
ENDIF.
IF P_PRCHS = 'X'.
MESSAGE E753 WITH L_VRFCT.
ENDIF.
* 2012/04/09 ADD START
ENDIF.
* 2012/04/09 ADD END
* elematec 対応 2012/01/05 ADD >>>
ELSE.
* 2012/04/09 DEL START
*   自社データの受注先を外部データ受注先へコピー
*    P_LIST12[] = P_LIST11[].
* 2012/04/09 DEL END

* elematec 対応 2012/01/05 ADD <<<
ENDIF.
* 2012/04/09 DEL START
** elematec 対応 2012/01/05 ADD >>>
*  PERFORM CHECK_VRFCTON_RANGE TABLES   P_LIST12
*                              CHANGING L_VRFCT.
**  PERFORM CHECK_VRFCTON_RANGE TABLES   P_VRFCT2
**                              CHANGING L_VRFCT.
** elematec 対応 2012/01/05 ADD <<<
*    IF NOT L_VRFCT IS INITIAL.
*      IF P_SALES = 'X'.
*        MESSAGE E752 WITH L_VRFCT.
*      ENDIF.
*      IF P_PRCHS = 'X'.
*        MESSAGE E753 WITH L_VRFCT.
*      ENDIF.
*    ENDIF.
* 2012/04/09 DEL END

* 利益センタのチェック
IF P_PRCTR1-LOW <> SPACE.
SELECT COUNT(*)                                  "利益センタ
FROM CEPC AS A
INNER JOIN TKA02 AS B
ON A~KOKRS = B~KOKRS
WHERE A~PRCTR = P_PRCTR1-LOW
AND B~BUKRS IN P_BUKRS1.
IF SY-SUBRC <> 0.
MESSAGE E761 WITH P_PRCTR1-LOW.
ENDIF.
ENDIF.
IF P_PRCTR2-LOW <> SPACE.
SELECT COUNT(*)                                  "利益センタ
FROM CEPC AS A
INNER JOIN TKA02 AS B
ON A~KOKRS = B~KOKRS
WHERE A~PRCTR = P_PRCTR2-LOW
AND B~BUKRS IN P_BUKRS2.
IF SY-SUBRC <> 0.
MESSAGE E761 WITH P_PRCTR2-LOW.
ENDIF.
ENDIF.

* elematec 対応 2012/01/05 ADD >>>
* プラントの入力チェック
IF  P_DVSON1[] IS INITIAL.     "未入力の場合
IF SY-UCOMM+0(1) <> '%'.    "複数入力ボタン押下以外
IF P_MODE = C_MODE_SALES.  "[売上照合]
MESSAGE E901 WITH TEXT-009.
ELSE.                      "[仕入照合]
MESSAGE E901 WITH TEXT-010.
ENDIF.
ENDIF.

* 入力がある場合
ELSE.
*   "*"はエラーとする
IF P_DVSON1-LOW = '*'.
IF P_MODE = C_MODE_SALES.  "[売上照合]
MESSAGE E912 WITH TEXT-009.
ELSE.
MESSAGE E912 WITH TEXT-010.
ENDIF.
ELSE.
* 2012/04/09 ADD START
**     自社データのプラントを外部データのプラントへコピー
*      P_DVSON2[] = P_DVSON1[].
**     自社データのプラントを外部データ取込のプラントへコピー
*      P_DVSON3[] = P_DVSON1[].
* 2012/04/09 ADD END
ENDIF.
ENDIF.

* 自社データ取込のチェック

* 2012/04/09 ADD START
IF SY-UCOMM+0(1) <> '%'.    "複数入力ボタン押下以外
* 2012/04/09 ADD END
IF P_PG = C_ON.
PERFORM CHECK_P_PG  TABLES P_DVSON3
P_LIST23
P_LIST33.
ENDIF.
* 2012/04/09 ADD START
ENDIF.               "複数入力ボタン押下以外
* 2012/04/09 ADD END
* 照合締日の入力値チェック
IF P_CZFBDT IS INITIAL
OR P_LIST11[] IS INITIAL.
ELSE.
IF SY-UCOMM+0(1) <> '%'.
PERFORM CHECK_CZFBDT TABLES P_LIST11
USING  P_CZFBDT.

ENDIF.
ENDIF.
* elematec 対応 2012/01/05 ADD <<<
* 2012/04/09 ADD START
*   自社データの受注先を外部データ受注先へコピー
P_LIST12[] = P_LIST11[].
*     自社データのプラントを外部データのプラントへコピー
P_DVSON2[] = P_DVSON1[].
*     自社データのプラントを外部データ取込のプラントへコピー
P_DVSON3[] = P_DVSON1[].
* 2012/04/09 ADD END

ENDFORM.                    " CHECK

*&---------------------------------------------------------------------*
*&      Form  TABLE_LOCK
*&---------------------------------------------------------------------*
*       テーブルのロック
*----------------------------------------------------------------------*
FORM TABLE_LOCK.
DATA: L_USER LIKE SY-MSGV1.

* elematec 対応 2012/01/05 ADD >>>
DATA: YNTEXT LIKE SY-TITLE,
L_TNAME TYPE STRING.
* elematec 対応 2012/01/05 ADD <<<

*-- 20090113 INS STA
* 取得データからロック対象のキーテーブル作成
*-- 自社データ
LOOP AT GDT_JISYADATA INTO GDS_JISYADATA.
GDS_JISYA_LOCK-BUKRS   = GDS_JISYADATA-BUKRS.
GDS_JISYA_LOCK-VRFCTON = GDS_JISYADATA-VRFCTON.
* elematec 対応 2012/01/05 ADD >>>
GDS_JISYA_LOCK-WERKS   =  GDS_JISYADATA-DVSON.
* elematec 対応 2012/01/05 ADD <<<
INSERT GDS_JISYA_LOCK INTO TABLE GDT_JISYA_LOCK.
ENDLOOP.
DELETE ADJACENT DUPLICATES FROM GDT_JISYA_LOCK.

*-- 外部データ
LOOP AT GDT_GAIBUDATA INTO GDS_GAIBUDATA.
GDS_GAIBU_LOCK-BUKRS   = GDS_GAIBUDATA-BUKRS.
GDS_GAIBU_LOCK-VRFCTON = GDS_GAIBUDATA-VRFCTON.
* elematec 対応 2012/01/05 ADD >>>
GDS_GAIBU_LOCK-WERKS   =  GDS_GAIBUDATA-DVSON.
* elematec 対応 2012/01/05 ADD <<<
INSERT GDS_GAIBU_LOCK INTO TABLE GDT_GAIBU_LOCK.
ENDLOOP.
DELETE ADJACENT DUPLICATES FROM GDT_GAIBU_LOCK.
*-- 20090113 INS END

*-- 20090113 UPD STA LOOPする内部テーブルを変更
* ＤＢテーブルのロック
IF P_SALES = GCF_C_X.
* elematec 対応 2012/01/05 ADD >>>
CLEAR:TAB_LOCK.
APPEND LINES OF GDT_GAIBU_LOCK TO TAB_LOCK.
APPEND LINES OF GDT_JISYA_LOCK TO TAB_LOCK.
SORT TAB_LOCK.
DELETE ADJACENT DUPLICATES FROM TAB_LOCK COMPARING ALL FIELDS.
PERFORM TABLE_LOCK_902.
IF RC_CODE_LOCK <> 0.
YNTEXT = SY-MSGV1.
L_TNAME = 'YN110'.
RC_CODE = RC_CODE_LOCK.
MESSAGE I756 WITH L_TNAME YNTEXT.
LEAVE LIST-PROCESSING.
ENDIF.

*    LOOP AT GDT_GAIBU_LOCK
*       INTO GDS_GAIBU_LOCK.
*      CALL FUNCTION 'ENQUEUE_EY_YN110'
*        EXPORTING
*          VRFCTON              = GDS_GAIBU_LOCK-VRFCTON
*          BUKRS                = GDS_GAIBU_LOCK-BUKRS
*        EXCEPTIONS
*          FOREIGN_LOCK         = 1
*          SYSTEM_FAILURE       = 2
*          OTHERS               = 3.
*      L_USER = SY-MSGV1.
*      IF SY-SUBRC <> 0.
*        MESSAGE I756 WITH GDF_GAIBU_TBL L_USER.
** 20080122 STOP命令置き換え <<<
*        LEAVE LIST-PROCESSING.
**        STOP.
** 20080122 <<<
*      ENDIF.
*    ENDLOOP.
*
*    LOOP AT GDT_JISYA_LOCK
*       INTO GDS_JISYA_LOCK.
*      CALL FUNCTION 'ENQUEUE_EY_YN120'
*        EXPORTING
*          VRFCTON              = GDS_JISYA_LOCK-VRFCTON
*          BUKRS                = GDS_JISYA_LOCK-BUKRS
*        EXCEPTIONS
*          FOREIGN_LOCK         = 1
*          SYSTEM_FAILURE       = 2
*          OTHERS               = 3.
*      L_USER = SY-MSGV1.
*      IF SY-SUBRC <> 0.
*        MESSAGE I756 WITH GDF_JISYA_TBL L_USER.
** 20080122 STOP命令置き換え <<<
*        LEAVE LIST-PROCESSING.
**        STOP.
** 20080122 <<<
*      ENDIF.
*    ENDLOOP.
* elematec 対応 2012/01/05 ADD <<<
ENDIF.

IF P_PRCHS = GCF_C_X.
* elematec 対応 2012/01/05 ADD >>>
CLEAR:TAB_LOCK.
APPEND LINES OF GDT_GAIBU_LOCK TO TAB_LOCK.
APPEND LINES OF GDT_JISYA_LOCK TO TAB_LOCK.
SORT TAB_LOCK.
DELETE ADJACENT DUPLICATES FROM TAB_LOCK COMPARING ALL FIELDS.
PERFORM TABLE_LOCK_901.
IF RC_CODE_LOCK <> 0.
YNTEXT = SY-MSGV1.
L_TNAME = 'YN210'.
RC_CODE = RC_CODE_LOCK.
MESSAGE I756 WITH L_TNAME YNTEXT.
LEAVE LIST-PROCESSING.
ENDIF.
*    LOOP AT GDT_GAIBU_LOCK
*       INTO GDS_GAIBU_LOCK.
*      CALL FUNCTION 'ENQUEUE_EY_YN210'
*        EXPORTING
*          VRFCTON              = GDS_GAIBU_LOCK-VRFCTON
*          BUKRS                = GDS_GAIBU_LOCK-BUKRS
*        EXCEPTIONS
*          FOREIGN_LOCK         = 1
*          SYSTEM_FAILURE       = 2
*          OTHERS               = 3.
*      L_USER = SY-MSGV1.
*      IF SY-SUBRC <> 0.
*        MESSAGE I756 WITH GDF_GAIBU_TBL L_USER.
** 20080122 STOP命令置き換え <<<
*        LEAVE LIST-PROCESSING.
**        STOP.
** 20080122 <<<
*      ENDIF.
*    ENDLOOP.
*
*    LOOP AT GDT_JISYA_LOCK
*       INTO GDS_JISYA_LOCK.
*      CALL FUNCTION 'ENQUEUE_EY_YN220'
*        EXPORTING
*          VRFCTON              = GDS_JISYA_LOCK-VRFCTON
*          BUKRS                = GDS_JISYA_LOCK-BUKRS
*        EXCEPTIONS
*          FOREIGN_LOCK         = 1
*          SYSTEM_FAILURE       = 2
*          OTHERS               = 3.
*      L_USER = SY-MSGV1.
*      IF SY-SUBRC <> 0.
*        MESSAGE I756 WITH GDF_JISYA_TBL L_USER.
** 20080122 STOP命令置き換え <<<
*        LEAVE LIST-PROCESSING.
**        STOP.
** 20080122 <<<
*      ENDIF.
*    ENDLOOP.
* elematec 対応 2012/01/05 ADD <<<
ENDIF.
*-- 20090113 UPD END
ENDFORM.                    " TABLE_LOCK

*&---------------------------------------------------------------------*
*&      Form  TABLE_UPDATE
*&---------------------------------------------------------------------*
*       テーブルの更新
*----------------------------------------------------------------------*
FORM TABLE_UPDATE.
IF P_SALES = GCF_C_X.
LOOP AT GDT_GAIBUDATA INTO GDS_GAIBUDATA
WHERE NOT CSTS IS INITIAL.
UPDATE YN110
SET CSTS    = GDS_GAIBUDATA-CSTS            "照合ステータス
UPDDAT  = SY-DATUM                      "更新日
UPDTIM  = SY-UZEIT                      "更新時刻
UPDUSR  = SY-UNAME                      "更新ユーザ
UPDPRG  = SY-REPID                      "更新プログラム
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC  = GDS_GAIBUDATA-CHKDOC          "照合番号
CHKDAT  = GDS_GAIBUDATA-CHKDAT          "照合日
CHKUSR  = GDS_GAIBUDATA-CHKUSR          "照合ユーザ
*&Ver2 対応 2007/02/28 <<<
* elematec 対応 2012/01/05 ADD >>>
CZFBDT  = GDS_GAIBUDATA-CZFBDT           "照合締日
* elematec 対応 2012/01/05 ADD <<<
WHERE GJAHR   = GDS_GAIBUDATA-GJAHR
AND SLPDOC  = GDS_GAIBUDATA-SLPDOC
AND DTLDOC  = GDS_GAIBUDATA-DTLDOC
AND BUKRS   = GDS_GAIBUDATA-BUKRS
AND VRFCTON = GDS_GAIBUDATA-VRFCTON.
*-- 20090113 DEL STA 更新キーとしては不要
*         AND CKEY1   = GDS_GAIBUDATA-CKEY1
*         AND CKEY2   = GDS_GAIBUDATA-CKEY2
*         AND CKEY3   = GDS_GAIBUDATA-CKEY3
*         AND CKEY4   = GDS_GAIBUDATA-CKEY4
*         AND CKEY5   = GDS_GAIBUDATA-CKEY5
*         AND CKEY6   = GDS_GAIBUDATA-CKEY6
*         AND CKEY7   = GDS_GAIBUDATA-CKEY7
*         AND CKEY8   = GDS_GAIBUDATA-CKEY8.
*-- 20090113 DEL END
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE I758 WITH GDF_GAIBU_TBL.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.

LOOP AT GDT_JISYADATA INTO GDS_JISYADATA
WHERE NOT CSTS IS INITIAL.
UPDATE YN120
SET CSTS    = GDS_JISYADATA-CSTS            "照合ステータス
UPDDAT  = SY-DATUM                      "更新日
UPDTIM  = SY-UZEIT                      "更新時刻
UPDUSR  = SY-UNAME                      "更新ユーザ
UPDPRG  = SY-REPID                      "更新プログラム
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC  = GDS_JISYADATA-CHKDOC          "照合番号
CHKDAT  = GDS_JISYADATA-CHKDAT          "照合日
CHKUSR  = GDS_JISYADATA-CHKUSR          "照合ユーザ
* elematec 対応 2012/01/05 ADD >>>
CZFBDT  = GDS_JISYADATA-CZFBDT           "照合締日
* elematec 対応 2012/01/05 ADD <<<
*&Ver2 対応 2007/02/28 <<<
WHERE GJAHR   = GDS_JISYADATA-GJAHR
AND SLPDOC  = GDS_JISYADATA-SLPDOC
AND DTLDOC  = GDS_JISYADATA-DTLDOC
AND BUKRS   = GDS_JISYADATA-BUKRS
AND VRFCTON = GDS_JISYADATA-VRFCTON.
*-- 20090113 DEL STA 更新キーとしては不要
*         AND CKEY1   = GDS_JISYADATA-CKEY1
*         AND CKEY2   = GDS_JISYADATA-CKEY2
*         AND CKEY3   = GDS_JISYADATA-CKEY3
*         AND CKEY4   = GDS_JISYADATA-CKEY4
*         AND CKEY5   = GDS_JISYADATA-CKEY5
*         AND CKEY6   = GDS_JISYADATA-CKEY6
*         AND CKEY7   = GDS_JISYADATA-CKEY7
*         AND CKEY8   = GDS_JISYADATA-CKEY8.
*-- 20090113 DEL END
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE I758 WITH GDF_JISYA_TBL.
LEAVE LIST-PROCESSING.
ENDIF.
ENDLOOP.
ENDIF.

IF P_PRCHS = GCF_C_X.
LOOP AT GDT_GAIBUDATA INTO GDS_GAIBUDATA
WHERE NOT CSTS IS INITIAL.
UPDATE YN210
SET CSTS    = GDS_GAIBUDATA-CSTS            "照合ステータス
UPDDAT  = SY-DATUM                      "更新日
UPDTIM  = SY-UZEIT                      "更新時刻
UPDUSR  = SY-UNAME                      "更新ユーザ
UPDPRG  = SY-REPID                      "更新プログラム
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC  = GDS_GAIBUDATA-CHKDOC          "照合番号
CHKDAT  = GDS_GAIBUDATA-CHKDAT          "照合日
CHKUSR  = GDS_GAIBUDATA-CHKUSR          "照合ユーザ
* elematec 対応 2012/01/05 ADD >>>
*            CZFBDT  = P_CZFBDT                      "照合締日
CZFBDT  = GDS_GAIBUDATA-CZFBDT           "照合締日
* elematec 対応 2012/01/05 ADD <<<
*&Ver2 対応 2007/02/28 <<<
WHERE GJAHR   = GDS_GAIBUDATA-GJAHR
AND SLPDOC  = GDS_GAIBUDATA-SLPDOC
AND DTLDOC  = GDS_GAIBUDATA-DTLDOC
AND BUKRS   = GDS_GAIBUDATA-BUKRS
AND VRFCTON = GDS_GAIBUDATA-VRFCTON.
*-- 20090113 DEL STA 更新キーとしては不要
*         AND CKEY1   = GDS_GAIBUDATA-CKEY1
*         AND CKEY2   = GDS_GAIBUDATA-CKEY2
*         AND CKEY3   = GDS_GAIBUDATA-CKEY3
*         AND CKEY4   = GDS_GAIBUDATA-CKEY4
*         AND CKEY5   = GDS_GAIBUDATA-CKEY5
*         AND CKEY6   = GDS_GAIBUDATA-CKEY6
*         AND CKEY7   = GDS_GAIBUDATA-CKEY7
*         AND CKEY8   = GDS_GAIBUDATA-CKEY8.
*-- 20090113 DEL END
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE I758 WITH GDF_GAIBU_TBL.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.

LOOP AT GDT_JISYADATA INTO GDS_JISYADATA
WHERE NOT CSTS IS INITIAL.
UPDATE YN220
SET CSTS    = GDS_JISYADATA-CSTS            "照合ステータス
UPDDAT  = SY-DATUM                      "更新日
UPDTIM  = SY-UZEIT                      "更新時刻
UPDUSR  = SY-UNAME                      "更新ユーザ
UPDPRG  = SY-REPID                      "更新プログラム
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC  = GDS_JISYADATA-CHKDOC          "照合番号
CHKDAT  = GDS_JISYADATA-CHKDAT          "照合日
CHKUSR  = GDS_JISYADATA-CHKUSR          "照合ユーザ
* elematec 対応 2012/01/05 ADD >>>
*            CZFBDT  = P_CZFBDT                      "照合締日
CZFBDT  = GDS_JISYADATA-CZFBDT           "照合締日
* elematec 対応 2012/01/05 ADD <<<
*&Ver2 対応 2007/02/28 <<<
WHERE GJAHR   = GDS_JISYADATA-GJAHR
AND SLPDOC  = GDS_JISYADATA-SLPDOC
AND DTLDOC  = GDS_JISYADATA-DTLDOC
AND BUKRS   = GDS_JISYADATA-BUKRS
AND VRFCTON = GDS_JISYADATA-VRFCTON.
*-- 20090113 DEL STA 更新キーとしては不要
*         AND CKEY1   = GDS_JISYADATA-CKEY1
*         AND CKEY2   = GDS_JISYADATA-CKEY2
*         AND CKEY3   = GDS_JISYADATA-CKEY3
*         AND CKEY4   = GDS_JISYADATA-CKEY4
*         AND CKEY5   = GDS_JISYADATA-CKEY5
*         AND CKEY6   = GDS_JISYADATA-CKEY6
*         AND CKEY7   = GDS_JISYADATA-CKEY7
*         AND CKEY8   = GDS_JISYADATA-CKEY8.
*-- 20090113 DEL END
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE I758 WITH GDF_JISYA_TBL.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.
ENDIF.
ENDFORM.                    " TABLE_UPDATE

*&---------------------------------------------------------------------*
*&      Form  TABLE_UNLOCK
*&---------------------------------------------------------------------*
*       テーブルのロック解除
*----------------------------------------------------------------------*
FORM TABLE_UNLOCK.
IF P_SALES = GCF_C_X.
* elematec 対応 2012/01/05 ADD >>>
PERFORM TABLE_UNLOCK_902.
*    LOOP AT GDT_GAIBU_LOCK
*       INTO GDS_GAIBU_LOCK.
*      CALL FUNCTION 'DEQUEUE_EY_YN110'
*        EXPORTING
*          VRFCTON              = GDS_GAIBU_LOCK-VRFCTON
*          BUKRS                = GDS_GAIBU_LOCK-BUKRS
*        EXCEPTIONS
*          FOREIGN_LOCK         = 1
*          SYSTEM_FAILURE       = 2
*          OTHERS               = 3.
*      IF SY-SUBRC <> 0.
*        MESSAGE I763 WITH GDF_GAIBU_TBL.
** 20080122 STOP命令置き換え <<<
*        LEAVE LIST-PROCESSING.
**        STOP.
** 20080122 <<<
*      ENDIF.
*    ENDLOOP.
*
*    LOOP AT GDT_JISYA_LOCK
*       INTO GDS_JISYA_LOCK.
*      CALL FUNCTION 'DEQUEUE_EY_YN120'
*        EXPORTING
*          VRFCTON              = GDS_JISYA_LOCK-VRFCTON
*          BUKRS                = GDS_JISYA_LOCK-BUKRS
*        EXCEPTIONS
*          FOREIGN_LOCK         = 1
*          SYSTEM_FAILURE       = 2
*          OTHERS               = 3.
*      IF SY-SUBRC <> 0.
*        MESSAGE I763 WITH GDF_JISYA_TBL.
** 20080122 STOP命令置き換え <<<
*        LEAVE LIST-PROCESSING.
**        STOP.
** 20080122 <<<
*      ENDIF.
*    ENDLOOP.
* elematec 対応 2012/01/05 ADD <<<
ENDIF.

IF P_PRCHS = GCF_C_X.
* elematec 対応 2012/01/05 ADD >>>
PERFORM TABLE_UNLOCK_901.

*    LOOP AT GDT_GAIBU_LOCK
*       INTO GDS_GAIBU_LOCK.
*      CALL FUNCTION 'DEQUEUE_EY_YN210'
*        EXPORTING
*          VRFCTON              = GDS_GAIBU_LOCK-VRFCTON
*          BUKRS                = GDS_GAIBU_LOCK-BUKRS
*        EXCEPTIONS
*          FOREIGN_LOCK         = 1
*          SYSTEM_FAILURE       = 2
*          OTHERS               = 3.
*      IF SY-SUBRC <> 0.
*        MESSAGE I763 WITH GDF_GAIBU_TBL.
** 20080122 STOP命令置き換え <<<
*        LEAVE LIST-PROCESSING.
**        STOP.
** 20080122 <<<
*      ENDIF.
*    ENDLOOP.
*
*    LOOP AT GDT_JISYA_LOCK
*       INTO GDS_JISYA_LOCK.
*      CALL FUNCTION 'DEQUEUE_EY_YN220'
*        EXPORTING
*          VRFCTON              = GDS_JISYA_LOCK-VRFCTON
*          BUKRS                = GDS_JISYA_LOCK-BUKRS
*        EXCEPTIONS
*          FOREIGN_LOCK         = 1
*          SYSTEM_FAILURE       = 2
*          OTHERS               = 3.
*      IF SY-SUBRC <> 0.
*        MESSAGE I763 WITH GDF_JISYA_TBL.
*        LEAVE LIST-PROCESSING.
*      ENDIF.
*    ENDLOOP.
* elematec 対応 2012/01/05 ADD <<<
ENDIF.
ENDFORM.                    " TABLE_UNLOCK

*&---------------------------------------------------------------------*
*&      Form  RESULT_PRINT
*&---------------------------------------------------------------------*
*       結果出力
*----------------------------------------------------------------------*
FORM RESULT_PRINT.

DATA: LS_LOGGER LIKE LINE OF T_COMPARE_LOGGER,
LS_COUNTER LIKE LINE OF T_COMPARE_COUNTER.
DATA: L_LINES TYPE I,
L_SKIP TYPE I.

IF P_PG = 'X'.
SKIP.
SKIP.
ENDIF.

* タイトルの出力
PERFORM OUTPUT_TITLE.

DESCRIBE TABLE T_COMPARE_LOGGER LINES L_LINES.
IF L_LINES > 0.
GDF_PRINT_FLAG = GCF_C_ONE.
PERFORM PRINT_TITLE.
L_SKIP = 3.
ELSE.
L_SKIP = 1.
ENDIF.

SORT T_COMPARE_LOGGER BY BUKRS VRFCTON.
LOOP AT T_COMPARE_LOGGER INTO LS_LOGGER.
WRITE: /04 LS_LOGGER-BUKRS,                 "会社コード
15 LS_LOGGER-VRFCTON,               "取引先コード
28 LS_LOGGER-MESSAGE.              "エラー内容
ENDLOOP.

DO L_SKIP TIMES.
SKIP.
ENDDO.

DESCRIBE TABLE T_COMPARE_COUNTER LINES L_LINES.
IF L_LINES > 0.
GDF_PRINT_FLAG = GCF_C_TWO.
PERFORM PRINT_TITLE.
ENDIF.

SORT T_COMPARE_COUNTER BY BUKRS VRFCTON.
LOOP AT T_COMPARE_COUNTER INTO LS_COUNTER.
WRITE: /04  LS_COUNTER-BUKRS,                 "会社コード
15  LS_COUNTER-VRFCTON,               "取引先コード
28  LS_COUNTER-TOTAL,                 "対象件数
39  LS_COUNTER-OK,                    "照合件数
52  LS_COUNTER-DIFFERENT_QUANTITY,    "数量差異件数
65  LS_COUNTER-DIFFERENT_PRICE,       "単価差異件数
84  LS_COUNTER-NO_EXTERNAL,           "外部データなし件数
103 LS_COUNTER-NO_INTERNAL.           "自社データなし件数
ENDLOOP.

DESCRIBE TABLE T_COMPARE_LOGGER LINES L_LINES.
IF L_LINES > 0.
MESSAGE I759.
* elematec 対応 2012/01/05 ADD >>>
* 処理家か画面が表示されないため、コメント化
** 20080122 STOP命令置き換え <<<
*        LEAVE LIST-PROCESSING.
**        STOP.
** 20080122 <<<
* elematec 対応 2012/01/05 ADD <<<
ENDIF.

ENDFORM.                    " RESULT_PRINT

*&---------------------------------------------------------------------*
*&      Form PRINT_TITLE
*&---------------------------------------------------------------------*
*       タイトルの出力
*----------------------------------------------------------------------*
FORM PRINT_TITLE.
IF GDF_PRINT_FLAG = GCF_C_ONE.
WRITE: /04 TEXT-T10,                             "'会社コード'
15 TEXT-T11,                             "'取引先コード'
28 TEXT-T22.                             "'エラー内容'
ULINE.
ENDIF.
IF GDF_PRINT_FLAG = GCF_C_TWO.
WRITE: /04 TEXT-T10,                             "'会社コード'
15 TEXT-T11,                             "'取引先コード'
28 TEXT-T12,                             "'対象件数'
39 TEXT-T13,                             "'照合件数'
50 TEXT-T14,                             "'数量差異件数'
63 TEXT-T15,                             "'単価差異件数'
76 TEXT-T16,                           "'外部データなし件数'
95 TEXT-T17.                           "'自社データなし件数'
ENDIF.
ENDFORM.                    " PRINT_TITLE

*&---------------------------------------------------------------------*
*&      Form PRINT_PAGE_CNT
*&---------------------------------------------------------------------*
*       ページ数の出力
*----------------------------------------------------------------------*
FORM PRINT_PAGE_CNT.
WRITE: /115 TEXT-T23,                              "'ページ:'
123 SY-PAGNO.                              "ページ数
ENDFORM.                    " PRINT_PAGE_CNT
*&---------------------------------------------------------------------*
*&      Form  SET_T_COMPARE
*&---------------------------------------------------------------------*
*       集計処理
*----------------------------------------------------------------------*
FORM SET_T_COMPARE .

DATA: LS_CHECKER LIKE LINE OF T_COMPARE_CHECKER.
DATA: LS_COMPARE TYPE TYP_COMPARE.

REFRESH: T_COMPARE_1, T_COMPARE_2, T_COMPARE_CHECKER.
LOOP AT GDT_GAIBUDATA INTO GDS_GAIBUDATA.
CLEAR: LS_CHECKER, LS_COMPARE.
AT NEW WAERS.
*     集計
SUM.
*     外部データ用照合内部テーブル設定
LS_COMPARE-YNBUKRS = GDS_GAIBUDATA-BUKRS.
LS_COMPARE-YNVRFCTON = GDS_GAIBUDATA-VRFCTON.
LS_COMPARE-YNCKEY1 = GDS_GAIBUDATA-CKEY1.
LS_COMPARE-YNCKEY2 = GDS_GAIBUDATA-CKEY2.
LS_COMPARE-YNCKEY3 = GDS_GAIBUDATA-CKEY3.
LS_COMPARE-YNCKEY4 = GDS_GAIBUDATA-CKEY4.
LS_COMPARE-YNCKEY5 = GDS_GAIBUDATA-CKEY5.
LS_COMPARE-YNCKEY6 = GDS_GAIBUDATA-CKEY6.
LS_COMPARE-YNCKEY7 = GDS_GAIBUDATA-CKEY7.
LS_COMPARE-YNCKEY8 = GDS_GAIBUDATA-CKEY8.
LS_COMPARE-YNWAERS = GDS_GAIBUDATA-WAERS.
LS_COMPARE-YNKNITXAMT = GDS_GAIBUDATA-KNITXAMT.
LS_COMPARE-YNKNETXAMT = GDS_GAIBUDATA-KNETXAMT.
LS_COMPARE-YNKNQUAN = GDS_GAIBUDATA-KNQUAN.
*-- 20090113 UPD STA ハッシュテーブルに変更に伴う修正
*      APPEND LS_COMPARE TO T_COMPARE_1.
INSERT LS_COMPARE INTO TABLE T_COMPARE_1.
*-- 20090113 UPD END
*     照合チェック内部テーブル設定
LS_CHECKER-BUKRS = GDS_GAIBUDATA-BUKRS.
LS_CHECKER-VRFCTON = GDS_GAIBUDATA-VRFCTON.
*      LS_CHECKER-KUBUN = '10'.
LS_CHECKER-WAERS = GDS_GAIBUDATA-WAERS.
COLLECT LS_CHECKER INTO T_COMPARE_CHECKER.
LS_CHECKER-COUNT = 1.
MODIFY TABLE T_COMPARE_CHECKER FROM LS_CHECKER
TRANSPORTING COUNT.
ENDAT.
ENDLOOP.
LOOP AT GDT_JISYADATA INTO GDS_JISYADATA.
CLEAR: LS_CHECKER, LS_COMPARE.
AT NEW WAERS.
*     集計
SUM.
*     外部データ用照合内部テーブル設定
LS_COMPARE-YNBUKRS = GDS_JISYADATA-BUKRS.
LS_COMPARE-YNVRFCTON = GDS_JISYADATA-VRFCTON.
LS_COMPARE-YNCKEY1 = GDS_JISYADATA-CKEY1.
LS_COMPARE-YNCKEY2 = GDS_JISYADATA-CKEY2.
LS_COMPARE-YNCKEY3 = GDS_JISYADATA-CKEY3.
LS_COMPARE-YNCKEY4 = GDS_JISYADATA-CKEY4.
LS_COMPARE-YNCKEY5 = GDS_JISYADATA-CKEY5.
LS_COMPARE-YNCKEY6 = GDS_JISYADATA-CKEY6.
LS_COMPARE-YNCKEY7 = GDS_JISYADATA-CKEY7.
LS_COMPARE-YNCKEY8 = GDS_JISYADATA-CKEY8.
LS_COMPARE-YNWAERS = GDS_JISYADATA-WAERS.
LS_COMPARE-YNKNITXAMT = GDS_JISYADATA-KNITXAMT.
LS_COMPARE-YNKNETXAMT = GDS_JISYADATA-KNETXAMT.
LS_COMPARE-YNKNQUAN = GDS_JISYADATA-KNQUAN.
*-- 20090113 UPD STA ハッシュテーブルに変更に伴う修正
*      APPEND LS_COMPARE TO T_COMPARE_2.
INSERT LS_COMPARE INTO TABLE T_COMPARE_2.
*-- 20090113 UPD END
*     照合チェック内部テーブル設定
LS_CHECKER-BUKRS = GDS_JISYADATA-BUKRS.
LS_CHECKER-VRFCTON = GDS_JISYADATA-VRFCTON.
*      LS_CHECKER-KUBUN = '20'.
LS_CHECKER-WAERS = GDS_JISYADATA-WAERS.
COLLECT LS_CHECKER INTO T_COMPARE_CHECKER.
LS_CHECKER-COUNT = 1.
MODIFY TABLE T_COMPARE_CHECKER FROM LS_CHECKER
TRANSPORTING COUNT.
ENDAT.
ENDLOOP.

ENDFORM.                    " SET_T_COMPARE
*&---------------------------------------------------------------------*
*&      Form  SYOGO_DATA_UPDATE
*&---------------------------------------------------------------------*
*       内部テーブル更新
*----------------------------------------------------------------------*
FORM SYOGO_DATA_UPDATE .

DATA: LS_COMPARE TYPE TYP_COMPARE,
LS_COUNTER LIKE LINE OF T_COMPARE_COUNTER.
* elematec 対応 2012/01/05 ADD >>>
DATA:LW_YN130   TYPE TYP_YN130_CKEY,
LW_VRFCTON TYPE CHAR10,
LW_START   TYPE I,                               "開始バイト数
LW_COLOM   TYPE I,                               "抽出バイト数
LW_CKEY1   TYPE CHAR40.
* elematec 対応 2012/01/05 ADD <<<

REFRESH T_COMPARE_COUNTER.
LOOP AT T_COMPARE_1 INTO LS_COMPARE.
CLEAR LS_COUNTER.
LS_COUNTER-BUKRS = LS_COMPARE-YNBUKRS.
LS_COUNTER-VRFCTON = LS_COMPARE-YNVRFCTON.
* elematec 対応 2012/01/05 ADD >>>
*--- 売上の場合
IF P_MODE = C_MODE_SALES.
*     キー用の桁数を取得
READ TABLE T_YN130_CKEY INTO LW_YN130
WITH KEY VRFCTON = LS_COMPARE-YNVRFCTON  "得意先で検索
BUKRS   = LS_COMPARE-YNBUKRS
BINARY SEARCH.
IF SY-SUBRC <> 0.
CONCATENATE 'D-' LS_COMPARE-YNWAERS
INTO LW_VRFCTON.
READ TABLE T_YN130_CKEY INTO LW_YN130
WITH KEY VRFCTON = LW_VRFCTON           "通貨コードで検索
BUKRS   = LS_COMPARE-YNBUKRS
BINARY SEARCH.
ENDIF.
*     照合キーの照合用桁数を設定
IF SY-SUBRC = 0.
IF LW_YN130-P_STRNO_K = 0.
LW_START = 0.
ELSE.
LW_START = LW_YN130-P_STRNO_K - 1.  "SAP表示桁調整
ENDIF.
IF LW_YN130-P_ENDNO_K = 0.
LW_COLOM = 40.
ELSE.
LW_COLOM = LW_YN130-P_ENDNO_K - LW_YN130-P_STRNO_K + 1.
ENDIF.
ELSE.
LW_START = 0.
LW_COLOM = 40.
ENDIF.

*--- 仕入の場合
ELSE.
LW_START = 0.
LW_COLOM = 40.
ENDIF.
* elematec 対応 2012/01/05 ADD <<<
LOOP AT GDT_GAIBUDATA INTO GDS_GAIBUDATA
WHERE BUKRS   = LS_COMPARE-YNBUKRS
AND VRFCTON = LS_COMPARE-YNVRFCTON
AND CKEY2   = LS_COMPARE-YNCKEY2.
* elematec 対応 2012/01/05 ADD >>>
*        AND CKEY2   = LS_COMPARE-YNCKEY2
*        AND CKEY3   = LS_COMPARE-YNCKEY3
*        AND CKEY4   = LS_COMPARE-YNCKEY4
*        AND CKEY5   = LS_COMPARE-YNCKEY5
*        AND CKEY6   = LS_COMPARE-YNCKEY6
*        AND CKEY7   = LS_COMPARE-YNCKEY7
*        AND CKEY8   = LS_COMPARE-YNCKEY8
*        AND WAERS   = LS_COMPARE-YNWAERS.
*     照合キーが異なる場合は対象外
IF GDS_GAIBUDATA-CKEY1+LW_START(LW_COLOM)
<> LS_COMPARE-YNCKEY1.
CONTINUE.
ENDIF.
* elematec 対応 2012/01/05 ADD <<<
GDS_GAIBUDATA-CSTS = LS_COMPARE-YNCSTS.
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
GDS_GAIBUDATA-CHKDOC = LS_COMPARE-YNCHKDOC.
GDS_GAIBUDATA-CHKDAT = LS_COMPARE-YNCHKDAT.
GDS_GAIBUDATA-CHKUSR = LS_COMPARE-YNCHKUSR.
* elematec 対応 2012/01/05 ADD >>>
GDS_GAIBUDATA-CZFBDT = LS_COMPARE-YNCZFBDT.
* elematec 対応 2012/01/05 ADD <<<
*&Ver2 対応 2007/02/28 <<<
MODIFY GDT_GAIBUDATA FROM GDS_GAIBUDATA.
ADD 1 TO LS_COUNTER-TOTAL.
CASE GDS_GAIBUDATA-CSTS.
WHEN C_CSTS_OK.
ADD 1 TO LS_COUNTER-OK.
WHEN C_CSTS_NO_EXTERNAL.
ADD 1 TO LS_COUNTER-NO_EXTERNAL.
WHEN C_CSTS_NO_INTERNAL.
ADD 1 TO LS_COUNTER-NO_INTERNAL.
WHEN C_CSTS_DIFFERENT_QUANTITY.
ADD 1 TO LS_COUNTER-DIFFERENT_QUANTITY.
WHEN C_CSTS_DIFFERENT_PRICE.
ADD 1 TO LS_COUNTER-DIFFERENT_PRICE.
ENDCASE.
ENDLOOP.
COLLECT LS_COUNTER INTO T_COMPARE_COUNTER.
ENDLOOP.

LOOP AT T_COMPARE_2 INTO LS_COMPARE.
CLEAR LS_COUNTER.
LS_COUNTER-BUKRS = LS_COMPARE-YNBUKRS.
LS_COUNTER-VRFCTON = LS_COMPARE-YNVRFCTON.
* elematec 対応 2012/01/05 ADD >>>
*--- 売上の場合
IF P_MODE = C_MODE_SALES.
*     キー用の桁数を取得
READ TABLE T_YN130_CKEY INTO LW_YN130
WITH KEY VRFCTON = LS_COMPARE-YNVRFCTON  "得意先で検索
BUKRS   = LS_COMPARE-YNBUKRS
BINARY SEARCH.
IF SY-SUBRC <> 0.
CONCATENATE 'D-' LS_COMPARE-YNWAERS
INTO LW_VRFCTON.
READ TABLE T_YN130_CKEY INTO LW_YN130
WITH KEY VRFCTON = LW_VRFCTON           "通貨コードで検索
BUKRS   = LS_COMPARE-YNBUKRS
BINARY SEARCH.
ENDIF.
*     照合キーの照合用桁数を設定
IF SY-SUBRC = 0.
IF LW_YN130-P_STRNO_U = 0.
LW_START = 0.
ELSE.
LW_START = LW_YN130-P_STRNO_U - 1.  "SAP表示桁調整
ENDIF.
IF LW_YN130-P_ENDNO_U = 0.
LW_COLOM = 40.
ELSE.
LW_COLOM = LW_YN130-P_ENDNO_U - LW_YN130-P_STRNO_U + 1.
ENDIF.
ELSE.
LW_START = 0.
LW_COLOM = 40.
ENDIF.

*--- 仕入の場合
ELSE.
LW_START = 0.
LW_COLOM = 40.
ENDIF.
* elematec 対応 2012/01/05 ADD <<<
LOOP AT GDT_JISYADATA INTO GDS_JISYADATA
WHERE BUKRS   = LS_COMPARE-YNBUKRS
AND VRFCTON = LS_COMPARE-YNVRFCTON
AND CKEY2   = LS_COMPARE-YNCKEY2.
* elematec 対応 2012/01/05 ADD >>>
*        AND CKEY2   = LS_COMPARE-YNCKEY2
*        AND CKEY3   = LS_COMPARE-YNCKEY3
*        AND CKEY4   = LS_COMPARE-YNCKEY4
*        AND CKEY5   = LS_COMPARE-YNCKEY5
*        AND CKEY6   = LS_COMPARE-YNCKEY6
*        AND CKEY7   = LS_COMPARE-YNCKEY7
*        AND CKEY8   = LS_COMPARE-YNCKEY8
*        AND WAERS   = LS_COMPARE-YNWAERS.
*     照合キーが異なる場合は対象外
IF GDS_JISYADATA-CKEY1+LW_START(LW_COLOM)
<> LS_COMPARE-YNCKEY1.
CONTINUE.
ENDIF.
* elematec 対応 2012/01/05 ADD <<<
GDS_JISYADATA-CSTS = LS_COMPARE-YNCSTS.
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
GDS_JISYADATA-CHKDOC = LS_COMPARE-YNCHKDOC.
GDS_JISYADATA-CHKDAT = LS_COMPARE-YNCHKDAT.
GDS_JISYADATA-CHKUSR = LS_COMPARE-YNCHKUSR.
* elematec 対応 2012/01/05 ADD >>>
GDS_JISYADATA-CZFBDT = LS_COMPARE-YNCZFBDT.
* elematec 対応 2012/01/05 ADD <<<

*&Ver2 対応 2007/02/28 <<<
MODIFY GDT_JISYADATA FROM GDS_JISYADATA.
ADD 1 TO LS_COUNTER-TOTAL.
CASE GDS_JISYADATA-CSTS.
WHEN C_CSTS_OK.
ADD 1 TO LS_COUNTER-OK.
WHEN C_CSTS_NO_EXTERNAL.
ADD 1 TO LS_COUNTER-NO_EXTERNAL.
WHEN C_CSTS_NO_INTERNAL.
ADD 1 TO LS_COUNTER-NO_INTERNAL.
WHEN C_CSTS_DIFFERENT_QUANTITY.
ADD 1 TO LS_COUNTER-DIFFERENT_QUANTITY.
WHEN C_CSTS_DIFFERENT_PRICE.
ADD 1 TO LS_COUNTER-DIFFERENT_PRICE.
ENDCASE.
ENDLOOP.
COLLECT LS_COUNTER INTO T_COMPARE_COUNTER.
ENDLOOP.

ENDFORM.                    " SYOGO_DATA_UPDATE

*&---------------------------------------------------------------------*
*&      Form RUNTIME_VRFCT_F4HELP_CHANGE
*&---------------------------------------------------------------------*
*       ランタイム環境での得意先コード/仕入先コードＦ４ヘルプの変更
*----------------------------------------------------------------------*
FORM RUNTIME_VRFCT_F4HELP_CHANGE USING LDF_FLD_NM.
* ローカル変数
DATA: LDF_TABNAME   LIKE DFIES-TABNAME,
LDF_FIELDNAME LIKE DFIES-FIELDNAME,
LDT_RTN       LIKE STANDARD TABLE OF DDSHRETVAL,
LDS_RTN       LIKE DDSHRETVAL,
LDF_VALUE     LIKE DYNPREAD-FIELDVALUE,
LDT_DYFIELDS  LIKE STANDARD TABLE OF DYNPREAD,
LDS_DYFIELDS  LIKE DYNPREAD.
DATA: L_DFNAME TYPE HELP_INFO-DYNPROFLD,
L_REPID LIKE SY-REPID,
L_DYNNR LIKE SY-DYNNR.

*-- 20090113 INS STA
* 外部データと自社データのテーブルＩＤの取得
IF P_SALES = GCF_C_X.
GDF_GAIBU_TBL = GCF_GAIBU_TBL_U.
GDF_JISYA_TBL = GCF_JISYA_TBL_U.
ENDIF.
IF P_PRCHS = GCF_C_X.
GDF_GAIBU_TBL = GCF_GAIBU_TBL_S.
GDF_JISYA_TBL = GCF_JISYA_TBL_S.
ENDIF.
*-- 20090113 INS END

LDF_TABNAME = GDF_JISYA_TBL.
LDF_FIELDNAME = GCF_VRFCTON.
L_REPID = SY-REPID.
L_DYNNR = SY-DYNNR.
L_DFNAME = LDF_FLD_NM.

CALL FUNCTION 'F4IF_FIELD_VALUE_REQUEST'
EXPORTING
TABNAME                   = LDF_TABNAME
FIELDNAME                 = LDF_FIELDNAME
DYNPPROG                  = L_REPID
DYNPNR                    = L_DYNNR
DYNPROFIELD               = L_DFNAME
TABLES
RETURN_TAB                = LDT_RTN
EXCEPTIONS
FIELD_NOT_FOUND           = 1
NO_HELP_FOR_FIELD         = 2
INCONSISTENT_HELP         = 3
NO_VALUES_FOUND           = 4
OTHERS                    = 5.

IF SY-SUBRC = 0.
READ TABLE LDT_RTN
INTO LDS_RTN
INDEX GCF_I_ONE.
LDF_VALUE = LDS_RTN-FIELDVAL.
ENDIF.

ENDFORM.                    " RUNTIME_VRFCT_F4HELP_CHANGE
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_TITLE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM OUTPUT_TITLE .

IF OUTPUT_FLAG = '1'.
WRITE: / TEXT-007.
ELSE.
WRITE: / TEXT-008.
ENDIF.
ULINE.

ENDFORM.                    " OUTPUT_TITLE
*&---------------------------------------------------------------------*
*&      Form  CHECK_VRFCTON_RANGE
*&---------------------------------------------------------------------*
*       取引先コード存在チェック
*----------------------------------------------------------------------*
*      -->PT_VRFCTON  取引先コード
*      <--P_EVAL  text
*----------------------------------------------------------------------*
FORM CHECK_VRFCTON_RANGE  TABLES   PT_VRFCTON
CHANGING P_EVAL.

FIELD-SYMBOLS: <FS1>, <FS2>, <FS3>.

CLEAR: P_EVAL.
LOOP AT PT_VRFCTON.
ASSIGN COMPONENT 1 OF STRUCTURE PT_VRFCTON TO <FS1>.
ASSIGN COMPONENT 2 OF STRUCTURE PT_VRFCTON TO <FS2>.
CHECK <FS1> = 'I' AND <FS2> = 'EQ'.
ASSIGN COMPONENT 3 OF STRUCTURE PT_VRFCTON TO <FS3>.
* [売上照合]が選択された場合
IF P_SALES = 'X'.
SELECT COUNT(*) FROM KNB1
WHERE BUKRS IN P_BUKRS1 AND KUNNR = <FS3>.
ENDIF.
* [仕入照合]が選択された場合
IF P_PRCHS = 'X'.
SELECT COUNT(*) FROM LFB1
WHERE BUKRS IN P_BUKRS1 AND LIFNR = <FS3>.
ENDIF.
IF SY-SUBRC <> 0.
P_EVAL = <FS3>.
EXIT.
ENDIF.
ENDLOOP.

* 2012/04/09 ADD START
READ TABLE PT_VRFCTON INDEX 1.
* 2012/04/09 ADD END
ENDFORM.                    " CHECK_VRFCTON_RANGE
*&---------------------------------------------------------------------*
*&      Form  GET_TABLE_FIELDS
*&---------------------------------------------------------------------*
*       項目テキスト取得
*----------------------------------------------------------------------*
FORM GET_TABLE_FIELDS .

PERFORM GET_DDIF_TABL TABLES T_DD03P_YN110
USING  'YN110'.
PERFORM GET_DDIF_TABL TABLES T_DD03P_YN120
USING  'YN120'.
PERFORM GET_DDIF_TABL TABLES T_DD03P_YN210
USING  'YN210'.
PERFORM GET_DDIF_TABL TABLES T_DD03P_YN220
USING  'YN220'.

ENDFORM.                    " GET_TABLE_FIELDS
*&---------------------------------------------------------------------*
*&      Form  GET_DDIF_TBL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_DD03P  text
*      -->P_TABNAME   text
*----------------------------------------------------------------------*
FORM GET_DDIF_TABL  TABLES   P_T_DD03P STRUCTURE DD03P
USING    P_TABNAME.

DATA: L_NAME TYPE DDOBJNAME.

REFRESH P_T_DD03P.
L_NAME = P_TABNAME.
CALL FUNCTION 'DDIF_TABL_GET'
EXPORTING
NAME          = L_NAME
LANGU         = SY-LANGU
TABLES
DD03P_TAB     = P_T_DD03P
EXCEPTIONS
ILLEGAL_INPUT = 1
OTHERS        = 2.

IF SY-SUBRC <> 0.
MESSAGE E754 WITH P_TABNAME.
ENDIF.

ENDFORM.                    " GET_DDIF_TBL
*&---------------------------------------------------------------------*
*&      Form  SET_DYNPRO_TEXT
*&---------------------------------------------------------------------*
*       選択画面テキスト動的に設定
*----------------------------------------------------------------------*
FORM SET_DYNPRO_TEXT .

DATA: L_HELP_ID(20) TYPE C,
L_SNAME TYPE STRING,
L_FNAME TYPE STRING,
L_SCR_NAME TYPE STRING,
L_TEXT TYPE STRING.

FIELD-SYMBOLS: <FS> TYPE ANY.

FIELD-SYMBOLS: <FS_T_DD03P> TYPE TYP_T_DD03P.
DATA: L_H_DD03P LIKE LINE OF <FS_T_DD03P>.

CHECK SY-DYNNR = '1000'.
LOOP AT SCREEN.
IF SCREEN-GROUP1 = '020' OR SCREEN-GROUP1 = '010'.
CASE SCREEN-GROUP3.
WHEN 'TXT'.
L_SCR_NAME = SCREEN-NAME.
WHEN 'LOW'.
ASSIGN (SCREEN-NAME) TO <FS>.
DESCRIBE FIELD <FS> HELP-ID L_HELP_ID.
SPLIT L_HELP_ID AT '-' INTO L_SNAME L_FNAME.
CONCATENATE 'T_DD03P_YN' P_MODE SCREEN-GROUP1+1(2)
INTO L_SNAME.
ASSIGN (L_SNAME) TO <FS_T_DD03P>.
READ TABLE <FS_T_DD03P> INTO L_H_DD03P
WITH KEY FIELDNAME = L_FNAME.
IF SY-SUBRC = 0.
ASSIGN (L_SCR_NAME) TO <FS>.
<FS> = L_H_DD03P-DDTEXT.
ELSE.
MESSAGE E764.
ENDIF.
ENDCASE.
ENDIF.
ENDLOOP.

ENDFORM.                    " SET_DYNPRO_TEXT
* elematec 対応 2011/12/07 ADD >>>
*&---------------------------------------------------------------------*
*&      Form  BUTTON_CONTROL
*&---------------------------------------------------------------------*
*       選択画面の複数ボタン制御
*----------------------------------------------------------------------*
FORM BUTTON_CONTROL.
DATA:L_WA_RES        TYPE SSCR_RESTRICT,
L_WA_OPT_LIST   TYPE SSCR_OPT_LIST,
L_WA_ASS        TYPE SSCR_ASS.
DATA:OPTL TYPE SSCR_OPT_LIST.

*---単一指定のみの場合
* 共通設定
L_WA_OPT_LIST-NAME       = 'JUST_EQ'.
L_WA_OPT_LIST-OPTIONS-EQ = C_ON.
APPEND L_WA_OPT_LIST TO L_WA_RES-OPT_LIST_TAB.

* 項目設定
L_WA_ASS-KIND    = 'S'.
L_WA_ASS-NAME    = 'P_DVSON1'.
L_WA_ASS-SG_MAIN = 'I'.
L_WA_ASS-OP_MAIN = 'JUST_EQ'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.

L_WA_ASS-KIND    = 'S'.
L_WA_ASS-NAME    = 'P_DVSON2'.
L_WA_ASS-SG_MAIN = 'I'.
L_WA_ASS-OP_MAIN = 'JUST_EQ'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.

L_WA_ASS-KIND    = 'S'.
L_WA_ASS-NAME    = 'P_DVSON3'.
L_WA_ASS-SG_MAIN = 'I'.
L_WA_ASS-OP_MAIN = 'JUST_EQ'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.

*---単一入力と"*"の場合
* 共通設定
L_WA_OPT_LIST-NAME       = 'JUST_EQ1'.
L_WA_OPT_LIST-OPTIONS-EQ = C_ON.
L_WA_OPT_LIST-OPTIONS-CP = C_ON.
APPEND L_WA_OPT_LIST TO L_WA_RES-OPT_LIST_TAB.

* 項目設定
L_WA_ASS-KIND    = 'S'.
L_WA_ASS-NAME    = 'P_VRFCT1'.
L_WA_ASS-SG_MAIN = 'I'.
L_WA_ASS-OP_MAIN = 'JUST_EQ1'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.

L_WA_ASS-KIND    = 'S'.
L_WA_ASS-NAME    = 'P_VRFCT2'.
L_WA_ASS-SG_MAIN = 'I'.
L_WA_ASS-OP_MAIN = 'JUST_EQ1'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.

L_WA_ASS-KIND    = 'S'.
L_WA_ASS-NAME    = 'P_LIST11'.
L_WA_ASS-SG_MAIN = 'I'.
L_WA_ASS-OP_MAIN = 'JUST_EQ1'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.

L_WA_ASS-KIND    = 'S'.
L_WA_ASS-NAME    = 'P_LIST12'.
L_WA_ASS-SG_MAIN = 'I'.
L_WA_ASS-OP_MAIN = 'JUST_EQ1'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.

* 実行
CALL FUNCTION 'SELECT_OPTIONS_RESTRICT'
EXPORTING
RESTRICTION = L_WA_RES.


ENDFORM.                    " BUTTON_CONTROL
*&---------------------------------------------------------------------*
*&      Form  INIT_OUT
*&---------------------------------------------------------------------*
*       選択画面のデフォルト値設定
*----------------------------------------------------------------------*
FORM INIT_OUT.
DATA:LW_BUKRS   TYPE BUKRS.
* 2012/03/05 ADD START
DATA:LW_VKBUR   TYPE TVBUR-VKBUR,"営業所
LW_WERKS   TYPE T001W-WERKS."プラント
* 2012/03/05 ADD END

* ユーザパラメータ[会社コード]取得し、選択画面に設定
GET PARAMETER ID 'BUK' FIELD LW_BUKRS.
* 自社
P_BUKRS1-LOW = LW_BUKRS.
P_BUKRS1-SIGN = 'I'.
P_BUKRS1-OPTION = 'EQ'.
APPEND P_BUKRS1.
* 外部
P_BUKRS2-LOW = LW_BUKRS.
P_BUKRS1-SIGN = 'I'.
P_BUKRS1-OPTION = 'EQ'.
APPEND P_BUKRS2.

* 2012/03/05 ADD START
CLEAR:P_DVSON1,P_DVSON2.
* REFRESH:P_DVSON1,P_DVSON2.

CASE SY-TCODE.
WHEN 'ZN03'. "仕入照合
GET PARAMETER ID 'WRK' FIELD LW_WERKS.
P_DVSON1-LOW = LW_WERKS.
WHEN 'ZN38'. "売上照合
GET PARAMETER ID 'VKB' FIELD LW_VKBUR.
P_DVSON1-LOW = LW_VKBUR.
WHEN OTHERS.
ENDCASE.
IF NOT P_DVSON1-LOW IS INITIAL.
P_DVSON1-SIGN   = 'I'.
P_DVSON1-OPTION = 'EQ'.
APPEND P_DVSON1.
P_DVSON2 = P_DVSON1.
APPEND P_DVSON2.
ENDIF.
* 2012/03/05 ADD END
ENDFORM.                    " INIT_OUT
*&---------------------------------------------------------------------*
*&      Form  F4_INPUT
*&---------------------------------------------------------------------*
*       F4インプット
*----------------------------------------------------------------------*
*      -->P_DYN_FNAME   項目名
*----------------------------------------------------------------------*
FORM F4_INPUT  USING    P_DYN_FNAME.

DATA: L_HELP_ID(20) TYPE C,
L_SNAME TYPE STRING,
L_FNAME TYPE STRING,
L_VALUE TYPE STRING.

FIELD-SYMBOLS: <FS> TYPE ANY.

ASSIGN (P_DYN_FNAME) TO <FS>.
DESCRIBE FIELD <FS> HELP-ID L_HELP_ID.
SPLIT L_HELP_ID AT '-' INTO L_SNAME L_FNAME.
IF NOT L_FNAME IS INITIAL.
CONCATENATE 'YN' P_MODE L_SNAME+3(2) INTO L_SNAME.
*   項目値取得
PERFORM F4IF_FIELD_VALUE_REQUEST USING    L_SNAME
L_FNAME
P_DYN_FNAME
CHANGING L_VALUE.
ENDIF.

ENDFORM.                                                    " F4_INPUT
*&---------------------------------------------------------------------*
*&      Form  F4IF_FIELD_VALUE_REQUEST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_TNAME
*      -->P_FNAME
*      -->P_DFNAME
*      <--P_VALUE
*----------------------------------------------------------------------*
FORM F4IF_FIELD_VALUE_REQUEST  USING    P_TNAME
P_FNAME
P_DFNAME
CHANGING P_VALUE.

DATA: L_TNAME TYPE DFIES-TABNAME,
L_FNAME TYPE DFIES-FIELDNAME,
L_DFNAME TYPE HELP_INFO-DYNPROFLD,
L_REPID LIKE SY-REPID,
L_DYNNR LIKE SY-DYNNR.
DATA: L_T_RET TYPE STANDARD TABLE OF DDSHRETVAL,
L_H_RET LIKE LINE OF L_T_RET.

L_TNAME = P_TNAME.
L_FNAME = P_FNAME.
L_REPID = SY-REPID.
L_DYNNR = SY-DYNNR.
L_DFNAME = P_DFNAME.
CLEAR P_VALUE.
CALL FUNCTION 'F4IF_FIELD_VALUE_REQUEST'
EXPORTING
TABNAME           = L_TNAME
FIELDNAME         = L_FNAME
DYNPPROG          = L_REPID
DYNPNR            = L_DYNNR
DYNPROFIELD       = L_DFNAME
TABLES
RETURN_TAB        = L_T_RET
EXCEPTIONS
FIELD_NOT_FOUND   = 1
NO_HELP_FOR_FIELD = 2
INCONSISTENT_HELP = 3
NO_VALUES_FOUND   = 4
OTHERS            = 5.
IF SY-SUBRC = 0.
READ TABLE L_T_RET INTO L_H_RET INDEX 1.
P_VALUE = L_H_RET-FIELDVAL.
ENDIF.

ENDFORM.                    " F4IF_FIELD_VALUE_REQUEST
*&---------------------------------------------------------------------*
*       自社データ取込処理項目の入力チェック
*----------------------------------------------------------------------*
*      -->P_DVSON3    営業所/プラント
*      -->P_LIST23    得意先発注番号/発注番号
*      -->P_LIST33    受注伝票/発注明細番号
*----------------------------------------------------------------------*
FORM CHECK_P_PG TABLES   P_DVSON3
P_LIST23
P_LIST33.
DATA:L_TEXT1   TYPE SYMSGV,
L_TEXT2   TYPE SYMSGV,
L_TEXT3   TYPE SYMSGV.

IF P_MODE = C_MODE_SALES.  "[売上照合]
L_TEXT1 = TEXT-001.             "処理オプションの営業所
L_TEXT2 = TEXT-002.             "処理オプションの得意先発注番号
L_TEXT3 = TEXT-003.             "処理オプションの受注伝票
ELSE.
L_TEXT1 = TEXT-004.             "処理オプションのプラント
L_TEXT2 = TEXT-005.             "処理オプションの発注番号
L_TEXT3 = TEXT-006.             "処理オプションの発注明細番号
ENDIF.

* 売上/仕入の場合
IF P_SALES = 'X'
OR P_PRCHS = 'X'.
*   営業所/プラントが未入力の場合
IF P_DVSON3[] IS INITIAL.
MESSAGE E901 WITH L_TEXT1.
ENDIF.
ENDIF.

* 仕入の場合
IF P_PRCHS = 'X'.
*   発注番号が未入力の場合
IF P_LIST23[] IS INITIAL.
MESSAGE E901 WITH L_TEXT2.
ENDIF.
ENDIF.

* 売上の場合のみ必須
IF P_SALES = 'X'.
*   受注伝票が未入力の場合
IF P_LIST33[] IS INITIAL.
MESSAGE E901 WITH L_TEXT3.
ENDIF.
ENDIF.

ENDFORM.                    " CHECK_P_PG
*&---------------------------------------------------------------------*
*&      Form  CHECK_T_COMPARE2
*&---------------------------------------------------------------------*
*       照合チェック2（自動照合独自チェック)
*----------------------------------------------------------------------*
FORM CHECK_T_COMPARE2 .
* 照合期間（仕入/得意先）取得用
TYPES:BEGIN OF TYP_ZN00X,
BUKRS    TYPE BUKRS,       "会社コード
VRFCTON  TYPE CHAR10,      "得意先/仕入先
EDATE    TYPE ZNEEDATE,    "照合終了日
END   OF TYP_ZN00X.

DATA: LH_CHECKER LIKE LINE OF T_COMPARE_CHECKER,
LS_CHECKER LIKE LINE OF T_COMPARE_CHECKER,
LS_LOGGER  LIKE LINE OF T_COMPARE_LOGGER,
LT_ZN00X   TYPE STANDARD TABLE OF TYP_ZN00X,
LW_ZN00X   LIKE LINE OF LT_ZN00X.

IF P_MODE = C_MODE_SALES.  "[売上照合]
*   照合期間（売上）データ取得
SELECT BUKRS
KUNNR
EDATE
INTO TABLE LT_ZN00X
FROM ZN004
FOR ALL ENTRIES IN T_COMPARE_CHECKER
WHERE KUNNR = T_COMPARE_CHECKER-VRFCTON
OR KUNNR = C_OTHER_VRFCTON.

ELSE.
*   照合期間（仕入）データ取得
SELECT BUKRS
LIFNR
EDATE
INTO TABLE LT_ZN00X
FROM ZN001
FOR ALL ENTRIES IN T_COMPARE_CHECKER
WHERE LIFNR = T_COMPARE_CHECKER-VRFCTON
OR LIFNR = C_OTHER_VRFCTON.
ENDIF.
SORT LT_ZN00X.

LOOP AT T_COMPARE_CHECKER INTO LH_CHECKER.

CLEAR: LS_LOGGER.
MOVE LH_CHECKER TO LS_CHECKER.
LS_LOGGER-BUKRS = LS_CHECKER-BUKRS.
LS_LOGGER-VRFCTON = LS_CHECKER-VRFCTON.

*   仕入先(請求先)がブレイクした時点でチェック
AT NEW VRFCTON.
*     仕入先/得意先で検索
READ TABLE LT_ZN00X INTO LW_ZN00X
WITH KEY BUKRS = LS_CHECKER-BUKRS
VRFCTON = LS_CHECKER-VRFCTON
BINARY SEARCH.
*     存在しない場合は'+'で検索
IF SY-SUBRC <> 0.
READ TABLE LT_ZN00X INTO LW_ZN00X
WITH KEY BUKRS = LS_CHECKER-BUKRS
VRFCTON = C_OTHER_VRFCTON
BINARY SEARCH.
ENDIF.
ENDAT.
*   すでに照合が終了(同日も終了とする)している場合エラー
IF LW_ZN00X-EDATE >= P_CZFBDT.

DELETE T_COMPARE_1
WHERE YNBUKRS = LS_CHECKER-BUKRS
AND YNVRFCTON = LS_CHECKER-VRFCTON.
DELETE T_COMPARE_2
WHERE YNBUKRS = LS_CHECKER-BUKRS
AND YNVRFCTON = LS_CHECKER-VRFCTON.
IF P_MODE = C_MODE_SALES.  "[売上照合]
MESSAGE S916 WITH LS_CHECKER-VRFCTON
INTO LS_LOGGER-MESSAGE.
ELSE.
MESSAGE S906 WITH LS_CHECKER-VRFCTON
INTO LS_LOGGER-MESSAGE.
ENDIF.
APPEND LS_LOGGER TO T_COMPARE_LOGGER.
CONTINUE.
ENDIF.
ENDLOOP.

ENDFORM.                    " CHECK_T_COMPARE2
*&---------------------------------------------------------------------*
*&      Form  CHECK_CZFBDT
*&---------------------------------------------------------------------*
*       照合締日の入力値チェック
*----------------------------------------------------------------------*
*      -->P_VRFCT1         得意先/仕入先コード
*      -->P_CZFBDT         照合締日
*----------------------------------------------------------------------*
FORM CHECK_CZFBDT TABLES   P_VRFCT1 STRUCTURE MSQ10RANGE
USING    P_CZFBDT TYPE ZNECZFBDT.
DATA:LW_DAY        TYPE NUMC2,             "日付チェック用
LW_DURATION   TYPE PSEN_DURATION_DEC, "汎用モジュール用
LW_DAY_NEXT   TYPE BEGDA,             "照合締日の次の日
LW_VRCTION_R  TYPE MSQ10RANGE,        "レンジテーブルワークエリア
*      仕入照合用
LW_CODE       TYPE ELIFN,             "仕入先
LW_ZFBDT      TYPE ZFBDT,             "締日
LW_ZFBDT_OLD  TYPE ZFBDT,             "前回締日
*      売上照合用
LT_KNVP       TYPE STANDARD TABLE OF TYP_KNVP,
LW_KNVP       LIKE LINE OF LT_KNVP.   "支払人取得用

* 照合締日の日付が5/10/15/20/25/末日かどうかのチェック
LW_DAY = P_CZFBDT+6(2).
IF  (  LW_DAY =  5
OR LW_DAY = 10
OR LW_DAY = 15
OR LW_DAY = 20
OR LW_DAY = 25 ).
ELSE.
*   05/10/15/20/25 以外は、末日かどうかチェック
LW_DURATION-CALDD = 2.   "次の日を算出
CALL FUNCTION 'HR_SEN_CALE_DAYS_DATE'
EXPORTING
ID_DATE                        = P_CZFBDT
ID_OPERATOR                    = '+'
IS_DURATION                    = LW_DURATION
IMPORTING
ED_DATE                        = LW_DAY_NEXT
EXCEPTIONS
CONVERSION_NOT_SPECIFIED       = 1
CONVERSION_NOT_POSSIBLE        = 2
OTHERS                         = 3.
*   次の日の月が替わっている場合は、入力された照合締日は月末
*   次の日の月と照合締日の月が一致する場合は五十日/末日以外なのでエラー
IF LW_DAY_NEXT+4(2) = P_CZFBDT+4(2).
*--   入力された締日が、五十日、末日ではありません
MESSAGE E913.
ENDIF.
ENDIF.

* 仕入先/得意先に'*'が入っている場合はチェックしない
READ TABLE P_VRFCT1 INTO LW_VRCTION_R
WITH KEY OPTION = 'CP'.    "*を含む場合
IF SY-SUBRC = 0.
* 2012/03/05 ADD START
* アスタリスクセットの場合、日付のTOに照合締日をセット
IF P_LDAT11[] IS INITIAL.
P_LDAT11-SIGN   = 'I'.
P_LDAT11-OPTION = 'BT'.
CLEAR:P_LDAT11-LOW.
P_LDAT11-HIGH   = P_CZFBDT.
APPEND P_LDAT11.
ENDIF.
IF P_LDAT12[] IS INITIAL.
P_LDAT12-SIGN   = 'I'.
P_LDAT12-OPTION = 'BT'.
CLEAR:P_LDAT12-LOW.
P_LDAT12-HIGH   = P_CZFBDT.
APPEND P_LDAT12.
ENDIF.
* 2012/03/05 ADD END
EXIT.
ENDIF.

*----- 仕入照合の場合
IF P_PRCHS = 'X'.
*   仕入先(発注先)支払条件の締め日付を取得
LOOP AT P_VRFCT1 INTO LW_VRCTION_R.
LW_CODE = LW_VRCTION_R-LOW.
CALL FUNCTION 'YK_ZFBDT_GET_BY_LFM1'
EXPORTING
I_CORD               = LW_CODE
I_EKORG              = P_EKORG
I_DAY                = P_CZFBDT
IMPORTING
E_ZFBDT              = LW_ZFBDT
E_ZFBDT_OLD          = LW_ZFBDT_OLD  "前回締日
EXCEPTIONS
NO_GET_T052          = 1
NO_GOOD_GETDAY       = 2
NO_GET_ZTERM         = 3
OTHERS               = 4.

*     照合締日と支払条件の締め日が一致しているかチェック
IF SY-SUBRC = 0.
IF LW_ZFBDT <> P_CZFBDT.
MESSAGE E999(YN01) WITH TEXT-015 LW_CODE
TEXT-016 SPACE.
ELSE.
*         請求日/入庫日が初期値の場合は初期値提案
IF P_LDAT11[] IS INITIAL.
P_LDAT11-SIGN   = 'I'.
P_LDAT11-OPTION = 'BT'.
* 2012/03/05 MOD START
* LOW値は提案不要
*            P_LDAT11-LOW    = LW_ZFBDT_OLD + 1.
CLEAR:P_LDAT11-LOW.
* 2012/03/05 MOD END
P_LDAT11-HIGH   = LW_ZFBDT.
APPEND P_LDAT11.
ENDIF.
IF P_LDAT12[] IS INITIAL.
P_LDAT12-SIGN   = 'I'.
P_LDAT12-OPTION = 'BT'.
* 2012/03/05 MOD START
* LOW値は提案不要
*            P_LDAT12-LOW    = LW_ZFBDT_OLD + 1.
CLEAR:P_LDAT12-LOW.
* 2012/03/05 MOD END
P_LDAT12-HIGH   = LW_ZFBDT.
APPEND P_LDAT12.
ENDIF.
ENDIF.
ENDIF.
ENDLOOP.


*----- 売上照合の場合
ELSE.
*   受注先に紐づく支払人を取得
SELECT KUNNR
KUNN2
INTO TABLE LT_KNVP
FROM KNVP
FOR ALL ENTRIES IN P_VRFCT1
WHERE KUNNR = P_VRFCT1-LOW
AND VKORG = P_VKORG
AND VTWEG = P_VTWEG
AND SPART = P_SPART
AND PARVW = P_PARVWK.   "取引先機能:請求先

*  得意先(支払人)支払条件の締め日付を取得
LOOP AT LT_KNVP INTO LW_KNVP.
CALL FUNCTION 'YK_ZFBDT_GET_BY_KNVV'
EXPORTING
I_CORD               = LW_KNVP-KUNN2
I_VKORG              = P_VKORG
I_VTWEG              = P_VTWEG
I_SPART              = P_SPART
I_DAY                = P_CZFBDT
IMPORTING
E_ZFBDT              = LW_ZFBDT
E_ZFBDT_OLD          = LW_ZFBDT_OLD  "前回締日
EXCEPTIONS
NO_GET_T052          = 1
NO_GOOD_GETDAY       = 2
NO_GET_ZTERM         = 3
OTHERS               = 4.

*     照合締日と支払条件の締め日が一致しているかチェック
IF SY-SUBRC = 0.
IF LW_ZFBDT <> P_CZFBDT.
MESSAGE E999(YN01) WITH TEXT-017 LW_KNVP-KUNNR
TEXT-016 SPACE.
ELSE.
*         検収日/請求日が初期値の場合は初期値提案
IF P_LDAT11[] IS INITIAL.
P_LDAT11-SIGN   = 'I'.
P_LDAT11-OPTION = 'BT'.
* 2012/03/05 MOD START
* LOW値は提案不要
*            P_LDAT11-LOW    = LW_ZFBDT_OLD + 1.
CLEAR:P_LDAT11-LOW.
* 2012/03/05 MOD END
P_LDAT11-HIGH   = LW_ZFBDT.
APPEND P_LDAT11.
ENDIF.
IF P_LDAT12[] IS INITIAL.
P_LDAT12-SIGN   = 'I'.
P_LDAT12-OPTION = 'BT'.
* 2012/03/05 MOD START
* LOW値は提案不要
*            P_LDAT12-LOW    = LW_ZFBDT_OLD + 1.
CLEAR:P_LDAT12-LOW.
* 2012/03/05 MOD END
P_LDAT12-HIGH   = LW_ZFBDT.
APPEND P_LDAT12.
ENDIF.
ENDIF.
ENDIF.
ENDLOOP.
ENDIF.

ENDFORM.                    " CHECK_CZFBDT
*&---------------------------------------------------------------------*
*&      Form  SET_LIST1
*&---------------------------------------------------------------------*
*       対象の仕入先(発注先)/得意先(受注先)設定
*----------------------------------------------------------------------*
FORM SET_LIST1.
TYPES:BEGIN OF TYP_KNVP,
KUNNR    TYPE KUNNR,       "得意先(受注先)
VKORG    TYPE VKORG,       "販売組織
VTWEG    TYPE VTWEG,       "流通チャネル
SPART    TYPE SPART,       "製品部門
KUNN2    TYPE KUNNR,       "得意先(支払人)
END   OF TYP_KNVP.
TYPES:BEGIN OF TYP_ZTERM,
LIST1    TYPE CHAR10,      "得意先(支払人)/仕入先(発注先)
ZTERM    TYPE DZTERM,      "支払条件
ZTAGG    TYPE DZTAGG_052,  "期日
END   OF TYP_ZTERM.

DATA:LW_LIST1   TYPE TYP_LIST1,
LW_FLG_31  TYPE CHAR1,
LT_KNVP    TYPE STANDARD TABLE OF TYP_KNVP,
LW_KNVP    TYPE TYP_KNVP,
LT_ZTERM   TYPE STANDARD TABLE OF TYP_ZTERM,
LW_ZTERM   TYPE TYP_ZTERM.


* 2012/03/05 ADD START
*  締日取得
DATA:L_DATUM TYPE SY-DATUM.
CLEAR:G_DATE.
G_DATE = P_CZFBDT+6(2).
IF G_DATE > 25.
L_DATUM = P_CZFBDT.
L_DATUM = L_DATUM + 1.
IF L_DATUM+6(2) = '01'.
G_DATE = 31.
ENDIF.
ENDIF.
* 2012/03/05 ADD END

CLEAR:T_LIST1.
* 得意先(受注先)/仕入先(発注先)に'*'が含まれるかどうかチェック
READ TABLE P_LIST11 TRANSPORTING NO FIELDS
WITH KEY OPTION = 'CP'.
IF SY-SUBRC = 0.
LW_FLG_31 = 'X'.
ENDIF.

*----- 売上照合の場合
IF P_SALES = 'X'.
*    受注先に紐づく支払人を取得
SELECT KUNNR              "受注先
VKORG              "販売組織
VTWEG              "流通チャネル
SPART              "製品部門
KUNN2              "支払人
INTO TABLE LT_KNVP
FROM KNVP
WHERE KUNNR IN P_LIST11
AND VKORG = P_VKORG
AND VTWEG = P_VTWEG
AND SPART = P_SPART
AND PARVW = P_PARVWK.

*   取得した支払人を基に支払条件を取得
IF SY-SUBRC = 0.
SELECT KNVV~KUNNR           "支払人
KNVV~ZTERM           "支払条件
T052~ZTAGG           "期日
INTO TABLE LT_ZTERM
FROM KNVV INNER JOIN T052
ON KNVV~ZTERM = T052~ZTERM
FOR ALL ENTRIES IN LT_KNVP
WHERE KNVV~KUNNR = LT_KNVP-KUNN2
AND KNVV~VKORG = LT_KNVP-VKORG
AND KNVV~VTWEG = LT_KNVP-VTWEG
AND KNVV~SPART = LT_KNVP-SPART.

*     取得したデータのうち、期日を昇順ソートし、
*     １つの支払条件に対して最初の1行以外を削除する
SORT LT_ZTERM.
DELETE ADJACENT DUPLICATES FROM LT_ZTERM COMPARING LIST1 ZTERM.
*     受注先-支払人データをループ
LOOP AT LT_KNVP INTO LW_KNVP.
LW_LIST1-LIST1 = LW_KNVP-KUNNR.    "受注先
*       支払人の支払条件を検索
CLEAR:LW_ZTERM.
READ TABLE LT_ZTERM INTO LW_ZTERM
WITH KEY LIST1 = LW_KNVP-KUNN2
BINARY SEARCH.
* 2012/03/05 MOD START
**       受注先に'*'が含まれる場合
*        IF LW_FLG_31 = C_ON.
**       期限が31の支払人-受注先のみ処理対象
*          IF LW_ZTERM-ZTAGG = 31.
*            APPEND LW_LIST1 TO T_LIST1.      "対象受注先
*          ENDIF.
**       受注先に'*'が含まれない場合は、取得データすべて対象
*        ELSE.
*          APPEND LW_LIST1 TO T_LIST1.
*        ENDIF.
IF LW_ZTERM-ZTAGG = G_DATE. "照合締日の日付部分に期日が合致
APPEND LW_LIST1 TO T_LIST1.
ENDIF.
* 2012/03/05 MOD END
ENDLOOP.
*   受注先-支払人が取得できない場合は、0件
ENDIF.

*--- 仕入照合の場合
ELSE.
*   受注先の支払条件を取得
SELECT LFM1~LIFNR           "受注先
LFM1~ZTERM           "支払条件
T052~ZTAGG           "期日
INTO TABLE LT_ZTERM
FROM LFM1 INNER JOIN T052
ON LFM1~ZTERM = T052~ZTERM
WHERE LFM1~LIFNR IN P_LIST11
AND LFM1~EKORG = P_EKORG.

IF SY-SUBRC = 0.
*     取得したデータのうち、期日を昇順ソートし、
*     １つの支払条件に対して最初の1行以外を削除する
SORT LT_ZTERM.
DELETE ADJACENT DUPLICATES FROM LT_ZTERM COMPARING LIST1 ZTERM.
*     期日が31(月末締め)のデータが処理対象の発注先
LOOP AT LT_ZTERM INTO LW_ZTERM.
LW_LIST1-LIST1 = LW_ZTERM-LIST1.
* 2012/03/05 MOD START
**       発注先に'*'が含まれる場合
*        IF LW_FLG_31 = C_ON.
**         月末締めのデータのみ処理対象
*          IF LW_ZTERM-ZTAGG = 31.
*            APPEND LW_LIST1 TO T_LIST1.      "対象発注先
*          ENDIF.
**       発注先に'*'が含まれない場合はすべて対象
*        ELSE.
*          APPEND LW_LIST1 TO T_LIST1.      "対象発注先
*        ENDIF.
IF LW_ZTERM-ZTAGG = G_DATE. "照合締日の日付部分に期日が合致
APPEND LW_LIST1 TO T_LIST1.
ENDIF.
* 2012/03/05 MOD END

ENDLOOP.

ENDIF.

ENDIF.
ENDFORM.                    " SET_LIST1
*&---------------------------------------------------------------------*
*&      Form  SUM_KEY
*&---------------------------------------------------------------------*
*       キー項目の制御【売上】
*----------------------------------------------------------------------*
FORM SUM_KEY.
DATA:LW_YN130       TYPE TYP_YN130_CKEY,
LW_VRFCTON     TYPE CHAR10,
LW_YNVRFCTON   TYPE CHAR1,                   "ブレイクフラグ
LW_START       TYPE I,                       "開始バイト数
LW_COLOM       TYPE I,                       "抽出バイト数
LW_CKEY1       TYPE CHAR40,
LT_COMPARE     TYPE STANDARD TABLE OF TYP_COMPARE,
LW_COMPARE     TYPE TYP_COMPARE,
LW_COMPARE_TMP TYPE TYP_COMPARE.


* 売上の場合のみ処理
CHECK P_MODE = C_MODE_SALES.

* 売上照合マスタより取得する得意先/会社コードを作成
APPEND LINES OF T_COMPARE_1 TO LT_COMPARE.
APPEND LINES OF T_COMPARE_2 TO LT_COMPARE.
SORT LT_COMPARE BY YNVRFCTON YNBUKRS.
DELETE ADJACENT DUPLICATES FROM LT_COMPARE
COMPARING YNVRFCTON YNBUKRS.

* 売上照合マスタデータ取得
SELECT VRFCTON BUKRS P_STRNO_U P_ENDNO_U P_STRNO_K P_ENDNO_K
INTO TABLE T_YN130_CKEY
FROM YN130
FOR ALL ENTRIES IN LT_COMPARE
WHERE VRFCTON = LT_COMPARE-YNVRFCTON
AND BUKRS   = LT_COMPARE-YNBUKRS.

SELECT VRFCTON BUKRS P_STRNO_U P_ENDNO_U P_STRNO_K P_ENDNO_K
APPENDING TABLE T_YN130_CKEY
FROM YN130
WHERE VRFCTON LIKE 'D-%'.

SORT T_YN130_CKEY BY VRFCTON BUKRS.

* 外部データの処理準備
CLEAR:LT_COMPARE.
LT_COMPARE[] = T_COMPARE_1[].   "元データをローカルにコピー
CLEAR:T_COMPARE_1.

*-----外部データ_COMPAREのデータ再編集
LOOP AT LT_COMPARE INTO LW_COMPARE.
CLEAR:LW_YNVRFCTON.
AT NEW YNVRFCTON.
LW_YNVRFCTON = C_ON.
ENDAT.

IF LW_YNVRFCTON = C_ON.
CLEAR:LW_YN130.
*     桁数を売上照合マスタより取得
READ TABLE T_YN130_CKEY INTO LW_YN130
WITH KEY VRFCTON = LW_COMPARE-YNVRFCTON  "得意先で検索
BUKRS   = LW_COMPARE-YNBUKRS
BINARY SEARCH.
IF SY-SUBRC <> 0.
CONCATENATE 'D-' LW_COMPARE-YNWAERS
INTO LW_VRFCTON.
READ TABLE T_YN130_CKEY INTO LW_YN130
WITH KEY VRFCTON = LW_VRFCTON           "通貨コードで検索
BUKRS   = LW_COMPARE-YNBUKRS
BINARY SEARCH.
ENDIF.
*     照合キーの照合用桁数を設定
IF SY-SUBRC = 0.
IF LW_YN130-P_STRNO_K = 0.
LW_START = 0.
ELSE.
LW_START = LW_YN130-P_STRNO_K - 1.  "SAP表示桁調整
ENDIF.
IF LW_YN130-P_ENDNO_K = 0.
LW_COLOM = 40.
ELSE.
LW_COLOM = LW_YN130-P_ENDNO_K - LW_YN130-P_STRNO_K + 1.
ENDIF.
ELSE.
LW_START = 0.
LW_COLOM = 40.
ENDIF.
*     桁数分のデータを退避
LW_CKEY1 = LW_COMPARE-YNCKEY1+LW_START(LW_COLOM).
ENDIF.

*   最初の1レコードはTMPに退避するだけ
IF LW_COMPARE_TMP IS INITIAL.
LW_COMPARE_TMP = LW_COMPARE.
LW_COMPARE_TMP-YNCKEY1 = LW_CKEY1.
CONTINUE.
ENDIF.
*   2レコード目以降
*   桁数分のデータを退避
LW_CKEY1 = LW_COMPARE-YNCKEY1+LW_START(LW_COLOM).

IF  LW_COMPARE_TMP-YNBUKRS   = LW_COMPARE-YNBUKRS
AND LW_COMPARE_TMP-YNVRFCTON = LW_COMPARE-YNVRFCTON
AND LW_COMPARE_TMP-YNCKEY1   = LW_CKEY1
AND LW_COMPARE_TMP-YNCKEY2   = LW_COMPARE-YNCKEY2.
*   照合用桁数でキー項目が一致する場合
LW_COMPARE_TMP-YNKNITXAMT =                        "税抜金額合算
LW_COMPARE_TMP-YNKNITXAMT + LW_COMPARE-YNKNITXAMT.
LW_COMPARE_TMP-YNKNETXAMT =                        "税込金額合算
LW_COMPARE_TMP-YNKNETXAMT + LW_COMPARE-YNKNETXAMT.
LW_COMPARE_TMP-YNKNTAXAMT =                        "消費税額合算
LW_COMPARE_TMP-YNKNTAXAMT + LW_COMPARE-YNKNTAXAMT.
LW_COMPARE_TMP-YNKNQUAN =                          "数量合算
LW_COMPARE_TMP-YNKNQUAN + LW_COMPARE-YNKNQUAN.
*   照合用桁数でキー項目が一致しない場合
ELSE.
*     前のデータを内部テーブルに格納
INSERT LW_COMPARE_TMP INTO TABLE  T_COMPARE_1.
*     今回のデータをTMPに格納
CLEAR:LW_COMPARE_TMP.
LW_COMPARE_TMP = LW_COMPARE.
LW_COMPARE_TMP-YNCKEY1 = LW_CKEY1.
ENDIF.

ENDLOOP.
* 最後のデータ分を格納
INSERT LW_COMPARE_TMP INTO TABLE  T_COMPARE_1.
CLEAR:LW_COMPARE_TMP.

* 自社データの処理準備
CLEAR:LT_COMPARE.
LT_COMPARE[] = T_COMPARE_2[].   "元データをローカルにコピー
CLEAR:T_COMPARE_2.

*-----外部データ_COMPAREのデータ再編集
LOOP AT LT_COMPARE INTO LW_COMPARE.
CLEAR:LW_YNVRFCTON.
AT NEW YNVRFCTON.
LW_YNVRFCTON = C_ON.
ENDAT.

IF LW_YNVRFCTON = C_ON.
CLEAR:LW_YN130.
*     桁数を売上照合マスタより取得
READ TABLE T_YN130_CKEY INTO LW_YN130
WITH KEY VRFCTON = LW_COMPARE-YNVRFCTON  "得意先で検索
BUKRS = LW_COMPARE-YNBUKRS
BINARY SEARCH.
IF SY-SUBRC <> 0.
CONCATENATE 'D-' LW_COMPARE-YNWAERS
INTO LW_VRFCTON.
READ TABLE T_YN130_CKEY INTO LW_YN130
WITH KEY VRFCTON = LW_VRFCTON           "通貨コードで検索
BUKRS = LW_COMPARE-YNBUKRS
BINARY SEARCH.
ENDIF.
*     照合キーの照合用桁数を設定
IF SY-SUBRC = 0.
IF LW_YN130-P_STRNO_U = 0.
LW_START = 0.
ELSE.
LW_START = LW_YN130-P_STRNO_U - 1.  "SAP表示桁調整
ENDIF.
IF LW_YN130-P_ENDNO_U = 0.
LW_COLOM = 40.
ELSE.
LW_COLOM = LW_YN130-P_ENDNO_U - LW_YN130-P_STRNO_U + 1.
ENDIF.
ELSE.
LW_START = 0.
LW_COLOM = 40.
ENDIF.
*     桁数分のデータを退避
LW_CKEY1 = LW_COMPARE-YNCKEY1+LW_START(LW_COLOM).
ENDIF.

*   最初の1レコードはTMPに退避するだけ
IF LW_COMPARE_TMP IS INITIAL.
LW_COMPARE_TMP = LW_COMPARE.
LW_COMPARE_TMP-YNCKEY1 = LW_CKEY1.
CONTINUE.
ENDIF.
*   2レコード目以降
*   桁数分のデータを退避
LW_CKEY1 = LW_COMPARE-YNCKEY1+LW_START(LW_COLOM).

IF  LW_COMPARE_TMP-YNBUKRS   = LW_COMPARE-YNBUKRS
AND LW_COMPARE_TMP-YNVRFCTON = LW_COMPARE-YNVRFCTON
AND LW_COMPARE_TMP-YNCKEY1   = LW_CKEY1
AND LW_COMPARE_TMP-YNCKEY2   = LW_COMPARE-YNCKEY2.
*   照合用桁数でキー項目が一致する場合
LW_COMPARE_TMP-YNKNITXAMT =                        "税抜金額合算
LW_COMPARE_TMP-YNKNITXAMT + LW_COMPARE-YNKNITXAMT.
LW_COMPARE_TMP-YNKNETXAMT =                        "税込金額合算
LW_COMPARE_TMP-YNKNETXAMT + LW_COMPARE-YNKNETXAMT.
LW_COMPARE_TMP-YNKNTAXAMT =                        "消費税額合算
LW_COMPARE_TMP-YNKNTAXAMT + LW_COMPARE-YNKNTAXAMT.
LW_COMPARE_TMP-YNKNQUAN =                          "数量合算
LW_COMPARE_TMP-YNKNQUAN + LW_COMPARE-YNKNQUAN.
*   照合用桁数でキー項目が一致しない場合
ELSE.
*     前のデータを内部テーブルに格納
INSERT LW_COMPARE_TMP INTO TABLE T_COMPARE_2.
*     今回のデータをTMPに格納
CLEAR:LW_COMPARE_TMP.
LW_COMPARE_TMP = LW_COMPARE.
LW_COMPARE_TMP-YNCKEY1 = LW_CKEY1.
ENDIF.
ENDLOOP.
* 最後のデータ分を格納
INSERT LW_COMPARE_TMP INTO TABLE T_COMPARE_2.

ENDFORM.                    " SUM_KEY
*Text symbol text・
*007:Own Data Import
*008:Automatic Checking
*201:Currency Code Error
*202:Currency Code of Own Data is unmatched
*203:Currency Code of Out Data is unmatched
*204:Currency Code of Own Data and Out Data is unmatched
*205:Inapplicable data
*M17:Partner
*M18:Company
*M19:Fisc. Yr
*M20:Doc. No.
*M21:Item No.
*M22:Error Text
*M23:Process Table
*M24:Read:
*M25:Created:
*M26:Updated:
*M27:Inapplicable:
*M28:Errors:
*T01:Sales/Purchase
*T02:Sales Checking
*T03:Purchase Checking
*T04:Own Data Selection
*T05:Out Data Selection
*T06:Process Option
*T07:Own Data Import Execution
*T08:Ac Doc Entry Date
*T09:Updata of PaymentBaseline Date
*T10:Company
*T11:Partner
*T12:Applied
*T13:Checked
*T14:Quant diff.
*T15:Unit diff.
*T16:Unfound Out Data
*T17:Unfound Own Data
*T18:Inapplicated data
*T19:Currency Code of Own Data is unmatched
*T20:Currency Code of Out Data is unmatched
*T21:Currency Code of Own Data and Out Data is unmatched
*T22:Error Text
*T23:Pages:
*Selection text・
*P_CPUDT:        Ac Doc Entry Date
*P_OVWRT:        Updata of PaymentBaseline Date
*P_PG:        Own Data Import Excution
