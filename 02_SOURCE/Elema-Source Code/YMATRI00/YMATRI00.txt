*-------------------------------------------------------------------
***INCLUDE YMATRI00 .
*-------------------------------------------------------------------
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------Here placed  modules of PAI *****************
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0100 INPUT.
*   DATA MODIFY_YMA_TREE_U LIKE YMA_TREE_U OCCURS 1 WITH HEADER LINE.
DATA FL_USER_EXIST TYPE I.
G_EVENT = SPACE.
CASE OK_CODE.
WHEN 'USER'.
G_EVENT = OK_CODE.
SET SCREEN 0100.
ENDCASE.
CASE SY-UCOMM.
*    begin of insert by Sagit.S
WHEN 'USRL'.
PERFORM GET_USERS_LIST.
SET SCREEN 0100.
*    end   of insert by Sagit.S
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.

WHEN 'ENTR'.
IS_APPENDED = 0.
**************** checking of validity of users/groups ****************
PERFORM YMA_CHECK_USER_GROUP_VALID.
IF G_USER_GROUP_ERROR NE 1.
G_ALL_CHANGED = 1.
IF  G_FIELDS_EMPTY = 1.
*         G_FIELDS_EMPTY = 0.
SET SCREEN 0.
LEAVE SCREEN.
*         CALL SCREEN 100 STARTING AT 1 10  ENDING AT 35 15.
*
ENDIF.
PERFORM YMA_CHECK_GROUP_CONTENT_RLM.
PERFORM YMA_CHECK_DOUBLE.
PERFORM YMA_RECOGN_NEW_TREE.
FL_USER_EXIST = 0.
G_FIELDS_EMPTY = 0.
*        LOOP AT TB_NODES.
CASE USER_RATIO.
WHEN 'Group'.
*
*              IF  TB_NODES-TEXT6+22(4)  =  YMA_SCREEN-Y_TRANS AND
*              NOT ( TB_NODES-TEXT6+22(4) IS INITIAL ) AND
*                 TB_NODES-TEXT6(20)    =  G_NODE-TEXT6(20) AND
*                 TB_NODES-TEXT6+27(12) =  US_NAME.
*
*                FL_USER_EXIST = 1.
*                EXIT.
*              ENDIF.
IF YMA_SCREEN-Y_TRANS = SPACE OR US_NAME = SPACE.
G_FIELDS_EMPTY = 1.
ENDIF.
***************user ratio state ******************************
WHEN 'User'.
*              IF TB_NODES-TEXT6+22(4)  =  YMA_SCREEN-Y_TRANS
*               AND   TB_NODES-TEXT6(20)    =  G_NODE-TEXT6(20) AND
*                 TB_NODES-TEXT6+27(12) =  GROUP_NAME.
*                FL_USER_EXIST = 1.
*                EXIT.
*              ENDIF.
IF YMA_SCREEN-Y_TRANS = SPACE OR GROUP_NAME = SPACE.
G_FIELDS_EMPTY = 1.
ENDIF.
ENDCASE.
*        ENDLOOP.
".

************ New feature with /JOB
CASE TR_RATIO .
WHEN  'Trans.'(076).
IF YMA_SCREEN-Y_TRANS = SPACE AND YMA_TREE_U-YMA_TCODE NE SPACE.
G_FIELDS_EMPTY = 0.
ENDIF.
ENDCASE.
******************

IF G_FIELDS_EMPTY = 1.

MESSAGE W022 .

*        ELSEIF FL_USER_EXIST = 1 .
**       **********       USER/GROUP state      *****************
*          CASE USER_RATIO.
*            WHEN 'Group'.
*              MESSAGE I020 WITH YMA_SCREEN-Y_TRANS US_NAME.
*              G_FIELDS_EMPTY = 1.
*            WHEN 'User'.
*              MESSAGE I020 WITH YMA_SCREEN-Y_TRANS GROUP_NAME.
*              G_FIELDS_EMPTY = 1.
*          ENDCASE.
ELSE.
*
SELECT * FROM YMA_TREE
WHERE LANG = SY-LANGU(1).
*                   AND YMA_TCODE = SPACE.
MOVE-CORRESPONDING YMA_TREE TO MODIFY_YMA_TREE_U.
*           MODIFY_YMA_TREE_U = YMA_TREE_U.
MODIFY_YMA_TREE_U-YOP_MSNAME = G_NODE-TEXT6(20)."G_APP_NAME.
MODIFY_YMA_TREE_U-Y_ALRT_E_I = 'I'.            "XXX
IF GR_EXIST = 1 .
MODIFY_YMA_TREE_U-Y_ALRT_E_I = 'E'.
ENDIF.
MODIFY_YMA_TREE_U-YMA_TCODE =  YMA_SCREEN-Y_TRANS .
CASE USER_RATIO.
WHEN 'Group'.
MODIFY_YMA_TREE_U-YMA_USERNM = US_NAME.
MODIFY_YMA_TREE_U-YMA_GR_USR = 'U' .
WHEN 'User'.
MODIFY_YMA_TREE_U-YMA_USERNM = GROUP_NAME.
MODIFY_YMA_TREE_U-YMA_GR_USR = 'G' .
ENDCASE.
*********************** YMA_TREE_U.
CASE TR_RATIO.
WHEN 'Job'(005).
MODIFY_YMA_TREE_U-YMA_TJSIGN = 'T'.
MODIFY_YMA_TREE_U-YMA_TCODE = YMA_SCREEN-Y_TRANS.
WHEN 'Trans.'(076).
MODIFY_YMA_TREE_U-YMA_TJSIGN = 'J'.
MODIFY_YMA_TREE_U-YMA_TCODE = YMA_TREE_U-YMA_TCODE.
MODIFY_YMA_TREE_U-YOP_MSNAME = G_NODE-TEXT6(20).
ENDCASE.
*
DBL_MODIFY_YMA_TREE_U = MODIFY_YMA_TREE_U.
*
READ TABLE MODIFY_YMA_TREE_U WITH KEY
YOP_MSNAME = MODIFY_YMA_TREE_U-YOP_MSNAME
Y_ALRT_E_I = MODIFY_YMA_TREE_U-Y_ALRT_E_I
YMA_USERNM = MODIFY_YMA_TREE_U-YMA_USERNM
YMA_TCODE =  MODIFY_YMA_TREE_U-YMA_TCODE
YMA_GR_USR = MODIFY_YMA_TREE_U-YMA_GR_USR
YMA_PARAME = MODIFY_YMA_TREE_U-YMA_PARAME
YMA_TJSIGN = MODIFY_YMA_TREE_U-YMA_TJSIGN.

IF SY-SUBRC EQ 0.
CASE USER_RATIO.
WHEN 'Group'.
MESSAGE I020 WITH YMA_SCREEN-Y_TRANS US_NAME.

G_FIELDS_EMPTY = 1.
EXIT.
WHEN 'User'.
MESSAGE I020 WITH YMA_SCREEN-Y_TRANS GROUP_NAME.

G_FIELDS_EMPTY = 1.
EXIT.
ENDCASE.
ELSE.
APPEND DBL_MODIFY_YMA_TREE_U.
IS_APPENDED = 1.
ENDIF.
ENDSELECT.
G_CHANGE_SCREEN = 1.
PERFORM YMA_RECOGN_NEW_TREE.
*      USER_RATIO = 'Group'(046).
CLEAR  GR_EXIST.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
ENDIF.


ENDCASE.
ENDMODULE.                            " USER_COMMAND_0100  INPUT
*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0200 INPUT.
SET_ERROR = 0.
CASE SY-UCOMM.
WHEN 'DEFL'.
PERFORM YMA_SET_DEFAULT.
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.
WHEN 'ENTR'.
PERFORM YMA_RECOGN_NEW_TREE.
PERFORM YMA_CHECK_LOW_LIMIT.
G_ALL_CHANGED = 1.
DATA ML_CANCEL LIKE G_ML_CANC.
ML_CANCEL = G_ML_CANC.

TRANSLATE G_ML_CANC TO UPPER CASE.
IF G_ML_CANC  NE 'MAIL' AND G_ML_CANC  NE 'CANCEL'.

G_ML_CANC = 'Mail'.
MESSAGE W111.
ELSE.
G_ML_CANC = ML_CANCEL.
TRANSLATE G_ML_CANC TO LOWER CASE.
TRANSLATE G_ML_CANC(1) TO UPPER CASE.
CLEAR TB_NODES.
DATA: YEL TYPE I ,RED TYPE I.
YEL = Y_THRESHOLD.
RED = R_THRESHOLD.
IF YEL > RED.
*
MESSAGE W039.
ELSE.
*         READ TABLE TB_NODES WITH KEY TEXT6 = G_NODE-TEXT6.
*         READ TABLE TB_NODES WITH
READ TABLE TB_NODES INDEX G_NODE-ID.
SY-SUBRC = SY-SUBRC.
CASE TB_NODES-TEXT6+65(3).
WHEN 'YEL'.
WHEN 'RED'.
SUBTRACT 1 FROM TB_NODES-ID.
WHEN 'PRT'.
SUBTRACT 2 FROM TB_NODES-ID.
WHEN 'Can' OR 'Mai'.
SUBTRACT 3 FROM TB_NODES-ID.
ENDCASE.
*        DATA IN_NODES LIKE TB_NODES OCCURS 4 WITH HEADER LINE.
*        DATA IN_NODES LIKE TB_NODES
REFRESH IN_NODES.
SELECT SINGLE * FROM  YMA_TREE_U INTO MODIFY_YMA_TREE_Y
WHERE  YOP_MSNAME  = TB_NODES-TEXT6(20)
AND   ( YMA_TCODE   = TB_NODES-TEXT6+22(4)

OR     YMA_TCODE   = TB_NODES-TEXT5 )

AND    YMA_USERNM  = TB_NODES-TEXT6+27(12)
AND    YMA_PARAME  = TB_NODES-TEXT6+40(25)  .
IF SY-SUBRC NE 0.
************************************************************
PASS_NODES = TB_NODES-TEXT6.
APPEND PASS_NODES.
G_NODE_NEW = '1'. G_RLP_NEW = '1'.
ELSE.
MODIFY_YMA_TREE_Y-YOP_QT_PRT = PRIORITY.
MODIFY_YMA_TREE_Y-YOP_QT_RED = R_THRESHOLD.
MODIFY_YMA_TREE_Y-YOP_QT_YEL  = Y_THRESHOLD.
MODIFY_YMA_TREE_Y-Y_ALRT_M_C = G_ML_CANC.
APPEND MODIFY_YMA_TREE_Y.
ENDIF.
DATA TABIX LIKE SY-TABIX.
IF G_RLP_NEW = '1'.
***
PERFORM YMA_RECOGN_NEW_TREE.
CASE G_NODE-TEXT6+22(4).
WHEN 'Jobs'.
*change!!!! MODIFY_YMA_TREE_U by MODIFY_YMA_TREE_Y
READ TABLE MODIFY_YMA_TREE_U WITH KEY
YOP_MSNAME =  G_NODE-TEXT6(20)
YMA_TCODE  =  G_NODE-TEXT5
YMA_USERNM =  G_NODE-TEXT6+27(12)
YMA_PARAME =  G_NODE-TEXT6+40(25).
TABIX = SY-TABIX.
WHEN  OTHERS.
READ TABLE MODIFY_YMA_TREE_U WITH KEY
YOP_MSNAME =  G_NODE-TEXT6(20)
YMA_TCODE  =  G_NODE-TEXT5
YMA_USERNM =  G_NODE-TEXT6+27(12)
YMA_PARAME =  G_NODE-TEXT6+40(25).
TABIX = SY-TABIX.
ENDCASE.
*
*MODIFY_YMA_TREE_Y = MODIFY_YMA_TREE_U.
MODIFY_YMA_TREE_U-YOP_QT_PRT = PRIORITY.
MODIFY_YMA_TREE_U-YOP_QT_RED = R_THRESHOLD.
MODIFY_YMA_TREE_U-YOP_QT_YEL  = Y_THRESHOLD.
MODIFY_YMA_TREE_U-Y_ALRT_M_C = G_ML_CANC.
*             MODIFY_YMA_TREE_Y-Y_ALRT_E_I = 'I'.
"misha-last.
MODIFY MODIFY_YMA_TREE_U INDEX TABIX.
*             APPEND MODIFY_YMA_TREE_Y.
****endchange.
G_RLP_NEW = SPACE.
ENDIF.
DATA XID LIKE G_NODE-ID.
XID = G_NODE-ID.
CASE G_NODE-TEXT3.
WHEN TEXT-007.
WHEN TEXT-009.
SUBTRACT 1 FROM XID.
WHEN TEXT-010.
SUBTRACT 2 FROM XID.
WHEN TEXT-011.
SUBTRACT 3 FROM XID.
ENDCASE.
DO 4 TIMES .
READ TABLE TB_NODES WITH KEY ID = XID.
*          READ TABLE TB_NODES INDEX TB_NODES-ID.
IN_NODES = TB_NODES.
APPEND IN_NODES.
ADD 1 TO XID.
ENDDO.
READ TABLE IN_NODES INDEX 1.
XID = G_NODE-ID.
IN_NODES-TEXT6+68(7) = IN_NODES-TEXT2 = Y_THRESHOLD.
READ TABLE TB_NODES WITH KEY ID = XID.
TB_NODES-TEXT6+68(7) = TB_NODES-TEXT2 = Y_THRESHOLD.
MODIFY TB_NODES INDEX SY-TABIX .
****************** chandge of tree content***************
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
READ TABLE IN_NODES INDEX 2.
IN_NODES-TEXT6+68(7) = IN_NODES-TEXT2 = R_THRESHOLD.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
READ TABLE IN_NODES INDEX 3.
IN_NODES-TEXT6+68(7) = IN_NODES-TEXT2 = PRIORITY.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
READ TABLE IN_NODES INDEX 4.
IN_NODES-TEXT6+68(7) = IN_NODES-TEXT2 = G_ML_CANC.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
ENDIF.
ENDCASE.
ENDMODULE.                            " USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0003  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
***************
**************** Check if G_MAX is numeric
MODULE USER_COMMAND_0003 INPUT.
DATA OPTI_FLAG TYPE I.
DATA IS_CHANGED LIKE G_ALL_CHANGED.
OPTI_FLAG = 0.
CASE SY-UCOMM.
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.
WHEN 'ENTR'.
IS_CHANGED = G_ALL_CHANGED.
G_ALL_CHANGED = 1.
DATA MIN_MAX_BAD TYPE I.
DATA: COMP1(8) TYPE N, COMP2(8) TYPE N.
MIN_MAX_BAD = 0.
*G_PROCESS_TYPE = G_NODE-TEXT7(37).
CASE G_NODE-TEXT7(37).

**********************
*1
WHEN 'MAX_WP                          DIA '.
READ TABLE TB_NODES WITH KEY TEXT6 = G_NODE-TEXT6
TEXT7(37) =  'MIN_WP                          DIA ' .
COMP1 = TB_NODES-TEXT2. COMP2 = G_MAX.
IF  COMP2 <  COMP1.
MIN_MAX_BAD = 1.
G_PROCESS_TYPE = 'Dialog'(080).
ENDIF.
*2
WHEN 'MIN_WP                          DIA '.
READ TABLE TB_NODES WITH KEY TEXT6 = G_NODE-TEXT6
TEXT7(37) =  'MAX_WP                          DIA ' .
COMP1 = TB_NODES-TEXT2. COMP2 = G_MAX.
IF  COMP2 >  COMP1.
MIN_MAX_BAD = 2.
G_PROCESS_TYPE = 'Dialog'(080).
ENDIF.
*3
WHEN 'MAX_WP                          BTC '.
READ TABLE TB_NODES WITH KEY TEXT6 = G_NODE-TEXT6
TEXT7(37) =  'MIN_WP                          BTC ' .
COMP1 = TB_NODES-TEXT2. COMP2 = G_MAX.
IF  COMP2 <  COMP1.
MIN_MAX_BAD = 1.
G_PROCESS_TYPE = 'Batch'(081).
ENDIF.
*4
WHEN 'MIN_WP                          BTC '.
READ TABLE TB_NODES WITH KEY TEXT6 = G_NODE-TEXT6
TEXT7(37) =  'MAX_WP                          BTC ' .
COMP1 = TB_NODES-TEXT2. COMP2 = G_MAX.
IF  COMP2 >  COMP1.
MIN_MAX_BAD = 2.
G_PROCESS_TYPE = 'Batch'(081).
ENDIF.

ENDCASE.
G_COMP = COMP1.                 " G_PROCESS_TYPE

IF G_NODE-TEXT7(7) = 'NAME_OP'.
TRANSLATE G_MAX TO UPPER CASE.
ENDIF.
IF G_NODE-TEXT7(7) = 'NAME_OP' AND  G_MAX = 'OPTI'.
IF IS_CHANGED = 0.
G_ALL_CHANGED = 0.
ENDIF.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
IF G_NODE-TEXT7(7) = 'NAME_OP' AND  G_MAX NE 'OPTI' .
IF IS_CHANGED = 0.
G_ALL_CHANGED = 0.
ENDIF.

MESSAGE I079.
SET SCREEN 0.
LEAVE SCREEN.
OPTI_FLAG = 1.
ENDIF.


IF G_MAX CO ' 0123456789' AND G_MAX CN ' 0' AND MIN_MAX_BAD = 0.
* or G_NODE-TEXT7(7) = 'NAME_OP'. "m
READ TABLE TB_NODES WITH KEY ID = G_NODE-ID.
MOVE-CORRESPONDING  TB_NODES TO IN_NODES.
TB_MODIFY_YMA_OP_MOD-YMA_MSNAME = G_NODE-TEXT6(20).

*
*****************System'
IF G_NODE-TEXT6(20) = 'System'(020).
TB_MODIFY_YMA_OP_MOD-YMA_MSNAME = SPACE.
ENDIF.
TB_MODIFY_YMA_OP_MOD+20(68) = G_NODE-TEXT7(68).

TB_MODIFY_YMA_OP_MOD-YMA_VAL = G_MAX.
APPEND TB_MODIFY_YMA_OP_MOD.
IN_NODES-TEXT2  =  G_MAX.
********************** Change tree      *e ****************
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
SET SCREEN 0.
LEAVE SCREEN.
ELSEIF G_MAX  CO ' 0' .

MESSAGE W013.
ELSEIF MIN_MAX_BAD = 1.
MESSAGE I014  WITH G_PROCESS_TYPE G_COMP G_PROCESS_TYPE.
ELSEIF MIN_MAX_BAD = 2.
*G_COMP = COMP1." G_PROCESS_TYPE
MESSAGE I015 WITH G_PROCESS_TYPE G_COMP G_PROCESS_TYPE .
ELSEIF G_NODE-TEXT7(7) = 'NAME_OP'.
OPTI_FLAG = 1.
LEAVE SCREEN.
ELSEIF G_NODE-TEXT7(7) = 'NAME_OP' AND G_MAX NE 'OPTI'.
MESSAGE I079.
LEAVE SCREEN.
OPTI_FLAG = 1.

ELSEIF OPTI_FLAG NE 1 .
*      IF  G_NODE-TEXT7(7) NE 'NAME_OP'.
MESSAGE W007.
*     ENDIF.
ENDIF.
ENDCASE.
ENDMODULE.                            " USER_COMMAND_0003  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0101  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0101 INPUT.
*  DATA FL_USER_EXIST TYPE I.
*  DATA
G_EVENT = SPACE.
CASE OK_CODE.
WHEN 'USER'.
G_EVENT = OK_CODE.
SET SCREEN 0100.
ENDCASE.
CASE SY-UCOMM.
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.
WHEN 'ENTR'.
G_ALL_CHANGED = 1.
REFRESH TB_NODES.
*          PERFORM BUILD_INTAB.
CALL FUNCTION 'RS_TREE_GET_CURRENT_TREE'
TABLES
**         NODELIST =
NODEINFO = TB_NODES
EXCEPTIONS
OTHERS   = 1.
*  PERFORM BUILD_INTAB.
G_NODE = G_NODE.
FL_USER_EXIST = 0.
G_FIELDS_EMPTY = 0.
LOOP AT TB_NODES.
****************       User/Group State    *********************
CASE USER_RATIO.
WHEN 'Group'.
IF TB_NODES-TEXT6+22(4)  =  YMA_SCREEN-Y_TRANS          AND
TB_NODES-TEXT6(20)    =  G_NODE-TEXT6(20) AND
TB_NODES-TEXT6+27(12) =  US_NAME.
FL_USER_EXIST = 1.
EXIT.
ENDIF.
IF YMA_SCREEN-Y_TRANS = SPACE OR US_NAME = SPACE.
G_FIELDS_EMPTY = 1.
ENDIF.

WHEN 'User'.
IF TB_NODES-TEXT6+22(4)  =  YMA_SCREEN-Y_TRANS          AND
TB_NODES-TEXT6(20)    =  G_NODE-TEXT6(20) AND
TB_NODES-TEXT6+27(12) =  GROUP_NAME.
FL_USER_EXIST = 1.
EXIT.
ENDIF.
IF YMA_SCREEN-Y_TRANS = SPACE OR GROUP_NAME = SPACE.
G_FIELDS_EMPTY = 1.
ENDIF.
ENDCASE.
**********************************************************************
ENDLOOP.
".
IF G_FIELDS_EMPTY = 1.
MESSAGE W022 .
ELSEIF FL_USER_EXIST = 1 .
CASE USER_RATIO.
WHEN 'Group'.
MESSAGE W020 WITH YMA_SCREEN-Y_TRANS US_NAME.
WHEN 'User'.
MESSAGE W020 WITH YMA_SCREEN-Y_TRANS GROUP_NAME.
ENDCASE.
*             IF YMA_SCREEN-Y_TRANS NE SPACE OR US_NAME NE SPACE.
*             IF US_NAME NE SPACE .
*               MESSAGE W020 WITH YMA_SCREEN-Y_TRANS US_NAME.
*             ELSE.
*             ENDIF.
*
ELSE.
*         REFRESH MODIFY_YMA_TREE_U.
SELECT * FROM YMA_TREE_U
WHERE YOP_MSNAME = SPACE
AND YMA_TCODE = SPACE.

MODIFY_YMA_TREE_U = YMA_TREE_U.
MODIFY_YMA_TREE_U-YOP_MSNAME = G_APP_NAME.
MODIFY_YMA_TREE_U-YMA_TCODE =  YMA_SCREEN-Y_TRANS .
CASE USER_RATIO.
WHEN 'Group'.

MODIFY_YMA_TREE_U-YMA_USERNM = US_NAME .
WHEN 'User'.
MODIFY_YMA_TREE_U-YMA_USERNM = GROUP_NAME .
ENDCASE.
IF IS_APPENDED NE 1.
APPEND MODIFY_YMA_TREE_U.
ENDIF.
ENDSELECT.
G_CHANGE_SCREEN = 1.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
ENDCASE.
ENDMODULE.                            " USER_COMMAND_0101  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0001  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0001 INPUT.
CASE SY-UCOMM.
WHEN '%EX'.
FIELDS_CHANGED = 0.
SET SCREEN 0.
LEAVE SCREEN.
WHEN 'DEFL'.
SELECT SINGLE * FROM  YMA_TR_JOB
WHERE  YMA_LVL     = 'S'
AND    YMA_PARAME  = G_NODE-TEXT6+41(25)
AND    YMA_SUBKEY  = G_NODE-TEXT6+67(8)
AND    LANG        = SY-LANGU.
G_JOP_PRT  =  YMA_TR_JOB-YOP_QT_PRT.
G_JOP_VAL =   YMA_TR_JOB-YOP_QT_VAL.
WHEN 'ENTR'.
G_ALL_CHANGED = 1.
DATA VAL TYPE I.
IF G_JOP_VAL CO ' 1234567890'.
VAL = G_JOP_VAL.
ENDIF.
IF G_JOP_VAL CN  ' 1234567890' OR VAL < 0.
MESSAGE W068.
ELSE.
*       PERFORM YMA_IS_NOT_GRATER_THEN_TOTAL USING IS_GRATER.
*       IF IS_GRATER = 1.
*         MESSAGE W037.
IF FIELDS_CHANGED = 1.
IF G_NODE-TEXT6+3(1) = 'V' .
G_NODE-TEXT2 = G_JOP_VAL.
MOVE-CORRESPONDING G_NODE TO IN_NODES.
*           SUBTRACT 1 FROM IN_NODES-ID.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
DATA: IS_FIR TYPE I, IN_EX.
IF IS_FIR = 0.
IS_FIR = 1.
IN_EX = G_NODE-TEXT6+5(1).
ENDIF.
*           TB_TR_JOP-YMA_MSNAME = G_NODE-TEXT6+7(20).
TB_TR_JOP-YMA_USERNM = G_NODE-TEXT6+28(12).
TB_TR_JOP-YMA_PARAME = G_NODE-TEXT6+41(25).
TB_TR_JOP-YMA_GR_USR = G_NODE-TEXT6+4(1).
TB_TR_JOP-Y_ALRT_E_I = IN_EX.     "G_NODE-TEXT6+5(1).
TB_TR_JOP-YMA_SUBKEY = G_NODE-TEXT6+67(8).
TB_TR_JOP-YOP_QT_PRT = G_JOP_PRT.
TB_TR_JOP-YOP_QT_VAL = G_JOP_VAL.
APPEND TB_TR_JOP.
ADD 1  TO IN_NODES-ID.
READ TABLE TB_NODES INDEX IN_NODES-ID.
MOVE-CORRESPONDING TB_NODES TO IN_NODES.
IN_NODES-TEXT2 = G_JOP_PRT.
*************** change tree  ***************************
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
*********************************************************************
ELSEIF G_NODE-TEXT6+3(1) = 'P'.

MOVE-CORRESPONDING G_NODE TO IN_NODES.
IN_NODES-TEXT2 = G_JOP_PRT.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
*           TB_TR_JOP-YMA_MSNAME = G_NODE-TEXT6+7(20).
TB_TR_JOP-YMA_USERNM = G_NODE-TEXT6+28(12).
TB_TR_JOP-YMA_PARAME = G_NODE-TEXT6+41(25).
TB_TR_JOP-YMA_GR_USR = G_NODE-TEXT6+4(1).
TB_TR_JOP-Y_ALRT_E_I = IN_EX.
TB_TR_JOP-YMA_SUBKEY = G_NODE-TEXT6+67(8).
TB_TR_JOP-YOP_QT_PRT = G_JOP_PRT.
TB_TR_JOP-YOP_QT_VAL = G_JOP_VAL.
APPEND TB_TR_JOP.
SUBTRACT 1  FROM IN_NODES-ID.
READ TABLE TB_NODES INDEX IN_NODES-ID.
MOVE-CORRESPONDING TB_NODES TO IN_NODES.
IN_NODES-TEXT2 = G_JOP_VAL.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
ENDIF.
ENDIF.
FIELDS_CHANGED = 0.
IS_FIR = 0.
SET SCREEN 0.
LEAVE SCREEN.
*ENDIF.
*      ENDIF.
ENDIF.
ENDCASE.
ENDMODULE.                            " USER_COMMAND_0001  INPUT
*&---------------------------------------------------------------------*
*&      Module  U_001  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE U_001 INPUT.
FIELDS_CHANGED = 1.
ENDMODULE.                            " U_001  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0102  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0102 INPUT.
G_EVENT = SPACE.
CASE OK_CODE.
WHEN 'USER'.
G_EVENT = OK_CODE.
SET SCREEN 0102.
ENDCASE.

CASE SY-UCOMM.
*    begin of insert by Sagit.S
WHEN 'USRL'.
PERFORM GET_USERS_LIST.
SET SCREEN 0102.
*    end   of insert by Sagit.S
WHEN 'DEFL'.
*          SELECT SINGLE * FROM  YMA_TR_JOB
*                 WHERE  YMA_LVL     = 'S'
*                 AND    YMA_PARAME  = G_NODE-TEXT6+41(25)
*                 AND    YMA_SUBKEY  = G_NODE-TEXT6+67(8)
*                 AND    LANG        = SY-LANGU.
*
*                  G_JOP_PRT  =  YMA_TR_JOB-YOP_QT_PRT.
*                  G_JOP_VAL =   YMA_TR_JOB-YOP_QT_VAL.

WHEN '%EX'.
IF NODE_EXIST NE 1.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
NODE_EXIST = 0.

WHEN 'ENTR'.
PERFORM YMA_CHECK_USER_GROUP_VALID.
IF G_USER_GROUP_ERROR NE 1.

G_ALL_CHANGED = 1.
PERFORM YMA_CHECK_GROUP_CONTENT.
PERFORM YMA_CHECK_DOUBLED USING NODE_EXIST.
IF NODE_EXIST = 1.
DATA TEXTM(10).
IF USER_RATIO = 'Group'.
TEXTM = 'User'(045).
MESSAGE W006 WITH TEXTM US_NAME.
ELSE.
TEXTM = 'Group'(046).
MESSAGE W006 WITH TEXTM GROUP_NAME.
ENDIF.


SET SCREEN 0102.
ELSE.
PERFORM YMA_CHECK_GROUP_CONTENT.
IF G_USER_IN_GROUP = 1.
*           MESSAGE I012 WITH  USR02-CLASS.
PERFORM YMA_CREATE_USER_EXCLUDED USING G_USER_IN_GROUP.
G_USER_IN_GROUP = 0.
ELSEIF G_GROUP_CONTAIN_USER = 1 .
G_GROUP_CONTAIN_USER = 0.
USR02-CLASS = GROUP_NAME.
DATA CLASS LIKE USR02-CLASS.
CLASS = USR02-CLASS.
PERFORM YMA_CHANGE_INCLUDE USING CLASS.
IF G_ANSWER = 1.
PERFORM YMA_ADD_SYS_JOBS.
G_FLAG_EXCLUDE = 0.
G_USER_IN_GROUP = 0.
G_GROUP_CONTAIN_USER = 0.
ENDIF.
G_USER_IN_GROUP = 0.
G_GROUP_CONTAIN_USER = 0.
PERFORM YMA_RECOGN_NEW_TREE.
SET SCREEN 0.
LEAVE SCREEN.
ELSE.
PERFORM YMA_ADD_SYS_JOBS.
*       PERFORM YMA_ADD_SYS_JOBS1.
PERFORM YMA_RECOGN_NEW_TREE.
USER_RATIO = 'Group'(046).
SET SCREEN 0.
LEAVE SCREEN.

ENDIF.
ENDIF.
ENDIF.
ENDCASE.
ENDMODULE.                            " USER_COMMAND_0102  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0002  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0002 INPUT.
SET_ERROR1 = 0.
CASE SY-UCOMM.
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.
WHEN 'ENTR'.
PERFORM YMA_CHECK_LOW_LEVEL.
G_ALL_CHANGED = 1.
ML_CANCEL = G_ML_CANC.
TRANSLATE G_ML_CANC TO UPPER CASE.
IF G_ML_CANC  NE 'MAIL' AND G_ML_CANC  NE 'CANCEL'.

G_ML_CANC = 'Mail'.
MESSAGE W111.
ELSE.
G_ML_CANC = ML_CANCEL.
TRANSLATE G_ML_CANC TO LOWER CASE.
TRANSLATE G_ML_CANC(1) TO UPPER CASE.
CLEAR TB_NODES.
*     DATA: YEL TYPE I ,RED TYPE I.
YEL = Y_THRESHOLD.
RED = R_THRESHOLD.
IF YEL > RED.
MESSAGE W039.
ELSE.
*         READ TABLE TB_NODES WITH KEY TEXT6 = G_NODE-TEXT6.
READ TABLE TB_NODES WITH KEY ID  = G_NODE-ID.
SY-SUBRC = SY-SUBRC.

CASE G_NODE-TEXT3.
WHEN TEXT-007.

WHEN TEXT-009.
SUBTRACT 1 FROM TB_NODES-ID.
WHEN TEXT-010.
SUBTRACT 2 FROM TB_NODES-ID.
WHEN TEXT-011.
SUBTRACT 3 FROM TB_NODES-ID.
ENDCASE.
READ TABLE TB_NODES WITH KEY ID = TB_NODES-ID.
SELECT SINGLE * FROM  YMA_TREE
WHERE  YMA_PARAME  = TB_NODES-TEXT8
AND    LANG        = SY-LANGU(1).
*       AND    YOP_QT_PRT  = ___
*       AND    YOP_QT_RED  = ___
*       AND    Y_ALRT_M_C  = ___
*       AND    YOP_QT_YEL  = ___
*       AND    YMA_PAR_UN  = ___
*       AND    YMA_DESC_S  = ___            .
TB_MODIFY_YMA_TREE = YMA_TREE.
REFRESH IN_NODES.

DO 4 TIMES.
IN_NODES = TB_NODES.
APPEND IN_NODES.
ADD 1 TO TB_NODES-ID.
READ TABLE IN_NODES INDEX 1.
READ TABLE TB_NODES WITH KEY ID = TB_NODES-ID.
IN_NODES-TEXT6+68(7) = IN_NODES-TEXT2 = Y_THRESHOLD.
TB_MODIFY_YMA_TREE-YOP_QT_YEL = Y_THRESHOLD.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
READ TABLE IN_NODES INDEX 2.
IN_NODES-TEXT6+68(7) = IN_NODES-TEXT2 = R_THRESHOLD.
TB_MODIFY_YMA_TREE-YOP_QT_RED = R_THRESHOLD.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
READ TABLE IN_NODES INDEX 3.
IN_NODES-TEXT6+68(7) = IN_NODES-TEXT2 = PRIORITY.
TB_MODIFY_YMA_TREE-YOP_QT_PRT = PRIORITY.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
READ TABLE IN_NODES INDEX 4.
IN_NODES-TEXT6+68(7) = IN_NODES-TEXT2 = G_ML_CANC.
TB_MODIFY_YMA_TREE-Y_ALRT_M_C = G_ML_CANC.

CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
ENDDO.
APPEND TB_MODIFY_YMA_TREE.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
ENDIF.
ENDCASE.

ENDMODULE.                            " USER_COMMAND_0002  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0004  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0004 INPUT.
DATA: TIME_INTERV ,PAGER_PARAM ,SNMP_PARAM , MAIL_USERS.
CASE SY-UCOMM.
WHEN '%EX'.
FIELDS_CHANGED = 0.
SET SCREEN 0.
LEAVE SCREEN.

ENDCASE.
ENDMODULE.                            " USER_COMMAND_0004  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0300  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0300 INPUT.
CASE SY-UCOMM.
WHEN '%EX'.
REFRESH TB_YMA_OT_GP.
PERFORM YMA_FIRST_INTERVAL_SLCT1.
SET SCREEN 0.
LEAVE SCREEN.
DATA: F1 ,F2.
WHEN 'DEF2'.
F1 = 'X'.
SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'CUR_INTERVAL'.
*      INTERVAL_FIELD  = YMA_OT_GP-IN_DEFAULT.
CUR_INTERV  = YMA_OT_GP-IN_DEFAULT.
WHEN 'DEF1'.
F2 = 'X'.
SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'CLEAR_DAYS'.
TIME_FIELD  = YMA_OT_GP-IN_DEFAULT.
WHEN 'ENTR'.
IF YMA_CHECK  NE SPACE.
L_AUTO-IN_VALUE = '1'.

ELSE.
L_AUTO-IN_VALUE = '0'.
ENDIF.
MODIFY YMA_OT_GP FROM L_AUTO.

*       G_ALL_CHANGED = 1.
PERFORM YMA_OM_MODIFY.
DATA INDX TYPE I.
IF G_EDIT NE 0.
READ TABLE TB_YMA_OT_GP WITH KEY PARAM_NAME = 'CUR_INTERVAL'.
INDX = SY-TABIX.
TB_YMA_OT_GP-IN_VALUE = CUR_INTERV.
MODIFY TB_YMA_OT_GP INDEX INDX.
*         MODIFY TB_YMA_OT_GP WHERE PARAM_NAME = 'CUR_INTERVAL'.
*        READ TABLE TB_YMA_OT_GP WITH KEY PARAM_NAME = 'NEXT_INTERVAL'.
*        INDX = SY-TABIX.
*        TB_YMA_OT_GP-IN_VALUE = INTERVAL_FIELD.
*        MODIFY TB_YMA_OT_GP INDEX INDX.
READ  TABLE TB_YMA_OT_GP WITH KEY PARAM_NAME = 'CLEAR_DAYS'.
INDX = SY-TABIX.
TB_YMA_OT_GP-IN_VALUE = TIME_FIELD.
MODIFY TB_YMA_OT_GP INDEX INDX.
LOOP AT TB_YMA_OT_GP.
MODIFY YMA_OT_GP FROM  TB_YMA_OT_GP.
ENDLOOP.
CLEAR: F1, F2.
ENDIF.
SET SCREEN 0.
LEAVE SCREEN.
ENDCASE.
ENDMODULE.                            " USER_COMMAND_0300  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_3003  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_3003 INPUT.
CASE SY-UCOMM.
WHEN '%EX'.
*       PERFORM YMA_FIRST_INTERVAL_SLCT2.
SET SCREEN 0.
LEAVE SCREEN.

WHEN 'ENTR'.
*       G_ALL_CHANGED = 1.
READ TABLE TB_YMA_OT_GP2 WITH KEY PARAM_NAME = 'SNMP_IP_ADDRESS'.
TB_YMA_OT_GP2-IN_VALUE = Y_IP_ADDR_FLD.
MODIFY TB_YMA_OT_GP2 INDEX SY-TABIX.
READ TABLE TB_YMA_OT_GP2 WITH KEY PARAM_NAME = 'SNMP_PORT'.
TB_YMA_OT_GP2-IN_VALUE = Y_PORT_FLD.
MODIFY TB_YMA_OT_GP2 INDEX SY-TABIX.
READ  TABLE TB_YMA_OT_GP2 WITH KEY PARAM_NAME = 'SNMP_COMMUNITY'.
TB_YMA_OT_GP2-IN_VALUE = Y_STATUS_FLD.
MODIFY TB_YMA_OT_GP2 INDEX SY-TABIX.
MODIFY YMA_OT_GP FROM TABLE TB_YMA_OT_GP2.
CLEAR: F1, F2.
SET SCREEN 0.
LEAVE SCREEN.
SET SCREEN 0.
LEAVE SCREEN.
ENDCASE.
ENDMODULE.                            " USER_COMMAND_3003  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0301  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0301 INPUT.
TABLES: SOID.

TRANSLATE YMA_SCREEN-RFCDES TO UPPER CASE.
CASE SY-UCOMM.
WHEN '%EX'.
FL_DL_NOT_VALID = 0.
SET SCREEN 0.
LEAVE SCREEN.

WHEN 'ENTR'.
FL_DL_NOT_VALID = 0.
*       G_ALL_CHANGED = 1.
SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'PAGER_FUNCTION'.
YMA_OT_GP-IN_VALUE = YMA_SCREEN-FUNC_NAME.
MODIFY YMA_OT_GP.
SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'PAGER_DESTINATION'.
YMA_OT_GP-IN_VALUE = YMA_SCREEN-RFCDES.
MODIFY YMA_OT_GP.

IF YMA_SCREEN-Y_DESTT NE SPACE.

SELECT    SINGLE  * FROM  SOID       CLIENT SPECIFIED
WHERE  MANDT       = SY-MANDT
AND    OBJNAM       =  YMA_SCREEN-Y_DESTT  .
IF SY-SUBRC NE 0.
MESSAGE I112 WITH YMA_SCREEN-Y_DESTT.
FL_DL_NOT_VALID = 1.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
ENDIF.

SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'DISTRIBUTION'.
YMA_OT_GP-IN_VALUE = YMA_SCREEN-Y_DESTT.
IF SOID-OWNNO = SPACE.
YMA_OT_GP-IN_DEFAULT =  'C'.
ELSE.
YMA_OT_GP-IN_DEFAULT =  'P'.
ENDIF.
MODIFY YMA_OT_GP.
COMMIT WORK.



SET SCREEN 0.
LEAVE SCREEN.


ENDCASE.
ENDMODULE.                            " USER_COMMAND_0301  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0302  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0302 INPUT.
DATA EXIT TYPE I.
OKCODE = FCODE.
IF FLAG1 = 'X'.
OKCODE = 'MISH'.
ELSEIF FLAG1 ='P'.                  "misha
OKCODE ='PORT'.
ELSEIF FLAG1 = 'S'.
OKCODE ='SPOL'.
*  ELSEIF FLAG1 = 'D'.
*    OKCODE = 'DIST'.
ENDIF.
CASE SY-UCOMM.
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.
WHEN 'ENTR'.
*      G_ALL_CHANGED = 1.
IF  NONE = 'X'.
DELETE FROM YMA_OT_USR WHERE SIGN NE '1'.
DELETE FROM YMA_OT_USR WHERE SIGN NE '1'.
ENDIF.
IF G_EDIT = 1.
G_LOCK_FLAG = 'F'.
ELSE.
G_LOCK_FLAG = 'T'.
ENDIF.
CASE OKCODE.
WHEN 'MISH'.
IS_FIRST = 'X'.
EXIT = 1.
FLAG1 = SPACE.
IF  USER_LIST = 'X' .
NONE = SPACE.
SUBMIT YMAUS000 WITH G_LOCK = G_LOCK_FLAG AND RETURN.
GET PARAMETER ID 'ZUI' FIELD USR_NAME.
IF USR_NAME NE 'NONE'.
DELETE FROM  YMA_OT_USR WHERE SIGN = 'C'.
ENDIF.
*            YMA_OT_USR
EXIT = 1.
ENDIF.

IF  DISTR_LIST = 'X'.
NONE = SPACE.
SUBMIT YMADS000 WITH G_LOCK = G_LOCK_FLAG AND RETURN.
GET PARAMETER ID 'ZUI' FIELD USR_NAME.
IF USR_NAME NE 'NONE'.

DELETE FROM  YMA_OT_USR WHERE SIGN = 'B'.
ENDIF.
EXIT = 1.
ENDIF.
ENDCASE.
IF EXIT = 0.
SET SCREEN 0.
LEAVE SCREEN.
ELSEIF EXIT = 1.
EXIT = 0.
ENDIF.
ENDCASE.
ENDMODULE.                            " USER_COMMAND_0302  INPUT
*&---------------------------------------------------------------------*
*&      Module  USR_REQUEST  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USR_REQUEST INPUT.
FLAG1 = 'X'.
FCODE = 'MISH'.
SUPPRESS DIALOG.

ENDMODULE.                            " USR_REQUEST  INPUT
*&---------------------------------------------------------------------*
*&      Module  EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE EXIT INPUT.
CASE SY-UCOMM.
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.
*      RSSTCD-T_TCODE
WHEN 'ENTR'.
*
IF G_NODE-TEXT6+22(4) NE 'Jobs'.
G_ALL_CHANGED = 1.
LOOP AT TB_NODES WHERE TEXT6(26) = G_NODE-TEXT6(26).
MOVE-CORRESPONDING TB_NODES TO TB_AUX_NODES.
TB_AUX_NODES-TEXT6+22(4) = RSSTCD-T_TCODE.
APPEND TB_AUX_NODES.
ENDLOOP.
READ TABLE TB_AUX_NODES INDEX 1.
TB_AUX_NODES-TEXT = RSSTCD-T_TCODE.
MODIFY  TB_AUX_NODES INDEX 1.
PERFORM YMA_TREE_U_COPY.

G_NODE-TEXT5 = YMA_TREE_U-YMA_TCODE.
*         G_NODE-TEXT6+22(4) = RSSTCD-T_TCODE.

READ TABLE TB_NODES WITH KEY TEXT6 = G_NODE-TEXT6.
IF SY-SUBRC NE 0.
PERFORM YMA_COPY_BLOCK.
PERFORM YMA_RECOGN_NEW_TREE.
PERFORM YMA_ADD_APPSERV.
SET SCREEN 0.
LEAVE SCREEN.
ELSE.
MESSAGE W062.
ENDIF.
ELSE.
************************
G_ALL_CHANGED = 1.
LOOP AT TB_NODES WHERE TEXT6(26) = G_NODE-TEXT6(26)
AND  ( TEXT5 = G_NODE-TEXT OR TEXT = G_NODE-TEXT ).
MOVE-CORRESPONDING TB_NODES TO TB_AUX_NODES.
TB_AUX_NODES-TEXT5 = YMA_TREE_U-YMA_TCODE.
APPEND TB_AUX_NODES.
ENDLOOP.
READ TABLE TB_AUX_NODES INDEX 1.
TB_AUX_NODES-TEXT = YMA_TREE_U-YMA_TCODE.
MODIFY  TB_AUX_NODES INDEX 1.
PERFORM YMA_TREE_U_COPY_JOB.

G_NODE-TEXT5 = YMA_TREE_U-YMA_TCODE.

READ TABLE TB_NODES WITH KEY TEXT6 = G_NODE-TEXT6 TEXT5 =
G_NODE-TEXT.

IF SY-SUBRC NE 0.
PERFORM YMA_TREE_U_COPY.
***
PERFORM YMA_COPY_BLOCK_JOB.
***

PERFORM YMA_RECOGN_NEW_TREE.
PERFORM YMA_ADD_APPSERV.
PERFORM YMA_TB_MODIF_U.     " create entry for next modify
SET SCREEN 0.
LEAVE SCREEN.


ENDIF.
ENDIF.

ENDCASE.

ENDMODULE.                            " EXIT  INPUT
*&---------------------------------------------------------------------*
*&      Module  VAL_REQ_TSTC  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE VAL_REQ_TSTC INPUT.
DATA: OBJECTYPES LIKE YMA_MTBL OCCURS 5 WITH HEADER LINE,
OBJTYPE  LIKE   YMA_MTBL-OBJTYPE.
REFRESH OBJECTYPES.
CLEAR OBJECTYPES.
LOOP AT TB_PASS_INST.
OBJECTYPES-OBJTEXT = TB_PASS_INST-YOP_MSNAME.
OBJECTYPES-OBJTYPE = SY-TABIX.
APPEND OBJECTYPES.
ENDLOOP.
*DATA : BEGIN OF TB_LIST_OF_SERVER  OCCURS 5,
*         NAME LIKE MSXXLIST-NAME,
*         HOST LIKE MSXXLIST-HOST,
*         SERV LIKE MSXXLIST-SERV,
*         MSGTYPES LIKE MSXXLIST-MSGTYPES,
*         HOSTADR LIKE MSXXLIST-HOSTADR,
*         SERVNO LIKE MSXXLIST-SERVNO.
*DATA : END OF TB_LIST_OF_SERVER.
*DATA L_INDEX LIKE SY-TABIX.
*DATA TB_TABLE_STRUCTURE LIKE HELP_VALUE OCCURS 0 WITH HEADER LINE.
CALL FUNCTION 'Y_MA_POPUP_TBL'
*                  EXPORTING
*                       TOP                 = 7
*                       LEFT                = 7
*                       BOTTOM              = 15
*                       RIGHT               = 40
*                       PTIT                = 'PAR'
IMPORTING
OBJTYPE             = OBJTYPE
TABLES
OBJECTYPES          = OBJECTYPES
EXCEPTIONS
OBECJTYPES_IS_EMPTY = 1
OTHERS              = 2.
*  CALL FUNCTION 'HELP_VALUES_GET_NO_DD_NAME'
*       EXPORTING
*            SELECTFIELD                  = 'SERV'
*            TITEL                        = 'Choose Instance'(010)
*       IMPORTING
*            IND                          = L_INDEX
**          select_value                 = g_selected_instance
*       TABLES
*            FIELDS                       = TB_TABLE_STRUCTURE
*            FULL_TABLE                   = TB_LIST_OF_SERVER
*       EXCEPTIONS
*            FULL_TABLE_EMPTY             = 1
*            NO_TABLESTRUCTURE_GIVEN      = 2
*            NO_TABLEFIELDS_IN_DICTIONARY = 3
*            MORE_THEN_ONE_SELECTFIELD    = 4
*            NO_SELECTFIELD               = 5
*            OTHERS                       = 6.

READ TABLE TB_PASS_INST INDEX OBJTYPE.
APSERVER = TB_PASS_INST-YOP_MSNAME.
ENDMODULE.                            " VAL_REQ_TSTC  INPUT
*&---------------------------------------------------------------------*
*&      Module  EXIT1  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE EXIT1 INPUT.
CASE SY-UCOMM.
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.
*      RSSTCD-T_TCODE
WHEN 'ENTR'.
G_ALL_CHANGED = 1.
IF APSERVER = SPACE.
MESSAGE W020.
ELSE.
IF G_NODE-TEXT = APSERVER.
MESSAGE W025     .
ELSE.
READ TABLE TB_NODES WITH KEY TEXT = APSERVER  TEXT7 = 'CA'.
ID = TB_NODES-ID.
PERFORM YMA_DELETE_BLOCK.
LOOP AT TB_NODES WHERE TEXT9 = 'App'
AND TEXT6(20) = G_NODE-TEXT6(20).
MOVE-CORRESPONDING TB_NODES TO TB_AUX_APP.
APPEND TB_AUX_APP.
ENDLOOP.
".
PERFORM YMA_COPY_APPSERVER.
PERFORM YMA_RECOGN_NEW_TREE.

SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
ENDIF.
ENDCASE.
ENDMODULE.                            " EXIT1  INPUT
*&---------------------------------------------------------------------*
*&      Form  ADD_APPSERV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
FORM YMA_ADD_APPSERV.
DATA TYPE.
READ TABLE TB_AUX_NODES INDEX 2.
IF TB_AUX_NODES-TEXT1 = TEXT-045.
TYPE = 'U'.
ELSE.
TYPE = 'G'.
ENDIF.
DATA EX.
READ TABLE TB_AUX_NODES INDEX 3.
IF TB_AUX_NODES-TEXT = TEXT-022.
EX = 'I'.
ELSE.
EX = 'E'.
ENDIF.
DO 4 TIMES.
DELETE TB_AUX_NODES INDEX 1.
ENDDO.
TB_AUX_NODES = TB_AUX_NODES.
DATA DER TYPE I.
LOOP AT TB_AUX_NODES .
IF  TB_AUX_NODES-TEXT6+65(10) = SPACE.
DELETE TB_AUX_NODES.
ENDIF.
ENDLOOP.
TB_AUX_NODES = TB_AUX_NODES.
LOOP AT TB_AUX_NODES.
YMA_ADD_APPSERVERS-YOP_MSNAME = TB_AUX_NODES-TEXT6(20).
YMA_ADD_APPSERVERS-YMA_TCODE  = RSSTCD-T_TCODE.
*                                              "TB_AUX_NODES-TEXT6+22(4)
YMA_ADD_APPSERVERS-YMA_USERNM = TB_AUX_NODES-TEXT6+27(13).
YMA_ADD_APPSERVERS-YMA_PARAME = TB_AUX_NODES-TEXT6+40(25).
YMA_ADD_APPSERVERS-YMA_GR_USR = TYPE.
YMA_ADD_APPSERVERS-Y_ALRT_E_I = EX.
IF SY-TABIX = 1 OR SY-TABIX = 5 OR SY-TABIX = 9 OR SY-TABIX = 13 OR
SY-TABIX = 17 OR SY-TABIX = 21.
YMA_ADD_APPSERVERS-YOP_QT_YEL =  TB_AUX_NODES-TEXT6+68(7).
ENDIF  .
IF SY-TABIX = 2 OR SY-TABIX = 6 OR SY-TABIX = 10 OR SY-TABIX = 14 OR
SY-TABIX = 18 OR SY-TABIX = 22.
YMA_ADD_APPSERVERS-YOP_QT_RED =  TB_AUX_NODES-TEXT6+68(7).
ENDIF  .
IF SY-TABIX = 3 OR SY-TABIX = 7 OR SY-TABIX = 11 OR SY-TABIX = 15 OR
SY-TABIX = 19 OR SY-TABIX = 23.
YMA_ADD_APPSERVERS-YOP_QT_PRT = TB_AUX_NODES-TEXT6+68(7).
ENDIF  .

IF SY-TABIX = 4 OR SY-TABIX = 8 OR SY-TABIX = 12 OR SY-TABIX = 16 OR
SY-TABIX = 20 OR SY-TABIX = 24.
YMA_ADD_APPSERVERS-Y_ALRT_M_C =  TB_AUX_NODES-TEXT6+65(1).
APPEND YMA_ADD_APPSERVERS.
CLEAR  YMA_ADD_APPSERVERS.
ENDIF.
ENDLOOP.
ENDFORM.                              " ADD_APPSERV
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0201  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0201 INPUT.

CASE SY-UCOMM.
WHEN 'DEFL'.
*g_NODE-TEXT6+5(20)
SELECT SINGLE * FROM  YMA_TR_LOC
WHERE  YMA_PARAME  = G_NODE-TEXT6+5(20).
R_THRESHOLD  =   YMA_TR_LOC-YOP_QT_RED.
Y_THRESHOLD  =   YMA_TR_LOC-YOP_QT_YEL.
PRIORITY     =   YMA_TR_LOC-YOP_QT_PRT.
IF YMA_TR_LOC-Y_ALRT_M_C = 'M'.
G_ML_CANC    =   'Mail'(053).
ELSE.
G_ML_CANC    =   'Cancel'(063).
ENDIF.
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.

WHEN 'ENTR'.
PERFORM YMA_CHECK_LOW_LIMIT1.
G_ALL_CHANGED = 1.
DATA ML_CANC LIKE G_ML_CANC.
ML_CANC = G_ML_CANC.
TRANSLATE G_ML_CANC TO UPPER CASE.

IF G_ML_CANC  NE 'MAIL' AND G_ML_CANC  NE 'CANCEL'.
G_ML_CANC = TEXT-043.
MESSAGE W111.
ELSE.
G_ML_CANC = ML_CANC.
TRANSLATE G_ML_CANC TO LOWER CASE.
TRANSLATE G_ML_CANC(1) TO UPPER CASE.
CLEAR TB_NODES.
*         READ TABLE TB_NODES WITH KEY TEXT6 = G_NODE-TEXT6.
READ TABLE TB_NODES WITH KEY ID  = G_NODE-ID.
SY-SUBRC = SY-SUBRC.
CASE G_NODE-TEXT3.
WHEN TEXT-007.
WHEN TEXT-009.
SUBTRACT 1 FROM TB_NODES-ID.
WHEN TEXT-010.
SUBTRACT 2 FROM TB_NODES-ID.
WHEN TEXT-011.
SUBTRACT 3 FROM TB_NODES-ID.
ENDCASE.
READ TABLE TB_NODES WITH KEY ID = TB_NODES-ID.
DATA SUBRC LIKE  SY-SUBRC.
DATA L_YMA_LOC_TR LIKE TB_MODIFY_YMA_LOC_TR.
SELECT SINGLE * FROM  YMA_LOC_TR
WHERE  YMA_USERNM = G_NODE-TEXT6+26(12).
SUBRC =  SY-SUBRC.
IF SY-SUBRC = 0.
TB_MODIFY_LOCK_TR = YMA_LOC_TR.
ELSE.
READ TABLE  TB_MODIFY_YMA_LOC_TR WITH KEY YMA_USERNM =
G_NODE-TEXT6+26(12).
L_YMA_LOC_TR = TB_MODIFY_YMA_LOC_TR.
CLEAR TB_MODIFY_LOCK_TR.
TB_MODIFY_LOCK_TR = L_YMA_LOC_TR.
ENDIF.

REFRESH IN_NODES.
DO 4 TIMES.
IN_NODES = TB_NODES.
APPEND IN_NODES.

ADD 1 TO TB_NODES-ID.

READ TABLE IN_NODES INDEX 1.
READ TABLE TB_NODES WITH KEY ID = TB_NODES-ID.
IN_NODES-TEXT2 = Y_THRESHOLD.
TB_MODIFY_LOCK_TR-YOP_QT_YEL = Y_THRESHOLD.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
READ TABLE IN_NODES INDEX 2.
IN_NODES-TEXT2 = R_THRESHOLD.
TB_MODIFY_LOCK_TR-YOP_QT_RED = R_THRESHOLD.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
READ TABLE IN_NODES INDEX 3.
IN_NODES-TEXT2 = PRIORITY.
TB_MODIFY_LOCK_TR-YOP_QT_PRT = PRIORITY.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
READ TABLE IN_NODES INDEX 4.
IN_NODES-TEXT2 = G_ML_CANC.
TB_MODIFY_LOCK_TR-Y_ALRT_M_C = G_ML_CANC.

CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.

ENDDO.
APPEND  TB_MODIFY_LOCK_TR.

SET SCREEN 0.
LEAVE SCREEN.
ENDIF.

ENDCASE.

ENDMODULE.                            " USER_COMMAND_0201  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0110  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0110 INPUT.
CLEAR: G_USER_IN_GROUP , G_GROUP_CONTAIN_USER,
G_USER_IN_GROUP , G_ANS  , G_ANS ,
G_GROUP_CONTAIN_USER ,  G_ANSWER .
CLEAR TB_MODIFY_YMA_LOC_TR.

DATA NOT_OPEN TYPE I.
NOT_OPEN = 0.
G_EVENT = SPACE.
CASE OK_CODE.
WHEN 'USER'.
G_EVENT = OK_CODE.
SET SCREEN 0110.
ENDCASE.
CASE SY-UCOMM.
*    begin of insert by Sagit.S
WHEN 'USRL'.
PERFORM GET_USERS_LIST.
SET SCREEN 0110.
*    end   of insert by Sagit.S
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.
WHEN 'ENTR'.
PERFORM YMA_CHECK_USER_GROUP_VALID.
IF G_USER_GROUP_ERROR  NE 1.
G_ALL_CHANGED = 1.
FL_USER_EXIST = 0.
G_FIELDS_EMPTY = 0.
SELECT SINGLE * FROM  YMA_TR_LOC
WHERE  YMA_PARAME  = 'LOCKS_TIME'(015)
AND    LANG        = SY-LANGU(1).
*       AND    YOP_QT_PRT  = ___
*      AND    YOP_QT_RED  = ___
*       AND    Y_ALRT_M_C  = ___
*       AND    YOP_QT_YEL  = ___            .
DATA GR_US.
DATA NAME(12).
CASE USER_RATIO.
WHEN 'User'(045).
NAME  = GROUP_NAME.
GR_US = 'G'.
WHEN 'Group'(046).
NAME  = US_NAME.
GR_US = 'U'.
ENDCASE.
FL_EXIST = 0.
LOOP AT TB_NODES WHERE TEXT6(10) = 'LockSystem'.
IF TB_NODES-TEXT = NAME.
FL_EXIST = 1.
EXIT.
ENDIF.
ENDLOOP.

".
IF   NAME = SPACE .
MESSAGE W020.
*         ELSEIF FL_USER_EXIST = 1 .
ELSEIF FL_EXIST = 1.
MESSAGE W027 WITH NAME.     "Misha 28.11.1999
" must be replaced with 006 !
ELSE.
PERFORM YMA_LOCK_MANGMNT_GROUP_CONTNT.
IF G_USER_IN_GROUP = 1.
PERFORM YMA_CREATE_USER_EXCL_LOCK USING G_USER_IN_GROUP.
ENDIF.
IF  G_GROUP_CONTAIN_USER = 1 .
CLASS = USR02-CLASS.
PERFORM YMA_CHANGE_INCLUDE_LOCK USING CLASS.
ENDIF.
IF ( G_USER_IN_GROUP NE  1 AND G_GROUP_CONTAIN_USER NE 1 )
OR ( G_USER_IN_GROUP      = 1 AND G_ANS    = '1' OR G_ANS = '2' )
OR ( G_GROUP_CONTAIN_USER = 1 AND G_ANSWER = '1' ).


SELECT   SINGLE * FROM YMA_TR_LOC
WHERE YMA_PARAME = 'LOCKS_TIME'(015)
AND LANG = SY-LANGU(1).

MOVE-CORRESPONDING  YMA_TR_LOC TO  TB_MODIFY_YMA_LOC_TR.
TB_MODIFY_YMA_LOC_TR-YMA_USERNM = NAME.
TB_MODIFY_YMA_LOC_TR-YMA_GR_USR = GR_US.
TB_MODIFY_YMA_LOC_TR-Y_ALRT_E_I = 'I'.
*           APPEND TB_MODIFY_YMA_LOC_TR.

CLEAR NODES.

NODES-TEXT6     = TB_MODIFY_YMA_LOC_TR-YMA_USERNM.
NODES-COLOR      = G_2_COLOR.
NODES-INTENSIV   = '1'.
NODES-TCOLOR     = G_N2_COLOR.
NODES-TINTENSIV   = 1.
NODES-TLENGTH    = 12.

NODES-TEXT       = TB_MODIFY_YMA_LOC_TR-YMA_USERNM. "TEXT
NODES-TLENGTH1 = 6.

IF TB_MODIFY_YMA_LOC_TR-YMA_GR_USR = 'U'.
NODES-TEXT1       = TEXT-045.
ELSEIF
TB_MODIFY_YMA_LOC_TR-YMA_GR_USR = 'G'.
NODES-TEXT1       = TEXT-046.
ENDIF.
NODES-TEXT6        = TEXT-057."Lock
NODES-TEXT6+4(20)  = TEXT-013.                 "
NODES-TEXT6+29(20) = TB_MODIFY_YMA_LOC_TR-YMA_PARAME.
NODES-TEXT6+50(12) = TB_MODIFY_YMA_LOC_TR-YMA_USERNM.
IF G_USER_IN_GROUP NE 1.
*            TB_MODIFY_YMA_LOC_TR-Y_ALRT_E_I = 'I'.
NODES-TEXT4     = TEXT-022 .
NODES-TLENGTH4 = 0.
TB_MODIFY_YMA_LOC_TR-Y_ALRT_E_I = 'I'.
ELSEIF G_ANS = '1'.

TB_MODIFY_YMA_LOC_TR-Y_ALRT_E_I = 'E'.
NOT_OPEN = 1.
NODES-TEXT4     = TEXT-023 .


NODES-TLENGTH4 = 10.
NODES-TINTENSIV4 = 1.
NODES-TCOLOR4 = 3.
.
ENDIF.
G_USER_IN_GROUP = 0.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = ''
INSERT_ID          = G_NODE-ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
.
CLEAR NODES.
IF TB_MODIFY_YMA_LOC_TR-Y_ALRT_E_I = 'I'.
NODES-TEXT      = TEXT-022 .
ELSEIF
TB_MODIFY_YMA_LOC_TR-Y_ALRT_E_I = 'E'.

NODES-TEXT      = TEXT-023 .
ENDIF.
NODES-COLOR      = G_2_COLOR.
NODES-INTENSIV   = '1'.
NODES-TCOLOR     = G_N4_COLOR.
NODES-TLENGTH    = 9.

NODES-COLOR = 2.
NODES-TCOLOR = 4.
NODES-TINTENSIV = 0.
NODES-INTENSIV = 1.


*         CALL FUNCTION 'RS_TREE_ADD_NODE'
*              EXPORTING
*                   NEW_NAME           = 'JOB SYSTEM'
*                   INSERT_ID          = IO_NEW_ID
*                   RELATIONSHIP       = 'CHILD'
*                   LINK               = ' '
*                   NEW_TYPE           =  'TSPN'
*                   DISPLAY_ATTRIBUTES =  NODES
*              IMPORTING
*                   NEW_ID             = IO_NEW_ID
**         NODE_INFO          =
*              EXCEPTIONS
*                   ID_NOT_FOUND       = 1
*                   OTHERS             = 2.

CLEAR NODES.
NODES-TLENGTH = 1.
NODES-TEXT    = 'SYM_DOCUMENT'.
NODES-HOTSPOT = 'X'.
NODES-KIND = 'S'.
NODES-TCOLOR  = 3.
***********************Restore afterward *****************************
NODES-TEXT1 = 'ICON_BUSINAV_PROC_EXIST'.
NODES-KIND1 = 'I'.
NODES-TLENGTH1 = 3.
NODES-TEXT2 = TB_MODIFY_YMA_LOC_TR-YOP_QT_YEL.
NODES-TLENGTH2 = 10.
*        TB_NODES-TEXT2 = TB_TREE-YOP_QT_YEL.
NODES-TCOLOR2 = 1.

NODES-TLENGTH3 = 20.
NODES-TEXT3 = TEXT-055.

NODES-TEXT4 = 'ICON_EXECUTE_OBJECT'.
NODES-KIND4 = 'I'.
NODES-TLENGTH4 = 3.
NODES-HOTSPOT4 = 'X'.
**TB_NODES-TLENGTH4 = 1.
******************popup data forming here !!!!**************************
NODES-TEXT6+15 = SPACE.                        "
NODES-TEXT6+47 = SPACE.                        "
NODES-TEXT6+50 = SPACE.                        "
***********************************************************************
NODES-TEXT6 = 'PLTU'.
NODES-TEXT6+5(20) = TB_MODIFY_YMA_LOC_TR-YMA_PARAME.
NODES-TEXT6+26(12) = TB_MODIFY_YMA_LOC_TR-YMA_USERNM.
IF NOT_OPEN NE 1.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'JOB SYSTEM'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
NODES-TEXT3 = TEXT-056.
NODES-TEXT2 = TB_MODIFY_YMA_LOC_TR-YOP_QT_RED.
NODES-TEXT6 = 'PLTU'.
NODES-TEXT6+5(20) = TB_MODIFY_YMA_LOC_TR-YMA_PARAME.
NODES-TEXT6+26(12) = TB_MODIFY_YMA_LOC_TR-YMA_USERNM.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'JOB SYSTEM'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'NEXT'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.


NODES-TEXT3 = TEXT-050.
NODES-TEXT2 = TB_MODIFY_YMA_LOC_TR-YOP_QT_PRT.
NODES-TEXT6 = 'PLTU'.
NODES-TEXT6+5(20) = TB_MODIFY_YMA_LOC_TR-YMA_PARAME.
NODES-TEXT6+26(12) = TB_MODIFY_YMA_LOC_TR-YMA_USERNM.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'JOB SYSTEM'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'NEXT'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
NODES-TEXT3 = TEXT-011.
NODES-TEXT2 = TEXT-028.
NODES-TEXT6 = 'PLTU'.
NODES-TEXT6+5(20) = TB_MODIFY_YMA_LOC_TR-YMA_PARAME.
NODES-TEXT6+26(12) = TB_MODIFY_YMA_LOC_TR-YMA_USERNM.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'JOB SYSTEM'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'NEXT'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
ENDIF.
APPEND TB_MODIFY_YMA_LOC_TR.
USER_RATIO = 'Group'(046).
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.

ENDIF.
ENDIF.
ENDCASE.

ENDMODULE.                            " USER_COMMAND_0110  INPUT
*&---------------------------------------------------------------------*
*&      Module  SEL_1  OUTPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE SEL_1 OUTPUT.
IF G_EDIT = 1.
LOOP AT SCREEN.
IF SCREEN-NAME ='NONE'  .
SCREEN-INPUT = 1.
SCREEN-INVISIBLE = 0.
MODIFY SCREEN.
ENDIF.
ENDLOOP.
*   ELSE.
*     LOOP AT SCREEN.
*       IF SCREEN-NAME ='NONE' OR  SCREEN-NAME = 'USR_NAME' .
*         SCREEN-INPUT = 0.
**         SCREEN-INVISIBLE = 1.
*         MODIFY SCREEN.



ENDIF.
*ERFORM YMA_SELECT_SQL.
*PERFORM YMA_OM_MODIFY.
SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'ACTIVITY'.
*       AND    IN_VALUE    = ___
*       AND    IN_DEFAULT  = ___
*       AND    DESCRIPT    = ___            .

IF YMA_OT_GP-IN_VALUE  NE SPACE.
G_ETE = 'X'.
ELSE.
G_ETE = SPACE.
ENDIF.


ENDMODULE.                            " SEL_1  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0202  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0202 INPUT.
CASE SY-UCOMM.
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.

WHEN 'ENTR'.
G_ALL_CHANGED = 1.
CLEAR TB_NODES.
*         READ TABLE TB_NODES WITH KEY TEXT6 = G_NODE-TEXT6.
DATA RANGE TYPE I.
RANGE = 0.
PERFORM YMA_VALUE_RANGE USING RANGE.

IF RANGE = 0.

MESSAGE W063.
ELSE.
READ TABLE TB_NODES WITH KEY ID  = G_NODE-ID.
CASE G_NODE-TEXT3.
WHEN   TEXT-007.            "'Yel. Threshold'.
WHEN TEXT-031.              "Priority level
SUBTRACT 1 FROM TB_NODES-ID.
ENDCASE.

READ TABLE TB_NODES WITH KEY ID = TB_NODES-ID.
MOVE-CORRESPONDING TB_NODES TO IN_NODES.
IN_NODES-TEXT2 = Y_THRESHOLD.

CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
ADD 1 TO TB_NODES-ID.
READ TABLE TB_NODES WITH KEY ID = TB_NODES-ID.
MOVE-CORRESPONDING TB_NODES TO IN_NODES.
IN_NODES-TEXT2 = PRTY.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
PERFORM YMA_RECOGN_NEW_TREE.
*         SELECT SINGLE * FROM  YMA_TREE_J
*                WHERE  YMA_JOB     = G_NODE-TEXT6+15(32).
**         AND    YMA_PRT_JB  =
**         AND    YOP_QT_YEL  = ___            ."mgit
DATA NODE LIKE TB_NODES.
TB_MODIFY_YMA_TREE_J  = G_NODE-TEXT6+15(30).

TB_MODIFY_YMA_TREE_J-YOP_QT_YEL  = Y_THRESHOLD.
TB_MODIFY_YMA_TREE_J-YOP_QT_YEL  = Y_THRESHOLD.
TB_MODIFY_YMA_TREE_J-YMA_PRT_JB  = PRTY.

APPEND TB_MODIFY_YMA_TREE_J.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.

ENDCASE.

ENDMODULE.                            " USER_COMMAND_0202  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0202A  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0202A INPUT.
DATA L_RERTIVE_SQL LIKE YMA_SQL_TR.
DATA: YEL_TH TYPE I , RED_TH TYPE I.
CASE SY-UCOMM.
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.
WHEN 'DEFL'.
L_RERTIVE_SQL = G_NODE-TEXT7.
SELECT SINGLE * FROM  YMA_TR_SQL
WHERE  Y_PARAME  = L_RERTIVE_SQL-Y_PARAME
AND    LANG        = SY-LANGU.

Y_THRESHOLD =   YMA_TR_SQL-Y_VL_YEL.
PRIORITY    =   YMA_TR_SQL-Y_VL_PRT.
R_THRESHOLD =   YMA_TR_SQL-Y_VL_RED.
*      IF YMA_TR_SQL-Y_ALRT_M_C = 'M'.
*        G_ML_CANC   =   'Mail'(053).
*      ELSEIF YMA_TR_SQL-Y_ALRT_M_C = 'C'.
*        G_ML_CANC   =   'Cancel'(063).
*      ENDIF.
WHEN 'ENTR'.
PERFORM YMA_SELECT_SQL.
DATA DOUBLE TYPE I.
DOUBLE = YMA_SCREEN-YMA_INTRV1 .
DOUBLE = DOUBLE * 2.
YEL_TH = Y_THRESHOLD.
RED_TH = R_THRESHOLD.
IF YEL_TH > RED_TH.
MESSAGE W042.
*      ELSEIF Y_THRESHOLD = 0 OR  R_THRESHOLD = 0.
*        MESSAGE W043.
ELSEIF
YEL_TH < DOUBLE OR RED_TH < DOUBLE.
DATA VAL1 TYPE I.
VAL1 = YMA_SCREEN-YMA_INTRV1 * 2 .
MESSAGE W037 WITH VAL1.
ELSE.
G_ALL_CHANGED = 1.
*       IF G_ML_CANC  NE TEXT-043 AND G_ML_CANC  NE TEXT-029.
*         G_ML_CANC = TEXT-043.
*         MESSAGE W111.
*       ELSE.

CLEAR TB_NODES.
*         READ TABLE TB_NODES WITH KEY TEXT6 = G_NODE-TEXT6.
READ TABLE TB_NODES WITH KEY ID  = G_NODE-ID.
SY-SUBRC = SY-SUBRC.
DATA INDEX TYPE I.

INDEX = G_NODE-ID.

CASE G_NODE-TEXT3.

WHEN TEXT-007.

WHEN TEXT-009.
SUBTRACT 1 FROM INDEX.
WHEN TEXT-010.
SUBTRACT 2 FROM INDEX.
*            WHEN TEXT-011.
*              SUBTRACT 3 FROM INDEX.
ENDCASE.

READ TABLE TB_NODES WITH KEY ID = INDEX.
MOVE-CORRESPONDING TB_NODES TO IN_NODES.
IN_NODES-TEXT2 = Y_THRESHOLD.

CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
MOVE-CORRESPONDING TB_NODES TO IN_NODES.
IN_NODES-TEXT2 = R_THRESHOLD.

CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
ADD 1 TO INDEX.
READ TABLE TB_NODES WITH KEY ID = INDEX.
MOVE-CORRESPONDING TB_NODES TO IN_NODES.
IN_NODES-TEXT2 = PRIORITY.

CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
*          ADD 1 TO INDEX.
*         READ TABLE TB_NODES WITH KEY ID = INDEX.
*          MOVE-CORRESPONDING TB_NODES TO IN_NODES.
*          IN_NODES-TEXT2 = G_ML_CANC.
*
*          CALL FUNCTION 'RS_TREE_SET_NODE'
*               EXPORTING
*                    NODE_INFO    = IN_NODES
*               EXCEPTIONS
*                    ID_NOT_FOUND = 1
*                    OTHERS       = 2.
PERFORM YMA_RECOGN_NEW_TREE.
"sql
TB_MODIFY_YMA_SQL_TR = G_NODE-TEXT7.
TB_MODIFY_YMA_SQL_TR-Y_VL_PRT = PRIORITY.
TB_MODIFY_YMA_SQL_TR-Y_VL_RED = R_THRESHOLD.
TB_MODIFY_YMA_SQL_TR-Y_ALRT_M_C = G_ML_CANC.
TB_MODIFY_YMA_SQL_TR-Y_VL_YEL = Y_THRESHOLD.
TB_MODIFY_YMA_SQL_TR-Y_ALRT_E_I = G_NODE-TEXT6+4(1).
IF G_NODE-TEXT6+4(1) = SPACE.
TB_MODIFY_YMA_SQL_TR-Y_ALRT_E_I =  G_NODE-TEXT8+2(1).
TB_MODIFY_YMA_SQL_TR-Y_GR_USR =  G_NODE-TEXT8+1(1).
ENDIF.
APPEND TB_MODIFY_YMA_SQL_TR.


SET SCREEN 0.
LEAVE SCREEN.
*        ENDIF.
ENDIF.
ENDCASE.

ENDMODULE.                            " USER_COMMAND_0202A  INPUT
*&---------------------------------------------------------------------*
*&      Form  YMA_CHECK_DOUBLED
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
FORM YMA_CHECK_DOUBLED USING NODE_EXIST.

G_IN_EXC = G_IN_EXC.
IF USER_RATIO      = 'User'.
NODES-TEXT1      = TEXT-046.
NODES-TEXT       = GROUP_NAME.
ELSEIF USER_RATIO  = 'Group'.
NODES-TEXT1       = TEXT-045.
NODES-TEXT       = US_NAME.
ENDIF.
NODE_EXIST = 0.
LOOP AT TB_NODES WHERE TEXT6(2) = 'JB' .
IF  TB_NODES-TEXT6+28(12) =  NODES-TEXT.
NODE_EXIST = 1.
ENDIF.
ENDLOOP.
ENDFORM.                              " YMA_CHECK_DOUBLED
*&---------------------------------------------------------------------*
*&      Form  YMA_CHECK_DOUBLE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
FORM YMA_CHECK_DOUBLE.
TABLES:  USGRP.

SELECT     SINGLE   * FROM  USR02 CLIENT SPECIFIED
WHERE  BNAME       = US_NAME       .
SELECT SINGLE * FROM  USGRP      CLIENT SPECIFIED
WHERE
USERGROUP   =   USR02-CLASS        .
IF SY-SUBRC NE 0 OR USR02-CLASS NE SPACE.
".
LOOP AT TB_NODES WHERE TEXT6(20)    = G_NODE-TEXT6(20)
AND TEXT6+22(4)  =   YMA_SCREEN-Y_TRANS   .
*                        AND TEXT6+27(12) =  USR02-CLASS .   "us
IF TB_NODES-TEXT6+27(12) =  USR02-CLASS.
GR_EXIST = 1.
EXIT.
ENDIF.
ENDLOOP.

*     IF SY-SUBRC NE 0.
*       GR_EXIST = 1.
*     ENDIF.
ENDIF.
ENDFORM.                              " YMA_CHECK_DOUBLE
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0303  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0303 INPUT.
CASE SY-UCOMM.
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.
WHEN 'ENTR'.
G_ALL_CHANGED = 1.
READ TABLE TB_NODES WITH KEY ID = G_NODE-ID.
MOVE-CORRESPONDING  TB_NODES TO IN_NODES.
TB_MODIFY_YMA_OP_MOD+20(68)     = G_NODE-TEXT7(68).
TB_MODIFY_YMA_OP_MOD-YMA_VAL    = YMA_SCREEN-YMA_EX_MAL(1).
TB_MODIFY_YMA_OP_MOD-YMA_MSNAME = TB_NODES-TEXT6(20).
APPEND TB_MODIFY_YMA_OP_MOD.
IN_NODES-TEXT2  =  YMA_SCREEN-YMA_EX_MAL.
CALL FUNCTION 'RS_TREE_SET_NODE'
EXPORTING
NODE_INFO    = IN_NODES
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.

SET SCREEN 0.
LEAVE SCREEN.
WHEN 'DEFL'.
*DATA INDX1 LIKE G_NODE-ID.
*INDX1 = G_NODE-ID - 1.
*READ TABLE TB_NODES WITH  KEY ID = INDX1.
DATA MY_YMA_TR_OP LIKE YMA_TR_OP.
MY_YMA_TR_OP = G_NODE-TEXT8.
SELECT SINGLE * FROM  YMA_TR_OP
WHERE  YMA_PARAME  = MY_YMA_TR_OP-YMA_PARAME
AND    YMA_SUBKEY  = MY_YMA_TR_OP-YMA_SUBKEY
AND    YMA_LVL     = MY_YMA_TR_OP-YMA_LVL
AND    YMA_PROCES  = MY_YMA_TR_OP-YMA_PROCES
AND    LANG        = MY_YMA_TR_OP-LANG.
CASE YMA_TR_OP-YMA_VAL.
WHEN 'E'.
YMA_SCREEN-YMA_EX_MAL = 'Execute'(052).
WHEN 'M'.
YMA_SCREEN-YMA_EX_MAL = 'Mail'(053).
ENDCASE.

ENDCASE.
ENDMODULE.                            " USER_COMMAND_0303  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_3102  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_3102 INPUT.
G_EVENT = SPACE.
CASE OK_CODE.
WHEN 'USER'.
G_EVENT = OK_CODE.
SET SCREEN 0102.
ENDCASE.

CASE SY-UCOMM.
WHEN '%EX'.
IF NODE_EXIST NE 1.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
NODE_EXIST = 0.
WHEN 'ENTR'.
G_ALL_CHANGED = 1.
PERFORM YMA_CHECK_GROUP_CONTENT1.
PERFORM YMA_CHECK_DOUBLED USING NODE_EXIST.
IF NODE_EXIST = 1.
MESSAGE W006 WITH USER_RATIO US_NAME.
SET SCREEN 0102.
ELSE.
PERFORM YMA_CHECK_GROUP_CONTENT.
IF G_USER_IN_GROUP = 1.
*           MESSAGE I012 WITH  USR02-CLASS.
PERFORM YMA_CREATE_USER_EXCLUDED USING G_USER_IN_GROUP.
G_USER_IN_GROUP = 0.
ELSEIF G_GROUP_CONTAIN_USER = 1 .
G_GROUP_CONTAIN_USER = 0.
USR02-CLASS = GROUP_NAME.
*           DATA CLASS LIKE USR02-CLASS.
CLASS = USR02-CLASS.
PERFORM YMA_CHANGE_INCLUDE USING CLASS.
IF G_ANSWER = 1.
PERFORM YMA_ADD_SYS_JOBS.
G_FLAG_EXCLUDE = 0.
G_USER_IN_GROUP = 0.
G_GROUP_CONTAIN_USER = 0.
ENDIF.
G_USER_IN_GROUP = 0.
G_GROUP_CONTAIN_USER = 0.
PERFORM YMA_RECOGN_NEW_TREE.
SET SCREEN 0.
LEAVE SCREEN.

ELSE.
PERFORM YMA_ADD_SYS_JOBS.
*       PERFORM YMA_ADD_SYS_JOBS1.
PERFORM YMA_RECOGN_NEW_TREE.
SET SCREEN 0.
LEAVE SCREEN.

ENDIF.
ENDIF.
ENDCASE.

ENDMODULE.                            " USER_COMMAND_3102  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_3300  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_3300 INPUT.
DATA JOB_EXIST TYPE I.
CLEAR NODES.
CASE SY-UCOMM.
WHEN '%EX'.
G_YMA_JOB = G_YMA_JOB.
SET SCREEN 0.
LEAVE SCREEN.
WHEN 'ENTR'.
JOB_EXIST = 0.
READ TABLE TB_NODES WITH KEY TEXT7 = 'JobM' TEXT = G_YMA_JOB.
IF SY-SUBRC = 0.
JOB_EXIST = 1.
ENDIF.

IF PRTY > 5.
MESSAGE W063.
ELSEIF G_YMA_JOB = SPACE OR PRTY = SPACE OR Y_THRESHOLD = SPACE.
MESSAGE W065.
ELSEIF PRTY CN ' 1234567890' OR  Y_THRESHOLD  CN ' 1234567890'.
MESSAGE W066.
ELSEIF JOB_EXIST = 1.
MESSAGE W067.
ELSE.
NODES-TEXT      = G_YMA_JOB..
NODES-COLOR      = G_2_COLOR.
NODES-INTENSIV   = '1'.
NODES-TCOLOR     = G_N2_COLOR.
NODES-TLENGTH    = 20.
NODES-TEXT6      =  G_YMA_JOB."TEXT-012.
NODES-TEXT7 = 'JobM'.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = G_NODE-ID
RELATIONSHIP       = 'BABY'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.


NODES-TLENGTH = 1.
NODES-TEXT    = 'SYM_DOCUMENT'.
NODES-HOTSPOT = 'X'.
NODES-KIND = 'S'.
NODES-TEXT7 = 'JobM'.
NODES-TCOLOR  = 3.
**********************Restore afterward *****************************
NODES-TEXT1 = 'ICON_BUSINAV_PROC_EXIST'.
NODES-KIND1 = 'I'.
NODES-TLENGTH1 = 3.
NODES-TLENGTH2 = 10.
NODES-TEXT2 = Y_THRESHOLD.
NODES-TCOLOR2 = 1.
NODES-TLENGTH3 = 19.
NODES-TEXT3 = TEXT-007.
NODES-TEXT4 = 'ICON_EXECUTE_OBJECT'.
NODES-KIND4 = 'I'.
NODES-TLENGTH4 = 3.
NODES-HOTSPOT4 = 'X'.
NODES-TEXT6   =  'JOB'.
NODES-TEXT6+15 =  G_YMA_JOB.
NODES-TEXT6+47 =  'YEL'.
NODES-TEXT6+50 =  Y_THRESHOLD.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'CHILD'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.

NODES-TEXT3 = TEXT-031.
NODES-TEXT2 = PRTY.
NODES-TEXT6+47 = 'PRT'.
NODES-TEXT6+50 = PRTY.
NODES-TEXT7 = 'JobM'.
CALL FUNCTION 'RS_TREE_ADD_NODE'
EXPORTING
NEW_NAME           = 'TABLESPACE PARAMETER NAME'
INSERT_ID          = IO_NEW_ID
RELATIONSHIP       = 'NEXT'
LINK               = ' '
NEW_TYPE           =  'TSPN'
DISPLAY_ATTRIBUTES =  NODES
IMPORTING
NEW_ID             = IO_NEW_ID
*         NODE_INFO          =
EXCEPTIONS
ID_NOT_FOUND       = 1
OTHERS             = 2.
CLEAR NODES.
PERFORM YMA_RECOGN_NEW_TREE.
TB_ADD_YMA_TREE_J-YMA_JOB = G_YMA_JOB.
TB_ADD_YMA_TREE_J-YMA_PRT_JB = PRTY.
TB_ADD_YMA_TREE_J-YOP_QT_YEL = Y_THRESHOLD.
APPEND TB_ADD_YMA_TREE_J.
G_ALL_CHANGED = 1.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.

ENDCASE.

ENDMODULE.                            " USER_COMMAND_3300  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1100  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_1100 INPUT.
PERFORM YMA_RECOGN_NEW_TREE.
DATA EXCL_INCL.
DATA EXEC_CODE(4).
EXEC_CODE = SPACE.
DATA SQL_ERROR TYPE I.
SQL_ERROR = 0.
DATA INEX_FL TYPE I.
G_EVENT = SPACE.
CASE OK_CODE.
WHEN 'USER'.
G_EVENT = OK_CODE.
SET SCREEN 1100.
ENDCASE.

CASE SY-UCOMM.
*    begin of insert by Sagit.S
WHEN 'USRL'.
PERFORM GET_USERS_LIST.
SET SCREEN 1100.
*    end   of insert by Sagit.S
WHEN '%EX'.
SET SCREEN 0.
LEAVE SCREEN.

WHEN 'ENTR'.
G_ALL_CHANGED = 1.
PERFORM YMA_RECOGN_NEW_TREE.
PERFORM YMA_SQL_CHECK_FIELDS_EMPTY.
PERFORM YMA_SQL_CHECK_FIELDS_VALID.
IO_NEW_ID = G_NODE-ID.
CASE G_NODE-TEXT6+6(6).
WHEN 'SQL' OR 'APP' OR 'PROG' OR 'TR'  .
LOOP AT TB_NODES WHERE TEXT6(5) = 'm_sql' OR
TEXT6(5) = 'SQL'                                      .
*           AND     TEXT7+44(31) = G_NODE-TEXT7+44(31).
************* Check if such combination already exists******************
*            IF YMA_TR_SQL(75) = TB_NODES-TEXT7.
CASE USER_RATIO.
WHEN 'User'.
IF TB_NODES-TEXT7(20)     =  Y_APPSERV
AND TB_NODES-TEXT9   =  YMA_SCREEN-Y_PROGRAM
AND TB_NODES-TEXT8   =  YMA_SCREEN-Y_TRANS
AND TB_NODES-TEXT7+20(12)   = GROUP_NAME.
SQL_ERROR = 1.
EXIT.
ENDIF.
WHEN 'Group'.
IF TB_NODES-TEXT7(20)     =    Y_APPSERV
AND TB_NODES-TEXT9  = YMA_SCREEN-Y_PROGRAM "TEXT7+36(8
AND TB_NODES-TEXT8   =  YMA_SCREEN-Y_TRANS
AND TB_NODES-TEXT7+20(12)   = US_NAME.
SQL_ERROR = 1.
EXIT.
ENDIF.

ENDCASE.
ENDLOOP.
************ Create node  Transaction Level *********************
SY = SY.
".
LOOP AT TB_NODES WHERE TEXT6(5) = 'm_sql' OR
TEXT6(5) = 'SQL'.       .

*        AND TEXT7+44(31) = G_NODE-TEXT7+44(31).

*            IF  TB_NODES-TEXT7(20)     =  Y_APPSERV .
IF  TB_NODES-TEXT  =  Y_APPSERV .
IO_NEW_ID = TB_NODES-ID .
EXEC_CODE = 'APP'.
EXIT.
ENDIF.
ENDLOOP.
*************** Create node  Program Level  *********************
".
LOOP AT TB_NODES WHERE TEXT6(5) = 'm_sql' .
*         AND   TEXT7+44(31) = G_NODE-TEXT7+44(31).
IF  TB_NODES-TEXT7(20)     =  Y_APPSERV AND
*                     TB_NODES-TEXT7+36(8)   =  Y_PROGRAM .
TB_NODES-TEXT   =  YMA_SCREEN-Y_PROGRAM .
IO_NEW_ID = TB_NODES-ID .
EXEC_CODE = 'PROG'.
EXIT.
ENDIF.
ENDLOOP.
*************** Create node  Application Server Level ************

*           LOOP AT TB_NODES WHERE TEXT6(5) = 'm_sql' .
**          AND TEXT7+44(31) = G_NODE-TEXT7+44(31).
*             IF  TB_NODES-TEXT7(20)     =  Y_APPSERV AND
*                 TB_NODES-TEXT9   =  YMA_SCREEN-Y_PROGRAM AND
*                 TB_NODES-TEXT   =  YMA_SCREEN-Y_TRANS .
**                 TB_NODES-TEXT6+6(4) =  'TR'.
*               IO_NEW_ID = TB_NODES-ID .
*             ADD 1 TO IO_NEW_ID.
*               EXEC_CODE = 'TR'.
*               EXIT.
*             ENDIF.
*           ENDLOOP.
READ TABLE TB_NODES WITH KEY TEXT7(20) = Y_APPSERV
TEXT9     =  YMA_SCREEN-Y_PROGRAM
TEXT   =  YMA_SCREEN-Y_TRANS
TEXT1 = 'Transaction'(060).
IF SY-SUBRC = 0.
IO_NEW_ID = TB_NODES-ID. EXEC_CODE = 'TR'.
ENDIF.
".

IF SQL_ERROR = 1.
MESSAGE I044.
ELSE.
PERFORM YMA_SQL_DEFAULT.
MOVE-CORRESPONDING YMA_TR_SQL TO YMA_SQL_TR.
YMA_SQL_TR-Y_MSNAME = Y_APPSERV.
CASE USER_RATIO.
WHEN 'User'.
YMA_SQL_TR-Y_USER   =  GROUP_NAME.
WHEN 'Group'.
ENDCASE.
YMA_SQL_TR-Y_USER   =  US_NAME.
YMA_SQL_TR-Y_TCODE  =  YMA_SCREEN-Y_TRANS.
YMA_SQL_TR-Y_PROGRAM = YMA_SCREEN-Y_PROGRAM.

CASE EXEC_CODE.
WHEN SPACE.
PERFORM YMA_SQL_PROG.
PERFORM YMA_SQL_TRANS.
PERFORM YMA_SQL_USER USING INEX_FL.
PERFORM YMA_SQL_DETAILS.
WHEN 'APP'.
PERFORM YMA_SQL_PROG.
PERFORM YMA_SQL_TRANS.
PERFORM YMA_SQL_USER USING INEX_FL.
PERFORM YMA_SQL_DETAILS.
WHEN 'PROG'.
PERFORM YMA_SQL_TRANS.
PERFORM YMA_SQL_USER USING INEX_FL.
PERFORM YMA_SQL_DETAILS.
WHEN  'TR'.
PERFORM YMA_SQL_USER USING INEX_FL.
PERFORM YMA_SQL_DETAILS.
ENDCASE.
*************** Check exclude include.
PERFORM YMA_SQL_DETERMINATE_EXLUDE USING EXCL_INCL.
**********************************************************************
TB_AD_YMA_SQL_TR-Y_MSNAME      =  Y_APPSERV.
TB_AD_YMA_SQL_TR-Y_PROGRAM     =  YMA_SCREEN-Y_PROGRAM.
TB_AD_YMA_SQL_TR-Y_TCODE       =  YMA_SCREEN-Y_TRANS.
IF USER_RATIO = 'User'(045).
TB_AD_YMA_SQL_TR-Y_USER      =  GROUP_NAME.
TB_AD_YMA_SQL_TR-Y_GR_USR    = 'G'.
ELSE.
TB_AD_YMA_SQL_TR-Y_USER      =  US_NAME.
TB_AD_YMA_SQL_TR-Y_GR_USR    = 'U'.
ENDIF.
TB_AD_YMA_SQL_TR-Y_PARAME      = YMA_TR_SQL-Y_PARAME.
TB_AD_YMA_SQL_TR-Y_ALRT_E_I    = EXCL_INCL.
TB_AD_YMA_SQL_TR-Y_ALRT_M_C    = YMA_TR_SQL-Y_ALRT_M_C.
TB_AD_YMA_SQL_TR-Y_VL_PRT      = YMA_TR_SQL-Y_VL_PRT.
TB_AD_YMA_SQL_TR-Y_VL_RED      = YMA_TR_SQL-Y_VL_RED.
TB_AD_YMA_SQL_TR-Y_VL_YEL      = YMA_TR_SQL-Y_VL_YEL.
APPEND TB_AD_YMA_SQL_TR.
SET SCREEN 0.
LEAVE SCREEN.
ENDIF.
ENDCASE.
ENDCASE.

ENDMODULE.                            " USER_COMMAND_1100  INPUT
*&---------------------------------------------------------------------*
*&      Module  VAL1  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE VAL1 INPUT.
REFRESH OBJECTYPES.
READ TABLE LIST INDEX 1.
LIST-NAME = 'All servers'(071).
MODIFY LIST INDEX 1.
LOOP AT LIST.
MOVE LIST-NAME TO OBJECTYPES-OBJTEXT.
MOVE SY-TABIX TO OBJECTYPES-OBJTYPE.
APPEND OBJECTYPES.
ENDLOOP.
CALL FUNCTION 'Y_MA_POPUP_TBL'
EXPORTING
TOP                 = 7
LEFT                = 7
BOTTOM              = 15
RIGHT               = 40
PTIT                = 'PAR'
IMPORTING
OBJTYPE             = OBJTYPE
TABLES
OBJECTYPES          = OBJECTYPES
EXCEPTIONS
OBECJTYPES_IS_EMPTY = 1
OTHERS              = 2.
IF NOT ( OBJTYPE IS INITIAL ).
READ TABLE OBJECTYPES INDEX OBJTYPE.
Y_APPSERV = OBJECTYPES-OBJTEXT.
ENDIF.
ENDMODULE.                            " VAL1  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_3005  INPUT
*&---------------------------------------------------------------------*
*       text
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
MODULE USER_COMMAND_3005 INPUT.
DEFAULT = 0.
G_SQL_PRM_ERROR = 0.
CASE SY-UCOMM.
WHEN '%EX'.
*       PERFORM YMA_FIRST_INTERVAL_SLCT2.

PERFORM YMA_SELECT_SQL.
G_SQL_PRM_ERROR = 0.
SET SCREEN 0.
LEAVE SCREEN.

WHEN 'ENTR'.
*      G_ALL_CHANGED = 1.
DATA STRING(120).
DATA RESULT TYPE I.
DATA RESULT1 TYPE I.
RESULT = YMA_SCREEN-YMA_INTRV2.
*IF YMA_SCREEN-YMA_INTRV2  CN ' 1234567890' OR YMA_SCREEN-YMA_INTRV2
*YMA_SCREEN-YMA_DELDAY     CN  ' 1234567890'.
* MESSAGE E113. G_SQL_PRM_ERROR = 1. SET SCREEN 0.  LEAVE SCREEN.
* ENDIF.
*YMA_SCREEN-YMA_INTRV2
*YMA_SCREEN-YMA_DELDAY
IF RESULT > 30.
MESSAGE I047. G_SQL_PRM_ERROR = 1. SET SCREEN 0.  LEAVE SCREEN.
ENDIF.
************************************************************************
*      RESULT = YMA_SCREEN-YMA_INTRV2 * 120.
*      RESULT1 = YMA_SCREEN-YMA_INTRV1 .
*      IF RESULT < RESULT1.
*        MESSAGE I046. G_SQL_PRM_ERROR = 1. SET SCREEN 0.  LEAVE SCREEN.
*      ENDIF.
**********************************************************************
RESULT =  ( YMA_SCREEN-YMA_INTRV2 * 60 ) / YMA_SCREEN-YMA_INTRV1.
IF RESULT < 20.
DATA MACHVALUE TYPE I.
MACHVALUE = ( YMA_SCREEN-YMA_INTRV1 * 20 ) / 60.
MESSAGE I069 WITH  MACHVALUE  . G_SQL_PRM_ERROR = 1.
SET SCREEN 0.  LEAVE SCREEN.
ENDIF.
***********************************************************************
RESULT = ( YMA_SCREEN-YMA_INTRV2 * 1200 ) MOD YMA_SCREEN-YMA_INTRV1.
IF  RESULT NE 0.
*STRING =
*'Interval of 2 collector is not divisable by value of 1 collector'.
MESSAGE I023. G_SQL_PRM_ERROR = 1. SET SCREEN 0.  LEAVE SCREEN.
ENDIF.
**************************************************************
RESULT = YMA_SCREEN-YMA_DELDAY.
IF RESULT < 1.
MESSAGE I048. G_SQL_PRM_ERROR = 1. SET SCREEN 0.  LEAVE SCREEN.
ENDIF.
******************************************************************
DATA RESULT3 TYPE F.
RESULT = YMA_SCREEN-YMA_YELTIM.
RESULT1 = YMA_SCREEN-YMA_INTRV1.
RESULT3 = RESULT / RESULT1.
IF RESULT3 < 2 .
VAL1 = YMA_SCREEN-YMA_INTRV1 * 2.
"     mishka
MESSAGE I080 WITH VAL1.
G_SQL_PRM_ERROR = 1. SET SCREEN 0.  LEAVE SCREEN.
ENDIF.

******************************************************************
RESULT = YMA_SCREEN-YMA_YELTIM.
RESULT1 = YMA_SCREEN-YMA_REDTIM.
IF RESULT > RESULT1.
MESSAGE I045. G_SQL_PRM_ERROR = 1. SET SCREEN 0.  LEAVE SCREEN.
ENDIF.
********************************************************************
DATA TEXT(100).
TEXT = TEXT-00A.
"mishka
*Block  of changing already entered values in tree
* This block is fitting all entered Red and Yellow thresholds
* according to value of Intrval 1, e.g. for example
*if Intrval1 = 90 that means all values must be not less 180
*but it does not change values  grater then min. fitted.

IF   INTERVAL1_PREV < YMA_SCREEN-YMA_INTRV1.
*MESSAGE I000.
DATA ANSWER.
CALL FUNCTION 'POPUP_TO_CONFIRM_WITH_MESSAGE'
EXPORTING
DIAGNOSETEXT1  = TEXT-00A
DIAGNOSETEXT2  = TEXT-00B
DIAGNOSETEXT3  = TEXT-00C
TEXTLINE1      = TEXT-00D
TEXTLINE2      = TEXT-00E
TITEL          = 'Confirm Changes'(074)
*         START_COLUMN   = 25
*         START_ROW      = 6
CANCEL_DISPLAY = ''
IMPORTING
ANSWER         =  ANSWER
EXCEPTIONS
OTHERS         = 1.

IF ANSWER = 'J'.
PERFORM YMA_FIT_SQL_THRESHOLDS.
ELSEIF ANSWER = 'N'.
YMA_SCREEN-YMA_INTRV1 = INTERVAL1_PREV .
G_SQL_PRM_ERROR = 1. SET SCREEN 0.  LEAVE SCREEN.
ENDIF.
ENDIF.
*ENDIF.

*********************Change values in data dict.**********************

SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'OPTISQL_COL1_INTERVAL'.
RESULT = YMA_SCREEN-YMA_INTRV1 MOD 30.
YMA_OT_GP-IN_VALUE = YMA_SCREEN-YMA_INTRV1.
MODIFY YMA_OT_GP.

SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'OPTISQL_COL2_INTERVAL'.
YMA_OT_GP-IN_VALUE = YMA_SCREEN-YMA_INTRV2.
MODIFY YMA_OT_GP.

SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'OPTISQL_CLEAR_DAYS'.
YMA_OT_GP-IN_VALUE = YMA_SCREEN-YMA_DELDAY.
MODIFY YMA_OT_GP.

SELECT SINGLE * FROM  YMA_TR_SQL
WHERE  Y_PARAME    = 'TIME_LIMIT'
AND    LANG        = SY-LANGU     .

YMA_TR_SQL-Y_VL_PRT = YMA_SCREEN-YMA_PRITIM.
YMA_TR_SQL-Y_VL_RED = YMA_SCREEN-YMA_REDTIM.
YMA_TR_SQL-Y_VL_YEL = YMA_SCREEN-YMA_YELTIM.
MODIFY YMA_TR_SQL.

*IF   INTERVAL1_PREV < YMA_SCREEN-YMA_INTRV1.
*MESSAGE I000.
*ENDIF.
*      READ TABLE TB_YMA_OT_GP2 WITH KEY PARAM_NAME = 'SNMP_IP_ADDRESS'.
*       TB_YMA_OT_GP2-IN_VALUE = Y_IP_ADDR_FLD.
*       MODIFY TB_YMA_OT_GP2 INDEX SY-TABIX.
*       READ TABLE TB_YMA_OT_GP2 WITH KEY PARAM_NAME = 'SNMP_PORT'.
*       TB_YMA_OT_GP2-IN_VALUE = Y_PORT_FLD.
*       MODIFY TB_YMA_OT_GP2 INDEX SY-TABIX.
*      READ  TABLE TB_YMA_OT_GP2 WITH KEY PARAM_NAME = 'SNMP_COMMUNITY'.
*       TB_YMA_OT_GP2-IN_VALUE = Y_STATUS_FLD.
*       MODIFY TB_YMA_OT_GP2 INDEX SY-TABIX.
*       MODIFY YMA_OT_GP FROM TABLE TB_YMA_OT_GP2.
*       CLEAR: F1, F2.

SET SCREEN 0.
LEAVE SCREEN.

SET SCREEN 0.
LEAVE SCREEN.
WHEN 'DEFL'.
DEFAULT = 1.
SELECT SINGLE * FROM  YMA_TR_SQL
WHERE  Y_PARAME    = 'TIME_LIMIT'
AND    LANG        = SY-LANGU     .

YMA_SCREEN-YMA_PRITIM = YMA_TR_SQL-Y_VL_PRT.
YMA_SCREEN-YMA_REDTIM = YMA_TR_SQL-Y_VL_RED.
YMA_SCREEN-YMA_YELTIM = YMA_TR_SQL-Y_VL_YEL.

SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'OPTISQL_COL1_INTERVAL'.

YMA_SCREEN-YMA_INTRV1 = YMA_OT_GP-IN_DEFAULT.


SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'OPTISQL_COL2_INTERVAL'.
YMA_SCREEN-YMA_INTRV2 = YMA_OT_GP-IN_DEFAULT.

SELECT SINGLE * FROM  YMA_OT_GP
WHERE  PARAM_NAME  = 'OPTISQL_CLEAR_DAYS'.
YMA_SCREEN-YMA_DELDAY = YMA_OT_GP-IN_DEFAULT.
ENDCASE.
ENDMODULE.                            " USER_COMMAND_3005  INPUT
*&---------------------------------------------------------------------*
*&      Module  INTERV1  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE INTERV1 INPUT.
*do not check when reset to default
CHECK  SY-UCOMM <> 'DEFL' AND SY-UCOMM <> '%EX'.
IF G_EDIT = 1.
IF YMA_SCREEN-YMA_INTRV1 NE '30' AND  YMA_SCREEN-YMA_INTRV1 NE '60'
AND YMA_SCREEN-YMA_INTRV1 NE '90'.
MESSAGE E078.
ENDIF.
ENDIF.
ENDMODULE.                            " INTERV1  INPUT
*&---------------------------------------------------------------------*
*&      Module  XYZ  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE XYZ INPUT.
DATA:    INPUTE_TBL LIKE  YBAPIUTYP OCCURS 3 WITH HEADER LINE,
COUNT_CHAR LIKE  YBAPIUTYP-OBJTYPE.
REFRESH INPUTE_TBL.
INPUTE_TBL-OBJTYPE = '1'.
INPUTE_TBL-OBJTEXT = '30'.
APPEND INPUTE_TBL.
INPUTE_TBL-OBJTYPE = '2'.
INPUTE_TBL-OBJTEXT = '60'.
APPEND INPUTE_TBL.
INPUTE_TBL-OBJTYPE = '3'.
INPUTE_TBL-OBJTEXT = '90'.
APPEND INPUTE_TBL.
CALL FUNCTION 'ZI_POPUP_REQUEST'
EXPORTING
TOP                 = 40
LEFT                = 6
BOTTOM              = 74
RIGHT               = 15
TITLE1              = TEXT-SQL
IMPORTING
OBJTYPE             = COUNT_CHAR
TABLES
OBJECTYPES          = INPUTE_TBL
EXCEPTIONS
OBECJTYPES_IS_EMPTY = 1
OTHERS              = 2.
COUNT_CHAR = COUNT_CHAR.

READ TABLE INPUTE_TBL INDEX COUNT_CHAR.
YMA_SCREEN-YMA_INTRV1 = INPUTE_TBL-OBJTEXT.
ENDMODULE.                            " XYZ  INPUT
*&---------------------------------------------------------------------*
*&      Module  DELDAY  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE DELDAY INPUT.
*do not check when reset to default
CHECK  SY-UCOMM <> 'DEFL' AND SY-UCOMM <> '%EX'.
IF
YMA_SCREEN-YMA_DELDAY     CN  ' 1234567890'.
MESSAGE E113. "G_SQL_PRM_ERROR = 1. SET SCREEN 0.  LEAVE SCREEN.
ENDIF.


ENDMODULE.                            " DELDAY  INPUT
*&---------------------------------------------------------------------*
*&      Module  INTERV2  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE INTERV2 INPUT.
*do not check when reset to default
CHECK  SY-UCOMM <> 'DEFL' AND SY-UCOMM <> '%EX'.
IF YMA_SCREEN-YMA_INTRV2
CN  ' 1234567890'.
MESSAGE E113. "G_SQL_PRM_ERROR = 1. SET SCREEN 0.  LEAVE SCREEN.
ENDIF.


ENDMODULE.                            " INTERV2  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_EXIT INPUT.
CASE SY-UCOMM.
WHEN '%EX'.
*       PERFORM YMA_FIRST_INTERVAL_SLCT2.
PERFORM YMA_SELECT_SQL.
G_SQL_PRM_ERROR = 0.
SET SCREEN 0.
LEAVE SCREEN.
ENDCASE.

ENDMODULE.                            " USER_EXIT  INPUT
*&---------------------------------------------------------------------*
*&      Module  PRITIM  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE PRITIM INPUT.
CHECK  SY-UCOMM <> 'DEFL' AND SY-UCOMM <> '%EX'.
IF
YMA_SCREEN-YMA_PRITIM     CN  ' 1234567890'.
MESSAGE E113. "G_SQL_PRM_ERROR = 1. SET SCREEN 0.  LEAVE SCREEN.
ENDIF.









ENDMODULE.                            " PRITIM  INPUT
*&---------------------------------------------------------------------*
*&      Module  REDTIM  INPUT
*&---------------------------------------------------------------------*
MODULE REDTIM INPUT.
CHECK  SY-UCOMM <> 'DEFL' AND SY-UCOMM <> '%EX'.
IF YMA_SCREEN-YMA_REDTIM CN ' 1234567890'.
MESSAGE E113.
ENDIF.
ENDMODULE.                            " REDTIM  INPUT
*&---------------------------------------------------------------------*
*&      Module  YELTIM  INPUT
*&---------------------------------------------------------------------*
MODULE YELTIM INPUT.
CHECK  SY-UCOMM <> 'DEFL' AND SY-UCOMM <> '%EX'.
IF YMA_SCREEN-YMA_YELTIM CN ' 1234567890'.
MESSAGE E113.
ENDIF.
ENDMODULE.                            " YELTIM  INPUT
*&---------------------------------------------------------------------*
*&      Module  R_THRESHOLD  INPUT
*&---------------------------------------------------------------------*
MODULE R_THRESHOLD INPUT.
CHECK SY-UCOMM = 'ENTR'.
IF R_THRESHOLD CN ' 1234567890'.
MESSAGE E113.
ENDIF.
ENDMODULE.                            " R_THRESHOLD  INPUT
*&---------------------------------------------------------------------*
*&      Module  G_JOP_PRT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE G_JOP_PRT INPUT.
*
DATA MAX TYPE I.
*
CHECK SY-UCOMM = 'ENTR'.
IF G_JOP_PRT CN ' 1234567890'.
MESSAGE E113.
ENDIF.
MAX = G_JOP_PRT.
IF MAX < 1 OR MAX > 999.
MESSAGE E114.
ENDIF.
ENDMODULE.                            " G_JOP_PRT  INPUT
*&---------------------------------------------------------------------*
*&      Module  US_EXIT  INPUT
*&---------------------------------------------------------------------*
MODULE US_EXIT INPUT.
CASE SY-UCOMM.
WHEN '%EX'.
FIELDS_CHANGED = 0.
SET SCREEN 0.
LEAVE SCREEN.
ENDCASE.
ENDMODULE.                            " US_EXIT  INPUT
*&---------------------------------------------------------------------*
*&      Module  Y_THRESHOLD  INPUT
*&---------------------------------------------------------------------*
MODULE Y_THRESHOLD INPUT.
CHECK  SY-UCOMM = 'ENTR' .
IF Y_THRESHOLD CN ' 1234567890'.
MESSAGE E113.
ENDIF.
ENDMODULE.                            " Y_THRESHOLD  INPUT
*&---------------------------------------------------------------------*
*&      Module  PRIORITY  INPUT
*&---------------------------------------------------------------------*
MODULE PRIORITY INPUT.
CHECK SY-UCOMM = 'ENTR'.
IF PRIORITY CN ' 1234567890'.
MESSAGE E113.
ENDIF.
MAX = PRIORITY.
IF MAX < 1 OR MAX > 999.
MESSAGE E114.
ENDIF.
ENDMODULE.                            " PRIORITY  INPUT
*&---------------------------------------------------------------------*
*&      Module  G_ML_CANC  INPUT
*&---------------------------------------------------------------------*
MODULE G_ML_CANC INPUT.
ENDMODULE.                            " G_ML_CANC  INPUT
*&---------------------------------------------------------------------*
*&      Form  YMA_DEL_EMPTY_TRANSACT
*&---------------------------------------------------------------------*
FORM YMA_DEL_EMPTY_TRANSACT.
*
DATA TB_DEL_AUX_RLP LIKE TB_DEL_USER_RLP_LOOP OCCURS 1 WITH HEADER LINE.
REFRESH TB_DEL_AUX_RLP.
LOOP AT TB_DEL_USER_RLP_LOOP WHERE YOP_MSNAME = G_NODE-TEXT6(20)
AND YMA_TCODE =   G_NODE-TEXT5.
TB_DEL_AUX_RLP = TB_DEL_USER_RLP_LOOP.
APPEND TB_DEL_AUX_RLP.
ENDLOOP.

DATA LOOP_NUM TYPE I.
DESCRIBE TABLE TB_DEL_AUX_RLP LINES LOOP_NUM.
DATA COUNT TYPE I.
SELECT  COUNT( * ) FROM  YMA_TREE_U
INTO COUNT
WHERE  YOP_MSNAME  = G_NODE-TEXT6(20)
AND    YMA_TCODE   = G_NODE-TEXT5 .

COUNT = COUNT / 6.
IF LOOP_NUM = COUNT.

READ TABLE TB_NODES WITH KEY TEXT7 = 'CT'
TEXT6(20) = G_NODE-TEXT6(20).
CALL FUNCTION 'RS_TREE_DELETE_NODE'
EXPORTING
NODE_ID      = TB_NODES-ID
*         WITHOUT_ROOT =
EXCEPTIONS
ID_NOT_FOUND = 1
OTHERS       = 2.
PERFORM YMA_RECOGN_NEW_TREE.

ENDIF.
SY = SY.
ENDFORM.                              " YMA_DEL_EMPTY_TRANSACT
*&---------------------------------------------------------------------*
*&      Module  YMA_THRESHOLDS  INPUT
*&---------------------------------------------------------------------*
MODULE YMA_THRESHOLDS INPUT.
DATA: L_R_THRESHOLD TYPE I,
L_Y_THRESHOLD TYPE I.
*
L_R_THRESHOLD = R_THRESHOLD.
L_Y_THRESHOLD = Y_THRESHOLD.
IF L_R_THRESHOLD LE L_Y_THRESHOLD.
MESSAGE E039.
ENDIF.
ENDMODULE.                            " YMA_THRESHOLDS  INPUT
*&---------------------------------------------------------------------*
*&      Module  YWAI_USER_COMMAND_9100  INPUT
*
* user commands for list of fragments screen
*
*&---------------------------------------------------------------------*
MODULE YWAI_USER_COMMAND_9100 INPUT.
PERFORM WRITE_USERS_LIST.
ENDMODULE.                            " YWAI_USER_COMMAND_9100  INPUT

*&---------------------------------------------------------------------*
*&      Module  VAL_REQ_USER  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE VAL_REQ_USER INPUT.

DATA: LEN1 TYPE I,
TMP_US_NAME LIKE YTR_SCREEN-USER_ID.

REFRESH I_USER.  CLEAR I_USER.
IF US_NAME IS INITIAL.
SELECT * FROM  USR02 CLIENT SPECIFIED INTO TABLE I_USER.
ELSE.
LEN1 = STRLEN( US_NAME ).
IF US_NAME(1) = '*'.              " or us_name+len1(1) = '*'.
TMP_US_NAME = US_NAME.
IF TMP_US_NAME(1) = '*'.
TMP_US_NAME(1) = '%'.
*       ELSE.
*         TMP_US_NAME+LEN1(1) = '%'.
ENDIF.
SELECT * FROM  USR02 CLIENT SPECIFIED INTO TABLE I_USER
WHERE BNAME LIKE TMP_US_NAME.
ELSE.
SELECT * FROM  USR02 CLIENT SPECIFIED INTO TABLE I_USER
WHERE BNAME = US_NAME.
ENDIF.
ENDIF.
SORT I_USER BY MANDT BNAME USTYP ERDAT.

SET SCREEN 0.
CALL SCREEN 9100 STARTING AT 10 2 ENDING AT 56 12.

ENDMODULE.                            " VAL_REQ_USER  INPUT
*&---------------------------------------------------------------------*
*&      Module  YWAI_EXIT_COMMAND_9100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE YWAI_EXIT_COMMAND_9100 INPUT.
*   LEAVE LIST-PROCESSING.
*   IF SY-UCOMM = 'PICK'.
*     US_NAME = I_USER-BNAME.
*   ENDIF.
*   set screen 0.
*   leave screen.
ENDMODULE.                            " YWAI_EXIT_COMMAND_9100  INPUT

*&---------------------------------------------------------------------*
*&      Module  DIST_REQ  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE DIST_REQ INPUT.

DATA VALUE LIKE YBAPIUTYP-OBJTYPE.
DATA IN_TABLES LIKE YBAPIUTYP OCCURS 1 WITH HEADER LINE.
REFRESH IN_TABLES.
IF G_EDIT = 1 .

SELECT * FROM  SOID CLIENT SPECIFIED
*                  WHERE OWNNO = SPACE
*                  AND   OBJNAM <> 'OPTIPAGE'
ORDER BY PRIMARY KEY.

IN_TABLES-OBJTEXT = SOID-OBJNAM.

APPEND IN_TABLES.

ENDSELECT.

CALL FUNCTION 'ZI_POPUP_REQUEST'
EXPORTING
TOP                 = 1
LEFT                = 7
BOTTOM              = 25
RIGHT               = 15
TITLE1              = 'Choose Distrib. list'  "misha
IMPORTING
OBJTYPE             = VALUE
TABLES
OBJECTYPES          = IN_TABLES
EXCEPTIONS
OBECJTYPES_IS_EMPTY = 1
OTHERS              = 2.


READ TABLE IN_TABLES INDEX VALUE.
IF VALUE NE SPACE.
YMA_SCREEN-Y_DESTT = IN_TABLES-OBJTEXT.
ENDIF.
FLAG1 = 'D'.
*  FCODE = 'DIST'.
*  SUPPRESS DIALOG.
ENDIF.

ENDMODULE.                            " DIST_REQ  INPUT
