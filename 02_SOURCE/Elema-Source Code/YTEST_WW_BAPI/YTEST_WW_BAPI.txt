*&---------------------------------------------------------------------*
*& Report  YTEST_WW_BAPI
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  YTEST_WW_BAPI.

PARAMETERS P_AUART TYPE AUART.

DATA:
LW_VBTYP          TYPE VBTYP,
LST_ORDER_PARTNER TYPE BAPIPARNR,
LTD_ORDER_PARTNER TYPE STANDARD TABLE OF BAPIPARNR,
LST_HEADER_IN     TYPE BAPISDHD1,
LW_NUMBER         TYPE POSNR_VA,
LST_ITEMS_IN      TYPE BAPISDITM,
LTD_ITEMS_IN      TYPE STANDARD TABLE OF BAPISDITM,
LST_ITEMS_INX     TYPE BAPISDITMX,
LTD_ITEMS_INX     TYPE STANDARD TABLE OF BAPISDITMX,
LST_SCHEDULES     TYPE BAPISCHDL,
LTD_SCHEDULES     TYPE STANDARD TABLE OF BAPISCHDL,
LST_CONDITIONS    TYPE BAPICOND,
LTD_CONDITIONS    TYPE STANDARD TABLE OF BAPICOND,
LST_CONDITIONSX   TYPE BAPICONDX,
LTD_CONDITIONSX   TYPE STANDARD TABLE OF BAPICONDX,
LW_COND_VALUE     TYPE BAPICURR-BAPICURR,
LTD_RETURN        TYPE STANDARD TABLE OF BAPIRET2,
LST_RETURN        TYPE BAPIRET2.

*     ①受注伝票ヘッダ
LST_HEADER_IN-DOC_TYPE   = P_AUART.
" 販売伝票タイプ
LST_HEADER_IN-SALES_ORG  = '1000'.
" 販売組織
LST_HEADER_IN-DISTR_CHAN = '10'.
" 流通チャネル
LST_HEADER_IN-DIVISION   = '10'.
" 製品部門
LST_HEADER_IN-SALES_GRP  = '040'.
" 営業グループ
LST_HEADER_IN-SALES_OFF  = '0400'.
" 営業所
LST_HEADER_IN-PURCH_NO_C = '4503199101'.
" 得意先発注番号
LST_HEADER_IN-PURCH_DATE = '20141111'.
" 得意先発注日付
LST_HEADER_IN-ORD_REASON = '004'.
" 受注理由 (取引理由)
LST_HEADER_IN-CURRENCY   = 'JPY'.
" 販売伝票通貨

LST_HEADER_IN-REQ_DATE_H = '20141111'.  " 指定納入期日
*      LST_HEADER_IN-COMPL_DLV  = ABAP_ON.     " 指定納入期日
*   ③明細データ
LW_NUMBER = LW_NUMBER + 10.
LST_ITEMS_IN-ITM_NUMBER = LW_NUMBER.      " 販売伝票明細
LST_ITEMS_IN-MATERIAL   = '4F3R4677P002'.
" 品目コード
LST_ITEMS_IN-SHORT_TEXT = 'PIN  4F3R4677P002'.
" 受注明細のテキスト (短)
LST_ITEMS_IN-PLANT      = 'P040'.
" プラント
LST_ITEMS_IN-REF_DOC    = '4503199101'.
" 参照伝票番号
LST_ITEMS_IN-REF_DOC_IT = '00010'.
" 参照明細番号
IF P_AUART = 'G2'
OR P_AUART = 'L2'.
LST_ITEMS_IN-TARGET_QTY = 1.
LST_ITEMS_IN-TARGET_QU = 'ST'.
ELSE.
LST_ITEMS_IN-SALES_UNIT = 'ST'.
" 販売単位
ENDIF.
APPEND LST_ITEMS_IN TO LTD_ITEMS_IN.
CLEAR LST_ITEMS_IN.

LST_ITEMS_INX-ITM_NUMBER = LW_NUMBER.      " 販売伝票明細
LST_ITEMS_INX-UPDATEFLAG = ABAP_ON.        " 販売伝票明細
APPEND LST_ITEMS_INX TO LTD_ITEMS_INX.
CLEAR LST_ITEMS_INX.
*   ⑤納入日程行データ
IF P_AUART <> 'G2'
AND P_AUART <> 'L2'.
LST_SCHEDULES-ITM_NUMBER = LW_NUMBER.     " 販売伝票明細
LST_SCHEDULES-SCHED_LINE = '0001'.   " 納入日程行
LST_SCHEDULES-REQ_DATE   = '20141111'.
" 納入日程日付
*      LST_SCHEDULES-REQ_QTY    = '3.000'.
" 販売単位による受注数量
APPEND LST_SCHEDULES TO LTD_SCHEDULES.
CLEAR LST_SCHEDULES.
ELSE.
CLEAR LTD_SCHEDULES.
ENDIF.


LST_CONDITIONS-ITM_NUMBER = LW_NUMBER.    " 販売伝票明細
LST_CONDITIONS-COND_TYPE  = 'ZPR0'.       " 条件タイプ

*    CLEAR   LW_COND_VALUE.
*    CALL FUNCTION 'BAPI_CURRENCY_CONV_TO_EXTERNAL'
*      EXPORTING
*        CURRENCY        = 'USD'
*        AMOUNT_INTERNAL = LST_TEM_PROCESS-NETPR
*      IMPORTING
*        AMOUNT_EXTERNAL = LW_COND_VALUE.      " 条件レート

LST_CONDITIONS-COND_VALUE = '30.0000'.  " 条件レート
LST_CONDITIONS-CURRENCY   = 'JPY'.
" 通貨コード
LST_CONDITIONS-COND_UNIT  = 'ST'.
" 条件単位
LST_CONDITIONS-COND_P_UNT = 1.
" 販売単位
APPEND LST_CONDITIONS TO LTD_CONDITIONS.
CLEAR LST_CONDITIONS.

LST_CONDITIONSX-ITM_NUMBER = LW_NUMBER.    " 販売伝票明細
LST_CONDITIONSX-COND_TYPE  = 'ZPR1'.       " 条件タイプ
LST_CONDITIONSX-UPDATEFLAG  = ABAP_ON.     " 更新区分

LST_CONDITIONSX-COND_VALUE = ABAP_ON.  " 条件レート
LST_CONDITIONSX-CURRENCY   = ABAP_ON.
" 通貨コード
LST_CONDITIONSX-COND_UNIT  = ABAP_ON.
" 条件単位
LST_CONDITIONSX-COND_P_UNT = ABAP_ON.
" 販売単位
APPEND LST_CONDITIONSX TO LTD_CONDITIONSX.
CLEAR LST_CONDITIONSX.

*     ④伝票取引先
LST_ORDER_PARTNER-PARTN_ROLE = 'AG'.
" 受注先「SP」
LST_ORDER_PARTNER-PARTN_NUMB = '0000040410'.
" 受注先
APPEND LST_ORDER_PARTNER TO LTD_ORDER_PARTNER.
CLEAR LST_ORDER_PARTNER.

LST_ORDER_PARTNER-PARTN_ROLE = 'WE'.
" 出荷先「SH」
LST_ORDER_PARTNER-PARTN_NUMB = '0004041001'.
" 出荷先
APPEND LST_ORDER_PARTNER TO LTD_ORDER_PARTNER.
CLEAR LST_ORDER_PARTNER.

LST_ORDER_PARTNER-PARTN_ROLE = 'VE'.
" 営業員「PE」
LST_ORDER_PARTNER-PARTN_NUMB = '0000001297'.
" 営業員
APPEND LST_ORDER_PARTNER TO LTD_ORDER_PARTNER.
CLEAR LST_ORDER_PARTNER.

LST_ORDER_PARTNER-PARTN_ROLE = 'ZJ'.
" 最終需要者「ZJ」
LST_ORDER_PARTNER-PARTN_NUMB = '0001965075'.
" 最終需要者
APPEND LST_ORDER_PARTNER TO LTD_ORDER_PARTNER.
CLEAR LST_ORDER_PARTNER.

LST_ORDER_PARTNER-PARTN_ROLE = 'ZC'.
" 最終需要者(商流)「ZC」
LST_ORDER_PARTNER-PARTN_NUMB = '0001965075'.
" 最終需要者(商流)
APPEND LST_ORDER_PARTNER TO LTD_ORDER_PARTNER.
CLEAR LST_ORDER_PARTNER.
CLEAR LW_VBTYP.
SELECT SINGLE VBTYP
FROM TVAK
INTO LW_VBTYP
WHERE AUART = P_AUART.
DATA:
LS_SWITCH  TYPE  BAPISDLS.

LS_SWITCH-PRICING = 'G' .
LS_SWITCH-NOSTRUCTURE = 'X' .

IF LW_VBTYP = 'C'.
CALL FUNCTION 'BAPI_SALESORDER_CREATEFROMDAT2'
EXPORTING
ORDER_HEADER_IN               = LST_HEADER_IN
*            BEHAVE_WHEN_ERROR             = ABAP_ON
LOGIC_SWITCH                  = LS_SWITCH
*            TESTRUN                       = ABAP_ON
TABLES
RETURN                        = LTD_RETURN
ORDER_ITEMS_IN                = LTD_ITEMS_IN
*            ORDER_ITEMS_INX               = LTD_ITEMS_INX
ORDER_PARTNERS                = LTD_ORDER_PARTNER
ORDER_SCHEDULES_IN            = LTD_SCHEDULES
ORDER_CONDITIONS_IN           = LTD_CONDITIONS.
*            ORDER_CONDITIONS_IN           = LTD_CONDITIONS
*            ORDER_CONDITIONS_INX          = LTD_CONDITIONSX.
ELSE.
CALL FUNCTION 'SD_SALESDOCUMENT_CREATE'
EXPORTING
*           SALESDOCUMENT                 =
SALES_HEADER_IN               = LST_HEADER_IN
*           SALES_HEADER_INX              =
*           SENDER                        =
*           BINARY_RELATIONSHIPTYPE       = ' '
*           INT_NUMBER_ASSIGNMENT         = ' '
*           BEHAVE_WHEN_ERROR             = ' '
LOGIC_SWITCH                  = LS_SWITCH
BUSINESS_OBJECT               = SPACE
TESTRUN                       = ABAP_ON
*           CONVERT_PARVW_AUART           = ' '
*           STATUS_BUFFER_REFRESH         = 'X'
*           CALL_ACTIVE                   = ' '
*         IMPORTING
*           SALESDOCUMENT_EX              =
*           SALES_HEADER_OUT              =
*           SALES_HEADER_STATUS           =
TABLES
RETURN                        = LTD_RETURN
SALES_ITEMS_IN                = LTD_ITEMS_IN
*           SALES_ITEMS_INX               = LTD_ITEMS_INX
SALES_PARTNERS                = LTD_ORDER_PARTNER
SALES_SCHEDULES_IN            = LTD_SCHEDULES
*           SALES_SCHEDULES_INX           =
SALES_CONDITIONS_IN           = LTD_CONDITIONS
*           SALES_CONDITIONS_INX          = LTD_CONDITIONSX
*           SALES_CFGS_REF                =
*           SALES_CFGS_INST               =
*           SALES_CFGS_PART_OF            =
*           SALES_CFGS_VALUE              =
*           SALES_CFGS_BLOB               =
*           SALES_CFGS_VK                 =
*           SALES_CFGS_REFINST            =
*           SALES_CCARD                   =
*           SALES_TEXT                    =
*           SALES_KEYS                    =
*           SALES_CONTRACT_IN             =
*           SALES_CONTRACT_INX            =
*           EXTENSIONIN                   =
*           PARTNERADDRESSES              =
*           SALES_SCHED_CONF_IN           =
*           ITEMS_EX                      =
*           SCHEDULE_EX                   =
*           BUSINESS_EX                   =
*           INCOMPLETE_LOG                =
*           EXTENSIONEX                   =
*           CONDITIONS_EX                 =
*           PARTNERS_EX                   =
*           TEXTHEADERS_EX                =
*           TEXTLINES_EX                  =
*           BATCH_CHARC                   =
*           CAMPAIGN_ASGN                 =
*           CONDITIONS_KONV_EX            =
.

ENDIF.
LOOP AT LTD_RETURN INTO LST_RETURN
WHERE TYPE = 'E'.

EXIT.
ENDLOOP.
IF SY-SUBRC = 0.
WRITE LST_RETURN-MESSAGE.
ELSE.
CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
EXPORTING
WAIT          = ABAP_ON
*          IMPORTING
*            RETURN        =
.

READ TABLE LTD_RETURN INTO LST_RETURN
WITH KEY ID = 'V1'
NUMBER = '311'.
IF SY-SUBRC = 0.
WRITE LST_RETURN-MESSAGE_V2.
ENDIF.
ENDIF.
