************************************************************************
* Report ZF022000
************************************************************************
* [プログラム名]
*   ZF022000     買掛金差額集計データ作成
* [処理概要]
*   買掛金差額を集計し、集計結果をアドオンテーブルに登録する
* [改定履歴]
*   YYYY/MM/DD   Programar         Description
*   2009/09/30   Solfis S.MIKAMI   新規開発開始
*   2010/02/23   Solfis S.MIKAMI   紆余曲折を経てひとまず完成
************************************************************************

REPORT ZF022000 MESSAGE-ID  Z1
LINE-SIZE   170
LINE-COUNT  58
NO STANDARD PAGE HEADING.

TABLES: BSIK, BSAK.

TYPES:BEGIN OF TYP_LFA1,
LIFNR    TYPE LFA1-LIFNR,      "仕入先
NAME1    TYPE LFA1-NAME1,      "名称１
END   OF TYP_LFA1.

TYPES:BEGIN OF TYP_BSIK,
BUKRS    TYPE BSIK-BUKRS,      "会社コード
LIFNR    TYPE BSIK-LIFNR,      "仕入先
HKONT    TYPE BSIK-HKONT,      "勘定コード
WAERS    TYPE BSIK-WAERS,      "通貨コード
GJAHR    TYPE BSIK-GJAHR,      "年度
BELNR    TYPE BSIK-BELNR,      "伝票No.
BUDAT    TYPE BSIK-BUDAT,      "転記日付
BLART    TYPE BSIK-BLART,      "伝票タイプ
SHKZG    TYPE BSIK-SHKZG,      "貸借フラグ
DMBTR    TYPE BSIK-DMBTR,      "国内通貨
WRBTR    TYPE BSIK-WRBTR,      "伝票通貨
ZFBDT    TYPE BSIK-ZFBDT,      "支払基準日
END   OF TYP_BSIK.

TYPES:BEGIN OF TYP_YK210,
BUKRS    TYPE YK210-BUKRS,     "会社コード
YKYEAR   TYPE YK210-YKYEAR,    "暦年
BILDOC   TYPE YK210-BILDOC,    "入力番号
FIXFLG   TYPE YK210-FIXFLG,    "確定フラグ
DELFLG   TYPE YK210-DELFLG,    "削除フラグ
KEKKBN   TYPE YK210-KEKKBN,    "結果区分
LIFNR    TYPE YK210-LIFNR,     "仕入先
LIFN2    TYPE YK210-LIFN2,     "請求先
EKORG    TYPE YK210-EKORG,     "購買組織
KNITXAMT TYPE YK210-KNITXAMT,  "税抜額
KNTAXAMT TYPE YK210-KNTAXAMT,  "税額
KNETXAMT TYPE YK210-KNETXAMT,  "税込額
WAERS    TYPE YK210-WAERS,     "通貨
ZFBDT2   TYPE YK210-ZFBDT2,    "照合締日
PAYDOC   TYPE YK210-PAYDOC,    "支払予定番号
END   OF TYP_YK210.

TYPES:BEGIN OF TYP_YK410,
BUKRS    TYPE YK410-BUKRS,     "会社コード
LIFNR    TYPE YK410-LIFNR,     "仕入先
PAYDOC   TYPE YK410-PAYDOC,    "支払予定番号
ZFBDT    TYPE YK410-ZFBDT,     "締日
PAYDAT   TYPE YK410-PAYDAT,    "支払予定日
PAYAMT   TYPE YK410-PAYAMT,    "支払予定額
WAERS    TYPE YK410-WAERS,     "通貨
LIFRE    TYPE YK410-LIFRE,     "請求書発行者
GJAHR    TYPE YK410-GJAHR,     "会計年度
BELNR    TYPE YK410-BELNR,     "伝票番号
FIFLG    TYPE YK410-FIFLG,     "会計連絡フラグ
END   OF TYP_YK410.

TYPES:BEGIN OF TYP_OUT,
GJAHR    TYPE BSIK-GJAHR,      "年度
BELNR    TYPE BSIK-BELNR,      "伝票No.
BUKRS    TYPE BSIK-BUKRS,      "会社コード
LIFNR    TYPE BSIK-LIFNR,      "仕入先
HKONT    TYPE BSIK-HKONT,      "勘定コード
WAERS    TYPE BSIK-WAERS,      "通貨コード
BUDAT    TYPE BSIK-BUDAT,      "転記日付
BLART    TYPE BSIK-BLART,      "伝票タイプ
WRBTR    TYPE BSIK-WRBTR,      "伝票通貨
DMBTR    TYPE BSIK-WRBTR,      "国内通貨
END   OF TYP_OUT.

TYPES:BEGIN OF TYP_FILE,
BUKRS(04)    TYPE C,      "会社コード
GJAHR(04)    TYPE C,      "年度
BELNR(10)    TYPE C,      "伝票No.
BUZEI(03)    TYPE C,      "明細No.
BUDAT(10)    TYPE C,      "転記日付
BLART(02)    TYPE C,      "伝票タイプ
WAERS(05)    TYPE C,      "通貨コード
HKONT(10)    TYPE C,      "勘定コード
TXT20(20)    TYPE C,      "勘定名称
LIFNR(10)    TYPE C,      "仕入先
WRBTR_C(20)  TYPE C,      "伝票通貨
DMBTR_C(20)  TYPE C,      "国内通貨
SGTXT(50)    TYPE C,      "明細テキスト
NAME1(35)    TYPE C,      "仕入先名称
END   OF TYP_FILE.

DATA: GT_ZF2030      TYPE TABLE OF ZF2030.
DATA: GT_OUT         TYPE TABLE OF TYP_OUT.


DATA: GT_LFA1      TYPE TABLE OF TYP_LFA1.
DATA: GW_LFA1      TYPE TYP_LFA1.

DATA: GT_BSIK      TYPE TABLE OF TYP_BSIK.
DATA: GT_BSIK_1    TYPE TABLE OF TYP_BSIK.  "請求書照合の
DATA: GT_BSIK_2    TYPE TABLE OF TYP_BSIK.  "支払依頼の
DATA: GT_BSIK_3    TYPE TABLE OF TYP_BSIK.  "その他の
DATA: GT_BSIK_4    TYPE TABLE OF TYP_BSIK.  "未請求の
DATA: GT_BSIK_5    TYPE TABLE OF TYP_BSIK.  "未請求(部分)の

DATA: GT_YK210     TYPE TABLE OF TYP_YK210. "見込請求済額算出用
DATA: GT_YK410     TYPE TABLE OF TYP_YK410. "見込請求済額算出用

DATA: GV_YYYYMM(6) TYPE N.
DATA: GV_CRDAT     TYPE SY-DATUM.
DATA: GV_CRTIM     TYPE SY-UZEIT.

CONSTANTS: CNS_TAB TYPE X VALUE '09'.

SELECT-OPTIONS: S_LIFNR  FOR BSIK-LIFNR.              "仕入先
PARAMETERS    : P_BUDAT  TYPE BSIK-BUDAT OBLIGATORY.  "評価期間(from)
PARAMETERS    : P_BUDAT2 TYPE BSIK-BUDAT OBLIGATORY.  "評価期間(to)
SELECT-OPTIONS: S_BLART1 FOR BSIK-BLART  OBLIGATORY.  "伝票ﾀｲﾌﾟ:ERS
SELECT-OPTIONS: S_BLART2 FOR BSIK-BLART  OBLIGATORY.  "伝票ﾀｲﾌﾟ:支払依頼
SELECT-OPTIONS: S_HKONT  FOR BSIK-HKONT  OBLIGATORY.  "買掛勘定

PARAMETERS    : P_FILE   TYPE RLGRAP-FILENAME OBLIGATORY. "ファイル
PARAMETERS    : P_CHECK  TYPE BSIK-BUDAT OBLIGATORY. "Ⅲチェック済

************************************************************************
INITIALIZATION.
************************************************************************

* タイムスタンプ
GV_YYYYMM = SY-DATUM(06).
GV_CRDAT  = SY-DATUM.
GV_CRTIM  = SY-UZEIT.

************************************************************************
START-OF-SELECTION.
************************************************************************

PERFORM GET_LIFNR.

LOOP AT GT_LFA1 INTO GW_LFA1 WHERE LIFNR IN S_LIFNR.
PERFORM EDIT_DATA.
ENDLOOP.
IF SY-SUBRC <> 0.
MESSAGE S400 WITH '対象となる仕入先が存在しません'.
ENDIF.

IF NOT GT_OUT[] IS INITIAL.
PERFORM OUT_FILE.
ENDIF.

IF NOT GT_ZF2030[] IS INITIAL.
PERFORM INS_TABLE.
ELSE.
MESSAGE S400 WITH '更新処理が行われませんでした'.
ENDIF.

************************************************************************
END-OF-SELECTION.
************************************************************************

************************************************************************
TOP-OF-PAGE.
************************************************************************

*&---------------------------------------------------------------------*
*&      Form  get_lifnr
*&---------------------------------------------------------------------*
*       対象仕入先コード、名称の一括取得
*----------------------------------------------------------------------*
FORM GET_LIFNR.

SELECT LIFNR NAME1 INTO TABLE GT_LFA1 FROM LFA1.

IF SY-SUBRC <> 0.
MESSAGE S400 WITH '仕入先が存在しません'.
STOP.
ENDIF.

ENDFORM.                    " get_lifnr

*&---------------------------------------------------------------------*
*&      Form  edit_data
*&---------------------------------------------------------------------*
*       データ編集
*----------------------------------------------------------------------*
FORM EDIT_DATA.

DATA: LW_BSIK  TYPE TYP_BSIK.
DATA: LV_WAERS TYPE WAERS.

REFRESH: GT_BSIK,
GT_BSIK_1,
GT_BSIK_2,
GT_BSIK_3,
GT_BSIK_4,
GT_BSIK_5.

* 一括取得
PERFORM GET_DATA.

SORT GT_BSIK BY BUKRS LIFNR HKONT WAERS.

IF NOT GT_BSIK[] IS INITIAL.
*   振り分け
LOOP AT GT_BSIK INTO LW_BSIK.
PERFORM CHECK_DATA USING LW_BSIK.
*     集計
AT END OF WAERS.
PERFORM CALC_DATA USING LW_BSIK.
ENDAT.
ENDLOOP.
ENDIF.

ENDFORM.                    " edit_data

*&---------------------------------------------------------------------*
*&      Form  get_data
*&---------------------------------------------------------------------*
*       処理対象データの一括取得
*----------------------------------------------------------------------*
FORM GET_DATA.

SELECT BUKRS      "会社コード
LIFNR      "仕入先
HKONT      "勘定コード
WAERS      "通貨コード
GJAHR      "年度
BELNR      "伝票No.
BUDAT      "転記日付
BLART      "伝票タイプ
SHKZG      "貸借フラグ
DMBTR      "国内通貨
WRBTR      "伝票通貨
ZFBDT      "支払基準日
FROM BSIK APPENDING TABLE GT_BSIK
WHERE BUKRS = 'C001'
AND LIFNR =  GW_LFA1-LIFNR
AND BUDAT <= P_BUDAT2
AND HKONT IN S_HKONT.

SELECT BUKRS      "会社コード
LIFNR      "仕入先
HKONT      "勘定コード
WAERS      "通貨コード
GJAHR      "年度
BELNR      "伝票No.
BUDAT      "転記日付
BLART      "伝票タイプ
SHKZG      "貸借フラグ
DMBTR      "国内通貨
WRBTR      "伝票通貨
ZFBDT      "支払基準日
FROM BSAK APPENDING TABLE GT_BSIK
WHERE BUKRS = 'C001'
AND LIFNR =  GW_LFA1-LIFNR
AND BUDAT <= P_BUDAT2
AND HKONT IN S_HKONT.

SELECT BUKRS        "会社コード
YKYEAR       "暦年
BILDOC       "入力番号
FIXFLG       "確定フラグ
DELFLG       "削除フラグ
KEKKBN       "結果区分
LIFNR        "仕入先
LIFN2        "請求先
EKORG        "購買組織
KNITXAMT     "税抜額
KNTAXAMT     "税額
KNETXAMT     "税込額
WAERS        "通貨
ZFBDT2       "照合締日
PAYDOC       "支払予定番号
FROM YK210 INTO TABLE GT_YK210
WHERE BUKRS   = 'C001'   "会社コード
AND FIXFLG  = 'X'      "確定済
AND DELFLG  = SPACE    "削除されてない
AND KEKKBN  = '4'      "照合済
AND EKORG   = '1000'   "購買組織
AND ZFBDT2 >= P_BUDAT  "評価期間以後
AND PAYDOC  = SPACE.   "支払予定I/Fまだ

SELECT BUKRS       "会社コード
LIFNR       "仕入先
PAYDOC      "支払予定番号
ZFBDT       "締日
PAYDAT      "支払予定日
PAYAMT      "支払予定額
WAERS       "通貨
LIFRE       "請求書発行者
GJAHR       "会計年度
BELNR       "伝票番号
FIFLG       "会計連絡フラグ
FROM YK410 INTO TABLE GT_YK410
WHERE BUKRS   = 'C001'   "会社コード
AND DELFLG  = SPACE    "削除されてない(現在未使用)
AND ZFBDT  >= P_BUDAT  "評価期間以後
AND EKORG   = '1000'   "購買組織
AND FIFLG   = SPACE.   "会計連動まだ

ENDFORM.                    " get_data
*&---------------------------------------------------------------------*
*&      Form  check_data
*&---------------------------------------------------------------------*
*       データの振り分け
*----------------------------------------------------------------------*
FORM CHECK_DATA USING VALUE(PW_BSIK) TYPE TYP_BSIK.

DATA: LW_BKPF     TYPE BKPF.
DATA: LT_YK230    TYPE TABLE OF YK230.
DATA: LW_YK230    TYPE YK230.
DATA: LW_YK410    TYPE YK410.

************************************************************************
* 請求書照合伝票(RE)の振分処理
************************************************************************
* ERS伝票タイプの伝票が、本当にERSからのI/Fかチェック
IF PW_BSIK-BLART IN S_BLART1.
*   delete 2010/09/10 S.MIKAMI {
*    SELECT * FROM BKPF INTO LW_BKPF UP TO 1 ROWS
*                   WHERE BUKRS = 'C001'
*                     AND BELNR = PW_BSIK-BELNR
*                     AND GJAHR = PW_BSIK-GJAHR.
*    ENDSELECT.
* } delete 2010/09/10 S.MIKAMI

*   delete 2010/09/10 S.MIKAMI {
**   本物ならとりあえずⅠ(請求額)に算入
*    IF LW_BKPF-AWTYP = 'RMRP'.
* } delete 2010/09/10 S.MIKAMI
APPEND PW_BSIK TO GT_BSIK_1.
* 　　評価期間内に計上された伝票の場合、未請求額の算出を行う
*     ⇔評価期間外なら未請求額はゼロとみなす
IF PW_BSIK-BUDAT >= P_BUDAT.
*   insert 2010/09/10 S.MIKAMI {
SELECT * FROM BKPF INTO LW_BKPF UP TO 1 ROWS
WHERE BUKRS = 'C001'
AND BELNR = PW_BSIK-BELNR
AND GJAHR = PW_BSIK-GJAHR.
ENDSELECT.
* } insert 2010/09/10 S.MIKAMI
REFRESH :LT_YK230.
*       検証中買掛明細に紐付く仕入データを抽出
SELECT * FROM YK230 INTO TABLE LT_YK230
WHERE BELNR = LW_BKPF-AWKEY(10).
*●     仕入データが無い場合、全額をⅣ(未請求-完全)としてブレイク
IF SY-SUBRC <> 0.
APPEND PW_BSIK TO GT_BSIK_4.
EXIT.
*       仕入データが存在する場合、内容を検証し未請求額を集計する
*       1) 照合結果区分:4は対象外
*       2) 照合結果区分:5は未照合部分を算出
*       3) 照合結果区分:4,5以外は全額未請求
ELSE.
*         照合結果区分:4以外が存在しないかの確認
LOOP AT LT_YK230 INTO LW_YK230 WHERE KEKKBN <> '4'.
EXIT.
ENDLOOP.
*         照合結果区分:4以外が存在する場合、未請求額を算出する
*         ⇔全部4なら全請求済なので以降の処理はスキップ
IF SY-SUBRC = 0.
CLEAR: LW_YK230.
*         ※区分:4も含まれるか?
READ TABLE LT_YK230 INTO LW_YK230
WITH KEY KEKKBN = '4'.
IF SY-SUBRC <> 0.
*         ※区分:5が含まれるか?
READ TABLE LT_YK230 INTO LW_YK230
WITH KEY KEKKBN = '5'.
IF SY-SUBRC <> 0.
*●       ※区分:4,5以外だけなら全額をⅣ(未請求-完全)としてブレイク
APPEND PW_BSIK TO GT_BSIK_4.
EXIT.
ENDIF.
ENDIF.
*         　以降はⅤ(未請求-理論値)の集計。区分:4以外を抽出し、
*           区分:5は、未照合部分を、
*           区分:4,5以外は、明細の全額を未請求額として集計する
CLEAR: PW_BSIK-WRBTR.
LOOP AT LT_YK230 INTO LW_YK230 WHERE KEKKBN <> '4'.
IF LW_YK230-KEKKBN = '5'.
PW_BSIK-WRBTR = PW_BSIK-WRBTR
+ ( LW_YK230-KNETXAMT
- LW_YK230-PIDAMT
- LW_YK230-PIDTAX ).
ELSE.
PW_BSIK-WRBTR = PW_BSIK-WRBTR + LW_YK230-KNETXAMT.
ENDIF.
ENDLOOP.
*         　※JPYの場合、国内通貨額のⅤにコピー(それ以外のⅤはブランク)
IF PW_BSIK-WAERS = 'JPY'.
PW_BSIK-DMBTR = PW_BSIK-WRBTR.
ENDIF.
*●     　　ここまで来たものは、Ⅴ(未請求-理論値)としてブレイク
*           ※±で金額が入ってくるので符号が反転しないよう
*             貸借フラグをHに固定する
PW_BSIK-SHKZG = 'H'.
APPEND PW_BSIK TO GT_BSIK_5.
ENDIF.
ENDIF.
ENDIF.
*   delete 2010/09/10 S.MIKAMI {
*    ELSE.
**● 偽物ならⅢ(手入力)としてブレイク
*      APPEND PW_BSIK TO GT_BSIK_3.
*    ENDIF.
* } delete 2010/09/10 S.MIKAMI
************************************************************************
* 支払依頼伝票(KY)の振分処理
************************************************************************
* Ｑ２.支払依頼伝票タイプの伝票が、本当に支払〆処理からのI/Fかチェック
ELSEIF PW_BSIK-BLART IN S_BLART2.
CLEAR: LW_YK410.
SELECT * FROM YK410 INTO LW_YK410 UP TO 1 ROWS
WHERE BUKRS = 'C001'
AND GJAHR = PW_BSIK-GJAHR
AND BELNR = PW_BSIK-BELNR.
ENDSELECT.
*● 本物ならⅡ(請求済-完全)としてブレイク
IF SY-SUBRC = 0.
APPEND PW_BSIK TO GT_BSIK_2.
*● 偽物ならⅢ(手入力)としてブレイク
ELSE.
APPEND PW_BSIK TO GT_BSIK_3.
ENDIF.
************************************************************************
* その他伝票(<>RE,<>KY)の振分処理
************************************************************************
* ERS、支払依頼、何れでもないもの
* ●全てⅢ(手入力)としてブレイク
ELSE.
APPEND PW_BSIK TO GT_BSIK_3.
ENDIF.

ENDFORM.                    " check_data
*&---------------------------------------------------------------------*
*&      Form  CALC_DATA
*&---------------------------------------------------------------------*
*       振り分けた内部テーブルの集計
*----------------------------------------------------------------------*
FORM CALC_DATA USING VALUE(PW_BSIK) TYPE TYP_BSIK.

DATA: LW_BSIK    TYPE TYP_BSIK.
DATA: LW_OUT     TYPE TYP_OUT.
DATA: LW_ZF2030  TYPE ZF2030.

* 共通項目設定
LW_ZF2030-YYYYMM = GV_YYYYMM.
LW_ZF2030-CRDAT  = GV_CRDAT.
LW_ZF2030-CRTIM  = GV_CRTIM.

* 現在キー共通設定
LW_ZF2030-BUKRS  = PW_BSIK-BUKRS.
LW_ZF2030-LIFNR  = PW_BSIK-LIFNR.
LW_ZF2030-HKONT  = PW_BSIK-HKONT.
LW_ZF2030-WAERS  = PW_BSIK-WAERS.

CLEAR: LW_BSIK.
LOOP AT GT_BSIK_1 INTO LW_BSIK.
PERFORM TASU_HIKU USING LW_BSIK
CHANGING LW_ZF2030-DMBTR1
LW_ZF2030-WRBTR1.
ENDLOOP.

CLEAR: LW_BSIK.
LOOP AT GT_BSIK_2 INTO LW_BSIK.
PERFORM TASU_HIKU USING LW_BSIK
CHANGING LW_ZF2030-DMBTR2
LW_ZF2030-WRBTR2.
ENDLOOP.

CLEAR: LW_BSIK.
LOOP AT GT_BSIK_3 INTO LW_BSIK.
PERFORM TASU_HIKU USING LW_BSIK
CHANGING LW_ZF2030-DMBTR3
LW_ZF2030-WRBTR3.

CLEAR: LW_OUT.
MOVE-CORRESPONDING LW_BSIK TO LW_OUT.
IF LW_BSIK-SHKZG = 'H'.
LW_OUT-DMBTR = LW_OUT-DMBTR * -1.
LW_OUT-WRBTR = LW_OUT-WRBTR * -1.
ENDIF.
COLLECT LW_OUT INTO GT_OUT.
ENDLOOP.

CLEAR: LW_BSIK.
LOOP AT GT_BSIK_4 INTO LW_BSIK.
PERFORM TASU_HIKU USING LW_BSIK
CHANGING LW_ZF2030-DMBTR4
LW_ZF2030-WRBTR4.
ENDLOOP.

CLEAR: LW_BSIK.
LOOP AT GT_BSIK_5 INTO LW_BSIK.
PERFORM TASU_HIKU USING LW_BSIK
CHANGING LW_ZF2030-DMBTR5
LW_ZF2030-WRBTR5.
ENDLOOP.

* 検収データからⅦ(請求済-理論値)を集計
PERFORM CALC_YK210 CHANGING LW_ZF2030.


LW_ZF2030-DMBTR6 = LW_ZF2030-DMBTR1 +
LW_ZF2030-DMBTR2 +
LW_ZF2030-DMBTR3 -
LW_ZF2030-DMBTR4 -
LW_ZF2030-DMBTR5 +
LW_ZF2030-DMBTR7.

LW_ZF2030-WRBTR6 = LW_ZF2030-WRBTR1 +
LW_ZF2030-WRBTR2 +
LW_ZF2030-WRBTR3 -
LW_ZF2030-WRBTR4 -
LW_ZF2030-WRBTR5 +
LW_ZF2030-WRBTR7.

IF NOT LW_ZF2030-WRBTR5 IS INITIAL
OR NOT LW_ZF2030-WRBTR7 IS INITIAL.
LW_ZF2030-CKFLG = 'X'.
ENDIF.

APPEND LW_ZF2030 TO GT_ZF2030.

REFRESH: GT_BSIK_1,
GT_BSIK_2,
GT_BSIK_3,
GT_BSIK_4,
GT_BSIK_5.

ENDFORM.                    " CALC_DATA

*&---------------------------------------------------------------------*
*&      Form  tasu_hiku
*&---------------------------------------------------------------------*
*       貸借で足す引く
*----------------------------------------------------------------------*
FORM TASU_HIKU USING VALUE(PW_BSIK)  TYPE TYP_BSIK
CHANGING VALUE(PV_DMBTR) TYPE ZF2030-DMBTR1
VALUE(PV_WRBTR) TYPE ZF2030-WRBTR1.

DATA: LV_DMBTR TYPE BSEG-DMBTR.
DATA: LV_WRBTR TYPE BSEG-WRBTR.

IF PW_BSIK-SHKZG = 'H'.
LV_DMBTR = PV_DMBTR - PW_BSIK-DMBTR.
LV_WRBTR = PV_WRBTR - PW_BSIK-WRBTR.
ELSE.
LV_DMBTR = PV_DMBTR + PW_BSIK-DMBTR.
LV_WRBTR = PV_WRBTR + PW_BSIK-WRBTR.
ENDIF.

PV_DMBTR = LV_DMBTR.
PV_WRBTR = LV_WRBTR.

ENDFORM.                    " tasu_hiku
*&---------------------------------------------------------------------*
*&      Form  ins_table
*&---------------------------------------------------------------------*
*       テーブル入力
*----------------------------------------------------------------------*
FORM INS_TABLE.
DATA: LW_ZF2030 TYPE ZF2030.

DELETE FROM ZF2030 WHERE BUKRS  = 'C001'
AND YYYYMM = GV_YYYYMM
AND LIFNR  IN S_LIFNR.

INSERT ZF2030 FROM TABLE GT_ZF2030.

IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE E400 WITH '更新に失敗しました'.
ELSE.
COMMIT WORK.
MESSAGE S400 WITH '正常に更新されました'.
ENDIF.

ENDFORM.                    " ins_table

*&---------------------------------------------------------------------*
*&      Form  out_file
*&---------------------------------------------------------------------*
*       ファイルの出力
*----------------------------------------------------------------------*
* ※下記のような機械的に除外できるものは出力しない
* 1) 伝票通貨額で貸借合計ゼロの伝票は出力対象外
* 2) チェック済(パラメータで指定されていない期間)の伝票は出力対象外
* 3) 反対仕訳済の伝票は出力対象外
*----------------------------------------------------------------------*
FORM OUT_FILE.

DATA: LW_OUT       TYPE TYP_OUT.
DATA: LW_FILE      TYPE TYP_FILE.

DATA: LV_LINE(300) TYPE C.
DATA: LV_WRBTR     TYPE BSIK-WRBTR.
DATA: LV_GJAHR     TYPE BKPF-GJAHR.
DATA: LV_BELNR     TYPE BKPF-BELNR.
DATA: LW_BKPF      TYPE BKPF.
DATA: LW_SKAT      TYPE SKAT.
DATA: LT_SKAT      TYPE TABLE OF SKAT.
DATA: LW_BSEG      TYPE BSEG.
DATA: LT_BSEG      TYPE TABLE OF BSEG.
DATA: LW_LFA1      TYPE TYP_LFA1.
DATA: LW_OUT_TMP   TYPE TYP_OUT.

* ●1) 伝票通貨額で貸借合計ゼロの伝票は出力対象外
DELETE GT_OUT WHERE WRBTR = LV_WRBTR.

CHECK: NOT GT_OUT[] IS INITIAL.
SELECT * FROM SKAT INTO TABLE LT_SKAT
WHERE SPRAS = 'JA'
AND KTOPL = 'C001'.

OPEN DATASET P_FILE FOR OUTPUT IN TEXT MODE.
IF SY-SUBRC <> 0.
MESSAGE E400 WITH 'ファイルオープンエラー'.
ENDIF.

* ※ヘッダレコードの作成
CLEAR: LV_LINE.
CONCATENATE '会社'     '年度'     '伝票番号' '明細番号' '転記日付'
'伝票ﾀｲﾌﾟ' '通貨'     '勘定'     '勘定名称' '仕入先'
'伝票通貨' '国内通貨' '明細ﾃｷｽﾄ' '仕入先名'
INTO LV_LINE SEPARATED BY CNS_TAB.
TRANSFER LV_LINE TO P_FILE.

IF SY-SUBRC <> 0.
MESSAGE E400(Z1) WITH 'ファイル書込エラー(ヘッダ)'.
ENDIF.

SORT GT_OUT BY GJAHR BELNR.
* ●2) チェック済(パラメータで指定されていない期間)の伝票は出力対象外
LOOP AT GT_OUT INTO LW_OUT WHERE BUDAT > P_CHECK.
* 重複除外
IF  LW_OUT-GJAHR = LV_GJAHR
AND LW_OUT-BELNR = LV_BELNR.
CONTINUE.
ENDIF.

* ●3) 反対仕訳済の伝票は出力対象外
CLEAR: LW_BKPF, LW_OUT_TMP.
SELECT * FROM BKPF INTO LW_BKPF UP TO 1 ROWS
WHERE BUKRS = 'C001'
AND BELNR = LW_OUT-BELNR
AND GJAHR = LW_OUT-GJAHR
AND STBLG <> SPACE.
ENDSELECT.

IF SY-SUBRC = 0.  "反対仕訳済で...
READ TABLE GT_OUT INTO LW_OUT_TMP WITH KEY GJAHR = LW_BKPF-STJAH
BELNR = LW_BKPF-STBLG.
IF SY-SUBRC = 0. "反対仕訳相手も出力に含まれる場合は対象外
CONTINUE.
ENDIF.
ENDIF.

*   Ⅲ伝票の全明細を取得
REFRESH: LT_BSEG.
SELECT * FROM BSEG INTO TABLE LT_BSEG
WHERE BUKRS = 'C001'
AND BELNR = LW_OUT-BELNR
AND GJAHR = LW_OUT-GJAHR.

SORT LT_BSEG BY GJAHR BELNR BUZEI.

LOOP AT LT_BSEG INTO LW_BSEG.
*   ※伝票内共通項目の設定
LW_FILE-BUKRS = LW_OUT-BUKRS.    "会社コード
LW_FILE-GJAHR = LW_OUT-GJAHR.    "年度
LW_FILE-BELNR = LW_OUT-BELNR.    "伝票No.
LW_FILE-BLART = LW_OUT-BLART.    "伝票タイプ
LW_FILE-WAERS = LW_OUT-WAERS.    "通貨コード
WRITE LW_OUT-BUDAT TO LW_FILE-BUDAT USING EDIT MASK '____/__/__'.
*   ※明細固有項目(編集なし)の設定
LW_FILE-BUZEI = LW_BSEG-BUZEI.   "明細No.
LW_FILE-HKONT = LW_BSEG-HKONT.   "勘定コード
LW_FILE-LIFNR = LW_BSEG-LIFNR.   "仕入先
LW_FILE-SGTXT = LW_BSEG-SGTXT.   "明細テキスト
*   ※明細固有項目(編集あり)の設定
*     勘定テキストの取得
CLEAR: LW_SKAT.
READ TABLE LT_SKAT INTO LW_SKAT WITH KEY SAKNR = LW_BSEG-HKONT.
IF SY-SUBRC = 0.
LW_FILE-TXT20 = LW_SKAT-TXT20.   "勘定名称(短)
ENDIF.
*     仕入先名称の取得
IF NOT LW_BSEG-LIFNR IS INITIAL.
CLEAR: LW_LFA1.
READ TABLE GT_LFA1 INTO LW_LFA1 WITH KEY LIFNR = LW_BSEG-LIFNR.
IF SY-SUBRC = 0.
LW_FILE-NAME1 = LW_LFA1-NAME1.
ENDIF.
ENDIF.

*     通貨変換、マイナス符号調整を行い、金額項目を設定
IF LW_BSEG-SHKZG = 'H'.
LW_BSEG-WRBTR = LW_BSEG-WRBTR * -1.
LW_BSEG-DMBTR = LW_BSEG-DMBTR * -1.
ENDIF.

WRITE LW_BSEG-WRBTR TO LW_FILE-WRBTR_C CURRENCY LW_OUT-WAERS
LEFT-JUSTIFIED NO-GROUPING.

WRITE LW_BSEG-DMBTR TO LW_FILE-DMBTR_C CURRENCY 'JPY'
LEFT-JUSTIFIED NO-GROUPING.
PERFORM PUT_SIGN_IN_FRONT CHANGING LW_FILE-WRBTR_C.
PERFORM PUT_SIGN_IN_FRONT CHANGING LW_FILE-DMBTR_C.

*   ※タブ区切編集
CLEAR: LV_LINE.
CONCATENATE LW_FILE-BUKRS      "会社コード
LW_FILE-GJAHR      "年度
LW_FILE-BELNR      "伝票No.
LW_FILE-BUZEI      "明細No.
LW_FILE-BUDAT      "転記日付
LW_FILE-BLART      "伝票タイプ
LW_FILE-WAERS      "通貨コード
LW_FILE-HKONT      "勘定コード
LW_FILE-TXT20      "勘定名称
LW_FILE-LIFNR      "仕入先
LW_FILE-WRBTR_C    "伝票通貨
LW_FILE-DMBTR_C    "国内通貨
LW_FILE-SGTXT      "明細テキスト
LW_FILE-NAME1      "仕入先名称
INTO LV_LINE SEPARATED BY CNS_TAB.

TRANSFER LV_LINE TO P_FILE.
IF SY-SUBRC <> 0.
MESSAGE E400(Z1) WITH 'ファイル書込エラー(データ)'.
ENDIF.
CLEAR: LW_FILE, LV_LINE.
ENDLOOP.
* 重複除外のための控
LV_GJAHR = LW_OUT-GJAHR.
LV_BELNR = LW_OUT-BELNR.
ENDLOOP.

CLOSE DATASET P_FILE.

ENDFORM.                    " out_file
*&---------------------------------------------------------------------*
*&      Form  calc_yk210
*&---------------------------------------------------------------------*
*       検収データ(YK210)、および入金予定データ(YK410)の照合済未処理分
*       をⅦ(請求済-理論値)として集計
*       【集計条件】
*       　1) 照合締日が評価日付以後
*         2) 支払予定番号がブランク
*         3) 照合結果区分:4
*         4) 確定フラグ:X
*----------------------------------------------------------------------*
FORM CALC_YK210 CHANGING PW_ZF2030 TYPE ZF2030.

DATA: LW_YK210 TYPE TYP_YK210.
DATA: LV_WRBTR TYPE BSIK-WRBTR.
DATA: LW_YK410 TYPE TYP_YK410.

*   insert 2010/03/29 S.MIKAMI {
DATA: LW_LFB1  TYPE LFB1.

* Ⅶは科目の特定が不可能。集計結果はマスタ統制勘定に寄せる
SELECT * INTO LW_LFB1 FROM LFB1 UP TO 1 ROWS
WHERE LIFNR = PW_ZF2030-LIFNR
AND BUKRS = PW_ZF2030-BUKRS.
ENDSELECT.
CHECK: LW_LFB1-AKONT = PW_ZF2030-HKONT.
* } insert 2010/03/29 S.MIKAMI

* 照合済・支払予定データ未作成
LOOP AT GT_YK210 INTO LW_YK210 WHERE LIFNR = PW_ZF2030-LIFNR
AND WAERS = PW_ZF2030-WAERS.
LV_WRBTR = LV_WRBTR + LW_YK210-KNETXAMT.
ENDLOOP.

* 支払予定データ作成済・会計未連動
LOOP AT GT_YK410 INTO LW_YK410 WHERE LIFRE = PW_ZF2030-LIFNR
AND WAERS = PW_ZF2030-WAERS.
LV_WRBTR = LV_WRBTR + LW_YK410-PAYAMT.
ENDLOOP.

PW_ZF2030-WRBTR7 = LV_WRBTR.

IF PW_ZF2030-WAERS = 'JPY'.
PW_ZF2030-DMBTR7 = PW_ZF2030-WRBTR7.
ENDIF.

ENDFORM.                    " calc_yk210

*&---------------------------------------------------------------------*
*&      Form  PUT_SIGN_IN_FRONT
*&---------------------------------------------------------------------*
*       マイナス符号頭付
*----------------------------------------------------------------------*
*      -->P_VALUE    対象文字列
*----------------------------------------------------------------------*
FORM PUT_SIGN_IN_FRONT CHANGING PV_VALUE.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE  = PV_VALUE
EXCEPTIONS
OTHERS = 1.
IF SY-SUBRC <> 0.
MESSAGE E400 WITH 'マイナス符号置換エラー'.
ENDIF.
ENDFORM.                    "PUT_SIGN_IN_FRONT
