************************************************************************
* [プログラムID]：ZS012300
* [プログラム名]：主要顧客管理テーブルメンテナンス
*
* [処理概要]
*   １．ローカルより指定されたファイルを取り込み、主要顧客管理テーブル
*       (ZSB003)を更新する
*   ２．入力されたパラメータをもとに一覧表示を行う
*   ３．一覧表示されたテーブル内容をファイルに出力する
*   ４．登録されている「受注先」、「営業グループ」の修正を行う
*
* [改定履歴]
*　YYYY/MM/DD   Ver.   Programar         Description
*  2004/03/23   1.00   DMC Y.Tsukahara   新規開
*  2004/10/08   2.00   DMC               受注先重複ﾁｪｯｸ時のｷｰに営業Gを入れる
*  2012/08/14          ISID              ES-UP
*  2014/08/29          ISID18            コードページを"UTF-8"に修正
*  2015/02/04          ISID11            コードページ処理の再修正
************************************************************************

REPORT ZS012300
MESSAGE-ID Z1
LINE-SIZE  155
NO STANDARD PAGE HEADING.

************************************************************************
* TABLES
************************************************************************
TABLES: ZSB003,    "主要顧客管理テーブル
KNA1,      "得意先マスタ:一般データ
TVBUR,     "組織単位:営業所
TVKGR,     "組織単位:営業グループ
TVGRT.     "組織単位:販売グループ:テキスト

************************************************************************
* TYPES
************************************************************************
* 入力ファイル格納用
TYPES: BEGIN OF INF_TYP,
GJAHR(04)  TYPE C,    "会計年度
VKBUR(04)  TYPE C,    "営業所
PKUNAG(10) TYPE C,    "受注先
NAME1(35)  TYPE C,    "受注先名
ZSPRIO(02) TYPE C,    "主要順位
VKGRP(03)  TYPE C,    "営業グループ
BEZEI(20)  TYPE C,    "担当者
END OF INF_TYP.

* 一覧、出力ファイルデータ格納用
TYPES: BEGIN OF OUT_TYP,
GJAHR  TYPE ZSB003-GJAHR,    "会計年度
VKBUR  TYPE ZSB003-VKBUR,    "営業所
PKUNAG TYPE ZSB003-PKUNAG,   "受注先
NAME1  TYPE KNA1-NAME1,      "受注先名
ZSPRIO TYPE ZSB003-ZSPRIO,   "主要順位
VKGRP  TYPE ZSB003-VKGRP,    "営業グループ
BEZEI  TYPE TVGRT-BEZEI,     "担当者
END OF OUT_TYP.

* ダウンロードデータ格納用
TYPES: BEGIN OF DLF_TYP,
DATA(300) TYPE C,
END OF DLF_TYP.

* エラーデータ格納用
TYPES: BEGIN OF ERR_TYP,
GJAHR(04)   TYPE C,    "会計年度
VKBUR(04)   TYPE C,    "営業所
ZSPRIO(02)  TYPE C,    "主要順位
PKUNAG(10)  TYPE C,    "受注先
VKGRP(03)   TYPE C,    "営業グループ
MSG(46)     TYPE C,    "メッセージ
END OF ERR_TYP.

************************************************************************
* CONSTANTS
************************************************************************
* リテラル
CONSTANTS: CNS_C_S(01) TYPE C VALUE 'S',  "リテラル文字列S
CNS_C_X(01) TYPE C VALUE 'X',  "リテラル文字列X
CNS_I_01    TYPE I VALUE 1,    "リテラル数字1
CNS_I_02    TYPE I VALUE 2,    "リテラル数字2
CNS_I_03    TYPE I VALUE 3,    "リテラル数字3
CNS_I_04    TYPE I VALUE 4,    "リテラル数字4
CNS_I_05    TYPE I VALUE 5,    "リテラル数字5
CNS_I_06    TYPE I VALUE 6,    "リテラル数字6
CNS_I_07    TYPE I VALUE 7,    "リテラル数字7
CNS_I_08    TYPE I VALUE 8,    "リテラル数字8
CNS_I_09    TYPE I VALUE 9,    "リテラル数字9
CNS_I_10    TYPE I VALUE 10,   "リテラル数字10
* Mod ES-UP 2012/08/14 -->
*           CNS_TAB     TYPE X VALUE '09', "タブ
****START UPD 2014/08/29 ISID18****
*           CNS_SJIS TYPE STRING VALUE `shift_jis`,
**** START DEL 2015/02/04 ISID11 ****
*           CNS_UTF TYPE STRING VALUE `UTF-8`,
**** END DEL 2015/02/04 ISID11 ****
****END UPD 2014/08/29 ISID18****
* Mod ES-UP 2012/08/14 <--
CNS_DAT(03) TYPE C VALUE 'DAT',"ファイル形式
CNS_PATH(7) TYPE C VALUE 'C:\.txt',    "パス
CNS_KAKU(7) TYPE C VALUE 'C:\.xls',    "拡張子
CNS_NUM(10) TYPE C VALUE '1234567890', "数値
CNS_Z10(10) TYPE C VALUE 'ZZZZZZZZZZ'. "Z
* メッセージ
CONSTANTS: CNS_M1(08)      TYPE C VALUE '処理中断',
CNS_M2(36)      TYPE C VALUE
'E:ファイルのダウンロードエラー Code:',
CNS_M3(20)      TYPE C VALUE '削除できませんでした',
CNS_M4(34)      TYPE C VALUE
'入力ファイルを読み込めませんでした',
CNS_M5(22)      TYPE C VALUE '受注先が重複しています',
CNS_M6(18)      TYPE C VALUE '会計年度が不正です',
CNS_M7(16)      TYPE C VALUE '営業所が不正です',
CNS_M8(16)      TYPE C VALUE '受注先が不正です',
CNS_M9(18)      TYPE C VALUE '主要順位が不正です',
CNS_M10(22)     TYPE C VALUE '営業グループが不正です',
CNS_M11(38)     TYPE C VALUE
'キーが重複しているレコードが存在します',
CNS_M12(32)     TYPE C VALUE
'件のデータをダウンロードしました',
CNS_T1(24)      TYPE C VALUE
'主要顧客管理テーブル一覧',
CNS_T2(48)      TYPE C VALUE
'主要顧客管理テーブル更新用入力ファイルエラー一覧'.
************************************************************************
* DATA
************************************************************************
DATA: IFILENM TYPE RLGRAP-FILENAME.       "アップロードファイル名
** 汎用モジュール WS_FILENAME_GET
DATA: W_MASK(22)        TYPE C VALUE
',*.txt,*.txt,*.*,*.*.',          "ファイルの種類
W_MASK_O(22)      TYPE C VALUE
',*.xls,*.xls,*.*,*.*.',          "出力ファイルの種類
G_FILENM_GET      LIKE RLGRAP-FILENAME,  "ファイル名
W_DEF_FILENM(255) TYPE C.                "PCﾌｧｲﾙ名

** 作業領域
DATA: WA_OUT      TYPE OUT_TYP,  "一覧・出力ファイル用
WA_UPF      TYPE INF_TYP,  "アップロードファイル用
WA_DLF      TYPE DLF_TYP,  "ダウンロードファイル用
WA_ERR      TYPE ERR_TYP.  "エラーデータ用

** フラグ
DATA: ERR_FLG TYPE C.    "エラーフラグ

** 内部テーブル
DATA: IT_ZSB003 TYPE STANDARD TABLE OF ZSB003,   "ZSB003格納用
IT_OUT    LIKE STANDARD TABLE OF WA_OUT,   "一覧・出力ファイル用
IT_UPF    LIKE STANDARD TABLE OF WA_UPF,   "アップロードファイル用
IT_DLF    LIKE STANDARD TABLE OF WA_DLF,   "ダウンロードファイル用
IT_ERR    LIKE STANDARD TABLE OF WA_ERR.   "エラーデータ用

************************************************************************
* 選択画面
************************************************************************
* 一件ずつ更新
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS R_UPDAT1 RADIOBUTTON GROUP RD_1.
SELECTION-SCREEN COMMENT 4(12) TEXT-001 FOR FIELD R_UPDAT1.
SELECTION-SCREEN END OF LINE.
** 会計年度
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN: COMMENT 3(12) TEXT-005 FOR FIELD P_GJAHR,
POSITION 20.
PARAMETERS P_GJAHR LIKE ZSB003-GJAHR.
SELECTION-SCREEN END OF LINE.
** 営業所
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN: COMMENT 3(10) TEXT-006 FOR FIELD P_VKBUR,
POSITION 20.
PARAMETERS P_VKBUR TYPE TVBUR-VKBUR.
SELECTION-SCREEN END OF LINE.
** 主要順位
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN: COMMENT 3(14) TEXT-007 FOR FIELD P_ZSPRIO,
POSITION 20.
PARAMETERS P_ZSPRIO TYPE ZSB003-ZSPRIO.
SELECTION-SCREEN END OF LINE.
** 受注先
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN: COMMENT 3(14) TEXT-008 FOR FIELD P_PKUNAG,
POSITION 20.
PARAMETERS P_PKUNAG TYPE KNA1-KUNNR.
SELECTION-SCREEN END OF LINE.
** 営業グループ
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN: COMMENT 3(14) TEXT-009 FOR FIELD P_VKGRP,
POSITION 20.
PARAMETERS P_VKGRP TYPE TVKGR-VKGRP.
SELECTION-SCREEN END OF LINE.
** 削除フラグ
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN: COMMENT 3(12) TEXT-010 FOR FIELD C_SAKUJO,
POSITION 20.
PARAMETERS C_SAKUJO AS CHECKBOX.
SELECTION-SCREEN END OF LINE.

* ファイルより更新(一括更新)
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS R_UPDAT2 RADIOBUTTON GROUP RD_1.
SELECTION-SCREEN COMMENT 4(30) TEXT-002 FOR FIELD R_UPDAT2.
SELECTION-SCREEN END OF LINE.
** 入力ファイル
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN: COMMENT 3(12) TEXT-012 FOR FIELD P_IFILE,
POSITION 20.
PARAMETERS P_IFILE TYPE RLGRAP-FILENAME DEFAULT CNS_PATH.
SELECTION-SCREEN END OF LINE.

* 一覧表示
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS R_ICHIRN RADIOBUTTON GROUP RD_1.
SELECTION-SCREEN COMMENT 4(8) TEXT-003 FOR FIELD R_ICHIRN.
SELECTION-SCREEN END OF LINE.
** 会計年度
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN: COMMENT 3(12) TEXT-005 FOR FIELD P_GJAHR2,
POSITION 20.
PARAMETERS P_GJAHR2 TYPE ZSB003-GJAHR.
SELECTION-SCREEN END OF LINE.
** 営業所
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN: COMMENT 3(12) TEXT-006 FOR FIELD S_VKBUR,
POSITION 17.
SELECT-OPTIONS S_VKBUR FOR TVBUR-VKBUR.
SELECTION-SCREEN END OF LINE.

* ファイル出力
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS R_OFILE RADIOBUTTON GROUP RD_1.
SELECTION-SCREEN COMMENT 4(16) TEXT-004 FOR FIELD R_OFILE.
SELECTION-SCREEN END OF LINE.
** 出力ファイル
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN: COMMENT 3(14) TEXT-013 FOR FIELD P_OFILE,
POSITION 20.
PARAMETERS P_OFILE TYPE RLGRAP-FILENAME DEFAULT CNS_KAKU.
SELECTION-SCREEN END OF LINE.

************************************************************************
* AT SELECTION-SCREEN
************************************************************************
AT SELECTION-SCREEN.
* 入力チェック
**「一件ずつ更新」選択時
IF ( R_UPDAT1 = CNS_C_X ).
IF ( P_GJAHR IS INITIAL ).     "会計年度
MESSAGE S006 WITH TEXT-005.
STOP.
ENDIF.
IF ( P_VKBUR IS INITIAL ).     "営業所
MESSAGE S006 WITH TEXT-006.
STOP.
ENDIF.
IF ( P_ZSPRIO IS INITIAL ).    "主要順位
MESSAGE S006 WITH TEXT-007.
STOP.
ENDIF.
IF ( P_PKUNAG IS INITIAL ).    "受注先
MESSAGE S006 WITH TEXT-008.
STOP.
ENDIF.
IF ( P_VKGRP IS INITIAL ).     "営業グループ
MESSAGE S006 WITH TEXT-009.
STOP.
ENDIF.
**「ファイルより更新」選択時
ELSEIF ( R_UPDAT2 = CNS_C_X ).
IF ( P_IFILE IS INITIAL OR
P_IFILE  = CNS_PATH ).     "入力ファイル
MESSAGE S006 WITH TEXT-012.
STOP.
ENDIF.
* 入力ファイル名を格納
IFILENM = P_IFILE.
**「ファイル出力」選択時
ELSEIF ( R_OFILE = CNS_C_X ).
IF ( P_OFILE IS INITIAL OR
P_OFILE  = CNS_PATH ).     "出力ファイル
MESSAGE S006 WITH TEXT-013.
STOP.
ENDIF.
ENDIF.

************************************************************************
* AT SELECTION-SCREEN ON VALUE-REQUEST FOR 入力ファイルヘルプ
************************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_IFILE.   "入力ファイルヘルプ
* Mod ES-UP 2012/08/14 -->
*  CALL FUNCTION 'WS_FILENAME_GET'
*       EXPORTING
*            DEF_FILENAME    = W_DEF_FILENM
*            MASK            = W_MASK
*            TITLE           = TEXT-012
*       IMPORTING
*            FILENAME        = G_FILENM_GET
*       EXCEPTIONS
*            SELECTION_ERROR = CNS_I_04
*            OTHERS          = CNS_I_09.
*
*  IF ( SY-SUBRC IS INITIAL ).
*    P_IFILE = G_FILENM_GET.
*  ELSEIF ( SY-SUBRC = CNS_I_04 ).
*    MESSAGE S400 WITH CNS_M1.
*    STOP.
*  ELSE.
*    STOP.
*  ENDIF.
DATA: L_FILE_TABLE TYPE FILETABLE,
L_FILE TYPE REF TO FILE_TABLE,
L_RC TYPE I,
L_WINDOW_TITLE TYPE STRING.
L_WINDOW_TITLE = TEXT-012.
CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG(
EXPORTING
WINDOW_TITLE            = L_WINDOW_TITLE
*      DEFAULT_EXTENSION       = DEFAULT_EXTENSION
*      DEFAULT_FILENAME        = DEFAULT_FILENAME
*      FILE_FILTER             = FILE_FILTER
*      WITH_ENCODING           = WITH_ENCODING
*      INITIAL_DIRECTORY       = INITIAL_DIRECTORY
*      MULTISELECTION          = MULTISELECTION
CHANGING
FILE_TABLE              = L_FILE_TABLE
RC                      = L_RC
*      USER_ACTION             = USER_ACTION
*      FILE_ENCODING           = FILE_ENCODING
EXCEPTIONS
*      FILE_OPEN_DIALOG_FAILED = 1
*      CNTL_ERROR              = 2
*      ERROR_NO_GUI            = 3
*      NOT_SUPPORTED_BY_GUI    = 4
OTHERS                  = 0 ).
READ TABLE L_FILE_TABLE REFERENCE INTO L_FILE INDEX 1.
IF SY-SUBRC = 0.
P_IFILE = L_FILE->FILENAME.
ENDIF.
* Mod ES-UP 2012/08/14 <--
************************************************************************
* AT SELECTION-SCREEN ON VALUE-REQUEST FOR 出力ファイルヘルプ
************************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_OFILE.   "出力ファイルヘルプ
* Mod ES-UP 2012/08/14 -->
*  CALL FUNCTION 'WS_FILENAME_GET'
*       EXPORTING
*            DEF_FILENAME    = W_DEF_FILENM
*            MASK            = W_MASK_O
*            TITLE           = TEXT-013
*            MODE            = CNS_C_S
*       IMPORTING
*            FILENAME        = G_FILENM_GET
*       EXCEPTIONS
*            SELECTION_ERROR = CNS_I_04
*            OTHERS          = CNS_I_09.
*
*  IF ( SY-SUBRC IS INITIAL ).
*    P_OFILE = G_FILENM_GET.
*  ELSEIF ( SY-SUBRC = CNS_I_04 ).
*    MESSAGE S400 WITH CNS_M1.
*    STOP.
*  ELSE.
*    STOP.
*  ENDIF.
DATA: L_FILENAME TYPE STRING,
L_PATH     TYPE STRING,
L_FULLPATH  TYPE STRING,
L_USER_ACTION TYPE I,
L_WINDOW_TITLE TYPE STRING.
L_WINDOW_TITLE = TEXT-013.
CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG(
EXPORTING
WINDOW_TITLE         = L_WINDOW_TITLE
*      DEFAULT_EXTENSION    = DEFAULT_EXTENSION
*      DEFAULT_FILE_NAME    = DEFAULT_FILE_NAME
*      WITH_ENCODING        = WITH_ENCODING
*      FILE_FILTER          = FILE_FILTER
*      INITIAL_DIRECTORY    = INITIAL_DIRECTORY
*      PROMPT_ON_OVERWRITE  = 'X'
CHANGING
FILENAME             = L_FILENAME
PATH                 = L_PATH
FULLPATH             = L_FULLPATH
USER_ACTION          = L_USER_ACTION
*      FILE_ENCODING        = FILE_ENCODING
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4 ).
IF  SY-SUBRC = 0
AND L_USER_ACTION = CL_GUI_FRONTEND_SERVICES=>ACTION_OK.
P_OFILE = L_FULLPATH.
ENDIF.
* Mod ES-UP 2012/08/14 <--
************************************************************************
* START-OF-SELECTION
************************************************************************
START-OF-SELECTION.

* 処理判定
**「一件ずつ更新」選択時
IF ( R_UPDAT1 = CNS_C_X ).
*** 入力データチェック
PERFORM IN_DATA_CHK.
*** 主要顧客管理テーブル修正・削除判定
IF ( C_SAKUJO IS INITIAL ).
**** 主要顧客管理テーブル追加・修正
PERFORM ZSB003_UPDT.
ELSE.
**** 主要顧客管理テーブル削除
PERFORM ZSB003_DLDT.
ENDIF.
**「ファイルより更新」選択時
ELSEIF ( R_UPDAT2 = CNS_C_X ).
*** 入力ファイル読込
PERFORM FILE_READ.
*** 入力ファイルデータチェック
PERFORM IN_FILE_CHK.
*** 主要顧客管理テーブル一括更新処理
IF ( ERR_FLG IS INITIAL ).
**** エラーが無ければ更新処理を行う
PERFORM ZSB003_UPDT_M.
ELSE.
**** エラーが発生していればエラーリストを出力する
PERFORM DISP_ERR_LIST.
ENDIF.
** その他
ELSE.
*** 主要顧客管理テーブルデータ抽出
PERFORM GET_ZSB003.
*** 名称取得
PERFORM GET_NAME.
**** 「一覧表示」選択時
IF ( R_ICHIRN = CNS_C_X ).
***** 一覧表示処理
PERFORM DISP_LIST.
**** 「ファイル出力」選択時
ELSE.
***** ファイル出力処理
PERFORM FILE_DOWNLOAD.
ENDIF.
ENDIF.

*&---------------------------------------------------------------------*
*&      Form  GET_ZSB003
*&---------------------------------------------------------------------*
* 主要顧客管理テーブルデータ抽出
*----------------------------------------------------------------------*
FORM GET_ZSB003.
* 主要顧客管理テーブルデータ抽出
IF NOT ( P_GJAHR2 IS INITIAL ).
SELECT * FROM ZSB003 INTO TABLE IT_ZSB003
WHERE GJAHR =  P_GJAHR2
AND   VKBUR IN S_VKBUR.
ELSE.
SELECT * FROM ZSB003 INTO TABLE IT_ZSB003
WHERE VKBUR IN S_VKBUR.
ENDIF.
IF ( SY-SUBRC IS INITIAL ).
* 内部テーブルのソート 会計年度→営業所→主要順位→受注先
SORT IT_ZSB003 BY GJAHR VKBUR ZSPRIO PKUNAG.
ELSE.
* エラーメッセージ
MESSAGE S600 WITH TEXT-014.
* 処理終了
STOP.
ENDIF.
ENDFORM.                    " GET_ZSB003
*&---------------------------------------------------------------------*
*&      Form  GET_NAME
*&---------------------------------------------------------------------*
* 受注先名、担当者名取得
*----------------------------------------------------------------------*
FORM GET_NAME.
* ローカル変数宣言
DATA: L_NAME1 LIKE KNA1-NAME1,
L_BEZEI LIKE TVGRT-BEZEI.
* 受注先名取得処理
LOOP AT IT_ZSB003 INTO ZSB003.
* 初期化
CLEAR: WA_OUT.
* ZSB003の内容をコピー
MOVE-CORRESPONDING ZSB003 TO WA_OUT.
* 受注先名検索 *
SELECT SINGLE NAME1 FROM KNA1 INTO L_NAME1
WHERE KUNNR = ZSB003-PKUNAG.
* 取得判定
IF ( SY-SUBRC IS INITIAL ).
* 受注先名コピー
WA_OUT-NAME1 = L_NAME1.
CLEAR: L_NAME1.
ENDIF.

* 担当者名検索 *
SELECT SINGLE BEZEI FROM TVGRT INTO L_BEZEI
WHERE SPRAS = SY-LANGU
AND   VKGRP = WA_OUT-VKGRP.
* 取得判定
IF ( SY-SUBRC IS INITIAL ).
* 担当者名コピー
WA_OUT-BEZEI = L_BEZEI.
CLEAR: L_BEZEI.
ENDIF.
* データ格納
APPEND WA_OUT TO IT_OUT.
ENDLOOP.
ENDFORM.                                                    " GET_NAME
*&---------------------------------------------------------------------*
*&      Form  DISP_LIST
*&---------------------------------------------------------------------*
* 一覧表示
*----------------------------------------------------------------------*
FORM DISP_LIST.
* 初期化
CLEAR: WA_OUT.
* 画面ヘッダ出力
PERFORM SET_DISP_HEAD.
* 一覧表示処理
PERFORM SET_DISP.
ENDFORM.                    " DISP_LIST
*&---------------------------------------------------------------------*
*&      Form  SET_DISP_HEAD
*&---------------------------------------------------------------------*
* 一覧画面ヘッダ出力
*----------------------------------------------------------------------*
FORM SET_DISP_HEAD.
* 一覧画面タイトル出力
WRITE: / CNS_T1.
* 下線
ULINE.
* 一覧画面ヘッダ出力
WRITE : /004 TEXT-016,    "会計年度
014 TEXT-017,    "営業所
022 TEXT-018,    "受注先
034 TEXT-019,    "受注先名
071 TEXT-020,    "主要順位
081 TEXT-021,    "営業グループ
095 TEXT-022.    "担当者
* 下線
ULINE.
ENDFORM.                    " SET_DISP_HEAD
*&---------------------------------------------------------------------*
*&      Form  SET_DISP
*&---------------------------------------------------------------------*
* 一覧表示処理
*----------------------------------------------------------------------*
FORM SET_DISP.
* ローカル変数宣言
DATA: L_PKUNAG(10) TYPE C.
* 初期化
CLEAR: WA_OUT.
* 一覧表示処理
LOOP AT IT_OUT INTO WA_OUT.
* 初期化
CLEAR: L_PKUNAG.
* 受注先の先頭ゼロ埋め
PERFORM SET_ZERO USING WA_OUT-PKUNAG
L_PKUNAG.

WRITE: / WA_OUT-GJAHR  UNDER TEXT-016,    "会計年度
WA_OUT-VKBUR  UNDER TEXT-017,    "営業所
L_PKUNAG      UNDER TEXT-018,    "受注先
WA_OUT-NAME1  UNDER TEXT-019,    "受注先名
WA_OUT-ZSPRIO UNDER TEXT-020,    "主要順位
WA_OUT-VKGRP  UNDER TEXT-021,    "営業グループ
WA_OUT-BEZEI  UNDER TEXT-022.    "担当者
ENDLOOP.
ENDFORM.                    " SET_DISP
*&---------------------------------------------------------------------*
*&      Form  SET_ZERO
*&---------------------------------------------------------------------*
* 先頭ゼロ埋め処理
*----------------------------------------------------------------------*
*      -->IN_DATA    変換前データ
*      -->OUT_DATA   変換後データ
*----------------------------------------------------------------------*
FORM SET_ZERO USING    IN_DATA
OUT_DATA.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT  = IN_DATA
IMPORTING
OUTPUT = OUT_DATA.
ENDFORM.                    " SET_ZERO
*&---------------------------------------------------------------------*
*&      Form  file_download
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM FILE_DOWNLOAD.
* 初期化
CLEAR: WA_OUT.
* ダウンロード用ファイルヘッダ出力
PERFORM SET_DLF_HEAD.
* ダウンロード用データ出力
PERFORM SET_DLF_DATA.
* ファイルのダウンロード
PERFORM DOWNLOAD.
ENDFORM.                    " file_download
*&---------------------------------------------------------------------*
*&      Form  set_dlf_head
*&---------------------------------------------------------------------*
* ダウンロード用ファイルヘッダ出力
*----------------------------------------------------------------------*
FORM SET_DLF_HEAD.
CONCATENATE: TEXT-016    "会計年度
TEXT-017    "営業所
TEXT-018    "受注先
TEXT-019    "受注先名
TEXT-020    "主要順位
TEXT-021    "営業グループ
TEXT-022    "担当者
* Mod ES-UP 2012/08/14 -->
*               INTO WA_DLF-DATA SEPARATED BY CNS_TAB.
INTO WA_DLF-DATA SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/14 <--
APPEND WA_DLF TO IT_DLF.
ENDFORM.                    " set_dlf_head
*&---------------------------------------------------------------------*
*&      Form  set_dlf_data
*&---------------------------------------------------------------------*
* ダウンロード用データ出力
*----------------------------------------------------------------------*
FORM SET_DLF_DATA.
* 初期化
CLEAR: WA_OUT.
LOOP AT IT_OUT INTO WA_OUT.
* 初期化
CLEAR: WA_DLF.
CONCATENATE: WA_OUT-GJAHR    "会計年度
WA_OUT-VKBUR    "営業所
WA_OUT-PKUNAG   "受注先
WA_OUT-NAME1    "受注先名
WA_OUT-ZSPRIO   "主要順位
WA_OUT-VKGRP    "営業グループ
WA_OUT-BEZEI    "担当者
* Mod ES-UP 2012/08/14 -->
*                 INTO WA_DLF SEPARATED BY CNS_TAB.
INTO WA_DLF SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/14 <--
APPEND WA_DLF TO IT_DLF.
ENDLOOP.
ENDFORM.                    " set_dlf_data
*&---------------------------------------------------------------------*
*&      Form  download
*&---------------------------------------------------------------------*
* ファイルのダウンロード
*----------------------------------------------------------------------*
FORM DOWNLOAD.
* ローカルオブジェクト宣言
DATA: L_CNT TYPE I,
L_CHAR1(38) TYPE C,
L_CHAR2(37) TYPE C,
L_NUM1(02)  TYPE C,
L_NUM2(05)  TYPE C.
* Mod ES-UP 2012/08/14 -->
*  CALL FUNCTION 'WS_DOWNLOAD'
*   EXPORTING
**   BIN_FILESIZE                  = ' '
**   CODEPAGE                      = ' '
*     FILENAME                      = P_OFILE
**   FILETYPE                      = 'ASC'
**   MODE                          = ' '
**   WK1_N_FORMAT                  = ' '
**   WK1_N_SIZE                    = ' '
**   WK1_T_FORMAT                  = ' '
**   WK1_T_SIZE                    = ' '
**   COL_SELECT                    = ' '
**   COL_SELECTMASK                = ' '
**   NO_AUTH_CHECK                 = ' '
** IMPORTING
**   FILELENGTH                    =
*    TABLES
*      DATA_TAB                      = IT_DLF
**   FIELDNAMES                    =
*   EXCEPTIONS
*     FILE_OPEN_ERROR               = CNS_I_01
*     FILE_WRITE_ERROR              = CNS_I_02
*     INVALID_FILESIZE              = CNS_I_03
*     INVALID_TYPE                  = CNS_I_04
*     NO_BATCH                      = CNS_I_05
*     UNKNOWN_ERROR                 = CNS_I_06
*     INVALID_TABLE_WIDTH           = CNS_I_07
*     GUI_REFUSE_FILETRANSFER       = CNS_I_08
*     CUSTOMER_ERROR                = CNS_I_09
*     OTHERS                        = CNS_I_10.
DATA: L_FILE TYPE STRING,
L_CODEPAGE TYPE ABAP_ENCODING.
**** START ADD 2015/02/04 ISID11 ****
DATA:
L_Z_OUTPUT_CP TYPE  ZTEGZZM001-Z_OUTPUT_CP,
L_SAPCODEPAGE TYPE STRING.

CALL FUNCTION 'ZEG_ZZ_GLOBAL_PGM_CONFIG_GET'
EXPORTING
IMPPGM      = SY-REPID
IMPBUKRS    = TEXT-026
IMPORTING
EXPCODEPAGE = L_Z_OUTPUT_CP.
**** END ADD 2015/02/04 ISID11 ****
L_FILE = P_OFILE.
****START UPD 2014/08/29 ISID18****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
**** START UPD 2015/02/04 ISID11 ****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_UTF ).
L_SAPCODEPAGE = L_Z_OUTPUT_CP.
IF L_SAPCODEPAGE IS NOT INITIAL.

L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( L_SAPCODEPAGE ).

ENDIF.
**** END UPD 2015/02/04 ISID11 ****
****END UPD 2014/08/29 ISID18****
CL_GUI_FRONTEND_SERVICES=>GUI_DOWNLOAD(
EXPORTING
*      BIN_FILESIZE              = BIN_FILESIZE
FILENAME                  = L_FILE
*      FILETYPE                  = 'ASC'
*      APPEND                    = SPACE
*      WRITE_FIELD_SEPARATOR     = SPACE
*      HEADER                    = '00'
*      TRUNC_TRAILING_BLANKS     = SPACE
*      WRITE_LF                  = 'X'
*      COL_SELECT                = SPACE
*      COL_SELECT_MASK           = SPACE
*      DAT_MODE                  = SPACE
*      CONFIRM_OVERWRITE         = SPACE
*      NO_AUTH_CHECK             = SPACE
CODEPAGE                  = L_CODEPAGE
*      IGNORE_CERR               = ABAP_TRUE
*      REPLACEMENT               = '#'
*      WRITE_BOM                 = SPACE
*      TRUNC_TRAILING_BLANKS_EOL = 'X'
*      WK1_N_FORMAT              = SPACE
*      WK1_N_SIZE                = SPACE
*      WK1_T_FORMAT              = SPACE
*      WK1_T_SIZE                = SPACE
*      SHOW_TRANSFER_STATUS      = 'X'
*      FIELDNAMES                = FIELDNAMES
*      WRITE_LF_AFTER_LAST_LINE  = 'X'
*    IMPORTING
*      FILELENGTH                = FILELENGTH
CHANGING
DATA_TAB                  = IT_DLF
EXCEPTIONS
FILE_WRITE_ERROR          = 1
NO_BATCH                  = 2
GUI_REFUSE_FILETRANSFER   = 3
INVALID_TYPE              = 4
NO_AUTHORITY              = 5
UNKNOWN_ERROR             = 6
HEADER_NOT_ALLOWED        = 7
SEPARATOR_NOT_ALLOWED     = 8
FILESIZE_NOT_ALLOWED      = 9
HEADER_TOO_LONG           = 10
DP_ERROR_CREATE           = 11
DP_ERROR_SEND             = 12
DP_ERROR_WRITE            = 13
UNKNOWN_DP_ERROR          = 14
ACCESS_DENIED             = 15
DP_OUT_OF_MEMORY          = 16
DISK_FULL                 = 17
DP_TIMEOUT                = 18
FILE_NOT_FOUND            = 19
DATAPROVIDER_EXCEPTION    = 20
CONTROL_FLUSH_ERROR       = 21
NOT_SUPPORTED_BY_GUI      = 22
ERROR_NO_GUI              = 23
OTHERS                    = 24 ).
* Mod ES-UP 2012/08/14 <--
IF NOT ( SY-SUBRC IS INITIAL ).
L_NUM1 = SY-SUBRC.
CONCATENATE CNS_M2 L_NUM1 INTO L_CHAR1.
MESSAGE S400 WITH L_CHAR1.
ELSE.
* 更新対象件数取得
DESCRIBE TABLE IT_DLF LINES L_CNT.
* ヘッダ件数減算
L_CNT = L_CNT - CNS_I_01.
L_NUM2 = L_CNT.
CONCATENATE L_NUM2 CNS_M12 INTO L_CHAR2.
MESSAGE I400 WITH L_CHAR2.
ENDIF.
ENDFORM.                    " download
*&---------------------------------------------------------------------*
*&      Form  in_data_chk
*&---------------------------------------------------------------------*
* 画面入力データチェック
*----------------------------------------------------------------------*
FORM IN_DATA_CHK.
* ローカルオブジェクト宣言
DATA: L_IT_ZSB003 LIKE STANDARD TABLE OF ZSB003,
L_LINE_CNT  TYPE I.

* 初期化
CLEAR: TVBUR,  "営業所
KNA1,   "得意先
TVKGR.  "営業グループ

* 入力営業所存在チェック
*** 先頭ゼロ詰処理
PERFORM SET_ZERO USING P_VKBUR
P_VKBUR.

SELECT SINGLE * FROM TVBUR WHERE VKBUR = P_VKBUR.

IF NOT ( SY-SUBRC IS INITIAL ).
MESSAGE S613 WITH TEXT-006 TEXT-023.
STOP.
ENDIF.

* 入力受注先存在チェック（受注先が'ZZZZZZZZZZ'以外のとき）
IF ( P_PKUNAG <> CNS_Z10 ).
*** 先頭ゼロ詰処理
PERFORM SET_ZERO USING P_PKUNAG
P_PKUNAG.

SELECT SINGLE * FROM KNA1 WHERE KUNNR = P_PKUNAG.

IF NOT ( SY-SUBRC IS INITIAL ).
MESSAGE S613 WITH TEXT-008 TEXT-024.
STOP.
ENDIF.
ENDIF.

IF ( C_SAKUJO IS INITIAL ).
* 入力受注先重複チェック
SELECT * FROM ZSB003 INTO TABLE L_IT_ZSB003 WHERE GJAHR  = P_GJAHR
AND VKBUR  = P_VKBUR
AND PKUNAG = P_PKUNAG.

DESCRIBE TABLE L_IT_ZSB003 LINES L_LINE_CNT.

IF ( L_LINE_CNT >= CNS_I_01 ).
MESSAGE S400 WITH CNS_M5.
STOP.
ENDIF.
ENDIF.

** ファイル入力営業グループ存在チェック
*** 先頭ゼロ詰処理
PERFORM SET_ZERO USING P_VKGRP
P_VKGRP.

* 入力営業グループ存在チェック
SELECT SINGLE * FROM TVKGR WHERE VKGRP = P_VKGRP.

IF NOT ( SY-SUBRC IS INITIAL ).
MESSAGE S613 WITH TEXT-009 TEXT-025.
STOP.
ENDIF.
ENDFORM.                    " in_data_chk
*&---------------------------------------------------------------------*
*&      Form  ZSB003_UPDT
*&---------------------------------------------------------------------*
*  ZSB003更新（1レコード）
*----------------------------------------------------------------------*
FORM ZSB003_UPDT.
* 初期化
CLEAR: ZSB003.

* 内部テーブルにデータをセット
ZSB003-GJAHR   = P_GJAHR.  "会計年度
ZSB003-VKBUR   = P_VKBUR.  "営業所
ZSB003-ZSPRIO  = P_ZSPRIO. "主要順位
ZSB003-PKUNAG  = P_PKUNAG. "受注先
ZSB003-VKGRP   = P_VKGRP.  "営業グループ
ZSB003-ZINSDAT = SY-DATUM. "登録日
ZSB003-ZINSUSR = SY-UNAME. "登録ユーザ
ZSB003-ZINSTIM = SY-UZEIT. "登録時間

* ZSB003更新処理
MODIFY ZSB003.

IF ( SY-SUBRC IS INITIAL ).
MESSAGE I200 WITH CNS_I_01.
COMMIT WORK.
ELSE.
MESSAGE S753 WITH TEXT-014.
ROLLBACK WORK.
STOP.
ENDIF.
ENDFORM.                    " ZSB003_UPDT
*&---------------------------------------------------------------------*
*&      Form  zsb003_dldt
*&---------------------------------------------------------------------*
* ZSB003削除（1レコード）
*----------------------------------------------------------------------*
FORM ZSB003_DLDT.
* ZSB003削除処理
DELETE FROM ZSB003 WHERE GJAHR  = P_GJAHR  "会計年度
AND VKBUR  = P_VKBUR  "営業所
AND ZSPRIO = P_ZSPRIO."主要順位

IF ( SY-SUBRC IS INITIAL ).
MESSAGE I320 WITH CNS_I_01.
COMMIT WORK.
ELSE.
MESSAGE S400 WITH CNS_M3.
ROLLBACK WORK.
STOP.
ENDIF.
ENDFORM.                    " zsb003_dldt
*&---------------------------------------------------------------------*
*&      Form  file_read
*&---------------------------------------------------------------------*
* 入力ファイル読込
*----------------------------------------------------------------------*
FORM FILE_READ.
* Mod ES-UP 2012/08/14 -->
*  CALL FUNCTION 'WS_UPLOAD'
*       EXPORTING
*            FILENAME                = P_IFILE
*            FILETYPE                = CNS_DAT
*       TABLES
*            DATA_TAB                = IT_UPF
*       EXCEPTIONS
*            CONVERSION_ERROR        = 1
*            FILE_OPEN_ERROR         = 2
*            FILE_READ_ERROR         = 3
*            INVALID_TYPE            = 4
*            NO_BATCH                = 5
*            UNKNOWN_ERROR           = 6
*            INVALID_TABLE_WIDTH     = 7
*            GUI_REFUSE_FILETRANSFER = 8
*            CUSTOMER_ERROR          = 9
*            OTHERS                  = 10.
DATA L_FILE TYPE STRING.
DATA L_CODEPAGE TYPE ABAP_ENCODING.
**** START ADD 2015/02/04 ISID11 ****
DATA:
L_Z_OUTPUT_CP TYPE  ZTEGZZM001-Z_OUTPUT_CP,
L_SAPCODEPAGE TYPE STRING.

CALL FUNCTION 'ZEG_ZZ_GLOBAL_PGM_CONFIG_GET'
EXPORTING
IMPPGM      = SY-REPID
IMPBUKRS    = TEXT-026
IMPORTING
EXPCODEPAGE = L_Z_OUTPUT_CP.
**** END ADD 2015/02/04 ISID11 ****
****START UPD 2014/08/29 ISID18****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
**** START UPD 2015/02/04 ISID11 ****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_UTF ).
L_SAPCODEPAGE = L_Z_OUTPUT_CP.
IF L_SAPCODEPAGE IS NOT INITIAL.

L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( L_SAPCODEPAGE ).

ENDIF.
**** END UPD 2015/02/04 ISID11 ****
****END UPD 2014/08/29 ISID18****
L_FILE = P_IFILE.
CL_GUI_FRONTEND_SERVICES=>GUI_UPLOAD(
EXPORTING
FILENAME                = L_FILE
FILETYPE                = 'DAT'
HAS_FIELD_SEPARATOR     = ABAP_TRUE
*      HEADER_LENGTH           = 0
*      READ_BY_LINE            = 'X'
*      DAT_MODE                = SPACE
CODEPAGE                = L_CODEPAGE
*      IGNORE_CERR             = ABAP_TRUE
*      REPLACEMENT             = '#'
*      VIRUS_SCAN_PROFILE      = VIRUS_SCAN_PROFILE
*    IMPORTING
*      FILELENGTH              = FILELENGTH
*      HEADER                  = HEADER
CHANGING
DATA_TAB                = IT_UPF
EXCEPTIONS
FILE_OPEN_ERROR         = 1
FILE_READ_ERROR         = 2
NO_BATCH                = 3
GUI_REFUSE_FILETRANSFER = 4
INVALID_TYPE            = 5
NO_AUTHORITY            = 6
UNKNOWN_ERROR           = 7
BAD_DATA_FORMAT         = 8
HEADER_NOT_ALLOWED      = 9
SEPARATOR_NOT_ALLOWED   = 10
HEADER_TOO_LONG         = 11
UNKNOWN_DP_ERROR        = 12
ACCESS_DENIED           = 13
DP_OUT_OF_MEMORY        = 14
DISK_FULL               = 15
DP_TIMEOUT              = 16
NOT_SUPPORTED_BY_GUI    = 17
ERROR_NO_GUI            = 18
OTHERS                  = 19 ).
* Mod ES-UP 2012/08/14 <--
IF NOT ( SY-SUBRC IS INITIAL ).
MESSAGE S400 WITH CNS_M4.
STOP.
ENDIF.

ENDFORM.                    " file_read
*&---------------------------------------------------------------------*
*&      Form  in_file_chk
*&---------------------------------------------------------------------*
* 入力ファイルデータチェック
*----------------------------------------------------------------------*
FORM IN_FILE_CHK.
* ローカルオブジェクト宣言
DATA:   L_VKBUR(04)  TYPE C,  "営業所
L_PKUNAG(10) TYPE C,  "受注先
L_ZSPRIO(02) TYPE C,  "主要順位
L_VKGRP(03)  TYPE C,  "営業グループ
L_CNT        TYPE I,  "一意制約確認ループ回数
L_WA_UPF     LIKE WA_UPF,                   "一意制約確認用
L_IT_UPF     LIKE STANDARD TABLE OF WA_UPF. "一意制約確認用

* 初期化
CLEAR: WA_UPF,
ERR_FLG,
IT_ZSB003,
TVBUR.

* ヘッダ行削除
DELETE IT_UPF INDEX CNS_I_01.

* 入力ファイル格納内部テーブル退避（一意制約確認のため）
L_IT_UPF = IT_UPF.

LOOP AT IT_UPF INTO WA_UPF.
* 初期化
CLEAR: ZSB003.

** ファイル入力会計年度数値チェック
IF ( WA_UPF-GJAHR NA CNS_NUM ).
*** エラーデータ格納用構造初期化
CLEAR: WA_ERR.
*** エラーデータ格納処理
ERR_FLG = CNS_C_X.
WA_ERR-GJAHR  = WA_UPF-GJAHR.
WA_ERR-VKBUR  = WA_UPF-VKBUR.
WA_ERR-ZSPRIO = WA_UPF-ZSPRIO.
WA_ERR-PKUNAG = WA_UPF-PKUNAG.
WA_ERR-VKGRP  = WA_UPF-VKGRP.
WA_ERR-MSG    = CNS_M6.

APPEND WA_ERR TO IT_ERR.
ENDIF.

** ファイル入力営業所存在チェック
*** 先頭ゼロ詰処理
PERFORM SET_ZERO USING WA_UPF-VKBUR
L_VKBUR.
SELECT SINGLE * FROM TVBUR WHERE VKBUR = L_VKBUR.

IF NOT ( SY-SUBRC IS INITIAL ).
*** エラーデータ格納用構造初期化
CLEAR: WA_ERR.
*** エラーデータ格納処理
ERR_FLG = CNS_C_X.
WA_ERR-GJAHR  = WA_UPF-GJAHR.
WA_ERR-VKBUR  = WA_UPF-VKBUR.
WA_ERR-ZSPRIO = WA_UPF-ZSPRIO.
WA_ERR-PKUNAG = WA_UPF-PKUNAG.
WA_ERR-VKGRP  = WA_UPF-VKGRP.
WA_ERR-MSG    = CNS_M7.

APPEND WA_ERR TO IT_ERR.
ENDIF.

** ファイル入力受注先存在チェック
IF ( WA_UPF-PKUNAG <> CNS_Z10 ).
*** 先頭ゼロ詰処理
PERFORM SET_ZERO USING WA_UPF-PKUNAG
L_PKUNAG.
SELECT SINGLE * FROM KNA1 WHERE KUNNR = L_PKUNAG.

IF NOT ( SY-SUBRC IS INITIAL ).
*** エラーデータ格納用構造初期化
CLEAR: WA_ERR.
*** エラーデータ格納処理
ERR_FLG = CNS_C_X.
WA_ERR-GJAHR  = WA_UPF-GJAHR.
WA_ERR-VKBUR  = WA_UPF-VKBUR.
WA_ERR-ZSPRIO = WA_UPF-ZSPRIO.
WA_ERR-PKUNAG = WA_UPF-PKUNAG.
WA_ERR-VKGRP  = WA_UPF-VKGRP.
WA_ERR-MSG    = CNS_M8.

APPEND WA_ERR TO IT_ERR.
ENDIF.
* 2004/10/08 ZZZならそのままセット
ELSE.
L_PKUNAG = WA_UPF-PKUNAG.
ENDIF.

** ファイル入力主要順位数値チェック
IF ( WA_UPF-ZSPRIO NA CNS_NUM ).
*** エラーデータ格納用構造初期化
CLEAR: WA_ERR.
*** エラーデータ格納処理
ERR_FLG = CNS_C_X.
WA_ERR-GJAHR  = WA_UPF-GJAHR.
WA_ERR-VKBUR  = WA_UPF-VKBUR.
WA_ERR-ZSPRIO = WA_UPF-ZSPRIO.
WA_ERR-PKUNAG = WA_UPF-PKUNAG.
WA_ERR-VKGRP  = WA_UPF-VKGRP.
WA_ERR-MSG    = CNS_M9.

APPEND WA_ERR TO IT_ERR.
ENDIF.
*** 先頭ゼロ詰処理
PERFORM SET_ZERO USING WA_UPF-ZSPRIO
L_ZSPRIO.


** ファイル入力営業グループ存在チェック
*** 先頭ゼロ詰処理
PERFORM SET_ZERO USING WA_UPF-VKGRP
L_VKGRP.
SELECT SINGLE * FROM TVKGR WHERE VKGRP = L_VKGRP.

IF NOT ( SY-SUBRC IS INITIAL ).
*** エラーデータ格納用構造初期化
CLEAR: WA_ERR.
*** エラーデータ格納処理
ERR_FLG = CNS_C_X.
WA_ERR-GJAHR  = WA_UPF-GJAHR.
WA_ERR-VKBUR  = WA_UPF-VKBUR.
WA_ERR-ZSPRIO = WA_UPF-ZSPRIO.
WA_ERR-PKUNAG = WA_UPF-PKUNAG.
WA_ERR-VKGRP  = WA_UPF-VKGRP.
WA_ERR-MSG    = CNS_M10.

APPEND WA_ERR TO IT_ERR.
ENDIF.

** 一意制約チェック
*** 初期化
CLEAR: L_WA_UPF,
L_CNT.
LOOP AT L_IT_UPF INTO L_WA_UPF WHERE GJAHR  = WA_UPF-GJAHR
AND VKBUR  = WA_UPF-VKBUR
AND ZSPRIO = WA_UPF-ZSPRIO.

**** ループ回数カウント
L_CNT = L_CNT + CNS_I_01.
**** 二週目以降はエラー
IF ( L_CNT = CNS_I_02 ).
**** エラーデータ格納用構造初期化
CLEAR: WA_ERR.
**** エラーデータ格納処理
ERR_FLG = CNS_C_X.
WA_ERR-GJAHR  = WA_UPF-GJAHR.
WA_ERR-VKBUR  = WA_UPF-VKBUR.
WA_ERR-ZSPRIO = WA_UPF-ZSPRIO.
WA_ERR-PKUNAG = WA_UPF-PKUNAG.
WA_ERR-VKGRP  = WA_UPF-VKGRP.
WA_ERR-MSG    = CNS_M11.

APPEND WA_ERR TO IT_ERR.
EXIT.
ENDIF.
ENDLOOP.

** 受注先重複チェック
*** 主要順位が異なるが同じ受注先があった場合はエラーとする
**** 初期化
CLEAR: L_WA_UPF.
LOOP AT L_IT_UPF INTO L_WA_UPF WHERE GJAHR  =  WA_UPF-GJAHR
AND VKBUR  =  WA_UPF-VKBUR
AND ZSPRIO <> WA_UPF-ZSPRIO
AND PKUNAG =  WA_UPF-PKUNAG
*-   2004/10/08 ADD-S.
AND VKGRP  = WA_UPF-VKGRP.
*-   2004/10/08 ADD-E.

*** 初期化
CLEAR: WA_ERR.

*** エラーデータ格納処理
ERR_FLG = CNS_C_X.
WA_ERR-GJAHR  = WA_UPF-GJAHR.
WA_ERR-VKBUR  = WA_UPF-VKBUR.
WA_ERR-ZSPRIO = WA_UPF-ZSPRIO.
WA_ERR-PKUNAG = WA_UPF-PKUNAG.
WA_ERR-VKGRP  = WA_UPF-VKGRP.
WA_ERR-MSG    = CNS_M5.

APPEND WA_ERR TO IT_ERR.
EXIT.
ENDLOOP.

**** エラー判定処理
IF NOT ( ERR_FLG IS INITIAL ).
CONTINUE.
ENDIF.

ZSB003-GJAHR   = WA_UPF-GJAHR.   "会計年度
ZSB003-VKBUR   = L_VKBUR.        "営業所
ZSB003-ZSPRIO  = L_ZSPRIO.       "主要順位
ZSB003-PKUNAG  = L_PKUNAG.       "受注先
ZSB003-VKGRP   = L_VKGRP.        "営業グループ
ZSB003-ZINSDAT = SY-DATUM.       "登録日
ZSB003-ZINSUSR = SY-UNAME.       "登録ユーザ
ZSB003-ZINSTIM = SY-UZEIT.       "登録時間

APPEND ZSB003 TO IT_ZSB003.
ENDLOOP.
ENDFORM.                    " in_file_chk
*&---------------------------------------------------------------------*
*&      Form  ZSB003_UPDT_M
*&---------------------------------------------------------------------*
* 主要顧客管理テーブル一括更新
*----------------------------------------------------------------------*
FORM ZSB003_UPDT_M.
* ローカル変数宣言
DATA: L_FLG(01) TYPE C,
L_CNT     TYPE I,
L_GJAHR   LIKE ZSB003-GJAHR,
L_VKBUR   LIKE ZSB003-VKBUR,
L_ZSB003  LIKE ZSB003.
* 初期化
CLEAR: ZSB003.

* 更新対象件数取得
DESCRIBE TABLE IT_ZSB003 LINES L_CNT.

IF ( L_CNT IS INITIAL ).
MESSAGE I200 WITH L_CNT.
STOP.
ENDIF.

LOOP AT IT_ZSB003 INTO ZSB003.
*** 初期化
CLEAR: L_ZSB003.

*** レコード削除処理
IF ( ZSB003-GJAHR <> L_GJAHR OR
ZSB003-VKBUR <> L_VKBUR ).

SELECT SINGLE * FROM ZSB003 INTO L_ZSB003
WHERE GJAHR = ZSB003-GJAHR
AND VKBUR = ZSB003-VKBUR.

IF ( SY-SUBRC IS INITIAL ).
*** レコード削除処理
DELETE FROM ZSB003 WHERE GJAHR = ZSB003-GJAHR
AND VKBUR = ZSB003-VKBUR.

IF NOT ( SY-SUBRC IS INITIAL ).
MESSAGE S400 WITH CNS_M3.
ROLLBACK WORK.
STOP.
ENDIF.
ENDIF.

L_GJAHR = ZSB003-GJAHR.
L_VKBUR = ZSB003-VKBUR.
ENDIF.

*** 主要顧客管理テーブル挿入処理
INSERT INTO ZSB003 VALUES ZSB003.

IF NOT ( SY-SUBRC IS INITIAL ).
L_FLG = CNS_C_X.
MESSAGE S753 WITH TEXT-014.
ROLLBACK WORK.
STOP.
ENDIF.
ENDLOOP.

IF ( L_FLG IS INITIAL ).
MESSAGE I200 WITH L_CNT.
COMMIT WORK.
ENDIF.
ENDFORM.                    " ZSB003_UPDT_M
*&---------------------------------------------------------------------*
*&      Form  DISP_ERR_LIST
*&---------------------------------------------------------------------*
* エラーリスト表示
*----------------------------------------------------------------------*
FORM DISP_ERR_LIST.
* 初期化
CLEAR: WA_ERR.
* 画面ヘッダ出力
PERFORM SET_DISP_ERR_HEAD.
* 一覧表示処理
PERFORM SET_ERR_DISP.
ENDFORM.                    " DISP_ERR_LIST
*&---------------------------------------------------------------------*
*&      Form  SET_DISP_err_HEAD
*&---------------------------------------------------------------------*
* エラー一覧ヘッダ出力
*----------------------------------------------------------------------*
FORM SET_DISP_ERR_HEAD.
* 一覧画面タイトル出力
WRITE: / CNS_T2.
* 下線
ULINE.
* 一覧画面ヘッダ出力
WRITE: /004 TEXT-016,     "会計年度
014 TEXT-017,    "営業所
022 TEXT-020,    "主要順位
032 TEXT-018,    "受注先
044 TEXT-025,    "営業グループ
058 TEXT-011.    "メッセージ
* 下線
ULINE.
ENDFORM.                    " SET_DISP_err_HEAD
*&---------------------------------------------------------------------*
*&      Form  SET_ERR_DISP
*&---------------------------------------------------------------------*
* エラー一覧出力
*----------------------------------------------------------------------*
FORM SET_ERR_DISP.
* ローカル変数宣言
DATA: L_PKUNAG(10) TYPE C.             "受注先
* 初期化
CLEAR: WA_ERR.
* 一覧表示処理
LOOP AT IT_ERR INTO WA_ERR.
* 初期化
CLEAR: L_PKUNAG.
* 受注先の先頭ゼロ埋め
PERFORM SET_ZERO USING WA_ERR-PKUNAG
L_PKUNAG.

WRITE: / WA_ERR-GJAHR  UNDER TEXT-016,    "会計年度
WA_ERR-VKBUR  UNDER TEXT-017,    "営業所
WA_ERR-ZSPRIO UNDER TEXT-020,    "主要順位
L_PKUNAG      UNDER TEXT-018,    "受注先
WA_ERR-VKGRP  UNDER TEXT-025,    "営業グループ
WA_ERR-MSG    UNDER TEXT-011.    "メッセージ
ENDLOOP.
ENDFORM.                    " SET_ERR_DISP
