*&---------------------------------------------------------------------*
*&  REPORT ZM013100                                                    *
*&         購買依頼一括登録                                            *
*&---------------------------------------------------------------------*
*&  機能     :購買依頼を一括登録する
*&  作成日   :2010/09/10
*&  作成者   :S.KURATA(SOLFIS)
*&  変更履歴 :
*&            仕様変更対応 2010/10/21 Y.TSUKAHARA(SOLFIS)
*& YYYY/MM/DD  Programar         Description
*& 2012/08/23  ISID              ES-UP
*&---------------------------------------------------------------------*
REPORT ZM013100 MESSAGE-ID  Z1
NO STANDARD PAGE HEADING.

*----------------------------------------------------------------------*
*  型定義
*----------------------------------------------------------------------*
* ファイル取込用
TYPES:BEGIN OF T_FILE,
* Mod ES-UP 2012/10/29 -->
*       FIELD(1000)      TYPE C,                  "データ
FIELD  TYPE string,                  "データ
* Mod ES-UP 2012/10/29 <--
END OF T_FILE.

* 入力ファイル用
TYPES:BEGIN OF T_INFILE,
WERKS(4)         TYPE C,                  "プラント
MATNR(18)        TYPE C,                  "品目
MENGE(17)        TYPE C,                  "数量
LFDAT(10)        TYPE C,                  "納入期日
END OF T_INFILE.

* エラーファイル用
TYPES:BEGIN OF T_ERFILE,
INDEX            TYPE I,                  "インデックス
WERKS(4)         TYPE C,                  "プラント
MATNR(18)        TYPE C,                  "品目
MENGE(17)        TYPE C,                  "数量
LFDAT(10)        TYPE C,                  "納入期日
MSG(200)         TYPE C,                  "エラーメッセージ
END OF T_ERFILE.

*----------------------------------------------------------------------*
*  内部テーブル・構造定義
*----------------------------------------------------------------------*
* ファイル取込用
DATA: IT_FILE           TYPE STANDARD TABLE OF T_FILE,
WA_FILE           TYPE T_FILE.

* 入力ファイル用
DATA: IT_INFILE         TYPE STANDARD TABLE OF T_INFILE,
WA_INFILE         TYPE T_INFILE.

* エラーファイル用
DATA: IT_ERR            TYPE STANDARD TABLE OF T_ERFILE,
WA_ERR            TYPE T_ERFILE,
IT_ERRFILE        TYPE STANDARD TABLE OF T_FILE,
WA_ERRFILE        TYPE T_FILE.

* BAPI：明細データ用
DATA: IT_ITEMS          TYPE STANDARD TABLE OF BAPIEBANC,
WA_ITEMS          TYPE BAPIEBANC.

* BAPI：リターンメッセージ用
DATA: IT_RETURN         TYPE STANDARD TABLE OF BAPIRETURN,
WA_RETURN         TYPE BAPIRETURN.

*----------------------------------------------------------------------*
*  変数定義
*----------------------------------------------------------------------*
DATA:
V_LOCAL(1)            TYPE C,
V_MSG(200)            TYPE C.

*----------------------------------------------------------------------*
*  定数定義
*----------------------------------------------------------------------*
CONSTANTS:
CNS_LOCAL(7)          TYPE C VALUE 'R_LOCAL',
CNS_ON(1)             TYPE C VALUE 'X',
CNS_TYPE_NB(2)        TYPE C VALUE 'NB',
CNS_TYPE_E(1)         TYPE C VALUE 'E',
* Mod ES-UP 2012/08/23 -->
*  CNS_TAB(1)            TYPE X VALUE '09',
CNS_SJIS TYPE STRING VALUE `shift_jis`,
* Mod ES-UP 2012/08/23 <--
CNS_FILTER(21)        TYPE C VALUE '全ファイル (*.*)|*.*|'.

*----------------------------------------------------------------------*
*  選択画面定義
*----------------------------------------------------------------------*
*サーバ
PARAMETERS R_SERVER RADIOBUTTON GROUP RD01 DEFAULT 'X'.
*ローカル
PARAMETERS R_LOCAL  RADIOBUTTON GROUP RD01.
SELECTION-SCREEN:BEGIN OF BLOCK B01 WITH FRAME TITLE TEXT-001.
*入力ファイル
PARAMETERS P_INFILE(128) TYPE C OBLIGATORY.
*エラーファイル
PARAMETERS P_ERFILE(128) TYPE C OBLIGATORY.
SELECTION-SCREEN:END OF BLOCK B01.

*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN ON VALUE-REQUEST
*----------------------------------------------------------------------*
* 入力ファイル
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_INFILE.

* 選択画面最新値の取得
PERFORM DYNP_VALUES_READ.
* ファイル選択ダイアログ表示
PERFORM FILE_OPEN_DIALOG CHANGING P_INFILE.

* エラーファイル
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_ERFILE.

* 選択画面最新値の取得
PERFORM DYNP_VALUES_READ.
* ファイル保存ダイアログ表示
PERFORM FILE_SAVE_DIALOG CHANGING P_ERFILE.

*----------------------------------------------------------------------*
*  START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.

* ファイル読込み
PERFORM GET_FILE.

* 事前チェック
PERFORM CHECK_FILE.

* MOD-BEG 仕様変更 2010/10/21
** 購買依頼伝票登録
*  PERFORM REQUISITION_CREATE.
* エラーデータが存在するかチェック
IF IT_ERR IS INITIAL.
*   購買依頼伝票登録
PERFORM REQUISITION_CREATE.
ENDIF.
* MOD-END 仕様変更 2010/10/21

* エラー対象一覧出力
PERFORM OUT_ERRLIST.

* エラーファイル出力
PERFORM OUT_ERRFILE.

* 処理結果出力
PERFORM OUT_RESULT.

*&---------------------------------------------------------------------*
*&      Form  DYNP_VALUES_READ
*&---------------------------------------------------------------------*
*       選択画面最新値の取得
*----------------------------------------------------------------------*
FORM DYNP_VALUES_READ.

DATA : LV_DYNAME  TYPE D020S-PROG,
LV_DYNUMB  TYPE D020S-DNUM,
LT_FIELD   TYPE STANDARD TABLE OF DYNPREAD,
LW_FIELD   TYPE DYNPREAD.

CLEAR V_LOCAL.

LV_DYNAME = SY-REPID.
LV_DYNUMB = SY-DYNNR.

LW_FIELD-FIELDNAME = CNS_LOCAL.  "R_LOCAL
LW_FIELD-STEPL     = 0.
APPEND LW_FIELD TO LT_FIELD.

CALL FUNCTION 'DYNP_VALUES_READ'
EXPORTING
DYNAME                         = LV_DYNAME
DYNUMB                         = LV_DYNUMB
TABLES
DYNPFIELDS                     = LT_FIELD
EXCEPTIONS
INVALID_ABAPWORKAREA           = 1
INVALID_DYNPROFIELD            = 2
INVALID_DYNPRONAME             = 3
INVALID_DYNPRONUMMER           = 4
INVALID_REQUEST                = 5
NO_FIELDDESCRIPTION            = 6
INVALID_PARAMETER              = 7
UNDEFIND_ERROR                 = 8
DOUBLE_CONVERSION              = 9
STEPL_NOT_FOUND                = 10
OTHERS                         = 11.

IF SY-SUBRC = 0.
CLEAR LW_FIELD.
READ TABLE LT_FIELD INTO LW_FIELD
WITH KEY FIELDNAME = CNS_LOCAL.
V_LOCAL = LW_FIELD-FIELDVALUE.
ENDIF.

ENDFORM.                    " DYNP_VALUES_READ
*&---------------------------------------------------------------------*
*&      Form  FILE_OPEN_DIALOG
*&---------------------------------------------------------------------*
*       ファイル選択ダイアログ表示
*----------------------------------------------------------------------*
*      <--O_FILE ファイル名
*----------------------------------------------------------------------*
FORM FILE_OPEN_DIALOG CHANGING O_FILE.

DATA : LT_FILE TYPE FILETABLE,
LW_FILE LIKE LINE OF LT_FILE,
LV_RC   TYPE I.

* ローカル選択時のみ
CHECK V_LOCAL = CNS_ON.

CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
CHANGING
FILE_TABLE              = LT_FILE
RC                      = LV_RC
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 1
CNTL_ERROR              = 2
ERROR_NO_GUI            = 3
OTHERS                  = 4.

IF SY-SUBRC = 0.
READ TABLE LT_FILE INTO LW_FILE INDEX 1.
O_FILE = LW_FILE-FILENAME.
ELSE.
*   ファイル名取得に失敗しました
MESSAGE S400 WITH TEXT-M01.
ENDIF.

ENDFORM.                    " FILE_OPEN_DIALOG
*&---------------------------------------------------------------------*
*&      Form  FILE_SAVE_DIALOG
*&---------------------------------------------------------------------*
*       ファイル保存ダイアログ表示
*----------------------------------------------------------------------*
*      <--O_FILE  ファイル名
*----------------------------------------------------------------------*
FORM FILE_SAVE_DIALOG CHANGING O_FILE.

DATA : LV_FILENAME TYPE STRING,
LV_PATH     TYPE STRING,
LV_FULLPATH TYPE STRING,
LV_FILTER   TYPE STRING.

* ローカル選択時のみ
CHECK V_LOCAL = CNS_ON.

LV_FILTER = CNS_FILTER.
CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG
EXPORTING
FILE_FILTER       = LV_FILTER
CHANGING
FILENAME          = LV_FILENAME
PATH              = LV_PATH
FULLPATH          = LV_FULLPATH
EXCEPTIONS
CNTL_ERROR        = 1
ERROR_NO_GUI      = 2
OTHERS            = 3.

IF SY-SUBRC = 0.
O_FILE = LV_FULLPATH.
ELSE.
*   ファイル名取得に失敗しました
MESSAGE S400 WITH TEXT-M01.
ENDIF.

ENDFORM.                    " FILE_SAVE_DIALOG
*&---------------------------------------------------------------------*
*&      Form  GET_FILE
*&---------------------------------------------------------------------*
*       ファイル読込み
*----------------------------------------------------------------------*
FORM GET_FILE.

CASE CNS_ON.
*   サーバ選択時
WHEN R_SERVER.
PERFORM GET_FILE_SERVER.

*   ローカル選択時
WHEN R_LOCAL.
PERFORM GET_FILE_LOCAL.

WHEN OTHERS.
ENDCASE.

ENDFORM.                    " GET_FILE
*&---------------------------------------------------------------------*
*&      Form  GET_FILE_SERVER
*&---------------------------------------------------------------------*
*       サーバファイル読込み
*----------------------------------------------------------------------*
FORM GET_FILE_SERVER.
* Add ES-UP 2012/08/23 -->
DATA L_CODEPAGE TYPE ABAP_ENCODING.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
* Add ES-UP 2012/08/23 <--
REFRESH IT_FILE.

* ファイルオープン
* Mod ES-UP 2012/08/23 -->
*  OPEN DATASET P_INFILE FOR INPUT IN TEXT MODE.
OPEN DATASET P_INFILE FOR INPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
* Mod ES-UP 2012/08/23 <--
IF SY-SUBRC <> 0.
*   入力ファイルのオープンでエラーが発生しました
MESSAGE S400 WITH TEXT-M02.
STOP.
ENDIF.

* 読込み
DO.
CLEAR WA_FILE.
* Mod ES-UP 2012/10/29 -->
*    READ DATASET P_INFILE INTO WA_FILE.
READ DATASET P_INFILE INTO WA_FILE-FIELD.
* Mod ES-UP 2012/10/29 -->
IF SY-SUBRC = 0.
*     内部テーブルに追加
APPEND WA_FILE TO IT_FILE.
ELSE.
*     取得終了
EXIT.
ENDIF.
ENDDO.

* ファイルクローズ
CLOSE DATASET P_INFILE.

* DEL-BEG 仕様変更 2010/10/21
** ファイルヘッダ行の削除
*  DELETE IT_FILE INDEX 1.
* DEL-END 仕様変更 2010/10/21

* 入力ファイルゼロ件
IF IT_FILE IS INITIAL.
*   処理対象データがありません
MESSAGE S204.
STOP.
ELSE.
*   タブで区切って編集
PERFORM SPLIT_FILE.
ENDIF.

ENDFORM.                    " GET_FILE_SERVER
*&---------------------------------------------------------------------*
*&      Form  SPLIT_FILE
*&---------------------------------------------------------------------*
*       入力ファイルをタブで区切る
*----------------------------------------------------------------------*
FORM SPLIT_FILE.

REFRESH IT_INFILE.

LOOP AT IT_FILE INTO WA_FILE.
CLEAR WA_INFILE.
* Mod ES-UP 2012/10/29 -->
*    SPLIT WA_FILE
SPLIT WA_FILE-field
* Mod ES-UP 2012/10/29 <--
* Mod ES-UP 2012/08/23 -->
*       AT CNS_TAB
AT CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
* Mod ES-UP 2012/08/23 <--
INTO WA_INFILE-WERKS   "プラント
WA_INFILE-MATNR   "品目
WA_INFILE-MENGE   "数量
WA_INFILE-LFDAT.  "納入期日
*   品目コードを内部変換
PERFORM CONVERSION_EXIT_MATN1_INPUT USING    WA_INFILE-MATNR
CHANGING WA_INFILE-MATNR.
*   納入期日の"/"を除去
PERFORM CONVERSION_LFDAT USING    WA_INFILE-LFDAT
CHANGING WA_INFILE-LFDAT.
APPEND WA_INFILE TO IT_INFILE.
ENDLOOP.

ENDFORM.                    " SPLIT_FILE
*&---------------------------------------------------------------------*
*&      Form  GET_FILE_LOCAL
*&---------------------------------------------------------------------*
*       ローカルファイル読込み
*----------------------------------------------------------------------*
FORM GET_FILE_LOCAL.

DATA : LV_FILENAME TYPE STRING.
* Add ES-UP 2012/08/23 -->
data L_CODEPAGE TYPE ABAP_ENCODING.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
* Add ES-UP 2012/08/23 <--
REFRESH IT_FILE.

LV_FILENAME = P_INFILE.

CALL FUNCTION 'GUI_UPLOAD'
EXPORTING
FILENAME                      = LV_FILENAME
* Add ES-UP 2012/08/23 -->
CODEPAGE                      = L_CODEPAGE
* Add ES-UP 2012/08/23 <--
TABLES
DATA_TAB                      = IT_FILE
EXCEPTIONS
FILE_OPEN_ERROR               = 1
FILE_READ_ERROR               = 2
NO_BATCH                      = 3
GUI_REFUSE_FILETRANSFER       = 4
INVALID_TYPE                  = 5
NO_AUTHORITY                  = 6
UNKNOWN_ERROR                 = 7
BAD_DATA_FORMAT               = 8
HEADER_NOT_ALLOWED            = 9
SEPARATOR_NOT_ALLOWED         = 10
HEADER_TOO_LONG               = 11
UNKNOWN_DP_ERROR              = 12
ACCESS_DENIED                 = 13
DP_OUT_OF_MEMORY              = 14
DISK_FULL                     = 15
DP_TIMEOUT                    = 16
OTHERS                        = 17.

IF SY-SUBRC <> 0.
*   入力ファイルのアップロードでエラーが発生しました
MESSAGE S400 WITH TEXT-M03.
STOP.
ENDIF.

* DEL-BEG 仕様変更 2010/10/21
** ファイルヘッダ行の削除
*  DELETE IT_FILE INDEX 1.
* DEL-END 仕様変更 2010/10/21

* 入力ファイルゼロ件
IF IT_FILE IS INITIAL.
*   処理対象データがありません
MESSAGE S204.
STOP.
ELSE.
*   タブで区切って編集
PERFORM SPLIT_FILE.
ENDIF.

ENDFORM.                    " GET_FILE_LOCAL
*&---------------------------------------------------------------------*
*&      Form  CHECK_FILE
*&---------------------------------------------------------------------*
*       事前チェック
*----------------------------------------------------------------------*
FORM CHECK_FILE.

DATA : LV_INDEX  TYPE SY-TABIX,
LV_FLG_E  TYPE C,
LT_INFILE TYPE STANDARD TABLE OF T_INFILE.

REFRESH IT_ERR.

LOOP AT IT_INFILE INTO WA_INFILE.

CLEAR LV_FLG_E.
*   行カウンタの退避
LV_INDEX = SY-TABIX.

*  【未入力チェック：プラント】
PERFORM CHECK_INITIAL      USING    WA_INFILE-WERKS
CHANGING LV_FLG_E.
IF LV_FLG_E = CNS_ON.
*     エラー情報格納
PERFORM EDIT_ERR_DATA USING LV_INDEX
TEXT-E01.
CONTINUE.
ENDIF.

*  【未入力チェック：品目コード】
PERFORM CHECK_INITIAL      USING    WA_INFILE-MATNR
CHANGING LV_FLG_E.
IF LV_FLG_E = CNS_ON.
*     エラー情報格納
PERFORM EDIT_ERR_DATA USING LV_INDEX
TEXT-E02.
CONTINUE.
ENDIF.

*  【未入力チェック：数量】
PERFORM CHECK_INITIAL      USING    WA_INFILE-MENGE
CHANGING LV_FLG_E.
IF LV_FLG_E = CNS_ON.
*     エラー情報格納
PERFORM EDIT_ERR_DATA USING LV_INDEX
TEXT-E03.
CONTINUE.
ENDIF.

*  【未入力チェック：納入期日】
PERFORM CHECK_INITIAL      USING    WA_INFILE-LFDAT
CHANGING LV_FLG_E.
IF LV_FLG_E = CNS_ON.
*     エラー情報格納
PERFORM EDIT_ERR_DATA USING LV_INDEX
TEXT-E04.
CONTINUE.
ENDIF.

*  【属性チェック：数量】
PERFORM CHECK_TYPE_MENGE   USING    WA_INFILE-MENGE
CHANGING LV_FLG_E.
IF LV_FLG_E = CNS_ON.
*     エラー情報格納
PERFORM EDIT_ERR_DATA USING LV_INDEX
TEXT-E05.
CONTINUE.
ENDIF.

*  【属性チェック：納入期日】
PERFORM CHECK_TYPE_LFDAT   USING    WA_INFILE-LFDAT
CHANGING LV_FLG_E.
IF LV_FLG_E = CNS_ON.
*     エラー情報格納
PERFORM EDIT_ERR_DATA USING LV_INDEX
TEXT-E06.
CONTINUE.
ENDIF.

*  【マスタ存在チェック：プラント】
PERFORM CHECK_MASTER_T001W USING    WA_INFILE-WERKS
CHANGING LV_FLG_E.
IF LV_FLG_E = CNS_ON.
*     エラー情報格納
PERFORM EDIT_ERR_DATA USING LV_INDEX
TEXT-E07.
CONTINUE.
ENDIF.

*  【マスタ存在チェック：品目コード】
PERFORM CHECK_MASTER_MARA  USING    WA_INFILE-MATNR
CHANGING LV_FLG_E.
IF LV_FLG_E = CNS_ON.
*     エラー情報格納
PERFORM EDIT_ERR_DATA USING LV_INDEX
TEXT-E08.
CONTINUE.
ENDIF.

*  【マスタ存在チェック：プラント×品目コード】
PERFORM CHECK_MASTER_MARC  USING    WA_INFILE-WERKS
WA_INFILE-MATNR
CHANGING LV_FLG_E.
IF LV_FLG_E = CNS_ON.
*     エラー情報格納
PERFORM EDIT_ERR_DATA USING LV_INDEX
TEXT-E09.
CONTINUE.
ENDIF.

*  【値チェック：数量】
PERFORM CHECK_VALUE_MENGE  USING    WA_INFILE-MENGE
CHANGING LV_FLG_E.
IF LV_FLG_E = CNS_ON.
*     エラー情報格納
PERFORM EDIT_ERR_DATA USING LV_INDEX
TEXT-E03.
CONTINUE.
ENDIF.

*   全チェックが正常の場合、正常データを格納する。
APPEND WA_INFILE TO LT_INFILE.
ENDLOOP.

REFRESH IT_INFILE.
IT_INFILE = LT_INFILE.

ENDFORM.                    " CHECK_FILE
*&---------------------------------------------------------------------*
*&      Form  CHECK_INITIAL
*&---------------------------------------------------------------------*
*       未入力チェック
*----------------------------------------------------------------------*
*      -->I_VALUE  入力ファイル値
*      <--O_FLG_E  エラーフラグ
*----------------------------------------------------------------------*
FORM CHECK_INITIAL USING    I_VALUE
CHANGING O_FLG_E.

* 入力ファイル値が未入力の場合、エラー
IF I_VALUE IS INITIAL.
O_FLG_E = CNS_ON.
ENDIF.

ENDFORM.                    " CHECK_INITIAL
*&---------------------------------------------------------------------*
*&      Form  EDIT_ERR_DATA
*&---------------------------------------------------------------------*
*       エラー情報格納
*----------------------------------------------------------------------*
*      -->I_INDEX  エラー行
*      -->I_MSG    エラーメッセージ
*----------------------------------------------------------------------*
FORM EDIT_ERR_DATA USING    I_INDEX
I_MSG.

CLEAR WA_ERR.
WA_ERR-INDEX = I_INDEX.          "インデックス
WA_ERR-WERKS = WA_INFILE-WERKS.  "プラント
WA_ERR-MATNR = WA_INFILE-MATNR.  "品目コード
WA_ERR-MENGE = WA_INFILE-MENGE.  "数量
WA_ERR-LFDAT = WA_INFILE-LFDAT.  "納入日付
WA_ERR-MSG   = I_MSG.            "エラーメッセージ
APPEND WA_ERR TO IT_ERR.

ENDFORM.                    " EDIT_ERR_DATA
*&---------------------------------------------------------------------*
*&      Form  CHECK_TYPE_MENGE
*&---------------------------------------------------------------------*
*       属性チェック：数量
*----------------------------------------------------------------------*
*      -->I_MENGE  数量
*      <--O_FLG_E  エラーフラグ
*----------------------------------------------------------------------*
FORM CHECK_TYPE_MENGE USING    I_MENGE
CHANGING O_FLG_E.

IF I_MENGE CN '1234567890. '.
*   数量に数値以外が含まれる場合、エラー
O_FLG_E = CNS_ON.
ENDIF.

ENDFORM.                    " CHECK_TYPE_MENGE
*&---------------------------------------------------------------------*
*&      Form  CHECK_TYPE_LFDAT
*&---------------------------------------------------------------------*
*       属性チェック：納入期日
*----------------------------------------------------------------------*
*      -->I_LFDAT  納入期日
*      <--O_FLG_E  エラーフラグ
*----------------------------------------------------------------------*
FORM CHECK_TYPE_LFDAT USING    I_LFDAT
CHANGING O_FLG_E.

DATA : LV_DATE      TYPE SY-DATUM.

LV_DATE = I_LFDAT.
CALL FUNCTION 'DATE_CHECK_PLAUSIBILITY'
EXPORTING
DATE                            = LV_DATE
EXCEPTIONS
PLAUSIBILITY_CHECK_FAILED       = 1
OTHERS                          = 2.

IF SY-SUBRC <> 0.
*   日付として妥当でない場合、エラー
O_FLG_E = CNS_ON.
ENDIF.

ENDFORM.                    " CHECK_TYPE_LFDAT
*&---------------------------------------------------------------------*
*&      Form  CHECK_MASTER_T001W
*&---------------------------------------------------------------------*
*       マスタ存在チェック：プラント
*----------------------------------------------------------------------*
*      -->I_WERKS  プラント
*      <--O_FLG_E  エラーフラグ
*----------------------------------------------------------------------*
FORM CHECK_MASTER_T001W USING    I_WERKS
CHANGING O_FLG_E.

DATA : LV_WERKS TYPE T001W-WERKS.

SELECT SINGLE WERKS
INTO LV_WERKS
FROM T001W
WHERE WERKS = I_WERKS.

IF SY-SUBRC <> 0.
*   マスタに存在しない場合、エラー
O_FLG_E = CNS_ON.
ENDIF.

ENDFORM.                    " CHECK_MASTER_T001W
*&---------------------------------------------------------------------*
*&      Form  CHECK_MASTER_MARA
*&---------------------------------------------------------------------*
*       マスタ存在チェック：品目コード
*----------------------------------------------------------------------*
*      -->I_MATNR  品目コード
*      <--O_FLG_E  エラーフラグ
*----------------------------------------------------------------------*
FORM CHECK_MASTER_MARA USING    I_MATNR
CHANGING O_FLG_E.

DATA : LV_MATNR TYPE MARA-MATNR.

SELECT SINGLE MATNR
INTO LV_MATNR
FROM MARA
WHERE MATNR = I_MATNR.

IF SY-SUBRC <> 0.
*   マスタに存在しない場合、エラー
O_FLG_E = CNS_ON.
ENDIF.

ENDFORM.                    " CHECK_MASTER_MARA
*&---------------------------------------------------------------------*
*&      Form  CHECK_MASTER_MARC
*&---------------------------------------------------------------------*
*       マスタ存在チェック：プラント×品目コード
*----------------------------------------------------------------------*
*      -->I_WERKS  プラント
*      -->I_MATNR  品目コード
*      <--O_FLG_E  エラーフラグ
*----------------------------------------------------------------------*
FORM CHECK_MASTER_MARC USING    I_WERKS
I_MATNR
CHANGING O_FLG_E.

DATA : LV_WERKS TYPE MARC-WERKS,
LV_MATNR TYPE MARC-MATNR.

SELECT SINGLE MATNR WERKS
INTO (LV_MATNR, LV_WERKS)
FROM MARC
WHERE MATNR = I_MATNR
AND WERKS = I_WERKS.

IF SY-SUBRC <> 0.
*   マスタに存在しない場合、エラー
O_FLG_E = CNS_ON.
ENDIF.

ENDFORM.                    " CHECK_MASTER_MARC
*&---------------------------------------------------------------------*
*&      Form  CHECK_VALUE_MENGE
*&---------------------------------------------------------------------*
*       値チェック：数量
*----------------------------------------------------------------------*
*      -->I_MENGE  数量
*      <--O_FLG_E  エラーフラグ
*----------------------------------------------------------------------*
FORM CHECK_VALUE_MENGE USING    I_MENGE
CHANGING O_FLG_E.

DATA : LV_MENGE  TYPE EBAN-MENGE.

LV_MENGE = I_MENGE.

IF LV_MENGE = 0.
*   数量がゼロの場合、エラー
O_FLG_E = CNS_ON.
ENDIF.

ENDFORM.                    " CHECK_VALUE_MENGE
*&---------------------------------------------------------------------*
*&      Form  REQUISITION_CREATE
*&---------------------------------------------------------------------*
*       購買依頼伝票登録
*----------------------------------------------------------------------*
FORM REQUISITION_CREATE.

DATA : LV_NUMBER TYPE BAPIEBANC-PREQ_NO.

* チェックエラーでないデータが存在する場合のみ
CHECK NOT IT_INFILE IS INITIAL.

REFRESH: IT_ITEMS,IT_RETURN.
CLEAR V_MSG.

* 編集
PERFORM EDIT_BAPI_DATA.

* 登録
CALL FUNCTION 'BAPI_REQUISITION_CREATE'
IMPORTING
NUMBER                               = LV_NUMBER
TABLES
REQUISITION_ITEMS                    = IT_ITEMS
RETURN                               = IT_RETURN.

* 伝票登録正常
IF NOT LV_NUMBER IS INITIAL.
*   コミット
PERFORM BAPI_TRANSACTION_COMMIT.
*   処理結果メッセージの設定
*   購買依頼番号 XXXXXXXXXX が登録されました
CONCATENATE TEXT-M07 LV_NUMBER TEXT-M08
INTO V_MSG
SEPARATED BY SPACE.

* 伝票登録エラー
ELSE.
*   ロールバック
PERFORM BAPI_TRANSACTION_ROLLBACK.
*   処理結果メッセージの設定
*   BAPIから返却されたメッセージを出力
READ TABLE IT_RETURN INTO WA_RETURN
WITH KEY TYPE = CNS_TYPE_E.
IF SY-SUBRC = 0.
V_MSG = WA_RETURN-MESSAGE.
ENDIF.
ENDIF.

ENDFORM.                    " REQUISITION_CREATE
*&---------------------------------------------------------------------*
*&      Form  EDIT_BAPI_DATA
*&---------------------------------------------------------------------*
*       編集
*----------------------------------------------------------------------*
FORM EDIT_BAPI_DATA.

LOOP AT IT_INFILE  INTO WA_INFILE.
CLEAR WA_ITEMS.
WA_ITEMS-DOC_TYPE    = CNS_TYPE_NB.      "購買依頼伝票タイプ
WA_ITEMS-MATERIAL    = WA_INFILE-MATNR.  "品目コード
WA_ITEMS-PLANT       = WA_INFILE-WERKS.  "プラント
WA_ITEMS-QUANTITY    = WA_INFILE-MENGE.  "購買依頼数量
WA_ITEMS-DELIV_DATE  = WA_INFILE-LFDAT.  "明細納入期日
WA_ITEMS-GR_IND      = 'X'  .            "入庫
WA_ITEMS-IR_IND      = 'X' .             "請求

APPEND WA_ITEMS TO IT_ITEMS.
ENDLOOP.

ENDFORM.                    " EDIT_BAPI_DATA
*&---------------------------------------------------------------------*
*&      Form  BAPI_TRANSACTION_COMMIT
*&---------------------------------------------------------------------*
*       コミット
*----------------------------------------------------------------------*
FORM BAPI_TRANSACTION_COMMIT.

CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
EXPORTING
WAIT          = CNS_ON.

ENDFORM.                    " BAPI_TRANSACTION_COMMIT
*&---------------------------------------------------------------------*
*&      Form  BAPI_TRANSACTION_ROLLBACK
*&---------------------------------------------------------------------*
*       ロールバック
*----------------------------------------------------------------------*
FORM BAPI_TRANSACTION_ROLLBACK.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

ENDFORM.                    " BAPI_TRANSACTION_ROLLBACK
*&---------------------------------------------------------------------*
*&      Form  OUT_ERRFILE
*&---------------------------------------------------------------------*
*       エラーファイル出力
*----------------------------------------------------------------------*
FORM OUT_ERRFILE.

* チェックエラーデータが存在する場合のみ
CHECK NOT IT_ERR IS INITIAL.

REFRESH IT_ERRFILE.

* ファイルヘッダ行追加
CLEAR WA_ERRFILE.
CONCATENATE TEXT-H02  "プラント
TEXT-H03  "品目コード
TEXT-H04  "数量
TEXT-H05  "納入期日
TEXT-H06  "エラーメッセージ
* Mod ES-UP 2012/10/29 -->
*         INTO WA_ERRFILE
INTO WA_ERRFILE-field
* Mod ES-UP 2012/10/29 <--
* Mod ES-UP 2012/08/23 -->
*    SEPARATED BY CNS_TAB.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/23 <--
APPEND WA_ERRFILE TO IT_ERRFILE.

LOOP AT IT_ERR INTO WA_ERR.
*   元の入力ファイルデータを取得する
CLEAR: WA_FILE,WA_ERRFILE.
READ TABLE IT_FILE INTO WA_FILE INDEX WA_ERR-INDEX.
* Mod ES-UP 2012/10/29 -->
*    CONCATENATE WA_FILE WA_ERR-MSG
CONCATENATE WA_FILE-field WA_ERR-MSG
*           INTO WA_ERRFILE
INTO WA_ERRFILE-field
* Mod ES-UP 2012/10/29 -->

* Mod ES-UP 2012/08/23 -->
*      SEPARATED BY CNS_TAB.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/23 <--
APPEND WA_ERRFILE TO IT_ERRFILE.
ENDLOOP.

CASE CNS_ON.
*   サーバ選択時
WHEN R_SERVER.
PERFORM OUT_FILE_SERVER.

*   ローカル選択時
WHEN R_LOCAL.
PERFORM OUT_FILE_LOCAL.

WHEN OTHERS.
ENDCASE.

ENDFORM.                    " OUT_ERRFILE
*&---------------------------------------------------------------------*
*&      Form  OUT_FILE_SERVER
*&---------------------------------------------------------------------*
*       サーバファイル出力
*----------------------------------------------------------------------*
FORM OUT_FILE_SERVER.
* Add ES-UP 2012/08/23 -->
DATA L_CODEPAGE TYPE ABAP_ENCODING.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
* Add ES-UP 2012/08/23 <--
* ファイルオープン
* Mod ES-UP 2012/08/23 -->
*  OPEN DATASET P_ERFILE FOR OUTPUT IN TEXT MODE.
OPEN DATASET P_ERFILE FOR OUTPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
* Mod ES-UP 2012/08/23 <--
IF SY-SUBRC <> 0.
*   エラーファイルのオープンでエラーが発生しました
MESSAGE S400 WITH TEXT-M04.
STOP.
ENDIF.

* 出力
LOOP AT IT_ERRFILE INTO WA_ERRFILE.
* Mod ES-UP 2012/10/29 -->
*    TRANSFER WA_ERRFILE TO P_ERFILE.
TRANSFER WA_ERRFILE-field TO P_ERFILE.
* Mod ES-UP 2012/10/29 <--
ENDLOOP.

* ファイルクローズ
CLOSE DATASET P_ERFILE.

ENDFORM.                    " OUT_FILE_SERVER
*&---------------------------------------------------------------------*
*&      Form  OUT_FILE_LOCAL
*&---------------------------------------------------------------------*
*       ローカルファイル出力
*----------------------------------------------------------------------*
FORM OUT_FILE_LOCAL.

DATA : LV_FILENAME TYPE STRING.
* Add ES-UP 2012/08/23 -->
DATA L_CODEPAGE TYPE ABAP_ENCODING.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
* Add ES-UP 2012/08/23 <--

LV_FILENAME = P_ERFILE.

CALL FUNCTION 'GUI_DOWNLOAD'
EXPORTING
FILENAME                      = LV_FILENAME
* Add ES-UP 2012/08/23 -->
CODEPAGE                      = L_CODEPAGE
* Add ES-UP 2012/08/23 <--
TABLES
DATA_TAB                      = IT_ERRFILE
EXCEPTIONS
FILE_WRITE_ERROR              = 1
NO_BATCH                      = 2
GUI_REFUSE_FILETRANSFER       = 3
INVALID_TYPE                  = 4
NO_AUTHORITY                  = 5
UNKNOWN_ERROR                 = 6
HEADER_NOT_ALLOWED            = 7
SEPARATOR_NOT_ALLOWED         = 8
FILESIZE_NOT_ALLOWED          = 9
HEADER_TOO_LONG               = 10
DP_ERROR_CREATE               = 11
DP_ERROR_SEND                 = 12
DP_ERROR_WRITE                = 13
UNKNOWN_DP_ERROR              = 14
ACCESS_DENIED                 = 15
DP_OUT_OF_MEMORY              = 16
DISK_FULL                     = 17
DP_TIMEOUT                    = 18
FILE_NOT_FOUND                = 19
DATAPROVIDER_EXCEPTION        = 20
CONTROL_FLUSH_ERROR           = 21
OTHERS                        = 22.

IF SY-SUBRC <> 0.
*   エラーファイルの出力でエラーが発生しました
MESSAGE S400 WITH TEXT-M05.
STOP.
ENDIF.

ENDFORM.                    " OUT_FILE_LOCAL
*&---------------------------------------------------------------------*
*&      Form  OUT_RESULT
*&---------------------------------------------------------------------*
*       処理結果出力
*----------------------------------------------------------------------*
FORM OUT_RESULT.

* 事前チェックエラーが存在する場合
IF NOT IT_ERR IS INITIAL.
*   エラーがあります。エラーファイルを確認してください
MESSAGE I400 WITH TEXT-M06.
ENDIF.

* 伝票登録正常orエラーメッセージ
CHECK NOT V_MSG IS INITIAL.
MESSAGE S400 WITH V_MSG.

ENDFORM.                    " OUT_RESULT
*&---------------------------------------------------------------------*
*&      Form  CONVERSION_EXIT_MATN1_INPUT
*&---------------------------------------------------------------------*
*       品目コードの内部変換
*----------------------------------------------------------------------*
*      -->I_MATNR  変換前
*      <--O_MATNR  変換後
*----------------------------------------------------------------------*
FORM CONVERSION_EXIT_MATN1_INPUT USING    I_MATNR
CHANGING O_MATNR.

CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
EXPORTING
INPUT              = I_MATNR
IMPORTING
OUTPUT             = O_MATNR
EXCEPTIONS
LENGTH_ERROR       = 1
OTHERS             = 2.

IF SY-SUBRC <> 0.
O_MATNR = I_MATNR.
ENDIF.

ENDFORM.                    " CONVERSION_EXIT_MATN1_INPUT
*&---------------------------------------------------------------------*
*&      Form  CONVERSION_LFDAT
*&---------------------------------------------------------------------*
*       納入期日の"/"を除去
*----------------------------------------------------------------------*
*      -->I_LFDAT  変換前
*      <--O_LFDAT  変換後
*----------------------------------------------------------------------*
FORM CONVERSION_LFDAT USING    I_LFDAT
CHANGING O_LFDAT.

DATA : LV_YY(4) TYPE C,
LV_MM(2) TYPE C,
LV_DD(2) TYPE C,
LV_CNT   TYPE I.

* "/"が含まれるか検索
SEARCH I_LFDAT FOR '/'.
IF SY-SUBRC <> 0.
*   "/"が含まれない場合はそのまま返却
O_LFDAT = I_LFDAT.
EXIT.
ENDIF.

* "/"で分割する
SPLIT I_LFDAT
AT '/'
INTO LV_YY
LV_MM
LV_DD.

* 年が1桁の場合、前ゼロをつける
LV_CNT = STRLEN( LV_MM ).
IF LV_CNT = 1.
CONCATENATE '0' LV_MM
INTO LV_MM.
ENDIF.

* 月が1桁の場合、前ゼロをつける
CLEAR LV_CNT.
LV_CNT = STRLEN( LV_DD ).
IF LV_CNT = 1.
CONCATENATE '0' LV_DD
INTO LV_DD.
ENDIF.

* 変換後の日付を返却
CONCATENATE LV_YY LV_MM LV_DD
INTO O_LFDAT.

ENDFORM.                    " CONVERSION_LFDAT
*&---------------------------------------------------------------------*
*&      Form  OUT_ERRLIST
*&---------------------------------------------------------------------*
*       エラー対象一覧出力
*----------------------------------------------------------------------*
FORM OUT_ERRLIST.

* チェックエラーデータが存在する場合のみ
CHECK NOT IT_ERR IS INITIAL.

LOOP AT IT_ERR INTO WA_ERR.
AT FIRST.
*     ヘッダ出力
PERFORM OUT_HEADER_ERRLIST.
ENDAT.

WRITE: /002 WA_ERR-WERKS,  "プラント
012 WA_ERR-MATNR,  "品目コード
032 WA_ERR-MENGE,  "数量
050 WA_ERR-LFDAT,  "納入期日
062 WA_ERR-MSG.    "エラーメッセージ
ENDLOOP.

ENDFORM.                    " OUT_ERRLIST
*&---------------------------------------------------------------------*
*&      Form  OUT_HEADER_ERRLIST
*&---------------------------------------------------------------------*
*       ヘッダ出力(エラーリスト)
*----------------------------------------------------------------------*
FORM OUT_HEADER_ERRLIST.

WRITE:  001 TEXT-H01.  "*** エラー対象一覧 ***
SKIP 1.
WRITE: /002 TEXT-H02,  "プラント
012 TEXT-H03,  "品目コード
032 TEXT-H04,  "数量
050 TEXT-H05,  "納入期日
062 TEXT-H06.  "エラーメッセージ
ENDFORM.                    " OUT_HEADER_ERRLIST
