*----------------------------------------------------------------------*
*  検収関連バリアント変数登録                                          *
*    機能：選択画面で指定された内容で、TVARVにエントリを追加する       *
*          次の形式で変数名が作成される                                *
*            YK01_310_20020705_01                                      *
*            YK01：変数名（選択画面で指定）                            *
*                 310：クライアント（TVARVはクライアント非依存）       *
*                     2002：年（選択画面で指定）                       *
*                         07：月（選択画面で指定）                     *
*                           05：日（締日ごとの入力欄が選択画面に存在） *
*                              01：ジョブの種類                        *
*                                  01：請求書                          *
*                                  02：売掛金                          *
*                                  03：買掛金                          *
*          選択画面で指定した日付が、上記変数名のエントリの値として    *
*          格納される                                                  *
*          既に登録済の締日に対して再度登録する場合は、既存データの    *
*          削除をチェックする                                          *
*          過去データの削除を行う場合は、指定した年月以前のデータを    *
*          削除する                                                    *
*    作成：2002/07/17 KURANO                                           *
*    変更：2002/07/30 KURANO 過去データ削除の追加                      *
*&[改定履歴]
*& YYYY/MM/DD  Programar         Description
*& 2012/09/24  ISID              ES-UP
*----------------------------------------------------------------------*
REPORT zzkura49 .

* 使用テーブル
* Del ES-UP 2012/09/24 -->
*TABLES tvarv. "選択基準での変数テーブル
* Del ES-UP 2012/09/24 <--
* グローバル変数
* Mod ES-UP 2012/09/24 -->
*DATA w_name LIKE tvarv-name.
*DATA i_tvarv LIKE STANDARD TABLE OF tvarv WITH HEADER LINE.
*DATA i_tvarv2 LIKE STANDARD TABLE OF tvarv WITH HEADER LINE.
DATA: w_name    type tvarvc-name,
i_tvarvc  type STANDARD TABLE OF tvarvc,
i_tvarvc2 type STANDARD TABLE OF tvarvc.
* Mod ES-UP 2012/09/24 <--
* 選択画面
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE w_b1.
SELECTION-SCREEN BEGIN OF LINE. "年月
SELECTION-SCREEN COMMENT 1(10) w_yyyymm FOR FIELD p_yyyy.
PARAMETERS p_yyyy(4) TYPE n.
PARAMETERS p_mm(2) TYPE n.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END   OF BLOCK b1.
SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE w_b2.
SELECTION-SCREEN BEGIN OF LINE. "列ヘッダ
SELECTION-SCREEN COMMENT 1(10) w_h1.
SELECTION-SCREEN COMMENT 12(10) w_h2.
SELECTION-SCREEN COMMENT 23(10) w_h3.
SELECTION-SCREEN COMMENT 34(10) w_h4.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.                             "05日締
SELECTION-SCREEN COMMENT 1(10) w_05.
PARAMETERS p_05_01 LIKE sy-datum.
PARAMETERS p_05_02 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.                             "10日締
SELECTION-SCREEN COMMENT 1(10) w_10.
PARAMETERS p_10_01 LIKE sy-datum.
PARAMETERS p_10_02 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.                             "15日締
SELECTION-SCREEN COMMENT 1(10) w_15.
PARAMETERS p_15_01 LIKE sy-datum.
PARAMETERS p_15_02 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.                             "20日締
SELECTION-SCREEN COMMENT 1(10) w_20.
PARAMETERS p_20_01 LIKE sy-datum.
PARAMETERS p_20_02 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.                             "25日締
SELECTION-SCREEN COMMENT 1(10) w_25.
PARAMETERS p_25_01 LIKE sy-datum.
PARAMETERS p_25_02 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "末日締
SELECTION-SCREEN COMMENT 1(10) w_31.
PARAMETERS p_31_01 LIKE sy-datum.
PARAMETERS p_31_02 LIKE sy-datum.
PARAMETERS p_31_03 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END   OF BLOCK b2.
SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE w_b3.
SELECTION-SCREEN BEGIN OF LINE. "既存データ削除
PARAMETERS p_del AS CHECKBOX.
SELECTION-SCREEN COMMENT 3(20) w_b3_1.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "テスト
PARAMETERS p_test AS CHECKBOX.
SELECTION-SCREEN COMMENT 3(20) w_b3_4.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "クライアント
SELECTION-SCREEN COMMENT 1(20) w_b3_2.
PARAMETERS p_mandt LIKE sy-mandt.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "変数名
SELECTION-SCREEN COMMENT 1(20) w_b3_3.
PARAMETERS p_name(4) TYPE c.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "過去データ削除
PARAMETERS p_del2 AS CHECKBOX.
SELECTION-SCREEN COMMENT 3(20) w_b3_5.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "削除対象年月
SELECTION-SCREEN COMMENT 1(12) w_yyyym2 FOR FIELD p_yyyy2.
PARAMETERS p_yyyy2(4) TYPE n.
PARAMETERS p_mm2(2) TYPE n.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END   OF BLOCK b3.

*----------------------------------------------------------------------*
INITIALIZATION.
* コメント
w_b1 = '月度'.
w_b2 = '実行日'.
w_b3 = '実行条件'.
w_yyyymm = '年月'.
w_h1 = '締日'.
w_h2 = '請求書'.
w_h3 = '売掛金'.
w_h4 = '買掛金'.
w_05 = '05日締'.
w_10 = '10日締'.
w_15 = '15日締'.
w_20 = '20日締'.
w_25 = '25日締'.
w_31 = '末日締'.
w_b3_1 = '既存データ削除'.
w_b3_2 = 'クライアント'.
w_b3_3 = '変数名'.
w_b3_4 = 'テスト実行'.
w_b3_5 = '過去データ削除'.
w_yyyym2 = '削除対象年月'.
* 初期値
p_yyyy = sy-datum+0(4).
p_mm = sy-datum+4(2).
IF p_mm = 12.
p_yyyy = p_yyyy + 1.
p_mm = 1.
ELSE.
p_mm = p_mm + 1.
ENDIF.
p_mandt = sy-mandt.
p_name = 'YK01'.
p_del2 = 'X'.
IF p_mm > 6.
p_mm2 = p_mm - 6.
p_yyyy2 = p_yyyy.
ELSE.
p_mm2 = p_mm + 6.
p_yyyy2 = p_yyyy - 1.
ENDIF.

AT SELECTION-SCREEN.
* 既存データのチェック
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '%'
INTO w_name.
SELECT        *
* Mod ES-UP 2012/09/24 -->
*         FROM   tvarv
*         INTO   TABLE i_tvarv
FROM   tvarvc
INTO   TABLE i_tvarvc
* Mod ES-UP 2012/09/24 <--
WHERE  name  LIKE w_name.
IF sy-dbcnt > 0 AND p_del = ''.
MESSAGE e401(y1) WITH 'バリアント変数が登録済です' w_name.
ENDIF.

START-OF-SELECTION.
* 登録データ作成
PERFORM f_make.
* 過去データ作成
PERFORM f_make2.
* 登録データ一覧
PERFORM f_print.
IF p_test = ''.
IF p_del = 'X'.
*     既存データ削除
PERFORM f_del.
ENDIF.
*   データ登録
PERFORM f_insert.
*   過去データ削除
IF p_del2 = 'X'.
PERFORM f_del2.
ENDIF.
ENDIF.

*---------------------------------------------------------------------*
*       FORM f_del                                                    *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_del.
* ローカル変数
DATA w_delcnt LIKE sy-dbcnt.
DATA w_errcnt LIKE sy-dbcnt.
* Add ES-UP 2012/09/24 -->
data l_tvarvc type tvarvc.
* Add ES-UP 2012/09/24 <--
CLEAR: w_delcnt, w_errcnt.
* 既存データ削除
* Mod ES-UP 2012/09/24 -->
*  LOOP AT i_tvarv.
LOOP AT i_tvarvc into l_tvarvc.
* Mod ES-UP 2012/09/24 <--
*   ロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'ENQUEUE_ESVARV'
*         EXPORTING
*              name           = i_tvarv-name
*              type           = i_tvarv-type
*              numb           = i_tvarv-numb
CALL FUNCTION 'ENQUEUE_ESVARVC'
EXPORTING
name           = l_tvarvc-name
type           = l_tvarvc-type
numb           = l_tvarvc-numb
* Mod ES-UP 2012/09/24 <--
EXCEPTIONS
foreign_lock   = 1
system_failure = 2
OTHERS         = 3.
IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.
*   削除
* Mod ES-UP 2012/09/24 -->
*    DELETE tvarv FROM i_tvarv.
DELETE tvarvc FROM l_tvarvc.
* Mod ES-UP 2012/09/24 <--
IF sy-subrc = 0.
ADD 1 TO w_delcnt.
ELSE.
ADD 1 TO w_errcnt.
ENDIF.
*   アンロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'DEQUEUE_ESVARV'
*         EXPORTING
*              name = i_tvarv-name
*              type = i_tvarv-type
*              numb = i_tvarv-numb.
CALL FUNCTION 'DEQUEUE_ESVARVC'
EXPORTING
name = l_tvarvc-name
type = l_tvarvc-type
numb = l_tvarvc-numb.
* Mod ES-UP 2012/09/24 <--
ENDLOOP.
* 結果報告
IF w_delcnt > 0.
MESSAGE i402(y1) WITH
'TVARVからデータを削除しました：' w_delcnt '件'.
ENDIF.
IF w_errcnt > 0.
MESSAGE i402(y1) WITH
'TVARVからデータを削除できませんでした：' w_errcnt '件'.
ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_make                                                   *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_make.
* Mod ES-UP 2012/09/24 -->
*  REFRESH i_tvarv.
data l_tvarvc type tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
*  i_tvarv-type = 'P'.    "PARAMETERS
*  i_tvarv-numb = '0000'. "Pの場合は0000
*  i_tvarv-sign = 'I'.    "含む
*  i_tvarv-opti = 'EQ'.   "等しい
*  i_tvarv-high = ''.
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '05_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_05_01.
*  APPEND i_tvarv.
l_tvarvc-type = 'P'.    "PARAMETERS
l_tvarvc-numb = '0000'. "Pの場合は0000
l_tvarvc-sign = 'I'.    "含む
l_tvarvc-opti = 'EQ'.   "等しい
l_tvarvc-high = ''.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '05_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_05_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '05_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_05_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '05_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_05_02.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '10_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_10_01.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '10_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_10_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '10_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_10_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '10_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_10_02.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '15_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_15_01.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '15_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_15_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '15_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_15_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '15_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_15_02.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '20_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_20_01.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '20_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_20_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '20_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_20_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '20_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_20_02.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '25_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_25_01.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '25_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_25_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '25_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_25_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '25_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_25_02.
APPEND l_tvarvc to i_tvarvc.
**2002.08.02 ADD >>>
DATA:W_DATE LIKE SY-DATUM,
W_MATUBI(2) TYPE N.

CALL FUNCTION 'Z_FDATA_FOR_PERIOD_CLOSING'
EXPORTING
YEAR                    = P_YYYY
MON                     = P_MM
DAY                     = '00'
IMPORTING
*     THR_MONTHS_BEFORE       = W_DATE_DUMMY1
*     TWO_MONTHS_BEFORE       = W_DATE_DUMMY2
*     ONE_MONTH_BEFORE        = W_DATE_DUMMY3
THIS_MONTH              = W_DATE
*     NEXT_MONTH              = W_DATE_DUMMY4
EXCEPTIONS
MONTH_ERROR             = 1
OTHERS                  = 2
.
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
W_MATUBI = W_DATE+6(2).
**2002.08.02 ADD <<<
* Mod ES-UP 2012/09/24 -->
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_31_01.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_31_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_31_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_31_02.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_03'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_31_03.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_03'
INTO l_tvarvc-name.
l_tvarvc-low = p_31_03.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_print                                                  *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_print.
* Add ES-UP 2012/09/24 -->
data: l_tvarvc  type tvarvc,
l_tvarvc2 type tvarvc.
* Add ES-UP 2012/09/24 <--
* 登録データ
* Mod ES-UP 2012/09/24 -->
*  LOOP AT i_tvarv.
*    WRITE: / i_tvarv-name,
*             i_tvarv-type,
*             i_tvarv-numb,
*             i_tvarv-sign,
*             i_tvarv-opti,
*             i_tvarv-low,
*             i_tvarv-high.
LOOP AT i_tvarvc into l_tvarvc.
WRITE: / l_tvarvc-name,
l_tvarvc-type,
l_tvarvc-numb,
l_tvarvc-sign,
l_tvarvc-opti,
l_tvarvc-low,
l_tvarvc-high.
* Mod ES-UP 2012/09/24 <--
ENDLOOP.
* 過去データ
* Mod ES-UP 2012/09/24 -->
*  LOOP AT i_tvarv2.
LOOP AT i_tvarvc2 into l_tvarvc2.
* Mod ES-UP 2012/09/24 <--
AT FIRST.
ULINE.
WRITE: / '削除した過去データ'.
ENDAT.
* Mod ES-UP 2012/09/24 -->
*    WRITE: / i_tvarv2-name,
*             i_tvarv2-type,
*             i_tvarv2-numb,
*             i_tvarv2-sign,
*             i_tvarv2-opti,
*             i_tvarv2-low,
*             i_tvarv2-high.
WRITE: / l_tvarvc2-name,
l_tvarvc2-type,
l_tvarvc2-numb,
l_tvarvc2-sign,
l_tvarvc2-opti,
l_tvarvc2-low,
l_tvarvc2-high.
* Mod ES-UP 2012/09/24 <--
ENDLOOP.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_insert                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_insert.
* ローカル変数
DATA w_inscnt LIKE sy-dbcnt.
DATA w_errcnt LIKE sy-dbcnt.
* Add ES-UP 2012/09/24 -->
data l_tvarvc type tvarvc.
* Add ES-UP 2012/09/24 <--
CLEAR: w_inscnt, w_errcnt.
* データ登録
* Mod ES-UP 2012/09/24 -->
*  LOOP AT i_tvarv.
LOOP AT i_tvarvc into l_tvarvc.
* Mod ES-UP 2012/09/24 <--
*   ロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'ENQUEUE_ESVARV'
*         EXPORTING
*              name           = i_tvarv-name
*              type           = i_tvarv-type
*              numb           = i_tvarv-numb
CALL FUNCTION 'ENQUEUE_ESVARVC'
EXPORTING
name           = l_tvarvc-name
type           = l_tvarvc-type
numb           = l_tvarvc-numb
* Mod ES-UP 2012/09/24 <--
EXCEPTIONS
foreign_lock   = 1
system_failure = 2
OTHERS         = 3.
IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.
*   登録
* Mod ES-UP 2012/09/24 -->
*    INSERT INTO tvarv VALUES i_tvarv.
INSERT INTO tvarvc VALUES l_tvarvc.
* Mod ES-UP 2012/09/24 <--
IF sy-subrc = 0.
ADD 1 TO w_inscnt.
ELSE.
ADD 1 TO w_errcnt.
ENDIF.
*   アンロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'DEQUEUE_ESVARV'
*         EXPORTING
*              name = i_tvarv-name
*              type = i_tvarv-type
*              numb = i_tvarv-numb.
CALL FUNCTION 'DEQUEUE_ESVARVC'
EXPORTING
name = l_tvarvc-name
type = l_tvarvc-type
numb = l_tvarvc-numb.
* Mod ES-UP 2012/09/24 <--
ENDLOOP.
* 結果報告
IF w_inscnt > 0.
MESSAGE i402(y1) WITH
'TVARVへデータを登録しました：' w_inscnt '件'.
ENDIF.
IF w_errcnt > 0.
MESSAGE i402(y1) WITH
'TVARVへデータを登録できませんでした：' w_errcnt '件'.
ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_del2                                                   *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_del2.
* ローカル変数
DATA w_name2 LIKE tvarv-name.
DATA w_low LIKE tvarv-low.
DATA w_delcnt LIKE sy-dbcnt.
DATA w_errcnt LIKE sy-dbcnt.
* Add ES-UP 2012/09/24 -->
data l_tvarvc2 type tvarvc.
* Add ES-UP 2012/09/24 <--
CLEAR: w_delcnt, w_errcnt.
* 削除
* Mod ES-UP 2012/09/24 -->
*  LOOP AT i_tvarv2.
LOOP AT i_tvarvc2 into l_tvarvc2.
* Mod ES-UP 2012/09/24 <--
*   ロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'ENQUEUE_ESVARV'
*         EXPORTING
*              name           = i_tvarv2-name
*              type           = i_tvarv2-type
*              numb           = i_tvarv2-numb
CALL FUNCTION 'ENQUEUE_ESVARVC'
EXPORTING
name           = l_tvarvc2-name
type           = l_tvarvc2-type
numb           = l_tvarvc2-numb
* Mod ES-UP 2012/09/24 <--
EXCEPTIONS
foreign_lock   = 1
system_failure = 2
OTHERS         = 3.
IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.
*   削除
* Mod ES-UP 2012/09/24 -->
*    DELETE tvarv FROM i_tvarv2.
DELETE tvarvc FROM l_tvarvc2.
* Mod ES-UP 2012/09/24 <--
IF sy-subrc = 0.
ADD 1 TO w_delcnt.
ELSE.
ADD 1 TO w_errcnt.
ENDIF.
*   アンロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'DEQUEUE_ESVARV'
*         EXPORTING
*              name = i_tvarv2-name
*              type = i_tvarv2-type
*              numb = i_tvarv2-numb.
CALL FUNCTION 'DEQUEUE_ESVARVC'
EXPORTING
name = l_tvarvc2-name
type = l_tvarvc2-type
numb = l_tvarvc2-numb.
* Mod ES-UP 2012/09/24 <--
ENDLOOP.
* 結果報告
IF w_delcnt > 0.
MESSAGE i402(y1) WITH
'TVARVから過去データを削除しました：' w_delcnt '件'.
ENDIF.
IF w_errcnt > 0.
MESSAGE i402(y1) WITH
'TVARVから過去データを削除できませんでした：' w_errcnt '件'.
ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_make2                                                  *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_make2.
* ローカル変数
DATA w_name2 LIKE tvarv-name.
DATA w_low LIKE tvarv-low.
* 削除対象データの検索
CONCATENATE p_name '_' p_mandt '_%' INTO w_name2.
CONCATENATE p_yyyy2 p_mm2 '32' INTO w_low.
SELECT        *
* Mod ES-UP 2012/09/24 -->
*         FROM   tvarv
*         INTO   TABLE i_tvarv2
FROM   tvarvc
INTO   TABLE i_tvarvc2
* Mod ES-UP 2012/09/24 <--
WHERE  name  LIKE w_name2
AND  low   <    w_low.
ENDFORM.
*----------------------------------------------------------------------*
*  検収関連バリアント変数登録                                          *
*    機能：選択画面で指定された内容で、TVARVにエントリを追加する       *
*          次の形式で変数名が作成される                                *
*            YK01_310_20020705_01                                      *
*            YK01：変数名（選択画面で指定）                            *
*                 310：クライアント（TVARVはクライアント非依存）       *
*                     2002：年（選択画面で指定）                       *
*                         07：月（選択画面で指定）                     *
*                           05：日（締日ごとの入力欄が選択画面に存在） *
*                              01：ジョブの種類                        *
*                                  01：請求書                          *
*                                  02：売掛金                          *
*                                  03：買掛金                          *
*          選択画面で指定した日付が、上記変数名のエントリの値として    *
*          格納される                                                  *
*          既に登録済の締日に対して再度登録する場合は、既存データの    *
*          削除をチェックする                                          *
*          過去データの削除を行う場合は、指定した年月以前のデータを    *
*          削除する                                                    *
*    作成：2002/07/17 KURANO                                           *
*    変更：2002/07/30 KURANO 過去データ削除の追加                      *
*&[改定履歴]
*& YYYY/MM/DD  Programar         Description
*& 2012/09/24  ISID              ES-UP
*----------------------------------------------------------------------*
REPORT zzkura49 .

* 使用テーブル
* Del ES-UP 2012/09/24 -->
*TABLES tvarv. "選択基準での変数テーブル
* Del ES-UP 2012/09/24 <--
* グローバル変数
* Mod ES-UP 2012/09/24 -->
*DATA w_name LIKE tvarv-name.
*DATA i_tvarv LIKE STANDARD TABLE OF tvarv WITH HEADER LINE.
*DATA i_tvarv2 LIKE STANDARD TABLE OF tvarv WITH HEADER LINE.
DATA: w_name    type tvarvc-name,
i_tvarvc  type STANDARD TABLE OF tvarvc,
i_tvarvc2 type STANDARD TABLE OF tvarvc.
* Mod ES-UP 2012/09/24 <--
* 選択画面
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE w_b1.
SELECTION-SCREEN BEGIN OF LINE. "年月
SELECTION-SCREEN COMMENT 1(10) w_yyyymm FOR FIELD p_yyyy.
PARAMETERS p_yyyy(4) TYPE n.
PARAMETERS p_mm(2) TYPE n.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END   OF BLOCK b1.
SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE w_b2.
SELECTION-SCREEN BEGIN OF LINE. "列ヘッダ
SELECTION-SCREEN COMMENT 1(10) w_h1.
SELECTION-SCREEN COMMENT 12(10) w_h2.
SELECTION-SCREEN COMMENT 23(10) w_h3.
SELECTION-SCREEN COMMENT 34(10) w_h4.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.                             "05日締
SELECTION-SCREEN COMMENT 1(10) w_05.
PARAMETERS p_05_01 LIKE sy-datum.
PARAMETERS p_05_02 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.                             "10日締
SELECTION-SCREEN COMMENT 1(10) w_10.
PARAMETERS p_10_01 LIKE sy-datum.
PARAMETERS p_10_02 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.                             "15日締
SELECTION-SCREEN COMMENT 1(10) w_15.
PARAMETERS p_15_01 LIKE sy-datum.
PARAMETERS p_15_02 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.                             "20日締
SELECTION-SCREEN COMMENT 1(10) w_20.
PARAMETERS p_20_01 LIKE sy-datum.
PARAMETERS p_20_02 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.                             "25日締
SELECTION-SCREEN COMMENT 1(10) w_25.
PARAMETERS p_25_01 LIKE sy-datum.
PARAMETERS p_25_02 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "末日締
SELECTION-SCREEN COMMENT 1(10) w_31.
PARAMETERS p_31_01 LIKE sy-datum.
PARAMETERS p_31_02 LIKE sy-datum.
PARAMETERS p_31_03 LIKE sy-datum.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END   OF BLOCK b2.
SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE w_b3.
SELECTION-SCREEN BEGIN OF LINE. "既存データ削除
PARAMETERS p_del AS CHECKBOX.
SELECTION-SCREEN COMMENT 3(20) w_b3_1.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "テスト
PARAMETERS p_test AS CHECKBOX.
SELECTION-SCREEN COMMENT 3(20) w_b3_4.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "クライアント
SELECTION-SCREEN COMMENT 1(20) w_b3_2.
PARAMETERS p_mandt LIKE sy-mandt.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "変数名
SELECTION-SCREEN COMMENT 1(20) w_b3_3.
PARAMETERS p_name(4) TYPE c.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "過去データ削除
PARAMETERS p_del2 AS CHECKBOX.
SELECTION-SCREEN COMMENT 3(20) w_b3_5.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE. "削除対象年月
SELECTION-SCREEN COMMENT 1(12) w_yyyym2 FOR FIELD p_yyyy2.
PARAMETERS p_yyyy2(4) TYPE n.
PARAMETERS p_mm2(2) TYPE n.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END   OF BLOCK b3.

*----------------------------------------------------------------------*
INITIALIZATION.
* コメント
w_b1 = '月度'.
w_b2 = '実行日'.
w_b3 = '実行条件'.
w_yyyymm = '年月'.
w_h1 = '締日'.
w_h2 = '請求書'.
w_h3 = '売掛金'.
w_h4 = '買掛金'.
w_05 = '05日締'.
w_10 = '10日締'.
w_15 = '15日締'.
w_20 = '20日締'.
w_25 = '25日締'.
w_31 = '末日締'.
w_b3_1 = '既存データ削除'.
w_b3_2 = 'クライアント'.
w_b3_3 = '変数名'.
w_b3_4 = 'テスト実行'.
w_b3_5 = '過去データ削除'.
w_yyyym2 = '削除対象年月'.
* 初期値
p_yyyy = sy-datum+0(4).
p_mm = sy-datum+4(2).
IF p_mm = 12.
p_yyyy = p_yyyy + 1.
p_mm = 1.
ELSE.
p_mm = p_mm + 1.
ENDIF.
p_mandt = sy-mandt.
p_name = 'YK01'.
p_del2 = 'X'.
IF p_mm > 6.
p_mm2 = p_mm - 6.
p_yyyy2 = p_yyyy.
ELSE.
p_mm2 = p_mm + 6.
p_yyyy2 = p_yyyy - 1.
ENDIF.

AT SELECTION-SCREEN.
* 既存データのチェック
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '%'
INTO w_name.
SELECT        *
* Mod ES-UP 2012/09/24 -->
*         FROM   tvarv
*         INTO   TABLE i_tvarv
FROM   tvarvc
INTO   TABLE i_tvarvc
* Mod ES-UP 2012/09/24 <--
WHERE  name  LIKE w_name.
IF sy-dbcnt > 0 AND p_del = ''.
MESSAGE e401(y1) WITH 'バリアント変数が登録済です' w_name.
ENDIF.

START-OF-SELECTION.
* 登録データ作成
PERFORM f_make.
* 過去データ作成
PERFORM f_make2.
* 登録データ一覧
PERFORM f_print.
IF p_test = ''.
IF p_del = 'X'.
*     既存データ削除
PERFORM f_del.
ENDIF.
*   データ登録
PERFORM f_insert.
*   過去データ削除
IF p_del2 = 'X'.
PERFORM f_del2.
ENDIF.
ENDIF.

*---------------------------------------------------------------------*
*       FORM f_del                                                    *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_del.
* ローカル変数
DATA w_delcnt LIKE sy-dbcnt.
DATA w_errcnt LIKE sy-dbcnt.
* Add ES-UP 2012/09/24 -->
data l_tvarvc type tvarvc.
* Add ES-UP 2012/09/24 <--
CLEAR: w_delcnt, w_errcnt.
* 既存データ削除
* Mod ES-UP 2012/09/24 -->
*  LOOP AT i_tvarv.
LOOP AT i_tvarvc into l_tvarvc.
* Mod ES-UP 2012/09/24 <--
*   ロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'ENQUEUE_ESVARV'
*         EXPORTING
*              name           = i_tvarv-name
*              type           = i_tvarv-type
*              numb           = i_tvarv-numb
CALL FUNCTION 'ENQUEUE_ESVARVC'
EXPORTING
name           = l_tvarvc-name
type           = l_tvarvc-type
numb           = l_tvarvc-numb
* Mod ES-UP 2012/09/24 <--
EXCEPTIONS
foreign_lock   = 1
system_failure = 2
OTHERS         = 3.
IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.
*   削除
* Mod ES-UP 2012/09/24 -->
*    DELETE tvarv FROM i_tvarv.
DELETE tvarvc FROM l_tvarvc.
* Mod ES-UP 2012/09/24 <--
IF sy-subrc = 0.
ADD 1 TO w_delcnt.
ELSE.
ADD 1 TO w_errcnt.
ENDIF.
*   アンロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'DEQUEUE_ESVARV'
*         EXPORTING
*              name = i_tvarv-name
*              type = i_tvarv-type
*              numb = i_tvarv-numb.
CALL FUNCTION 'DEQUEUE_ESVARVC'
EXPORTING
name = l_tvarvc-name
type = l_tvarvc-type
numb = l_tvarvc-numb.
* Mod ES-UP 2012/09/24 <--
ENDLOOP.
* 結果報告
IF w_delcnt > 0.
MESSAGE i402(y1) WITH
'TVARVからデータを削除しました：' w_delcnt '件'.
ENDIF.
IF w_errcnt > 0.
MESSAGE i402(y1) WITH
'TVARVからデータを削除できませんでした：' w_errcnt '件'.
ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_make                                                   *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_make.
* Mod ES-UP 2012/09/24 -->
*  REFRESH i_tvarv.
data l_tvarvc type tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
*  i_tvarv-type = 'P'.    "PARAMETERS
*  i_tvarv-numb = '0000'. "Pの場合は0000
*  i_tvarv-sign = 'I'.    "含む
*  i_tvarv-opti = 'EQ'.   "等しい
*  i_tvarv-high = ''.
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '05_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_05_01.
*  APPEND i_tvarv.
l_tvarvc-type = 'P'.    "PARAMETERS
l_tvarvc-numb = '0000'. "Pの場合は0000
l_tvarvc-sign = 'I'.    "含む
l_tvarvc-opti = 'EQ'.   "等しい
l_tvarvc-high = ''.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '05_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_05_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '05_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_05_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '05_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_05_02.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '10_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_10_01.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '10_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_10_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '10_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_10_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '10_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_10_02.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '15_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_15_01.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '15_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_15_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '15_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_15_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '15_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_15_02.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '20_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_20_01.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '20_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_20_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '20_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_20_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '20_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_20_02.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '25_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_25_01.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '25_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_25_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 -->
* Mod ES-UP 2012/09/24 <--
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '25_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_25_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm '25_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_25_02.
APPEND l_tvarvc to i_tvarvc.
**2002.08.02 ADD >>>
DATA:W_DATE LIKE SY-DATUM,
W_MATUBI(2) TYPE N.

CALL FUNCTION 'Z_FDATA_FOR_PERIOD_CLOSING'
EXPORTING
YEAR                    = P_YYYY
MON                     = P_MM
DAY                     = '00'
IMPORTING
*     THR_MONTHS_BEFORE       = W_DATE_DUMMY1
*     TWO_MONTHS_BEFORE       = W_DATE_DUMMY2
*     ONE_MONTH_BEFORE        = W_DATE_DUMMY3
THIS_MONTH              = W_DATE
*     NEXT_MONTH              = W_DATE_DUMMY4
EXCEPTIONS
MONTH_ERROR             = 1
OTHERS                  = 2
.
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
W_MATUBI = W_DATE+6(2).
**2002.08.02 ADD <<<
* Mod ES-UP 2012/09/24 -->
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_01'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_31_01.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_01'
INTO l_tvarvc-name.
l_tvarvc-low = p_31_01.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_02'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_31_02.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_02'
INTO l_tvarvc-name.
l_tvarvc-low = p_31_02.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
* Mod ES-UP 2012/09/24 -->
*  CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_03'
*      INTO i_tvarv-name.
*  i_tvarv-low = p_31_03.
*  APPEND i_tvarv.
CONCATENATE p_name '_' p_mandt '_' p_yyyy p_mm W_MATUBI '_03'
INTO l_tvarvc-name.
l_tvarvc-low = p_31_03.
APPEND l_tvarvc to i_tvarvc.
* Mod ES-UP 2012/09/24 <--
ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_print                                                  *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_print.
* Add ES-UP 2012/09/24 -->
data: l_tvarvc  type tvarvc,
l_tvarvc2 type tvarvc.
* Add ES-UP 2012/09/24 <--
* 登録データ
* Mod ES-UP 2012/09/24 -->
*  LOOP AT i_tvarv.
*    WRITE: / i_tvarv-name,
*             i_tvarv-type,
*             i_tvarv-numb,
*             i_tvarv-sign,
*             i_tvarv-opti,
*             i_tvarv-low,
*             i_tvarv-high.
LOOP AT i_tvarvc into l_tvarvc.
WRITE: / l_tvarvc-name,
l_tvarvc-type,
l_tvarvc-numb,
l_tvarvc-sign,
l_tvarvc-opti,
l_tvarvc-low,
l_tvarvc-high.
* Mod ES-UP 2012/09/24 <--
ENDLOOP.
* 過去データ
* Mod ES-UP 2012/09/24 -->
*  LOOP AT i_tvarv2.
LOOP AT i_tvarvc2 into l_tvarvc2.
* Mod ES-UP 2012/09/24 <--
AT FIRST.
ULINE.
WRITE: / '削除した過去データ'.
ENDAT.
* Mod ES-UP 2012/09/24 -->
*    WRITE: / i_tvarv2-name,
*             i_tvarv2-type,
*             i_tvarv2-numb,
*             i_tvarv2-sign,
*             i_tvarv2-opti,
*             i_tvarv2-low,
*             i_tvarv2-high.
WRITE: / l_tvarvc2-name,
l_tvarvc2-type,
l_tvarvc2-numb,
l_tvarvc2-sign,
l_tvarvc2-opti,
l_tvarvc2-low,
l_tvarvc2-high.
* Mod ES-UP 2012/09/24 <--
ENDLOOP.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_insert                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_insert.
* ローカル変数
DATA w_inscnt LIKE sy-dbcnt.
DATA w_errcnt LIKE sy-dbcnt.
* Add ES-UP 2012/09/24 -->
data l_tvarvc type tvarvc.
* Add ES-UP 2012/09/24 <--
CLEAR: w_inscnt, w_errcnt.
* データ登録
* Mod ES-UP 2012/09/24 -->
*  LOOP AT i_tvarv.
LOOP AT i_tvarvc into l_tvarvc.
* Mod ES-UP 2012/09/24 <--
*   ロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'ENQUEUE_ESVARV'
*         EXPORTING
*              name           = i_tvarv-name
*              type           = i_tvarv-type
*              numb           = i_tvarv-numb
CALL FUNCTION 'ENQUEUE_ESVARVC'
EXPORTING
name           = l_tvarvc-name
type           = l_tvarvc-type
numb           = l_tvarvc-numb
* Mod ES-UP 2012/09/24 <--
EXCEPTIONS
foreign_lock   = 1
system_failure = 2
OTHERS         = 3.
IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.
*   登録
* Mod ES-UP 2012/09/24 -->
*    INSERT INTO tvarv VALUES i_tvarv.
INSERT INTO tvarvc VALUES l_tvarvc.
* Mod ES-UP 2012/09/24 <--
IF sy-subrc = 0.
ADD 1 TO w_inscnt.
ELSE.
ADD 1 TO w_errcnt.
ENDIF.
*   アンロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'DEQUEUE_ESVARV'
*         EXPORTING
*              name = i_tvarv-name
*              type = i_tvarv-type
*              numb = i_tvarv-numb.
CALL FUNCTION 'DEQUEUE_ESVARVC'
EXPORTING
name = l_tvarvc-name
type = l_tvarvc-type
numb = l_tvarvc-numb.
* Mod ES-UP 2012/09/24 <--
ENDLOOP.
* 結果報告
IF w_inscnt > 0.
MESSAGE i402(y1) WITH
'TVARVへデータを登録しました：' w_inscnt '件'.
ENDIF.
IF w_errcnt > 0.
MESSAGE i402(y1) WITH
'TVARVへデータを登録できませんでした：' w_errcnt '件'.
ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_del2                                                   *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_del2.
* ローカル変数
DATA w_name2 LIKE tvarv-name.
DATA w_low LIKE tvarv-low.
DATA w_delcnt LIKE sy-dbcnt.
DATA w_errcnt LIKE sy-dbcnt.
* Add ES-UP 2012/09/24 -->
data l_tvarvc2 type tvarvc.
* Add ES-UP 2012/09/24 <--
CLEAR: w_delcnt, w_errcnt.
* 削除
* Mod ES-UP 2012/09/24 -->
*  LOOP AT i_tvarv2.
LOOP AT i_tvarvc2 into l_tvarvc2.
* Mod ES-UP 2012/09/24 <--
*   ロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'ENQUEUE_ESVARV'
*         EXPORTING
*              name           = i_tvarv2-name
*              type           = i_tvarv2-type
*              numb           = i_tvarv2-numb
CALL FUNCTION 'ENQUEUE_ESVARVC'
EXPORTING
name           = l_tvarvc2-name
type           = l_tvarvc2-type
numb           = l_tvarvc2-numb
* Mod ES-UP 2012/09/24 <--
EXCEPTIONS
foreign_lock   = 1
system_failure = 2
OTHERS         = 3.
IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.
*   削除
* Mod ES-UP 2012/09/24 -->
*    DELETE tvarv FROM i_tvarv2.
DELETE tvarvc FROM l_tvarvc2.
* Mod ES-UP 2012/09/24 <--
IF sy-subrc = 0.
ADD 1 TO w_delcnt.
ELSE.
ADD 1 TO w_errcnt.
ENDIF.
*   アンロック
* Mod ES-UP 2012/09/24 -->
*    CALL FUNCTION 'DEQUEUE_ESVARV'
*         EXPORTING
*              name = i_tvarv2-name
*              type = i_tvarv2-type
*              numb = i_tvarv2-numb.
CALL FUNCTION 'DEQUEUE_ESVARVC'
EXPORTING
name = l_tvarvc2-name
type = l_tvarvc2-type
numb = l_tvarvc2-numb.
* Mod ES-UP 2012/09/24 <--
ENDLOOP.
* 結果報告
IF w_delcnt > 0.
MESSAGE i402(y1) WITH
'TVARVから過去データを削除しました：' w_delcnt '件'.
ENDIF.
IF w_errcnt > 0.
MESSAGE i402(y1) WITH
'TVARVから過去データを削除できませんでした：' w_errcnt '件'.
ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_make2                                                  *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_make2.
* ローカル変数
DATA w_name2 LIKE tvarv-name.
DATA w_low LIKE tvarv-low.
* 削除対象データの検索
CONCATENATE p_name '_' p_mandt '_%' INTO w_name2.
CONCATENATE p_yyyy2 p_mm2 '32' INTO w_low.
SELECT        *
* Mod ES-UP 2012/09/24 -->
*         FROM   tvarv
*         INTO   TABLE i_tvarv2
FROM   tvarvc
INTO   TABLE i_tvarvc2
* Mod ES-UP 2012/09/24 <--
WHERE  name  LIKE w_name2
AND  low   <    w_low.
ENDFORM.
