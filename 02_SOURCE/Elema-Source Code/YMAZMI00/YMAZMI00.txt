***---------------------------------------------------------------------
***          (c)Copyright 1998 OptiSystem Solution                   ***
***---------------------------------------------------------------------
*----------------------------------------------------------------------*
*   INCLUDE YTRZMi00
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1111  INPUT
*&---------------------------------------------------------------------*
MODULE M22_USER_COMMAND_1111 INPUT.
*data: trz(4) value 'ZSGJ'.
****
STS-LTOP = CON_TIP11-TOP_LINE.
TOPLINE = 1.  sts-prs = 's'.
****
CASE SY-UCOMM.
*****
when 'FBRW'.   sts-reg = 'tg'.
PERFORM AL_ANL_SCREEN.
when 'FCOM'.   sts-reg = 'cp'.
PERFORM AL_ANL_SCREEN.
***
when 'EXEC'.   perform al_anl_screen.
if sts-prs = 'x'.
PERFORM AL_EXECUTION.
if sts-reg = 'ca'.  perform pr_sort_corr. endif.
ENDIF.
***
WHEN 'FSNM'.   SORT TB_SCR BY TXT.
WHEN 'FSXO'.   SORT TB_SCR BY SG_AC DESCENDING TXT.
WHEN 'FSSE'.   SORT TB_SCR BY SRV NAMP.
****
WHEN 'BX'. PERFORM MM_TI_XOD USING RCODE.
topline = sts-ltop.
WHEN 'BO'. PERFORM MM_TI_XOD USING RCODE.
topline = sts-ltop.
WHEN 'BD'. PERFORM MM_TI_XOD USING RCODE.
WHEN 'BR'. PERFORM MM_TI_XOD USING RCODE.
****
WHEN 'P--'.   PERFORM IO4_SC_SCROLL USING SY-UCOMM CHANGING TOPLINE.
WHEN 'P- '.   PERFORM IO4_SC_SCROLL USING SY-UCOMM CHANGING TOPLINE.
WHEN 'P+ '.   PERFORM IO4_SC_SCROLL USING SY-UCOMM CHANGING TOPLINE.
WHEN 'P++'.   PERFORM IO4_SC_SCROLL USING SY-UCOMM CHANGING TOPLINE.
****
when 'scrl'.   topline = sts-ltop + sts-lines.
****
WHEN 'HELP ?'.          " perform al_anl_screen.
PERFORM FM_DOCUMENT.
sts-reg = sts-prereg.
topline = sts-ltop.
WHEN 'HELP'.            " perform al_anl_screen.
PERFORM FM_DOCUMENT.
sts-reg = sts-prereg.
topline = sts-ltop.
***
*  when 'FCOR'.   sts-reg = 'cr'.
*                 PERFORM AL_ANL_SCREEN.
*  when 'PNEW'.   perform if_tree_impex using 'n'.
*  when 'PADD'.   perform if_tree_impex using 'a'.
*  when 'DBAS'.   perform if_tree_impex using 'd'.
***
*  when 'FCUN'.   perform pr_anal_tb_un.
*                 perform al_anl_screen.
***
*  when 'PCRA'.   sts-reg = 'ca'.
*                 perform if_tree_impex using 'l'.
*                 PERFORM AL_ANL_SCREEN.
***
WHEN '    '.
WHEN '----'.   TOPLINE = STS-LTOP.
****
when others.   perform al_anl_screen.
topline = sts-ltop.
ENDCASE.
****
STS-LTOP = TOPLINE.
CON_TIP11-TOP_LINE = TOPLINE.
****
STS-PREREG = STS-REG.    STS-PRS = 's'.
RCODE = '----'.  SY-UCOMM = '----'.
*********
ENDMODULE.                 " USER_COMMAND_1111  INPUT
*&---------------------------------------------------------------------*
*&      Module  AI_TIPACT  INPUT
*&---------------------------------------------------------
MODULE M232_TIPACT INPUT.
*** processing Vi on screen
DATA: NS LIKE SY-STEPL.
****
NS = CON_TIP11-CURRENT_LINE.
READ TABLE TB_SCR INDEX NS.
IF TB_SCR-SG_AC = ' '. TB_SCR-SG_AC = 'X'. STS-KG = STS-KG + 1.
ELSE.                  TB_SCR-SG_AC = ' '. STS-KG = STS-KG - 1.
ENDIF.
****
MODIFY TB_SCR INDEX NS.
*********
ENDMODULE.                 " AI_TIPACT  INPUT
*&---------------------------------------------------------------------*
*&      Module  AI_FOR_SCROLLING  INPUT
*&---------------------------------------------------------------------*
MODULE M231_FOR_SCROLLING INPUT.
STS-LINES = SY-LOOPC.
ENDMODULE.                 " AI_FOR_SCROLLING  INPUT

*&---------------------------------------------------------------------*
*&      Form  AI_SCROLLING
*&---------------------------------------------------------------------*
FORM IO4_SC_SCROLL USING    P_COMM  CHANGING CT_TL.
DATA: KKG LIKE SY-TABIX.
****
CASE P_COMM.
WHEN 'P--'.
WHEN 'P- '.
ct_tl = sts-ltop - sts-lines + 1.
WHEN 'P+ '.
ct_tl = sts-ltop + sts-lines - 1.
WHEN 'P++'.
DESCRIBE TABLE TB_SCR LINES KKG.
ct_tl = kkg - sts-lines + 1.
*             ct_tl = ct_tl - sts-lines + 1.
ENDCASE.
****
IF CT_TL < 1. CT_TL = 1. ENDIF.
*******
ENDFORM.                    " AI_SCROLLING
*&---------------------------------------------------------------------*
*&      Module  EXIT_COMM_1111  INPUT
*&---------------------------------------------------------------------*
MODULE M21_EXIT_COMM_1111 INPUT.
****
CASE SY-UCOMM.
WHEN 'BACK'.   PERFORM IO2_SCR_EXIT.
WHEN 'CANC'.   PERFORM IO2_SCR_EXIT.
WHEN 'EXIT'.   PERFORM IO2_SCR_EXIT.
ENDCASE.
*********
ENDMODULE.                 " EXIT_COMM_1111  INPUT
*&---------------------------------------------------------------------*
*&      Module  SC_TIPHLP  INPUT
*&---------------------------------------------------------------------*
*module sc_tiphlp input.
*DATA: NS LIKE SY-STEPL.
****
*NS = CON_TIP11-CURRENT_LINE.
****
*READ TABLE TB_IP INDEX NS.
*LEAVE SCREEN.
**  if tb_ip-dop-sg_ac = ' '. tb_ip-dop-sg_ac = 'X'.
*                                               sts-kg = sts-kg + 1.
**  else.              tb_ip-dop-sg_ac = ' '. sts-kg = sts-kg - 1.
**  ENDIF.
**  modify tb_ip index ns.
*
*endmodule.                 " SC_TIPHLP  INPUT
