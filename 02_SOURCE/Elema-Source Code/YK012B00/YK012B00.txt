*----------------------------------------------------------------------*
*  プラント変換テーブル管理                                            *
*      目的：取引を行うプラントと、請求書を受け取るプラントが異なる    *
*            ため、取引プラントから請求書受領プラントを得るための変換  *
*            テーブルを管理する                                        *
*      機能：YK250の登録/変更/削除                                     *
*      作成：2002/02/06 KURANO Sadayuki                                *
*      変更：                                                          *
*----------------------------------------------------------------------*
REPORT yk012b00 .

* 使用テーブル
TABLES yk250. "プラント変換テーブル
TABLES t001. "会社コード
TABLES lfa1. "仕入先マスタ (一般セクション)

* テーブルコントロール
CONTROLS tc1 TYPE TABLEVIEW USING SCREEN 2000.

* グローバル変数
TYPES: BEGIN OF st_yk250.
INCLUDE STRUCTURE yk250.
TYPES:   name1 LIKE t001w-name1,
name2 LIKE t001w-name1,
sel(1) TYPE c,
END OF st_yk250.
DATA i_yk250 TYPE STANDARD TABLE OF st_yk250 WITH HEADER LINE.
DATA sl_yk250 TYPE STANDARD TABLE OF st_yk250 WITH HEADER LINE.
DATA i_yk250_del TYPE STANDARD TABLE OF st_yk250 WITH HEADER LINE.
DATA w_sel TYPE xfeld.
DATA w_err TYPE xfeld.

* 選択画面
PARAMETERS p_bukrs LIKE yk250-bukrs
MEMORY ID buk OBLIGATORY. "会社コード
PARAMETERS p_lifnr LIKE yk250-lifnr
MEMORY ID lif OBLIGATORY. "仕入先コード

*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
* 会社コード検索
SELECT SINGLE * FROM  t001
WHERE  bukrs  = p_bukrs.
IF sy-subrc <> 0.
MESSAGE e400(y1) WITH '会社コードがありません'.
ENDIF.
* 仕入先コード検索
SELECT SINGLE * FROM  lfa1
WHERE  lifnr  = p_lifnr.
IF sy-subrc <> 0.
MESSAGE e400(y1) WITH '仕入先コードがありません'.
ENDIF.

*----------------------------------------------------------------------*
START-OF-SELECTION.
* 変換テーブル検索
SELECT *
FROM   yk250
INTO CORRESPONDING FIELDS OF TABLE i_yk250
WHERE  bukrs  = p_bukrs
AND    lifnr  = p_lifnr.

* 画面呼出
CALL SCREEN 2000.

*&---------------------------------------------------------------------*
*&      Module  STATUS_2000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_2000 OUTPUT.
* ローカル変数
DATA w_lines LIKE sy-dbcnt.
* ステータス設定
SET PF-STATUS 'S2000'.
SET TITLEBAR 'T01'.
* 新規登録用の空行の追加
DESCRIBE TABLE i_yk250 LINES w_lines.
tc1-lines = w_lines + 5.
ENDMODULE.                 " STATUS_2000  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  ctrl_pbo  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ctrl_pbo OUTPUT.
* 内部テーブルの項目をセット
MOVE-CORRESPONDING i_yk250 TO sl_yk250.
*
SELECT SINGLE name1 FROM  t001w
INTO sl_yk250-name1
WHERE  werks  = i_yk250-werkst.
SELECT SINGLE name1 FROM  t001w
INTO sl_yk250-name2
WHERE  werks  = i_yk250-werksp.
ENDMODULE.                 " ctrl_pbo  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  ctrl_pai  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ctrl_pai INPUT.
* テーブルコントロールから内部テーブルへ編集
MOVE-CORRESPONDING sl_yk250 TO i_yk250.
i_yk250-sel = w_sel.
* 内部テーブル追加
APPEND i_yk250.
ENDMODULE.                 " ctrl_pai  INPUT
*&---------------------------------------------------------------------*
*&      Module  exit_2000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit_2000 INPUT.
CASE sy-ucomm.           "プログラム終了機能
WHEN 'BACK'.
SET SCREEN 0.
WHEN 'EXIT'.
SET SCREEN 0.
WHEN 'CANC'.
ROLLBACK WORK.
SET SCREEN 0.
ENDCASE.
LEAVE SCREEN.
ENDMODULE.                 " exit_2000  INPUT
*&---------------------------------------------------------------------*
*&      Module  user_command_2000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_2000 INPUT.
* エラーチェック
IF w_err = 'X'.
EXIT.
ENDIF.
CASE sy-ucomm.
*** 登録
WHEN 'SAVE'.
LOOP AT i_yk250.
IF ( i_yk250-werkst NE space AND i_yk250-werksp EQ space ) OR
( i_yk250-werkst EQ space AND i_yk250-werksp NE space ).
MESSAGE s400(y1) WITH 'プラントが空白です'.
EXIT.
ENDIF.
SELECT SINGLE * FROM  yk250
WHERE  bukrs   = p_bukrs
AND    lifnr   = p_lifnr
AND    werkst  = i_yk250-werkst.
******* 既登録済み
IF sy-subrc = 0.
yk250-werksp = i_yk250-werksp.
yk250-upddat = sy-datum.
yk250-updtim = sy-uzeit.
yk250-updusr = sy-uname.
UPDATE yk250.
******* 新規登録
ELSE.
CLEAR yk250.
yk250-bukrs = p_bukrs.
yk250-lifnr = p_lifnr.
yk250-werkst = i_yk250-werkst.
yk250-werksp = i_yk250-werksp.
yk250-insdat = sy-datum.
yk250-instim = sy-uzeit.
yk250-insusr = sy-uname.
INSERT yk250.
ENDIF.
ENDLOOP.
*** 削除
WHEN 'DEL'.
LOOP AT i_yk250 WHERE sel = 'X'.
DELETE FROM yk250 WHERE bukrs  = p_bukrs
AND   lifnr  = p_lifnr
AND   werkst = i_yk250-werkst.
DELETE i_yk250.
ENDLOOP.
ENDCASE.
ENDMODULE.                 " user_command_2000  INPUT
*&---------------------------------------------------------------------*
*&      Module  init_2000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE init_2000 INPUT.
CLEAR w_err.
REFRESH i_yk250.
ENDMODULE.                 " init_2000  INPUT
*&---------------------------------------------------------------------*
*&      Module  fld_check1  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE fld_check1 INPUT.
* プラントチェック
CLEAR i_yk250-name1.
SELECT SINGLE name1 FROM  t001w
INTO i_yk250-name1
WHERE  werks  = sl_yk250-werkst.
IF sy-subrc <> 0.
MESSAGE s400(y1) WITH 'プラントがありません'.
w_err = 'X'.
ENDIF.
ENDMODULE.                 " fld_check1 INPUT
*&---------------------------------------------------------------------*
*&      Module  fld_check2  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE fld_check2 INPUT.
* プラントチェック
CLEAR i_yk250-name2.
SELECT SINGLE name1 FROM  t001w
INTO i_yk250-name2
WHERE  werks  = sl_yk250-werksp.
IF sy-subrc <> 0.
MESSAGE s400(y1) WITH 'プラントがありません'.
w_err = 'X'.
ENDIF.
ENDMODULE.                 " fld_check2 INPUT
