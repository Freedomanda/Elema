*&---------------------------------------------------------------------*
*&  REPORT ZN010600                                                    *
*&         支払予定一覧（締日ベース）（仕入）                          *
*&---------------------------------------------------------------------*
*&  機能     : 指定された条件を基に、支払予定一覧(締日ベース)を表示する
*&
*&  作成日   : 2012/02/06
*&  作成者   : H.KOMIYAMA(SOLFIS)
*&  変更履歴 : 2012/03/27 K.KAJISA(SOLFIS)
*&  変更内容 : インデックス対応
*&  変更履歴 : 2012/04/16 K.FURUYA(SOLFIS)
*&  変更内容 : 期日払いの繰越額が支払額に含まれないように修正
*&  変更履歴 : 2013/11/20 K.TSUNOSE(GSL)
*&  変更内容 : 電子記録債務対応
*&---------------------------------------------------------------------*
REPORT ZN010600
NO STANDARD PAGE HEADING
LINE-SIZE   170
LINE-COUNT  58
MESSAGE-ID  YN01.

*----------------------------------------------------------------------*
*   参照先
*----------------------------------------------------------------------*
TYPE-POOLS: SLIS,
SSCR.
TABLES: ZN002,
LFM1.
*----------------------------------------------------------------------*
*   型定義
*----------------------------------------------------------------------*
*-- 支払予定データ取得用
TYPES: T_ZN002      TYPE ZN002,
*-- 仕入先マスタデータ取得用
BEGIN OF T_LFXX,
LIFNR      TYPE LFA1-LIFNR,        " 仕入先
NAME1      TYPE LFA1-NAME1,        " 名称 1
SPERM      TYPE LFA1-SPERM,        " 購買ブロック(LFA1)
BUKRS      TYPE LFB1-BUKRS,        " 会社コード
ZWELS      TYPE LFB1-ZWELS,        " 支払方法
ZTERM      TYPE LFB1-ZTERM,        " 支払条件(LFB1)
TLFNS      TYPE LFB1-TLFNS,        " 資本金
EKORG      TYPE LFM1-EKORG,        " 購買組織
ZTERM_M    TYPE LFM1-ZTERM,        " 支払条件(LFM1)
SPERM_M    TYPE LFM1-SPERM,        " 購買ブロック(LFM1)
SUBCONTACT TYPE CHAR1,             " 下請法
END   OF T_LFXX,
*-- 外部データ取得用
BEGIN OF T_YN210,
VRFCTON    TYPE YN210-VRFCTON,     " 仕入先コード(請求先)
WAERS      TYPE YN210-WAERS,       " 通貨コード
KNETXAMT   TYPE YN210-KNETXAMT,    " 税込金額
GJAHR      TYPE YN210-GJAHR,       " 外部会計年度
SLPDOC     TYPE YN210-SLPDOC,      " 外部番号
DTLDOC     TYPE YN210-DTLDOC,      " 外部明細番号
END   OF T_YN210,
*-- 請求先取得用
BEGIN OF T_WYT3,
LIFNR      TYPE WYT3-LIFNR,        " 仕入先の勘定コード
LIFN2      TYPE WYT3-LIFN2,        " 他の仕入先への参照
END   OF T_WYT3,
*-- ALV一覧用
BEGIN OF T_OUTPUT,
SUBCONTACT TYPE CHAR1,             " 下請法
SPERM      TYPE SPERM_M,           " 購買ブロック
LIFNR      TYPE ZN002-LIFNR,       " 仕入先コード
NAME1      TYPE LFA1-NAME1,        " 名称
WAERS      TYPE ZN002-WAERS,       " 通貨
ZWELS      TYPE LFB1-ZWELS,        " 方法
ZTERM_M    TYPE LFM1-ZTERM,        " 条件
ZTERM      TYPE LFB1-ZTERM,        " サイト
SUM01      TYPE ZN002-PWRBTR,      " 前月以前繰越額
SUM02      TYPE YN210-KNETXAMT,    " 支払依頼額
SUM03      TYPE ZN002-PWRBTR,      " 当月支払対象額
SUM04      TYPE ZN002-PWRBTR,      " 振込
* 2013/11/20 ADD START "電子記録債務追加
SUM14      TYPE ZN002-PWRBTR,      " 電子記録債務
* 2013/11/20 ADD END
SUM05      TYPE ZN002-PWRBTR,      " 手形
SUM06      TYPE ZN002-PWRBTR,      " ファクタリング
SUM07      TYPE ZN002-PWRBTR,      " 前渡金
SUM08      TYPE ZN002-PWRBTR,      " その他
SUM09      TYPE ZN002-PWRBTR,      " 相殺
SUM10      TYPE ZN002-PWRBTR,      " 繰越額
SUM11      TYPE ZN002-PWRBTR,      " 期日支払予定
SUM12      TYPE ZN002-PWRBTR,      " 計
SUM13      TYPE ZN002-PWRBTR,      " 差額
LIFN2      TYPE WYT3-LIFN2,        " 請求先
END   OF T_OUTPUT.

*----------------------------------------------------------------------*
*   構造定義
*----------------------------------------------------------------------*
*-- 支払予定データ取得用
DATA: W_ZN002  TYPE ZN002,
*-- 仕入先マスタデータ取得用
W_LFXX   TYPE T_LFXX,
*-- 外部データ取得用
W_YN210  TYPE T_YN210,
*-- 請求先取得
W_WYT3   TYPE T_WYT3,
*-- ALV一覧用
W_OUTPUT TYPE T_OUTPUT.

*----------------------------------------------------------------------*
*   内部テーブル定義
*----------------------------------------------------------------------*
DATA: I_ZN002     TYPE SORTED TABLE OF T_ZN002
WITH UNIQUE KEY BUKRS LIFNR CZFBDT SEQ,
I_ZN002_KEY TYPE SORTED TABLE OF T_ZN002
WITH UNIQUE KEY BUKRS LIFNR CZFBDT SEQ,
I_LFXX      TYPE SORTED TABLE OF T_LFXX
WITH UNIQUE KEY LIFNR,
I_YN210     TYPE STANDARD TABLE OF T_YN210,
I_WYT3      TYPE SORTED TABLE OF T_WYT3
WITH NON-UNIQUE KEY LIFNR,
I_OUTPUT    TYPE STANDARD TABLE OF T_OUTPUT,
*-- 下請法検索ヘルプ用
BEGIN OF I_HELP OCCURS 0,
FLAG      TYPE FLAG_X,
TEXT      TYPE TEXT20,
END   OF I_HELP.

*----------------------------------------------------------------------*
*   ALV出力用定義
*----------------------------------------------------------------------*
*-- ALV出力用
DATA: W_LAYOUT      TYPE SLIS_LAYOUT_ALV,     " ALV出力レイアウト
I_FIELDCAT    TYPE SLIS_T_FIELDCAT_ALV, " ALV出力項目設定
W_REPID       TYPE SY-REPID,            " ALV出力用：プログラムID
W_EDISVARIANT TYPE DISVARIANT,          " ALV出力バリアント
I_EVENT       TYPE SLIS_T_EVENT,        " イベント
W_EVENT       LIKE LINE OF I_EVENT,
I_HEAD        TYPE SLIS_T_LISTHEADER,   " ヘッダ
W_HEAD        LIKE LINE OF I_HEAD,
W_PRINT       TYPE SLIS_PRINT_ALV,
W_SETTINGS    TYPE LVC_S_GLAY.

*----------------------------------------------------------------------*
*   グローバル変数定義
*----------------------------------------------------------------------*
DATA: G_CZFBDT_NEXT TYPE ZN002-CZFBDT.      " 次回締日

*----------------------------------------------------------------------*
*   定数定義
*----------------------------------------------------------------------*
CONSTANTS:
C_ON         TYPE CHAR1 VALUE 'X',    " フラグON
C_SAVE       TYPE CHAR1 VALUE 'A',    " SAVE機能ON
C_TYP1       TYPE CHAR1 VALUE 'H',    " ヘッダ書式(H)
C_TYP2       TYPE CHAR1 VALUE 'S'.    " ヘッダ書式(S)

*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
*-- データ選択
SELECTION-SCREEN: BEGIN OF BLOCK BL01 WITH FRAME TITLE TEXT-S01.
*-- 会社コード
PARAMETERS:     P_BUKRS  TYPE BUKRS OBLIGATORY MEMORY ID BUK,
*-- 締日
P_CZFBDT TYPE ZN002-CZFBDT OBLIGATORY.
*-- 仕入先（請求先）
SELECT-OPTIONS:   S_LIFNR  FOR  ZN002-LIFNR,
*-- 通貨コード
S_WAERS  FOR  ZN002-WAERS         NO INTERVALS,
*-- 下請法
S_SUBCON FOR  W_OUTPUT-SUBCONTACT NO INTERVALS,
*-- 購買ブロック
S_SPERM  FOR  LFM1-SPERM          NO INTERVALS.
SELECTION-SCREEN: END   OF BLOCK BL01.

*-- 処理オプション
SELECTION-SCREEN: BEGIN OF BLOCK BL02 WITH FRAME TITLE TEXT-S02.
*-- ALVバリアント項目
PARAMETERS: P_LAYOUT TYPE SLIS_VARI.
SELECTION-SCREEN:END   OF BLOCK BL02.

*-- システム項目
SELECTION-SCREEN: BEGIN OF BLOCK BL03 WITH FRAME TITLE TEXT-S03.
*-- 資本金
PARAMETERS: P_SHIHON TYPE CDCURR0 OBLIGATORY,
*-- 購買組織
P_EKORG  TYPE LFM1-EKORG OBLIGATORY MEMORY ID EKO,
*-- 取引先機能
P_PARVW  TYPE WYT3-PARVW OBLIGATORY.
SELECTION-SCREEN: END   OF BLOCK BL03.

************************************************************************
INITIALIZATION.
************************************************************************
*---選択画面の複数入力ボタン制御
PERFORM F_BUTTON_CONTROL.

************************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR S_SUBCON-LOW.
************************************************************************
*-- 下請法F4ヘルプ取得
PERFORM F_F4_INPUT_SUBCON.

************************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_LAYOUT.
************************************************************************
*-- ALVバリアント取得
PERFORM F_CALL_ALV_VARIANT CHANGING P_LAYOUT.

************************************************************************
AT SELECTION-SCREEN.
************************************************************************
*-- チェック処理
PERFORM F_CHECK_PARAMETER.

************************************************************************
START-OF-SELECTION.
************************************************************************
*-- 初期処理
PERFORM INT_SEC.
*-- メイン処理
PERFORM MAIN_SEC.
*-- 終了処理
PERFORM END_SEC.

************************************************************************
END-OF-SELECTION.
************************************************************************
*&---------------------------------------------------------------------*
*&      Form  F_BUTTON_CONTROL
*&---------------------------------------------------------------------*
*       選択画面の複数ボタン制御
*----------------------------------------------------------------------*
FORM F_BUTTON_CONTROL.

DATA:LW_RES        TYPE SSCR_RESTRICT,
LW_OPT_LIST   TYPE SSCR_OPT_LIST,
LW_ASS        TYPE SSCR_ASS.

*-- 単一指定のみ可能
LW_OPT_LIST-NAME       = 'JUST_EQ'.
LW_OPT_LIST-OPTIONS-EQ = 'X'.
APPEND LW_OPT_LIST TO LW_RES-OPT_LIST_TAB.

LW_ASS-KIND    = 'S'.
LW_ASS-SG_MAIN = 'I'.
LW_ASS-OP_MAIN = 'JUST_EQ'.

*-- 通貨コード
LW_ASS-NAME    = 'S_WAERS'.
APPEND LW_ASS TO LW_RES-ASS_TAB.
*-- 下請法
LW_ASS-NAME    = 'S_SUBCON'.
APPEND LW_ASS TO LW_RES-ASS_TAB.
*-- 購買ブロック
LW_ASS-NAME    = 'S_SPERM'.
APPEND LW_ASS TO LW_RES-ASS_TAB.

*-- 実行
CALL FUNCTION 'SELECT_OPTIONS_RESTRICT'
EXPORTING
RESTRICTION = LW_RES.

ENDFORM.                    " F_BUTTON_CONTROL
*&---------------------------------------------------------------------*
*&      Form  F_F4_INPUT_SUBCON
*&---------------------------------------------------------------------*
*       下請法検索ヘルプ
*----------------------------------------------------------------------*
FORM F_F4_INPUT_SUBCON.

DATA: LW_HELP   LIKE LINE OF I_HELP,
L_REPID   LIKE SY-REPID.

*-- 検索ヘルプデータ作成
IF I_HELP[] IS INITIAL.
LW_HELP-FLAG  = SPACE.
LW_HELP-TEXT = TEXT-S04.
APPEND LW_HELP TO I_HELP.
LW_HELP-FLAG  = C_ON.
LW_HELP-TEXT = TEXT-S05.
APPEND LW_HELP TO I_HELP.
ENDIF.

L_REPID = SY-REPID.

*-- 検索ヘルプ表示
CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
EXPORTING
RETFIELD               = 'FLAG'
DYNPPROG               = L_REPID
DYNPNR                 = SY-DYNNR
DYNPROFIELD            = 'S_SUBCON-LOW'
VALUE_ORG              = 'S'
TABLES
VALUE_TAB              = I_HELP
EXCEPTIONS
OTHERS                 = 0.

ENDFORM.                    " F4_INPUT_SUBCON
*&-------------------------------------------------------------------*
*&      Form  F_CALL_ALV_VARIANT
*&-------------------------------------------------------------------*
*       ALVレイアウト用F4ヘルプ
*--------------------------------------------------------------------*
*      <--AO_VARI    ALVレイアウト
*--------------------------------------------------------------------*
FORM F_CALL_ALV_VARIANT CHANGING VALUE(AO_VARI) TYPE ANY.

DATA:
LW_DISVARIANT TYPE DISVARIANT.

CLEAR:
LW_DISVARIANT,
AO_VARI.

LW_DISVARIANT-REPORT = SY-REPID.

CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
EXPORTING
IS_VARIANT         = LW_DISVARIANT
I_SAVE             = C_SAVE
I_DISPLAY_VIA_GRID = C_ON
IMPORTING
ES_VARIANT         = LW_DISVARIANT
EXCEPTIONS
NOT_FOUND          = 1
PROGRAM_ERROR      = 2
OTHERS             = 3.

IF SY-SUBRC = 0.
AO_VARI = LW_DISVARIANT-VARIANT.
ENDIF.

ENDFORM.                    " F_CALL_ALV_VARIANT
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_PARAMETER
*&---------------------------------------------------------------------*
*       チェック処理
*----------------------------------------------------------------------*
FORM F_CHECK_PARAMETER.

*-- 会社コードの存在チェック
PERFORM F_CHECK_P_BUKRS.

*-- 締日チェック & 次回締日取得
PERFORM F_CHECK_P_CZFBDT.

ENDFORM.                    " F_CHECK_PARAMETER
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_P_BUKRS
*&---------------------------------------------------------------------*
*       会社コードの存在チェック
*----------------------------------------------------------------------*
FORM F_CHECK_P_BUKRS.

DATA: L_BUKRS TYPE T001-BUKRS.

SELECT SINGLE BUKRS             " 会社コード
FROM T001
INTO L_BUKRS
WHERE BUKRS = P_BUKRS.         " 会社コード

IF SY-SUBRC <> 0.
*-- 対象データがありません
MESSAGE E762.
ENDIF.

ENDFORM.                    " F_CHECK_P_BUKRS
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_P_CZFBDT
*&---------------------------------------------------------------------*
*       締日チェック & 次回締日取得
*----------------------------------------------------------------------*
FORM F_CHECK_P_CZFBDT.

DATA: L_CZFBDT TYPE ZN002-CZFBDT.

CLEAR: G_CZFBDT_NEXT.

*-- 末日の取得
PERFORM F_CALL_LAST_DAY_OF_MONTHS USING P_CZFBDT
CHANGING L_CZFBDT.

*-- 末日の判定
IF P_CZFBDT = L_CZFBDT.
L_CZFBDT = L_CZFBDT + 1.
*-- 次回締日の取得
PERFORM F_CALL_LAST_DAY_OF_MONTHS USING L_CZFBDT
CHANGING G_CZFBDT_NEXT.
ELSE.
*-- 五十日(末日以外)の判定
IF P_CZFBDT+6(2) = 05
OR P_CZFBDT+6(2) = 10
OR P_CZFBDT+6(2) = 15
OR P_CZFBDT+6(2) = 20
OR P_CZFBDT+6(2) = 25.
*-- 次回締日の取得
PERFORM F_CALL_RP_CALC_DATE_INTERVAL USING P_CZFBDT
CHANGING G_CZFBDT_NEXT.
ELSE.
*-- 入力された締日が適切ではありません
MESSAGE E913.
ENDIF.
ENDIF.

ENDFORM.                    " F_CHECK_P_CZFBDT
*&---------------------------------------------------------------------*
*&      Form  F_CALL_LAST_DAY_OF_MONTHS
*&---------------------------------------------------------------------*
*       末日の取得
*----------------------------------------------------------------------*
*      -->AI_DATE  算出基準日
*      <--AO_DATE  取得末日
*----------------------------------------------------------------------*
FORM F_CALL_LAST_DAY_OF_MONTHS USING VALUE(AI_DATE) TYPE ANY
CHANGING VALUE(AO_DATE) TYPE ANY.

CALL FUNCTION 'LAST_DAY_OF_MONTHS'
EXPORTING
DAY_IN            = AI_DATE
IMPORTING
LAST_DAY_OF_MONTH = AO_DATE
EXCEPTIONS
OTHERS            = 0.

ENDFORM.                    " F_CALL_LAST_DAY_OF_MONTHS
*&---------------------------------------------------------------------*
*&      Form  F_CALL_RP_CALC_DATE_INTERVAL
*&---------------------------------------------------------------------*
*       算出基準日 + 1ヶ月
*----------------------------------------------------------------------*
*      -->AI_DATE  算出基準日
*      <--AO_DATE  取得日
*----------------------------------------------------------------------*
FORM F_CALL_RP_CALC_DATE_INTERVAL USING VALUE(AI_DATE) TYPE ANY
CHANGING VALUE(AO_DATE) TYPE ANY.

CALL FUNCTION 'RP_CALC_DATE_IN_INTERVAL'
EXPORTING
DATE            = AI_DATE
DAYS            = 0
MONTHS          = 1
SIGNUM          = '+'
YEARS           = 0
IMPORTING
CALC_DATE       = AO_DATE.

ENDFORM.                    " F_CALL_RP_CALC_DATE_INTERVAL
*&---------------------------------------------------------------------*
*&      Form  INT_SEC
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM INT_SEC.

REFRESH: I_ZN002,
I_ZN002_KEY,
I_LFXX,
I_YN210,
I_WYT3,
I_OUTPUT,
I_HELP,
I_FIELDCAT,
I_EVENT,
I_HEAD.

CLEAR: W_LAYOUT,
W_REPID,
W_EDISVARIANT,
W_EVENT,
W_HEAD,
W_PRINT,
W_SETTINGS,
W_ZN002,
W_LFXX,
W_YN210,
W_WYT3,
W_OUTPUT.

ENDFORM.                    " INT_SEC
*&---------------------------------------------------------------------*
*&      Form  MAIN_SEC
*&---------------------------------------------------------------------*
*      メイン処理
*----------------------------------------------------------------------*
FORM MAIN_SEC.

*-- データ取得
PERFORM F_GET_DATA.

*-- 出力データ編集
PERFORM F_EDIT_OUTPUT_DATA.

ENDFORM.                    " MAIN_SEC
*&---------------------------------------------------------------------*
*&      Form  END_SEC
*&---------------------------------------------------------------------*
*       終了処理
*----------------------------------------------------------------------*
FORM END_SEC.

*-- ALVリスト出力
PERFORM F_OUTPUT_ALV.

ENDFORM.                    " END_SEC
*&---------------------------------------------------------------------*
*&      Form  F_GET_DATA
*&---------------------------------------------------------------------*
*       データ取得
*----------------------------------------------------------------------*
FORM F_GET_DATA.

*-- 支払予定（仕入）データ取得
PERFORM F_SELECT_ZN002.

*-- 仕入先マスタデータ取得
PERFORM F_SELECT_LFA1_LFB1_LFM1.

*-- 外部データ(仕入)取得
PERFORM F_SELECT_YN210.

*-- 請求先取得
PERFORM F_SELECT_WYT3.

ENDFORM.                    " F_GET_DATA
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_ZN002
*&---------------------------------------------------------------------*
*       支払予定(仕入)データ取得
*----------------------------------------------------------------------*
FORM F_SELECT_ZN002.

REFRESH: I_ZN002.

SELECT *
INTO TABLE I_ZN002
FROM ZN002
WHERE BUKRS =  P_BUKRS                   " 会社コード
AND LIFNR IN S_LIFNR                   " 仕入先コード(請求先)
*2012/03/07 ADD START
AND CZFBDT <= P_CZFBDT                 " 締日が未来の分は出力しない
AND PZFBDT >  P_CZFBDT                 " 支払日が過去は出力しない
*2012/03/07 ADD END
AND WAERS IN S_WAERS.                  " 通貨コード


IF SY-SUBRC <> 0.
*-- 対象データがありません
MESSAGE S762.
LEAVE LIST-PROCESSING.
ENDIF.

ENDFORM.                    " F_SELECT_ZN002
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_LFA1_LFB1_LFM1
*&---------------------------------------------------------------------*
*       仕入先マスタデータ取得
*----------------------------------------------------------------------*
FORM F_SELECT_LFA1_LFB1_LFM1.

REFRESH: I_ZN002_KEY,
I_LFXX.

*-- 仕入先の重複を削除
I_ZN002_KEY[] = I_ZN002[].
DELETE ADJACENT DUPLICATES FROM I_ZN002_KEY
COMPARING BUKRS LIFNR.

*-- 仕入先マスタの情報を取得
SELECT LFA1~LIFNR                         " 仕入先コード
LFA1~NAME1                         " 名称１
LFA1~SPERM                         " 購買ブロック
LFB1~BUKRS                         " 会社コード
LFB1~ZWELS                         " 支払方法
LFB1~ZTERM                         " 支払条件
LFB1~TLFNS                         " 資本金
LFM1~EKORG                         " 購買組織
LFM1~ZTERM                         " 支払条件
LFM1~SPERM                         " 購買ブロック
INTO TABLE I_LFXX
FROM LFA1 INNER JOIN LFB1
ON LFA1~LIFNR = LFB1~LIFNR
INNER JOIN LFM1
ON LFA1~LIFNR = LFM1~LIFNR
FOR ALL ENTRIES IN I_ZN002_KEY
WHERE LFA1~LIFNR = I_ZN002_KEY-LIFNR     " 仕入先コード(請求先)
AND LFB1~BUKRS = P_BUKRS               " 会社コード
AND LFM1~EKORG = P_EKORG.              " 購買組織

ENDFORM.                    " F_SELECT_LFA1_LFB1_LFM1
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_YN210
*&---------------------------------------------------------------------*
*       外部データ取得
*----------------------------------------------------------------------*
FORM F_SELECT_YN210.

REFRESH: I_YN210.

SELECT VRFCTON                            " 仕入先コード(請求先)
WAERS                              " 通貨コード
KNETXAMT                           " 税込金額
GJAHR                              " 外部会計年度
SLPDOC                             " 外部番号
DTLDOC                             " 外部明細番号
FROM YN210
INTO CORRESPONDING FIELDS OF TABLE I_YN210
FOR ALL ENTRIES IN I_ZN002_KEY
* 2012/03/27 MOD インデックス対応 START
*   WHERE VRFCTON = I_ZN002_KEY-LIFNR        " 仕入先コード(請求先)
*     AND BUKRS   = P_BUKRS                  " 会社コード
*     AND CZFBDT  = P_CZFBDT.                " 照合締日
WHERE  BUKRS   = P_BUKRS                  " 会社コード
AND  CZFBDT  = P_CZFBDT                 " 照合締日
AND  VRFCTON = I_ZN002_KEY-LIFNR.       " 仕入先コード(請求先)
* 2012/03/27 MOD インデックス対応 END

ENDFORM.                    " F_SELECT_YN210
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_WYT3
*&---------------------------------------------------------------------*
*       請求先取得
*----------------------------------------------------------------------*
FORM F_SELECT_WYT3.

REFRESH: I_WYT3.

SELECT LIFNR                         " 仕入先または債権者の勘定コード
LIFN2                         " 他の仕入先への参照
FROM WYT3
INTO CORRESPONDING FIELDS OF TABLE I_WYT3
FOR ALL ENTRIES IN I_ZN002_KEY
WHERE LIFNR = I_ZN002_KEY-LIFNR     " 仕入先コード(請求先)
AND EKORG = P_EKORG               " 購買組織
AND LTSNR = SPACE                 " 仕入先部門
AND WERKS = SPACE                 " プラント
AND PARVW = P_PARVW               " 取引先機能
AND PARZA = '000'.                " 取引先カウンタ

ENDFORM.                    " F_SELECT_WYT3
*&---------------------------------------------------------------------*
*&      Form  F_EDIT_OUTPUT_DATA
*&---------------------------------------------------------------------*
*       出力データ編集
*----------------------------------------------------------------------*
FORM F_EDIT_OUTPUT_DATA.

*-- 下請法編集
PERFORM F_EDIT_SUBCONTACT.

*-- 支払予定額集計
PERFORM F_SUM_ZN002.

*-- 支払依頼額集計
PERFORM F_SUM_YN210.

*-- ALV一覧表示用データ作成
PERFORM F_MAKE_OUTPUT_DATA.

ENDFORM.                    " F_EDIT_OUTPUT_DATA
*&---------------------------------------------------------------------*
*&      Form  F_EDIT_SUBCONTACT
*&---------------------------------------------------------------------*
*       下請法編集
*----------------------------------------------------------------------*
FORM F_EDIT_SUBCONTACT.

DATA: LW_FIELD  TYPE CHAR30,
LW_HTYPE  TYPE DATATYPE_D,
LW_NUMC(7) TYPE P.                   " 数値項目

LOOP AT I_LFXX INTO W_LFXX.
LW_FIELD = W_LFXX-TLFNS.                " 資本金項目の内容をコピー
*-- 値が入力されていない場合
IF LW_FIELD IS INITIAL.
W_LFXX-SUBCONTACT = SPACE.
*-- 値が入力されている場合
ELSE.
*-- カンマを削除
TRANSLATE LW_FIELD USING ', '.
CONDENSE  LW_FIELD NO-GAPS.
*-- 数値のみチェック
PERFORM F_CALL_NUMERIC_CHECK USING LW_FIELD
CHANGING LW_HTYPE.
*-- 数値の場合
IF LW_HTYPE = 'NUMC'.
LW_NUMC = LW_FIELD.
*-- 選択画面の資本金以下の場合は下請法適用仕入先
IF LW_NUMC <= P_SHIHON.
W_LFXX-SUBCONTACT = C_ON.
*-- 選択画面の資本金より大きい場合は下請法適用外仕入先
ELSE.
W_LFXX-SUBCONTACT = SPACE.
ENDIF.
*-- 文字列の場合
ELSE.
W_LFXX-SUBCONTACT = SPACE.
ENDIF.
ENDIF.
*----- 仕入先マスタデータ内部テーブルに格納
MODIFY I_LFXX FROM W_LFXX.
ENDLOOP.

ENDFORM.                    " F_EDIT_SUBCONTACT
*&---------------------------------------------------------------------*
*&      Form  F_CALL_NUMERIC_CHECK
*&---------------------------------------------------------------------*
*       数値のみチェック
*----------------------------------------------------------------------*
*      -->AI_FIELD  チェック対象値
*      <--AO_HTYPE  チェック結果
*----------------------------------------------------------------------*
FORM F_CALL_NUMERIC_CHECK USING VALUE(AI_FIELD) TYPE ANY
CHANGING VALUE(AO_HTYPE) TYPE ANY.

CALL FUNCTION 'NUMERIC_CHECK'
EXPORTING
STRING_IN        = AI_FIELD
IMPORTING
HTYPE            = AO_HTYPE.

ENDFORM.                    " F_CALL_NUMERIC_CHECK
*&---------------------------------------------------------------------*
*&      Form  F_SUM_ZN002
*&---------------------------------------------------------------------*
*       支払予定額集計
*----------------------------------------------------------------------*
FORM F_SUM_ZN002.

LOOP AT I_ZN002 INTO W_ZN002.

CLEAR: W_OUTPUT.
*-- キー項目(仕入先／通貨)設定
PERFORM F_SET_KEY_DATA USING W_ZN002-LIFNR
W_ZN002-WAERS
CHANGING W_OUTPUT.

*-- 前月以前繰越額
IF  W_ZN002-PZLSCH <> 'T'           " 支払方法   ≠ 国内振込
AND W_ZN002-PZLSCH <> 'E'           " 支払方法   ≠ 海外送金
AND W_ZN002-CZFBDT <  P_CZFBDT      " 照合締日   ＜ 画面：締日
AND W_ZN002-PZFBDT >  P_CZFBDT.     " 支払予定日 ＞ 画面：締日
W_OUTPUT-SUM01 = W_ZN002-PWRBTR.
ENDIF.

IF   W_ZN002-PZFBDT <= G_CZFBDT_NEXT. " 支払予定日 ≦ 次回締日
*-- 前渡金
IF W_ZN002-PADVNC = C_ON.         " 前渡済     ＝ "X"
W_OUTPUT-SUM07 = W_ZN002-PWRBTR.
ELSE.                             " 前渡済     ≠ "X"
CASE W_ZN002-PZLSCH.
*-- 振込
WHEN 'T'                      " 国内振込
OR 'E'.                     " 海外送金

*2012/04/16 MOD START "振込は前月以前からの期日払を含めない
IF ( W_ZN002-CZFBDT = P_CZFBDT ).
W_OUTPUT-SUM04 = W_ZN002-PWRBTR.
ENDIF.
*            W_OUTPUT-SUM04 = W_ZN002-PWRBTR.
*2012/04/16 MOD END
* 2013/11/20 ADD START "電子記録債務追加
*-- 電子記録債務
WHEN 'Q'.                     " 電子記録債務
W_OUTPUT-SUM14 = W_ZN002-PWRBTR.
* 2013/11/20 ADD END
*-- 手形
WHEN 'B'.                     " 手形
W_OUTPUT-SUM05 = W_ZN002-PWRBTR.
*-- ファクタリング
WHEN 'K'                      " ファクタリング（京都）
OR 'Z'.                     " ファクタリング
W_OUTPUT-SUM06 = W_ZN002-PWRBTR.
*-- その他
WHEN '9'.                     " その他
W_OUTPUT-SUM08 = W_ZN002-PWRBTR.
*-- 相殺
WHEN 'S'.                     " 相殺
W_OUTPUT-SUM09 = W_ZN002-PWRBTR.
WHEN OTHERS.
ENDCASE.
ENDIF.

ELSE.                               " 支払予定日 ＞ 次回締日

*-- 期日支払予定
IF W_ZN002-PZLSCH = 'T'           " 支払方法  ＝ 国内振込
OR W_ZN002-PZLSCH = 'E'.          " 支払方法  ＝ 海外送金

*2012/04/16 MOD START "振込は前月以前からの期日払を含めない
IF ( W_ZN002-CZFBDT = P_CZFBDT ).
W_OUTPUT-SUM11 = W_ZN002-PWRBTR.
ENDIF.
*        W_OUTPUT-SUM11 = W_ZN002-PWRBTR.
*2012/04/16 MOD END

*-- 繰越額
ELSE.                             " 支払方法  ≠ 国内振込/海外送金
W_OUTPUT-SUM10 = W_ZN002-PWRBTR.
ENDIF.

ENDIF.

COLLECT W_OUTPUT INTO I_OUTPUT.

ENDLOOP.

FREE: I_ZN002[].

ENDFORM.                    " F_SUM_ZN002
*&---------------------------------------------------------------------*
*&      Form  F_SET_KEY_DATA
*&---------------------------------------------------------------------*
*       キー項目設定
*----------------------------------------------------------------------*
*      -->AI_LIFNR  仕入先コード
*      -->AI_WAERS  通貨コード
*      <--AO_DATA   出力データ
*----------------------------------------------------------------------*
FORM F_SET_KEY_DATA USING VALUE(AI_LIFNR)  TYPE ANY
VALUE(AI_WAERS)  TYPE ANY
CHANGING VALUE(AO_OUTPUT) TYPE T_OUTPUT.

AO_OUTPUT-LIFNR = AI_LIFNR.               " 仕入先コード(請求先)
AO_OUTPUT-WAERS = AI_WAERS.               " 通貨コード

ENDFORM.                    " F_SET_KEY_DATA
*&---------------------------------------------------------------------*
*&      Form  F_SUM_YN210
*&---------------------------------------------------------------------*
*       支払依頼額集計
*----------------------------------------------------------------------*
FORM F_SUM_YN210.

LOOP AT I_YN210 INTO W_YN210.
CLEAR: W_OUTPUT.
*-- キー項目(仕入先／通貨)設定
PERFORM F_SET_KEY_DATA USING W_YN210-VRFCTON
W_YN210-WAERS
CHANGING W_OUTPUT.
*--支払依頼額
W_OUTPUT-SUM02 = W_YN210-KNETXAMT.
COLLECT W_OUTPUT INTO I_OUTPUT.
ENDLOOP.

FREE: I_YN210[].

ENDFORM.                    " F_SUM_YN210
*&---------------------------------------------------------------------*
*&      Form  F_MAKE_OUTPUT_DATA
*&---------------------------------------------------------------------*
*       ALV一覧表示用データ作成
*----------------------------------------------------------------------*
FORM F_MAKE_OUTPUT_DATA.

LOOP AT I_OUTPUT INTO W_OUTPUT.
*-- 仕入先マスタ情報読込
CLEAR: W_LFXX.
READ TABLE I_LFXX INTO W_LFXX
WITH KEY LIFNR = W_OUTPUT-LIFNR
BINARY SEARCH.
*-- 請求先情報読込
CLEAR: W_WYT3.
READ TABLE I_WYT3 INTO W_WYT3
WITH KEY LIFNR = W_OUTPUT-LIFNR
BINARY SEARCH.

*-- 下請法の条件チェック
IF NOT W_LFXX-SUBCONTACT IN S_SUBCON.
DELETE I_OUTPUT.
CONTINUE.
ENDIF.

*-- 購買ブロック
IF W_LFXX-SPERM   = C_ON                " LFA1購買ブロック ＝ "X"
OR W_LFXX-SPERM_M = C_ON.               " LFM1購買ブロック ＝ "X"
W_OUTPUT-SPERM = C_ON.
ENDIF.
*-- 購買ブロックの条件チェック
IF NOT W_OUTPUT-SPERM IN S_SPERM.
DELETE I_OUTPUT.
CONTINUE.
ENDIF.

*-- 下請法
W_OUTPUT-SUBCONTACT = W_LFXX-SUBCONTACT.
*-- 仕入先名称
W_OUTPUT-NAME1      = W_LFXX-NAME1.
*-- 方法
W_OUTPUT-ZWELS      = W_LFXX-ZWELS.
*-- 条件
W_OUTPUT-ZTERM_M    = W_LFXX-ZTERM_M.
*-- サイト
W_OUTPUT-ZTERM      = W_LFXX-ZTERM.
*-- 当月支払対象額 (「前月以前繰越額」＋「支払依頼額」)
W_OUTPUT-SUM03      = W_OUTPUT-SUM01 + W_OUTPUT-SUM02.
*-- 計( 振込+手形+ﾌｧｸﾀﾘﾝｸﾞ+前渡金+その他+相殺+繰越額+期日支払予定 )
W_OUTPUT-SUM12      = W_OUTPUT-SUM04 +
* 2013/11/20 ADD START "集計に電子記録債務追加
W_OUTPUT-SUM14 +
* 2013/11/20 ADD END
W_OUTPUT-SUM05 +
W_OUTPUT-SUM06 +
W_OUTPUT-SUM07 +
W_OUTPUT-SUM08 +
W_OUTPUT-SUM09 +
W_OUTPUT-SUM10 +
W_OUTPUT-SUM11.
*-- 差額 (「当月支払対象額」−「計」)
W_OUTPUT-SUM13      = W_OUTPUT-SUM03 - W_OUTPUT-SUM12.
*-- 請求先
W_OUTPUT-LIFN2      = W_WYT3-LIFN2.

MODIFY I_OUTPUT FROM W_OUTPUT.

ENDLOOP.

IF I_OUTPUT[] IS INITIAL.
*-- 対象データがありません
MESSAGE S762.
LEAVE LIST-PROCESSING.
ENDIF.

ENDFORM.                    " F_MAKE_OUTPUT_DATA
*&---------------------------------------------------------------------*
*&      Form  F_OUTPUT_ALV
*&---------------------------------------------------------------------*
*       ALVリスト出力
*----------------------------------------------------------------------*
FORM F_OUTPUT_ALV.

*-- 項目属性編集
PERFORM F_SET_ALV_FIELDCAT.

*-- その他編集
PERFORM F_SET_ALV_LAYOUT.

*-- ALV一覧出力
PERFORM F_CALL_ALV.

ENDFORM.                    " F_OUTPUT_ALV
*&---------------------------------------------------------------------*
*&      Form  F_SET_ALV_FIELDCAT
*&---------------------------------------------------------------------*
*       項目属性編集
*----------------------------------------------------------------------*
FORM F_SET_ALV_FIELDCAT.

*** 2012/02/29 ALV INSERT START ***
DATA:L_COL      TYPE I.               "カラム位置

* カラム位置の初期化
L_COL = 0.

* 項目名を編集する
PERFORM SET_FIELDCAT USING 'SUBCONTACT'     "項目ID
TEXT-F01         "項目テキスト(短)
TEXT-F01         "項目テキスト(中)
TEXT-F01         "項目テキスト(長)
1                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
1                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SPERM'          "項目ID
TEXT-F02         "項目テキスト(短)
TEXT-F02         "項目テキスト(中)
TEXT-F02         "項目テキスト(長)
1                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
1                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'LIFNR'          "項目ID
TEXT-F03         "項目テキスト(短)
TEXT-F03         "項目テキスト(中)
TEXT-F03         "項目テキスト(長)
10               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
10               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'NAME1'          "項目ID
TEXT-F04         "項目テキスト(短)
TEXT-F04         "項目テキスト(中)
TEXT-F04         "項目テキスト(長)
35               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
35               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'WAERS'          "項目ID
TEXT-F05         "項目テキスト(短)
TEXT-F05         "項目テキスト(中)
TEXT-F05         "項目テキスト(長)
5                "出力データ長
'CUKY'           "データ型
SPACE            "数値データ型
5                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'ZWELS'          "項目ID
TEXT-F06         "項目テキスト(短)
TEXT-F06         "項目テキスト(中)
TEXT-F06         "項目テキスト(長)
10               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
10               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'ZTERM_M'        "項目ID
TEXT-F07         "項目テキスト(短)
TEXT-F07         "項目テキスト(中)
TEXT-F07         "項目テキスト(長)
4                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
4                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'ZTERM'          "項目ID
TEXT-F08         "項目テキスト(短)
TEXT-F08         "項目テキスト(中)
TEXT-F08         "項目テキスト(長)
4                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
4                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM01'          "項目ID
TEXT-F09         "項目テキスト(短)
TEXT-F09         "項目テキスト(中)
TEXT-F09         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM02'          "項目ID
TEXT-F10         "項目テキスト(短)
TEXT-F10         "項目テキスト(中)
TEXT-F10         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM03'          "項目ID
TEXT-F11         "項目テキスト(短)
TEXT-F11         "項目テキスト(中)
TEXT-F11         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM04'          "項目ID
TEXT-F12         "項目テキスト(短)
TEXT-F12         "項目テキスト(中)
TEXT-F12         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
* 2013/11/20 ADD START "電子記録債務追加
PERFORM SET_FIELDCAT USING 'SUM14'          "項目ID
TEXT-F23         "項目テキスト(短)
TEXT-F23         "項目テキスト(中)
TEXT-F23         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
* 2013/11/20 ADD END
PERFORM SET_FIELDCAT USING 'SUM05'          "項目ID
TEXT-F13         "項目テキスト(短)
TEXT-F13         "項目テキスト(中)
TEXT-F13         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM06'          "項目ID
TEXT-F14         "項目テキスト(短)
TEXT-F14         "項目テキスト(中)
TEXT-F14         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM07'          "項目ID
TEXT-F15         "項目テキスト(短)
TEXT-F15         "項目テキスト(中)
TEXT-F15         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM08'          "項目ID
TEXT-F16         "項目テキスト(短)
TEXT-F16         "項目テキスト(中)
TEXT-F16         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM09'          "項目ID
TEXT-F17         "項目テキスト(短)
TEXT-F17         "項目テキスト(中)
TEXT-F17         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM10'          "項目ID
TEXT-F18         "項目テキスト(短)
TEXT-F18         "項目テキスト(中)
TEXT-F18         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM11'          "項目ID
TEXT-F19         "項目テキスト(短)
TEXT-F19         "項目テキスト(中)
TEXT-F19         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM12'          "項目ID
TEXT-F20         "項目テキスト(短)
TEXT-F20         "項目テキスト(中)
TEXT-F20         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SUM13'          "項目ID
TEXT-F21         "項目テキスト(短)
TEXT-F21         "項目テキスト(中)
TEXT-F21         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'LIFN2'          "項目ID
TEXT-F22         "項目テキスト(短)
TEXT-F22         "項目テキスト(中)
TEXT-F22         "項目テキスト(長)
10               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
10               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
*** 2012/02/29 ALV INSERT END ***
ENDFORM.                    " F_SET_ALV_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  SET_FIELDCAT
*&---------------------------------------------------------------------*
*       FIELD CATALOGの編集
*----------------------------------------------------------------------*
*      -->P_FIELDNAME     項目ID　　　　　　　　　　　　　　　　　必須　
*      -->P_SELLDTEXT_S   項目テキスト(短)　　　　　　　　　　　　必須
*      -->P_SELLDTEXT_S   項目テキスト(中)　　　　　　　　　　　　必須
*      -->P_SELLDTEXT_S   項目テキスト(長)　　　　　　　　　　　　必須
*      -->P_OUTPUTLEN     出力データ長(カンマ、小数点、符号含む)　必須
*      -->P_DATATYPE      データ型    　　　　　　　　　　　　　　必須
*      -->P_INTTYPE       数値データ型 　　　　　　　　　　　 金額のみ
*      -->P_INTLEN        数値データ長                            必須
*      -->P_CFIELD        金額項目の場合参照する通貨項目名    金額のみ
*      -->P_COL　　　　　 カラム位置　　　　　　　　　　　　　　　必須
*----------------------------------------------------------------------*
FORM SET_FIELDCAT USING P_FIELDNAME   TYPE SLIS_FIELDCAT_ALV-FIELDNAME
P_SELTEXT_S   TYPE ANY
P_SELTEXT_M   TYPE ANY
P_SELTEXT_L   TYPE ANY
P_OUTPUTLEN   TYPE SLIS_FIELDCAT_ALV-OUTPUTLEN
P_DATATYPE    TYPE SLIS_FIELDCAT_ALV-DATATYPE
P_INTTYPE     TYPE SLIS_FIELDCAT_ALV-INTTYPE
P_INTLEN      TYPE SLIS_FIELDCAT_ALV-INTLEN
P_CFIELDNAME  TYPE SLIS_FIELDCAT_ALV-CFIELDNAME
CHANGING P_COL         TYPE I.

DATA:W_FIELDCAT TYPE SLIS_FIELDCAT_ALV.


* カラム位置設定
P_COL = P_COL + 1.

* 見出し設定
W_FIELDCAT-COL_POS    = P_COL.             "カラム位置
W_FIELDCAT-FIELDNAME  = P_FIELDNAME.       "項目ID
W_FIELDCAT-SELTEXT_S  = P_SELTEXT_S.       "項目テキスト(短)
W_FIELDCAT-SELTEXT_M  = P_SELTEXT_M.       "項目テキスト(中)
W_FIELDCAT-SELTEXT_L  = P_SELTEXT_L.       "項目テキスト(長)
W_FIELDCAT-OUTPUTLEN  = P_OUTPUTLEN.       "出力データ長
W_FIELDCAT-DATATYPE   = P_DATATYPE.        "データ型
W_FIELDCAT-INTTYPE    = P_INTTYPE.         "数値のデータ型
W_FIELDCAT-INTLEN     = P_INTLEN.          "データ長
W_FIELDCAT-CFIELDNAME = P_CFIELDNAME.      "参照通貨


APPEND W_FIELDCAT TO I_FIELDCAT.

ENDFORM.                    " SET_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  F_SET_ALV_LAYOUT
*&---------------------------------------------------------------------*
*       その他編集
*----------------------------------------------------------------------*
FORM F_SET_ALV_LAYOUT.

*-- プログラムID取得
W_REPID = SY-REPID.

*-- レイアウト設定
W_LAYOUT-COLWIDTH_OPTIMIZE    = C_ON.  "ALV コントロール: 列幅の最適化
W_LAYOUT-DETAIL_INITIAL_LINES = C_ON.
W_LAYOUT-ZEBRA                = C_ON.
W_LAYOUT-GROUP_CHANGE_EDIT    = C_ON.

*-- バリアント
IF NOT P_LAYOUT IS INITIAL.
W_EDISVARIANT-REPORT  = W_REPID.
W_EDISVARIANT-VARIANT = P_LAYOUT.
ENDIF.

*-- ALV印刷時用 設定項目
W_PRINT-NO_PRINT_LISTINFOS = C_ON.

*-- 印刷プレビュー設定
W_SETTINGS-NO_COLWOPT = C_ON.  "自動最適化禁止

*-- 処理イベントの取得
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
I_LIST_TYPE           = 0
IMPORTING
ET_EVENTS             = I_EVENT.

*-- イベント時にコールされるFORM名を設定
CLEAR: W_EVENT.
READ TABLE I_EVENT INTO W_EVENT WITH KEY NAME = 'TOP_OF_PAGE'.
IF SY-SUBRC = 0.
W_EVENT-FORM = 'HEADER_WRITE'.
MODIFY I_EVENT INDEX SY-TABIX FROM W_EVENT.
ENDIF.

ENDFORM.                    " F_SET_ALV_LAYOUT
*&---------------------------------------------------------------------*
*&      Form  F_CALL_ALV
*&---------------------------------------------------------------------*
*       ALV一覧出力
*----------------------------------------------------------------------*
FORM F_CALL_ALV.

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM      = W_REPID     "プログラム名
I_GRID_SETTINGS         = W_SETTINGS  "グリッド設定
IS_LAYOUT               = W_LAYOUT    "レイアウト定義
IS_PRINT                = W_PRINT
IT_FIELDCAT             = I_FIELDCAT  "構造定義
I_DEFAULT               = C_ON
I_SAVE                  = C_SAVE
IS_VARIANT              = W_EDISVARIANT
IT_EVENTS               = I_EVENT
TABLES
T_OUTTAB                = I_OUTPUT     "出力データ
EXCEPTIONS
PROGRAM_ERROR           = 1
OTHERS                  = 2.

IF SY-SUBRC <> 0.
*-- ALV出力エラー
*** 2012/02/29 MOD START ***
*    MESSAGE I789 WITH TEXT-E01.
*    STOP.
MESSAGE S000 WITH 'システムエラーが発生しました'.
LEAVE LIST-PROCESSING.
*** 2012/02/29 MOD END ***
ENDIF.

ENDFORM.                    " F_CALL_ALV
*&---------------------------------------------------------------------*
*&      Form  HEADER_WRITE
*&---------------------------------------------------------------------*
*       ALVヘッダ編集
*----------------------------------------------------------------------*
FORM HEADER_WRITE.

DATA:LW_WORK     TYPE CHAR100,
LW_PAGNO(4) TYPE C.

*-- タイトル
PERFORM SET_HEADER USING C_TYP1
TEXT-H01
SPACE.

*-- ページ
CLEAR: LW_WORK,
LW_PAGNO.
LW_PAGNO = SY-PAGNO.
CONDENSE LW_PAGNO.
CONCATENATE TEXT-H02
LW_PAGNO
INTO LW_WORK.
PERFORM SET_HEADER USING C_TYP2
SPACE
LW_WORK.

*-- 処理日付
CLEAR: LW_WORK.
WRITE: SY-DATUM TO LW_WORK.
CONCATENATE TEXT-H03
LW_WORK
INTO LW_WORK.
PERFORM SET_HEADER USING C_TYP2
SPACE
LW_WORK.

*-- 処理時刻
CLEAR: LW_WORK.
WRITE: SY-UZEIT TO LW_WORK.
CONCATENATE TEXT-H04
LW_WORK
INTO LW_WORK.
PERFORM SET_HEADER USING C_TYP2
SPACE
LW_WORK.

*--- ユーザID
CLEAR: LW_WORK.
CONCATENATE TEXT-H05
SY-UNAME
INTO LW_WORK.
PERFORM SET_HEADER USING C_TYP2
SPACE
LW_WORK.

*--- 締日
CLEAR: LW_WORK.
WRITE: P_CZFBDT TO LW_WORK.
CONCATENATE TEXT-H06
LW_WORK
INTO LW_WORK.
PERFORM SET_HEADER USING C_TYP2
LW_WORK
TEXT-H07.

* ヘッダ出力
CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
EXPORTING
IT_LIST_COMMENTARY       = I_HEAD.

REFRESH: I_HEAD.

ENDFORM.                    " HEADER_WRITE
*&---------------------------------------------------------------------*
*&      Form  SET_HEADER
*&---------------------------------------------------------------------*
*       ヘッダ編集
*----------------------------------------------------------------------*
*      -->L_TYP    タイプ
*      -->L_INFO   編集内容2
*      -->L_KEY    編集内容1
*----------------------------------------------------------------------*
FORM SET_HEADER  USING     L_TYP
L_INFO
L_KEY.
CLEAR W_HEAD.
W_HEAD-TYP  = L_TYP.
W_HEAD-KEY = L_KEY.
W_HEAD-INFO = L_INFO.
APPEND W_HEAD TO I_HEAD.

ENDFORM.                    " SET_HEADER
