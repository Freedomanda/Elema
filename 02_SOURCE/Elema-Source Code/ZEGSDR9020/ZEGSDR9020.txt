*&---------------------------------------------------------------------*
*& プログラムID : ZEGSDR9020
*& 作成者       : iSiD Ye
*& 作成日       : 2016/05/26
*& 処理概要     : セット品構成部品一覧
*&---------------------------------------------------------------------*
*& 改定履歴
*& No   DATE       MODIFYED BY   SUMMARY
*& 1    2015/05/26 ISID18        新規作成
*&---------------------------------------------------------------------*

REPORT  ZEGSDR9020.
*&----------------------------------------------------------------------
* 変数定義
*&----------------------------------------------------------------------
TYPES:
TY_LIST TYPE ZSEGSD0040,  "セット品構成商品一覧_ALV一覧

*  得意先名称
BEGIN OF TY_KUNNR_NAME,
KUNNR TYPE KNA1-KUNNR,
NAME1 TYPE ADRC-NAME1,
END OF TY_KUNNR_NAME,

*  仕入先名称
BEGIN OF TY_VENDOR_NAME,
LIFNR TYPE LFA1-LIFNR,
NAME1 TYPE ADRC-NAME1,
END OF TY_VENDOR_NAME,

*タイプ定義 条件 (明細)
BEGIN OF TY_KONP,
VKORGAU TYPE A901-VKORGAU,
KUNNR TYPE A901-KUNNR,
ZZZKDMAT TYPE A901-ZZZKDMAT,
KBETR TYPE KONP-KBETR,
KONWA TYPE KONP-KONWA,
KPEIN TYPE KONP-KPEIN,
KMEIN TYPE KONP-KMEIN,
END OF TY_KONP,

*タイプ定義 仕入先
BEGIN OF TY_EORD,
MATNR TYPE EORD-MATNR,
WERKS TYPE EORD-WERKS,
LIFNR TYPE EORD-LIFNR,  "仕入先
FLIFN TYPE EORD-FLIFN, "固定仕入先
VDATU TYPE EORD-VDATU, "有効開始日
BDATU TYPE EORD-BDATU,"有効終了日
END OF TY_EORD,

*  得意先品目
BEGIN OF TY_KNMT,
VKGRP TYPE KNVV-VKGRP,
KUNNR TYPE KNMT-KUNNR,
MATNR TYPE KNMT-MATNR,
KDMAT TYPE KNMT-KDMAT,
END OF TY_KNMT,

*  品目テキスト
BEGIN OF TY_MAKT,
MATNR TYPE MAKT-MATNR,
MAKTX TYPE MAKT-MAKTX,
END OF TY_MAKT,

*  A017
BEGIN OF TY_A017,
LIFNR TYPE A017-LIFNR,
MATNR TYPE A017-MATNR,
WERKS TYPE A017-WERKS,
KNUMH TYPE A017-KNUMH,
END OF TY_A017,

*  仕入先KONP
BEGIN OF TY_KONP_VENDOR,
KNUMH TYPE KONP-KNUMH,
KBETR  TYPE KONP-KBETR, "金額/率
KONWA TYPE KONP-KONWA, "通貨
KPEIN TYPE KONP-KPEIN,   "価格条件単位
KMEIN TYPE KONP-KMEIN,    "数量単位
END OF TY_KONP_VENDOR,

BEGIN OF TY_WERKS,
WERKS TYPE WERKS,
END OF TY_WERKS,


BEGIN OF TY_KNVV_KNMT,
MATNR TYPE KNMT-MATNR,
VKGRP TYPE KNVV-VKGRP,
KUNNR TYPE KNMT-KUNNR,
END OF TY_KNVV_KNMT,

BEGIN OF TY_BOM,
MATNR TYPE MAST-MATNR,
WERKS TYPE MAST-WERKS,
IDNRK TYPE STPO-IDNRK,
MTART TYPE MARA-MTART,
MENGE TYPE STPO-MENGE,
MEINS TYPE STPO-MEINS,
STLAL TYPE STKO-STLAL,
STLAN TYPE MAST-STLAN,
END OF TY_BOM,

TYT_LIST TYPE TABLE OF TY_LIST.

DATA:
LTB_LIST TYPE STANDARD TABLE OF TY_LIST,
LST_LIST TYPE TY_LIST.

CONSTANTS:
CNS_CNT_MAX    TYPE I VALUE 500,
CNS_SIGN_I    TYPE DDSIGN      VALUE 'I',
CNS_OPTION_EQ TYPE DDOPTION    VALUE 'EQ'.

CONSTANTS:
CNS_BUKRS      TYPE USR05-PARID  VALUE 'BUK',   "会社コードパラメータID
CNS_WERKS      TYPE USR05-PARID  VALUE 'WRK'.   "プラントパラメータID
*  CNS_MATNR      TYPE USR05-PARID  VALUE 'MAT'.   "品目コードパラメータID

*&----------------------------------------------------------------------
* 選択画面定義(1000)
*&----------------------------------------------------------------------
SELECTION-SCREEN BEGIN OF BLOCK BL1 WITH FRAME TITLE TEXT-001.
*  会社コード
PARAMETERS:P_BUKRS TYPE BUKRS.
*プラント
SELECT-OPTIONS: S_WERKS FOR LST_LIST-WERKS.
*得意先コード
SELECT-OPTIONS: S_KUNNR FOR LST_LIST-KUNNR.
*営業グループ
SELECT-OPTIONS: S_VKGRP FOR LST_LIST-VKGRP.
*親品目コード
SELECT-OPTIONS: S_MATNR FOR LST_LIST-MATNR.
*BOM用途
SELECT-OPTIONS: S_STLAN FOR LST_LIST-STLAN.
*代替BOM
SELECT-OPTIONS: S_STLAL FOR LST_LIST-STLAL.
*BOM構成品目
SELECT-OPTIONS: S_IDNRK FOR LST_LIST-IDNRK.

SELECTION-SCREEN END OF BLOCK BL1.

*----------------------------------------------------------------------*
* INITIALIZATION
*----------------------------------------------------------------------*
INITIALIZATION.
* 初期処理
GET PARAMETER ID CNS_BUKRS FIELD P_BUKRS.

*  プラント
S_WERKS-SIGN = CNS_SIGN_I.
S_WERKS-OPTION = CNS_OPTION_EQ.
GET PARAMETER ID CNS_WERKS FIELD S_WERKS-LOW.
IF S_WERKS-LOW IS NOT INITIAL .
APPEND S_WERKS.
ENDIF.

*----------------------------------------------------------------------*
* AT SELETION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
*  入力チェック
PERFORM FM_CHECK.

*----------------------------------------------------------------------*
* START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.
* 主処理
PERFORM FM_GET_DATA CHANGING LTB_LIST.

*  ALV画面表示
PERFORM FM_SET_ALV USING LTB_LIST.

*&---------------------------------------------------------------------*
*&      Form  FM_GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_LTB_LIST  text
*----------------------------------------------------------------------*
FORM FM_GET_DATA  CHANGING PTB_LIST TYPE TYT_LIST.
DATA:
LTB_LIST TYPE STANDARD TABLE OF TY_LIST,
LTB_LIST_TMP TYPE STANDARD TABLE OF TY_LIST,
LST_LIST TYPE TY_LIST,
LST_LIST_TMP TYPE TY_LIST,
LTB_BOM TYPE STANDARD TABLE OF TY_BOM,
LST_BOM TYPE TY_BOM,
LTB_KUNNR_NAME TYPE STANDARD TABLE OF TY_KUNNR_NAME,
LST_KUNNR_NAME TYPE TY_KUNNR_NAME,
LTB_VENDOR_NAME TYPE STANDARD TABLE OF TY_VENDOR_NAME,
LST_VENDOR_NAME TYPE TY_VENDOR_NAME,
LTB_KONP_KUNNR TYPE STANDARD TABLE OF TY_KONP,
LTB_KONP_KUNNR_TMP TYPE STANDARD TABLE OF TY_KONP,
LST_KONP_KUNNR TYPE TY_KONP,
LTB_KONP_VENDOR TYPE STANDARD TABLE OF TY_KONP_VENDOR,
LST_KONP_VENDOR TYPE TY_KONP_VENDOR,
LST_EORD TYPE TY_EORD,
LTB_EORD TYPE STANDARD TABLE OF TY_EORD,
LTB_EORD_TMP TYPE STANDARD TABLE OF TY_EORD,
LTB_A017_TMP TYPE STANDARD TABLE OF TY_A017,
LTB_A017 TYPE STANDARD TABLE OF TY_A017,
LST_A017 TYPE TY_A017,
LW_CNT TYPE I,
LTB_KNMT TYPE STANDARD TABLE OF TY_KNMT,
LST_KNMT TYPE TY_KNMT,
LTB_MAKT TYPE STANDARD TABLE OF TY_MAKT,
LST_MAKT TYPE TY_MAKT,
LRD_MATNR TYPE RANGE OF MATNR,
LRH_MATNR LIKE LINE OF LRD_MATNR,
LRD_MATNR_SELECT TYPE RANGE OF MATNR,
LRD_IDNRK TYPE RANGE OF ZSEGSD0040-IDNRK,
LRD_IDNRK_SELECT TYPE RANGE OF ZSEGSD0040-IDNRK,
LRH_IDNRK LIKE LINE OF LRD_IDNRK,
LRD_KDMAT TYPE RANGE OF ZSEGSD0040-KDMAT,
LRH_KDMAT LIKE LINE OF LRD_KDMAT,
LRD_KDMAT_SELECT TYPE RANGE OF ZSEGSD0040-KDMAT,
LRD_WERKS TYPE RANGE OF WERKS,
LRH_WERKS LIKE LINE OF LRD_WERKS,
LST_WERKS TYPE TY_WERKS,
LTB_WERKS TYPE STANDARD TABLE OF TY_WERKS,
LTB_KNVV_KNMT TYPE STANDARD TABLE OF TY_KNVV_KNMT,
LST_KNVV_KNMT TYPE TY_KNVV_KNMT.

DATA:
LW_CNT_RECORD TYPE I,
LW_CNT_START  TYPE I,
LW_CNT_END    TYPE I.

DATA:
LW_VKORG TYPE TVKO-VKORG.

FIELD-SYMBOLS:
<FS_LIST> TYPE TY_LIST.

*******************
*  販売組織取得
*******************
SELECT SINGLE
VKORG
FROM TVKO
INTO LW_VKORG
WHERE BUKRS = P_BUKRS.

*******************
*  プラント取得
*******************
IF S_WERKS IS INITIAL.
SELECT
T001W~WERKS
INTO TABLE LTB_WERKS
FROM T001W
INNER JOIN T001K
ON T001W~BWKEY = T001K~BWKEY
WHERE T001K~BUKRS = P_BUKRS.

LOOP AT LTB_WERKS INTO LST_WERKS.
LRH_WERKS-SIGN = CNS_SIGN_I.
LRH_WERKS-OPTION = CNS_OPTION_EQ.
LRH_WERKS-LOW = LST_WERKS-WERKS.
APPEND LRH_WERKS TO S_WERKS.
ENDLOOP.
ENDIF.

*******************
*  BOMデータ取得
*******************
SELECT
MAST~MATNR
MAST~WERKS
STPO~IDNRK
MARA~MTART
STPO~MENGE
STPO~MEINS
STKO~STLAL
MAST~STLAN
INTO TABLE LTB_BOM
FROM ( STKO
INNER JOIN MAST
ON MAST~STLAL = STKO~STLAL
AND MAST~STLNR = STKO~STLNR
INNER JOIN STAS
ON STAS~STLAL = STKO~STLAL
AND STAS~STLNR = STKO~STLNR
AND STAS~STLTY = STKO~STLTY
INNER JOIN STPO
ON STPO~STLKN = STAS~STLKN
AND STPO~STLNR = STAS~STLNR
AND STPO~STLTY = STAS~STLTY
INNER JOIN MARA
ON MARA~MATNR = STPO~IDNRK )
WHERE STKO~STLAL IN S_STLAL
AND MAST~WERKS IN S_WERKS
AND MAST~MATNR IN S_MATNR
AND MAST~STLAN IN S_STLAN
AND STPO~IDNRK IN S_IDNRK.

IF SY-SUBRC <> 0.
*    対象データがありませんでした
MESSAGE S020(Z3) DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.

******************************
*  親品目の得意先取得
******************************
LOOP AT LTB_BOM INTO LST_BOM.
LRH_MATNR-SIGN = CNS_SIGN_I.
LRH_MATNR-OPTION = CNS_OPTION_EQ.
LRH_MATNR-LOW = LST_BOM-MATNR.
APPEND LRH_MATNR TO LRD_MATNR.
ENDLOOP.

SORT LRD_MATNR BY LOW.
DELETE ADJACENT DUPLICATES FROM LRD_MATNR.

LW_CNT_START = 1.
LW_CNT_END = 500.
LW_CNT_RECORD = LINES( LRD_MATNR ).

WHILE LW_CNT_RECORD >= LW_CNT_START.
REFRESH LRD_MATNR_SELECT.
APPEND LINES OF LRD_MATNR FROM LW_CNT_START TO LW_CNT_END
TO LRD_MATNR_SELECT.

SELECT
KNMT~MATNR
KNVV~VKGRP
KNMT~KUNNR
FROM KNMT
INNER JOIN KNVV
ON KNVV~KUNNR = KNMT~KUNNR
APPENDING  TABLE LTB_KNVV_KNMT
WHERE KNVV~VKORG = LW_VKORG
AND KNMT~VKORG = LW_VKORG
AND KNVV~VKGRP IN S_VKGRP
AND KNVV~KUNNR IN S_KUNNR
AND KNMT~MATNR IN LRD_MATNR_SELECT.

LW_CNT_START = LW_CNT_START + CNS_CNT_MAX.
LW_CNT_END   = LW_CNT_END   + CNS_CNT_MAX.

ENDWHILE.


LOOP AT LTB_KNVV_KNMT INTO LST_KNVV_KNMT.
LOOP AT LTB_BOM INTO LST_BOM
WHERE MATNR = LST_KNVV_KNMT-MATNR.

LST_LIST-MATNR = LST_BOM-MATNR.
LST_LIST-WERKS = LST_BOM-WERKS.
LST_LIST-IDNRK = LST_BOM-IDNRK.
LST_LIST-MTART = LST_BOM-MTART.
LST_LIST-MENGE = LST_BOM-MENGE.
LST_LIST-MEINS = LST_BOM-MEINS.
LST_LIST-STLAL = LST_BOM-STLAL.
LST_LIST-STLAN = LST_BOM-STLAN.
LST_LIST-KUNNR = LST_KNVV_KNMT-KUNNR.
LST_LIST-VKGRP = LST_KNVV_KNMT-VKGRP.
APPEND LST_LIST TO LTB_LIST.
ENDLOOP.
ENDLOOP.

******************************
*  RANGE TABLE設定
******************************
LOOP AT LTB_LIST INTO LST_LIST.
LRH_IDNRK-SIGN = CNS_SIGN_I.
LRH_IDNRK-OPTION = CNS_OPTION_EQ.
LRH_IDNRK-LOW = LST_LIST-IDNRK.
APPEND LRH_IDNRK TO LRD_IDNRK.
ENDLOOP.

SORT LRD_IDNRK BY LOW.
DELETE ADJACENT DUPLICATES FROM LRD_IDNRK.

******************************
*  得意先品目取得
******************************
LW_CNT_START = 1.
LW_CNT_END = 500.
LW_CNT_RECORD = LINES( LRD_IDNRK ).

WHILE LW_CNT_RECORD >= LW_CNT_START.
REFRESH LRD_IDNRK_SELECT.
APPEND LINES OF LRD_IDNRK FROM LW_CNT_START TO LW_CNT_END
TO LRD_IDNRK_SELECT.

SELECT
KNVV~VKGRP
KNMT~KUNNR
KNMT~MATNR
KNMT~KDMAT
FROM KNMT
INNER JOIN KNVV
ON KNVV~KUNNR = KNMT~KUNNR
APPENDING TABLE LTB_KNMT
WHERE KNVV~VKORG = LW_VKORG
AND KNMT~VKORG = LW_VKORG
AND KNVV~VKGRP IN S_VKGRP
AND KNVV~KUNNR IN S_KUNNR
AND KNMT~MATNR IN LRD_IDNRK_SELECT.

LW_CNT_START = LW_CNT_START + CNS_CNT_MAX.
LW_CNT_END   = LW_CNT_END   + CNS_CNT_MAX.

ENDWHILE.

LOOP AT LTB_LIST ASSIGNING <FS_LIST>.
READ TABLE LTB_KNMT INTO LST_KNMT
WITH KEY MATNR = <FS_LIST>-IDNRK
VKGRP = <FS_LIST>-VKGRP
KUNNR = <FS_LIST>-KUNNR.

IF SY-SUBRC = 0.
<FS_LIST>-KDMAT = LST_KNMT-KDMAT.
ENDIF.
ENDLOOP.

******************************
*  仕入先設定
******************************
LW_CNT_START = 1.
LW_CNT_END = 500.
LW_CNT_RECORD = LINES( LRD_IDNRK ).

WHILE LW_CNT_RECORD >= LW_CNT_START.
REFRESH LRD_IDNRK_SELECT.
APPEND LINES OF LRD_IDNRK FROM LW_CNT_START TO LW_CNT_END
TO LRD_IDNRK_SELECT.

*  購買元一覧 から取得
SELECT
MATNR
WERKS
LIFNR  "仕入先
FLIFN  "固定仕入先
VDATU "有効開始日
BDATU"有効終了日
FROM EORD
APPENDING TABLE LTB_EORD
WHERE MATNR IN LRD_IDNRK_SELECT "構成子部品
AND WERKS IN S_WERKS.  "プラント

LW_CNT_START = LW_CNT_START + CNS_CNT_MAX.
LW_CNT_END   = LW_CNT_END   + CNS_CNT_MAX.
ENDWHILE.

LOOP AT LTB_LIST ASSIGNING <FS_LIST>.

CLEAR:
LTB_EORD_TMP,
LST_EORD,
LW_CNT.

LOOP AT LTB_EORD INTO LST_EORD
WHERE MATNR = <FS_LIST>-IDNRK
AND WERKS = <FS_LIST>-WERKS.
APPEND LST_EORD TO LTB_EORD_TMP.
ENDLOOP.

*    件数カウント
LW_CNT = LINES( LTB_EORD_TMP ).
IF LW_CNT =  0.
*      仕入価格情報を空白とする
CLEAR:
<FS_LIST>-VENDOR,
<FS_LIST>-VENDOR_NAME,
<FS_LIST>-VENDOR_TANI,
<FS_LIST>-VENDOR_TANKA,
<FS_LIST>-VENDOR_TSUKA.
ELSEIF LW_CNT = 1.
*      購買元は1件のみある場合
READ TABLE LTB_EORD_TMP INTO LST_EORD INDEX 1.
*      対象仕入先
<FS_LIST>-VENDOR = LST_EORD-LIFNR.
ELSE.
*      購買元は複数ある場合、有効期間内の固定仕入先を対象とする
LOOP AT LTB_EORD_TMP INTO LST_EORD
WHERE FLIFN =  'X'
AND VDATU <= SY-DATUM
AND BDATU >= SY-DATUM.
<FS_LIST>-VENDOR = LST_EORD-LIFNR.
EXIT.
ENDLOOP.
*      有効期間内の固定仕入先が設定されていない場合、
*      有効期間内の仕入先を対象とする
IF SY-SUBRC <> 0.
LOOP AT LTB_EORD_TMP INTO LST_EORD
WHERE VDATU <= SY-DATUM
AND BDATU >= SY-DATUM.
<FS_LIST>-VENDOR = LST_EORD-LIFNR.
EXIT.
ENDLOOP.
ENDIF.
*      有効期間内の仕入先がない場合、
*      最大有効終了日の仕入先を対象とする
IF SY-SUBRC <> 0.
SORT LTB_EORD_TMP BY BDATU DESCENDING.
*        有効終了日が最大の仕入先を対象とする
READ TABLE LTB_EORD_TMP INTO LST_EORD INDEX 1.
<FS_LIST>-VENDOR = LST_EORD-LIFNR.
ENDIF.
ENDIF.
ENDLOOP.

******************************
*仕入名称
******************************
SELECT
LFA1~LIFNR
ADRC~NAME1
INTO TABLE LTB_VENDOR_NAME
FROM LFA1
INNER JOIN ADRC
ON ADRC~ADDRNUMBER = LFA1~ADRNR
FOR ALL ENTRIES IN LTB_LIST
WHERE LFA1~LIFNR = LTB_LIST-VENDOR.
*    AND ADRC~LANGU = SY-LANGU.

*******************
*  得意先名称
*******************
SELECT
KNA1~KUNNR
ADRC~NAME1
INTO TABLE LTB_KUNNR_NAME
FROM KNA1
INNER JOIN ADRC
ON KNA1~ADRNR = ADRC~ADDRNUMBER
FOR ALL ENTRIES IN LTB_LIST
WHERE KNA1~KUNNR = LTB_LIST-KUNNR.
*    AND ADRC~LANGU = SY-LANGU.

******************************
*  仕入価格情報設定
******************************
LW_CNT_START = 1.
LW_CNT_END = 500.
LW_CNT_RECORD = LINES( LRD_IDNRK ).

WHILE LW_CNT_RECORD >= LW_CNT_START.
REFRESH LRD_IDNRK_SELECT.
APPEND LINES OF LRD_IDNRK FROM LW_CNT_START TO LW_CNT_END
TO LRD_IDNRK_SELECT.

*仕入価格情報取得
SELECT
LIFNR
MATNR
WERKS
KNUMH
APPENDING TABLE LTB_A017_TMP
FROM A017
WHERE KSCHL = 'ZPB1'  "条件タイプ
AND MATNR IN LRD_IDNRK_SELECT  "構成子部品
AND WERKS IN S_WERKS  "プラント
AND DATBI  >= SY-DATUM "有効終了日
AND DATAB <= SY-DATUM. "有効開始日

LW_CNT_START = LW_CNT_START + CNS_CNT_MAX.
LW_CNT_END   = LW_CNT_END   + CNS_CNT_MAX.
ENDWHILE.

LOOP AT LTB_A017_TMP INTO LST_A017.
LOOP AT LTB_LIST INTO LST_LIST
WHERE VENDOR = LST_A017-LIFNR
AND IDNRK = LST_A017-MATNR
AND WERKS = LST_A017-WERKS.

APPEND LST_A017 TO LTB_A017.
ENDLOOP.
ENDLOOP.

IF LTB_A017 IS NOT INITIAL.
SELECT
KNUMH
KBETR   "金額/率
KONWA  "通貨
KPEIN    "価格条件単位
KMEIN    "数量単位
FROM KONP
INTO TABLE LTB_KONP_VENDOR
FOR ALL ENTRIES IN LTB_A017
WHERE KNUMH = LTB_A017-KNUMH
AND LOEVM_KO = SPACE.  "削除フラグ
ENDIF.

******************************
*  販売価格情報
******************************
LOOP AT LTB_LIST INTO LST_LIST.
LRH_KDMAT-SIGN = CNS_SIGN_I.
LRH_KDMAT-OPTION = CNS_OPTION_EQ.
LRH_KDMAT-LOW = LST_LIST-KDMAT.
APPEND LRH_KDMAT TO LRD_KDMAT.
ENDLOOP.

SORT LRD_KDMAT BY LOW.
DELETE ADJACENT DUPLICATES FROM LRD_KDMAT.

LW_CNT_START = 1.
LW_CNT_END = 500.
LW_CNT_RECORD = LINES( LRD_KDMAT ).

WHILE LW_CNT_RECORD >= LW_CNT_START.
REFRESH LRD_KDMAT_SELECT.
APPEND LINES OF LRD_KDMAT FROM LW_CNT_START TO LW_CNT_END
TO LRD_KDMAT_SELECT.

*  販売価格情報取得
SELECT
A901~VKORGAU
A901~KUNNR
A901~ZZZKDMAT
KONP~KBETR   "金額/率
KONP~KONWA  "通貨
KONP~KPEIN    "価格条件単位
KONP~KMEIN    "数量単位
APPENDING TABLE LTB_KONP_KUNNR_TMP
FROM KONP
INNER JOIN A901
ON KONP~KNUMH = A901~KNUMH  "条件レコードNo.
WHERE A901~KSCHL = 'ZPR0'  "条件タイプ
AND A901~VKORGAU = LW_VKORG  "販売組織
AND A901~ZZZKDMAT IN LRD_KDMAT_SELECT "得意先品目
AND A901~KFRST = SPACE  "承認ステータス
AND A901~DATBI  >= SY-DATUM "有効終了日
AND A901~DATAB <= SY-DATUM "有効開始日
AND KONP~LOEVM_KO = SPACE.  "削除フラグ

LW_CNT_START = LW_CNT_START + CNS_CNT_MAX.
LW_CNT_END   = LW_CNT_END   + CNS_CNT_MAX.
ENDWHILE.

LOOP AT LTB_KONP_KUNNR_TMP INTO LST_KONP_KUNNR.
LOOP AT LTB_LIST INTO LST_LIST
WHERE KUNNR = LST_KONP_KUNNR-KUNNR
AND KDMAT = LST_KONP_KUNNR-ZZZKDMAT.
APPEND LST_KONP_KUNNR TO LTB_KONP_KUNNR.
ENDLOOP.
ENDLOOP.

******************************
*  品目テキスト取得
******************************
LOOP AT LTB_LIST INTO LST_LIST.
LRH_MATNR-SIGN = 'I'.
LRH_MATNR-OPTION = 'EQ'.
LRH_MATNR-LOW = LST_LIST-MATNR.
APPEND LRH_MATNR TO LRD_MATNR.

LRH_MATNR-SIGN = 'I'.
LRH_MATNR-OPTION = 'EQ'.
LRH_MATNR-LOW = LST_LIST-IDNRK.
APPEND LRH_MATNR TO LRD_MATNR.
ENDLOOP.

SORT LRD_MATNR BY LOW.
DELETE ADJACENT DUPLICATES FROM LRD_MATNR.

LW_CNT_START = 1.
LW_CNT_END = 500.
LW_CNT_RECORD = LINES( LRD_MATNR ).

WHILE LW_CNT_RECORD >= LW_CNT_START.
REFRESH LRD_MATNR_SELECT.
APPEND LINES OF LRD_MATNR FROM LW_CNT_START TO LW_CNT_END
TO LRD_MATNR_SELECT.

SELECT
MATNR
MAKTX
FROM MAKT
APPENDING TABLE LTB_MAKT
WHERE MATNR IN LRD_MATNR_SELECT
AND SPRAS = SY-LANGU.

LW_CNT_START = LW_CNT_START + CNS_CNT_MAX.
LW_CNT_END   = LW_CNT_END   + CNS_CNT_MAX.
ENDWHILE.
*******************
*  一覧リストへ設定
*******************
LOOP AT LTB_LIST ASSIGNING <FS_LIST>.
*******************
*    販売価格
*******************
READ TABLE LTB_KONP_KUNNR INTO LST_KONP_KUNNR
WITH KEY VKORGAU = LW_VKORG
KUNNR = <FS_LIST>-KUNNR
ZZZKDMAT = <FS_LIST>-KDMAT.
IF SY-SUBRC = 0.
*   販売単位
<FS_LIST>-HANBAI_TANI = LST_KONP_KUNNR-KMEIN.
*   販売単価
<FS_LIST>-HANBAI_TANKA = LST_KONP_KUNNR-KBETR.
*    販売価格条件単位
<FS_LIST>-HANBAI_TANKATANI = LST_KONP_KUNNR-KPEIN.
*   販売通貨
<FS_LIST>-HANBAI_TSUKA = LST_KONP_KUNNR-KONWA.
ENDIF.

*******************
*    仕入価格
*******************
READ TABLE LTB_A017 INTO LST_A017
WITH KEY LIFNR = <FS_LIST>-VENDOR
MATNR = <FS_LIST>-IDNRK
WERKS = <FS_LIST>-WERKS.

IF SY-SUBRC = 0.

READ TABLE LTB_KONP_VENDOR INTO LST_KONP_VENDOR
WITH KEY KNUMH = LST_A017-KNUMH.

*仕入単位
<FS_LIST>-VENDOR_TANI = LST_KONP_VENDOR-KMEIN.
*仕入単価
<FS_LIST>-VENDOR_TANKA = LST_KONP_VENDOR-KBETR.
*仕入価格条件単位
<FS_LIST>-VENDOR_TANKATANI = LST_KONP_VENDOR-KPEIN.
*仕入通貨
<FS_LIST>-VENDOR_TSUKA = LST_KONP_VENDOR-KONWA.
ENDIF.

*******************
*    得意先名称
*******************
READ TABLE LTB_KUNNR_NAME INTO LST_KUNNR_NAME
WITH KEY KUNNR = <FS_LIST>-KUNNR.
IF SY-SUBRC = 0.
<FS_LIST>-KUNNR_NAME = LST_KUNNR_NAME-NAME1.
ENDIF.

*******************
*    仕入先名称
*******************
READ TABLE LTB_VENDOR_NAME INTO LST_VENDOR_NAME
WITH KEY LIFNR = <FS_LIST>-VENDOR.
IF SY-SUBRC = 0.
<FS_LIST>-VENDOR_NAME = LST_VENDOR_NAME-NAME1.
ENDIF.

*******************
*    品目テキスト
*******************
READ TABLE LTB_MAKT INTO LST_MAKT
WITH KEY MATNR = <FS_LIST>-MATNR.

IF SY-SUBRC = 0.
<FS_LIST>-MATNR_TEXT = LST_MAKT-MAKTX.
ENDIF.

READ TABLE LTB_MAKT INTO LST_MAKT
WITH KEY MATNR = <FS_LIST>-IDNRK.

IF SY-SUBRC = 0.
<FS_LIST>-IDNRK_TEXT = LST_MAKT-MAKTX.
ENDIF.
ENDLOOP.

SORT LTB_LIST BY MATNR ASCENDING
WERKS ASCENDING
STLAL ASCENDING
STLAN ASCENDING
KUNNR ASCENDING
IDNRK ASCENDING.

PTB_LIST = LTB_LIST.
ENDFORM.                    " FM_GET_DATA
*&---------------------------------------------------------------------*
*&      Form  FM_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FM_CHECK .
DATA:
L_COUNT TYPE I,
L_BUKRS TYPE BUKRS.
* 会社コード存在チェック
SELECT COUNT(*)
INTO L_COUNT
FROM T001
WHERE BUKRS = P_BUKRS.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'S_BUKRS-LOW'.
MESSAGE E016(Z3) WITH SPACE.
ELSE.
IF L_COUNT > 1.
SET CURSOR FIELD 'S_BUKRS-LOW'.
MESSAGE E056(TL).
ENDIF.
ENDIF.
* 会社コード範囲限定
SELECT BUKRS
UP TO 1 ROWS
INTO L_BUKRS
FROM T001
WHERE BUKRS = P_BUKRS.
ENDSELECT.
* 会社コード権限チェック
AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
ID 'BUKRS' FIELD L_BUKRS
ID 'ACTVT' FIELD '03'.
IF SY-SUBRC <> 0.
MESSAGE E015(Z3) WITH L_BUKRS.
ENDIF.
* プラントチェック
DATA LRD_WERKS TYPE RANGE_T_WERKS.
LRD_WERKS[] = S_WERKS[].
CALL FUNCTION 'ZEG_ZZ_WERKS_CHK'
EXPORTING
IMPBUKRS           = L_BUKRS
IMPRNGWERKS        = LRD_WERKS
IMPORTING
EXPWERKS           = LRD_WERKS
EXCEPTIONS
WERKS_NOT_EXIST    = 1
WERKS_NO_AUTHORITY = 2
WERKS_BUKRS_ERROR  = 3
OTHERS             = 4.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
ENDFORM.                    " FM_CHECK
*&---------------------------------------------------------------------*
*&      Form  FM_SET_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_LTB_LIST  text
*----------------------------------------------------------------------*
FORM FM_SET_ALV  USING PTB_LIST TYPE TYT_LIST.

DATA:
LTB_FIELDCAT TYPE LVC_T_FCAT,     "ITAB:FIELDCAT
LST_LAYOUT   TYPE LVC_S_LAYO.     "ST:LAYOUT

*******************
* FIELDCAT属性の設定
*******************
CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
EXPORTING
I_STRUCTURE_NAME       = 'ZSEGSD0040'
CHANGING
CT_FIELDCAT            = LTB_FIELDCAT
EXCEPTIONS
INCONSISTENT_INTERFACE = 1
PROGRAM_ERROR          = 2
OTHERS                 = 3.

IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
LEAVE TO SCREEN 0 .
ENDIF.

*******************
* LAYOUTの設定
*******************

* レイアウト属性の設定
* ストライプ
LST_LAYOUT-ZEBRA = 'X'.

* ALV コントロール: 列幅の最適化
LST_LAYOUT-CWIDTH_OPT = 'X'.

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
EXPORTING
I_CALLBACK_PROGRAM = SY-REPID
IS_LAYOUT_LVC      = LST_LAYOUT
IT_FIELDCAT_LVC    = LTB_FIELDCAT
I_SAVE             = 'A'
TABLES
T_OUTTAB           = PTB_LIST
EXCEPTIONS
PROGRAM_ERROR      = 1
OTHERS             = 2.

IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
DISPLAY LIKE 'E'.

LEAVE LIST-PROCESSING.
ENDIF.

ENDFORM.                    " FM_SET_ALV
*Text symbol text・
*001:Program Select
*Selection text・
*P_BUKRS:        Company Code
*S_IDNRK:        BOM  Commodities Component
*S_KUNNR:        Customer Code
*S_MATNR:        Material Code
*S_STLAL:        Alternative BOM
*S_STLAN:        BOM Usage
*S_VKGRP:        Sales Group
*S_WERKS:        Plant
