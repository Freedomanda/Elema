*&---------------------------------------------------------------------*
*& Report  Z_CCS_TEST02
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_CCS_TEST02.
*DATA:
*GF_LAYOUT   TYPE SLIS_LAYOUT_ALV,      "レイアウト構造
*GT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
*GT_ALV TYPE STANDARD TABLE OF ZSEGSD0014.
*
*  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
*    EXPORTING
**      I_CALLBACK_PROGRAM     = 'ZM011300'           "レポートID
*      I_CALLBACK_PROGRAM      = SY-REPID           "20030916  MOD
** Del ES-UP 2012/09/07 -->
**      I_CALLBACK_TOP_OF_PAGE  = TOP_OF_PAGE          "G_HEAD_FRM
** Del ES-UP 2012/09/07 <--
**      I_STRUCTURE_NAME        = 'ZMLIST_V13'        "構造
*      I_STRUCTURE_NAME        = 'ZSEGSD0014'        "20030916  MOD
*      IS_LAYOUT               = GF_LAYOUT            "レイアウト設定
*      IT_FIELDCAT             = GT_FIELDCAT          "カタログ設定
*      I_CALLBACK_TOP_OF_PAGE  = 'TOP_OF_PAGE'
*      I_SAVE                  = 'A'                  "レイアウト保存
**      IT_EVENTS               = GT_EVENT[]           "イベント設定
**      IS_PRINT                = GF_PRINT             "印刷設定
*    TABLES
*      T_OUTTAB                = GT_ALV[]
*    EXCEPTIONS
*      PROGRAM_ERROR           = 1
*      OTHERS                  = 2.
*
*
*FORM TOP_OF_PAGE.
*
**  DATA:
**    lt_listheader TYPE slis_t_listheader.
*
** Source Type:
*  WRITE:    '1',
*         19 '2',
*         29 '3'.
*
**  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
**    EXPORTING
**      IT_LIST_COMMENTARY       = lt_listheader
***     I_LOGO                   =
***     I_END_OF_LIST_GRID       =
***     I_ALV_FORM               =
**            .
*
*** ShippingPt:
**  WRITE:/ text-H02,
**         19 ST_HEADLINE-VSTEL,
**         29 ST_HEADLINE-VTEXT.
**
*** Outbound Delivery:
**  WRITE:/ text-H03,
**         19 ST_HEADLINE-VBELN.
*
*
*
**  CLEAR:
**    lw_name,
**    LW_INFO.
**  lw_name = 'Outbound Delivery:'.
**  LW_INFO = ST_HEADLINE-VTEXT.
**  PERFORM set_header USING lw_name
**                           8
**                           LW_INFO.
*
*
**  CLEAR LST_LISTHEADER.
**
**  LST_LISTHEADER-TYP = 'S'.
**  LST_LISTHEADER-KEY = .
**  LST_LISTHEADER-INFO = ST_HEADLINE-VBELN.
**  APPEND LST_LISTHEADER TO LTD_LISTHEADER.
**
*** Planed GI:
**  CLEAR LST_LISTHEADER.
**  LST_LISTHEADER-TYP = 'S'.
**  LST_LISTHEADER-KEY = 'Planed GI:'.
**  LST_LISTHEADER-INFO = ST_HEADLINE-WADAT.
**  APPEND LST_LISTHEADER TO LTD_LISTHEADER.
**
*** Sold-to party:
**  CLEAR LST_LISTHEADER.
**  LST_LISTHEADER-TYP = 'S'.
**  LST_LISTHEADER-KEY = 'Sold-to party:'.
**  CLEAR LW_INFO.
**  LW_INFO+0(10) = ST_HEADLINE-KUNAG.
**  LW_INFO+15(45) = ST_HEADLINE-SOLDTONAME.
**  LST_LISTHEADER-INFO = LW_INFO.
**  APPEND LST_LISTHEADER TO LTD_LISTHEADER.
**
*** Ship-to party:
**  CLEAR LST_LISTHEADER.
**  LST_LISTHEADER-TYP = 'S'.
**  LST_LISTHEADER-KEY = 'Ship-to party:'.
**  CLEAR LW_INFO.
**  LW_INFO+0(10) = ST_HEADLINE-KUNNR.
**  LW_INFO+15(45) = ST_HEADLINE-SHIPTONAME.
**  LST_LISTHEADER-INFO = LW_INFO.
**  APPEND LST_LISTHEADER TO LTD_LISTHEADER.
**
**  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
**    EXPORTING
**      IT_LIST_COMMENTARY = LTD_LISTHEADER
***     I_LOGO             =
***     I_END_OF_LIST_GRID =
***     I_ALV_FORM         =
**    .
*
*
*ENDFORM.                    "HTML_TOP_OF_PAGE

TYPE-POOLS: SLIS, SLIST.
DATA: BEGIN OF GS_LIST,
A TYPE CHAR04,
B TYPE CHAR04,
C TYPE CHAR04,
D TYPE CHAR04,
E TYPE CHAR04,
F TYPE CHAR04,
G TYPE CHAR04,
END OF GS_LIST.
DATA: GT_LIST LIKE STANDARD TABLE OF GS_LIST.

PERFORM SET_DATA_LIST.
PERFORM SET_DATA_ALV.
*PERFORM ALV_DISPLAY.

*&---------------------------------------------------------------------*
*&      Form  SET_DATA_LIST
*&---------------------------------------------------------------------*
FORM SET_DATA_LIST .
DEFINE FILL_LIST.
GS_LIST-A = &1.
GS_LIST-B = &2.
GS_LIST-C = &3.
GS_LIST-D = &4.
GS_LIST-E = &5.
GS_LIST-F = &6.
GS_LIST-G = &7.
APPEND GS_LIST TO GT_LIST.
CLEAR GS_LIST.
END-OF-DEFINITION.
FILL_LIST: 'AAAA' 'BBBB' 'CCCC' 'DDDD' 'EEEE' 'FFFF' 'GGGG',
'1111' '2222' '3333' '4444' '5555' '6666' '7777'.
ENDFORM.                    " SET_DATA_LIST

*&---------------------------------------------------------------------*
*&      Form  SET_DATA_ALV
*&---------------------------------------------------------------------*
FORM SET_DATA_ALV .
DATA: LT_FCAT  TYPE SLIS_T_FIELDCAT_ALV,
LT_EVENT TYPE SLIS_T_EVENT,
LS_FCAT  TYPE SLIS_FIELDCAT_ALV,
LS_EVENT TYPE SLIS_ALV_EVENT.
DEFINE FILL_FCAT.
LS_FCAT-FIELDNAME = &1.
LS_FCAT-KEY       = &2.
LS_FCAT-OUTPUTLEN = &3.
LS_FCAT-SELTEXT_L = &4.
APPEND LS_FCAT TO LT_FCAT.
CLEAR LS_FCAT.
END-OF-DEFINITION.
FILL_FCAT: 'A' 'X' '4' 'FLD0',
'B' ' ' '4' 'FLD1',
'C' ' ' '4' 'FLD2',
'D' ' ' '4' 'FLD3',
'E' ' ' '4' 'FLD4',
'F' ' ' '4' 'FLD5',
'G' ' ' '4' 'FLD6'.
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
I_LIST_TYPE     = 0
IMPORTING
ET_EVENTS       = LT_EVENT
EXCEPTIONS
LIST_TYPE_WRONG = 1
OTHERS          = 2.
IF SY-SUBRC = 0.
LOOP AT LT_EVENT INTO LS_EVENT.
CASE LS_EVENT-NAME.
WHEN SLIS_EV_AFTER_LINE_OUTPUT.
LS_EVENT-FORM = SLIS_EV_AFTER_LINE_OUTPUT.
WHEN SLIS_EV_TOP_OF_PAGE.
LS_EVENT-FORM = SLIS_EV_TOP_OF_PAGE.
WHEN OTHERS.
ENDCASE.
MODIFY LT_EVENT FROM LS_EVENT.
CLEAR LS_EVENT.
ENDLOOP.
ENDIF.

CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM = SY-REPID
IT_FIELDCAT        = LT_FCAT
IT_EVENTS          = LT_EVENT
TABLES
T_OUTTAB           = GT_LIST
EXCEPTIONS
PROGRAM_ERROR      = 1
OTHERS             = 2.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
ENDFORM.                    " SET_DATA_ALV

*&---------------------------------------------------------------------*
*&      Form  TOP_OF_PAGE
*&---------------------------------------------------------------------*
FORM TOP_OF_PAGE .
* #留表#空#
WRITE: / SY-ULINE,
/ SY-ULINE,
/ SY-ULINE,
/ SY-ULINE.
ENDFORM.                    " TOP_OF_PAGE

*&---------------------------------------------------------------------*
*&      Form  AFTER_LINE_OUTPUT
*&---------------------------------------------------------------------*
FORM AFTER_LINE_OUTPUT USING PA_LINEINFO TYPE SLIS_LINEINFO.
DATA: LV_LINE TYPE CHAR50,
LV_SIZE TYPE I.
* 修改表#
MODIFY LINE 1 LINE VALUE FROM SY-ULINE(PA_LINEINFO-LINSZ).
WRITE: SY-VLINE TO LV_LINE+000(001),
SY-VLINE TO LV_LINE+005(001),
'Header' TO LV_LINE+007(006),
SY-VLINE TO LV_LINE+035(001).
MODIFY LINE 2 LINE VALUE FROM LV_LINE(PA_LINEINFO-LINSZ).
CLEAR LV_LINE.
LV_SIZE = PA_LINEINFO-LINSZ - 5.
WRITE: SY-VLINE TO LV_LINE+000(001),
SY-VLINE TO LV_LINE+005(001),
SY-ULINE TO LV_LINE+005(LV_SIZE),
SY-VLINE TO LV_LINE+035(001).
MODIFY LINE 3 LINE VALUE FROM LV_LINE(PA_LINEINFO-LINSZ).
MODIFY LINE 5 LINE VALUE FROM LV_LINE(PA_LINEINFO-LINSZ).
CLEAR LV_LINE.
WRITE: SY-VLINE TO LV_LINE+000(001),
'Head'   TO LV_LINE+001(004),
SY-VLINE TO LV_LINE+005(001),
'Head1'  TO LV_LINE+006(006),
SY-VLINE TO LV_LINE+015(001),
'Head2'  TO LV_LINE+016(006),
SY-VLINE TO LV_LINE+025(001),
'Head3'  TO LV_LINE+026(006),
SY-VLINE TO LV_LINE+035(001).
MODIFY LINE 4 LINE VALUE FROM LV_LINE(PA_LINEINFO-LINSZ).
CLEAR LV_LINE.
READ LINE 6 LINE VALUE INTO LV_LINE.
WRITE: '    ' TO LV_LINE+001(004).
MODIFY LINE 6 LINE VALUE FROM LV_LINE LINE FORMAT COLOR OFF.
ENDFORM.                    " TOP_OF_PAGE



*FORM ALV_DISPLAY.
*DATA L_LAYOUT TYPE SLIS_LAYOUT_ALV.
*DATA L_TAB_EVENT TYPE SLIS_T_EVENT.
*DATA L_TAB_EXIT TYPE SLIS_T_EVENT_EXIT.
*DATA L_VARIANT LIKE DISVARIANT.
*DATA L_TITLE TYPE LVC_TITLE.
** 取得ALV表格
*PERFORM ALV_FILL_FIELDCAT CHANGING P_TAB_FIELDCAT.
** 取得ALV layout
*PERFORM ALV_FILL_LAYOUT CHANGING L_LAYOUT.
*CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
*   EXPORTING
*     I_INTERFACE_CHECK        = ''
*     I_CALLBACK_PROGRAM       = SY-REPID
*     IT_FIELDCAT              = P_TAB_FIELDCAT
*     IS_LAYOUT                = L_LAYOUT
*     IT_EVENTS                = I_EVENTS[]
*     I_CALLBACK_TOP_OF_PAGE   = 'TOP-OF-PAGE'
*     I_CALLBACK_PF_STATUS_SET = 'ALV_STATUS'  "自定#工具#
*     I_CALLBACK_USER_COMMAND  = 'ALV_USER_COMMAND' "自定#工具#的事件
*   TABLES
*     T_OUTTAB                 = TAB_DATA1.
*IF SY-SUBRC <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*           WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*ENDIF.
*ENDFORM.                                                    "ALV_DISPLAY
**&---------------------------------------------------------------------*
**&      Form  TOP-OF-PAGE
**&---------------------------------------------------------------------*
**       ALV表#内容
**----------------------------------------------------------------------*
**
**----------------------------------------------------------------------*
*FORM TOP-OF-PAGE.
*
*DATA: L_LINE TYPE SLIS_LISTHEADER,
*       L_T_HEADER TYPE SLIS_T_LISTHEADER.
*
*CLEAR L_LINE.
*L_LINE-TYP  = 'H'.
*L_LINE-INFO  = TEXT-003.
*APPEND L_LINE TO L_T_HEADER.
*
*CLEAR L_LINE.
*L_LINE-TYP  = 'S'.
*L_LINE-KEY  = '##：'.
*L_LINE-INFO = F_SANTWH.
*APPEND L_LINE TO L_T_HEADER.
*
*L_LINE-TYP  = 'S'.
*L_LINE-KEY  = '###位：'.
*L_LINE-INFO = G_CURRUNIT.
*APPEND L_LINE TO L_T_HEADER.
*
*CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
*   EXPORTING
*     IT_LIST_COMMENTARY = L_T_HEADER.

*DATA : lv_sid(10) TYPE c,
*
*         lv_date TYPE char10,
*
*         lv_tim TYPE char8.
*
*
*
*  CONSTANTS : lc_s(1) TYPE c VALUE 'S'.
*
*
*
*  REFRESH gt_header.
*
*
*
*  gwa_header-typ = lc_s.
*
*  gwa_header-key = text-t11.
*
*  gwa_header-info = gv_title.
*
*  APPEND gwa_header TO gt_header.
*
*  CLEAR : gwa_header.
*
*
*
*  WRITE sy-datum TO lv_date.
*
*  gwa_header-typ = lc_s.
*
*  gwa_header-key = text-t06.
*
*  gwa_header-info = lv_date.
*
*  APPEND gwa_header TO gt_header.
*
*  CLEAR : gwa_header.
*
*
*
*  WRITE sy-uzeit TO lv_tim.
*
*  gwa_header-typ = lc_s.
*
*  gwa_header-key = text-t07.
*
*  gwa_header-info = lv_tim.
*
*  APPEND gwa_header TO gt_header.
*
*  CLEAR : gwa_header.
*
*
*
*  CONCATENATE sy-sysid sy-mandt INTO lv_sid SEPARATED BY space.
*
*  gwa_header-typ = lc_s.
*
*  gwa_header-key = text-t08.
*
*  gwa_header-info = lv_sid.
*
*  APPEND gwa_header TO gt_header.
*
*  CLEAR : gwa_header.
*
*
*
*  gwa_header-typ = lc_s.
*
*  gwa_header-key = text-t09.
*
*  gwa_header-info = sy-tcode.
*
*  APPEND gwa_header TO gt_header.
*
*  CLEAR : gwa_header.
*
*
*
*  IF r_ag3 = gc_x OR r_ag4 = gc_x.
*
*    WRITE s_gdatu-low TO lv_date.
*
*    gwa_header-typ = lc_s.
*
*    gwa_header-key = text-t10.
*
*    gwa_header-info = lv_date.
*
*    APPEND gwa_header TO gt_header.
*
*    CLEAR : gwa_header.
*
*  ENDIF.
*
*
*
*  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'               "FM for header details
*
*    EXPORTING
*
*      it_list_commentary = gt_header.
*ENDFORM.                    "TOP-OF-PAGE
