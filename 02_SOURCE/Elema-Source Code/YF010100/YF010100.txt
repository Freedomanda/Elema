* 2000/01/13 MOD START
*REPORT YF010100
REPORT YF010100
* 2000/01/13 MOD END
MESSAGE-ID Y1
LINE-SIZE  120
LINE-COUNT  90
NO STANDARD PAGE HEADING.
************************************************************************
*    財務会計システム（ＦＩ)                                           *
*    ﾌﾟﾛｸﾞﾗﾑ ID ： YF010100                                            *
*    ﾌﾟﾛｸﾞﾗﾑ名  ： 売掛金元帳                                          *
*    処理種別   ： バッチ(ABAP/4)                                      *
*    処理概要   ： ﾊﾞﾘｱﾝﾄにより指定された、得意先ｺｰﾄﾞ・自〜得意先ｺｰﾄﾞ至*
*    より、得意先ﾏｽﾀ（KNA1）を得意先の情報を取得し、得意先毎に伝票番号 *
*    ・自〜伝票番号・至の範囲内のﾚｺｰﾄﾞを、会計：得意先二次ｲﾝﾃﾞｯｸｽ（BSID*
*    ）、得意先二次ｲﾝﾃﾞｯｸｽ（決済明細）（BSAD）より抽出し、得意先ﾏｽﾀ（月*
*    次貸借）（KNC1）、会計伝票明細（BSEG）、転記ｷｰ名（TBSLT）、得意先 *
*    ﾏｽﾀ（会社ｺｰﾄﾞ）（KNB1）、支払条件の説明（T052U）、会計伝票ﾍｯﾀﾞ（BK*
*    PF）より各情報を付加し、売掛金元帳を作成する。                    *
*    但し、得意先ｺｰﾄﾞの指定は任意とし、指定なしの場合は、全件を対象とす*
*    る。伝票日付の指定は月単位で必須とし、指定した範囲が複数月にまたが*
*    る場合はｴﾗｰとする。                                               *
*                                                                      *
*    入力       ： 対象取引先年月日、得意先ｺｰﾄﾞ、言語ｺｰﾄﾞ、会社ｺｰﾄﾞ、  *
*                  勘定ｺｰﾄﾞ                                            *
*----------------------------------------------------------------------*
*    作成日     ： 1998/11/02                                          *
*    作成者     ： 田坂                                                *
*    変更履歴   ： 1998/12/25 竹内（入力画面変更）                     *
*                  1999/01/07 大屋                                     *
*                    明細が0件のﾃﾞｰﾀについてﾍｯﾀﾞと繰越額を出力する     *
*                    ように修正。                                      *
*                  1999/01/08 大屋                                     *
*                    ﾍｯﾀﾞに対象年月日・自〜対象年月日・至を出力する    *
*                    ように修正。                                      *
*                  1999/01/19 大屋                                     *
*                    支払条件を全桁出力するように修正。                *
*                  1999/02/09 大屋                                     *
*                    明細0件対応の処理を削除する。                     *
*                  2000/01/12 加治佐                                   *
*                    伝票通貨額を国内通貨額に修正。                    *
*                 2000/06/15 k.kajisa(NDSC)                            *
*                    パラメータの初期値をユーザ情報から取得            *
*&[改定履歴]
*& YYYY/MM/DD  Programar         Description
*& 2012/09/12  ISID              ES-UP
************************************************************************
*
*ﾃｰﾌﾞﾙ定義書
TABLES: BSID,
BSAD,
BSEG,
BKPF,
KNA1,
KNC1,
KNB1,
SKA1,
T001,
T052U,
TBSLT.
*
*内部ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF IN_TABLE1 OCCURS 10,
GJAHR  LIKE  BSEG-GJAHR,
BELNR  LIKE  BSID-BELNR,
BUDAT  LIKE  BSID-BUDAT,
BUZEI  LIKE  BSID-BUZEI,
END OF IN_TABLE1.

DATA: BEGIN OF IN_TABLE2 OCCURS 10,
BUDAT  LIKE  BKPF-BUDAT,
CPUTM  LIKE  BKPF-CPUTM,
BELNR  LIKE  BSEG-BELNR,
BUZEI  LIKE  BSEG-BUZEI,
BSCHL  LIKE  BSEG-BSCHL,
UMSKZ  LIKE  BSEG-UMSKZ,
SHKZG  LIKE  BSEG-SHKZG,
* 2000/01/12 MOD START
*        wrbtr  like  bseg-wrbtr,
DMBTR  LIKE  BSEG-DMBTR,
* 2000/01/12 MOD END
SGTXT  LIKE  BSEG-SGTXT,
END OF IN_TABLE2.
*
*住所編集ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_ADLESS,
STRAS  LIKE  KNA1-STRAS,
ORT01  LIKE  KNA1-ORT01,
END OF T_ADLESS.
*
*支払条件編集ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_SIHRAI,
WORK1(2) TYPE C,
TEXT1    LIKE T052U-TEXT1,
WORK2(2) TYPE C,
END OF T_SIHRAI.
*
*転記ｷｰﾃｷｽﾄﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_TENKI OCCURS 10.
INCLUDE STRUCTURE TBSLT.
DATA: END OF T_TENKI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*日付編集用エリアの定義
*DATA: BEGIN OF DATE,
*        NEN(4)     TYPE N,
*        TUKI(2)    TYPE N,
*        HI(2)      TYPE N,
*      END   OF DATE.
*1999/01/07 ADD END
*1999/02/09 DEL END

*
*作業用変数定義
DATA: PAGE_CNT      TYPE I,            "ﾍﾟｰｼﾞｶｳﾝﾀ
LINE_CNT      TYPE I,            "明細行ｶｳﾝﾀ
W_GJAHR LIKE BKPF-GJAHR,         "会計年度格納用
W_MONAT LIKE BKPF-MONAT,         "会計期間格納用
W_SPRAS LIKE T002-SPRAS,         "言語ｺｰﾄﾞ格納用
W_BELNR LIKE BSEG-BELNR,         "比較伝票番号用
W_KTOPL LIKE SKA1-KTOPL,         "勘定ｺｰﾄﾞ表用
W_BUDAT LIKE BKPF-BUDAT,         "転記日付用
W_KIN         TYPE P,            "伝票通貨額格納用
W_KARI        TYPE P,            "借方合計金額計算用
W_KASI        TYPE P,            "貸方合計金額計算用
W_ZAN         TYPE P,            "残高計算用
W_KURI        TYPE P,            "前月繰越額格納用
TEKIYO(30)    TYPE C,            "摘要欄格納用
W_TEXT(8)     TYPE C,            "繰越ﾃｷｽﾄ用
KURI_FLG      TYPE C,            "繰越判断用
BRK_FLG       TYPE C.            "ﾌﾞﾚｲｸ判断用
*1999/02/09 DEL START
*1999/01/07 ADD START
*      W_NEN(4)     TYPE N,
*      W_TUKI(2)    TYPE N,
*      C_NEN(4)     TYPE N,
*      C_TUKI(2)    TYPE N,
*      W_DATE       LIKE SY-DATUM.
*1999/01/07 ADD END
*1999/02/09 DEL END

*インクルード文
INCLUDE YF01NUMC.

*
************************************************************************
* パラメータ入力画面                                                   *
************************************************************************

SELECTION-SCREEN SKIP 2.
*2000/06/15 MOD START
*parameters: p_bukrs like t001-bukrs            "会社ｺｰﾄﾞ
*                              obligatory       "入力必須
*                           default 'C001'."C001ﾃﾞﾌｫﾙﾄ表示(19981225追加)
PARAMETERS: P_BUKRS LIKE T001-BUKRS OBLIGATORY MEMORY ID BUK.
*2000/06/15 MOD END
SELECTION-SCREEN SKIP 1.

SELECT-OPTIONS: P_DATUM FOR SY-DATUM        "対象年月日
OBLIGATORY.     "入力必須


SELECTION-SCREEN SKIP 1.

SELECT-OPTIONS: P_KUNNR FOR KNA1-KUNNR         "得意先ｺｰﾄﾞ
MATCHCODE OBJECT DEBI.


SELECTION-SCREEN SKIP 1.

PARAMETERS: P_SAKNR LIKE SKA1-SAKNR             "勘定ｺｰﾄﾞ
MATCHCODE OBJECT SAKO
OBLIGATORY.      "入力必須

SELECTION-SCREEN SKIP 1.

****************************************************************
* 会社ｺｰﾄﾞﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN ON P_BUKRS.

CLEAR T001.

SELECT SINGLE * FROM T001 WHERE BUKRS = P_BUKRS.

IF SY-SUBRC = 0.
W_SPRAS = T001-SPRAS.
ELSE.
MESSAGE E350(F4) WITH P_BUKRS.
STOP.
ENDIF.

*1999/01/07 ADD START
************************************************************************
*         得意先コードの存在チェック                                   *
************************************************************************
AT SELECTION-SCREEN ON P_KUNNR.
CLEAR KNA1.
SELECT * FROM KNA1 WHERE KUNNR IN P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 4.
MESSAGE E153(F2) WITH P_KUNNR-LOW.
STOP.
ENDIF.
*1999/01/07 ADD END


*
****************************************************************
* 勘定ｺｰﾄﾞﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN ON P_SAKNR.

CLEAR SKA1.

SELECT SINGLE * FROM SKA1 WHERE KTOPL = T001-KTOPL
AND   SAKNR = P_SAKNR.

IF SY-SUBRC = 4.
MESSAGE E001(F4) WITH P_SAKNR T001-KTOPL.
STOP.
ENDIF.

*1999/02/09 UPDT START（当該処理復活）
*1999/01/07 DEL START
****************************************************************
* ﾃﾞｰﾀ存在ﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN.

SELECT COUNT(*) FROM BSID WHERE BUKRS = P_BUKRS
AND   KUNNR IN P_KUNNR
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
SELECT COUNT(*) FROM BSAD WHERE BUKRS = P_BUKRS
AND   KUNNR IN P_KUNNR
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
MESSAGE E008(Y1).
STOP.
ENDIF.
ENDIF.
*1999/01/07 DEL END
*1999/02/09 UPDT END
*
****************************************************************
* 主処理                                                       *
****************************************************************
START-OF-SELECTION.

*転記ｷｰﾃｷｽﾄの取得
SELECT * FROM TBSLT INTO TABLE T_TENKI
WHERE SPRAS = W_SPRAS.

SELECT * FROM KNA1 WHERE KUNNR IN P_KUNNR
AND   LOEVM = SPACE.

*初期化
REFRESH: IN_TABLE1,
IN_TABLE2.

CLEAR: PAGE_CNT,
LINE_CNT,
W_BELNR,
W_KIN,
W_KARI,
W_KASI,
W_ZAN,
W_KURI.

*該当得意先の存在ﾁｪｯｸ
SELECT COUNT(*) FROM BSID WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
SELECT COUNT(*) FROM BSAD WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.
ENDIF.

*主処理
IF SY-SUBRC = 0.
PERFORM DATA_SELECT.
PERFORM PRINT.
*1999/02/09 DEL START
*1999/01/07 ADD START
*      ELSE.
*        C_NEN  = P_DATUM-LOW+0(4).
*        C_TUKI = P_DATUM-LOW+4(2).
*        IF P_DATUM-HIGH <> '00000000'.
*          W_NEN  = P_DATUM-HIGH+0(4).
*          W_TUKI = P_DATUM-HIGH+4(2).
*          IF W_NEN  <> C_NEN
*          OR W_TUKI <> C_TUKI.
*            PERFORM TUKI_GET.
*          ENDIF.
*        ENDIF.
*        PERFORM M_ZERO.
*1999/01/07 ADD END
*1999/02/09 DEL END
ENDIF.

ENDSELECT.

END-OF-SELECTION.
*--------------------------------------------------------------*
* FORM DATA_SELECT     データ抽出処理                          *
*--------------------------------------------------------------*
FORM DATA_SELECT.

*未決済明細の伝票番号取得、内部ﾃｰﾌﾞﾙ作成
SELECT GJAHR BELNR BUDAT BUZEI
FROM BSID INTO TABLE IN_TABLE1 WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.

*決済明細の伝票番号取得、内部テーブル作成
SELECT GJAHR BELNR BUDAT BUZEI
FROM BSAD APPENDING TABLE IN_TABLE1 WHERE BUKRS = P_BUKRS
AND   BUDAT IN P_DATUM
AND   KUNNR = KNA1-KUNNR
AND   HKONT = P_SAKNR.

SORT IN_TABLE2 BY BUDAT BELNR BUZEI.

*IN_TABLE1より詳細の読込
LOOP AT IN_TABLE1.
SELECT * FROM BSEG WHERE BUKRS = P_BUKRS
AND   GJAHR = IN_TABLE1-GJAHR
AND   BELNR = IN_TABLE1-BELNR
AND   BUZEI = IN_TABLE1-BUZEI.

IF W_BELNR <> IN_TABLE1-BELNR.
SELECT * FROM BKPF WHERE BUKRS = P_BUKRS
AND   GJAHR = IN_TABLE1-GJAHR
AND   BELNR = IN_TABLE1-BELNR.
ENDSELECT.

W_BELNR = IN_TABLE1-BELNR.

ENDIF.

IN_TABLE2-BUDAT = BKPF-BUDAT.
IN_TABLE2-CPUTM = BKPF-CPUTM.
IN_TABLE2-BELNR = BSEG-BELNR.
IN_TABLE2-BUZEI = BSEG-BUZEI.
IN_TABLE2-BSCHL = BSEG-BSCHL.
IN_TABLE2-UMSKZ = BSEG-UMSKZ.
IN_TABLE2-SHKZG = BSEG-SHKZG.
* 2000/01/12 MOD START
*      in_table2-wrbtr = bseg-wrbtr.
IN_TABLE2-DMBTR = BSEG-DMBTR.
* 2000/01/12 MOD END
IN_TABLE2-SGTXT = BSEG-SGTXT.

APPEND IN_TABLE2.

ENDSELECT.
ENDLOOP.

SORT IN_TABLE2 BY BUDAT CPUTM BELNR BUZEI.

ENDFORM.
*--------------------------------------------------------------*
* FORM PRINT         出力処理                                  *
*--------------------------------------------------------------*
FORM PRINT.

PAGE_CNT = 1.
LINE_CNT = 0.

CLEAR: W_BUDAT.

PERFORM TOKUISAKI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*  C_NEN  = P_DATUM-LOW+0(4).
*  C_TUKI = P_DATUM-LOW+4(2).
*1999/01/07 ADD END
*1999/02/09 DEL END

*出力編集
LOOP AT IN_TABLE2.

*1999/02/09 DEL START
*1999/01/07 ADD START
*    W_NEN  = IN_TABLE2-BUDAT+0(4).
*    W_TUKI = IN_TABLE2-BUDAT+4(2).
*
*    IF W_NEN  <> C_NEN
*    OR W_TUKI <> C_TUKI.
*      IF SY-TABIX = 1.
*        PERFORM TUKI_GET.
*      ENDIF.
*    ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL START

*関数呼出（会計年度、会計期間）
IF W_BUDAT+0(6) <> IN_TABLE2-BUDAT+0(6).
CALL FUNCTION 'FI_PERIOD_DETERMINE'
EXPORTING
I_BUKRS = P_BUKRS
I_BUDAT = IN_TABLE2-BUDAT
IMPORTING
E_GJAHR = W_GJAHR               "会計年度
E_MONAT = W_MONAT.              "会計期間

IF LINE_CNT <> 0.
KURI_FLG = '1'.
BRK_FLG  = '1'.
ENDIF.
ELSE.
IF LINE_CNT > 74.
KURI_FLG = '0'.
BRK_FLG  = '1'.
ENDIF.
ENDIF.

IF BRK_FLG = '1' AND LINE_CNT <> 0.
IF KURI_FLG = '1'.
PERFORM FOOTER.
PERFORM GOUKEI.
PAGE_CNT = 1.
*1999/02/09 DEL START
*1999/01/07 ADD START
*        C_TUKI = C_TUKI + 1.
*        IF C_TUKI = '13'.
*          C_NEN  = C_NEN + 1.
*          C_TUKI = 1.
*        ENDIF.
*        IF ( W_NEN > C_NEN )
*        OR ( W_NEN = C_NEN AND W_TUKI > C_TUKI ).
*          PERFORM TUKI_GET.
*        ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL END
ELSE.
PERFORM FOOTER.
PAGE_CNT = PAGE_CNT + 1.
ENDIF.
LINE_CNT = 0.
BRK_FLG  = '0'.
ENDIF.

IF LINE_CNT = 0.
IF PAGE_CNT = 1.
PERFORM KURIKOSI.
W_ZAN = W_KURI.
ENDIF.
PERFORM HEADER.
ENDIF.

PERFORM DATA_EDIT.
PERFORM MEISAI.

LINE_CNT = LINE_CNT + 1.
W_BUDAT = IN_TABLE2-BUDAT.

ENDLOOP.

*次月繰越読込
KURI_FLG = '1'.

PERFORM FOOTER.
PERFORM GOUKEI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*  IF P_DATUM-HIGH <> '00000000'.
*    W_NEN  = P_DATUM-HIGH+0(4).
*    W_TUKI = P_DATUM-HIGH+4(2).
*    C_NEN  = IN_TABLE2-BUDAT+0(4).
*    C_TUKI = IN_TABLE2-BUDAT+4(2).
*    IF W_NEN  <> C_NEN
*    OR W_TUKI <> C_TUKI.
*      C_TUKI = C_TUKI + 1.
*      IF C_TUKI = '13'.
*        C_NEN  = C_NEN + 1.
*        C_TUKI = 1.
*      ENDIF.
*
*      IF W_NEN  <> C_NEN
*      OR W_TUKI <> C_TUKI.
*        PERFORM TUKI_GET.
*      ENDIF.
*      PERFORM M_ZERO.
*    ENDIF.
*  ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL END

ENDFORM.
*--------------------------------------------------------------*
* FORM FOOTER           繰越額出力処理                         *
*--------------------------------------------------------------*
FORM FOOTER.

IF KURI_FLG = '1'.
W_TEXT = '次月繰越'.
ELSE.
W_TEXT = '次頁繰越'.
ENDIF.

ULINE (120).
WRITE: /13 W_TEXT.
PERFORM YF01NUMC USING W_ZAN 15 0.
WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.
ULINE (120).

IF KURI_FLG = '1'.
CLEAR: W_ZAN.
ENDIF.

ENDFORM.
*--------------------------------------------------------------*
* FORM GOUKEI         貸方・借方合計額計算処理                 *
*--------------------------------------------------------------*
FORM GOUKEI.

PERFORM YF01NUMC USING W_KARI 15 0.
WRITE: /064 O_NUM USING EDIT MASK 'RR________________'.
PERFORM YF01NUMC USING W_KASI 15 0.
WRITE:  084 O_NUM USING EDIT MASK 'RR________________'.

CLEAR: W_KARI,
W_KASI.

ENDFORM.
*--------------------------------------------------------------*
* FORM KURIKOSI        前月繰越抽出処理                        *
*--------------------------------------------------------------*
FORM KURIKOSI.

*前月繰越額編集
SELECT SINGLE * FROM KNC1 WHERE KUNNR = KNA1-KUNNR
AND   BUKRS = P_BUKRS
AND   GJAHR = W_GJAHR.
*1999/01/07 ADD START
IF SY-SUBRC = 4.
W_KURI = 0.
ELSE.
*1999/01/07 ADD END

CASE W_MONAT.
WHEN 1.
W_KURI =     KNC1-UMSAV * 100.
WHEN 2.
W_KURI = (   KNC1-UMSAV
+   KNC1-UM01S
-   KNC1-UM01H
) * 100.
WHEN 3.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S )
- ( KNC1-UM01H + KNC1-UM02H )
) * 100.
WHEN 4.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H )
) * 100.
WHEN 5.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H )
) * 100.
WHEN 6.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H )
) * 100.
WHEN 7.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H )
) * 100.
WHEN 8.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H )
) * 100.
WHEN 9.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H )
) * 100.
WHEN 10.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H )
) * 100.
WHEN 11.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S + KNC1-UM10S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H + KNC1-UM10H )
) * 100.
WHEN 12.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S + KNC1-UM10S + KNC1-UM11S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H + KNC1-UM10H + KNC1-UM11H )
) * 100.
ENDCASE.

ENDIF.

ENDFORM.
*--------------------------------------------------------------*
* FORM HEADER          ヘッダ出力処理                          *
*--------------------------------------------------------------*
FORM HEADER.

NEW-PAGE.

IF PAGE_CNT = 1.
W_TEXT = '前月繰越'.
ELSE.
W_TEXT = '前頁繰越'.
W_KURI = W_ZAN.
ENDIF.

*ﾍｯﾀﾞ出力
WRITE: /110 'ページ',
117(3) PAGE_CNT USING EDIT MASK 'RR___'.

WRITE: /008 W_GJAHR,
012 '年度',
050 '売  掛  金  元  帳',
088 '作成年月日',
098 SY-DATUM+0(4) NO-ZERO,
102 '年',
104 SY-DATUM+4(2) NO-ZERO,
106 '月',
108 SY-DATUM+6(2) NO-ZERO,
110 '日',
115 SY-UZEIT USING EDIT MASK '__:__',
/113 '単位:円',
*1999/01/08 ADD START（対象年月日・自〜至の表示）
/42  '（',
44  P_DATUM-LOW+0(4) NO-ZERO,
48  '年',
50  P_DATUM-LOW+4(2) NO-ZERO,
52  '月',
54  P_DATUM-LOW+6(2) NO-ZERO,
56  '日',
58  '〜'.
IF P_DATUM-HIGH <> '00000000'.
WRITE: 60  P_DATUM-HIGH+0(4) NO-ZERO,
64  '年',
66  P_DATUM-HIGH+4(2) NO-ZERO,
68  '月',
70  P_DATUM-HIGH+6(2) NO-ZERO,
72  '日'.
ELSE.
WRITE: 60  P_DATUM-LOW+0(4) NO-ZERO,
64  '年',
66  P_DATUM-LOW+4(2) NO-ZERO,
68  '月',
70  P_DATUM-LOW+6(2) NO-ZERO,
72  '日'.
ENDIF.
WRITE:  74  '）'.
*1999/01/08 ADD END
WRITE: /002 KNA1-KUNNR,
012 KNA1-NAME1.

WRITE: /002 T_ADLESS.

WRITE: /002 KNA1-ORT02,
* Mod ES-UP 2012/09/12 -->
**1999/1/19 UPDT START
**         085(34) T_SIHRAI
**               USING EDIT MASK 'RR_________________________________'.
*          066 T_SIHRAI
*                USING EDIT MASK
*     'RR______________________________________________________'.
*                                             "支払条件出力
**1999/1/19 UPDT END
066(**) T_SIHRAI RIGHT-JUSTIFIED.
* Mod ES-UP 2012/09/12 <--
ULINE (120).

*明細ﾍｯﾀﾞ出力
WRITE: /002 '日付',
025 '摘  要',
049 '元帳照合',
068 '借  方',
088 '貸  方',
110 '残  高'.
ULINE (120).

WRITE: /013 W_TEXT.
PERFORM YF01NUMC USING W_KURI 15 0.
WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.

ENDFORM.
*--------------------------------------------------------------*
* FORM MEISAI          明細出力処理                            *
*--------------------------------------------------------------*
FORM MEISAI.

*内部ﾃｰﾌﾞﾙ２表示
WRITE: /002(5) IN_TABLE2-BUDAT+4(4) USING EDIT MASK '__.__',
013    TEKIYO,
048    IN_TABLE2-BELNR.

*貸方・借方合計額計算
PERFORM YF01NUMC USING W_KIN 13 0.
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
WRITE: 064 O_NUM USING EDIT MASK 'RR________________' .
WHEN'H'.
WRITE: 084  O_NUM USING EDIT MASK 'RR________________'.
ENDCASE.
PERFORM YF01NUMC USING W_ZAN 15 0.
WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.

ENDFORM.
*--------------------------------------------------------------*
* FORM DATA_EDIT         データ編集処理                        *
*--------------------------------------------------------------*
FORM DATA_EDIT.

*摘要編集
IF IN_TABLE2-SGTXT = SPACE.
READ TABLE T_TENKI
WITH KEY SPRAS = W_SPRAS
BSCHL = IN_TABLE2-BSCHL
UMSKZ = IN_TABLE2-UMSKZ.
TEKIYO = T_TENKI-LTEXT.
ELSE.
TEKIYO = IN_TABLE2-SGTXT+0(30).
ENDIF.

*残高計算
* 2000/01/12 MOD START
*  w_kin = in_table2-wrbtr * 100.
W_KIN = IN_TABLE2-DMBTR * 100.
* 2000/01/12 MOD END
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
W_ZAN  = W_ZAN  + W_KIN.
W_KARI = W_KARI + W_KIN.
WHEN 'H'.
W_ZAN  = W_ZAN  - W_KIN.
W_KASI = W_KASI + W_KIN.
ENDCASE.

ENDFORM.

*1999/01/07 ADD START
*----------------------------------------------------------------------*
*         得意先情報の取得                                             *
*----------------------------------------------------------------------*
FORM TOKUISAKI.

CLEAR: W_BUDAT,
T_ADLESS,
T_SIHRAI.

*支払条件ｷｰの取得
SELECT * FROM KNB1 WHERE KUNNR = KNA1-KUNNR
AND   BUKRS = P_BUKRS.
ENDSELECT.

*支払条件ﾃｷｽﾄの取得
SELECT * FROM T052U WHERE SPRAS = W_SPRAS
AND   ZTERM = KNB1-ZTERM.
EXIT.
ENDSELECT.

*住所編集
T_ADLESS-STRAS = KNA1-STRAS.
T_ADLESS-ORT01 = KNA1-ORT01.
CONDENSE T_ADLESS NO-GAPS.

*支払条件の編集
IF T052U-TEXT1 = ' '
OR SY-SUBRC = 4.
T_SIHRAI-WORK1 = ' '.
T_SIHRAI-TEXT1 = ' '.
T_SIHRAI-WORK2 = ' '.
ELSE.
T_SIHRAI-WORK1 = '【'.
T_SIHRAI-TEXT1 = T052U-TEXT1.
T_SIHRAI-WORK2 = '】'.
CONDENSE T_SIHRAI NO-GAPS.
ENDIF.


ENDFORM.

*1999/02/09 DEL START
*----------------------------------------------------------------------*
*         明細0件の月の抽出                                            *
*----------------------------------------------------------------------*
*FORM TUKI_GET.
*  DO.
*    PERFORM M_ZERO.
*    C_TUKI = C_TUKI + 1.
*    IF C_TUKI = '13'.
*      C_NEN  = C_NEN + 1.
*      C_TUKI = 1.
*    ENDIF.
*    IF W_NEN  = C_NEN
*   AND W_TUKI = C_TUKI.
*      EXIT.
*    ENDIF.
*  ENDDO.
*ENDFORM.
*
*----------------------------------------------------------------------*
*         明細0件の場合の編集                                          *
*----------------------------------------------------------------------*
*FORM M_ZERO.
*  DATE-NEN  = C_NEN.
*  DATE-TUKI = C_TUKI.
*  DATE-HI   = '01'.
*  CONDENSE DATE NO-GAPS.
*
*  W_DATE = DATE.
*
*  PERFORM TOKUISAKI.
*
*  CALL FUNCTION 'FI_PERIOD_DETERMINE'
*     EXPORTING
*          I_BUKRS = P_BUKRS
*          I_BUDAT = W_DATE
*     IMPORTING
*          E_GJAHR = W_GJAHR
*          E_MONAT = W_MONAT.
*
*  PERFORM KURIKOSI.
*  W_ZAN    = W_KURI.
*  PAGE_CNT = 1.
*  PERFORM HEADER.
*
*  SKIP 1.
*  WRITE: /2 C_NEN NO-ZERO,
*            '年',
*            C_TUKI NO-ZERO,
*            '月'.
*  SKIP 1.
*  WRITE: /2 '【該当データなし】'.
*  SKIP 71.
*
*  KURI_FLG = '1'.
*  PERFORM FOOTER.
*  PERFORM GOUKEI.
*
*ENDFORM.
*1999/02/09 DEL END
*1999/01/07 ADD END
* 2000/01/13 MOD START
*REPORT YF010100
REPORT YF010100
* 2000/01/13 MOD END
MESSAGE-ID Y1
LINE-SIZE  120
LINE-COUNT  90
NO STANDARD PAGE HEADING.
************************************************************************
*    財務会計システム（ＦＩ)                                           *
*    ﾌﾟﾛｸﾞﾗﾑ ID ： YF010100                                            *
*    ﾌﾟﾛｸﾞﾗﾑ名  ： 売掛金元帳                                          *
*    処理種別   ： バッチ(ABAP/4)                                      *
*    処理概要   ： ﾊﾞﾘｱﾝﾄにより指定された、得意先ｺｰﾄﾞ・自〜得意先ｺｰﾄﾞ至*
*    より、得意先ﾏｽﾀ（KNA1）を得意先の情報を取得し、得意先毎に伝票番号 *
*    ・自〜伝票番号・至の範囲内のﾚｺｰﾄﾞを、会計：得意先二次ｲﾝﾃﾞｯｸｽ（BSID*
*    ）、得意先二次ｲﾝﾃﾞｯｸｽ（決済明細）（BSAD）より抽出し、得意先ﾏｽﾀ（月*
*    次貸借）（KNC1）、会計伝票明細（BSEG）、転記ｷｰ名（TBSLT）、得意先 *
*    ﾏｽﾀ（会社ｺｰﾄﾞ）（KNB1）、支払条件の説明（T052U）、会計伝票ﾍｯﾀﾞ（BK*
*    PF）より各情報を付加し、売掛金元帳を作成する。                    *
*    但し、得意先ｺｰﾄﾞの指定は任意とし、指定なしの場合は、全件を対象とす*
*    る。伝票日付の指定は月単位で必須とし、指定した範囲が複数月にまたが*
*    る場合はｴﾗｰとする。                                               *
*                                                                      *
*    入力       ： 対象取引先年月日、得意先ｺｰﾄﾞ、言語ｺｰﾄﾞ、会社ｺｰﾄﾞ、  *
*                  勘定ｺｰﾄﾞ                                            *
*----------------------------------------------------------------------*
*    作成日     ： 1998/11/02                                          *
*    作成者     ： 田坂                                                *
*    変更履歴   ： 1998/12/25 竹内（入力画面変更）                     *
*                  1999/01/07 大屋                                     *
*                    明細が0件のﾃﾞｰﾀについてﾍｯﾀﾞと繰越額を出力する     *
*                    ように修正。                                      *
*                  1999/01/08 大屋                                     *
*                    ﾍｯﾀﾞに対象年月日・自〜対象年月日・至を出力する    *
*                    ように修正。                                      *
*                  1999/01/19 大屋                                     *
*                    支払条件を全桁出力するように修正。                *
*                  1999/02/09 大屋                                     *
*                    明細0件対応の処理を削除する。                     *
*                  2000/01/12 加治佐                                   *
*                    伝票通貨額を国内通貨額に修正。                    *
*                 2000/06/15 k.kajisa(NDSC)                            *
*                    パラメータの初期値をユーザ情報から取得            *
*&[改定履歴]
*& YYYY/MM/DD  Programar         Description
*& 2012/09/12  ISID              ES-UP
************************************************************************
*
*ﾃｰﾌﾞﾙ定義書
TABLES: BSID,
BSAD,
BSEG,
BKPF,
KNA1,
KNC1,
KNB1,
SKA1,
T001,
T052U,
TBSLT.
*
*内部ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF IN_TABLE1 OCCURS 10,
GJAHR  LIKE  BSEG-GJAHR,
BELNR  LIKE  BSID-BELNR,
BUDAT  LIKE  BSID-BUDAT,
BUZEI  LIKE  BSID-BUZEI,
END OF IN_TABLE1.

DATA: BEGIN OF IN_TABLE2 OCCURS 10,
BUDAT  LIKE  BKPF-BUDAT,
CPUTM  LIKE  BKPF-CPUTM,
BELNR  LIKE  BSEG-BELNR,
BUZEI  LIKE  BSEG-BUZEI,
BSCHL  LIKE  BSEG-BSCHL,
UMSKZ  LIKE  BSEG-UMSKZ,
SHKZG  LIKE  BSEG-SHKZG,
* 2000/01/12 MOD START
*        wrbtr  like  bseg-wrbtr,
DMBTR  LIKE  BSEG-DMBTR,
* 2000/01/12 MOD END
SGTXT  LIKE  BSEG-SGTXT,
END OF IN_TABLE2.
*
*住所編集ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_ADLESS,
STRAS  LIKE  KNA1-STRAS,
ORT01  LIKE  KNA1-ORT01,
END OF T_ADLESS.
*
*支払条件編集ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_SIHRAI,
WORK1(2) TYPE C,
TEXT1    LIKE T052U-TEXT1,
WORK2(2) TYPE C,
END OF T_SIHRAI.
*
*転記ｷｰﾃｷｽﾄﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_TENKI OCCURS 10.
INCLUDE STRUCTURE TBSLT.
DATA: END OF T_TENKI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*日付編集用エリアの定義
*DATA: BEGIN OF DATE,
*        NEN(4)     TYPE N,
*        TUKI(2)    TYPE N,
*        HI(2)      TYPE N,
*      END   OF DATE.
*1999/01/07 ADD END
*1999/02/09 DEL END

*
*作業用変数定義
DATA: PAGE_CNT      TYPE I,            "ﾍﾟｰｼﾞｶｳﾝﾀ
LINE_CNT      TYPE I,            "明細行ｶｳﾝﾀ
W_GJAHR LIKE BKPF-GJAHR,         "会計年度格納用
W_MONAT LIKE BKPF-MONAT,         "会計期間格納用
W_SPRAS LIKE T002-SPRAS,         "言語ｺｰﾄﾞ格納用
W_BELNR LIKE BSEG-BELNR,         "比較伝票番号用
W_KTOPL LIKE SKA1-KTOPL,         "勘定ｺｰﾄﾞ表用
W_BUDAT LIKE BKPF-BUDAT,         "転記日付用
W_KIN         TYPE P,            "伝票通貨額格納用
W_KARI        TYPE P,            "借方合計金額計算用
W_KASI        TYPE P,            "貸方合計金額計算用
W_ZAN         TYPE P,            "残高計算用
W_KURI        TYPE P,            "前月繰越額格納用
TEKIYO(30)    TYPE C,            "摘要欄格納用
W_TEXT(8)     TYPE C,            "繰越ﾃｷｽﾄ用
KURI_FLG      TYPE C,            "繰越判断用
BRK_FLG       TYPE C.            "ﾌﾞﾚｲｸ判断用
*1999/02/09 DEL START
*1999/01/07 ADD START
*      W_NEN(4)     TYPE N,
*      W_TUKI(2)    TYPE N,
*      C_NEN(4)     TYPE N,
*      C_TUKI(2)    TYPE N,
*      W_DATE       LIKE SY-DATUM.
*1999/01/07 ADD END
*1999/02/09 DEL END

*インクルード文
INCLUDE YF01NUMC.

*
************************************************************************
* パラメータ入力画面                                                   *
************************************************************************

SELECTION-SCREEN SKIP 2.
*2000/06/15 MOD START
*parameters: p_bukrs like t001-bukrs            "会社ｺｰﾄﾞ
*                              obligatory       "入力必須
*                           default 'C001'."C001ﾃﾞﾌｫﾙﾄ表示(19981225追加)
PARAMETERS: P_BUKRS LIKE T001-BUKRS OBLIGATORY MEMORY ID BUK.
*2000/06/15 MOD END
SELECTION-SCREEN SKIP 1.

SELECT-OPTIONS: P_DATUM FOR SY-DATUM        "対象年月日
OBLIGATORY.     "入力必須


SELECTION-SCREEN SKIP 1.

SELECT-OPTIONS: P_KUNNR FOR KNA1-KUNNR         "得意先ｺｰﾄﾞ
MATCHCODE OBJECT DEBI.


SELECTION-SCREEN SKIP 1.

PARAMETERS: P_SAKNR LIKE SKA1-SAKNR             "勘定ｺｰﾄﾞ
MATCHCODE OBJECT SAKO
OBLIGATORY.      "入力必須

SELECTION-SCREEN SKIP 1.

****************************************************************
* 会社ｺｰﾄﾞﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN ON P_BUKRS.

CLEAR T001.

SELECT SINGLE * FROM T001 WHERE BUKRS = P_BUKRS.

IF SY-SUBRC = 0.
W_SPRAS = T001-SPRAS.
ELSE.
MESSAGE E350(F4) WITH P_BUKRS.
STOP.
ENDIF.

*1999/01/07 ADD START
************************************************************************
*         得意先コードの存在チェック                                   *
************************************************************************
AT SELECTION-SCREEN ON P_KUNNR.
CLEAR KNA1.
SELECT * FROM KNA1 WHERE KUNNR IN P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 4.
MESSAGE E153(F2) WITH P_KUNNR-LOW.
STOP.
ENDIF.
*1999/01/07 ADD END


*
****************************************************************
* 勘定ｺｰﾄﾞﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN ON P_SAKNR.

CLEAR SKA1.

SELECT SINGLE * FROM SKA1 WHERE KTOPL = T001-KTOPL
AND   SAKNR = P_SAKNR.

IF SY-SUBRC = 4.
MESSAGE E001(F4) WITH P_SAKNR T001-KTOPL.
STOP.
ENDIF.

*1999/02/09 UPDT START（当該処理復活）
*1999/01/07 DEL START
****************************************************************
* ﾃﾞｰﾀ存在ﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN.

SELECT COUNT(*) FROM BSID WHERE BUKRS = P_BUKRS
AND   KUNNR IN P_KUNNR
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
SELECT COUNT(*) FROM BSAD WHERE BUKRS = P_BUKRS
AND   KUNNR IN P_KUNNR
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
MESSAGE E008(Y1).
STOP.
ENDIF.
ENDIF.
*1999/01/07 DEL END
*1999/02/09 UPDT END
*
****************************************************************
* 主処理                                                       *
****************************************************************
START-OF-SELECTION.

*転記ｷｰﾃｷｽﾄの取得
SELECT * FROM TBSLT INTO TABLE T_TENKI
WHERE SPRAS = W_SPRAS.

SELECT * FROM KNA1 WHERE KUNNR IN P_KUNNR
AND   LOEVM = SPACE.

*初期化
REFRESH: IN_TABLE1,
IN_TABLE2.

CLEAR: PAGE_CNT,
LINE_CNT,
W_BELNR,
W_KIN,
W_KARI,
W_KASI,
W_ZAN,
W_KURI.

*該当得意先の存在ﾁｪｯｸ
SELECT COUNT(*) FROM BSID WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
SELECT COUNT(*) FROM BSAD WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.
ENDIF.

*主処理
IF SY-SUBRC = 0.
PERFORM DATA_SELECT.
PERFORM PRINT.
*1999/02/09 DEL START
*1999/01/07 ADD START
*      ELSE.
*        C_NEN  = P_DATUM-LOW+0(4).
*        C_TUKI = P_DATUM-LOW+4(2).
*        IF P_DATUM-HIGH <> '00000000'.
*          W_NEN  = P_DATUM-HIGH+0(4).
*          W_TUKI = P_DATUM-HIGH+4(2).
*          IF W_NEN  <> C_NEN
*          OR W_TUKI <> C_TUKI.
*            PERFORM TUKI_GET.
*          ENDIF.
*        ENDIF.
*        PERFORM M_ZERO.
*1999/01/07 ADD END
*1999/02/09 DEL END
ENDIF.

ENDSELECT.

END-OF-SELECTION.
*--------------------------------------------------------------*
* FORM DATA_SELECT     データ抽出処理                          *
*--------------------------------------------------------------*
FORM DATA_SELECT.

*未決済明細の伝票番号取得、内部ﾃｰﾌﾞﾙ作成
SELECT GJAHR BELNR BUDAT BUZEI
FROM BSID INTO TABLE IN_TABLE1 WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.

*決済明細の伝票番号取得、内部テーブル作成
SELECT GJAHR BELNR BUDAT BUZEI
FROM BSAD APPENDING TABLE IN_TABLE1 WHERE BUKRS = P_BUKRS
AND   BUDAT IN P_DATUM
AND   KUNNR = KNA1-KUNNR
AND   HKONT = P_SAKNR.

SORT IN_TABLE2 BY BUDAT BELNR BUZEI.

*IN_TABLE1より詳細の読込
LOOP AT IN_TABLE1.
SELECT * FROM BSEG WHERE BUKRS = P_BUKRS
AND   GJAHR = IN_TABLE1-GJAHR
AND   BELNR = IN_TABLE1-BELNR
AND   BUZEI = IN_TABLE1-BUZEI.

IF W_BELNR <> IN_TABLE1-BELNR.
SELECT * FROM BKPF WHERE BUKRS = P_BUKRS
AND   GJAHR = IN_TABLE1-GJAHR
AND   BELNR = IN_TABLE1-BELNR.
ENDSELECT.

W_BELNR = IN_TABLE1-BELNR.

ENDIF.

IN_TABLE2-BUDAT = BKPF-BUDAT.
IN_TABLE2-CPUTM = BKPF-CPUTM.
IN_TABLE2-BELNR = BSEG-BELNR.
IN_TABLE2-BUZEI = BSEG-BUZEI.
IN_TABLE2-BSCHL = BSEG-BSCHL.
IN_TABLE2-UMSKZ = BSEG-UMSKZ.
IN_TABLE2-SHKZG = BSEG-SHKZG.
* 2000/01/12 MOD START
*      in_table2-wrbtr = bseg-wrbtr.
IN_TABLE2-DMBTR = BSEG-DMBTR.
* 2000/01/12 MOD END
IN_TABLE2-SGTXT = BSEG-SGTXT.

APPEND IN_TABLE2.

ENDSELECT.
ENDLOOP.

SORT IN_TABLE2 BY BUDAT CPUTM BELNR BUZEI.

ENDFORM.
*--------------------------------------------------------------*
* FORM PRINT         出力処理                                  *
*--------------------------------------------------------------*
FORM PRINT.

PAGE_CNT = 1.
LINE_CNT = 0.

CLEAR: W_BUDAT.

PERFORM TOKUISAKI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*  C_NEN  = P_DATUM-LOW+0(4).
*  C_TUKI = P_DATUM-LOW+4(2).
*1999/01/07 ADD END
*1999/02/09 DEL END

*出力編集
LOOP AT IN_TABLE2.

*1999/02/09 DEL START
*1999/01/07 ADD START
*    W_NEN  = IN_TABLE2-BUDAT+0(4).
*    W_TUKI = IN_TABLE2-BUDAT+4(2).
*
*    IF W_NEN  <> C_NEN
*    OR W_TUKI <> C_TUKI.
*      IF SY-TABIX = 1.
*        PERFORM TUKI_GET.
*      ENDIF.
*    ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL START

*関数呼出（会計年度、会計期間）
IF W_BUDAT+0(6) <> IN_TABLE2-BUDAT+0(6).
CALL FUNCTION 'FI_PERIOD_DETERMINE'
EXPORTING
I_BUKRS = P_BUKRS
I_BUDAT = IN_TABLE2-BUDAT
IMPORTING
E_GJAHR = W_GJAHR               "会計年度
E_MONAT = W_MONAT.              "会計期間

IF LINE_CNT <> 0.
KURI_FLG = '1'.
BRK_FLG  = '1'.
ENDIF.
ELSE.
IF LINE_CNT > 74.
KURI_FLG = '0'.
BRK_FLG  = '1'.
ENDIF.
ENDIF.

IF BRK_FLG = '1' AND LINE_CNT <> 0.
IF KURI_FLG = '1'.
PERFORM FOOTER.
PERFORM GOUKEI.
PAGE_CNT = 1.
*1999/02/09 DEL START
*1999/01/07 ADD START
*        C_TUKI = C_TUKI + 1.
*        IF C_TUKI = '13'.
*          C_NEN  = C_NEN + 1.
*          C_TUKI = 1.
*        ENDIF.
*        IF ( W_NEN > C_NEN )
*        OR ( W_NEN = C_NEN AND W_TUKI > C_TUKI ).
*          PERFORM TUKI_GET.
*        ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL END
ELSE.
PERFORM FOOTER.
PAGE_CNT = PAGE_CNT + 1.
ENDIF.
LINE_CNT = 0.
BRK_FLG  = '0'.
ENDIF.

IF LINE_CNT = 0.
IF PAGE_CNT = 1.
PERFORM KURIKOSI.
W_ZAN = W_KURI.
ENDIF.
PERFORM HEADER.
ENDIF.

PERFORM DATA_EDIT.
PERFORM MEISAI.

LINE_CNT = LINE_CNT + 1.
W_BUDAT = IN_TABLE2-BUDAT.

ENDLOOP.

*次月繰越読込
KURI_FLG = '1'.

PERFORM FOOTER.
PERFORM GOUKEI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*  IF P_DATUM-HIGH <> '00000000'.
*    W_NEN  = P_DATUM-HIGH+0(4).
*    W_TUKI = P_DATUM-HIGH+4(2).
*    C_NEN  = IN_TABLE2-BUDAT+0(4).
*    C_TUKI = IN_TABLE2-BUDAT+4(2).
*    IF W_NEN  <> C_NEN
*    OR W_TUKI <> C_TUKI.
*      C_TUKI = C_TUKI + 1.
*      IF C_TUKI = '13'.
*        C_NEN  = C_NEN + 1.
*        C_TUKI = 1.
*      ENDIF.
*
*      IF W_NEN  <> C_NEN
*      OR W_TUKI <> C_TUKI.
*        PERFORM TUKI_GET.
*      ENDIF.
*      PERFORM M_ZERO.
*    ENDIF.
*  ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL END

ENDFORM.
*--------------------------------------------------------------*
* FORM FOOTER           繰越額出力処理                         *
*--------------------------------------------------------------*
FORM FOOTER.

IF KURI_FLG = '1'.
W_TEXT = '次月繰越'.
ELSE.
W_TEXT = '次頁繰越'.
ENDIF.

ULINE (120).
WRITE: /13 W_TEXT.
PERFORM YF01NUMC USING W_ZAN 15 0.
WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.
ULINE (120).

IF KURI_FLG = '1'.
CLEAR: W_ZAN.
ENDIF.

ENDFORM.
*--------------------------------------------------------------*
* FORM GOUKEI         貸方・借方合計額計算処理                 *
*--------------------------------------------------------------*
FORM GOUKEI.

PERFORM YF01NUMC USING W_KARI 15 0.
WRITE: /064 O_NUM USING EDIT MASK 'RR________________'.
PERFORM YF01NUMC USING W_KASI 15 0.
WRITE:  084 O_NUM USING EDIT MASK 'RR________________'.

CLEAR: W_KARI,
W_KASI.

ENDFORM.
*--------------------------------------------------------------*
* FORM KURIKOSI        前月繰越抽出処理                        *
*--------------------------------------------------------------*
FORM KURIKOSI.

*前月繰越額編集
SELECT SINGLE * FROM KNC1 WHERE KUNNR = KNA1-KUNNR
AND   BUKRS = P_BUKRS
AND   GJAHR = W_GJAHR.
*1999/01/07 ADD START
IF SY-SUBRC = 4.
W_KURI = 0.
ELSE.
*1999/01/07 ADD END

CASE W_MONAT.
WHEN 1.
W_KURI =     KNC1-UMSAV * 100.
WHEN 2.
W_KURI = (   KNC1-UMSAV
+   KNC1-UM01S
-   KNC1-UM01H
) * 100.
WHEN 3.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S )
- ( KNC1-UM01H + KNC1-UM02H )
) * 100.
WHEN 4.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H )
) * 100.
WHEN 5.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H )
) * 100.
WHEN 6.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H )
) * 100.
WHEN 7.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H )
) * 100.
WHEN 8.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H )
) * 100.
WHEN 9.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H )
) * 100.
WHEN 10.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H )
) * 100.
WHEN 11.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S + KNC1-UM10S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H + KNC1-UM10H )
) * 100.
WHEN 12.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S + KNC1-UM10S + KNC1-UM11S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H + KNC1-UM10H + KNC1-UM11H )
) * 100.
ENDCASE.

ENDIF.

ENDFORM.
*--------------------------------------------------------------*
* FORM HEADER          ヘッダ出力処理                          *
*--------------------------------------------------------------*
FORM HEADER.

NEW-PAGE.

IF PAGE_CNT = 1.
W_TEXT = '前月繰越'.
ELSE.
W_TEXT = '前頁繰越'.
W_KURI = W_ZAN.
ENDIF.

*ﾍｯﾀﾞ出力
WRITE: /110 'ページ',
117(3) PAGE_CNT USING EDIT MASK 'RR___'.

WRITE: /008 W_GJAHR,
012 '年度',
050 '売  掛  金  元  帳',
088 '作成年月日',
098 SY-DATUM+0(4) NO-ZERO,
102 '年',
104 SY-DATUM+4(2) NO-ZERO,
106 '月',
108 SY-DATUM+6(2) NO-ZERO,
110 '日',
115 SY-UZEIT USING EDIT MASK '__:__',
/113 '単位:円',
*1999/01/08 ADD START（対象年月日・自〜至の表示）
/42  '（',
44  P_DATUM-LOW+0(4) NO-ZERO,
48  '年',
50  P_DATUM-LOW+4(2) NO-ZERO,
52  '月',
54  P_DATUM-LOW+6(2) NO-ZERO,
56  '日',
58  '〜'.
IF P_DATUM-HIGH <> '00000000'.
WRITE: 60  P_DATUM-HIGH+0(4) NO-ZERO,
64  '年',
66  P_DATUM-HIGH+4(2) NO-ZERO,
68  '月',
70  P_DATUM-HIGH+6(2) NO-ZERO,
72  '日'.
ELSE.
WRITE: 60  P_DATUM-LOW+0(4) NO-ZERO,
64  '年',
66  P_DATUM-LOW+4(2) NO-ZERO,
68  '月',
70  P_DATUM-LOW+6(2) NO-ZERO,
72  '日'.
ENDIF.
WRITE:  74  '）'.
*1999/01/08 ADD END
WRITE: /002 KNA1-KUNNR,
012 KNA1-NAME1.

WRITE: /002 T_ADLESS.

WRITE: /002 KNA1-ORT02,
* Mod ES-UP 2012/09/12 -->
**1999/1/19 UPDT START
**         085(34) T_SIHRAI
**               USING EDIT MASK 'RR_________________________________'.
*          066 T_SIHRAI
*                USING EDIT MASK
*     'RR______________________________________________________'.
*                                             "支払条件出力
**1999/1/19 UPDT END
066(**) T_SIHRAI RIGHT-JUSTIFIED.
* Mod ES-UP 2012/09/12 <--
ULINE (120).

*明細ﾍｯﾀﾞ出力
WRITE: /002 '日付',
025 '摘  要',
049 '元帳照合',
068 '借  方',
088 '貸  方',
110 '残  高'.
ULINE (120).

WRITE: /013 W_TEXT.
PERFORM YF01NUMC USING W_KURI 15 0.
WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.

ENDFORM.
*--------------------------------------------------------------*
* FORM MEISAI          明細出力処理                            *
*--------------------------------------------------------------*
FORM MEISAI.

*内部ﾃｰﾌﾞﾙ２表示
WRITE: /002(5) IN_TABLE2-BUDAT+4(4) USING EDIT MASK '__.__',
013    TEKIYO,
048    IN_TABLE2-BELNR.

*貸方・借方合計額計算
PERFORM YF01NUMC USING W_KIN 13 0.
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
WRITE: 064 O_NUM USING EDIT MASK 'RR________________' .
WHEN'H'.
WRITE: 084  O_NUM USING EDIT MASK 'RR________________'.
ENDCASE.
PERFORM YF01NUMC USING W_ZAN 15 0.
WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.

ENDFORM.
*--------------------------------------------------------------*
* FORM DATA_EDIT         データ編集処理                        *
*--------------------------------------------------------------*
FORM DATA_EDIT.

*摘要編集
IF IN_TABLE2-SGTXT = SPACE.
READ TABLE T_TENKI
WITH KEY SPRAS = W_SPRAS
BSCHL = IN_TABLE2-BSCHL
UMSKZ = IN_TABLE2-UMSKZ.
TEKIYO = T_TENKI-LTEXT.
ELSE.
TEKIYO = IN_TABLE2-SGTXT+0(30).
ENDIF.

*残高計算
* 2000/01/12 MOD START
*  w_kin = in_table2-wrbtr * 100.
W_KIN = IN_TABLE2-DMBTR * 100.
* 2000/01/12 MOD END
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
W_ZAN  = W_ZAN  + W_KIN.
W_KARI = W_KARI + W_KIN.
WHEN 'H'.
W_ZAN  = W_ZAN  - W_KIN.
W_KASI = W_KASI + W_KIN.
ENDCASE.

ENDFORM.

*1999/01/07 ADD START
*----------------------------------------------------------------------*
*         得意先情報の取得                                             *
*----------------------------------------------------------------------*
FORM TOKUISAKI.

CLEAR: W_BUDAT,
T_ADLESS,
T_SIHRAI.

*支払条件ｷｰの取得
SELECT * FROM KNB1 WHERE KUNNR = KNA1-KUNNR
AND   BUKRS = P_BUKRS.
ENDSELECT.

*支払条件ﾃｷｽﾄの取得
SELECT * FROM T052U WHERE SPRAS = W_SPRAS
AND   ZTERM = KNB1-ZTERM.
EXIT.
ENDSELECT.

*住所編集
T_ADLESS-STRAS = KNA1-STRAS.
T_ADLESS-ORT01 = KNA1-ORT01.
CONDENSE T_ADLESS NO-GAPS.

*支払条件の編集
IF T052U-TEXT1 = ' '
OR SY-SUBRC = 4.
T_SIHRAI-WORK1 = ' '.
T_SIHRAI-TEXT1 = ' '.
T_SIHRAI-WORK2 = ' '.
ELSE.
T_SIHRAI-WORK1 = '【'.
T_SIHRAI-TEXT1 = T052U-TEXT1.
T_SIHRAI-WORK2 = '】'.
CONDENSE T_SIHRAI NO-GAPS.
ENDIF.


ENDFORM.

*1999/02/09 DEL START
*----------------------------------------------------------------------*
*         明細0件の月の抽出                                            *
*----------------------------------------------------------------------*
*FORM TUKI_GET.
*  DO.
*    PERFORM M_ZERO.
*    C_TUKI = C_TUKI + 1.
*    IF C_TUKI = '13'.
*      C_NEN  = C_NEN + 1.
*      C_TUKI = 1.
*    ENDIF.
*    IF W_NEN  = C_NEN
*   AND W_TUKI = C_TUKI.
*      EXIT.
*    ENDIF.
*  ENDDO.
*ENDFORM.
*
*----------------------------------------------------------------------*
*         明細0件の場合の編集                                          *
*----------------------------------------------------------------------*
*FORM M_ZERO.
*  DATE-NEN  = C_NEN.
*  DATE-TUKI = C_TUKI.
*  DATE-HI   = '01'.
*  CONDENSE DATE NO-GAPS.
*
*  W_DATE = DATE.
*
*  PERFORM TOKUISAKI.
*
*  CALL FUNCTION 'FI_PERIOD_DETERMINE'
*     EXPORTING
*          I_BUKRS = P_BUKRS
*          I_BUDAT = W_DATE
*     IMPORTING
*          E_GJAHR = W_GJAHR
*          E_MONAT = W_MONAT.
*
*  PERFORM KURIKOSI.
*  W_ZAN    = W_KURI.
*  PAGE_CNT = 1.
*  PERFORM HEADER.
*
*  SKIP 1.
*  WRITE: /2 C_NEN NO-ZERO,
*            '年',
*            C_TUKI NO-ZERO,
*            '月'.
*  SKIP 1.
*  WRITE: /2 '【該当データなし】'.
*  SKIP 71.
*
*  KURI_FLG = '1'.
*  PERFORM FOOTER.
*  PERFORM GOUKEI.
*
*ENDFORM.
*1999/02/09 DEL END
*1999/01/07 ADD END
