************************************************************************
* [プログラム名]
*   ZS010602        売上一覧表（粗利小数点なしバージョン)
*
* [処理概要]
*   売上状況の把握
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2001/12/20   PSD H.Tanaka      新規開発　
*  2002/01/10   PSD H.Tanaka      ＡＬＶヘッダー表示
*  2002/01/15   PSD H.Tanaka      金額設定
*  2002/01/21   PSD H.Tanaka      数量マイナス編集
*  2002/01/23   PSD H.Tanaka      原価計算対応
*  2002/02/22   PSD M.Arai        売上単価不具合対応
*  2002/03/13   PSD T.SAITOH      ALVステータス印刷拒否設定
*  2002/04/01   PSD T.SAITOH      ショートダンプ可能性個所修正
*  2002/04/01   PSD T.SAITOH      プログラムIDを変更し粗利小数点
*                                 バージョンプログラムとして複製
*                                 構造を別バージョンで作成
*  2002/04/01   PSD T.SAITOH      原価金額円建て、売上金額円建ての小数点
*                                 を設定対応
*  2002/05/01   PSD T.SAITOH      テキスト不具合修正
*  2002/05/02   PSD T.SAITOH      会計伝票番号取得廃止
*  2002/05/02   PSD T.SAITOH      粗利金額（円建て）をLISと同様とする
*  2002/06/20   PSD T.SAITOH      再移送
*  2002/06/21   PSD T.SAITOH      得意先コード（支払人）ドメイン変更
*  2002/07/12   PSD T.SAITOH      得意先発注番号取得先変更
*  2002/07/17   PSD T.SAITOH      READ_TEXT エラーハンドリング対応
*  2002/07/29   PSD T.SAITOH      販売組織／流通チャネル／製品部門対応
*  2002/08/08   カットオーバー ---------------------------------------*
*  2002/08/08   PSD T.SAITOH          ページ番号付加
*  2002/10/18   PSD K.ARAI        金額算出の変更
*  2002/10/18   PSD K.ARAI        売上単価項目算出方法の変更
*  2002/10/21   PSD K.ARAI        販売伝票データ抽出条件追加
*  2004/04/07   NDSC A.MASUDA     テキストの再取得処理追加
*  2007/02/06   DMC R.HATA        出荷先名追加
*  2007/10/03   DMC R.Hata        テキスト再取得条件変更
*  2009/03/06   NDSC S.KURATA     売上単価の取得方法変更
*  2009/09/03   NDSC T.HAYASHI    売上単価の取得方法変更
*  2009/11/17   SOLFIS C.ONUKI    売上単価の取得方法変更
*  2010/09/21   SOLFIS M.MURATA   粗利率の符号を粗利金額の符号と合せる
************************************************************************
REPORT  ZS010602.

*---------------------------------------------------------------------
* TYPES
*---------------------------------------------------------------------
TYPE-POOLS SLIS.
*--- 請求伝票データ型
TYPES: BEGIN OF TYP_INFO,
VBELN   TYPE VBRP-VBELN,     " 請求伝票
POSNR   TYPE VBRP-POSNR,     " 明細
FKIMG   TYPE VBRP-FKIMG,     " 請求数量
VRKME   TYPE VBRP-VRKME,     " 販売単位
KURSK   TYPE VBRP-KURSK,     " 換算レート
AUBEL   TYPE VBRP-AUBEL,     " 販売伝票
AUPOS   TYPE VBRP-AUPOS,     " 販売伝票明細
MATNR   TYPE VBRP-MATNR,     " 品目コード
ARKTX   TYPE VBRP-ARKTX,     " テキスト
PSTYV   TYPE VBRP-PSTYV,     " 明細カテゴリ
MATKL   TYPE VBRP-MATKL,     " 品目グループ
PRODH   TYPE VBRP-PRODH,     " 品目階層
VSTEL   TYPE VBRP-VSTEL,     " 出荷ポイント
VKGRP   TYPE VBRP-VKGRP,     " 営業グループ
VKBUR   TYPE VBRP-VKBUR,     " 営業所
WAVWR   TYPE VBRP-WAVWR,     " 原価
MVGR1   TYPE VBRP-MVGR1,     " 商品グループ
MVGR2   TYPE VBRP-MVGR2,     " 最終製品
MVGR3   TYPE VBRP-MVGR3,     " 商品分類
MVGR4   TYPE VBRP-MVGR4,     " 開発部販売実績
* ↓ MODIFY 2002.02.26 PSD M.ARAI 売上計上日不具合対応
*         ERDAT   TYPE VBRP-ERDAT,     " 登録日
FKDAT   TYPE VBRK-FKDAT,     " 請求日
* ↑
NETWRA  TYPE VBRP-NETWR,     " 正味額
WAERK   TYPE VBRK-WAERK,     " 伝票通貨
*---DELETE START PSD T.SAITOH 2002/05/02 ---------------------------*
*         BELNR   TYPE VBRK-BELNR,     " 伝票番号
*---DELETE END   PSD T.SAITOH 2002/05/02 ---------------------------*
KDGRP   TYPE VBRK-KDGRP,     " 得意先グループ
ZTERM   TYPE VBRK-ZTERM,     " 支払条件
KUNNRA  TYPE VBRK-KUNRG,     " 支払人
KUNAG   TYPE VBRK-KUNAG,     " 受注先
FKART   TYPE VBRK-FKART,     " 請求タイプ
* 2002/01/16 PSD H.Tanaka DEL ↓
*         BSTNK   TYPE VBRK-BSTNK_VF,  " 得意先受注番号
* 2002/01/16 PSD H.Tanaka DEL ↑
VBTYP   TYPE VBRK-VBTYP,     " 販売伝票カテゴリ
VTEXT   TYPE TVSTT-VTEXT,    " 出荷ポイント名
* 2002/01/15 PSD H.Tanaka MOD ↓
BEZEIB  TYPE TVKBT-BEZEI,    " 営業署名
BEZEIA  TYPE TVGRT-BEZEI,    " 営業グループ名
* 2002/01/15 PSD H.Tanaka MOD ↑
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
KURRF   TYPE VBRK-KURRF ,    " 換算レート
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 ADD START
KNUMV   TYPE VBRK-KNUMV,     " 伝票条件番号
*2009/03/06 ADD END
END   OF TYP_INFO.

*--- 販売伝票データ型
TYPES: BEGIN OF TYP_VBAP,
* 2002/01/16 PSD H.Tanaka ADD ↓
*         VBELN  TYPE VBAP-VBELN,   " 販売伝票
*         POSNR  TYPE VBAP-POSNR,   " 販売伝票明細
AUBEL  TYPE VBAP-VBELN,   " 販売伝票
AUPOS  TYPE VBAP-POSNR,   " 販売伝票明細
* 2002/01/16 PSD H.Tanaka ADD ↑
KWMENG TYPE VBAP-KWMENG,  " 受注数量
KDMAT  TYPE VBAP-KDMAT,   " 得意先品目コード
AUDAT  TYPE VBAK-AUDAT,   " 伝票日付
*---MODIFY START PSD T.SAITOH 2002/07/12 ---------------------------*
** 2002/01/16 PSD H.Tanaka ADD ↓
*         BSTNK  TYPE VBAK-BSTNK,   " 得意先発注番号
** 2002/01/16 PSD H.Tanaka ADD ↑
BSTNK  TYPE VBKD-BSTKD,   " 得意先発注番号(３５桁)
*---MODIFY END   PSD T.SAITOH 2002/07/12 ---------------------------*
* ↓ append 2002.02.22 psd m.arai 売上単価不具合対応
NETPR  TYPE VBAP-NETPR,   " 正味額
KPEIN  TYPE VBAP-KPEIN,   " 価格条件単位
* ↑
END   OF TYP_VBAP.

*---------------------------------------------------------------------
* DATA
*---------------------------------------------------------------------
*--- 購買伝票内部テーブル
DATA: GF_INFO  TYPE          TYP_INFO,
GT_INFO  TYPE TABLE OF TYP_INFO.

*--- 販売伝票内部テーブル
DATA: GF_VBAP  TYPE          TYP_VBAP,
GT_VBAP  TYPE TABLE OF TYP_VBAP.

*--- 帳票出力用内部テーブル
DATA: GF_WRITE   TYPE          ZSLIST_V06A,
GT_WRITE   LIKE TABLE OF ZSLIST_V06A.
* 2002/01/10 PSD H.Tanaka ADD ↓
DATA: GT_ALV     TYPE TABLE OF ZSLIST_V06A
WITH HEADER LINE.
* 2002/01/10 PSD H.Tanaka ADD ↑

*--- REUSE_ALV_EVENTS_GET 用
DATA: GT_EVENT TYPE SLIS_T_EVENT.
DATA: GF_EVENT TYPE SLIS_ALV_EVENT.
DATA: GF_LAYOUT   TYPE SLIS_LAYOUT_ALV,     "レイアウト構造
GF_VARIANT   LIKE DISVARIANT,          "バリアント
G_TOP_OF_PAGE TYPE SLIS_FORMNAME VALUE 'TOP_OF_PAGE'.
*---
DATA: G_REPID        TYPE SY-REPID,        " プログラムＩＤ
G_DATA         TYPE SY-DATUM,        " システム日付
G_EDATU        LIKE VBEP-EDATU,      " 出荷日付
G_ADRNR        LIKE VBPA-ADRNR,      " 住所
G_BSTDK_E      LIKE VBKD-BSTDK_E,    " 得意先回答納期
G_FLG_EXIT(1)  TYPE C VALUE '0',     " ＬＯＯＰ終了フラグ
G_KUNNRA       TYPE VBRK-KUNRG.

* 2002/03/12  PSD T.SAITOH ADD ↓----------------------------------- *
DATA: GF_PRINT TYPE SLIS_PRINT_ALV.
* 2002/03/12  PSD T.SAITOH ADD ↑----------------------------------- *

*---------------------------------------------------------------------
* 定数宣言
*---------------------------------------------------------------------
CONSTANTS: CNS_VBRP(4)    TYPE C VALUE 'VBRP',
CNS_VBPA(4)    TYPE C VALUE 'VBPA',
CNS_VBEP(4)    TYPE C VALUE 'VBEP',
CNS_VBBP(4)    TYPE C VALUE 'VBBP',
CNS_EKPO(4)    TYPE C VALUE 'EKPO',
CNS_VBAP(4)    TYPE C VALUE 'VBAP',
CNS_VBKD(4)    TYPE C VALUE 'VBKD',
CNS_VBFA(4)    TYPE C VALUE 'VBFA',
CNS_TVSTT(5)   TYPE C VALUE 'TVSTT',
CNS_A(1)       TYPE C VALUE 'A',
CNS_N(1)       TYPE C VALUE 'N',
CNS_H(1)       TYPE C VALUE 'H',
*           CNS_I(1)       TYPE C VALUE 'I',
CNS_K(1)       TYPE C VALUE 'K',
CNS_L(1)       TYPE C VALUE 'L',
CNS_M(1)       TYPE C VALUE 'M',
CNS_O(1)       TYPE C VALUE 'O',
CNS_C(1)       TYPE C VALUE 'C',
CNS_J(1)       TYPE C VALUE 'J',
CNS_S(1)       TYPE C VALUE 'S',
CNS_X(1)       TYPE C VALUE 'X',
CNS_P(1)       TYPE C VALUE 'P',
CNS_PY(2)      TYPE C VALUE 'PY',
CNS_AG(2)      TYPE C VALUE 'AG',
CNS_F2(2)      TYPE C VALUE 'F2',
CNS_KA(2)      TYPE C VALUE 'KA',
CNS_KB(2)      TYPE C VALUE 'KB',
CNS_L2(2)      TYPE C VALUE 'L2',
CNS_G2(2)      TYPE C VALUE 'G2',
CNS_SP(2)      TYPE C VALUE 'SP',
CNS_S1(2)      TYPE C VALUE 'S1',
CNS_S2(2)      TYPE C VALUE 'S2',
CNS_PE(2)      TYPE C VALUE 'PE',
CNS_RE(2)      TYPE C VALUE 'RE',
CNS_TAN(3)     TYPE C VALUE 'TAN',
CNS_ZTAN(4)    TYPE C VALUE 'ZTAN',
CNS_ZTMP(4)    TYPE C VALUE 'ZTMP',
CNS_ZERO(1)    TYPE C VALUE '0',
CNS_ZSEO(4)    TYPE C VALUE 'ZSEO',
CNS_ZSEK(4)    TYPE C VALUE 'ZSEK',
CNS_ONLI(4)    TYPE C VALUE 'ONLI',
CNS_0001(4)    TYPE C VALUE '0001',
CNS_*(1)       TYPE C VALUE '*'
.
*---------------------------------------------------------------------
* 選択画面定義
*---------------------------------------------------------------------
*--- 抽出年月日
* ↓ MODIFY 2002.02.26 PSD M.Arai 売上計上日変更対応
*SELECT-OPTIONS: S_ERDAT FOR GF_INFO-ERDAT OBLIGATORY.
SELECT-OPTIONS: S_ERDAT FOR GF_INFO-FKDAT OBLIGATORY.
* ↑
*---APPEND START PSD T.SAITOH 2002/07/29 ---------------------------*
*   販売組織
PARAMETERS: PR_VKORG TYPE TVKO-VKORG MEMORY ID VKO OBLIGATORY,
*   流通チャネル
PR_VTWEG TYPE TVTW-VTWEG MEMORY ID VTW OBLIGATORY,
*   製品部門
PR_SPART TYPE TSPA-SPART MEMORY ID SPA OBLIGATORY.
*---APPEND END   PSD T.SAITOH 2002/07/29 ---------------------------*

*--- 営業所コード
SELECT-OPTIONS: S_VKBUR FOR GF_INFO-VKBUR OBLIGATORY.
*--- 営業グループ
SELECT-OPTIONS: S_VKGRP FOR GF_INFO-VKGRP.
*--- 得意先コード
SELECT-OPTIONS: S_KUNRG FOR G_KUNNRA.

* Add 2006.10.27 --->
*--- 品目コード
SELECT-OPTIONS: S_MATNR FOR GF_INFO-MATNR .
* Add 2006.10.27 <---

* Add 2008.11.17 --->
*--- 品目コード
SELECT-OPTIONS: S_FKART FOR GF_INFO-FKART .
* Add 2008.11.17 <---



*---------------------------------------------------------------------
* START-OF-SELECTION
*---------------------------------------------------------------------
START-OF-SELECTION.
*--- 初期処理
PERFORM FRM_INIT.

*--- 帳票出力用内部テーブル設定処理
PERFORM FRM_MAKE_DATA.

*--- 帳票出力処理
PERFORM FRM_WRITE_DATA.

************************************************************************
* TOP-OF-PAGE
***********************************************************************
FORM FRM_TOP_OF_PAGE.
*--- ヘッダー出力処理
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WRITE:  50      TEXT-001,
*            /1      TEXT-002,GF_WRITE-VKBUR,TEXT-004,GF_WRITE-BEZEIA,
*                    TEXT-003,GF_WRITE-VKGRP,TEXT-004,GF_WRITE-BEZEIB,
*                    TEXT-005,GF_WRITE-DATFM,        " 日付
*                    TEXT-006,GF_WRITE-DATTO.        " 日付
WRITE:  50      TEXT-001,
/1      TEXT-002,GT_ALV-VKBUR,TEXT-004,GT_ALV-BEZEIA,
TEXT-003,GT_ALV-VKGRP,TEXT-004,GT_ALV-BEZEIB,
TEXT-005,GT_ALV-DATFM,        " 日付
TEXT-006,GT_ALV-DATTO.        " 日付
* 2002/01/10 PSD H.Tanaka MOD ↑
*---APPEND START PSD T.SAITOH 2002/08/08 ---------------------------*
*   ページ番号付加
WRITE: 140 'PAGE:',SY-PAGNO.
*---APPEND END   PSD T.SAITOH 2002/08/08 ---------------------------*

ENDFORM.
************************************************************************
* ALV CALLER_EXIT（ 2002/01/10 PSD H.Tanaka ADD ）
***********************************************************************
FORM FRM_CALLER_EXIT USING RS_DATA TYPE SLIS_DATA_CALLER_EXIT.
RS_DATA-CALLBACK_HEADER_TRANSPORT = 'FILITEXTS_TEXT_TRANSPORT'.
ENDFORM.
************************************************************************
* Form
***********************************************************************
*&---------------------------------------------------------------------*
*&      Form  FRM_INIT
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_INIT.

G_REPID = SY-REPID.   " プログラムＩＤ取得
G_DATA  = SY-DATUM.   " システム日付取得

ENDFORM.                    " FRM_INIT
*&---------------------------------------------------------------------
*&      Form  FRM_MAKE_DATA
*&---------------------------------------------------------------------
*       帳票出力用内部テーブル設定処理
*----------------------------------------------------------------------
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------
FORM FRM_MAKE_DATA.
*--- 請求伝票情報取得処理
PERFORM FRM_VBRK_GET.

*--- 帳票出力情報設定処理
LOOP AT GT_INFO INTO GF_INFO.
*--- 請求伝票情報設定処理
PERFORM FRM_VBRK_SET.
*--- 販売伝票情報取得処理
PERFORM FRM_VBAP_GET.
*--- 販売伝票情報設定処理
PERFORM FRM_VBAP_SET.
* 2002/01/21 PSD H.Tanaka ADD ↓
*--- 数量のマイナス設定処理
PERFORM FRM_DATA_SET.
*--- 選択処理年月日設定処理
PERFORM FRM_DATE_SET.
*--- 計算処理
PERFORM FRM_KEISAN_SET.
*--- 帳票用内部テーブル更新処理
APPEND GF_WRITE TO GT_WRITE.
ENDLOOP.

ENDFORM.                    " FRM_MAKE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_VBRK_GET
*&---------------------------------------------------------------------*
*       請求伝票情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBRK_GET.
CLEAR   GF_INFO.
REFRESH GT_INFO.

*--- 販売伝票情報取得
SELECT A~VBELN A~POSNR A~FKIMG A~VRKME A~KURSK
A~AUBEL A~AUPOS A~MATNR A~ARKTX A~PSTYV
A~MATKL A~PRODH A~VSTEL A~VKGRP A~VKBUR
A~WAVWR A~MVGR1 A~MVGR2 A~MVGR3 A~MVGR4
* ↓ MODIFY  2002.02.26 PSD M.Arai 売上計上日不具合対応
*         A~ERDAT A~NETWR
B~FKDAT A~NETWR
* ↑
*---MODIFY START PSD T.SAITOH 2002/05/02 ---------------------------*
*        B~WAERK B~BELNR B~KDGRP B~ZTERM
B~WAERK         B~KDGRP B~ZTERM
*---MODIFY END   PSD T.SAITOH 2002/05/02 ---------------------------*
* 2002/01/16 PSD H.Tanaka MOD ↓
B~KUNRG B~KUNAG B~FKART
*         B~BSTNK_VF
B~VBTYP
*         C~BEZEI D~BEZEI E~VTEXT
* 2002/01/16 PSD H.Tanaka MOD ↑
C~VTEXT D~BEZEI E~BEZEI
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*** 売上金額（円だて）算出のため
B~KURRF
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 ADD START
B~KNUMV
*2009/03/06 ADD END
INTO TABLE GT_INFO
FROM ( ( ( VBRP AS A INNER JOIN VBRK AS B
ON       A~VBELN  = B~VBELN ) INNER JOIN TVSTT AS C
ON       A~VSTEL  = C~VSTEL ) INNER JOIN TVGRT AS D
ON       A~VKGRP  = D~VKGRP ) INNER JOIN TVKBT AS E
ON       A~VKBUR  = E~VKBUR
WHERE     A~VKGRP IN S_VKGRP
AND     A~VKBUR IN S_VKBUR
* ↓ MODIFY 2002.02.26 M.Arai 売上計上日変更対応
*     AND     A~ERDAT IN S_ERDAT
AND     B~FKDAT IN S_ERDAT

* Add 2006.10.27 --->
AND MATNR IN S_MATNR
* Add 2006.10.27 <---

* Add 2006.10.27 --->
AND B~FKART IN S_FKART
* Add 2006.10.27 <---



* ↑
*---APPEND START PSD T.SAITOH 2002/07/29 ---------------------------*
AND     B~VKORG = PR_VKORG
AND     B~VTWEG = PR_VTWEG
AND     B~SPART = PR_SPART
*---APPEND END   PSD T.SAITOH 2002/07/29 ---------------------------*
AND     B~KUNRG IN S_KUNRG
AND ( ( B~FKART =  CNS_F2
AND     B~FKTYP =  CNS_L
AND     B~VBTYP =  CNS_M )
*---APPEND START PSD K.ARAI   2002/10/21 ---------------------------*
OR   ( B~FKART =  CNS_L2
AND     B~FKTYP =  CNS_L
AND     B~VBTYP =  CNS_P )
*---APPEND END   PSD K.ARAI   2002/10/21 ---------------------------*
OR   ( B~FKART =  CNS_RE
AND     B~FKTYP =  CNS_L
AND     B~VBTYP =  CNS_O )
OR   ( B~FKART =  CNS_S2
AND     B~FKTYP =  CNS_A
AND     B~VBTYP =  CNS_S )
OR   ( B~FKART =  CNS_S2
AND     B~FKTYP =  CNS_L
AND     B~VBTYP =  CNS_S )
OR   ( B~FKART =  CNS_S1
AND     B~FKTYP =  CNS_A
AND     B~VBTYP =  CNS_N )
OR   ( B~FKART =  CNS_S1
AND     B~FKTYP =  CNS_L
AND     B~VBTYP =  CNS_N )
OR   ( B~FKART =  CNS_L2
AND     B~FKTYP =  CNS_A
AND     B~VBTYP =  CNS_P )
OR   ( B~FKART =  CNS_G2
AND     B~FKTYP =  CNS_A
AND     B~VBTYP =  CNS_O ) )
AND     C~SPRAS =  CNS_J
AND     D~SPRAS =  CNS_J
AND     E~SPRAS =  CNS_J.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE S600(Z1) WITH TEXT-007.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBRP
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBRK_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBRK_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBRK_SET.
CLEAR: GF_WRITE,        " 帳票出力用構造クリア
G_FLG_EXIT.      " ＬＯＯＰ終了フラグクリア
*--- 共通項目設定
MOVE-CORRESPONDING GF_INFO TO GF_WRITE.

*--- 区・在（在庫品）設定
IF GF_WRITE-PSTYV = CNS_ZSEO.
GF_WRITE-KU = TEXT-008.
ELSEIF GF_WRITE-PSTYV = CNS_ZSEK OR
GF_WRITE-PSTYV = CNS_TAN  OR
GF_WRITE-PSTYV = CNS_ZTAN OR
GF_WRITE-PSTYV = CNS_ZTMP.
GF_WRITE-ZAI = CNS_*.
IF GF_WRITE-PSTYV = CNS_ZSEK.
GF_WRITE-KU  = TEXT-009.
ENDIF.
ENDIF.

*--- 伝区設定
IF GF_WRITE-FKART = CNS_RE.
GF_WRITE-DENKU = TEXT-010.
ELSEIF GF_WRITE-FKART = CNS_G2.
GF_WRITE-DENKU = TEXT-011.
ELSEIF GF_WRITE-FKART = CNS_L2.
GF_WRITE-DENKU = TEXT-012.
ELSEIF GF_WRITE-FKART = CNS_S1.
GF_WRITE-DENKU = TEXT-013.
ELSEIF GF_WRITE-FKART = CNS_S2.
GF_WRITE-DENKU = TEXT-014.
ENDIF.

ENDFORM.                    " FRM_VBRK_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBAP_GET.
CLEAR   GF_VBAP.
REFRESH GT_VBAP.

*--- 販売伝票情報取得
SELECT A~VBELN A~POSNR A~KWMENG A~KDMAT
B~AUDAT
* 2002/01/16 PSD H.Tanaka ADD ↓
B~BSTNK
* 2002/01/16 PSD H.Tanaka ADD ↑
* ↓ 2002.02.22 psd m.arai 売上単価不具合対応
A~NETPR
A~KPEIN
* ↑
*    INTO CORRESPONDING FIELDS OF TABLE GT_VBAP
INTO TABLE GT_VBAP
FROM VBAP AS A INNER JOIN VBAK AS B
ON A~VBELN = B~VBELN
WHERE A~VBELN = GF_INFO-AUBEL
AND A~POSNR = GF_INFO-AUPOS.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
*      SORT GT_VBAP BY VBELN POSNR.
SORT GT_VBAP BY AUBEL AUPOS.
WHEN 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-015.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAP
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBAP_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBAP_SET.

LOOP AT GT_VBAP INTO GF_VBAP.
IF SY-TABIX = 1.
*--- 販売情報設定
MOVE-CORRESPONDING GF_VBAP TO GF_WRITE.
*---APPEND START PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 出荷指示備考設定
PERFORM FRM_READ_TEXT_FORWARDING.
*---APPEND END   PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 社内用備考設定
PERFORM FRM_READ_TEXT.
*--- 販売伝票納入日程行情報取得
PERFORM FRM_VBEP_GET.
*--- 販売伝票ビジネスデータ情報取得
PERFORM FRM_VBKD_GET.


* Add 2007.02.06 --->
*--- 出荷先名設定
PERFORM FRM_VBPA_GET USING   'WE'
'出荷先名'
CHANGING GF_WRITE-SHUKKA.
*--- 出荷先名設定
PERFORM FRM_ADDR_GET USING    GF_WRITE-SHUKKA
CHANGING GF_WRITE-SHUKKA.
* Add 2007.02.06 <---


*--- 販売伝票取引先取得（受注先名取得用）
* 2002/01/11 PSD H.Tanaka MOD ↓
*      PERFORM FRM_VBPA_GET USING    CNS_SP
PERFORM FRM_VBPA_GET USING    CNS_AG
* 2002/01/11 PSD H.Tanaka MOD ↑
TEXT-019
*                           CHANGING GF_WRITE-KUNAG.
CHANGING GF_WRITE-KUNNRB.
*--- 受注先名設定
*      PERFORM FRM_ADDR_GET USING    GF_WRITE-KUNAG
PERFORM FRM_ADDR_GET USING    GF_WRITE-KUNNRB
CHANGING GF_WRITE-KUNNRB.
*--- 販売伝票取引先取得（得意先名取得用）
* 2002/01/11 PSD H.Tanaka MOD ↓
*      PERFORM FRM_VBPA_GET USING    CNS_PY
PERFORM FRM_VBPA_GET USING    CNS_AG
* 2002/01/11 PSD H.Tanaka MOD ↑
TEXT-018
*                           CHANGING GF_WRITE-KUNNRA.
CHANGING GF_WRITE-KUNTX.
*--- 得意先名設定
*      PERFORM FRM_ADDR_GET USING    GF_WRITE-KUNNRA
PERFORM FRM_ADDR_GET USING    GF_WRITE-KUNTX
CHANGING GF_WRITE-KUNTX.
ELSE.
*--- 受注数量設定
GF_WRITE-KWMENG = GF_WRITE-KWMENG + GF_VBAP-KWMENG.
ENDIF.
ENDLOOP.

ENDFORM.                    " FRM_VBAP_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT
*&---------------------------------------------------------------------*
*       社内用備考取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_READ_TEXT.
DATA: LT_TLINE    TYPE TABLE OF TLINE,
LF_TLINE    TYPE TLINE,
L_VBELN     LIKE THEAD-TDNAME.

*  CONCATENATE GF_VBAP-VBELN
*              GF_VBAP-POSNR
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
*  ヘッダ単位のためヘッダのみ
*  CONCATENATE GF_VBAP-AUBEL
*              GF_VBAP-AUPOS
*              INTO L_VBELN.
* Modified 2004.04.07 >>>
* L_VBELN = GF_VBAP-AUBEL.
SELECT SINGLE VGBEL
FROM VBRP
INTO L_VBELN
WHERE VBELN EQ GF_INFO-VBELN
AND  POSNR EQ GF_INFO-POSNR
.

* Modified 2004.04.07 <<<

*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID        = '0001'
LANGUAGE  = 'J'
NAME      = L_VBELN
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
* 設計書どおりに記述していないため修正
*            OBJECT    = 'VBBP'
OBJECT    = 'VBBK'
*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
TABLES
LINES     = LT_TLINE
EXCEPTIONS
NOT_FOUND = 4
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
REFERENCE_CHECK = 5
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
OTHERS    = 8.
CASE SY-SUBRC.
WHEN 0.
READ TABLE LT_TLINE INTO LF_TLINE INDEX 1.
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
*     GF_WRITE-ETCB = LF_TLINE+0(40).
GF_WRITE-ETCB = LF_TLINE-TDLINE.
*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
* Mod 2007.10.03 --->
*    WHEN 8.
WHEN OTHERS .
* Mod 2007.10.03 <---

*---APPEND START NDSC A.MASUDA 2004/04/07---------------------------*
L_VBELN = GF_VBAP-AUBEL.
*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID        = '0001'
LANGUAGE  = 'J'
NAME      = L_VBELN
OBJECT    = 'VBBK'
TABLES
LINES     = LT_TLINE
EXCEPTIONS
NOT_FOUND = 4
REFERENCE_CHECK = 5
OTHERS    = 8.
CASE SY-SUBRC.
WHEN 0.
READ TABLE LT_TLINE INTO LF_TLINE INDEX 1.
GF_WRITE-ETCB = LF_TLINE-TDLINE.
WHEN 8.
MESSAGE E001(Z1) WITH TEXT-016
SY-SUBRC.
ENDCASE.
*---APPEND START NDSC A.MASUDA 2004/04/07---------------------------*
*---DELETE START NDSC A.MASUDA 2004/04/07---------------------------*
*      MESSAGE E001(Z1) WITH TEXT-016
*                            SY-SUBRC.
*---DELETE END   NDSC A.MASUDA 2004/04/07---------------------------*
ENDCASE.

ENDFORM.                    " FRM_READ_TEXT
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET
*&---------------------------------------------------------------------*
*       販売伝票納入日程行情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBEP_GET.
*--- 販売伝票納入日程行取得
SELECT SINGLE EDATU
INTO (GF_WRITE-EDATU)
FROM VBEP
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR
WHERE VBELN = GF_VBAP-AUBEL
AND POSNR = GF_VBAP-AUPOS
AND ETENR = CNS_0001.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-017.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBEP
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBEP_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBKD_GET
*&---------------------------------------------------------------------*
*       販売伝票ビジネスデータ情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBKD_GET.
*--- 販売伝票ビジネスデータ情報取得
SELECT SINGLE BSTDK_E
*---APPEND START PSD T.SAITOH 2002/07/12 ---------------------------*
BSTKD "得意先発注番号（３５桁）
*---APPEND END   PSD T.SAITOH 2002/07/12 ---------------------------*
*---MODIFY START PSD T.SAITOH 2002/07/12 ---------------------------*
*    INTO (GF_WRITE-TKNK)
INTO (GF_WRITE-TKNK,GF_WRITE-BSTNK)
*---MODIFY END   PSD T.SAITOH 2002/07/12 ---------------------------*
FROM VBKD
* 2002/01/22 PSD H.Tanaka MOD ↓
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR.
WHERE VBELN = GF_VBAP-AUBEL
*     AND POSNR = GF_VBAP-AUPOS
AND POSNR = '000000'.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-020.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBKD
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBKD_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET
*&---------------------------------------------------------------------*
*       販売伝票取引先取得処理
*----------------------------------------------------------------------*
*      -->P_PAEVW  取引先機能
*      -->P_TEXT   エラー時出力用テーブル名
*      <--P_ADRNR  住所
*----------------------------------------------------------------------*
FORM FRM_VBPA_GET USING    P_PAEVW
P_TEXT
CHANGING P_ADRNR.
*--- 販売伝票取引情報取得
SELECT SINGLE ADRNR
INTO (P_ADRNR)
FROM VBPA
* 2002/01/11 PSD H.Tanaka MOD ↓
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR
WHERE VBELN = GF_VBAP-AUBEL
AND POSNR = '000000'
* 2002/01/11 PSD H.Tanaka MOD ↑
AND PARVW = P_PAEVW.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE S600(Z1) WITH P_TEXT.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBPA
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBPA_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_DATE_SET
*&---------------------------------------------------------------------*
*       選択処理年月日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATE_SET.
GF_WRITE-DATFM = S_ERDAT-LOW.
GF_WRITE-DATTO = S_ERDAT-HIGH.
ENDFORM.                    " FRM_DATE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_KEISAN_SET
*&---------------------------------------------------------------------*
*       計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_KEISAN_SET.
DATA: L_NETWRA TYPE ZSLIST_V06A-KWMENG,
L_WAVWR  TYPE ZSLIST_V06A-NETPRA.
*2009/03/06 ADD START
DATA: L_KBETR        TYPE KONV-KBETR,
L_KPEIN        TYPE KONV-KPEIN,
L_WAERS        TYPE KONV-WAERS,
L_NETPRA(13)   TYPE C.
*2009/03/06 ADD END
*--- 売上金額設定
* 2002/01/22 PSD H.Tanaka MOD ↓
*2009/03/06 DEL START
*  PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
**                                      GF_WRITE-NETWRA
***                             CHANGING GF_WRITE-NETWRB.
**                             CHANGING GF_WRITE-NETWRA.
** ↓ modify 2002.02.22 psd m.arai 売上単価不具合対応
**                                      GF_INFO-NETWRA
*                                      GF_VBAP-NETPR
*                             CHANGING L_NETWRA.
*2009/03/06 DEL END
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*** 売上金額はVBAP-NETPRではなく、VBRP-NETWRから算出する。
PERFORM FRM_KINGAKU_HENKAN USING     GF_WRITE-WAERK
GF_INFO-NETWRA
CHANGING  GF_WRITE-NETWRA.
*  GF_WRITE-NETWRA = L_NETWRA.
*  IF GF_VBAP-KPEIN <> 0.
*    GF_WRITE-NETWRA = ( GF_WRITE-NETWRA * GF_WRITE-FKIMG )
*                    / GF_VBAP-KPEIN.
*  ELSE.
*    GF_WRITE-NETWRA = 0.
*  ENDIF.

* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*

* ↑

*--- 原価設定
* 2002/01/22 PSD H.Tanaka MOD ↓
PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
*                                      GF_WRITE-WAVWR
GF_INFO-WAVWR
*                             CHANGING GF_WRITE-WAVWRA.
*                             CHANGING GF_WRITE-WAVWR.
CHANGING L_WAVWR.
*--- 原価計算
* 2002/01/24 PSD H.Tanaka MOD ↓
*  IF GF_WRITE-KWMENG <> CNS_ZERO.
IF GF_INFO-FKIMG <> CNS_ZERO.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_WRITE-KWMENG.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_VBAP-KWMENG.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_INFO-FKIMG.
GF_WRITE-WAVWR = L_WAVWR / GF_INFO-FKIMG.
GF_WRITE-WAVWRA = ( L_WAVWR / GF_INFO-FKIMG ) * GF_WRITE-KURSK.
ENDIF.
*--- 原価（円建て）計算
*  GF_WRITE-WAVWRA = GF_WRITE-WAVWR * GF_WRITE-KURSK.

*--- 原価金額計算
*  GF_WRITE-GYENA = GF_WRITE-WAVWR.
*  GF_WRITE-GYENA = L_WAVWR.
IF GF_INFO-VBTYP = CNS_N OR
GF_INFO-VBTYP = CNS_O.
*    GF_WRITE-GYENA = GF_WRITE-GYENA * -1.
L_WAVWR = L_WAVWR * -1.
ENDIF.
GF_WRITE-GYENA = L_WAVWR.
*--- 原価金額（円建て）計算（小数点なし）
* 2002/01/11 PSD H.Tanaka MOD ↓
*  GF_WRITE-GYENB  = GF_WRITE-WAVWRA * GF_WRITE-FKIMG.
*  GF_WRITE-GYENB = GF_WRITE-GYENA * GF_WRITE-KURSK.
GF_WRITE-GYENB = L_WAVWR * GF_WRITE-KURSK.

*--- 売上単価計算
*---MODIFY START PSD T.SAITOH 2002/04/01 ---------------------------*
*  IF GF_WRITE-FKIMG <> CNS_ZERO. "チェックする内容が違うのでは？
*                                  とりあえず、修正する。
IF GF_VBAP-KPEIN <> CNS_ZERO.
*---MODIFY END   PSD T.SAITOH 2002/04/01 ---------------------------*
* 2002/01/22 PSD H.Tanaka MOD ↓
*    GF_WRITE-NETPRA = GF_WRITE-NETWRB / GF_WRITE-FKIMG.
*    GF_WRITE-NETPRA = L_NETWRA / GF_WRITE-FKIMG.

* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 MOD START
*   条件レート・価格条件単位取得
PERFORM FRM_GET_KONV USING    GF_INFO-KNUMV
GF_INFO-POSNR
CHANGING L_KBETR
L_KPEIN
L_WAERS.
IF L_KPEIN <> CNS_ZERO.
*     条件レートを通貨変換
WRITE L_KBETR TO L_NETPRA CURRENCY L_WAERS NO-GROUPING.
*     売上単価 = 条件レート ÷ 価格条件単位
GF_WRITE-NETPRA = L_NETPRA / L_KPEIN.
ENDIF.
**** 売上単価　=　売上金額　÷　数量
*    IF GF_INFO-FKIMG <> CNS_ZERO.
*      GF_WRITE-NETPRA = GF_WRITE-NETWRA / GF_INFO-FKIMG.
*    ENDIF.
*2009/03/06 MOD END
*    GF_WRITE-NETPRA = L_NETWRA / GF_VBAP-KPEIN."売上単価算出
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*

* APPEND START PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 DEL START
**** 売上単価を求める際、マイナスの値が出ることを防ぐため
*    IF GF_WRITE-NETWRA < CNS_ZERO.
*      GF_WRITE-NETPRA = GF_WRITE-NETPRA * - 1 .
*    ENDIF.
*2009/03/06 DEL END
* APPEND END   PSD K.ARAI 2002/10/18--------------------------*

*---DELETE START PSD T.SAITOH 2002/04/01 ---------------------------*
*  ENDIF.
*---DELETE END   PSD T.SAITOH 2002/04/01 ---------------------------*

*--- 売上単価（円建て）計算
* ↓ MODIFY 2002/02/22 PSD M.Arai 売上単価不具合対応
*  GF_WRITE-NETPRB = GF_WRITE-NETPRA * GF_WRITE-KURSK.
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 MOD START
*-- 売上単価（円建て） = 売上単価　×　換算レート
GF_WRITE-NETPRB  = GF_WRITE-NETPRA * GF_WRITE-KURSK.
*    GF_WRITE-NETPRB  =
*          ( GF_WRITE-NETPRA / GF_VBAP-KPEIN ) * GF_WRITE-KURSK.
*2009/03/06 MOD END
*   GF_WRITE-NETPRB = ( L_NETWRA / GF_VBAP-KPEIN )  * GF_WRITE-KURSK.
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
* ↑
*---MODIFY START PSD T.SAITOH 2002/04/01 ---------------------------*
ENDIF.
*---MODIFY END   PSD T.SAITOH 2002/04/01 ---------------------------*


*--- 売上金額（円建て）計算（小数点なし）
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
***売上金額（円建て）=　売上金額（原価） × 換算レート
GF_WRITE-NETWRB = GF_WRITE-NETWRA * GF_INFO-KURRF.
*  GF_WRITE-NETWRB = GF_WRITE-FKIMG * GF_WRITE-NETPRB.
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
* 2002/01/11 PSD H.Tanaka MOD ↑

*---APPEND START PSD T.SAITOH 2002/04/01 ---------------------------*
* 売上金額（円建て）小数点ありをリストビューア項目に設定する
GF_WRITE-NETWRC = GF_WRITE-FKIMG * GF_WRITE-NETPRB.
* 原価金額（円建て）小数点ありをリストビューア項目に設定する
GF_WRITE-GYENC =  L_WAVWR * GF_WRITE-KURSK.
*---APPEND END   PSD T.SAITOH 2002/04/01 ---------------------------*

*--- 粗利金額計算
*---MODIFY START PSD T.SAITOH 2002/05/02 ---------------------------*
*  GF_WRITE-ARAEYN = GF_WRITE-NETWRB - GF_WRITE-GYENB.
* 粗利金額 = （売上金額（外貨）−原価金額（外貨））＊ 換算レート
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*** 換算レートを修正
GF_WRITE-ARAEYN
= ( GF_WRITE-NETWRA - L_WAVWR ) * GF_INFO-KURRF.
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
*---MODIFY END   PSD T.SAITOH 2002/05/02 ---------------------------*

*--- 粗利率計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*    GF_WRITE-ARAPER = GF_WRITE-ARAEYN / GF_WRITE-NETWRA.
*  IF GF_WRITE-NETWRA <> CNS_ZERO.
IF GF_WRITE-NETWRB <> CNS_ZERO.
GF_WRITE-ARAPER = GF_WRITE-ARAEYN / GF_WRITE-NETWRB * 100.
* 2002/01/11 PSD H.Tanaka MOD ↑
ENDIF.

* Add Start 2010/09/21
* 粗利率の符号は粗利金額のそれと合せる
IF GF_WRITE-ARAEYN < 0.             "粗利金額 < 0
IF GF_WRITE-ARAPER > 0.           "粗利率 > 0
GF_WRITE-ARAPER = GF_WRITE-ARAPER * -1.
ENDIF.
ELSE.                               "粗利金額 => 0
IF GF_WRITE-ARAPER < 0.           "粗利率 < 0
GF_WRITE-ARAPER = GF_WRITE-ARAPER * -1.
ENDIF.
ENDIF.
* Add End   2010/09/21

*---modify START PSD T.SAITOH 2002/04/01 ---------------------------*
* 売上金額（円建て）小数点ありをリストビューア項目に設定する
*    GF_WRITE-NETWRC = GF_WRITE-NETWRB.
* 原価金額（円建て）小数点ありをリストビューア項目に設定する
*    GF_WRITE-GYENC = GF_WRITE-GYENB.
*---modify END   PSD T.SAITOH 2002/04/01 ---------------------------*
ENDFORM.                    " FRM_KEISAN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_ADDR_GET
*&---------------------------------------------------------------------*
*       受注先名／得意先名取得処理
*----------------------------------------------------------------------*
*      -->P_ADRNR  住所
*      <--P_NAME2  受注先名／得意先名
*----------------------------------------------------------------------*
FORM FRM_ADDR_GET USING    P_ADRNR
CHANGING P_NAME2.
DATA L_ADDR1_SEL TYPE ADDR1_SEL.
DATA L_SADR      TYPE SADR.

L_ADDR1_SEL-ADDRNUMBER = P_ADRNR.
*--- 汎用モジュール『ADDR_GET』
CALL FUNCTION 'ADDR_GET'
EXPORTING
ADDRESS_SELECTION = L_ADDR1_SEL
IMPORTING
SADR              = L_SADR
EXCEPTIONS
PARAMETER_ERROR   = 1
ADDRESS_NOT_EXIST = 2
VERSION_NOT_EXIST = 3
INTERNAL_ERROR    = 4
OTHERS            = 5.
IF SY-SUBRC <> 0.
*    P_KUNNR = ''.
ELSE.
P_NAME2 = L_SADR-NAME1.
ENDIF.

ENDFORM.                    " FRM_ADDR_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_WRITE_DATA.
*--- 帳票設定処理
PERFORM FRM_WRITE_SET.

*--- リストの出力
CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM             = G_REPID        "レポートID
*   I_CALLBACK_TOP_OF_PAGE          = G_TOP_OF_PAGE  "TOP_OF_PAGE
I_STRUCTURE_NAME               = 'ZSLIST_V06a'   "構造
IS_LAYOUT                      = GF_LAYOUT      "レイアウト設定
I_SAVE                         = 'A'            "レイアウト保存
IS_VARIANT                     = GF_VARIANT
IT_EVENTS                      = GT_EVENT[]     "イベント設定
* 2002/03/13  PSD T.SAITOH ADD ↓-------------------------------------*
IS_PRINT                       = GF_PRINT      "印刷設定
* 2002/03/13  PSD T.SAITOH ADD ↑-------------------------------------*
TABLES
* 2002/01/10 PSD H.Tanaka MOD ↓
*    T_OUTTAB                       = GT_WRITE  " 帳票出力用内部テーブル
T_OUTTAB                       = GT_ALV  " 帳票出力用内部テーブル
* 2002/01/10 PSD H.Tanaka MOD ↑
EXCEPTIONS
PROGRAM_ERROR                  = 1
OTHERS                         = 2
.
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                    " FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_SET
*&---------------------------------------------------------------------*
*       帳票設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_WRITE_SET.
* 2002/02/06 PSD H.Tanaka ADD ↓
*--- 内部テーブル存在チェック
IF GT_WRITE IS INITIAL.
MESSAGE S204(Z1).
STOP.
ENDIF.
* 2002/02/06 PSD H.Tanaka ADD ↑
* 2002/01/10 PSD H.Tanaka ADD ↓
*--- 内部テーブル変換処理
GT_ALV[] = GT_WRITE[].
* 2002/01/10 PSD H.Tanaka ADD ↑
* 2002/03/12  PSD T.SAITOH ADD ↓-------------------------------------*
GF_PRINT-NO_PRINT_LISTINFOS = 'X'.
* 2002/03/12  PSD T.SAITOH ADD ↑-------------------------------------*

*--- イベント取得処理
PERFORM FRM_EVENT_GET.

*--- ページ切り替え設定
GF_LAYOUT-GROUP_CHANGE_EDIT = CNS_X.

*--- バリアント保存設定
GF_VARIANT-VARIANT = '/ZS010600_01'.
ENDFORM.                    " FRM_WRITE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_EVENT_GET
*&---------------------------------------------------------------------*
*       イベント取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_EVENT_GET.
*--- イベント取得
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
I_LIST_TYPE     = 0
IMPORTING
ET_EVENTS       = GT_EVENT
EXCEPTIONS
LIST_TYPE_WRONG = 1
OTHERS          = 2.
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

*--- 使用イベントに実行するサブルーチン名を設定
LOOP AT GT_EVENT INTO GF_EVENT.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WHERE NAME = 'TOP_OF_PAGE'.
*      GF_EVENT-FORM = 'FRM_TOP_OF_PAGE'.
*      MODIFY GT_EVENT FROM GF_EVENT.
CASE GF_EVENT-NAME.
WHEN 'TOP_OF_PAGE'.
GF_EVENT-FORM = 'FRM_TOP_OF_PAGE'.
MODIFY GT_EVENT FROM GF_EVENT.
WHEN 'CALLER_EXIT'.
GF_EVENT-FORM = 'FRM_CALLER_EXIT'.
MODIFY GT_EVENT FROM GF_EVENT.
ENDCASE.
* 2002/01/10 PSD H.Tanaka MOD ↑
ENDLOOP.

ENDFORM.                    " FRM_EVENT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*       金額変換処理
*----------------------------------------------------------------------*
*      -->P_TSUKACD  通貨コード
*      -->P_KINGAKU  変換前金額
*      <--P_HENKAN   変換後金額
*----------------------------------------------------------------------*
FORM FRM_KINGAKU_HENKAN USING    P_TSUKACD
P_KINGAKU
CHANGING P_HENKAN.
DATA L_IDOC_AMOUNT(255) TYPE C.
*--- 汎用モジュール金額変換モジュール
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
EXPORTING
CURRENCY    = P_TSUKACD
SAP_AMOUNT  = P_KINGAKU
IMPORTING
IDOC_AMOUNT = L_IDOC_AMOUNT
EXCEPTIONS
OTHERS      = 1.
IF SY-SUBRC <> 1.
P_HENKAN = L_IDOC_AMOUNT.
ENDIF.

ENDFORM.                    " FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_SET
*&---------------------------------------------------------------------*
*       数量のマイナス設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATA_SET.
* 2002/01/15 PSD H.Tanaka ADD ↓
*--- 売上金額・売上数量・受注数量変換
IF GF_INFO-VBTYP = CNS_N OR
GF_INFO-VBTYP = CNS_O.
* 2002/01/24 PSD H.Tanaka MOD ↓
*    GF_WRITE-NETWRA = GF_WRITE-NETWRA * -1. " 売上金額
GF_INFO-NETWRA = GF_INFO-NETWRA * -1. " 売上金額
* 2002/01/21 PSD H.Tanaka MOD ↓
*    GF_WRITE-WAVWR  = GF_WRITE-WAVWR  * -1.
GF_WRITE-FKIMG  = GF_WRITE-FKIMG  * -1. " 売上数量
GF_WRITE-KWMENG = GF_WRITE-KWMENG * -1. " 受注数量
ENDIF.
* 2002/01/15 PSD H.Tanaka ADD ↑

ENDFORM.                    " FRM_DATA_SET
*---APPEND START PSD T.SAITOH 2002/05/01 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT_forwarding
*&---------------------------------------------------------------------*
*       出荷指示備考取得処理
*----------------------------------------------------------------------*
FORM FRM_READ_TEXT_FORWARDING.
DATA: LT_TLINE    TYPE TABLE OF TLINE,
LF_TLINE    TYPE TLINE,
L_VBELN     LIKE THEAD-TDNAME.
* Modified 2003.04.07 >>>
*  CONCATENATE GF_VBAP-AUBEL
*              GF_VBAP-AUPOS
*              INTO L_VBELN.
*
SELECT SINGLE VGBEL VGPOS
FROM VBRP
INTO (L_VBELN+0(10),L_VBELN+10(6) )
WHERE VBELN EQ GF_INFO-VBELN
AND  POSNR EQ GF_INFO-POSNR
.
* Modified 2003.04.07 <<<
*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID        = '9001'
LANGUAGE  = 'J'
NAME      = L_VBELN
OBJECT    = 'VBBP'
TABLES
LINES     = LT_TLINE
EXCEPTIONS
NOT_FOUND = 4
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
REFERENCE_CHECK = 5
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
OTHERS    = 8.
CASE SY-SUBRC.
WHEN 0.
READ TABLE LT_TLINE INTO LF_TLINE INDEX 1.
GF_WRITE-ETCA = LF_TLINE-TDLINE.
WHEN 8.
*---APPEND START NDSC A.MASUDA 2004/04/07---------------------------*
CONCATENATE GF_VBAP-AUBEL
GF_VBAP-AUPOS
INTO L_VBELN.
*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID        = '9001'
LANGUAGE  = 'J'
NAME      = L_VBELN
OBJECT    = 'VBBP'
TABLES
LINES     = LT_TLINE
EXCEPTIONS
NOT_FOUND = 4
REFERENCE_CHECK = 5
OTHERS    = 8.
CASE SY-SUBRC.
WHEN 0.
READ TABLE LT_TLINE INTO LF_TLINE INDEX 1.
GF_WRITE-ETCA = LF_TLINE-TDLINE.
WHEN 8.
MESSAGE E001(Z1) WITH TEXT-016
SY-SUBRC.
ENDCASE.
*---APPEND END   NDSC A.MASUDA 2004/04/07---------------------------*
*---DELETE START NDSC A.MASUDA 2004/04/07---------------------------*
*      MESSAGE E001(Z1) WITH TEXT-016
*                            SY-SUBRC.
*---DELETE END   NDSC A.MASUDA 2004/04/07---------------------------*
ENDCASE.

ENDFORM.                    " FRM_READ_TEXT_forwarding
*---APPEND END   PSD T.SAITOH 2002/05/01 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_KONV
*&---------------------------------------------------------------------*
*       条件レート・価格条件単位取得
*----------------------------------------------------------------------*
*      -->I_KNUMV  伝票条件番号
*      -->I_POSNR  請求伝票明細
*      <--O_KBETR  条件レート
*      <--O_KPEIN  価格条件単位
*      <--O_WAERS  通貨コード
*----------------------------------------------------------------------*
FORM FRM_GET_KONV USING    I_KNUMV
I_POSNR
CHANGING O_KBETR
O_KPEIN
O_WAERS.
*insert{
*構造の宣言：条件カウンタZAEHKも取得する
DATA:BEGIN OF LO_WA_TEMP,
ZAEHK LIKE KONV-ZAEHK,
*insert{
*ステップ番号STUNRも取得する
STUNR LIKE KONV-STUNR,
*}insert2009/09/15 T.HAYASHI
KBETR LIKE KONV-KBETR,
WAERS LIKE KONV-WAERS,
KPEIN LIKE KONV-KPEIN,
END OF LO_WA_TEMP.
*一時テーブルの宣言：条件カウンタZAEHKが異なる全てのレコードを格納する
DATA LO_TA_TEMP LIKE STANDARD TABLE OF LO_WA_TEMP.
*}insert2009/09/03 T.HAYASHI

*modify{
*条件カウンタZAEHKも取得

*modify{
*ステップ番号STUNRも取得
SELECT ZAEHK STUNR KBETR WAERS KPEIN
*SELECT ZAEHK KBETR WAERS KPEIN
*}modify2009/09/15 T.HAYASHI
INTO TABLE LO_TA_TEMP
*  SELECT KBETR WAERS KPEIN
*    INTO (O_KBETR, O_WAERS, O_KPEIN)
*}modify2009/09/03 T.HAYASHI
FROM KONV
*delete{
*         UP TO 1 ROWS
*}delete2009/09/03 T.HAYASHI
WHERE KNUMV = I_KNUMV
AND KPOSN = I_POSNR
*modify{
AND ( KSCHL = 'ZPR0'
OR KSCHL = 'ZPR1'
OR KSCHL = 'ZPR2' ).
*     AND KSCHL = 'ZPR0'.
*}modify2009/09/09 T.HAYASHI

*insert{
CLEAR LO_WA_TEMP.
*一時テーブルを条件カウンタZAEHK降順、ステップ番号STUNR降順でソート
*modify{
*SORT LO_TA_TEMP BY ZAEHK DESCENDING STUNR DESCENDING.
SORT LO_TA_TEMP BY STUNR DESCENDING ZAEHK DESCENDING.
*}modify2009/11/17 C.ONUKI

*ソートされた一時テーブルの先頭行を読込
READ TABLE LO_TA_TEMP INTO LO_WA_TEMP INDEX 1.

*読込んだ行のコンポーネントKBETR, KPEIN, WAERSをCHANGING変数にセット
O_KBETR = LO_WA_TEMP-KBETR.
O_KPEIN = LO_WA_TEMP-KPEIN.
O_WAERS = LO_WA_TEMP-WAERS.
*}insert2009/09/03 T.HAYASHI
ENDFORM.                    " FRM_GET_KONV
