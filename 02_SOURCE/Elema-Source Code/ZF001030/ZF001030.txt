*-------------------------------------------------------------------
* Report  ZF001030
*-------------------------------------------------------------------
* [プログラム名]
*   ZF001030  セグメント・顧客別　月例報告書
* [処理概要]
*　　　予算データをセグメント別・顧客別にレポートを作成する
* [改定履歴]
*　YYYY/MM/DD    Programar    Description
*  2004/02/12    T.KIHARA     新規開発
*  2004/03/02    T.KIHARA     抽出条件に営業Gr追加
*  2004/04/13    T.KIHATA     金額の少数点以下四捨五入
*  2004/07/07    T.KIHARA     月別合計行追加
*　2004/07/07    T.KIHARA     印刷書式の設定
*  2004/12/01    R.Hata       見直し予算対応
*  2007/10/01    R.Hata       予算バージョン選択対応
*  2009/10/20    K.KAJISA     「使用不可」データを対象外化
*  2012/08/15    ISID         ES-UP
*  2014/08/29    ISID18       コードページを"UTF-8"に修正
*  2015/02/03    ISID11       コードページ処理の再修正
*-------------------------------------------------------------------
REPORT ZF001030
LINE-SIZE 120
LINE-COUNT 70
NO STANDARD PAGE HEADING.

* 構造宣言
TYPES: BEGIN OF TYP_ZF001010,
VRSIO       TYPE   S901-VRSIO,                 "バージョン
SPMON       TYPE   S901-SPMON,                 "分析期間-月
VKBUR       TYPE   TVBUR-VKBUR,                "営業所
VKGRP       TYPE   TVKGR-VKGRP,                "営業Gr
PKUNAG      TYPE   KNA1-KUNNR,                 "得意先コード
PRODH       TYPE   T179-PRODH,                 "品目階層
NETWR       TYPE   S901-NETWR,                 "売上
ZZARAIGAKU  TYPE   S901-ZZARAIGAKU,            "粗利金額
VTEXT       TYPE   T179T-VTEXT,                "品目階層テキスト
NAME1       TYPE   KNA1-NAME1,                 "得意先名
BEZEI       TYPE   TVGRT-BEZEI,                "担当者
ZSPRIO      TYPE   ZSB003-ZSPRIO,              "主要順位
END OF TYP_ZF001010.

* DATA宣言（処理用、帳票出力用）
DATA: GT_EXEC  TYPE TABLE OF TYP_ZF001010 ,      "処理用
GF_EXEC  TYPE TYP_ZF001010.                "処理用構造

* 営業所構造
TYPES: BEGIN OF TYP_TVBUR,
VKBUR TYPE TVBUR-VKBUR,                        "営業所
BEZEI TYPE TVKBT-BEZEI,                        "営業所名
END OF TYP_TVBUR.
* DATA宣言（処理用、帳票出力用）
DATA: GT_TVBUR TYPE TABLE OF TYP_TVBUR,
GF_TVBUR TYPE TYP_TVBUR.

* 営業Gr構造
TYPES: BEGIN OF TYP_TVKGR,
VKGRP TYPE TVKGR-VKGRP,                        "営業Gr
END OF TYP_TVKGR.
* DATA宣言（処理用、帳票出力用）
DATA: GT_TVKGR TYPE TABLE OF TYP_TVKGR,
GF_TVKGR TYPE TYP_TVKGR.

*品目階層
TYPES: BEGIN OF TYP_T179,
PRODH TYPE T179-PRODH,                         "品目階層
END OF TYP_T179.
* DATA宣言（処理用、帳票出力用）
DATA: GT_T179 TYPE TABLE OF TYP_T179,
GF_T179 TYPE TYP_T179.

* 予算構造
TYPES: BEGIN OF TYP_S901,
VRSIO       TYPE   S901-VRSIO,                 "バージョン
SPMON       TYPE   S901-SPMON,                 "年月
VKBUR       TYPE   S901-VKBUR,                 "営業所
VKGRP       TYPE   S901-VKGRP,                 "営業Gr
PKUNAG      TYPE   S901-PKUNAG,                "得意先コード
PRODH       TYPE   S901-PRODH,                 "品目階層
NETWR       TYPE   S901-NETWR,                 "売上
ZZARAIGAKU  TYPE   S901-ZZARAIGAKU,            "粗利
VTEXT       TYPE   T179T-VTEXT,                "品目階層テキスト
NAME1       TYPE   KNA1-NAME1,                 "得意先名
BEZEI       TYPE   TVGRT-BEZEI,                "担当者
ZSPRIO      TYPE   ZSB003-ZSPRIO,              "主要順位
END OF TYP_S901.
* DATA宣言（処理用、帳票出力用）
DATA: GF_S901 TYPE TYP_S901,
GT_S901 TYPE TABLE OF TYP_S901.

* 合計構造
TYPES: BEGIN OF TYP_SUM,
URIYOSAN         TYPE   S901-NETWR,            "売上予算
ARAYOSAN         TYPE   S901-ZZARAIGAKU,       "粗利予算
ARAJISEKI        TYPE   S901-ZZARAIGAKU,       "粗利実績
URIJISEKI        TYPE   S901-NETWR,            "売上実績
ARAYOSANKEI      TYPE   S901-ZZARAIGAKU,       "粗利予算計
URIYOSANKEI      TYPE   S901-NETWR,            "売上予算計
ARAJISEKIKEI     TYPE   S901-ZZARAIGAKU,       "粗利実績計
URIJISEKIKEI     TYPE   S901-NETWR,            "売上実績計
ALLARAYOSANKEI   TYPE   S901-ZZARAIGAKU,       "粗利予算総計
ALLURIYOSANKEI   TYPE   S901-NETWR,            "売上予算総計
ALLARAJISEKIKEI  TYPE   S901-ZZARAIGAKU,       "粗利実績総計
ALLURIJISEKIKEI  TYPE   S901-NETWR,            "売上実績総計
END OF TYP_SUM.
* DATA宣言（処理用、帳票出力用）
DATA: GF_SUM TYPE TYP_SUM,
GT_SUM TYPE TABLE OF TYP_SUM.

* 得意先マスタ構造
TYPES: BEGIN OF TYP_KNA1,
KUNNR TYPE KNA1-KUNNR,                         "得意先
NAME1 TYPE KNA1-NAME1,                         "得意先名
END OF TYP_KNA1.
* DATA宣言（処理用、帳票出力用）
DATA: GT_KNA1 TYPE TABLE OF TYP_KNA1,
GF_KNA1 TYPE TYP_KNA1.

* 日付範囲チェック用構造
TYPES: BEGIN OF TYP_DATE,
MINDATE TYPE S901-SPMON,                       "日付(最小値)
MAXDATE TYPE S901-SPMON,                       "日付(最大値)
END OF TYP_DATE.
* DATA宣言（処理用、帳票出力用）
DATA: GT_DATE TYPE TABLE OF TYP_DATE,
GF_DATE TYPE TYP_DATE.

* ダウンロード用構造
* セグメント別
TYPES : BEGIN OF TYP_SEGDL ,
* Mod ES-UP 2012/10/26 -->
*  SEG_LINE(1000) TYPE C,                         "品目階層構造
SEG_LINE TYPE STRING,                         "品目階層構造
* Mod ES-UP 2012/10/26 <--
END OF TYP_SEGDL .
* DATA宣言（処理用、帳票出力用）
DATA : GT_SEGDL TYPE TABLE OF TYP_SEGDL ,
GF_SEGDL TYPE TYP_SEGDL .

* 顧客別
TYPES : BEGIN OF TYP_CUSTDL ,
CUST_LINE(1000) TYPE C ,                       "顧客構造
END OF TYP_CUSTDL .
* DATA宣言（処理用、帳票出力用）
DATA : GT_CUSTDL TYPE TABLE OF TYP_CUSTDL ,
GF_CUSTDL TYPE TYP_CUSTDL .

* ダウンロード用変数
* Mod ES-UP 2012/10/26 -->
*DATA :SEG_LINE(1000) TYPE C,                     "品目階層構造
DATA :SEG_LINE  TYPE STRING,                     "品目階層構造
*      CUST_LINE(1000) TYPE C,                    "顧客構造
CUST_LINE TYPE STRING,                    "顧客構造
* Mod ES-UP 2012/10/26 <--
SITEN(20) TYPE C,                          "支店名
* Mod ES-UP 2012/08/15 -->
*      w_tab TYPE x VALUE '09'.
W_TAB TYPE STRING.
W_TAB = CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/15 <--
*--------------------------------------------------------------
* 選択画面
*--------------------------------------------------------------
* 表示設定
SELECTION-SCREEN BEGIN OF BLOCK BKYOSAN
*フレームのタイトル設定(『出力リスト選択』)
WITH FRAME TITLE TEXT-072.
*チェックボックス設定(セグメント別、顧客別の選択)
PARAMETERS: R_SEG RADIOBUTTON GROUP Y1.          "セグメント別
PARAMETERS: R_CUST RADIOBUTTON GROUP Y1.         "顧客別
SELECTION-SCREEN END   OF BLOCK BKYOSAN.

* 表示年月
SELECTION-SCREEN BEGIN OF BLOCK BTOK
*フレームのタイトル設定(『特性』)
WITH FRAME TITLE TEXT-071.
* 選択項目 年月(必須)
PARAMETERS S_SPMON LIKE GF_S901-SPMON DEFAULT SY-DATUM(6) OBLIGATORY.
* 選択項目 営業所(任意)
PARAMETERS S_VKBUR LIKE GF_TVBUR-VKBUR MEMORY ID BUR.
* 選択項目 営業Gr(任意)
PARAMETERS S_VKGRP LIKE GF_TVKGR-VKGRP.
* 選択項目 品目階層(任意) 複数選択
SELECT-OPTIONS:S_PRODH FOR GF_T179-PRODH VISIBLE LENGTH 4.
* 選択項目 受注先(任意) 複数選択
SELECT-OPTIONS:S_PKUNAG FOR GF_KNA1-KUNNR.
SELECTION-SCREEN END   OF BLOCK BTOK.

*フレームのタイトル設定(『ダウンロード』)
SELECTION-SCREEN BEGIN OF BLOCK DOWN WITH FRAME TITLE TEXT-037.
PARAMETERS:
*ラジオボタン(『ダウンロードしない』)
R_NOT       RADIOBUTTON GROUP R1,
*ラジオボタン(『データをダウンロードする』)
R_DOWN      RADIOBUTTON GROUP R1,
*出力ファイル名
P_FILE      LIKE RLGRAP-FILENAME.
SELECTION-SCREEN END   OF BLOCK DOWN.
*Add 2007/10/01 --->
PARAMETERS : P_VER LIKE S901-VRSIO DEFAULT '001' .
*Add 2007/10/01 <---
*---------------------------------------------------------------------
AT SELECTION-SCREEN ON BLOCK DOWN.
*---------------------------------------------------------------------
*--- 入力ファイルのチェック
IF R_DOWN = 'X'.
IF P_FILE IS INITIAL.
* ファイルパスを指定してください
MESSAGE E855(Z1).
ENDIF.
ENDIF.

*---------------------------------------------------------------------
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
*---------------------------------------------------------------------
*--- ファイル名呼び出し(保存する場所選択画面表示)
PERFORM FRM_CHK_FILE.

*--------------------------------------------------------------*
* INITIALIZATION
*--------------------------------------------------------------*
INITIALIZATION.

*---------------------------------------------------------------------
* at selection-screen
*---------------------------------------------------------------------
AT SELECTION-SCREEN.
*入力チェック(年月､営業所､営業Gr､品目階層、得意先)
IF SY-UCOMM+0(1) <> '%'.
* 営業所存在チェック
* (営業所が未入力の場合、存在チェックしない)
IF S_VKBUR NE SPACE.
PERFORM FRM_CHECK_VKBUR.
ENDIF.
* 営業Gr存在チェック
* (営業Grが未入力の場合、存在チェックしない)
IF S_VKGRP NE SPACE.
PERFORM FRM_CHECK_VKGRP.
ENDIF.
* 品目階層存在チェック
PERFORM FRM_CHECK_PRODH.
* 得意先存在チェック
PERFORM FRM_CHECK_PKUNAG.
ENDIF.

*---------------------------------------------------------------------
* TOP-OF-PAGE
*---------------------------------------------------------------------
TOP-OF-PAGE.
* 営業所名取得
SELECT SINGLE
BEZEI
FROM TVKBT
INTO CORRESPONDING FIELDS OF GF_TVBUR
WHERE VKBUR = S_VKBUR.

* ヘッダ設定
PERFORM FRM_TOP_OF_PAGE.

*---------------------------------------------------------------------
*      Form  FRM_TOP_OF_PAGE
*---------------------------------------------------------------------
*       ヘッダ設定
*---------------------------------------------------------------------
FORM FRM_TOP_OF_PAGE.
IF R_SEG = 'X'.
* 帳票タイトル『**セグメント別予・実リスト**』
*-------------------------------------------------------------------
***  印刷書式設定　2004/07/08 追加
*-------------------------------------------------------------------
CALL FUNCTION 'SET_PRINT_PARAMETERS'
EXPORTING
LAYOUT = 'X_90_120'.

*-------------------------------------------------------------------
WRITE : /50    GF_TVBUR-BEZEI(12),'月例報告',S_SPMON+4(2),'月分',
108   SY-DATUM ,                  "システム日付
/01(04)  TEXT-067,                   "年月
12(7)   S_SPMON,
/01(06)  TEXT-010,                   "営業所
12(04)  S_VKBUR,
/01(06)  TEXT-011,                   "営業Gr
12(04)  S_VKGRP,
/01(10)  TEXT-009,                   "品目階層
12(02)  S_PRODH-LOW.
IF S_PRODH-HIGH NE SPACE.                  "品目階層を範囲指定の場合
WRITE  15(02)   '〜'.
ENDIF.
WRITE: 18(02)  S_PRODH-HIGH,
/01(06)  TEXT-013,                     "得意先
12(10)  S_PKUNAG-LOW.
IF S_PKUNAG-HIGH NE SPACE.                   "得意先を範囲指定の場合
WRITE  23(02)   '〜'.
ENDIF.
WRITE: 26(10) S_PKUNAG-HIGH,
*        / space,
108(10) TEXT-031,                      "単位：千円
/01(120) SY-ULINE,                      "下線
* Mod ES-UP 2012/09/03 -->
*         /01(06)  TEXT-020,                      "大区分
/01(06)  TEXT-021,                      "大区分
* Mod ES-UP 2012/09/03 <--
07(20)  TEXT-021 CENTERED,             "大区分
* Mod ES-UP 2012/09/03 -->
*          27(06)  TEXT-015,                      "小区分
27(06)  TEXT-016,                      "小区分
* Mod ES-UP 2012/09/03 <--
33(20)  TEXT-016 CENTERED,             "小区分
80      S_SPMON(4),'年',S_SPMON+4(2),'月' CENTERED,
/01(6)   TEXT-033 CENTERED,             "コード
27(6)   TEXT-033 CENTERED,             "コード
59(18)  TEXT-017 CENTERED,             "予算
77(18) TEXT-029 CENTERED,              "実績
95(18) TEXT-030 CENTERED,              "達成率
/01(120) SY-ULINE.                      "下線
ELSE.
* 帳票タイトル『**顧客別予・実リスト**』
*-------------------------------------------------------------------
***  印刷書式設定　2004/07/08 追加
*-------------------------------------------------------------------
CALL FUNCTION 'SET_PRINT_PARAMETERS'
EXPORTING
LAYOUT = 'X_90_120'.

*-------------------------------------------------------------------
WRITE : /40      GF_TVBUR-BEZEI(12),'月例報告',S_SPMON+4(2),'月分',
100     SY-DATUM ,                  "システム日付
/01(04)  TEXT-067,                   "年月
12(7)   S_SPMON,
/01(06)  TEXT-010,                   "営業所
12(04)  S_VKBUR,
/01(06)  TEXT-011,                   "営業Gr
12(04)  S_VKGRP,
/01(10)  TEXT-009,                   "品目階層
12(02)  S_PRODH-LOW.
IF S_PRODH-HIGH NE SPACE.                  "品目階層が範囲指定の場合
WRITE  15(02)   '〜'.
ENDIF.
WRITE: 18(02)  S_PRODH-HIGH,
/01(06)  TEXT-013,                     "得意先
12(10)  S_PKUNAG-LOW.
IF S_PKUNAG-HIGH NE SPACE.                   "得意先が範囲指定の場合
WRITE  23(02)   '〜'.
ENDIF.
WRITE: 26(10) S_PKUNAG-HIGH,
/ SPACE,
100(10) TEXT-031,                     "単位：千円
/01(112) SY-ULINE,                     "下線
/01(35)  TEXT-018,                     "顧客名
38(20)  TEXT-019,                     "担当者名
60(18)  TEXT-022 CENTERED,            "当月売上
80(18)  TEXT-023 CENTERED,            "売上目標
100(10) TEXT-024,                     "目標達成率
/01(112) SY-ULINE.                     "下線
ENDIF.
ENDFORM.                    " FRM_TOP_OF_PAGE

*---------------------------------------------------------------------
* START-OF-SELECTION
*---------------------------------------------------------------------
START-OF-SELECTION.
* 日付の表示
PERFORM FRM_SELECT_MON.

* S901からデータ取得
PERFORM GET_DATA.

* ダウンロード&帳票出力
PERFORM FRM_WRITE_DETAIL.
IF R_DOWN = 'X'.  "ダウンロードする場合
PERFORM FRM_DATA_DL.
ENDIF.

*---------------------------------------------------------------------
*      CHECK_VKBUR
*---------------------------------------------------------------------
*      Form  FRM_CHECK_VKBUR
*---------------------------------------------------------------------
*       営業所存在チェック
*---------------------------------------------------------------------
FORM FRM_CHECK_VKBUR.
DATA:LT_DUMMY TYPE TABLE OF TYP_TVBUR.

SELECT VKBUR
FROM TVBUR
INTO CORRESPONDING FIELDS OF TABLE LT_DUMMY
WHERE VKBUR = S_VKBUR.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE E606(Z1) WITH TEXT-007.
ENDCASE.

ENDFORM.                    "FRM_CHECK_VKBUR

*---------------------------------------------------------------------
*      CHECK_VKGRP
*---------------------------------------------------------------------
*      Form  FRM_CHECK_VKGRP
*---------------------------------------------------------------------
*       営業Gr存在チェック
*---------------------------------------------------------------------
FORM FRM_CHECK_VKGRP.
DATA:LT_DUMMY TYPE TABLE OF TYP_TVKGR.

SELECT VKGRP
FROM TVKGR
INTO CORRESPONDING FIELDS OF TABLE LT_DUMMY
WHERE VKGRP = S_VKGRP.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE E606(Z1) WITH TEXT-008.
ENDCASE.

ENDFORM.                    "FRM_CHECK_VKGRP

*---------------------------------------------------------------------
*      CHECK_PRODH
*---------------------------------------------------------------------
*      Form  FRM_CHECK_PRODH
*---------------------------------------------------------------------
*      品目階層存在チェック
*---------------------------------------------------------------------
FORM FRM_CHECK_PRODH.
DATA:LT_DUMMY TYPE  TABLE OF TYP_T179.

SELECT PRODH
FROM T179
INTO CORRESPONDING FIELDS OF TABLE LT_DUMMY
WHERE PRODH IN S_PRODH.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE E606(Z1) WITH TEXT-096.
ENDCASE.

ENDFORM.                    "FRM_CHECK_PRODH

*---------------------------------------------------------------------
*      CHECK_PKUNAG
*---------------------------------------------------------------------
*      Form  FRM_CHECK_pkunag
*---------------------------------------------------------------------
*      得意先存在チェック
*---------------------------------------------------------------------
FORM FRM_CHECK_PKUNAG.
DATA:LT_DUMMY TYPE  TABLE OF TYP_KNA1.

SELECT KUNNR
FROM KNA1
INTO CORRESPONDING FIELDS OF TABLE LT_DUMMY
WHERE KUNNR IN S_PKUNAG.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE E606(Z1) WITH TEXT-093.
ENDCASE.

ENDFORM.                    "FRM_CHECK_PKUNAG

*---------------------------------------------------------------------
*      Form  FRM_SELECT_MON
*---------------------------------------------------------------------
*       日付を取得する
*---------------------------------------------------------------------
FORM FRM_SELECT_MON.

SELECT SPMON
FROM S901
INTO CORRESPONDING FIELDS OF GF_S901
WHERE SPMON = S_SPMON.

ENDSELECT.

ENDFORM.                    "FRM_SELECT_MON

*---------------------------------------------------------------------
*      Form  FRM_SELECT_T179T
*---------------------------------------------------------------------
*       品目階層テキストを取得する
*---------------------------------------------------------------------
*      -->P_PRODH  品目階層
*      <--P_VTEXT  品目階層テキスト
*---------------------------------------------------------------------
FORM FRM_SELECT_T179T USING    P_PRODH
CHANGING P_VTEXT.

SELECT SINGLE
VTEXT
FROM T179T
INTO (P_VTEXT)
WHERE PRODH = P_PRODH
AND SPRAS = 'J'.

ENDFORM.                    " FRM_SELECT_T179T

*---------------------------------------------------------------------
*      Form  FRM_SELECT_KNA1
*---------------------------------------------------------------------
*       得意先名を取得する
*---------------------------------------------------------------------
FORM FRM_SELECT_KNA1 USING    P_PKUNAG
CHANGING P_CUSTEXT.

SELECT SINGLE
NAME1
FROM KNA1
INTO (P_CUSTEXT)
WHERE KUNNR = P_PKUNAG
AND SPRAS = 'J'.

ENDFORM.                    " FRM_SELECT_KNA1

*---------------------------------------------------------------------
*      Form  FRM_SELECT_TVGRT
*---------------------------------------------------------------------
*       担当者名を取得する
*       テーブルTVGRTの担当者名(BEZET)を営業グループをキーに取得する
*---------------------------------------------------------------------
FORM FRM_SELECT_TVGRT USING    P_VKGRP
CHANGING P_BEZEI.

SELECT SINGLE
BEZEI
FROM TVGRT
INTO (P_BEZEI)
WHERE VKGRP = P_VKGRP
AND  SPRAS = 'J'.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
P_BEZEI = ' '.
ENDCASE.

ENDFORM.                    " FRM_SELECT_TVGRT

*---------------------------------------------------------------------
*      FORM  FRM_SELECT_ZSB003
*---------------------------------------------------------------------
*       主要順位を取得する
*---------------------------------------------------------------------
*      -->P_VKBUR   営業所
*      -->P_PKUNAG  受注先
*      -->P_SPMON   年月(但し、データの年の部分のみ使用)
*      -->主要順位が10より小さい(10以上は主要顧客ではない為)
*      <--P_ZSPRIO  主要順位
*---------------------------------------------------------------------
FORM FRM_SELECT_ZSB003 USING P_VKBUR
P_PKUNAG
P_SPMON
CHANGING P_ZSPRIO.
DATA : L_GJAHR LIKE ZSB003-GJAHR .

MOVE : P_SPMON(4) TO L_GJAHR .
IF P_SPMON+4(2) LE 3 .
SUBTRACT 1 FROM L_GJAHR .
ENDIF .

SELECT SINGLE
ZSPRIO
FROM ZSB003
INTO (P_ZSPRIO)
WHERE GJAHR  = L_GJAHR
AND  VKBUR  = P_VKBUR
AND  PKUNAG = P_PKUNAG
AND  ZSPRIO < 10.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
P_ZSPRIO = '99'. "主要順位が設定されていない得意先の場合、'99'固定
ENDCASE.

ENDFORM.                    " FRM_SELECT_ZSB003

*---------------------------------------------------------------------
*      Form  get_data
*---------------------------------------------------------------------
*       S901テーブルからデータを取得する
*       T179Tテーブルから品目階層テキストを取得する
*       KNA1テーブルから得意先名を取得する
*       TVGRTテーブルから担当者名を取得
*       ZSB003テーブルから主要順位を取得
*       取得したデータをgf_s901に取り込む
*---------------------------------------------------------------------
FORM GET_DATA.
* 全社の場合
IF ( S_VKBUR = SPACE ) AND ( S_VKGRP = SPACE ).
SELECT VRSIO
SPMON
VKBUR
VKGRP
PKUNAG
PRODH
NETWR
ZZARAIGAKU
FROM  S901
INTO CORRESPONDING FIELDS OF GF_S901
WHERE  SPMON  = S_SPMON               "月
AND    PKUNAG IN S_PKUNAG             "受注先
AND    PKUNAG NE SPACE
AND    PRODH  IN S_PRODH              "品目階層
AND    PRODH  NE SPACE.

* 品目階層テキスト取得
PERFORM FRM_SELECT_T179T USING GF_S901-PRODH
CHANGING GF_S901-VTEXT.
IF R_SEG = 'X'.
ELSE.
* 得意先名取得
PERFORM FRM_SELECT_KNA1 USING GF_S901-PKUNAG
CHANGING GF_S901-NAME1.
* 担当者名取得
PERFORM FRM_SELECT_TVGRT USING GF_S901-VKGRP
CHANGING GF_S901-BEZEI.
* 主要順位取得
PERFORM FRM_SELECT_ZSB003 USING GF_S901-VKBUR
GF_S901-PKUNAG
GF_S901-SPMON
CHANGING GF_S901-ZSPRIO.
ENDIF.

ENDSELECT.
* 営業所のみ入力されている場合
ELSEIF ( S_VKGRP = SPACE ).
SELECT VRSIO
SPMON
VKBUR
VKGRP
PKUNAG
PRODH
NETWR
ZZARAIGAKU
FROM  S901
INTO CORRESPONDING FIELDS OF GF_S901
WHERE  SPMON  = S_SPMON               "月
AND    VKBUR  = S_VKBUR               "営業所
AND    PKUNAG IN S_PKUNAG             "受注先
AND    PKUNAG NE SPACE
AND    PRODH  IN S_PRODH              "品目階層
AND    PRODH  NE SPACE.

* 品目階層テキスト取得
PERFORM FRM_SELECT_T179T USING GF_S901-PRODH
CHANGING GF_S901-VTEXT.
IF R_SEG = 'X'.
ELSE.
* 得意先名取得
PERFORM FRM_SELECT_KNA1 USING GF_S901-PKUNAG
CHANGING GF_S901-NAME1.
* 担当者名取得
PERFORM FRM_SELECT_TVGRT USING GF_S901-VKGRP
CHANGING GF_S901-BEZEI.
* 主要順位取得
PERFORM FRM_SELECT_ZSB003 USING GF_S901-VKBUR
GF_S901-PKUNAG
GF_S901-SPMON
CHANGING GF_S901-ZSPRIO.
ENDIF.

APPEND GF_S901 TO GT_EXEC.

ENDSELECT.
* 営業Grのみ入力されている場合
ELSEIF ( S_VKBUR = SPACE ).
SELECT VRSIO
SPMON
VKBUR
VKGRP
PKUNAG
PRODH
NETWR
ZZARAIGAKU
FROM  S901
INTO CORRESPONDING FIELDS OF GF_S901
WHERE  SPMON  = S_SPMON               "月
AND    VKGRP  = S_VKGRP               "営業Gr
AND    PKUNAG IN S_PKUNAG             "受注先
AND    PKUNAG NE SPACE
AND    PRODH  IN S_PRODH              "品目階層
AND    PRODH  NE SPACE.

* 品目階層テキスト取得
PERFORM FRM_SELECT_T179T USING GF_S901-PRODH
CHANGING GF_S901-VTEXT.
IF R_SEG = 'X'.
ELSE.
* 得意先名取得
PERFORM FRM_SELECT_KNA1 USING GF_S901-PKUNAG
CHANGING GF_S901-NAME1.
* 担当者名取得
PERFORM FRM_SELECT_TVGRT USING GF_S901-VKGRP
CHANGING GF_S901-BEZEI.
* 主要順位取得
PERFORM FRM_SELECT_ZSB003 USING GF_S901-VKBUR
GF_S901-PKUNAG
GF_S901-SPMON
CHANGING GF_S901-ZSPRIO.
ENDIF.

APPEND GF_S901 TO GT_EXEC.

ENDSELECT.
* 営業所・営業Grの両方が入力されている場合
ELSE.
SELECT VRSIO
SPMON
VKBUR
VKGRP
PKUNAG
PRODH
NETWR
ZZARAIGAKU
FROM  S901
INTO CORRESPONDING FIELDS OF GF_S901
WHERE  SPMON  = S_SPMON               "月
AND    VKBUR  = S_VKBUR               "営業所
AND    VKGRP  = S_VKGRP               "営業Gr
AND    PKUNAG IN S_PKUNAG             "受注先
AND    PKUNAG NE SPACE
AND    PRODH  IN S_PRODH              "品目階層
AND    PRODH  NE SPACE.

* 品目階層テキスト取得
PERFORM FRM_SELECT_T179T USING GF_S901-PRODH
CHANGING GF_S901-VTEXT.
IF R_SEG = 'X'.
ELSE.
* 得意先名取得
PERFORM FRM_SELECT_KNA1 USING GF_S901-PKUNAG
CHANGING GF_S901-NAME1.
* 担当者名取得
PERFORM FRM_SELECT_TVGRT USING GF_S901-VKGRP
CHANGING GF_S901-BEZEI.
* 主要順位取得
PERFORM FRM_SELECT_ZSB003 USING GF_S901-VKBUR
GF_S901-PKUNAG
GF_S901-SPMON
CHANGING GF_S901-ZSPRIO.
ENDIF.

APPEND GF_S901 TO GT_EXEC.

ENDSELECT.
ENDIF.
* 2009/10/21 ADD START
*-- 使用不可のデータは出力対象外
DELETE GT_EXEC
WHERE VTEXT = TEXT-001. "使用不可
* 2009/10/21 ADD END

ENDFORM.                    " get_data

*---------------------------------------------------------------------*
*      Form  FRM_WRITE_DETAIL
*---------------------------------------------------------------------*
*      明細部分帳票出力処理
*---------------------------------------------------------------------*
FORM FRM_WRITE_DETAIL.
************************************************************************
***  フォームでセグメント別を選択した場合
************************************************************************
IF R_SEG = 'X'.
* 品目階層が変わったかどうかをチェックするために使用
DATA FLGHIN(2) TYPE C.
* 品目階層グループが変わったかどうかをチェックするために使用
DATA FLGHGR(1) TYPE C.
* セグメント表示用
DATA: SSEG(1) TYPE C,
SEG(2) TYPE C,
SEGTEXT(40) TYPE C,
SEGTEXT1(40) TYPE C,
SEGTEXT2(40) TYPE C.
* セグメント分割用
DATA  SEGNUM(2) TYPE P.
* 予算を取得するため
DATA: VER(3) TYPE C.
* データ項目宣言
DATA: URIYOSAN(16) TYPE P ,                  "予算売上
URIYOSANKEI(16) TYPE P ,               "予算売上計
ALLURIYOSANKEI(16) TYPE P ,            "総予算売上計
URIJISEKI(16) TYPE P ,                 "実績売上
URIJISEKIKEI(16) TYPE P ,              "実績売上計
ALLURIJISEKIKEI(16) TYPE P ,           "総実績売上計
ARAYOSAN(16) TYPE P ,                  "予算粗利
ARAYOSANKEI(16) TYPE P ,               "予算粗利計
ALLARAYOSANKEI(16) TYPE P ,            "総予算粗利計
ARAJISEKI(16) TYPE P ,                 "予算実績
ARAJISEKIKEI(16) TYPE P ,              "予算実績計
ALLARAJISEKIKEI(16) TYPE P ,           "総予算実績計
URITASEI(16) TYPE P DECIMALS 1,        "売上達成率
ARATASEI(16) TYPE P DECIMALS 1,        "粗利達成率
URIKEITASEI(16) TYPE P DECIMALS 1,     "売上計達成率
ARAKEITASEI(16) TYPE P DECIMALS 1,     "粗利計達成率
ALLURIKEITASEI(16) TYPE P DECIMALS 1,  "総売上計達成率
ALLARAKEITASEI(16) TYPE P DECIMALS 1,  "総粗利計達成率
YOSANRITU(16) TYPE P DECIMALS 1,       "予算粗利率
JISEKIRITU(16) TYPE P DECIMALS 1,      "実績粗利率
YOSANKEIRITU(16) TYPE P DECIMALS 1,    "予算計粗利率
JISEKIKEIRITU(16) TYPE P DECIMALS 1,   "実績計粗利率
ALLYOSANKEIRITU(16) TYPE P DECIMALS 1, "総予算計粗利率
ALLJISEKIKEIRITU(16) TYPE P DECIMALS 1."総実績計粗利率

* ダウンロード用
DATA :C_URIYOSAN(16) TYPE C ,
C_URIYOSANKEI(16) TYPE C ,
C_ALLURIYOSANKEI(16) TYPE C ,
C_URIJISEKI(16) TYPE C ,
C_URIJISEKIKEI(16) TYPE C ,
C_ALLURIJISEKIKEI(16) TYPE C ,
C_ARAYOSAN(16) TYPE C ,
C_ARAYOSANKEI(16) TYPE C ,
C_ALLARAYOSANKEI(16) TYPE C ,
C_ARAJISEKI(16) TYPE C ,
C_ARAJISEKIKEI(16) TYPE C ,
C_ALLARAJISEKIKEI(16) TYPE C ,
C_URITASEI(16) TYPE C,
C_ARATASEI(16) TYPE C,
C_URIKEITASEI(16) TYPE C,
C_ARAKEITASEI(16) TYPE C,
C_ALLURIKEITASEI(16) TYPE C,
C_ALLARAKEITASEI(16) TYPE C,
C_YOSANRITU(16) TYPE C,
C_JISEKIRITU(16) TYPE C,
C_YOSANKEIRITU(16) TYPE C,
C_JISEKIKEIRITU(16) TYPE C,
C_ALLYOSANKEIRITU(16) TYPE C,
C_ALLJISEKIKEIRITU(16) TYPE C.

DATA: C_NENGETU(16) TYPE C,
C_MONTH(6) TYPE C,
C_HEAD(100) TYPE C.
* Add 2004.12.01 --->
DATA : W_VER  LIKE S901-VRSIO .
* Add 2004.12.01 <---



*----------------------------------------------------------
***　ヘッダ部作成
*----------------------------------------------------------
* 営業所名取得
SELECT SINGLE
BEZEI
FROM TVKBT
INTO CORRESPONDING FIELDS OF GF_TVBUR
WHERE VKBUR = S_VKBUR.

MOVE GF_TVBUR-BEZEI TO SITEN.

*　?月分を結合して作成
CONCATENATE
S_SPMON+4(2)
'月分'
INTO  C_MONTH.

*  '月例報告' + ?'月分'
CONCATENATE
' 月例報告'
C_MONTH
INTO C_HEAD.

*  表示年月
CONCATENATE
S_SPMON(4)
'年'
S_SPMON+4(2)
'月'
INTO C_NENGETU.

*----------------------------------------------------------
*** ヘッダ部
*----------------------------------------------------------
* 1行目(タイトル、作成日付)
CONCATENATE
SPACE
SPACE
SITEN
C_HEAD
SPACE
SPACE
SPACE
SY-DATUM
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*    APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

* 2行目(空行)
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
* Add ES-UP 2012/10/26 <--

* Mod ES-UP 2012/10/26 -->
*    APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

* 3行目('単位：千円')
CONCATENATE
SPACE
SPACE
SPACE
SPACE
SPACE
SPACE
SPACE
TEXT-031
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*    APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

* 4行目(項目名1行目)
CONCATENATE
TEXT-020                                     "大区分コード
TEXT-021                                     "大区分
TEXT-015                                     "小区分コード
TEXT-016                                     "小区分
SPACE
SPACE
C_NENGETU                                    "表示データ年月
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*    APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

* 5行目(項目名2行目)
CONCATENATE
SPACE
SPACE
SPACE
SPACE
SPACE
TEXT-017                                     "予算
TEXT-029                                     "実績
TEXT-030                                     "達成率
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*    APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

*----------------------------------------------------------
***　品目階層で昇順ソート
*----------------------------------------------------------
SORT GT_EXEC BY PRODH SPMON VKBUR PKUNAG ASCENDING
VRSIO DESCENDING.
*Mod 2007/10/01 --->
** Add 2004.12.01 --->
*    MOVE '001' TO W_VER .
*    LOOP AT GT_EXEC INTO GF_EXEC
*                    WHERE VRSIO EQ '002' .
*      MOVE '002' TO W_VER .
*      EXIT .
*    ENDLOOP .
** Add 2004.12.01 <---
MOVE P_VER TO W_VER .
*Mod 2007/10/01 <---

*----------------------------------------------------------
***　初期値
*----------------------------------------------------------
LOOP AT GT_EXEC INTO GF_EXEC.
FLGHIN = GF_EXEC-PRODH.                    "品目階層
FLGHGR = GF_EXEC-PRODH(1).                 "品目階層の1桁目
VER = GF_EXEC-VRSIO.
EXIT.
ENDLOOP.

***********************************************************
***  セグメント別 予・実リスト選択
***********************************************************
LOOP AT GT_EXEC INTO GF_EXEC.

*----------------------------------------------------------
***  品目階層が新しい値に変わった時
*    セグメントの売上、粗利、粗利率、達成率を計算
*----------------------------------------------------------
IF FLGHIN NE GF_EXEC-PRODH.

URIYOSAN = GF_SUM-URIYOSAN.
ARAYOSAN = GF_SUM-ARAYOSAN.
ARAJISEKI = GF_SUM-ARAJISEKI.
URIJISEKI = GF_SUM-URIJISEKI.

*----------------------------------------------------------
***  セグメント別予算・実績粗利率計算 (粗利率 = 粗利 / 売上)
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利 / 売上
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*--------------------------------------------------
IF ARAYOSAN = 0.
YOSANRITU = '0.0'.
ELSEIF URIYOSAN = 0.
YOSANRITU = '-100.0'.
ELSEIF ( URIYOSAN = ARAYOSAN ).
YOSANRITU = '100.0'.
ELSE.
YOSANRITU = ( ARAYOSAN / URIYOSAN ) * 100.
ENDIF.

IF ARAJISEKI = 0.
JISEKIRITU = '0.0'.
ELSEIF URIJISEKI = 0.
JISEKIRITU = '-100.0'.
ELSEIF ( URIJISEKI = ARAJISEKI ).
JISEKIRITU = '100.0'.
ELSE.
JISEKIRITU = ( ARAJISEKI / URIJISEKI ) * 100.
ENDIF.

*----------------------------------------------------------
***  セグメント別売上・粗利達成率計算 (達成率 = 実績 / 予算)
*    実績が０の場合、達成率 0％
*    予算が０の場合、達成率 -100%
*    予算と実績が同じ金額・同じ符号の場合、達成率 100％
*　　その他の場合、達成率 = 実績 / 予算
*    (但し、実績がマイナスの時は達成率もマイナス)
*----------------------------------------------------------
IF URIJISEKI = 0.
URITASEI = '0.0'.
ELSEIF URIYOSAN = 0.
URITASEI = '-100.0'.
ELSEIF ( URIYOSAN = URIJISEKI ).
URITASEI = '100.0'.
ELSE.
URITASEI = ( URIJISEKI / URIYOSAN ) * 100.
ENDIF.

IF ARAJISEKI = 0.
ARATASEI = '0.0'.
ELSEIF ARAYOSAN = 0.
ARATASEI = '-100.0'.
ELSEIF ( ARAJISEKI = ARAYOSAN ).
ARATASEI = '100.0'.
ELSE.
ARATASEI = ( ARAJISEKI / ARAYOSAN ) * 100.
ENDIF.

*----------------------------------------------------------
***  金額を千円単位に変換
*----------------------------------------------------------
URIYOSAN = ( GF_SUM-URIYOSAN / 1000 ).
ARAYOSAN = ( GF_SUM-ARAYOSAN / 1000 ).
ARAJISEKI = ( GF_SUM-ARAJISEKI / 1000 ).
URIJISEKI = ( GF_SUM-URIJISEKI / 1000 ).

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*   数値型を文字型に変換
*   値の受渡をイコールで行うとカンマが無視される
*   カンマを残すにはWRITE〜TO〜を使用する
*----------------------------------------------------------
WRITE: URIYOSAN TO C_URIYOSAN,
URIJISEKI TO C_URIJISEKI,
URITASEI TO C_URITASEI,
ARAYOSAN TO C_ARAYOSAN,
ARAJISEKI TO C_ARAJISEKI,
ARATASEI TO C_ARATASEI,
YOSANRITU TO C_YOSANRITU,
JISEKIRITU TO C_JISEKIRITU.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URIYOSAN.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URIJISEKI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URITASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARAYOSAN.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARAJISEKI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARATASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_YOSANRITU.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_JISEKIRITU.

*----------------------------------------------------------
***  セグメント別出力
*----------------------------------------------------------
*  セグメントテキストの分割
*----------------------------------------------------------
* Mod ES-UP 2012/09/03 -->
*        SEARCH SEGTEXT FOR '　'.
*        IF ( SY-SUBRC = 0 ) AND ( SY-FDPOS <> 0 ).
*          SEGNUM = SY-FDPOS + 2.
*          WRITE: SEGTEXT(SY-FDPOS) TO SEGTEXT1,
*                 SEGTEXT+SEGNUM TO SEGTEXT2.
*        ELSE.
*          WRITE: SEGTEXT TO SEGTEXT1,
*                 SEGTEXT TO SEGTEXT2.
*        ENDIF.
SPLIT SEGTEXT AT '　' INTO SEGTEXT1 SEGTEXT2.
IF SEGTEXT2 IS INITIAL.
SEGTEXT2 = SEGTEXT1.
ENDIF.
* Mod ES-UP 2012/09/03 <--
WRITE: /1(6) FLGHGR CENTERED,                      "大区分コード
7(20) SEGTEXT1 CENTERED,                   "大区分
27(06) FLGHIN CENTERED,                    "小区分コード
33(20) SEGTEXT2 CENTERED,                  "小区分
53(6) TEXT-062 CENTERED,                   "'売上'
59(18) C_URIYOSAN RIGHT-JUSTIFIED,         "売上予算
77(18) C_URIJISEKI RIGHT-JUSTIFIED,        "売上実績
95(18) C_URITASEI RIGHT-JUSTIFIED,         "売上達成率
/53(6) TEXT-063 CENTERED,                   "'粗利'
59(18) C_ARAYOSAN RIGHT-JUSTIFIED,         "粗利予算
77(18) C_ARAJISEKI RIGHT-JUSTIFIED,        "粗利実績
95(18) C_ARATASEI RIGHT-JUSTIFIED,         "粗利達成率
/53(6) TEXT-064 CENTERED,                   "'粗利率'
59(18) C_YOSANRITU RIGHT-JUSTIFIED,        "予算粗利率
77(18) C_JISEKIRITU RIGHT-JUSTIFIED,       "実績粗利率
/01(120) SY-ULINE.                          "下線

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
IF R_DOWN = 'X'.

*　明細行作成
*　1行目(売上行)
CONCATENATE
FLGHGR                                 "品目階層グループ
SEGTEXT1                               "品目階層テキスト
FLGHIN                                 "品目階層
SEGTEXT2                               "品目階層テキスト
TEXT-062                               "'売上計'
C_URIYOSAN                             "売上予算
C_URIJISEKI                            "売上実績
C_URITASEI                             "売上達成率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

*　2行目(粗利行)
CONCATENATE
SPACE                                  "空白
SPACE                                  "空白
SPACE                                  "空白
SPACE                                  "空白
TEXT-063                               "'粗利計'
C_ARAYOSAN                             "粗利予算
C_ARAJISEKI                            "粗利実績
C_ARATASEI                             "粗利達成率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--
*　3行目(粗利率行)
CONCATENATE
SPACE                                  "空白
SPACE                                  "空白
SPACE                                  "空白
SPACE                                  "空白
TEXT-064                               "粗利率
C_YOSANRITU                            "予算粗利率
C_JISEKIRITU                           "実績粗利率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--
ENDIF.

*----------------------------------------------------------
***  セグメントグループ別計算
*----------------------------------------------------------
***  予算・実績の売上計及び粗利計
*----------------------------------------------------------
GF_SUM-URIYOSANKEI = GF_SUM-URIYOSANKEI + GF_SUM-URIYOSAN.
GF_SUM-URIJISEKIKEI = GF_SUM-URIJISEKIKEI + GF_SUM-URIJISEKI.
GF_SUM-ARAYOSANKEI = GF_SUM-ARAYOSANKEI + GF_SUM-ARAYOSAN.
GF_SUM-ARAJISEKIKEI = GF_SUM-ARAJISEKIKEI + GF_SUM-ARAJISEKI.

*----------------------------------------------------------
*** 変数初期化
*----------------------------------------------------------
GF_SUM-URIYOSAN = 0.
GF_SUM-URIJISEKI = 0.
GF_SUM-ARAYOSAN = 0.
GF_SUM-ARAJISEKI = 0.
URIYOSAN = 0.
URIJISEKI = 0.
ARAYOSAN = 0.
ARAJISEKI = 0.
URITASEI = 0.
ARATASEI = 0.
YOSANRITU = 0.
JISEKIRITU = 0.
ENDIF.

*----------------------------------------------------------
***  セグメントグループが新しい値に変わった時
*    セグメントグループの売上、粗利、粗利率、達成率を計算
*----------------------------------------------------------
IF FLGHGR NE GF_EXEC-PRODH(1).

*----------------------------------------------------------
***  小数点以下四捨五入(変数の桁数宣言を用いて)
*----------------------------------------------------------
URIYOSANKEI = GF_SUM-URIYOSANKEI.
URIJISEKIKEI = GF_SUM-URIJISEKIKEI.
ARAYOSANKEI = GF_SUM-ARAYOSANKEI.
ARAJISEKIKEI = GF_SUM-ARAJISEKIKEI.

*----------------------------------------------------------
***  セグメントグループ別予算・実績粗利率計算 (粗利率 = 粗利 / 売上)
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利計 / 売上計
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
IF GF_SUM-ARAYOSANKEI = 0.
YOSANKEIRITU = '0.0'.
ELSEIF GF_SUM-URIYOSANKEI = 0.
YOSANKEIRITU = '-100.0'.
ELSEIF ( GF_SUM-ARAYOSANKEI = GF_SUM-URIYOSANKEI ).
YOSANKEIRITU = '100.0'.
ELSE.
YOSANKEIRITU = ( GF_SUM-ARAYOSANKEI / GF_SUM-URIYOSANKEI ) * 100
.
ENDIF.

IF GF_SUM-URIJISEKIKEI = 0.
JISEKIKEIRITU = '0.0'.
ELSEIF GF_SUM-ARAJISEKIKEI = 0.
JISEKIKEIRITU = '-100.0'.
ELSEIF ( GF_SUM-ARAJISEKIKEI = GF_SUM-URIJISEKIKEI ).
JISEKIKEIRITU = '100.0'.
ELSE.
JISEKIKEIRITU = ( GF_SUM-ARAJISEKIKEI / GF_SUM-URIJISEKIKEI ) *
100.
ENDIF.

*----------------------------------------------------------
***  セグメントグループ別売上・粗利達成率計算 (達成率 = 実績 / 予算)
*    実績が０の場合、達成率 0％
*    予算が０の場合達成率 -100%
*    実績と予算が同じ金額・同じ符号の場合、達成率 100％
*　　その他の場合、達成率 = 実績 / 予算
*    (但し、実績がマイナスの時は達成率もマイナス)
*----------------------------------------------------------
IF URIJISEKIKEI = 0.
URIKEITASEI = '0.0'.
ELSEIF URIYOSANKEI = 0.
URIKEITASEI = '-100.0'.
ELSEIF ( URIJISEKIKEI = URIYOSANKEI ).
URIKEITASEI = '100.0'.
ELSE.
URIKEITASEI = ( URIJISEKIKEI / URIYOSANKEI ) * 100
.
ENDIF.

IF ARAYOSANKEI = 0.
ARAKEITASEI = '0.0'.
ELSEIF ARAJISEKIKEI = 0.
ARAKEITASEI = '-100.0'.
ELSEIF ( ARAJISEKIKEI = ARAYOSANKEI ).
ARAKEITASEI = '100.0'.
ELSE.
ARAKEITASEI = ( ARAJISEKIKEI / ARAYOSANKEI ) *
100.
ENDIF.

*----------------------------------------------------------
***  金額を千円単位に変換
*----------------------------------------------------------
URIYOSANKEI = ( GF_SUM-URIYOSANKEI / 1000 ).
ARAYOSANKEI = ( GF_SUM-ARAYOSANKEI / 1000 ).
ARAJISEKIKEI = ( GF_SUM-ARAJISEKIKEI / 1000 ).
URIJISEKIKEI = ( GF_SUM-URIJISEKIKEI / 1000 ).

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*   数値型を文字型に変換
*   値の受渡をイコールで行うとカンマが無視される
*   カンマを残すにはWRITE〜TO〜を使用する
*----------------------------------------------------------
WRITE: URIYOSANKEI TO C_URIYOSANKEI,
URIJISEKIKEI TO C_URIJISEKIKEI,
URIKEITASEI TO C_URIKEITASEI,
ARAYOSANKEI TO C_ARAYOSANKEI,
ARAJISEKIKEI TO C_ARAJISEKIKEI,
ARAKEITASEI TO C_ARAKEITASEI,
YOSANKEIRITU TO C_YOSANKEIRITU,
JISEKIKEIRITU TO C_JISEKIKEIRITU.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URIYOSANKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URIJISEKIKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URIKEITASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARAYOSANKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARAJISEKIKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARAKEITASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_YOSANKEIRITU.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_JISEKIKEIRITU.

*----------------------------------------------------------
***  セグメントグループ別出力
*----------------------------------------------------------
WRITE: /53(6) TEXT-065 CENTERED,                  "'売上計'
59(18) C_URIYOSANKEI RIGHT-JUSTIFIED,      "売上予算計
77(18) C_URIJISEKIKEI RIGHT-JUSTIFIED,     "売上実績計
95(18) C_URIKEITASEI RIGHT-JUSTIFIED,      "売上計達成率
/53(6) TEXT-066 CENTERED,                  "'粗利計'
59(18) C_ARAYOSANKEI RIGHT-JUSTIFIED,      "粗利予算計
77(18) C_ARAJISEKIKEI RIGHT-JUSTIFIED,     "粗利実績計
95(18) C_ARAKEITASEI RIGHT-JUSTIFIED,      "粗利計達成率
/53(6) TEXT-064 CENTERED,                  "'粗利率'
59(18) C_YOSANKEIRITU RIGHT-JUSTIFIED,     "予算計粗利率
77(18) C_JISEKIKEIRITU RIGHT-JUSTIFIED,    "実績計粗利率
/01(120) SY-ULINE.                          "下線

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
IF R_DOWN = 'X'.

*　1行目(売上計行)
CONCATENATE
SPACE                          "空白
SPACE                          "空白
SPACE                          "空白
TEXT-065                       "'売上計'
SPACE                          "空白
C_URIYOSANKEI                  "売上予算計
C_URIJISEKIKEI                 "売上実績計
C_URIKEITASEI                  "売上計達成率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--
*　2行目(粗利計行)
CONCATENATE
SPACE                          "空白
SPACE                          "空白
SPACE                          "空白
TEXT-066                       "'粗利計'
SPACE                          "空白
C_ARAYOSANKEI                  "粗利予算計
C_ARAJISEKIKEI                 "粗利実績計
C_ARAKEITASEI                  "粗利計達成率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--
*　3行目(粗利率行)
CONCATENATE
SPACE                          "空白
SPACE                          "空白
SPACE                          "空白
TEXT-064                       "'粗利率'
SPACE                          "空白
C_YOSANKEIRITU                 "予算計粗利率
C_JISEKIKEIRITU                "実績計粗利率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--
ENDIF.

*----------------------------------------------------------
***  予算・実績の総売上計及び総粗利計を計算
*----------------------------------------------------------
GF_SUM-ALLURIYOSANKEI = GF_SUM-ALLURIYOSANKEI +
GF_SUM-URIYOSANKEI.
GF_SUM-ALLURIJISEKIKEI = GF_SUM-ALLURIJISEKIKEI +
GF_SUM-URIJISEKIKEI.
GF_SUM-ALLARAYOSANKEI = GF_SUM-ALLARAYOSANKEI +
GF_SUM-ARAYOSANKEI.
GF_SUM-ALLARAJISEKIKEI = GF_SUM-ALLARAJISEKIKEI +
GF_SUM-ARAJISEKIKEI.

*----------------------------------------------------------
*** 変数初期化
*----------------------------------------------------------
GF_SUM-URIYOSANKEI = 0.
GF_SUM-URIJISEKIKEI = 0.
GF_SUM-ARAYOSANKEI = 0.
GF_SUM-ARAJISEKIKEI = 0.
URIYOSANKEI = 0.
URIJISEKIKEI = 0.
ARAYOSANKEI = 0.
ARAJISEKIKEI = 0.
URIKEITASEI = 0.
ARAKEITASEI = 0.
YOSANKEIRITU = 0.
JISEKIKEIRITU = 0.

ENDIF.

***********************************************************
***  抽出条件の年月によって
*      テーブルS901のNETWRとZZARAIGAKUをバージョン別に変数に渡す
*    売上・粗利の実績(バージョン '000')を表示
*    売上・粗利の予算を表示
*　　  バージョン '002'が存在する場合は見直予算(バージョン '002')を表示
*　　  存在しなければ、期初予算(バージョン '001')を表示
*
*    バージョン '000' 売上・粗利実績
*    バージョン '001' 売上・粗利期初予算
*　　バージョン '002' 売上・粗利見直予算
***********************************************************
*  実績(バージョン '000')
IF GF_EXEC-VRSIO = '000'.
GF_SUM-URIJISEKI = GF_SUM-URIJISEKI + ( GF_EXEC-NETWR * 100 ).
GF_SUM-ARAJISEKI = GF_SUM-ARAJISEKI + ( GF_EXEC-ZZARAIGAKU * 100
).
ENDIF.
* Mod 2004.12.01 --->
**  同一データのバージョン'002'が存在しない場合のみバージョン'001'を取得
*      IF gf_exec-vrsio = '001'.
**　一つ前のデータのバージョンが'000'か'001'の場合
*        IF ( ver = '000' ) OR ( ver = '001' ).
*          gf_sum-uriyosan = gf_sum-uriyosan + ( gf_exec-netwr * 100 ).
*         gf_sum-arayosan = gf_sum-arayosan + ( gf_exec-zzaraigaku * 100
*                       ).
*        ENDIF.
*      ENDIF.
*
**　見直予算(バージョン '002')
*      IF gf_exec-vrsio = '002'.
*        gf_sum-uriyosan = gf_sum-uriyosan + ( gf_exec-netwr * 100 ).
*       gf_sum-arayosan = gf_sum-arayosan + ( gf_exec-zzaraigaku * 100 )
*                      .
*      ENDIF.
*

IF GF_EXEC-VRSIO = W_VER .
GF_SUM-URIYOSAN = GF_SUM-URIYOSAN + ( GF_EXEC-NETWR * 100 ).
GF_SUM-ARAYOSAN = GF_SUM-ARAYOSAN + ( GF_EXEC-ZZARAIGAKU * 100 )
.
ENDIF.


* Mod 2004.12.01 <---
*----------------------------------------------------------
***  変数に値を渡す
*    前データとセグメント及びセグメントグループが変わったかどうか
*    判断する為の変数に値を渡す
*----------------------------------------------------------
FLGHIN = GF_EXEC-PRODH.
FLGHGR = GF_EXEC-PRODH(1).
SEGTEXT = GF_EXEC-VTEXT.
VER = GF_EXEC-VRSIO.

***********************************************************
***  ループが最後になった時
***********************************************************
AT LAST.
* Add 2004/12/21 >>>
*----------------------------------------------------------
***  品目階層が新しい値に変わった時
*    セグメントの売上、粗利、粗利率、達成率を計算
*----------------------------------------------------------
URIYOSAN = GF_SUM-URIYOSAN.
ARAYOSAN = GF_SUM-ARAYOSAN.
ARAJISEKI = GF_SUM-ARAJISEKI.
URIJISEKI = GF_SUM-URIJISEKI.
* Add 2004/12/21 <<<

*----------------------------------------------------------
***  セグメント別予算・実績粗利率計算 (粗利率 = 粗利 / 売上)
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利 / 売上
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*--------------------------------------------------
IF ARAYOSAN = 0.
YOSANRITU = '0.0'.
ELSEIF URIYOSAN = 0.
YOSANRITU = '-100.0'.
ELSEIF ( URIYOSAN = ARAYOSAN ).
YOSANRITU = '100.0'.
ELSE.
YOSANRITU = ( ARAYOSAN / URIYOSAN ) * 100.
ENDIF.

IF ARAJISEKI = 0.
JISEKIRITU = '0.0'.
ELSEIF URIJISEKI = 0.
JISEKIRITU = '-100.0'.
ELSEIF ( URIJISEKI = ARAJISEKI ).
JISEKIRITU = '100.0'.
ELSE.
JISEKIRITU = ( ARAJISEKI / URIJISEKI ) * 100.
ENDIF.

*----------------------------------------------------------
***  セグメント別売上・粗利達成率計算 (達成率 = 実績 / 予算)
*    実績が０の場合、達成率 0％
*    予算が０の場合、達成率 -100%
*    予算と実績が同じ金額・同じ符号の場合、達成率 100％
*　　その他の場合、達成率 = 実績 / 予算
*    (但し、実績がマイナスの時は達成率もマイナス)
*----------------------------------------------------------
IF URIJISEKI = 0.
URITASEI = '0.0'.
ELSEIF URIYOSAN = 0.
URITASEI = '-100.0'.
ELSEIF ( URIYOSAN = URIJISEKI ).
URITASEI = '100.0'.
ELSE.
URITASEI = ( URIJISEKI / URIYOSAN ) * 100.
ENDIF.

IF ARAJISEKI = 0.
ARATASEI = '0.0'.
ELSEIF ARAYOSAN = 0.
ARATASEI = '-100.0'.
ELSEIF ( ARAJISEKI = ARAYOSAN ).
ARATASEI = '100.0'.
ELSE.
ARATASEI = ( ARAJISEKI / ARAYOSAN ) * 100.
ENDIF.

*----------------------------------------------------------
***  金額を千円単位に変換し、四捨五入(変数の桁数宣言を用いる)
*----------------------------------------------------------
URIYOSAN = GF_SUM-URIYOSAN / 1000 .
ARAYOSAN = GF_SUM-ARAYOSAN / 1000 .
ARAJISEKI = GF_SUM-ARAJISEKI / 1000 .
URIJISEKI = GF_SUM-URIJISEKI / 1000 .

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*   数値型を文字型に変換
*   値の受渡をイコールで行うとカンマが無視される
*   カンマを残すにはWRITE〜TO〜を使用する
*----------------------------------------------------------
WRITE: URIYOSAN TO C_URIYOSAN,
URIJISEKI TO C_URIJISEKI,
URITASEI TO C_URITASEI,
ARAYOSAN TO C_ARAYOSAN,
ARAJISEKI TO C_ARAJISEKI,
ARATASEI TO C_ARATASEI,
YOSANRITU TO C_YOSANRITU,
JISEKIRITU TO C_JISEKIRITU.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URIYOSAN.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URIJISEKI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URITASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARAYOSAN.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARAJISEKI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARATASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_YOSANRITU.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_JISEKIRITU.

*----------------------------------------------------------
***  セグメント別出力
*----------------------------------------------------------
WRITE: /1(6) FLGHGR CENTERED,                      "大区分コード
7(20) SEGTEXT1 CENTERED,                   "大区分
27(06) FLGHIN CENTERED,                    "小区分コード
33(20) SEGTEXT2 CENTERED,                  "小区分
53(6) TEXT-062 CENTERED,                   "'売上'
59(18) C_URIYOSAN RIGHT-JUSTIFIED,         "売上予算
77(18) C_URIJISEKI RIGHT-JUSTIFIED,        "売上実績
95(18) C_URITASEI RIGHT-JUSTIFIED,         "売上達成率
/53(6) TEXT-063 CENTERED,                   "'粗利'
59(18) C_ARAYOSAN RIGHT-JUSTIFIED,         "粗利予算
77(18) C_ARAJISEKI RIGHT-JUSTIFIED,        "粗利実績
95(18) C_ARATASEI RIGHT-JUSTIFIED,         "粗利達成率
/53(6) TEXT-064 CENTERED,                   "'粗利率'
59(18) C_YOSANRITU RIGHT-JUSTIFIED,        "予算粗利率
77(18) C_JISEKIRITU RIGHT-JUSTIFIED,       "実績粗利率
/01(120) SY-ULINE.                          "下線

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
IF R_DOWN = 'X'.

*　1行目(売上行)
CONCATENATE
FLGHGR                             "品目階層グループ
SEGTEXT1                           "品目階層テキスト
FLGHIN                             "品目階層
SEGTEXT2                           "品目階層グループ
TEXT-062                           "'売上'
C_URIYOSAN                         "売上予算
C_URIJISEKI                        "売上実績
C_URITASEI                         "売上達成率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

*　2行目(粗利行)
CONCATENATE
SPACE                              "空白
SPACE                              "空白
SPACE                              "空白
SPACE                              "空白
TEXT-063                           "'粗利'
C_ARAYOSAN                         "粗利予算
C_ARAJISEKI                        "粗利実績
C_ARATASEI                         "粗利達成率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

*　3行目(粗利率行)
CONCATENATE
SPACE                              "空白
SPACE                              "空白
SPACE                              "空白
SPACE                              "空白
TEXT-064                           "'粗利率'
C_YOSANRITU                        "予算粗利率
C_JISEKIRITU                       "実績粗利率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--
ENDIF.

*----------------------------------------------------------
***  セグメントグループ別売上・粗利の売上計及び予算計計算
*----------------------------------------------------------
GF_SUM-URIYOSANKEI = GF_SUM-URIYOSANKEI + GF_SUM-URIYOSAN.
GF_SUM-URIJISEKIKEI = GF_SUM-URIJISEKIKEI + GF_SUM-URIJISEKI.
GF_SUM-ARAYOSANKEI = GF_SUM-ARAYOSANKEI + GF_SUM-ARAYOSAN.
GF_SUM-ARAJISEKIKEI = GF_SUM-ARAJISEKIKEI + GF_SUM-ARAJISEKI.

*----------------------------------------------------------
***  小数点以下四捨五入(変数の桁数宣言を用いて)
*----------------------------------------------------------
ARAYOSANKEI = GF_SUM-ARAYOSANKEI.
URIYOSANKEI = GF_SUM-URIYOSANKEI.
ARAJISEKIKEI = GF_SUM-ARAJISEKIKEI.
URIJISEKIKEI = GF_SUM-URIJISEKIKEI.

*----------------------------------------------------------
***  セグメントグループ別予算・実績粗利率計算 (粗利率 = 粗利 / 売上)
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利計 / 売上計
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
IF GF_SUM-ARAYOSANKEI = 0.
YOSANKEIRITU = '0.0'.
ELSEIF GF_SUM-URIYOSANKEI = 0.
YOSANKEIRITU = '-100.0'.
ELSEIF ( GF_SUM-ARAYOSANKEI = GF_SUM-URIYOSANKEI ).
YOSANKEIRITU = '100.0'.
ELSE.
YOSANKEIRITU = ( GF_SUM-ARAYOSANKEI / GF_SUM-URIYOSANKEI ) * 100
.
ENDIF.

IF GF_SUM-URIJISEKIKEI = 0.
JISEKIKEIRITU = '0.0'.
ELSEIF GF_SUM-ARAJISEKIKEI = 0.
JISEKIKEIRITU = '-100.0'.
ELSEIF ( GF_SUM-ARAJISEKIKEI = GF_SUM-URIJISEKIKEI ).
JISEKIKEIRITU = '100.0'.
ELSE.
JISEKIKEIRITU = ( GF_SUM-ARAJISEKIKEI / GF_SUM-URIJISEKIKEI ) *
100.
ENDIF.

*----------------------------------------------------------
***  セグメントグループ別売上・粗利達成率計算 (達成率 = 実績 / 予算)
*    実績が０の場合、達成率 0％
*    予算が０の場合達成率 -100%
*    実績と予算が同じ金額・同じ符号の場合、達成率 100％
*　　その他の場合、達成率 = 実績 / 予算
*    (但し、実績がマイナスの時は達成率もマイナス)
*----------------------------------------------------------
IF URIJISEKIKEI = 0.
URIKEITASEI = '0.0'.
ELSEIF URIYOSANKEI = 0.
URIKEITASEI = '-100.0'.
ELSEIF ( URIJISEKIKEI = URIYOSANKEI ).
URIKEITASEI = '100.0'.
ELSE.
URIKEITASEI = ( URIJISEKIKEI / URIYOSANKEI ) * 100
.
ENDIF.

IF ARAYOSANKEI = 0.
ARAKEITASEI = '0.0'.
ELSEIF ARAJISEKIKEI = 0.
ARAKEITASEI = '-100.0'.
ELSEIF ( ARAJISEKIKEI = ARAYOSANKEI ).
ARAKEITASEI = '100.0'.
ELSE.
ARAKEITASEI = ( ARAJISEKIKEI / ARAYOSANKEI ) *
100.
ENDIF.

*----------------------------------------------------------
***  金額を千円単位に変換し、四捨五入(変数の桁数宣言を用いる)
*----------------------------------------------------------
URIYOSANKEI = GF_SUM-URIYOSANKEI / 1000 .
ARAYOSANKEI = GF_SUM-ARAYOSANKEI / 1000 .
ARAJISEKIKEI = GF_SUM-ARAJISEKIKEI / 1000 .
URIJISEKIKEI = GF_SUM-URIJISEKIKEI / 1000 .

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*   数値型を文字型に変換
*   値の受渡をイコールで行うとカンマが無視される
*   カンマを残すにはWRITE〜TO〜を使用する
*----------------------------------------------------------
WRITE: URIYOSANKEI TO C_URIYOSANKEI,
URIJISEKIKEI TO C_URIJISEKIKEI,
URIKEITASEI TO C_URIKEITASEI,
ARAYOSANKEI TO C_ARAYOSANKEI,
ARAJISEKIKEI TO C_ARAJISEKIKEI,
ARAKEITASEI TO C_ARAKEITASEI,
YOSANKEIRITU TO C_YOSANKEIRITU,
JISEKIKEIRITU TO C_JISEKIKEIRITU.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URIYOSANKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URIJISEKIKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_URIKEITASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARAYOSANKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARAJISEKIKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ARAKEITASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_YOSANKEIRITU.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_JISEKIKEIRITU.

*----------------------------------------------------------
***  セグメントグループ別出力
*----------------------------------------------------------
WRITE: /53(6) TEXT-065 CENTERED,                  "'売上計'
59(18) C_URIYOSANKEI RIGHT-JUSTIFIED,      "売上予算計
77(18) C_URIJISEKIKEI RIGHT-JUSTIFIED,     "売上実績計
95(18) C_URIKEITASEI RIGHT-JUSTIFIED,      "売上計達成率
/53(6) TEXT-066 CENTERED,                  "'粗利計'
59(18) C_ARAYOSANKEI RIGHT-JUSTIFIED,      "粗利予算計
77(18) C_ARAJISEKIKEI RIGHT-JUSTIFIED,     "粗利実績計
95(18) C_ARAKEITASEI RIGHT-JUSTIFIED,      "粗利計達成率
/53(6) TEXT-064 CENTERED,                  "'粗利率'
59(18) C_YOSANKEIRITU RIGHT-JUSTIFIED,     "予算計粗利率
77(18) C_JISEKIKEIRITU RIGHT-JUSTIFIED,    "実績計粗利率
/01(120) SY-ULINE.                          "下線

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
IF R_DOWN = 'X'.

*　１行目(売上行)
CONCATENATE
SPACE                          "空白
SPACE                          "空白
SPACE                          "空白
TEXT-065                       "'売上計'
SPACE                          "空白
C_URIYOSANKEI                  "売上予算計
C_URIJISEKIKEI                 "売上実績計
C_URIKEITASEI                  "売上計達成率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

*　2行目(粗利行)
CONCATENATE
SPACE                          "空白
SPACE                          "空白
SPACE                          "空白
TEXT-066                       "'粗利計'
SPACE                          "空白
C_ARAYOSANKEI                  "粗利予算計
C_ARAJISEKIKEI                 "粗利実績計
C_ARAKEITASEI                  "粗利計達成率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

*　3行目(粗利率行)
CONCATENATE
SPACE                          "空白
SPACE                          "空白
SPACE                          "空白
TEXT-064                       "'粗利率'
SPACE                          "空白
C_YOSANKEIRITU                 "予算計粗利率
C_JISEKIKEIRITU                "実績計粗利率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--
ENDIF.
*----------------------------------------------------------
***  売上・粗利の予算及び実績総合計計算
*----------------------------------------------------------
GF_SUM-ALLURIYOSANKEI = GF_SUM-ALLURIYOSANKEI +
GF_SUM-URIYOSANKEI.
GF_SUM-ALLURIJISEKIKEI = GF_SUM-ALLURIJISEKIKEI +
GF_SUM-URIJISEKIKEI.
GF_SUM-ALLARAYOSANKEI = GF_SUM-ALLARAYOSANKEI +
GF_SUM-ARAYOSANKEI.
GF_SUM-ALLARAJISEKIKEI = GF_SUM-ALLARAJISEKIKEI +
GF_SUM-ARAJISEKIKEI.

*----------------------------------------------------------
***  小数点以下四捨五入(変数の桁数宣言を用いて)
*----------------------------------------------------------
ALLURIYOSANKEI = GF_SUM-ALLURIYOSANKEI.
ALLURIJISEKIKEI = GF_SUM-ALLURIJISEKIKEI.
ALLARAYOSANKEI = GF_SUM-ALLARAYOSANKEI.
ALLARAJISEKIKEI = GF_SUM-ALLARAJISEKIKEI.

*----------------------------------------------------------
***  セグメントグループ別予算・実績粗利率計算 (粗利率 = 粗利 / 売上)
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利計 / 売上計
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
IF ALLARAYOSANKEI = 0.
ALLYOSANKEIRITU = '0.0'.
ELSEIF ALLURIYOSANKEI = 0.
ALLYOSANKEIRITU = '-100.0'.
ELSEIF ( ALLARAYOSANKEI = ALLURIYOSANKEI ).
ALLYOSANKEIRITU = '100.0'.
ELSE.
ALLYOSANKEIRITU = ( ALLARAYOSANKEI / ALLURIYOSANKEI ) * 100
.
ENDIF.

IF ALLURIJISEKIKEI = 0.
ALLJISEKIKEIRITU = '0.0'.
ELSEIF ALLARAJISEKIKEI = 0.
ALLJISEKIKEIRITU = '-100.0'.
ELSEIF ( ALLARAJISEKIKEI = ALLURIJISEKIKEI ).
ALLJISEKIKEIRITU = '100.0'.
ELSE.
ALLJISEKIKEIRITU = ( ALLARAJISEKIKEI / ALLURIJISEKIKEI ) *
100.
ENDIF.

*----------------------------------------------------------
***  セグメントグループ別売上・粗利達成率計算 (達成率 = 実績 / 予算)
*    実績が０の場合、達成率 0％
*    予算が０の場合達成率 -100%
*    実績と予算が同じ金額・同じ符号の場合、達成率 100％
*　　その他の場合、達成率 = 実績 / 予算
*    (但し、実績がマイナスの時は達成率もマイナス)
*----------------------------------------------------------
IF ALLURIJISEKIKEI = 0.
ALLURIKEITASEI = '0.0'.
ELSEIF ALLURIYOSANKEI = 0.
ALLURIKEITASEI = '-100.0'.
ELSEIF ( ALLURIJISEKIKEI = ALLURIYOSANKEI ).
ALLURIKEITASEI = '100.0'.
ELSE.
ALLURIKEITASEI = ( ALLURIJISEKIKEI / ALLURIYOSANKEI ) * 100
.
ENDIF.

IF ALLARAYOSANKEI = 0.
ALLARAKEITASEI = '0.0'.
ELSEIF ALLARAJISEKIKEI = 0.
ALLARAKEITASEI = '-100.0'.
ELSEIF ( ALLARAJISEKIKEI = ALLARAYOSANKEI ).
ALLARAKEITASEI = '100.0'.
ELSE.
ALLARAKEITASEI = ( ALLARAJISEKIKEI / ALLARAYOSANKEI ) *
100.
ENDIF.

*----------------------------------------------------------
***  金額を千円単位に変換し、四捨五入(変数の桁数宣言を用いる)
*----------------------------------------------------------
ALLURIYOSANKEI = GF_SUM-ALLURIYOSANKEI / 1000 .
ALLARAYOSANKEI = GF_SUM-ALLARAYOSANKEI / 1000 .
ALLARAJISEKIKEI = GF_SUM-ALLARAJISEKIKEI / 1000 .
ALLURIJISEKIKEI = GF_SUM-ALLURIJISEKIKEI / 1000 .

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*   数値型を文字型に変換
*   値の受渡をイコールで行うとカンマが無視される
*   カンマを残すにはWRITE〜TO〜を使用する
*----------------------------------------------------------
WRITE: ALLURIYOSANKEI TO C_ALLURIYOSANKEI,
ALLURIJISEKIKEI TO C_ALLURIJISEKIKEI,
ALLURIKEITASEI TO C_ALLURIKEITASEI,
ALLARAYOSANKEI TO C_ALLARAYOSANKEI,
ALLARAJISEKIKEI TO C_ALLARAJISEKIKEI,
ALLARAKEITASEI TO C_ALLARAKEITASEI,
ALLYOSANKEIRITU TO C_ALLYOSANKEIRITU,
ALLJISEKIKEIRITU TO C_ALLJISEKIKEIRITU.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ALLURIYOSANKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ALLURIJISEKIKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ALLURIKEITASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ALLARAYOSANKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ALLARAJISEKIKEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ALLARAKEITASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ALLYOSANKEIRITU.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ALLJISEKIKEIRITU.

*----------------------------------------------------------
***  品目階層グループ計出力
*----------------------------------------------------------
WRITE: /49(10) TEXT-034 CENTERED,                  "'売上総合計'
* 売上予算総合計
59(18) C_ALLURIYOSANKEI RIGHT-JUSTIFIED,
* 売上実績総合計
77(18) C_ALLURIJISEKIKEI RIGHT-JUSTIFIED,
* 総売上達成率
95(18) C_ALLURIKEITASEI RIGHT-JUSTIFIED,
/49(10) TEXT-035 CENTERED,                  "'粗利総合計'
* 粗利予算総合計
59(18) C_ALLARAYOSANKEI RIGHT-JUSTIFIED,
* 粗利実績総合計
77(18) C_ALLARAJISEKIKEI RIGHT-JUSTIFIED,
* 総粗利達成率
95(18) C_ALLARAKEITASEI RIGHT-JUSTIFIED,
/49(10) TEXT-036 CENTERED,                  "'総合粗利率'
* 予算総合計粗利率
59(18) C_ALLYOSANKEIRITU RIGHT-JUSTIFIED,
* 実績総合計粗利率
77(18) C_ALLJISEKIKEIRITU RIGHT-JUSTIFIED,
/01(120) SY-ULINE.                "下線

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
IF R_DOWN = 'X'.

*　1行目(売上計行)
CONCATENATE
SPACE                          "空白
SPACE                          "空白
SPACE                          "空白
TEXT-034                       "'売上計'
SPACE                          "空白
C_ALLURIYOSANKEI               "売上予算総合計
C_ALLURIJISEKIKEI              "売上実績総合計
C_ALLURIKEITASEI               "総売上達成率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

*　2行目(粗利計行)
CONCATENATE
SPACE                          "空白
SPACE                          "空白
SPACE                          "空白
TEXT-035                       "'粗利計'
SPACE                          "空白
C_ALLARAYOSANKEI               "粗利予算総合計
C_ALLARAJISEKIKEI              "粗利実績総合計
C_ALLARAKEITASEI               "総粗利達成率
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

*　3行目(粗利率行)
CONCATENATE
SPACE                          "空白
SPACE                          "空白
SPACE                          "空白
TEXT-036                       "'粗利率'
SPACE                          "空白
C_ALLYOSANKEIRITU              "総予算粗利率
C_ALLJISEKIKEIRITU             "総実績粗利率
SPACE
INTO  SEG_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*         APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--
ENDIF.

*----------------------------------------------------------
*** 変数初期化
*----------------------------------------------------------
GF_SUM-ALLURIYOSANKEI = 0.
GF_SUM-ALLURIJISEKIKEI = 0.
GF_SUM-ALLARAYOSANKEI = 0.
GF_SUM-ALLARAJISEKIKEI = 0.
ALLURIYOSANKEI = 0.
ALLURIJISEKIKEI = 0.
ALLARAYOSANKEI = 0.
ALLARAJISEKIKEI = 0.
ALLURIKEITASEI = 0.
ALLARAKEITASEI = 0.
ALLYOSANKEIRITU = 0.
ALLJISEKIKEIRITU = 0.

ENDAT.
ENDLOOP.
************************************************************************
***  フォームで顧客別を選択した場合
************************************************************************
ELSE.
***********************************************************
***  顧客別 予・実リスト選択
***********************************************************
*----------------------------------------------------------
***  項目定義
*----------------------------------------------------------
* 予算を取得するため
DATA : CUST(10)             TYPE C,            "得意先
CUSTNM(35)           TYPE C,            "得意先名
TANTO(20)            TYPE C,            "担当者
SPRIO(2)             TYPE N,            "主要順位
JISEKI(10)           TYPE P DECIMALS 2, "実績
YOSAN(10)            TYPE P DECIMALS 2, "予算
SHOUKEIJISEKI(10)    TYPE P,            "実績小計
SHOUKEIYOSAN(10)     TYPE P,            "予算小計
ETCJISEKI(10)        TYPE P DECIMALS 2, "その他実績
ETCYOSAN(10)         TYPE P DECIMALS 2, "その他予算
SOUKEIJISEKI(10)     TYPE P,            "実績総計
SOUKEIYOSAN(10)      TYPE P,            "実績総計
RDJISEKI(10)         TYPE P,            "単位千円用実績
RDYOSAN(10)          TYPE P,            "単位千円用予算
RDETCJISEKI(10)      TYPE P,            "単位千円用その他実績
RDETCYOSAN(10)       TYPE P,            "単位千円用その他予算
RDSHOUKEIJISEKI(10)      TYPE P,        "単位千円用小計実績
RDSHOUKEIYOSAN(10)       TYPE P,        "単位千円用小計予算
RDSOUKEIJISEKI(10)      TYPE P,         "単位千円用総計実績
RDSOUKEIYOSAN(10)       TYPE P,         "単位千円用総計予算
TASEI(10)            TYPE P,            "達成率
SHOUKEITASEI(10)     TYPE P,            "小計達成率
ETCTASEI(10)         TYPE P,            "その他達成率
SOUKEITASEI(10)      TYPE P.            "総計達成率

*　ダウンロード用
DATA: C_SHOUKEIJISEKI(10)   TYPE C,            "実績小計
C_SHOUKEIYOSAN(10)    TYPE C,            "予算小計
C_CUSTNM(35)          TYPE C,            "得意先名
C_TANTO(20)           TYPE C,            "担当者
C_RDJISEKI(10)        TYPE C,            "実績
C_RDYOSAN(10)         TYPE C,            "予算
C_TASEI(10)           TYPE C,            "達成率
C_SHOUKEITASEI(10)    TYPE C,            "小計達成率
C_RDETCJISEKI(10)     TYPE C,            "その他実績
C_RDETCYOSAN(10)      TYPE C,            "その他予算
C_ETCTASEI(10)        TYPE C,            "その他達成率
C_SOUKEIJISEKI(10)    TYPE C,            "実績総計
C_SOUKEIYOSAN(10)     TYPE C,            "予算総計
C_SOUKEITASEI(10)     TYPE C.            "総計達成率

*----------------------------------------------------------
***  レポートヘッダ部出力
*----------------------------------------------------------
IF R_DOWN = 'X'.
*----------------------------------------------------------
***　ヘッダ部作成
*----------------------------------------------------------
* 営業所名を取得し、変数sitenへ渡す
SELECT SINGLE
BEZEI
FROM TVKBT
INTO CORRESPONDING FIELDS OF GF_TVBUR
WHERE VKBUR = S_VKBUR.

MOVE GF_TVBUR-BEZEI TO SITEN.

*　抽出条件の年月の月部分と'月分'を結合して変数c_monthへ渡す
CONCATENATE
S_SPMON+4(2)
'月分'
INTO  C_MONTH.

*  変数siten + '月例報告' + 変数c_monthを結合して変数c_headへ渡す
CONCATENATE
SITEN
' 月例報告'
C_MONTH
INTO C_HEAD.

*----------------------------------------------------------
*　1行目(タイトル行)
CONCATENATE
SPACE                                      "空白
C_HEAD                                     "タイトル
SPACE                                      "空白
SPACE                                      "空白
SY-DATUM                                   "システム日付
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*      APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--.

*  2行目(空白行)
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*      APPEND SEG_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--.

*　3行目('単位：千円'表示)
CONCATENATE
SPACE                                      "空白
SPACE                                      "空白
SPACE                                      "空白
SPACE                                      "空白
TEXT-031                                   "'単位：千円'
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*      APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--.

*　4行目(項目名行)
CONCATENATE
TEXT-018                                   "'顧客名'
TEXT-019                                   "'担当者名'
TEXT-022                                   "'当月売上'
TEXT-023                                   "'売上目標'
TEXT-024                                   "'目標達成率'
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*      APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--.
ENDIF.

*----------------------------------------------------------
***  主要順位、得意先コード、営業所、品目階層の順で昇順ソート
***　バージョンで降順ソート
*----------------------------------------------------------
SORT GT_EXEC BY ZSPRIO PKUNAG VKBUR PRODH ASCENDING
VRSIO DESCENDING.
*Mod 2007/10/01 --->
** Add 2004.12.01 --->
*    MOVE '001' TO W_VER .
*    LOOP AT GT_EXEC INTO GF_EXEC
*                    WHERE VRSIO EQ '002' .
*      MOVE '002' TO W_VER .
*      EXIT .
*    ENDLOOP .
** Add 2004.12.01 <---
MOVE P_VER TO W_VER .
*Mod 2007/10/01 <---
*----------------------------------------------------------
***  変数初期化
*----------------------------------------------------------
SHOUKEIJISEKI = 0.
SHOUKEIYOSAN  = 0.
SOUKEIJISEKI  = 0.
SOUKEIYOSAN   = 0.

*----------------------------------------------------------
***  初期値取得
*----------------------------------------------------------
LOOP AT GT_EXEC INTO GF_EXEC.
IF ( GF_EXEC-ZSPRIO NE '99' ) OR ( GF_EXEC-ZSPRIO NE '00' ).
CUST = GF_EXEC-PKUNAG.
VER = GF_EXEC-VRSIO.
EXIT.
ENDIF.
ENDLOOP.

LOOP AT GT_EXEC INTO GF_EXEC.
IF CUST NE GF_EXEC-PKUNAG.
*----------------------------------------------------------
***  達成率計算処理　(達成率 = 実績 / 予算)
*    実績が０の場合、達成率 0％
*    予算が０の場合達成率 -100%
*    実績と予算が同じ金額・同じ符号の場合、達成率 100％
*　　その他の場合、達成率 = 実績 / 予算
*    (但し、実績がマイナスの時は達成率もマイナス)
*----------------------------------------------------------
IF JISEKI = 0.
TASEI = '0.0'.
ELSEIF YOSAN = 0.
TASEI = '-100.0'.
ELSEIF ( JISEKI = YOSAN ).
TASEI = '100.0'.
ELSE.
TASEI = ( JISEKI / YOSAN ) * 100.
ENDIF.

*----------------------------------------------------------
***  金額を千円単位に変換
*----------------------------------------------------------
RDJISEKI = JISEKI / 1000.
RDYOSAN = YOSAN / 1000.

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*   数値型を文字型に変換
*   値の受渡をイコールで行うとカンマが無視される
*   カンマを残すにはWRITE〜TO〜を使用する
*----------------------------------------------------------
WRITE: RDJISEKI TO C_RDJISEKI,
RDYOSAN TO C_RDYOSAN,
TASEI TO C_TASEI.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_RDJISEKI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_RDYOSAN.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_TASEI.

* 主要順位が設定されている顧客のみを表示
IF ( SPRIO NE '99' ).
WRITE: /01(35)  CUSTNM,                              "得意先名
38(20)  TANTO,                               "担当者
64(10)  C_RDJISEKI RIGHT-JUSTIFIED,          "実績
84(10)  C_RDYOSAN RIGHT-JUSTIFIED,           "予算
100(10) C_TASEI RIGHT-JUSTIFIED,'%',         "達成率
/01(112) SY-ULINE.              "下線
ENDIF.

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
* 主要順位が設定されている顧客のみを表示
IF ( SPRIO NE '99' ).
IF R_DOWN = 'X'.

*  数値型を文字型に変換
C_CUSTNM   =  CUSTNM.
C_TANTO    =  TANTO.

*　1行目(主要顧客明細データ)
CONCATENATE
C_CUSTNM                             "得意先名
C_TANTO                              "担当者
C_RDJISEKI                           "実績
C_RDYOSAN                            "予算
C_TASEI                              "達成率
'%'
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*      APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--.
ENDIF.
ENDIF.

* 実績及び予算の小計計算
SHOUKEIJISEKI = SHOUKEIJISEKI + JISEKI.
SHOUKEIYOSAN = SHOUKEIYOSAN + YOSAN.

* 変数初期化
JISEKI   =  0.
YOSAN    =  0.
RDJISEKI =  0.
RDYOSAN  =  0.
TASEI    =  0.
ENDIF.

* 主要順位が設定されている場合
IF GF_EXEC-ZSPRIO NE '99'.
***********************************************************
*      テーブルS901のNETWRとZZARAIGAKUをバージョン別に取得
*    実績(バージョン '000')を取得
*    予算を取得
*　　  バージョン '002'が存在する場合は見直予算(バージョン '002')を取得
*　　  存在しなければ、期初予算(バージョン '001')を取得
*
*    バージョン '000' 売上・粗利実績
*    バージョン '001' 売上・粗利期初予算
*　　バージョン '002' 売上・粗利見直予算
***********************************************************
*  実績(バージョン '000')
IF GF_EXEC-VRSIO = '000'.
JISEKI = JISEKI + ( GF_EXEC-NETWR * 100 ).
ENDIF.
* Mod 2004.12.01 --->
**  同一データのバージョン'002'が存在しない場合のみバージョン'001'を取得
*        IF gf_exec-vrsio = '001'.
**　一つ前のデータのバージョンが'000'か'001'の場合
*          IF ( ver = '000' ) OR ( ver = '001' ).
*            yosan = yosan + ( gf_exec-netwr * 100 ).
*          ENDIF.
*        ENDIF.
*
**　見直予算(バージョン '002')
*        IF gf_exec-vrsio = '002'.
*          yosan = yosan + ( gf_exec-netwr * 100 ).
*        ENDIF.
*

IF GF_EXEC-VRSIO = W_VER.
YOSAN = YOSAN + ( GF_EXEC-NETWR * 100 ).
ENDIF.
ENDIF.

* 主要順位が設定されていない場合
IF GF_EXEC-ZSPRIO = '99'.
*     実績(バージョン '000')
IF GF_EXEC-VRSIO = '000'.
ETCJISEKI = ETCJISEKI + ( GF_EXEC-NETWR * 100 ).
ENDIF.
*
**  同一データのバージョン'002'が存在しない場合のみバージョン'001'を取得
*        IF gf_exec-vrsio = '001'.
**　一つ前のデータのバージョンが'000'か'001'の場合
*          IF ( ver = '000' ) OR ( ver = '001' ).
*            etcyosan = etcyosan + ( gf_exec-netwr * 100 ).
*          ENDIF.
*        ENDIF.
*
**　見直予算(バージョン '002')
*        IF gf_exec-vrsio = '002'.
*          etcyosan = etcyosan + ( gf_exec-netwr * 100 ).
*        ENDIF.
*
IF GF_EXEC-VRSIO = W_VER.
ETCYOSAN = ETCYOSAN + ( GF_EXEC-NETWR * 100 ).    "20041210
*          YOSAN = YOSAN + ( GF_EXEC-NETWR * 100 ).
ENDIF.
ENDIF.


CUST = GF_EXEC-PKUNAG.
CUSTNM = GF_EXEC-NAME1.
TANTO = GF_EXEC-BEZEI.
SPRIO = GF_EXEC-ZSPRIO.
VER = GF_EXEC-VRSIO.

*----------------------------------------------------------
***  ループが最後になった時
*----------------------------------------------------------
AT LAST.
* 合計計算
SOUKEIJISEKI = ETCJISEKI + SHOUKEIJISEKI.
SOUKEIYOSAN  = ETCYOSAN + SHOUKEIYOSAN.

*----------------------------------------------------------
***  達成率計算処理　(達成率 = 実績 / 予算)
*    実績が０の場合、達成率 0％
*    予算が０の場合達成率 -100%
*    実績と予算が同じ金額・同じ符号の場合、達成率 100％
*　　その他の場合、達成率 = 実績 / 予算
*    (但し、実績がマイナスの時は達成率もマイナス)
*----------------------------------------------------------
* 小計達成率計算
IF SHOUKEIJISEKI = 0.
SHOUKEITASEI = '0.0'.
ELSEIF SHOUKEIYOSAN = 0.
SHOUKEITASEI = '-100.0'.
ELSEIF ( SHOUKEIJISEKI = SHOUKEIYOSAN ).
SHOUKEITASEI = '100.0'.
ELSE.
SHOUKEITASEI = ( SHOUKEIJISEKI / SHOUKEIYOSAN ) * 100.
ENDIF.

* その他得意先達成率計算
IF ETCJISEKI = 0.
ETCTASEI = '0.0'.
ELSEIF ETCYOSAN = 0.
ETCTASEI = '-100.0'.
ELSEIF ( ETCJISEKI = ETCYOSAN ).
ETCTASEI = '100.0'.
ELSE.
ETCTASEI = ( ETCJISEKI / ETCYOSAN ) * 100.
ENDIF.

* 合計達成率計算
IF SOUKEIJISEKI = 0.
SOUKEITASEI = '0.0'.
ELSEIF SOUKEIYOSAN = 0.
SOUKEITASEI = '-100.0'.
ELSEIF ( SOUKEIJISEKI = SOUKEIYOSAN ).
SOUKEITASEI = '100.0'.
ELSE.
SOUKEITASEI = ( SOUKEIJISEKI / SOUKEIYOSAN ) * 100.
ENDIF.

*----------------------------------------------------------
* 出力
*----------------------------------------------------------
*** 最終データの主要順序が'99'でない場合のみデータ表示
*** START
*----------------------------------------------------------
IF ( SPRIO NE '99' ).
*----------------------------------------------------------
***  達成率計算処理　(達成率 = 実績 / 予算)
*    実績が０の場合、達成率 0％
*    予算が０の場合達成率 -100%
*    実績と予算が同じ金額・同じ符号の場合、達成率 100％
*　　その他の場合、達成率 = 実績 / 予算
*    (但し、実績がマイナスの時は達成率もマイナス)
*----------------------------------------------------------
IF JISEKI = 0.
TASEI = '0.0'.
ELSEIF YOSAN = 0.
TASEI = '-100.0'.
ELSEIF ( JISEKI = YOSAN ).
TASEI = '100.0'.
ELSE.
TASEI = ( JISEKI / YOSAN ) * 100.
ENDIF.

* 小計計算
SHOUKEIJISEKI = SHOUKEIJISEKI + JISEKI.
SHOUKEIYOSAN = SHOUKEIYOSAN + YOSAN.

*----------------------------------------------------------
***  金額を千円単位に変換
*----------------------------------------------------------
RDJISEKI = JISEKI / 1000.
RDYOSAN = YOSAN / 1000.

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*   数値型を文字型に変換
*   値の受渡をイコールで行うとカンマが無視される
*   カンマを残すにはWRITE〜TO〜を使用する
*----------------------------------------------------------
WRITE: RDJISEKI TO C_RDJISEKI,
RDYOSAN TO C_RDYOSAN,
TASEI TO C_TASEI.
*                 shoukeijiseki TO c_shoukeijiseki,
*                 shoukeiyosan TO c_shoukeiyosan.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_RDJISEKI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_RDYOSAN.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_TASEI.
*          CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
*               CHANGING
*                    value = c_shoukeijiseki.
*          CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
*               CHANGING
*                    value = c_shoukeiyosan.

WRITE: /01(35)  CUSTNM,                          "得意先
38(20)  TANTO,                           "担当者
64(10)  C_RDJISEKI RIGHT-JUSTIFIED,      "実績
84(10)  C_RDYOSAN RIGHT-JUSTIFIED,       "予算
100(10) C_TASEI RIGHT-JUSTIFIED,'%',     "達成率 + '%'
/01(112) SY-ULINE.                        "下線
ENDIF.

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
* 最終データの主要順序が'99'でない場合のみデータ表示
IF ( SPRIO NE '99' ).
IF R_DOWN = 'X'.

* 数値型を文字型へ変換
*            c_shoukeijiseki  =  shoukeijiseki.
*            c_shoukeiyosan   =  shoukeiyosan.
C_CUSTNM         =  CUSTNM.
C_TANTO          =  TANTO.
*            c_rdjiseki       =  rdjiseki.
*            c_rdyosan        =  rdyosan.
*            c_tasei          =  tasei.

*　1行目(主要顧客データ)
CONCATENATE
C_CUSTNM                             "得意先名
C_TANTO                              "担当者
C_RDJISEKI                           "実績
C_RDYOSAN                            "予算
C_TASEI                              "達成率
'%'
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*      APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--.
ENDIF.
ENDIF.

* 合計計算
SOUKEIJISEKI = ETCJISEKI + SHOUKEIJISEKI.
SOUKEIYOSAN  = ETCYOSAN + SHOUKEIYOSAN.

*----------------------------------------------------------
***  達成率計算処理　(達成率 = 実績 / 予算)
*    実績が０の場合、達成率 0％
*    予算が０の場合達成率 -100%
*    実績と予算が同じ金額・同じ符号の場合、達成率 100％
*　　その他の場合、達成率 = 実績 / 予算
*    (但し、実績がマイナスの時は達成率もマイナス)
*----------------------------------------------------------
* 小計達成率計算
IF SHOUKEIJISEKI = 0.
SHOUKEITASEI = '0.0'.
ELSEIF SHOUKEIYOSAN = 0.
SHOUKEITASEI = '-100.0'.
ELSEIF ( SHOUKEIJISEKI = SHOUKEIYOSAN ).
SHOUKEITASEI = '100.0'.
ELSE.
SHOUKEITASEI = ( SHOUKEIJISEKI / SHOUKEIYOSAN ) * 100.
ENDIF.

* その他得意先達成率計算
IF ETCJISEKI = 0.
ETCTASEI = '0.0'.
ELSEIF ETCYOSAN = 0.
ETCTASEI = '-100.0'.
ELSEIF ( ETCJISEKI = ETCYOSAN ).
ETCTASEI = '100.0'.
ELSE.
ETCTASEI = ( ETCJISEKI / ETCYOSAN ) * 100.
ENDIF.

* 合計達成率計算
IF SOUKEIJISEKI = 0.
SOUKEITASEI = '0.0'.
ELSEIF SOUKEIYOSAN = 0.
SOUKEITASEI = '-100.0'.
ELSEIF ( SOUKEIJISEKI = SOUKEIYOSAN ).
SOUKEITASEI = '100.0'.
ELSE.
SOUKEITASEI = ( SOUKEIJISEKI / SOUKEIYOSAN ) * 100.
ENDIF.

*----------------------------------------------------------
***  金額を千円単位に変換
*----------------------------------------------------------
RDSHOUKEIJISEKI = SHOUKEIJISEKI / 1000.
RDSHOUKEIYOSAN = SHOUKEIYOSAN / 1000.
RDETCJISEKI = ETCJISEKI / 1000.
RDETCYOSAN = ETCYOSAN / 1000.
RDSOUKEIJISEKI = SOUKEIJISEKI / 1000.
RDSOUKEIYOSAN = SOUKEIYOSAN / 1000.

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*   数値型を文字型に変換
*   値の受渡をイコールで行うとカンマが無視される
*   カンマを残すにはWRITE〜TO〜を使用する
*----------------------------------------------------------
WRITE: RDSHOUKEIJISEKI TO C_SHOUKEIJISEKI,
RDSHOUKEIYOSAN TO C_SHOUKEIYOSAN,
SHOUKEITASEI TO C_SHOUKEITASEI,
RDETCJISEKI TO C_RDETCJISEKI,
RDETCYOSAN TO C_RDETCYOSAN,
ETCTASEI TO C_ETCTASEI,
RDSOUKEIJISEKI TO C_SOUKEIJISEKI,
RDSOUKEIYOSAN TO C_SOUKEIYOSAN,
SOUKEITASEI TO C_SOUKEITASEI.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_SHOUKEIJISEKI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_SHOUKEIYOSAN.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_SHOUKEITASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_RDETCJISEKI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_RDETCYOSAN.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_ETCTASEI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_SOUKEIJISEKI.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_SOUKEIYOSAN.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
VALUE = C_SOUKEITASEI.

*----------------------------------------------------------
*** END
*----------------------------------------------------------
WRITE: /01(35)  TEXT-038 CENTERED,               "'上位10社小計'
64(10)  C_SHOUKEIJISEKI RIGHT-JUSTIFIED,     "実績小計
84(10)  C_SHOUKEIYOSAN RIGHT-JUSTIFIED,      "予算小計
100(10) C_SHOUKEITASEI RIGHT-JUSTIFIED,'%',  "小計達成率
/01(112) SY-ULINE,                            "下線
/01(35)  TEXT-039 CENTERED,               "その他得意先計
* その他得意先実績
64(10)  C_RDETCJISEKI RIGHT-JUSTIFIED,
* その他得意先予算
84(10)  C_RDETCYOSAN RIGHT-JUSTIFIED,
* "その他得意先達成率
100(10) C_ETCTASEI RIGHT-JUSTIFIED,'%',
/01(112) SY-ULINE,                "下線
/01(35)  TEXT-040 CENTERED,       "合計
64(10)  C_SOUKEIJISEKI RIGHT-JUSTIFIED,        "実績総計
84(10)  C_SOUKEIYOSAN RIGHT-JUSTIFIED,         "予算総計
100(10) C_SOUKEITASEI RIGHT-JUSTIFIED,'%',   "総計達成率
/01(112) SY-ULINE.                "下線

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
IF R_DOWN = 'X'.

* 1行目(上記小計行)
CONCATENATE
TEXT-038                               "'上記小計'
SPACE                                  "空白
C_SHOUKEIJISEKI                        "実績小計
C_SHOUKEIYOSAN                         "予算小計
C_SHOUKEITASEI                         "小計達成率
'%'
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*      APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--.

* 2行目(その他得意先行)
CONCATENATE
TEXT-039                               "'その他得意先'
SPACE                                  "空白
C_RDETCJISEKI                          "その他得意先実績
C_RDETCYOSAN                           "その他得意先予算
C_ETCTASEI                             "その他得意先達成率
'%'
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*          APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

* 3行目(合計行)
CONCATENATE
TEXT-040                               "'合計'
SPACE                                  "空白
C_SOUKEIJISEKI                         "実績合計
C_SOUKEIYOSAN                          "予算合計
C_SOUKEITASEI                          "総計達成率
'%'
INTO  CUST_LINE
SEPARATED BY W_TAB.
* Add ES-UP 2012/10/26 -->
CLEAR: GF_SEGDL-SEG_LINE.
GF_SEGDL-SEG_LINE = CUST_LINE.
* Add ES-UP 2012/10/26 -->

* Mod ES-UP 2012/10/26 -->
*          APPEND CUST_LINE TO GT_SEGDL.
APPEND GF_SEGDL TO GT_SEGDL.
* Mod ES-UP 2012/10/26 <--

ENDIF.

ENDAT.
ENDLOOP.
ENDIF.
ENDFORM.                    " FRM_WRITE_DETAIL

***********************************************************************
***  ダウンロード処理
***********************************************************************
*---------------------------------------------------------------------*
***  Form  FRM_CHK_FILE
*    ファイル名呼び出し(保存する場所選択画面表示)
*---------------------------------------------------------------------*
FORM FRM_CHK_FILE.
* Add ES-UP 2012/08/15 -->
DATA: L_FILENAME    TYPE STRING,
L_PATH        TYPE STRING,
L_FULLPATH    TYPE STRING,
L_USER_ACTION TYPE I.

CLEAR: L_FILENAME, L_PATH, L_FULLPATH, L_USER_ACTION.
* Add ES-UP 2012/08/15 <--

* セグメント別を選択した場合
IF R_SEG = 'X'.
* Del ES-UP 2012/08/15 -->
*    CALL FUNCTION 'WS_FILENAME_GET'
*         EXPORTING
*              MASK     = '*.*,ALL Files,*.*. '
*              MODE     = 'S'
*              TITLE    = 'セグメント別月例報告'
*         IMPORTING
*              FILENAME = P_FILE
*         EXCEPTIONS
*              OTHERS   = 5.
*    IF SY-SUBRC <> 0.
*    ENDIF.
* Del ES-UP 2012/08/15 <--
* Add ES-UP 2012/08/15 -->
CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG(
EXPORTING
WINDOW_TITLE         = 'セグメント別月例報告'
*      DEFAULT_EXTENSION    = DEFAULT_EXTENSION
*      DEFAULT_FILE_NAME    = L_FULLpath
*      WITH_ENCODING        = WITH_ENCODING
*      FILE_FILTER          = FILE_FILTER
*      INITIAL_DIRECTORY    = INITIAL_DIRECTORY
*      PROMPT_ON_OVERWRITE  = 'X'
CHANGING
FILENAME             = L_FILENAME
PATH                 = L_PATH
FULLPATH             = L_FULLPATH
USER_ACTION          = L_USER_ACTION
*      FILE_ENCODING        = FILE_ENCODING
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4 ).

IF SY-SUBRC = 0 AND L_USER_ACTION = CL_GUI_FRONTEND_SERVICES=>ACTION_OK.
P_FILE = L_FULLPATH.

ENDIF.
* Add ES-UP 2012/08/15 <--
* 顧客別を選択した場合
ELSE.
* Del ES-UP 2012/08/15 -->
*    CALL FUNCTION 'WS_FILENAME_GET'
*         EXPORTING
*              MASK     = '*.*,ALL Files,*.*. '
*              MODE     = 'S'
*              TITLE    = '顧客別月例報告'
*         IMPORTING
*              FILENAME = P_FILE
*         EXCEPTIONS
*              OTHERS   = 5.
*    IF SY-SUBRC <> 0.
*    ENDIF.
* Add ES-UP 2012/08/15 -->
CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG(
EXPORTING
WINDOW_TITLE         = '顧客別月例報告'
*      DEFAULT_EXTENSION    = DEFAULT_EXTENSION
*      DEFAULT_FILE_NAME    = L_FULLpath
*      WITH_ENCODING        = WITH_ENCODING
*      FILE_FILTER          = FILE_FILTER
*      INITIAL_DIRECTORY    = INITIAL_DIRECTORY
*      PROMPT_ON_OVERWRITE  = 'X'
CHANGING
FILENAME             = L_FILENAME
PATH                 = L_PATH
FULLPATH             = L_FULLPATH
USER_ACTION          = L_USER_ACTION
*      FILE_ENCODING        = FILE_ENCODING
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4 ).

IF SY-SUBRC = 0 AND L_USER_ACTION = CL_GUI_FRONTEND_SERVICES=>ACTION_OK.
P_FILE = L_FULLPATH.

ENDIF.
* Add ES-UP 2012/08/15 <--
* Del ES-UP 2012/08/15 <--
ENDIF.
ENDFORM.                    " FRM_CHK_FILE

*---------------------------------------------------------------------*
***  Form  FRM_DATA_DL
*    ローカルサーバにファイルをダウンロード
*---------------------------------------------------------------------*
FORM FRM_DATA_DL.
* Del ES-UP 2012/08/15 -->
*  CALL FUNCTION 'WS_DOWNLOAD'
*       EXPORTING
*            FILENAME                = P_FILE
*            FILETYPE                = 'DAT'
*            MODE                    = ' '
*       TABLES
*            DATA_TAB                = GT_SEGDL
*       EXCEPTIONS
*            FILE_OPEN_ERROR         = 1
*            FILE_WRITE_ERROR        = 2
*            INVALID_FILESIZE        = 3
*            INVALID_TYPE            = 4
*            NO_BATCH                = 5
*            UNKNOWN_ERROR           = 6
*            INVALID_TABLE_WIDTH     = 7
*            GUI_REFUSE_FILETRANSFER = 8
*            CUSTOMER_ERROR          = 9
*            OTHERS                  = 10.
* Del ES-UP 2012/08/15 -->

* Add ES-UP 2012/08/15 -->
DATA: L_CODEPAGE TYPE ABAP_ENCODING,
**** START ADD 2015/02/03 ISID11 ****
L_Z_OUTPUT_CP TYPE  ZTEGZZM001-Z_OUTPUT_CP,
L_SAPCODEPAGE TYPE STRING,
**** END ADD 2015/02/03 ISID11 ****
L_FILENAME TYPE STRING.

**** START ADD 2015/02/03 ISID11 ****
CALL FUNCTION 'ZEG_ZZ_GLOBAL_PGM_CONFIG_GET'
EXPORTING
IMPPGM      = SY-REPID
IMPBUKRS    = TEXT-101
IMPORTING
EXPCODEPAGE = L_Z_OUTPUT_CP.
**** END ADD 2015/02/03 ISID11 ****

*--- シフトJISのコードページを取得
****START UPD 2014/08/29 ISID18****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( 'shift_jis' ).
**** START UPD 2015/02/03 ISID11 ****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( 'UTF-8' ).
L_SAPCODEPAGE = L_Z_OUTPUT_CP.
IF L_SAPCODEPAGE IS NOT INITIAL.

L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( L_SAPCODEPAGE ).

ENDIF.
**** END UPD 2015/02/03 ISID11 ****
****END UPD 2014/08/29 ISID18****
L_FILENAME = P_FILE.

CL_GUI_FRONTEND_SERVICES=>GUI_DOWNLOAD(
EXPORTING
*    BIN_FILESIZE              = BIN_FILESIZE
FILENAME                  = L_FILENAME
FILETYPE                  = 'DAT'
*    APPEND                    = SPACE
*    WRITE_FIELD_SEPARATOR     = SPACE
*    HEADER                    = '00'
*    TRUNC_TRAILING_BLANKS     = SPACE
*    WRITE_LF                  = 'X'
*    COL_SELECT                = SPACE
*    COL_SELECT_MASK           = SPACE
*    DAT_MODE                  = SPACE
*    CONFIRM_OVERWRITE         = SPACE
*    NO_AUTH_CHECK             = SPACE
CODEPAGE                  = L_CODEPAGE
IGNORE_CERR               = ABAP_FALSE
*    REPLACEMENT               = '#'
*    WRITE_BOM                 = SPACE
*    TRUNC_TRAILING_BLANKS_EOL = 'X'
*    WK1_N_FORMAT              = SPACE
*    WK1_N_SIZE                = SPACE
*    WK1_T_FORMAT              = SPACE
*    WK1_T_SIZE                = SPACE
*    SHOW_TRANSFER_STATUS      = 'X'
*    FIELDNAMES                = FIELDNAMES
*    WRITE_LF_AFTER_LAST_LINE  = 'X'
*  IMPORTING
*    FILELENGTH                = FILELENGTH
CHANGING
DATA_TAB                  = GT_SEGDL
EXCEPTIONS
FILE_WRITE_ERROR          = 1
NO_BATCH                  = 2
GUI_REFUSE_FILETRANSFER   = 3
INVALID_TYPE              = 4
NO_AUTHORITY              = 5
UNKNOWN_ERROR             = 6
HEADER_NOT_ALLOWED        = 7
SEPARATOR_NOT_ALLOWED     = 8
FILESIZE_NOT_ALLOWED      = 9
HEADER_TOO_LONG           = 10
DP_ERROR_CREATE           = 11
DP_ERROR_SEND             = 12
DP_ERROR_WRITE            = 13
UNKNOWN_DP_ERROR          = 14
ACCESS_DENIED             = 15
DP_OUT_OF_MEMORY          = 16
DISK_FULL                 = 17
DP_TIMEOUT                = 18
FILE_NOT_FOUND            = 19
DATAPROVIDER_EXCEPTION    = 20
CONTROL_FLUSH_ERROR       = 21
NOT_SUPPORTED_BY_GUI      = 22
ERROR_NO_GUI              = 23
OTHERS                    = 24 ).

* Add ES-UP 2012/08/15 <--
IF SY-SUBRC = 0.
MESSAGE   S400(Z1) WITH 'ダウンロードに成功しました'.
ELSE.
MESSAGE  E400(Z1) WITH 'ダウンロードできませんでした'.
ENDIF.
ENDFORM.                    " FRM_DATA_DL
