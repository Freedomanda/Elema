*&---------------------------------------------------------------------*
*&  REPORT ZN011100                                                    *
*&         検収状況一覧（売上）                                        *
*&---------------------------------------------------------------------*
*&  機能     :選択画面の条件に合致する自社/外部データを抽出し、        *
*&            検収状況の一覧をALV出力する。                            *
*&                                                                     *
*&  作成日   : 2012/01/30                                              *
*&  作成者   : H.KOMIYAMA(SOLFIS)                                      *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/03/19 K.furuya                                     *
*&  変更内容 : 外部データの削除フラグ考慮                              *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/03/21 H.KOMIYAMA                                   *
*&  変更内容 : 得意先マスタ抽出条件追加                                *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/03/30 H.YAMASHITA                                  *
*&  変更内容 : 締日制御の桁数ズレを訂正                                *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/04/06 K.KAJISA                                     *
*&  変更内容 : ALV印刷 ダウンロードでの表題文字化け対応                *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/05/24 H.YAMASHITA(SOLFIS)                          *
*&  変更内容 : 検索条件（ソート項目）追加                              *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/06/20 H.YAMASHITA(SOLFIS)                          *
*&  変更内容 : 未検収に先行入金のマイナス値を足し込みする QA96対応     *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/07/31 K.FURUYA(SOLFIS)                             *
*&  変更内容 : 検収差額追加（仕様変更）                                *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/10/03 K.FURUYA(SOLFIS)                             *
*&  変更内容 : 前月以前未検収照合の計算式修正                          *
*&---------------------------------------------------------------------*
REPORT ZN011100
NO STANDARD PAGE HEADING
LINE-SIZE   170
LINE-COUNT  58
MESSAGE-ID  YN01.

*----------------------------------------------------------------------*
*   宣言部
*----------------------------------------------------------------------*
*** 参照構造
TYPE-POOLS: SLIS.

*** 型定義
*-- 得意先情報取得用
TYPES: BEGIN OF T_KNXX,
KUNNR    TYPE KNVP-KUNNR,           " 得意先コード(受注先)
NAME1    TYPE KNA1-NAME1,           " 名称１
*** 2012/05/24 INSERT START ***
SORTL    TYPE KNA1-SORTL,           " ソート項目
*** 2012/05/24 INSERT END ***
KUNN2    TYPE KNVP-KUNN2,           " 取引先の得意先コード
ZTERM    TYPE KNVV-ZTERM,           " 支払条件キー
VKBUR    TYPE KNVV-VKBUR,           " 営業所
VKGRP    TYPE KNVV-VKGRP,           " 営業グループ
END   OF T_KNXX,
*-- 支払条件取得用
BEGIN OF T_T052,
ZTERM    TYPE T052-ZTERM,           " 支払条件キー
ZTAGG    TYPE T052-ZTAGG,           " 期限
END   OF T_T052,
*-- 自社/外部データ一括取得用
BEGIN OF T_YN1X0,
LIST1    TYPE YNLIST11,             " 得意先コード(受注先)
WAERS    TYPE WAERS,                " 通貨コード
KNETXAMT TYPE YNETXAMT,             " 税込金額
CZFBDT   TYPE ZNECZFBDT,            " 照合締日
AUTOFLG  TYPE ZNEAUTOFLG,           " 自動生成明細（部分照合）
END   OF T_YN1X0,
*-- ALV出力用
BEGIN OF T_DATA,
KUNNR    TYPE KNVV-KUNNR,           " 得意先コード
NAME1    TYPE KNA1-NAME1,           " 得意先名称
*** 2012/05/24 INSERT START ***
SORTL    TYPE KNA1-SORTL,           " ソート項目
*** 2012/05/24 INSERT END ***
VKBUR    TYPE KNVV-VKBUR,           " 営業所
VKGRP    TYPE KNVV-VKGRP,           " 営業G
KTEXT(1) TYPE C,                    " 請求書
WAERS    TYPE YN110-WAERS,          " 通貨コード
SUM01    TYPE YN110-KNETXAMT,       " 当月売上
SUM02    TYPE YN110-KNETXAMT,       " 未照合額
SUM03    TYPE YN110-KNETXAMT,       " 当月検収
SUM04    TYPE YN110-KNETXAMT,       " 入金予定
SUM05    TYPE YN110-KNETXAMT,       " 未検収
SUM06    TYPE YN110-KNETXAMT,       " 先行入金
SUM07    TYPE YN110-KNETXAMT,       " 前月以前未検収
SUM08    TYPE YN110-KNETXAMT,       " 前月以前先行入金
SUM09    TYPE YN110-KNETXAMT,       " 未入力
SUM10    TYPE YN110-KNETXAMT,       " 当月売上前月照合
SUM11    TYPE YN110-KNETXAMT,       " 当月売上当月照合
SUM12    TYPE YN110-KNETXAMT,       " 前月以前未検収照合
SUM13    TYPE YN110-KNETXAMT,       " 次月売上照合
SUM14    TYPE YN110-KNETXAMT,       " 前月以前先行入金照合
SUM15    TYPE YN110-KNETXAMT,       " 当月発行請求額
SUM16    TYPE YN110-KNETXAMT,       " 要処理額→未処理額
SUM17    TYPE YN110-KNETXAMT,       " 検収差額 2012/07/31 ADD
END   OF T_DATA.

*** 構造
*-- 得意先情報取得用
DATA: W_KNXX     TYPE T_KNXX,
*-- 支払条件取得用
W_T052     TYPE T_T052,
*-- 自社/外部データ一括取得用
W_YN1X0    TYPE T_YN1X0,
*-- ALV出力用
W_DATA     TYPE T_DATA,
*-- ALV項目カタログ
W_FIELDCAT TYPE SLIS_FIELDCAT_ALV,
*-- ALV出力レイアウト
W_LAYOUT   TYPE SLIS_LAYOUT_ALV,
*-- ALVバリアント
W_VARIANT  TYPE DISVARIANT,
*-- ALVイベント
W_EVENT    TYPE LINE OF SLIS_T_EVENT,
*-- ALVプリント
W_PRINT    TYPE SLIS_PRINT_ALV,
*-- ALVヘッダ
W_HEADER   TYPE LINE OF SLIS_T_LISTHEADER,
*-- グリッド設定
W_SETTINGS TYPE LVC_S_GLAY.

*** 参照テーブル
TABLES: KNB1,
KNVV.

*** 内部テーブル
DATA: I_KNXX     TYPE SORTED   TABLE OF T_KNXX
WITH UNIQUE KEY KUNNR,
I_T052     TYPE SORTED   TABLE OF T_T052
WITH UNIQUE KEY ZTERM ZTAGG,
I_DATA     TYPE STANDARD TABLE OF T_DATA,
I_YN120_S  TYPE STANDARD TABLE OF T_YN1X0,  " 当月売上
I_YN120_C  TYPE STANDARD TABLE OF T_YN1X0,  " 当月照合
I_YN120_N  TYPE STANDARD TABLE OF T_YN1X0,  " 未検収
I_YN120_P  TYPE STANDARD TABLE OF T_YN1X0,  " 先行入金
I_YN120_NC TYPE STANDARD TABLE OF T_YN1X0,  " 未検収照合
I_YN120_PC TYPE STANDARD TABLE OF T_YN1X0,  " 先行入金照合
I_YN110_A  TYPE STANDARD TABLE OF T_YN1X0,  " 当月検収
I_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
I_EVENT    TYPE SLIS_T_EVENT,
I_HEADER   TYPE SLIS_T_LISTHEADER.

*** グローバル変数
DATA: G_ZFBDT_DAY(2) TYPE C,
G_ZFBDT_OLD    TYPE ZFBDT.

*** 定数
CONSTANTS: C_ON(1)     TYPE C          VALUE 'X',    " フラグON
C_SAVE(1)   TYPE C          VALUE 'A',    " SAVE機能ON
C_TYP1(1)   TYPE C          VALUE 'H',    " ヘッダ書式(H)
C_TYP2(1)   TYPE C          VALUE 'S',    " ヘッダ書式(S)
C_ID(4)     TYPE C          VALUE 'YN01', " READ_TEXTのID
C_OBJECT(4) TYPE C          VALUE 'KNB1', " オブジェクト名
C_PARZA     TYPE KNVP-PARZA VALUE '000',  " 取引先カウンタ
C_REPID     TYPE SY-REPID   VALUE 'ZN011100', " PG名称
C_TABNAME   TYPE SLIS_TABNAME VALUE 'W_DATA', " ALV参照構造名
*** 2012/02/22 INSERT START ***
C_LASTDAY(2) TYPE C          VALUE '31'.   " 月末日 31
*** 2012/02/22 INSERT END ***
*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
*-- データ選択
SELECTION-SCREEN BEGIN OF BLOCK BK01 WITH FRAME TITLE TEXT-S01.
*-- 会社コード
PARAMETERS: P_BUKRS    TYPE YN120-BUKRS  OBLIGATORY MEMORY ID BUK,
*-- 照合締日
P_CZFBDT   TYPE YN120-CZFBDT OBLIGATORY.
*-- 得意先コード（受注先）
SELECT-OPTIONS: S_KUNNR    FOR KNB1-KUNNR,
*-- 営業所
S_VKBUR    FOR KNVV-VKBUR,
*-- 営業グループ
S_VKGRP    FOR KNVV-VKGRP.
SELECTION-SCREEN END   OF BLOCK BK01.

*-- 処理オプション
SELECTION-SCREEN BEGIN OF BLOCK BK02 WITH FRAME TITLE TEXT-S02.
*-- レイアウト
PARAMETERS:
P_LYOUT TYPE DISVARIANT-VARIANT.
SELECTION-SCREEN END   OF BLOCK BK02.

*-- システム項目
SELECTION-SCREEN BEGIN OF BLOCK BK03 WITH FRAME TITLE TEXT-S03.
*-- 販売組織
PARAMETERS: P_VKORG TYPE KNVV-VKORG OBLIGATORY,
*-- 流通チャネル
P_VTWEG TYPE KNVV-VTWEG OBLIGATORY,
*-- 製品部門
P_SPART TYPE KNVV-SPART OBLIGATORY,
*-- 支払人取引先機能
P_PARVW TYPE KNVP-PARVW OBLIGATORY.
SELECTION-SCREEN END OF BLOCK BK03.

************************************************************************
INITIALIZATION.
************************************************************************

************************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_LYOUT.
************************************************************************
*-- ALVバリアント取得
PERFORM F_CALL_ALV_VARIANT CHANGING P_LYOUT.

************************************************************************
AT SELECTION-SCREEN.
************************************************************************
*-- チェック処理
PERFORM F_CHECK_PARAMETER.

************************************************************************
START-OF-SELECTION.
************************************************************************
*-- 初期処理
PERFORM INT_SEC.
*-- メイン処理
PERFORM MAIN_SEC.
*-- 終了処理
PERFORM END_SEC.

************************************************************************
END-OF-SELECTION.
************************************************************************

*&-------------------------------------------------------------------*
*&      Form  F_CALL_ALV_VARIANT
*&-------------------------------------------------------------------*
*       ALVレイアウト用F4ヘルプ
*--------------------------------------------------------------------*
*      <--AO_VARI    ALVレイアウト
*--------------------------------------------------------------------*
FORM F_CALL_ALV_VARIANT CHANGING VALUE(AO_VARI) TYPE ANY.

DATA:
LW_DISVARIANT TYPE DISVARIANT.

CLEAR:
LW_DISVARIANT,
AO_VARI.

LW_DISVARIANT-REPORT = SY-REPID.

CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
EXPORTING
IS_VARIANT         = LW_DISVARIANT
I_SAVE             = C_SAVE
I_DISPLAY_VIA_GRID = C_ON
IMPORTING
ES_VARIANT         = LW_DISVARIANT
EXCEPTIONS
NOT_FOUND          = 1
PROGRAM_ERROR      = 2
OTHERS             = 3.

IF SY-SUBRC = 0.
AO_VARI = LW_DISVARIANT-VARIANT.
ENDIF.

ENDFORM.                    " F_CALL_ALV_VARIANT
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_PARAMETER
*&---------------------------------------------------------------------*
*       チェック処理
*----------------------------------------------------------------------*
FORM F_CHECK_PARAMETER.

*-- 会社コードの存在チェック
PERFORM F_CHECK_P_BUKRS.

*-- 締日チェック
PERFORM F_CHECK_P_CZFBDT.

ENDFORM.                    " F_CHECK_PARAMETER
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_P_BUKRS
*&---------------------------------------------------------------------*
*       会社コードの存在チェック
*----------------------------------------------------------------------*
FORM F_CHECK_P_BUKRS.

DATA: L_BUKRS TYPE T001-BUKRS.

SELECT SINGLE BUKRS             " 会社コード
FROM T001
INTO L_BUKRS
WHERE BUKRS = P_BUKRS.         " 会社コード

IF SY-SUBRC <> 0.
*-- 対象データがありません
MESSAGE E762.
ENDIF.

ENDFORM.                    " F_CHECK_P_BUKRS
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_P_CZFBDT
*&---------------------------------------------------------------------*
*       締日チェック
*----------------------------------------------------------------------*
FORM F_CHECK_P_CZFBDT.

DATA: L_ZFBDT TYPE ZFBDT.

CLEAR: G_ZFBDT_DAY.

*-- 末日の取得
PERFORM F_CALL_LAST_DAY_OF_MONTHS USING P_CZFBDT
CHANGING L_ZFBDT.

*-- 末日の判定
IF P_CZFBDT = L_ZFBDT.
*** 2012/02/22 MOD START ***
*    G_ZFBDT_DAY = P_CZFBDT+6(2).
G_ZFBDT_DAY = C_LASTDAY.
*** 2012/02/22 MOD END ***
ELSE.
*-- 五十日の判定
IF P_CZFBDT+6(2) = 05
OR P_CZFBDT+6(2) = 10
OR P_CZFBDT+6(2) = 15
OR P_CZFBDT+6(2) = 20
OR P_CZFBDT+6(2) = 25.
*** 2012/03/30 MOD START ***
*      G_ZFBDT_DAY = P_CZFBDT+5(2).
G_ZFBDT_DAY = P_CZFBDT+6(2).
*** 2012/03/30 MOD END ***
ELSE.
*-- 入力された締日が適切ではありません
MESSAGE E913.
ENDIF.
ENDIF.

ENDFORM.                    " F_CHECK_P_CZFBDT
*&---------------------------------------------------------------------*
*&      Form  F_CALL_LAST_DAY_OF_MONTHS
*&---------------------------------------------------------------------*
*       末日の取得
*----------------------------------------------------------------------*
*      -->AI_DATE  算出基準日
*      <--AO_DATE  取得末日
*----------------------------------------------------------------------*
FORM F_CALL_LAST_DAY_OF_MONTHS USING VALUE(AI_DATE) TYPE ANY
CHANGING VALUE(AO_DATE) TYPE ANY.

CALL FUNCTION 'LAST_DAY_OF_MONTHS'
EXPORTING
DAY_IN            = AI_DATE
IMPORTING
LAST_DAY_OF_MONTH = AO_DATE
EXCEPTIONS
OTHERS            = 0.

ENDFORM.                    " F_CALL_LAST_DAY_OF_MONTHS
*&---------------------------------------------------------------------*
*&      Form  INT_SEC
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM INT_SEC.

CLEAR: W_FIELDCAT,
W_LAYOUT,
W_VARIANT,
W_EVENT,
W_PRINT,
W_SETTINGS,
W_HEADER,
G_ZFBDT_OLD.

REFRESH: I_KNXX,
I_T052,
I_DATA,
I_YN120_S,
I_YN120_C,
I_YN120_N,
I_YN120_P,
I_YN120_NC,
I_YN120_PC,
I_YN110_A,
I_FIELDCAT,
I_EVENT,
I_HEADER.

ENDFORM.                    " INT_SEC
*&---------------------------------------------------------------------*
*&      Form  MAIN_SEC
*&---------------------------------------------------------------------*
*      メイン処理
*----------------------------------------------------------------------*
FORM MAIN_SEC.

*-- 処理対象得意先コードの確定
PERFORM F_CONFIRM_CUSTOMER_PROC.

*-- データ取得処理
PERFORM F_GET_DATA_PROC.

*-- 出力データ作成処理
PERFORM F_MAKE_OUTPUT_DATA_PROC.

ENDFORM.                    " MAIN_SEC
*&---------------------------------------------------------------------*
*&      Form  F_CONFIRM_CUSTOMER_PROC
*&---------------------------------------------------------------------*
*       処理対象得意先コードの確定
*----------------------------------------------------------------------*
FORM F_CONFIRM_CUSTOMER_PROC.

*-- 得意先マスタデータ抽出
PERFORM F_SELECT_KNXX.

*-- 支払人の支払条件抽出
PERFORM F_SELECT_T052.

*-- 得意先データ絞込み
PERFORM F_REFINE_KNXX.

ENDFORM.                    " F_CONFIRM_CUSTOMER_PROC
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_KNxx
*&---------------------------------------------------------------------*
*       得意先マスタデータ抽出
*----------------------------------------------------------------------*
FORM F_SELECT_KNXX.

REFRESH: I_KNXX.

SELECT KNVP~KUNNR                         " 得意先コード
KNA1~NAME1                         " 名称１
*** 2012/05/24 INSERT START ***
KNA1~SORTL                         " ソート項目
*** 2012/05/24 INSERT END ***
KNVP~KUNN2                         " 取引先の得意先コード
KNVV~ZTERM                         " 支払条件キー
KNVV~VKBUR                         " 営業所
KNVV~VKGRP                         " 営業グループ
FROM KNVP INNER JOIN KNVV
ON KNVP~VKORG = KNVV~VKORG
AND KNVP~VTWEG = KNVV~VTWEG
AND KNVP~SPART = KNVV~SPART
AND KNVP~KUNNR = KNVV~KUNNR
INNER JOIN KNA1
ON KNVP~KUNNR = KNA1~KUNNR
INTO CORRESPONDING FIELDS OF TABLE I_KNXX
WHERE KNVP~KUNNR IN S_KUNNR              " 得意先コード
AND KNVP~VKORG  = P_VKORG              " 販売組織
AND KNVP~VTWEG  = P_VTWEG              " 流通チャネル
AND KNVP~SPART  = P_SPART              " 製品部門
AND KNVP~PARVW  = P_PARVW              " 取引先機能
AND KNVP~PARZA  = C_PARZA              " 取引カウンタ
*** 2012/02/22 ADD START ***
AND KNVV~VKBUR IN S_VKBUR              " 営業所
AND KNVV~VKGRP IN S_VKGRP.             " 営業グループ
*** 2012/02/22 ADD END   ***

ENDFORM.                    " F_SELECT_KNxx
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_T052
*&---------------------------------------------------------------------*
*       支払人の支払条件抽出
*----------------------------------------------------------------------*
FORM F_SELECT_T052.

CHECK NOT I_KNXX[] IS INITIAL.

REFRESH: I_T052.

SELECT ZTERM                              " 支払条件キー
ZTAGG                              " 期限
FROM T052
INTO CORRESPONDING FIELDS OF TABLE I_T052
FOR ALL ENTRIES IN I_KNXX
WHERE ZTERM = I_KNXX-ZTERM.              " 支払条件キー

*-- 期日を若番1つに絞り込む
DELETE ADJACENT  DUPLICATES FROM I_T052
COMPARING ZTERM.                   " 支払条件キー

ENDFORM.                    " F_SELECT_T052
*&---------------------------------------------------------------------*
*&      Form  F_REFINE_KNxx
*&---------------------------------------------------------------------*
*       処理対象得意先データ判定
*----------------------------------------------------------------------*
FORM F_REFINE_KNXX.

LOOP AT I_KNXX INTO W_KNXX.
*-- 支払条件の読込み
CLEAR: W_T052.
READ TABLE I_T052 INTO W_T052
WITH KEY ZTERM = W_KNXX-ZTERM   " 支払条件キー
BINARY SEARCH.
*-- 締日<>期日の場合、処理対象外データとして処理する
IF W_T052-ZTAGG <> G_ZFBDT_DAY.
DELETE I_KNXX.
CONTINUE.
ENDIF.
ENDLOOP.

*-- 処理対象得意先が0件の場合、メッセージを出力して終了
IF I_KNXX[] IS INITIAL.
*-- 照合締日 &1 に該当する得意先が存在しません
MESSAGE S926 WITH P_CZFBDT.
LEAVE LIST-PROCESSING.
ENDIF.

FREE: I_T052.

ENDFORM.                    " F_REFINE_KNxx
*&---------------------------------------------------------------------*
*&      Form  F_CALL_YK_ZFBDT_GET_BY_KNVV
*&---------------------------------------------------------------------*
*       前回締日の取得
*----------------------------------------------------------------------*
FORM F_CALL_YK_ZFBDT_GET_BY_KNVV.

CLEAR: W_KNXX,
G_ZFBDT_OLD.

*-- 代表得意先コード読込
READ TABLE I_KNXX INTO W_KNXX INDEX 1.

CALL FUNCTION 'YK_ZFBDT_GET_BY_KNVV'
EXPORTING
I_CORD      = W_KNXX-KUNNR  " 得意先コード(支払人)
I_VKORG     = P_VKORG  " 販売組織
I_VTWEG     = P_VTWEG  " 流通チャネル
I_SPART     = P_SPART  " 製品部門
I_DAY       = P_CZFBDT  " 照合締日
IMPORTING
E_ZFBDT_OLD = G_ZFBDT_OLD  " 前回締日
EXCEPTIONS
OTHERS      = 0.

ENDFORM.                    " F_CALL_YK_ZFBDT_GET_BY_KNVV
*&---------------------------------------------------------------------*
*&      Form  F_GET_DATA_PROC
*&---------------------------------------------------------------------*
*       データ取得処理
*----------------------------------------------------------------------*
FORM F_GET_DATA_PROC.

*-- 前回締日の取得
PERFORM F_CALL_YK_ZFBDT_GET_BY_KNVV.

*-- 自社データ一括取得
PERFORM F_SELECT_YN120.

*-- 外部データ一括取得
PERFORM F_SELECT_YN110.

ENDFORM.                    " F_GET_DATA_PROC
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_YN120
*&---------------------------------------------------------------------*
*       自社データ一括取得
*----------------------------------------------------------------------*
FORM F_SELECT_YN120.

REFRESH: I_YN120_S,
I_YN120_C,
I_YN120_N,
I_YN120_P,
I_YN120_NC,
I_YN120_PC.

*-- 当月売上
SELECT LIST1                              " 得意先コード(受注先)
WAERS                              " 通貨コード
KNETXAMT                           " 税込金額
CZFBDT                             " 照合締日
AUTOFLG                            " 自動生成明細（部分照合）
FROM YN120
INTO CORRESPONDING FIELDS OF TABLE I_YN120_S
WHERE BUKRS  = P_BUKRS                   " 会社コード
AND LIST1 IN S_KUNNR                   " 得意先コード(受注先)
AND ZFBDT  = P_CZFBDT.                 " 計上締日 = 今回締日
*-- 処理対象外得意先のデータ削除
PERFORM F_DELETE_I_YN1X0 TABLES I_YN120_S.

*-- 次月売上当月照合
SELECT LIST1                              " 得意先コード(受注先)
WAERS                              " 通貨コード
KNETXAMT                           " 税込金額
CZFBDT                             " 照合締日
AUTOFLG                            " 自動生成明細（部分照合）
FROM YN120
INTO CORRESPONDING FIELDS OF TABLE I_YN120_C
WHERE BUKRS  = P_BUKRS                   " 会社コード
AND LIST1 IN S_KUNNR                   " 得意先コード(受注先)
AND ZFBDT  > P_CZFBDT                  " 計上締日 > 今回締日
AND CZFBDT = P_CZFBDT.                 " 照合締日 = 今回締日
*-- 処理対象外得意先のデータ削除
PERFORM F_DELETE_I_YN1X0 TABLES I_YN120_C.

*-- 前月以前未検収
SELECT LIST1                              " 得意先コード(受注先)
WAERS                              " 通貨コード
KNETXAMT                           " 税込金額
CZFBDT                             " 照合締日
AUTOFLG                            " 自動生成明細（部分照合）
FROM YN120
INTO CORRESPONDING FIELDS OF TABLE I_YN120_N
WHERE BUKRS   = P_BUKRS                  " 会社コード
AND LIST1 IN S_KUNNR                   " 得意先コード(受注先)
AND ZFBDT  <= G_ZFBDT_OLD              " 計上締日 ≦ 前回締日
*** 2012/02/22 MOD START ***
*     AND CZFBDT >  P_CZFBDT                 " 照合締日 ＞ 今回締日
AND (  CZFBDT > P_CZFBDT               " 照合締日　＞ 今回締日
OR CZFBDT = '00000000' )           " 照合締日初期値
*** 2012/02/22 MOD END ***
AND (  AUTOFLG = SPACE                 " 部分照合：なし
OR AUTOFLG = 1 ).                  " 部分照合：元自社
*-- 処理対象外得意先のデータ削除
PERFORM F_DELETE_I_YN1X0 TABLES I_YN120_N.

*-- 前月以前未検収照合
SELECT LIST1                              " 得意先コード(受注先)
WAERS                              " 通貨コード
KNETXAMT                           " 税込金額
CZFBDT                             " 照合締日
AUTOFLG                            " 自動生成明細（部分照合）
FROM YN120
INTO CORRESPONDING FIELDS OF TABLE I_YN120_NC
WHERE BUKRS   = P_BUKRS                  " 会社コード
AND LIST1 IN S_KUNNR                   " 得意先コード(受注先)
AND ZFBDT  <= G_ZFBDT_OLD              " 計上締日 ≦ 前回締日
AND CZFBDT  = P_CZFBDT                 " 照合締日 ＝ 今回締日
AND (  AUTOFLG = SPACE                 " 部分照合：なし
OR AUTOFLG = 1 ).                  " 部分照合：元自社
*-- 処理対象外得意先のデータ削除
PERFORM F_DELETE_I_YN1X0 TABLES I_YN120_NC.

*-- 前月以前先行入金
SELECT LIST1                              " 得意先コード(受注先)
WAERS                              " 通貨コード
KNETXAMT                           " 税込金額
CZFBDT                             " 照合締日
AUTOFLG                            " 自動生成明細（部分照合）
FROM YN120
INTO CORRESPONDING FIELDS OF TABLE I_YN120_P
WHERE BUKRS   = P_BUKRS                  " 会社コード
AND LIST1 IN S_KUNNR                   " 得意先コード(受注先)
AND ZFBDT  <= G_ZFBDT_OLD              " 計上締日 ≦ 前回締日
*** 2012/06/14 MOD START ***
*     AND CZFBDT  > P_CZFBDT                 " 照合締日 ＞ 今回締日
AND ( CZFBDT  > P_CZFBDT                " 照合締日 ＞ 今回締日
OR CZFBDT = '00000000' )            " 照合締日初期値
*** 2012/06/14 MOD END ***
AND AUTOFLG = 2.                       " 部分照合：元外部
*-- 処理対象外得意先のデータ削除
PERFORM F_DELETE_I_YN1X0 TABLES I_YN120_P.

*-- 前月以前先行入金照合
SELECT LIST1                              " 得意先コード(受注先)
WAERS                              " 通貨コード
KNETXAMT                           " 税込金額
CZFBDT                             " 照合締日
AUTOFLG                            " 自動生成明細（部分照合）
FROM YN120
INTO CORRESPONDING FIELDS OF TABLE I_YN120_PC
WHERE BUKRS   = P_BUKRS                  " 会社コード
AND LIST1 IN S_KUNNR                   " 得意先コード(受注先)
AND ZFBDT  <= G_ZFBDT_OLD              " 計上締日 ≦ 前回締日
AND CZFBDT  = P_CZFBDT                 " 照合締日 ＝ 今回締日
AND AUTOFLG = 2.                       " 部分照合：元外部
*-- 処理対象外得意先のデータ削除
PERFORM F_DELETE_I_YN1X0 TABLES I_YN120_PC.

ENDFORM.                    " F_SELECT_YN120
*&---------------------------------------------------------------------*
*&      Form  F_DELETE_I_YN1x0
*&---------------------------------------------------------------------*
*       処理対象外得意先のデータ削除
*----------------------------------------------------------------------*
*      -->AI_YN1x0  削除テーブル
*----------------------------------------------------------------------*
FORM F_DELETE_I_YN1X0 TABLES AI_YN1X0 STRUCTURE W_YN1X0.

SORT AI_YN1X0.

LOOP AT AI_YN1X0.
READ TABLE I_KNXX TRANSPORTING NO FIELDS
WITH KEY KUNNR = AI_YN1X0-LIST1.
IF SY-SUBRC <> 0.
DELETE AI_YN1X0.
ENDIF.
ENDLOOP.

ENDFORM.                    " F_DELETE_I_YN1x0
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_YN110
*&---------------------------------------------------------------------*
*       外部データ一括取得
*----------------------------------------------------------------------*
FORM F_SELECT_YN110.

REFRESH: I_YN110_A.

*-- 当月検収
SELECT LIST1                              " 得意先コード(受注先)
WAERS                              " 通貨コード
KNETXAMT                           " 税込金額
CZFBDT                             " 照合締日
FROM YN110
INTO CORRESPONDING FIELDS OF TABLE I_YN110_A
WHERE BUKRS  = P_BUKRS                  " 会社コード
AND LIST1 IN S_KUNNR                   " 得意先コード(受注先)
AND ZFBDT  = P_CZFBDT                  " 計上締日 = 今回締日
*2012/03/19 ADD >>>
AND DELFLG = SPACE.                    " 削除フラグ　=　初期値
*2012/03/19 ADD <<<

*-- 処理対象外得意先のデータ削除
PERFORM F_DELETE_I_YN1X0 TABLES I_YN110_A.

ENDFORM.                    " F_SELECT_YN110
*&---------------------------------------------------------------------*
*&      Form  F_MAKE_OUTPUT_DATA_PROC
*&---------------------------------------------------------------------*
*       出力データ作成処理
*----------------------------------------------------------------------*
FORM F_MAKE_OUTPUT_DATA_PROC.

*-- 取得金額集計
PERFORM F_COLLECT_KNETXAMT.

IF I_DATA[] IS INITIAL.
*-- 対象データがありません
MESSAGE S762.
LEAVE LIST-PROCESSING.
ENDIF.

*-- その他出力項目設定
PERFORM F_SET_OTHER_FIELD.

ENDFORM.                    " F_MAKE_OUTPUT_DATA_PROC
*&---------------------------------------------------------------------*
*&      Form  F_COLLECT_KNETXAMT
*&---------------------------------------------------------------------*
*       取得金額集計
*----------------------------------------------------------------------*
FORM F_COLLECT_KNETXAMT.

LOOP AT I_YN120_S INTO W_YN1X0.
CLEAR: W_DATA.
PERFORM F_SET_KEY_DATA USING W_YN1X0
CHANGING W_DATA.    " キー項目設定
*-- 当月売上
W_DATA-SUM01 = W_YN1X0-KNETXAMT.        " 税込金額
*-- 未検収
*** 2012/02/22 MOD START ***
*    IF  W_YN1X0-CZFBDT > P_CZFBDT           " 照合締日 > 今回締日
*    AND (  W_YN1X0-AUTOFLG = SPACE          " 部分照合：なし
*        OR W_YN1X0-AUTOFLG = 1 ).           " 部分照合：元自社
IF  (  W_YN1X0-CZFBDT > P_CZFBDT        " 照合締日 > 今回締日
OR W_YN1X0-CZFBDT = '00000000' )    " 照合締日初期値
AND (  W_YN1X0-AUTOFLG = SPACE          " 部分照合：なし
OR W_YN1X0-AUTOFLG = 1 ).           " 部分照合：元自社
*** 2012/02/22 MOD END ***
W_DATA-SUM05 = W_YN1X0-KNETXAMT.      " 未検収
ENDIF.
*-- 先行入金
*** 2012/02/22 MOD START ***
*    IF  W_YN1X0-CZFBDT  > P_CZFBDT          " 照合締日 > 今回締日
IF  W_YN1X0-CZFBDT  = P_CZFBDT          " 照合締日 > 今回締日
*** 2012/02/22 MOD END ***
AND W_YN1X0-AUTOFLG = 2.                " 部分照合：外部
W_DATA-SUM06 = W_YN1X0-KNETXAMT.      " 未検収
ENDIF.
*-- 当月売上前月照合
IF  W_YN1X0-CZFBDT = G_ZFBDT_OLD.       " 照合締日 = 前回締日
W_DATA-SUM10 = W_YN1X0-KNETXAMT.      " 未検収
ENDIF.
*-- 当月売上当月照合
IF  W_YN1X0-CZFBDT = P_CZFBDT.          " 照合締日 = 今回締日
W_DATA-SUM11 = W_YN1X0-KNETXAMT.      " 未検収
ENDIF.
COLLECT W_DATA INTO I_DATA.
ENDLOOP.

FREE: I_YN120_S.

LOOP AT I_YN120_C INTO W_YN1X0.
CLEAR: W_DATA.
PERFORM F_SET_KEY_DATA USING W_YN1X0
CHANGING W_DATA.    " キー項目設定
*-- 次月売上照合
W_DATA-SUM13 = W_YN1X0-KNETXAMT.        " 税込金額
COLLECT W_DATA INTO I_DATA.
ENDLOOP.

FREE: I_YN120_C.

LOOP AT I_YN120_N INTO W_YN1X0.
CLEAR: W_DATA.
PERFORM F_SET_KEY_DATA USING W_YN1X0
CHANGING W_DATA.    " キー項目設定
*-- 前月以前未検収
W_DATA-SUM07 = W_YN1X0-KNETXAMT.        " 税込金額
COLLECT W_DATA INTO I_DATA.
ENDLOOP.

FREE: I_YN120_N.

LOOP AT I_YN120_NC INTO W_YN1X0.
CLEAR: W_DATA.
PERFORM F_SET_KEY_DATA USING W_YN1X0
CHANGING W_DATA.    " キー項目設定
*-- 前月以前未検収照合
W_DATA-SUM12 = W_YN1X0-KNETXAMT.        " 税込金額
COLLECT W_DATA INTO I_DATA.
ENDLOOP.

FREE: I_YN120_NC.

LOOP AT I_YN120_P INTO W_YN1X0.
CLEAR: W_DATA.
PERFORM F_SET_KEY_DATA USING W_YN1X0
CHANGING W_DATA.    " キー項目設定
*-- 前月以前先行入金
*** 2012/06/14 MOD START ***
*    W_DATA-SUM08 = W_YN1X0-KNETXAMT.        " 税込金額
W_DATA-SUM08 = W_YN1X0-KNETXAMT * ( -1 )." 税込金額
*** 2012/06/14 MOD END ***
COLLECT W_DATA INTO I_DATA.
ENDLOOP.

FREE: I_YN120_P.

LOOP AT I_YN120_PC INTO W_YN1X0.
CLEAR: W_DATA.
PERFORM F_SET_KEY_DATA USING W_YN1X0
CHANGING W_DATA.    " キー項目設定
*-- 前月以前先行入金照合
W_DATA-SUM14 = W_YN1X0-KNETXAMT.        " 税込金額
COLLECT W_DATA INTO I_DATA.
ENDLOOP.

FREE: I_YN120_PC.

LOOP AT I_YN110_A INTO W_YN1X0.
CLEAR: W_DATA.
PERFORM F_SET_KEY_DATA USING W_YN1X0
CHANGING W_DATA.    " キー項目設定
*-- 当月検収
W_DATA-SUM03 = W_YN1X0-KNETXAMT.        " 税込金額
*-- 未入力
*** 2012/02/22 MOD START ***
*    IF  W_YN1X0-CZFBDT > P_CZFBDT.          " 照合締日 > 今回締日
IF  W_YN1X0-CZFBDT > P_CZFBDT           " 照合締日 > 今回締日
OR W_YN1X0-CZFBDT = '00000000'.        " 照合締日初期値
*** 2012/02/22 MOD END ***
W_DATA-SUM09 = W_YN1X0-KNETXAMT.      " 未入力
ENDIF.
*-- 入金予定
IF  W_YN1X0-CZFBDT = P_CZFBDT.          " 照合締日 = 今回締日
W_DATA-SUM04 = W_YN1X0-KNETXAMT.      " 入金予定
ENDIF.
COLLECT W_DATA INTO I_DATA.
ENDLOOP.

FREE: I_YN110_A.

ENDFORM.                    " F_COLLECT_KNETXAMT
*&---------------------------------------------------------------------*
*&      Form  F_SET_KEY_DATA
*&---------------------------------------------------------------------*
*       キー項目設定
*----------------------------------------------------------------------*
*      -->AI_YN1x0  自社/外部データ
*      <--AO_DATA   出力データ
*----------------------------------------------------------------------*
FORM F_SET_KEY_DATA USING VALUE(AI_YN1X0) TYPE T_YN1X0
CHANGING VALUE(AO_DATA)  TYPE T_DATA.

AO_DATA-KUNNR = AI_YN1X0-LIST1.           " 得意先コード(受注先)
AO_DATA-WAERS = AI_YN1X0-WAERS.           " 通貨コード

ENDFORM.                    " F_SET_KEY_DATA
*&---------------------------------------------------------------------*
*&      Form  F_SET_OTHER_FIELD
*&---------------------------------------------------------------------*
*       その他出力項目設定
*----------------------------------------------------------------------*
FORM F_SET_OTHER_FIELD.

LOOP AT I_DATA INTO W_DATA.
*-- 得意先マスタ読込み
CLEAR: W_KNXX.
READ TABLE I_KNXX INTO W_KNXX
WITH KEY KUNNR = W_DATA-KUNNR
BINARY SEARCH.
*-- 得意先名称
W_DATA-NAME1 = W_KNXX-NAME1.
*** 2012/05/24 INSERT START ***
*-- ソート項目
W_DATA-SORTL = W_KNXX-SORTL.
*** 2012/05/24 INSERT END ***
*-- 営業所
W_DATA-VKBUR = W_KNXX-VKBUR.
*-- 営業グループ
W_DATA-VKGRP = W_KNXX-VKGRP.
*-- 請求書
PERFORM F_CALL_READ_TEXT USING W_KNXX-KUNN2  " 得意先コード(支払人)
CHANGING W_DATA-KTEXT. " 請求書
*** 2012/06/20 INSERT START ***
*-- 未検収に、先行入金を足し込む。
W_DATA-SUM05 = W_DATA-SUM05 - W_DATA-SUM06.
W_DATA-SUM07 = W_DATA-SUM07 - W_DATA-SUM08.
*** 2012/10/03 MOD START ***
W_DATA-SUM12 = W_DATA-SUM12 + W_DATA-SUM14.
*    W_DATA-SUM12 = W_DATA-SUM12 - W_DATA-SUM14.
*** 2012/10/03 MOD END ***
*-- 未照合額 ( 未検収 ＋ 前月以前未検収 )
W_DATA-SUM02 = W_DATA-SUM05 + W_DATA-SUM07.
*-- 当月発行請求額 ( 当月売上 - 当月売上前月照合 )
W_DATA-SUM15 = W_DATA-SUM01 - W_DATA-SUM10.
*-- 未処理額 ( 当月検収額 - 入金予定額 )
W_DATA-SUM16 = W_DATA-SUM03 - W_DATA-SUM04.
* 2012/07/31 ADD START
*-- 検収差額
*（入金予定額-当月売上当月照合-前月以前未検収照合-次月売上当月照合）
W_DATA-SUM17 =
W_DATA-SUM04 - W_DATA-SUM11 - W_DATA-SUM12 - W_DATA-SUM13.
* 2012/07/31 ADD END

MODIFY I_DATA FROM W_DATA.
ENDLOOP.

ENDFORM.                    " F_SET_OTHER_FIELD
*&---------------------------------------------------------------------*
*&      Form  F_CALL_READ_TEXT
*&---------------------------------------------------------------------*
*      得意先マスタ会社コードビューのテキスト取得
*----------------------------------------------------------------------*
*      -->AI_KUNNR   得意先コード
*      <--AO_KTEXT   得意先マスタ(会社コード)テキスト
*--------------------------------------------------------------------*
FORM F_CALL_READ_TEXT USING VALUE(AI_KUNNR) TYPE ANY
CHANGING VALUE(AO_KTEXT) TYPE ANY.

DATA: L_NAME TYPE THEAD-TDNAME,
LI_TLINE TYPE STANDARD TABLE OF TLINE WITH HEADER LINE.

CLEAR: L_NAME.
REFRESH: LI_TLINE.

CONCATENATE AI_KUNNR
P_BUKRS
INTO L_NAME.

CALL FUNCTION 'READ_TEXT'
EXPORTING
CLIENT   = SY-MANDT
ID       = 'YN01'
LANGUAGE = SY-LANGU
NAME     = L_NAME
OBJECT   = 'KNB1'
TABLES
LINES    = LI_TLINE
EXCEPTIONS
OTHERS   = 0.

LOOP AT LI_TLINE.
AO_KTEXT = LI_TLINE-TDLINE+0(1).
EXIT.
ENDLOOP.

ENDFORM.                    " F_CALL_READ_TEXT
*&---------------------------------------------------------------------*
*&      Form  END_SEC
*&---------------------------------------------------------------------*
*       終了処理
*----------------------------------------------------------------------*
FORM END_SEC.

*-- ALVフィールドカタログ設定
PERFORM F_SET_FIELDCAT.

*-- ALV表示設定
PERFORM F_SET_DISPLAY.

*-- ALVイベント設定
PERFORM F_SET_EVENT.

*-- ALVプリント設定
PERFORM F_SET_PRINT.

*-- ALV出力
PERFORM F_OUTPUT_ALV.

ENDFORM.                    " END_SEC
*&---------------------------------------------------------------------*
*&      Form  F_SET_FIELDCAT
*&---------------------------------------------------------------------*
*       フィールドカタログ設定
*----------------------------------------------------------------------*
FORM F_SET_FIELDCAT.

REFRESH: I_FIELDCAT[].

*** 2012/02/29 ALV INSERT START ***
DATA:L_COL      TYPE I.               "カラム位置

* カラム位置の初期化
L_COL = 0.

* 項目名を編集する
**-- 得意先
PERFORM SET_FIELDCAT USING 'KUNNR'          "項目ID
TEXT-F01         "項目テキスト(短)
TEXT-F01         "項目テキスト(中)
TEXT-F01         "項目テキスト(長)
10               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
10               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
**-- 得意先名称
PERFORM SET_FIELDCAT USING 'NAME1'          "項目ID
TEXT-F02         "項目テキスト(短)
TEXT-F02         "項目テキスト(中)
TEXT-F02         "項目テキスト(長)
35               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
35               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
*** 2012/05/24 INSERT START ***
**-- ソート項目
PERFORM SET_FIELDCAT USING 'SORTL'          "項目ID
TEXT-F23         "項目テキスト(短)
TEXT-F23         "項目テキスト(中)
TEXT-F23         "項目テキスト(長)
10               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
10               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
*** 2012/05/24 INSERT END ***
**-- 営業所
PERFORM SET_FIELDCAT USING 'VKBUR'          "項目ID
TEXT-F03         "項目テキスト(短)
TEXT-F03         "項目テキスト(中)
TEXT-F03         "項目テキスト(長)
4                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
4                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
**-- 営業G
PERFORM SET_FIELDCAT USING 'VKGRP'          "項目ID
TEXT-F04         "項目テキスト(短)
TEXT-F04         "項目テキスト(中)
TEXT-F04         "項目テキスト(長)
3                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
3                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
**-- 請求書
PERFORM SET_FIELDCAT USING 'KTEXT'          "項目ID
TEXT-F05         "項目テキスト(短)
TEXT-F05         "項目テキスト(中)
TEXT-F05         "項目テキスト(長)
1                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
1                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
**-- 通貨
PERFORM SET_FIELDCAT USING 'WAERS'          "項目ID
TEXT-F06         "項目テキスト(短)
TEXT-F06         "項目テキスト(中)
TEXT-F06         "項目テキスト(長)
5                "出力データ長
'CUKY'           "データ型
SPACE            "数値データ型
5                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
**-- 当月売上
PERFORM SET_FIELDCAT USING 'SUM01'          "項目ID
TEXT-F07         "項目テキスト(短)
TEXT-F07         "項目テキスト(中)
TEXT-F07         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'           "通貨参照項目
CHANGING L_COL.
**-- 未照合額
PERFORM SET_FIELDCAT USING 'SUM02'          "項目ID
TEXT-F08         "項目テキスト(短)
TEXT-F08         "項目テキスト(中)
TEXT-F08         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 当月検収
PERFORM SET_FIELDCAT USING 'SUM03'          "項目ID
TEXT-F09         "項目テキスト(短)
TEXT-F09         "項目テキスト(中)
TEXT-F09         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 入金予定
PERFORM SET_FIELDCAT USING 'SUM04'          "項目ID
TEXT-F10         "項目テキスト(短)
TEXT-F10         "項目テキスト(中)
TEXT-F10         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 未検収
PERFORM SET_FIELDCAT USING 'SUM05'          "項目ID
TEXT-F11         "項目テキスト(短)
TEXT-F11         "項目テキスト(中)
TEXT-F11         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 先行入金
PERFORM SET_FIELDCAT USING 'SUM06'          "項目ID
TEXT-F12         "項目テキスト(短)
TEXT-F12         "項目テキスト(中)
TEXT-F12         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 前月以前未検収
PERFORM SET_FIELDCAT USING 'SUM07'          "項目ID
TEXT-F13         "項目テキスト(短)
TEXT-F13         "項目テキスト(中)
TEXT-F13         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 前月以前先行入金
PERFORM SET_FIELDCAT USING 'SUM08'          "項目ID
TEXT-F14         "項目テキスト(短)
TEXT-F14         "項目テキスト(中)
TEXT-F14         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 未処理額
PERFORM SET_FIELDCAT USING 'SUM09'          "項目ID
TEXT-F15         "項目テキスト(短)
TEXT-F15         "項目テキスト(中)
TEXT-F15         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 当月売上前月照合
PERFORM SET_FIELDCAT USING 'SUM10'          "項目ID
TEXT-F16         "項目テキスト(短)
TEXT-F16         "項目テキスト(中)
TEXT-F16         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 当月売上当月照合
PERFORM SET_FIELDCAT USING 'SUM11'          "項目ID
TEXT-F17         "項目テキスト(短)
TEXT-F17         "項目テキスト(中)
TEXT-F17         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 前月以前未検収照合
PERFORM SET_FIELDCAT USING 'SUM12'          "項目ID
TEXT-F18         "項目テキスト(短)
TEXT-F18         "項目テキスト(中)
TEXT-F18         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 次月売上照合
PERFORM SET_FIELDCAT USING 'SUM13'          "項目ID
TEXT-F19         "項目テキスト(短)
TEXT-F19         "項目テキスト(中)
TEXT-F19         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 前月以前先行入金照合
PERFORM SET_FIELDCAT USING 'SUM14'          "項目ID
TEXT-F20         "項目テキスト(短)
TEXT-F20         "項目テキスト(中)
TEXT-F20         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 当月発行請求額
PERFORM SET_FIELDCAT USING 'SUM15'          "項目ID
TEXT-F21         "項目テキスト(短)
TEXT-F21         "項目テキスト(中)
TEXT-F21         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
**-- 要処理額
PERFORM SET_FIELDCAT USING 'SUM16'          "項目ID
TEXT-F22         "項目テキスト(短)
TEXT-F22         "項目テキスト(中)
TEXT-F22         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
*** 2012/02/29 ALV INSERT END ***

* 2012/07/31 ADD START "要確認額追加
**-- 要確認額
PERFORM SET_FIELDCAT USING 'SUM17'          "項目ID
TEXT-F24         "項目テキスト(短)
TEXT-F24         "項目テキスト(中)
TEXT-F24         "項目テキスト(長)
19               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
16               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
* 2012/07/31 ADD END
ENDFORM.                    " F_SET_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  SET_FIELDCAT
*&---------------------------------------------------------------------*
*       FIELD CATALOGの編集
*----------------------------------------------------------------------*
*      -->P_FIELDNAME     項目ID　　　　　　　　　　　　　　　　　必須　
*      -->P_SELLDTEXT_S   項目テキスト(短)　　　　　　　　　　　　必須
*      -->P_SELLDTEXT_S   項目テキスト(中)　　　　　　　　　　　　必須
*      -->P_SELLDTEXT_S   項目テキスト(長)　　　　　　　　　　　　必須
*      -->P_OUTPUTLEN     出力データ長(カンマ、小数点、符号含む)　必須
*      -->P_DATATYPE      データ型    　　　　　　　　　　　　　　必須
*      -->P_INTTYPE       数値データ型 　　　　　　　　　　　 金額のみ
*      -->P_INTLEN        数値データ長                            必須
*      -->P_CFIELD        金額項目の場合参照する通貨項目名    金額のみ
*      -->P_COL　　　　　 カラム位置　　　　　　　　　　　　　　　必須
*----------------------------------------------------------------------*
FORM SET_FIELDCAT USING P_FIELDNAME   TYPE SLIS_FIELDCAT_ALV-FIELDNAME
P_SELTEXT_S   TYPE ANY
P_SELTEXT_M   TYPE ANY
P_SELTEXT_L   TYPE ANY
P_OUTPUTLEN   TYPE SLIS_FIELDCAT_ALV-OUTPUTLEN
P_DATATYPE    TYPE SLIS_FIELDCAT_ALV-DATATYPE
P_INTTYPE     TYPE SLIS_FIELDCAT_ALV-INTTYPE
P_INTLEN      TYPE SLIS_FIELDCAT_ALV-INTLEN
P_CFIELDNAME  TYPE SLIS_FIELDCAT_ALV-CFIELDNAME
CHANGING P_COL         TYPE I.

DATA:W_FIELDCAT TYPE SLIS_FIELDCAT_ALV.


* カラム位置設定
P_COL = P_COL + 1.

* 見出し設定
W_FIELDCAT-COL_POS    = P_COL.             "カラム位置
W_FIELDCAT-FIELDNAME  = P_FIELDNAME.       "項目ID
W_FIELDCAT-SELTEXT_S  = P_SELTEXT_S.       "項目テキスト(短)
W_FIELDCAT-SELTEXT_M  = P_SELTEXT_M.       "項目テキスト(中)
W_FIELDCAT-SELTEXT_L  = P_SELTEXT_L.       "項目テキスト(長)
W_FIELDCAT-OUTPUTLEN  = P_OUTPUTLEN.       "出力データ長
W_FIELDCAT-DATATYPE   = P_DATATYPE.        "データ型
W_FIELDCAT-INTTYPE    = P_INTTYPE.         "数値のデータ型
W_FIELDCAT-INTLEN     = P_INTLEN.          "データ長
W_FIELDCAT-CFIELDNAME = P_CFIELDNAME.      "参照通貨
* 2012/04/06 ADD START（印刷、ダウンロード時のテキスト設定）
*  W_FIELDCAT-reptext_ddic   = P_SELTEXT_L.  "
W_FIELDCAT-OFFSET         = P_OUTPUTLEN.  "
W_FIELDCAT-DDIC_OUTPUTLEN = P_OUTPUTLEN.  "
*  W_FIELDCAT-DDICTXT        = 'L'.          "
* 2012/04/06 ADD END
APPEND W_FIELDCAT TO I_FIELDCAT.

ENDFORM.                    " SET_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  F_SET_DISPLAY
*&---------------------------------------------------------------------*
*       ALV表示設定
*----------------------------------------------------------------------*
FORM F_SET_DISPLAY.

CLEAR: W_LAYOUT,
W_VARIANT.

*-- レイアウト
W_LAYOUT-COLWIDTH_OPTIMIZE    = C_ON.              " 列幅最適
W_LAYOUT-DETAIL_INITIAL_LINES = C_ON.
W_LAYOUT-ZEBRA                = C_ON.              " 縞々
W_LAYOUT-GROUP_CHANGE_EDIT    = C_ON.

*-- バリアント
W_VARIANT-REPORT  = C_REPID.
W_VARIANT-VARIANT = P_LYOUT.

ENDFORM.                    " F_SET_DISPLAY
*&---------------------------------------------------------------------*
*&      Form  F_SET_EVENT
*&---------------------------------------------------------------------*
*       ALVイベント設定
*----------------------------------------------------------------------*
FORM F_SET_EVENT.

REFRESH: I_EVENT.

CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
IMPORTING
ET_EVENTS = I_EVENT
EXCEPTIONS
OTHERS    = 0.

READ TABLE I_EVENT INTO W_EVENT WITH KEY NAME = SLIS_EV_TOP_OF_PAGE.
IF SY-SUBRC = 0 .
W_EVENT-FORM = 'F_CALL_TOP_OF_PAGE'.
MODIFY I_EVENT INDEX SY-TABIX FROM W_EVENT.
ENDIF.

ENDFORM.                    " F_SET_EVENT
*&---------------------------------------------------------------------*
*&      Form  F_SET_PRINT
*&---------------------------------------------------------------------*
*       ALVプリント設定
*----------------------------------------------------------------------*
FORM F_SET_PRINT.

CLEAR: W_PRINT.
W_PRINT-NO_PRINT_LISTINFOS = C_ON.

*  NO_COLWOPT
*  W_PRINT-NO_COLWOPT = C_ON.

*-- 印刷プレビュー設定
W_SETTINGS-NO_COLWOPT = C_ON.  "自動最適化禁止

ENDFORM.                    " F_SET_PRINT
*&---------------------------------------------------------------------*
*&      Form  F_OUTPUT_ALV
*&---------------------------------------------------------------------*
*       ALV出力
*----------------------------------------------------------------------*
FORM F_OUTPUT_ALV.

SORT I_DATA.

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM = C_REPID
I_GRID_SETTINGS    = W_SETTINGS  "グリッド設定
IS_LAYOUT          = W_LAYOUT
IT_FIELDCAT        = I_FIELDCAT
I_DEFAULT          = C_ON
I_SAVE             = C_SAVE
IS_VARIANT         = W_VARIANT
IT_EVENTS          = I_EVENT
IS_PRINT           = W_PRINT
TABLES
T_OUTTAB           = I_DATA
EXCEPTIONS
PROGRAM_ERROR      = 1
OTHERS             = 2.

IF SY-SUBRC <> 0.
*-- ALV出力エラー
*** 2012/02/29 MOD START ***
*    MESSAGE S789 WITH TEXT-M01.
*    STOP.
MESSAGE S000 WITH 'システムエラーが発生しました'.
LEAVE LIST-PROCESSING.
*** 2012/02/29 MOD END ***
ENDIF.

ENDFORM.                    " F_OUTPUT_ALV
*&---------------------------------------------------------------------*
*&      Form  F_CALL_TOP_OF_PAGE
*&---------------------------------------------------------------------*
*       ALVヘッダ設定
*----------------------------------------------------------------------*
FORM F_CALL_TOP_OF_PAGE.

DATA:LW_WORK   TYPE CHAR100,
LW_PAGNO(4) TYPE C.

*-- タイトル
PERFORM F_SET_HEADER USING C_TYP1
TEXT-H01
SPACE.

*--- ページ
CLEAR: LW_WORK,
LW_PAGNO.
LW_PAGNO = SY-PAGNO.
CONDENSE LW_PAGNO.
CONCATENATE TEXT-H03
LW_PAGNO
INTO LW_WORK.
PERFORM F_SET_HEADER USING C_TYP2
SPACE
LW_WORK.

*-- 処理日付
CLEAR: LW_WORK.
WRITE: SY-DATUM TO LW_WORK.
CONCATENATE TEXT-H04
LW_WORK
INTO LW_WORK.
PERFORM F_SET_HEADER USING C_TYP2
SPACE
LW_WORK.

*-- 処理時刻
CLEAR: LW_WORK.
WRITE: SY-UZEIT TO LW_WORK.
CONCATENATE TEXT-H05
LW_WORK
INTO LW_WORK.
PERFORM F_SET_HEADER USING C_TYP2
SPACE
LW_WORK.

*--- ユーザID
CLEAR: LW_WORK.
CONCATENATE TEXT-H06
SY-UNAME
INTO LW_WORK.
PERFORM F_SET_HEADER USING C_TYP2
SPACE
LW_WORK.

*-- 照合締日
CLEAR: LW_WORK.
WRITE: P_CZFBDT TO LW_WORK.
CONCATENATE TEXT-H02
LW_WORK
INTO LW_WORK.
PERFORM F_SET_HEADER USING C_TYP2
LW_WORK
TEXT-H07.

CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
EXPORTING
IT_LIST_COMMENTARY = I_HEADER.

REFRESH: I_HEADER.

ENDFORM.                    " F_CALL_TOP_OF_PAGE
*&---------------------------------------------------------------------*
*&      Form  F_SET_HEADER
*&---------------------------------------------------------------------*
*       ヘッダ編集
*----------------------------------------------------------------------*
*      -->AI_TYP    タイプ
*      -->AI_INFO   編集内容
*----------------------------------------------------------------------*
FORM F_SET_HEADER USING VALUE(AI_TYP)  TYPE ANY
VALUE(AI_INFO) TYPE ANY
VALUE(AI_KEY)  TYPE ANY.

CLEAR: W_HEADER.
W_HEADER-TYP  = AI_TYP.
W_HEADER-INFO = AI_INFO.
W_HEADER-KEY  = AI_KEY.
APPEND W_HEADER TO I_HEADER.

ENDFORM.                    " F_SET_HEADER
