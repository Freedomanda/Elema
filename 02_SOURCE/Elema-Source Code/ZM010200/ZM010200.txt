************************************************************************
* [プログラム名]
*   ZM010200        停滞在庫一覧表

*-------- テストプログラム  -------------------------------------------*
* 部門コード CHAR  4
* 部門名 CHAR  30
* 購買グループ  CHAR  4
* 購買グループ名 CHAR  18
* 品目コード CHAR  18
* 品目名 CHAR  40
* 在庫区分コード CHAR  1
* 在庫区分名 CHAR  4
* 得意先/仕入先コード  CHAR  10
* 得意先/仕入先名  CHAR  35
* 在庫数量（引当）  CHAR  15
* 在庫数量（未引当） CHAR  15
* 単位  CHAR  3
* 最新入荷日 CHAR  10
* 最新出荷日 CHAR  10
* 在庫平均単価  CHAR  15
* 在庫金額  CHAR  15
* 在庫日数  CHAR  4
* 警告  CHAR  3
*

* [処理概要]
*   ・入出庫の動きがない在庫品の管理
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2001/11/20   PSD H.Tanaka      新規開発
*  2002/01/07   PSD H.Tanaka      仕様変更対応
*                                 ・在庫平均単価計算方法
*                                 ・帳票レイアウト
*  2002/02/01   PSD M.Arai        仕様変更対応
*                                 ・プラント別合計行のみ表示
*                                 ・評価済み数量取得方法変更
*                                 ・平均単価算出方法変更
*  2002/03/04   PSD M.ARAI        在庫平均単価不具合対応
*  2002/03/14   PSD M.ARAI        在庫数量不具合対応
*  2002/03/20   PSD M.ARAI        改ページ不具合対応
*  2002/03/22   psd m.arai       『在庫』特殊在庫除外対応
*  2002/05/08   PSD T.SAITOH      会計数値違い明確化文章表示
*  2002/05/27   PSD K.ARAI        パフォーマンス対応
*  2002/06/19   PSD T.SAITOH      金額の小数点廃止、レイアウト編集
*  2002/06/20   PSD T.SAITOH      再移送
*  2003/07/18   PSD K.MURATA      CSVでダウンロードする機能を追加
*  2004/01/05   NDSC Y.Tsukahara  引当済み品目一覧表示対応
*  2004/06/30   NDSC A.MASUDA     出荷数量実績(在庫単位)取得条件変更
*  2012/08/15   ISID              ES-UP
*  2014/08/29   ISID18            コードページを"UTF-8"に修正
*  2015/02/04   ISID18            コードページ修正
************************************************************************
REPORT  ZM010200 NO STANDARD PAGE HEADING
LINE-SIZE  160
LINE-COUNT 58.
*---------------------------------------------------------------------
* TYPES
*---------------------------------------------------------------------
*--- 品目評価情報データ型
TYPES: BEGIN OF TYP_INFO,
MATNR     TYPE MBEW-MATNR,      " 品目コード
LBKUM     TYPE MBEW-LBKUM,      " 評価在庫合計
VERPR     TYPE MBEW-VERPR,      " 移動平均原価/期間価格単位
PEINH     TYPE MBEW-PEINH,      " 価格単位
EKGRP     TYPE MARC-EKGRP,      " 購買グループ
EKNAM     TYPE T024-EKNAM,      " 購買グループ名
MAKTX     TYPE MAKT-MAKTX,      " 品目名
MEINS     TYPE MARA-MEINS,      " 基本数量単位
WERKS     TYPE T001W-WERKS,     " プラントコード
NAME1     TYPE T001W-NAME1,     " プラント名
SALK3     TYPE MBEW-SALK3,      " 評価在庫合計額
END   OF TYP_INFO.

*--- 在庫用（累積確認数量）データ型
TYPES: BEGIN OF TYP_ZAIKOA,
VBELN     TYPE VBAP-VBELN,      " 販売伝票
POSNR     TYPE VBAP-POSNR,      " 伝票明細
KLMENG    TYPE VBAP-KLMENG,     " 累積確認数量
END   OF TYP_ZAIKOA.

*--- 在庫用（出荷確認数量）データ型
TYPES: BEGIN OF TYP_ZAIKOB,
* Add 2005.12.07 --->
VBELN     TYPE LIPS-VBELN,      " 出荷伝票
POSNR     TYPE LIPS-POSNR,      " 伝票明細
* Add 2005.12.07 <---
LGMNG     TYPE LIPS-LGMNG,      " 出荷数量実績
END   OF TYP_ZAIKOB.

*--- 個別用データ型
TYPES: BEGIN OF TYP_KOBETSU,
VBELN     TYPE MSKA-VBELN,      " 販売伝票番号
POSNR     TYPE MSKA-POSNR,      " 明細番号（販売伝票）
KALAB     TYPE MSKA-KALAB,      " 利用可能評価在庫
KUNNR     TYPE KNA1-KUNNR,      " 得意先コード
LIFNM     TYPE KNA1-NAME1,      " 得意先名
END   OF TYP_KOBETSU.

*--- 預託用データ型
TYPES: BEGIN OF TYP_YOTAKU,
KULAB     TYPE MSKU-KULAB,      " 利用可能評価在庫
KUNNR     TYPE KNA1-KUNNR,      " 得意先コード
NAME1     TYPE KNA1-NAME1,      " 得意先名
END   OF TYP_YOTAKU.

*--- 仕入先用データ型
TYPES: BEGIN OF TYP_SHIRE,
LBLAB     TYPE MSLB-LBLAB,      " 利用可能評価在庫
LIFNR     TYPE LFA1-LIFNR,      " 仕入先コード
NAME1     TYPE LFA1-NAME1,      " 仕入先名
END   OF TYP_SHIRE.

*--- 帳票出力用データ型
TYPES: BEGIN OF TYP_WRITE,
WERKS     TYPE T001W-WERKS,     " 部門コード
NAME1     TYPE T001W-NAME1,     " 部門名
EKGRP     TYPE T024-EKGRP,      " 購買グループ
EKNAM     TYPE T024-EKNAM,      " 購買グループ名
MATNR     TYPE MAKT-MATNR,      " 品目コード
MAKTX     TYPE MAKT-MAKTX,      " 品目名
ZKBCD(1)  TYPE C,               " 在庫区分コード
ZKBNM(4)  TYPE C,               " 在庫区分名
LIFNR     TYPE LFA1-LIFNR,      " 得意先/仕入先コード
LIFNM     TYPE LFA1-NAME1,      " 得意先/仕入先名
*         LBLAB     TYPE MSLB-LBLAB,      " 在庫数量（引当）
LBLAB     TYPE VBAP-KLMENG,     " 在庫数量（引当）
*         NLBLB     TYPE MSLB-LBLAB,      " 在庫数量（未引当）
NLBLB     TYPE VBAP-KLMENG,     " 在庫数量（未引当）
MEINS     TYPE MARA-MEINS,      " 単位
IDATE     TYPE SY-DATUM,        " 最新入荷日
ODATE     TYPE SY-DATUM,        " 最新出荷日
*         PEINH     TYPE MBEW-PEINH,      " 在庫平均単価
* ↓ MODIFY 2002.03.04 PSD M.ARAI 在庫平均単価不具合対応
*         PEINH     TYPE MBEW-VERPR,      " 在庫平均単価
PEINH(13)  TYPE P DECIMALS 2,      " 在庫平均単価
* ↑

*---MODIFY START PSD T.SAITOH 2002/06/19 ---------------------------*
*         MONEY(7)  TYPE P DECIMALS 2,    " 在庫金額
MONEY(13)  TYPE P ,             " 在庫金額
*---MODIFY END   PSD T.SAITOH 2002/06/19 ---------------------------*
ZDATE(4)  TYPE N,               " 在庫日数
ZWARN(3)  TYPE C,               " 警告
END   OF TYP_WRITE.

* ↓APPEND 2003/07/18 PSD K.MURATA
*--- CHAR変換用データ型構造
TYPES: BEGIN OF TY_CHAR,
WERKS(4)  TYPE C,               " 部門コード
NAME1(30) TYPE C,               " 部門名
EKGRP(4)  TYPE C,               " 購買グループ
EKNAM(18) TYPE C,               " 購買グループ名
MATNR(18) TYPE C,               " 品目コード
MAKTX(40) TYPE C,               " 品目名
ZKBCD(1)  TYPE C,               " 在庫区分コード
ZKBNM(4)  TYPE C,               " 在庫区分名
LIFNR(10) TYPE C,               " 得意先/仕入先コード
LIFNM(35) TYPE C,               " 得意先/仕入先名
LBLAB(15) TYPE C,               " 在庫数量（引当）
NLBLB(15) TYPE C,               " 在庫数量（未引当）
MEINS(3)  TYPE C,               " 単位
IDATE(10) TYPE C,               " 最新入荷日
ODATE(10) TYPE C,               " 最新出荷日
PEINH(15) TYPE C,               " 在庫平均単価
MONEY(15) TYPE C,               " 在庫金額
ZDATE(4)  TYPE C,               " 在庫日数
ZWARN(3)  TYPE C,               " 警告
END OF   TY_CHAR.
* ↑

*---------------------------------------------------------------------
* DATA
*---------------------------------------------------------------------
*--- 品目評価情報内部テーブル
DATA: GF_INFO    TYPE          TYP_INFO,
GT_INFO    LIKE TABLE OF GF_INFO.

*--- 在庫用内部テーブルＡ（累積確認数量）
DATA: GF_ZAIKOA  TYPE          TYP_ZAIKOA,
GT_ZAIKOA  LIKE TABLE OF GF_ZAIKOA.

*--- 在庫用内部テーブルＢ（出荷数量実績）
DATA: GF_ZAIKOB  TYPE          TYP_ZAIKOB,
GT_ZAIKOB  LIKE TABLE OF GF_ZAIKOB.

*--- 個別用内部テーブル
DATA: GF_KOBETSU TYPE          TYP_KOBETSU,
GT_KOBETSU LIKE TABLE OF GF_KOBETSU.

*--- 預託用内部テーブル
DATA: GF_YOTAKU  TYPE          TYP_YOTAKU,
GT_YOTAKU  LIKE TABLE OF GF_YOTAKU.

*--- 仕入先用内部テーブル
DATA: GF_SHIRE   TYPE          TYP_SHIRE,
GT_SHIRE   LIKE TABLE OF GF_SHIRE.

*--- 帳票出力用内部テーブル
DATA: GF_WRITE   TYPE          TYP_WRITE,
GT_WRITE   LIKE TABLE OF GF_WRITE.

* ↓APPEND 2003/07/18 PSD K.MURATA
*--- CHAR変換用内部テーブル
DATA: GF_CHAR     TYPE          TY_CHAR.

*--- CSV出力
* Mod ES-UP 2012/10/29 -->
*DATA: GF_CSV(1000)   TYPE C,
DATA: GF_CSV   TYPE STRING,
* Mod ES-UP 2012/10/29 <--
GT_CSV         LIKE TABLE OF GF_CSV.
* ↑

*---
DATA: G_REPID        TYPE SY-REPID,        " プログラムＩＤ
G_DATA         TYPE SY-DATUM,        " システム日付
G_KLMENG       TYPE VBAP-KLMENG,     " 累積確認数量 (基本数量単位)
G_LGMNG        TYPE LIPS-LGMNG,      " 出荷数量実績 (在庫単位)
G_ONEMON_TOTAL TYPE TYP_WRITE-MONEY, " 停滞１ヶ月合計
G_TWOMON_TOTAL TYPE TYP_WRITE-MONEY, " 停滞２ヶ月合計
G_TREMON_TOTAL TYPE TYP_WRITE-MONEY, " 停滞３ヶ月合計
* ↓APPEND 200/02/01 PSD M.Arai プラント別合計行出力対応
G_ONEMON_WERKS LIKE G_ONEMON_TOTAL,  " 停滞１合計(プラント別)
G_TWOMON_WERKS LIKE G_TWOMON_TOTAL,  " 停滞２合計(プラント別)
G_TREMON_WERKS LIKE G_TREMON_TOTAL,  " 停滞３合計(プラント別)
* ↑
G_ALL_TOTAL    TYPE TYP_WRITE-MONEY, " 総合計
G_FLG_EXIT(1)  TYPE C VALUE '0'.     " ＬＯＯＰ終了フラグ

* ↓APPEND 2002/02/01 PSD M.Arai 在庫数量対応
DATA: G_KULAB        LIKE GF_YOTAKU-KULAB,  " 預託数量
G_LBLAB        LIKE GF_SHIRE-LBLAB.   " 支給数量
* ↑
* ↓APPEND 2002/03/14 PSD M.ARAI 在庫数量不具合対応
DATA: G_KALAB        LIKE GF_KOBETSU-KALAB. " 在庫数量
* ↑
** Add 2004.03.22 R.Hata >>>>>
DATA : G_GENTAB      LIKE AIND_STR2-GENTAB . "アーカイブ情報テーブル
** Add 2004.03.22 R.Hata <<<<<
**** START ADD 2015/02/04 ISID18 ****
DATA:
G_OUTPUT_CP      TYPE ZTEGZZM001-Z_OUTPUT_CP,
G_FLGUTF8        TYPE FLAG.
**** END ADD 2015/02/04 ISID18 ****
*---------------------------------------------------------------------
* 定数宣言
*---------------------------------------------------------------------
CONSTANTS: CNS_MBEW(4)    TYPE C VALUE 'MBEW',
CNS_MSKU(4)    TYPE C VALUE 'MSKU',
CNS_MSEG(8)    TYPE C VALUE 'MSEG',
CNS_MBEWH(8)   TYPE C VALUE 'MBEWH',
CNS_KNA1(8)    TYPE C VALUE 'KNA1',
CNS_VBAP(4)    TYPE C VALUE 'VBAP',
CNS_LIPS(4)    TYPE C VALUE 'LIPS',
CNS_MSKA(4)    TYPE C VALUE 'MSKA',
CNS_MSLB(4)    TYPE C VALUE 'MSLB',
CNS_E(1)       TYPE C VALUE 'E',
CNS_H(1)       TYPE C VALUE 'H',
CNS_K(1)       TYPE C VALUE 'K',
CNS_L(1)       TYPE C VALUE 'L',
CNS_O(1)       TYPE C VALUE 'O',
CNS_C(1)       TYPE C VALUE 'C',
CNS_S(1)       TYPE C VALUE 'S',
CNS_X(1)       TYPE C VALUE 'X',
CNS_W(1)       TYPE C VALUE 'W',
CNS_KL(2)      TYPE C VALUE 'KL',
CNS_KB(2)      TYPE C VALUE 'KB',
CNS_TA(2)      TYPE C VALUE 'TA',
CNS_Z00(3)     TYPE C VALUE 'ZOO',
CNS_Z0R(3)     TYPE C VALUE 'ZOR',
CNS_ZERO(1)    TYPE C VALUE '0',
CNS_1(1)       TYPE C VALUE '1',
CNS_2(1)       TYPE C VALUE '2',
CNS_3(1)       TYPE C VALUE '3',
CNS_4(1)       TYPE C VALUE '4',
CNS_30(2)      TYPE C VALUE '30',
CNS_60(2)      TYPE C VALUE '60',
CNS_90(2)      TYPE C VALUE '90',
CNS_101(3)     TYPE C VALUE '101',
CNS_122(3)     TYPE C VALUE '122',
CNS_351(3)     TYPE C VALUE '351',
CNS_541(3)     TYPE C VALUE '541',
CNS_543(3)     TYPE C VALUE '543',
CNS_601(3)     TYPE C VALUE '601',
CNS_631(3)     TYPE C VALUE '631',
CNS_633(3)     TYPE C VALUE '633',
CNS_961(3)     TYPE C VALUE '961',
CNS_501(3)     TYPE C VALUE '501',
CNS_561(3)     TYPE C VALUE '561',
CNS_***(3)     TYPE C VALUE '***',
CNS_**(2)      TYPE C VALUE '**',
CNS_*(1)       TYPE C VALUE '*'.

* ↓ APPEND 2002.03.14 PSD M.ARAI 在庫数量不具合対応
CONSTANTS: CNS_TAB(3)     TYPE C VALUE 'TAB'.
* ↑
* Mod ES-UP 2012/08/15 -->
** ↓APPEND 2003/07/18 PSD K.MURATA CSV 出力用
*CONSTANTS  CNS_CSV(1)     TYPE X VALUE '09'.
** ↑
****START UPD 2014/08/29 ISID18****
*CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
CONSTANTS CNS_UTF TYPE STRING VALUE `UTF-8`.
****END UPD 2014/08/29 ISID18*****
* Mod ES-UP 2012/08/15 <--
*---------------------------------------------------------------------
* 選択画面定義
*---------------------------------------------------------------------
SELECT-OPTIONS: PR_WERKS FOR GF_WRITE-WERKS,   " プラント
PR_EKGRP FOR GF_WRITE-EKGRP.   " 購買グループ

* ↓APPEND 2002/02/01 PSD M.Arai プラント別合計対応
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN POSITION 35.
PARAMETERS: P_TYPE(1) TYPE N DEFAULT CNS_1 OBLIGATORY.
SELECTION-SCREEN COMMENT 1(20) TEXT-027 FOR FIELD P_TYPE.
SELECTION-SCREEN COMMENT 40(19) TEXT-026.
SELECTION-SCREEN END   OF LINE.
****************************************MASUDA
SELECT-OPTIONS:S_MATNR FOR GF_WRITE-MATNR.
****************************************MASUDA
* ↑

SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF BLOCK KIGEN WITH FRAME TITLE TEXT-016.
PARAMETERS: P_KIGEN1(3) TYPE N DEFAULT CNS_30 OBLIGATORY,  " 期限１
P_KIGEN2(3) TYPE N DEFAULT CNS_60 OBLIGATORY,  " 期限２
P_KIGEN3(3) TYPE N DEFAULT CNS_90 OBLIGATORY.  " 期限３
SELECTION-SCREEN END   OF BLOCK KIGEN.


* ↓APPEND 2003/07/18 PSD K.MURATA
SELECTION-SCREEN BEGIN OF BLOCK DOWN WITH FRAME TITLE TEXT-036.
PARAMETERS: R_NOT       RADIOBUTTON GROUP R1,
R_DOWN      RADIOBUTTON GROUP R1,
P_FILE      LIKE RLGRAP-FILENAME
DEFAULT 'C:\TEST.CSV'.
* Add 2003.09.02 >>>>>
SELECTION-SCREEN BEGIN OF BLOCK DOWN2 WITH FRAME .
PARAMETERS : P_LOCAL  RADIOBUTTON GROUP R2 ,
P_SERVE  RADIOBUTTON GROUP R2 .
SELECTION-SCREEN END   OF BLOCK DOWN2.
* Add 2003.09.02 <<<<<
SELECTION-SCREEN END   OF BLOCK DOWN.

*---------------------------------------------------------------------
AT SELECTION-SCREEN ON BLOCK DOWN.
*---------------------------------------------------------------------
*--- 入力ファイルのチェック
IF R_DOWN = 'X'.
IF P_FILE IS INITIAL.
* ファイルパスを指定してください
MESSAGE E855(Z1).
ENDIF.
ENDIF.

*---------------------------------------------------------------------
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
*---------------------------------------------------------------------
*--- ファイル名呼び出し
PERFORM FRM_CHK_FILE.

*---------------------------------------------------------------------
* AT SELECTION-SCREEN
*---------------------------------------------------------------------
AT SELECTION-SCREEN.
*--- 入力チェック処理
PERFORM FRM_CHECK_KIGEN.
* ↑

*---------------------------------------------------------------------
* START-OF-SELECTION
*---------------------------------------------------------------------
START-OF-SELECTION.
*--- 初期処理
PERFORM FRM_INIT.

*--- 品目評価情報取得処理
PERFORM FRM_GET_DATA.

*--- 帳票出力用内部テーブル設定処理
PERFORM FRM_MAKE_DATA.

*--- 帳票データ存在チェック処理
PERFORM FRM_WRITE_CHECK.

*--- 帳票出力処理
PERFORM FRM_WRITE_DATA.

**** START ADD 2015/02/04 ISID18 ****
*--- コードページ取得処理
PERFORM FRM_GET_CPAGE.
**** END ADD 2015/02/04 ISID18 ****

* ↓APPEND 2003/07/18 PSD K.MURATA
IF R_DOWN = 'X'.
*--- CHAR型に編集
PERFORM FRM_CHAR_EDIT.
* Mod 2003.09.02 >>>>>
IF P_LOCAL EQ 'X' .
*--- CSVファイルをダウンロード
PERFORM FRM_DATA_DL.
ELSE .
PERFORM FRM_DATA_TRANSFER .
ENDIF .
* Mod 2003.09.02 <<<<<
ENDIF.
* ↑

************************************************************************
* TOP-OF-PAGE
************************************************************************
TOP-OF-PAGE.
DATA: L_KIGEN1 TYPE I,
L_KIGEN2 TYPE I,
L_KIGEN3 TYPE I.

CASE P_TYPE.
WHEN CNS_1.
*--- ヘッダー出力処理
*---MODIFY START PSD T.SAITOH 2002/06/19 ---------------------------*
*    WRITE:   42      TEXT-001,
*             79      TEXT-002,
*             88      SY-DATUM DD/MM/YY,                 " 日付
*             97(6)   SY-UZEIT USING EDIT MASK '__:__',  " 時刻
** 2002/01/07 PSD H.Tanaka ADD ↓
*            149      TEXT-025, SY-PAGNO,
** 2002/01/07 PSD H.Tanaka ADD ↑
*            /79      TEXT-003,
*             84      GF_WRITE-WERKS,                    " 部門コード
*             90      GF_WRITE-NAME1,                    " 部門名
*            113      TEXT-004,
*            122      GF_WRITE-EKGRP,                    " 担当者コード
*            127      GF_WRITE-EKNAM.                    " 担当者名
*    WRITE:  /84(26)  SY-ULINE,
*            122(23)  SY-ULINE.
WRITE:    0      TEXT-002,                         " 帳票タイトル
10      SY-DATUM DD/MM/YY,                " 日付
19(6)   SY-UZEIT USING EDIT MASK '__:__', " 時刻
71      TEXT-001,
* 2002/01/07 PSD H.Tanaka ADD ↓
149      TEXT-025, SY-PAGNO.               " ページ
* 2002/01/07 PSD H.Tanaka ADD ↑
WRITE /.
WRITE:  /94      TEXT-003,                         " 部門
99      GF_WRITE-WERKS,                   " 部門コード
105      GF_WRITE-NAME1,                   " 部門名
128      TEXT-004,                         " グループ
137      GF_WRITE-EKGRP,                   " 担当者コード
142      GF_WRITE-EKNAM.                   " 担当者名
WRITE:  /99(26)  SY-ULINE,
137(23)  SY-ULINE.
*---MODIFY END   PSD T.SAITOH 2002/06/19 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/05/08 ---------------------------*
WRITE:/ TEXT-035.
*---APPEND END   PSD T.SAITOH 2002/05/08 ---------------------------*

FORMAT COLOR 1 ON.

WRITE:   /2      TEXT-005,
21      TEXT-006,
63      TEXT-007,
80      TEXT-008,
97      TEXT-009,
102      TEXT-010,
113      TEXT-024,
124      TEXT-011,
138      TEXT-012,
152      TEXT-013,
157      TEXT-014.

FORMAT COLOR OFF.

WHEN OTHERS.
WRITE:   42      TEXT-001,
79      TEXT-002,
88      SY-DATUM DD/MM/YY,                 " 日付
97(6)   SY-UZEIT USING EDIT MASK '__:__',  " 時刻
* 2002/01/07 PSD H.Tanaka ADD ↓
149      TEXT-025, SY-PAGNO.
SKIP 1.
*---APPEND START PSD T.SAITOH 2002/05/08 ---------------------------*
WRITE:/ TEXT-035.
*---APPEND END   PSD T.SAITOH 2002/05/08 ---------------------------*


FORMAT COLOR 1 ON.

L_KIGEN1 = P_KIGEN1.
L_KIGEN2 = P_KIGEN2.
L_KIGEN3 = P_KIGEN3.

WRITE:   /1      TEXT-028,
12      TEXT-029,
74      TEXT-030,
83(4)   L_KIGEN3,
88      TEXT-031,
97(4)   L_KIGEN2,
102      TEXT-032,
111(4)   L_KIGEN1,
138      TEXT-033,
160      ''.
FORMAT COLOR OFF.

ENDCASE.
WRITE:   /1(160) SY-ULINE.

************************************************************************
* Form
***********************************************************************
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_KIGEN
*&---------------------------------------------------------------------*
*       入力チェック処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_CHECK_KIGEN.
*---入力パラメータ停滞在庫期限設定条件
IF P_KIGEN1 => P_KIGEN2.
MESSAGE E009(Z1) WITH TEXT-016.
ELSEIF P_KIGEN2 => P_KIGEN3.
MESSAGE E009(Z1) WITH TEXT-016.
ENDIF.

* ↓APPEND 2002/02/01 PSD M.Arai プラント別合計対応
*--- 出力条件チェック
IF P_TYPE <> CNS_1 AND
P_TYPE <> CNS_2.
MESSAGE E009(Z1) WITH TEXT-027.
ENDIF.
* ↑

* ↓APPEND 2002/02/01 PSD M.Arai プラント必須対応
IF PR_WERKS IS INITIAL AND
SY-UCOMM+0(1) <> '%'.
MESSAGE E006(Z1) WITH TEXT-034.
ENDIF.


ENDFORM.                    " FRM_CHECK_KIGEN
*&---------------------------------------------------------------------*
*&      Form  FRM_INIT
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_INIT.

G_REPID = SY-REPID.   " プログラムＩＤ取得
G_DATA  = SY-DATUM.   " システム日付取得

** Add 2004.03.22 R.Hata >>>>>
SELECT SINGLE GENTAB
FROM AIND_STR2
INTO G_GENTAB
WHERE ARCHINDEX EQ 'ZMM_MATBEL_001'
.
** Add 2004.03.22 R.Hata <<<<<

ENDFORM.                    " FRM_INIT
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_DATA
*&---------------------------------------------------------------------*
*       品目評価情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_GET_DATA.
*--- 品目評価情報取得
SELECT A~MATNR A~LBKUM A~SALK3 A~VERPR A~PEINH A~SALK3
B~EKGRP C~EKNAM D~MAKTX E~MEINS
F~WERKS F~NAME1
INTO CORRESPONDING FIELDS OF TABLE GT_INFO
FROM ( ( ( ( MBEW AS A INNER JOIN MARC AS B
ON         A~MATNR  = B~MATNR
AND         A~BWKEY  = B~WERKS ) INNER JOIN T024  AS C
ON         B~EKGRP  = C~EKGRP ) INNER JOIN MAKT  AS D
ON         A~MATNR  = D~MATNR ) INNER JOIN MARA  AS E
ON         A~MATNR  = E~MATNR ) INNER JOIN T001W AS F
ON         A~BWKEY  = F~WERKS
WHERE A~BWKEY IN PR_WERKS
AND C~EKGRP IN PR_EKGRP
AND A~BWTAR = ''
* Add 2004.12.01 ---->
AND A~MATNR IN S_MATNR
* Add 2004.12.01 <---

.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.    " 対象データなし
MESSAGE S600(Z1) WITH TEXT-015.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MBEW
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_GET_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_MAKE_DATA
*&---------------------------------------------------------------------*
*       帳票出力用内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_MAKE_DATA.
*--- 帳票出力用内部テーブル設定処理
LOOP AT GT_INFO INTO GF_INFO.
* ↓DELETE 2002/02/01 PSD M.Arai 未引当在庫の設定方法変更対応
*    IF GF_INFO-LBKUM <> 0.    " 評価在庫合計＝０以外時
**--- 在庫区分『在庫』情報設定
*      PERFORM FRM_ZAIKO_DATA.
*    ENDIF.
* ↑
* Add 2003/01/17 >>>
CLEAR: GF_WRITE.
* Add 2003/01/17 <<<

*--- 在庫区分『個別』情報設定
PERFORM FRM_KOBETSU_DATA.
*--- 在庫区分『預託』情報設定
PERFORM FRM_YOTAKU_DATA.
*--- 在庫区分『支給』情報設定
PERFORM FRM_SHIKYU_DATA.
* ↓APPEND 2002/02/01 PSD M.Arai 未引当在庫の設定方法変更対応
IF GF_INFO-LBKUM <> 0.    " 評価在庫合計＝０以外時
*--- 在庫区分『在庫』情報設定
PERFORM FRM_ZAIKO_DATA.
ENDIF.
* ↑
ENDLOOP.

ENDFORM.                    " FRM_MAKE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_SET
*&---------------------------------------------------------------------*
*       共通項目設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATA_SET.
CLEAR: GF_WRITE-LBLAB,  " 帳票出力用構造在庫クリア
G_FLG_EXIT.      " ＬＯＯＰ終了フラグクリア
*--- 共通項目設定
MOVE-CORRESPONDING GF_INFO TO GF_WRITE.

*--- 在庫平均単価設定
* 2002/01/07 PSD H.Tanaka ADD ↓
*  PERFORM FRM_KINGAKU_HENKAN USING    'JPY'
*                                      GF_INFO-VERPR
*                             CHANGING GF_WRITE-PEINH.
* 2002/01/07 PSD H.Tanaka ADD ↑
* 2002/01/07 PSD H.Tanaka MOD ↓
*  GF_WRITE-PEINH = GF_INFO-VERPR / GF_INFO-PEINH.
*  GF_WRITE-PEINH = GF_WRITE-PEINH / GF_INFO-PEINH.
* 2002/01/07 PSD H.Tanaka MOD ↑
* ↓APPEND 2002/02/01 PSD M.Arai 在庫平均単価算出方法変更
PERFORM FRM_KINGAKU_HENKAN USING    'JPY'
GF_INFO-SALK3
CHANGING GF_WRITE-PEINH.
GF_WRITE-PEINH = GF_WRITE-PEINH / GF_INFO-LBKUM.
* ↑
ENDFORM.                    " FRM_DATA_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_ZAIKO_DATA
*&---------------------------------------------------------------------*
*       在庫区分「在庫」情報設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_ZAIKO_DATA.

*--- 共通項目設定
PERFORM FRM_DATA_SET.
*--- 在庫区分コード、在庫区分名設定
GF_WRITE-ZKBCD = CNS_2.
GF_WRITE-ZKBNM = TEXT-017.

*--- 最新入荷日設定
PERFORM FRM_ZAIKO_IDATE.

*--- 最新出荷日設定
PERFORM FRM_ZAIKO_ODATE.
IF GF_WRITE-ODATE IS INITIAL.   " 最新出荷日未取得時
IF GF_WRITE-IDATE IS INITIAL.
EXIT.
ENDIF.
ENDIF.

*--- 在庫日数設定
PERFORM FRM_ZAIKO_ZDATE.
IF GF_WRITE-ZDATE <= P_KIGEN1.
EXIT.
ENDIF.

*--- 在庫数量設定（引当）
PERFORM FRM_ZAIKO_LBLAB.

*--- 在庫数量設定（未引当）
* ↓ 2002/02/01 PSD M.Arai 在庫数量対応
*  GF_WRITE-NLBLB = GF_INFO-LBKUM - GF_WRITE-LBLAB.
* ↓ 2002/03/14 PSD M.ARAI 在庫数量不具合対応
*  GF_WRITE-NLBLB = GF_INFO-LBKUM - GF_WRITE-LBLAB - G_KULAB - G_LBLAB.
GF_WRITE-NLBLB = GF_INFO-LBKUM            " 評価在庫合計
* DEL 2004/01/05 引当済み品目一覧表示対応 START
*                 - GF_WRITE-LBLAB           " 引当在庫(在庫)
* DEL 2004/01/05 引当済み品目一覧表示対応 END
- G_KALAB                  " 個別在庫
- G_KULAB                  " 預託在庫
- G_LBLAB.                 " 仕入在庫

* Add 2003.06.04 >>>>>
IF GF_WRITE-NLBLB LE 0 .
EXIT .
ENDIF .
* Add 2003.06.04 <<<<<

* ↑ 2002/03/14 PSD M.ARAI 在庫数量不具合対応
* ↑ 2002/02/01 PSD M.Arai 在庫数量対応

* MOD 2004/02/10 引当済み品目一覧表示不具合対応 START
*--- 在庫金額設定
*GF_WRITE-MONEY = ( GF_WRITE-NLBLB + GF_WRITE-LBLAB ) * GF_WRITE-PEINH.
GF_WRITE-MONEY = GF_WRITE-NLBLB * GF_WRITE-PEINH.
* MOD 2004/02/10 引当済み品目一覧表示不具合対応 END
* ADD 2004/02/10 引当済み品目一覧表示不具合対応 START
*--- 在庫数量再設定(在庫数量より引当済み在庫を減算)
GF_WRITE-NLBLB = GF_WRITE-NLBLB - GF_WRITE-LBLAB.
* ADD 2004/02/10 引当済み品目一覧表示不具合対応 END
*--- 警告設定
PERFORM FRM_ZAIKO_ZWARN.

*--- 帳票用内部テーブル更新処理
APPEND GF_WRITE TO GT_WRITE.

ENDFORM.                    " FRM_ZAIKO_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_ZAIKO_IDATE
*&---------------------------------------------------------------------*
*       最新入荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_ZAIKO_IDATE.
* Add 2003.01.09 >>>>
DATA : L_IDATE TYPE D .
* Add 2003.01.09 <<<<
*--- 転記日付取得
SELECT  SINGLE MAX( B~BUDAT )
* Modify 2003.01.09 >>>
*    INTO  (GF_WRITE-IDATE)
INTO  (L_IDATE)
* Modify 2003.01.09 <<<
FROM   MSEG AS A INNER JOIN MKPF AS B
ON   A~MBLNR = B~MBLNR
AND   A~MJAHR = B~MJAHR
WHERE   A~MATNR = GF_INFO-MATNR
AND   A~WERKS = GF_INFO-WERKS
* ↓ append 2002/03/22 psd m.arai 『在庫』特殊在庫除外対応
AND   A~SOBKZ  <> 'O'
AND   A~SOBKZ  <> 'E'
AND   A~SOBKZ  <> 'W'
* ↑
AND   A~SHKZG = CNS_S
* MODIFY PSD K.ARAI 2002/05/28
AND  A~BWART IN (CNS_101 , CNS_122 ,
CNS_351 , CNS_501 ,
CNS_561 , CNS_541 ,
CNS_601 , CNS_631 ,
CNS_961).

*     AND ( A~BWART = CNS_101
*      OR   A~BWART = CNS_122
*      OR   A~BWART = CNS_351
*      OR   A~BWART = CNS_501
*      OR   A~BWART = CNS_561
*      OR   A~BWART = CNS_541
*      OR   A~BWART = CNS_601
*      OR   A~BWART = CNS_631
*      OR   A~BWART = CNS_961 ).
* MODIFY END

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
* Add 2003.01.09 >>>
IF GF_WRITE-IDATE LT L_IDATE .
MOVE :L_IDATE TO GF_WRITE-IDATE .
ENDIF .
* Add 2003.01.09 <<<
WHEN 4.        " 対象データなし
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.
** Add 2004.03.22 >>>>>
IF GF_WRITE-IDATE IS INITIAL .
PERFORM FRM_ZAIKO_IDATE_A .
ENDIF .
** Add 2004.03.22 <<<<<



ENDFORM.                    " FRM_ZAIKO_IDATE
*&---------------------------------------------------------------------*
*&      Form  FRM_ZAIKO_ODATE
*&---------------------------------------------------------------------*
*       最新出荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_ZAIKO_ODATE.
* Add 2003.01.09 >>>>
DATA : L_ODATE TYPE D .
* Add 2003.01.09 <<<<
*--- 転記日付取得
SELECT  SINGLE MAX( B~BUDAT )
* Modify 2003.01.09 >>>
*    INTO  (GF_WRITE-ODATE)
INTO  (L_ODATE)
* Modify 2003.01.09 <<<
FROM   MSEG AS A INNER JOIN MKPF AS B
ON   A~MBLNR = B~MBLNR
AND   A~MJAHR = B~MJAHR
WHERE   A~MATNR = GF_INFO-MATNR
AND   A~WERKS = GF_INFO-WERKS
* ↓ append 2002/03/22 psd m.arai 『在庫』特殊在庫除外対応
AND   A~SOBKZ  <> 'O'
AND   A~SOBKZ  <> 'E'
AND   A~SOBKZ  <> 'W'
* ↑
AND   A~SHKZG = CNS_H
* MODIFY PSD K.ARAI 2002/05/28
AND   A~BWART IN (CNS_101 , CNS_122,
CNS_351 , CNS_501,
CNS_561 , CNS_541,
CNS_601 , CNS_631,
CNS_961).

*     AND ( A~BWART = CNS_101
*      OR   A~BWART = CNS_122
*      OR   A~BWART = CNS_351
*      OR   A~BWART = CNS_501
*      OR   A~BWART = CNS_561
*      OR   A~BWART = CNS_541
*      OR   A~BWART = CNS_601
*      OR   A~BWART = CNS_631
*      OR   A~BWART = CNS_961 ).
* MODIFY END

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
* Add 2003.01.09 >>>
IF GF_WRITE-ODATE LT L_ODATE .
MOVE :L_ODATE TO GF_WRITE-ODATE .
ENDIF .
* Add 2003.01.09 <<<
WHEN 4.        " 対象データなし
** Add 2004.03.22 >>>>>
PERFORM FRM_ZAIKO_ODATE_A .
** Add 2004.03.22 <<<<<
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.
ENDFORM.                    " FRM_ZAIKO_ODATE
*&---------------------------------------------------------------------*
*&      Form  FRM_ZAIKO_ZDATE
*&---------------------------------------------------------------------*
*       在庫日数設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_ZAIKO_ZDATE.
*--- 在庫日数算出
IF GF_WRITE-IDATE < GF_WRITE-ODATE.  " 最新出荷日が最新日付時
GF_WRITE-ZDATE = G_DATA - GF_WRITE-ODATE.
ELSE.                                " 最新入荷日が最新日付時
GF_WRITE-ZDATE = G_DATA - GF_WRITE-IDATE.
ENDIF.

ENDFORM.                    " FRM_ZAIKO_ZDATE
*&---------------------------------------------------------------------*
*&      Form  FRM_ZAIKO_LBLAB
*&---------------------------------------------------------------------*
*       在庫数量（引当）設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_ZAIKO_LBLAB.
CLEAR G_KLMENG.

*--- 累積確認数量（基本単位）取得
PERFORM FRM_KLMENG_GET.
**--- 出荷数量実績（在庫単位）取得
PERFORM FRM_LFIMG_GET.
*--- 在庫数量（引当）設定
GF_WRITE-LBLAB = G_KLMENG - G_LGMNG.

CLEAR G_LGMNG.
ENDFORM.                    " FRM_ZAIKO_LBLAB
*&---------------------------------------------------------------------*
*&      Form  FRM_KLMENG_GET
*&---------------------------------------------------------------------*
*       累積確認数量（基本単位）取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_KLMENG_GET.
*--- 累積確認数量（基本単位）取得
SELECT A~VBELN A~POSNR A~KLMENG
INTO CORRESPONDING FIELDS OF TABLE GT_ZAIKOA
FROM ( ( VBAP AS A INNER JOIN VBAK AS B
ON     A~VBELN = B~VBELN ) INNER JOIN VBUK AS C
ON     A~VBELN = C~VBELN )
WHERE   A~MATNR = GF_INFO-MATNR
AND    A~WERKS = GF_INFO-WERKS
* ↓APPEND 2002/03/14 PSD M.ARAI 在庫数量不具合対応
AND    A~PSTYV <> CNS_TAB
* ↑
AND  ( B~AUART = CNS_KL
OR    B~AUART = CNS_KB
OR    B~AUART = CNS_TA
OR    B~AUART = CNS_Z00
OR    B~AUART = CNS_Z0R )
AND    C~VBOBJ <> CNS_K
AND    C~VBOBJ <> CNS_L
AND    C~GBSTK <> CNS_C.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
*--- 累積確認数量（基本単位）集計
LOOP AT GT_ZAIKOA INTO GF_ZAIKOA.

G_KLMENG = G_KLMENG + GF_ZAIKOA-KLMENG.
ENDLOOP.
WHEN 4.        " 対象データなし
G_KLMENG = 0.
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAP
SY-SUBRC.
ENDCASE.
ENDFORM.                    " FRM_KLMENG_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_LFIMG_GET
*&---------------------------------------------------------------------*
*       出荷数量実績（在庫単位）取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_LFIMG_GET.
*--- 出荷数量実績（在庫単位）取得
***MASUDA
IF GT_ZAIKOA[] IS INITIAL.
*  IF GT_ZAIKOA IS INITIAL.
EXIT.
ENDIF.

* Mod 2005.12.07 --->
*  SELECT A~LGMNG
SELECT A~VBELN A~POSNR A~LGMNG
* Mod 2005.12.07 <---
INTO CORRESPONDING FIELDS OF TABLE GT_ZAIKOB
FROM LIPS AS A INNER JOIN VBUP AS B
* ↓DELETE 2002/02/01 PSD M.Arai 在庫数量(引当)不具合対応
*      ON A~VBELN = B~VBELN
*     AND A~POSNR = B~POSNR
*   WHERE A~VGBEL = GF_INFO-MATNR
*    AND  A~VGPOS = GF_INFO-WERKS
* ↑
* ↓APPEND 2002/02/01 PSD M.Arai 在庫数量(引当)不具合対応
*       ON A~VGBEL = B~VBELN
*      AND A~VGPOS = B~POSNR
*** 変更 NDSC A.MASUDA 2004/06/30 ***
ON A~VBELN = B~VBELN
AND A~POSNR = B~POSNR
*** 変更 NDSC A.MASUDA 2004/06/30 ***
FOR ALL ENTRIES IN GT_ZAIKOA
WHERE A~VGBEL = GT_ZAIKOA-VBELN
AND  A~VGPOS = GF_ZAIKOA-POSNR
*    AND  A~VGPOS = GF_ZAIKOA-POSNR
* ↑
AND  B~GBSTA = CNS_C.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
*--- 出荷数量実績（在庫単位）集計
LOOP AT GT_ZAIKOB INTO GF_ZAIKOB.
G_LGMNG = G_LGMNG  + GF_ZAIKOB-LGMNG.
ENDLOOP.
WHEN 4.        " 対象データなし
G_LGMNG = 0.
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_LIPS
SY-SUBRC.
ENDCASE.
ENDFORM.                    " FRM_LFIMG_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_ZAIKO_MONEY
*&---------------------------------------------------------------------*
*       在庫金額設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_ZAIKO_MONEY.
*--- 在庫金額算出
GF_WRITE-MONEY = GF_WRITE-LBLAB * GF_WRITE-PEINH.

ENDFORM.                    " FRM_ZAIKO_MONEY
*&---------------------------------------------------------------------*
*&      Form  FRM_ZAIKO_ZWARN
*&---------------------------------------------------------------------*
*       警告設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_ZAIKO_ZWARN.

IF P_KIGEN3 < GF_WRITE-ZDATE.
GF_WRITE-ZWARN = CNS_***.     " 停滞３ヶ月
ELSEIF P_KIGEN2 < GF_WRITE-ZDATE.
IF GF_WRITE-ZDATE <= P_KIGEN3.
GF_WRITE-ZWARN = CNS_**.   " 停滞２ヶ月
ENDIF.
ELSEIF P_KIGEN1 < GF_WRITE-ZDATE.
IF GF_WRITE-ZDATE <= P_KIGEN2 .
GF_WRITE-ZWARN = CNS_*.    " 停滞１ヶ月
ENDIF.
ENDIF.

ENDFORM.                    " FRM_ZAIKO_ZWARN
*&---------------------------------------------------------------------*
*&      Form  FRM_KOBETSU_DATA
*&---------------------------------------------------------------------*
*       在庫区分『個別』情報設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_KOBETSU_DATA.
* ↓ APPEND 2002.03.14 PSD M.ARAI 在庫数量不具合対応
CLEAR: G_KALAB.
* ↑

*--- 『個別』情報取得
PERFORM FRM_KOBETSU_GET.

LOOP AT GT_KOBETSU INTO GF_KOBETSU.
*--- 共通項目設定
PERFORM FRM_DATA_SET.
*--- 在庫区分コード、在庫区分名設定
GF_WRITE-ZKBCD = CNS_1.
GF_WRITE-ZKBNM = TEXT-018.

* ↓ APPEND 2002.03.14 PSD M.ARAI 在庫数量不具合対応
*--- 個別在庫合計
G_KALAB = G_KALAB + GF_KOBETSU-KALAB.
* ↑

*--- 最新入荷日設定
PERFORM FRM_KOBETSU_IDATE.
*--- 最新出荷日設定
PERFORM FRM_KOBETSU_ODATE.
IF GF_WRITE-ODATE IS INITIAL.   " 最新出荷日未取得時
IF GF_WRITE-IDATE IS INITIAL.
CONTINUE.
ENDIF.
ENDIF.

*--- 在庫日数設定
PERFORM FRM_ZAIKO_ZDATE.
IF GF_WRITE-ZDATE <= P_KIGEN1.
CONTINUE.
ENDIF.
*--- 在庫数量（引当）、在庫数量（未引当）、
*--- 得意先／仕入先コード、得意先／仕入先名の設定
PERFORM FRM_KALAB_SET USING GF_KOBETSU-KALAB    " 在庫数量（引当）
GF_KOBETSU-KUNNR    " 得意先コード
GF_KOBETSU-LIFNM.   " 得意先
CHECK G_FLG_EXIT <> CNS_X.
*--- 在庫金額設定
PERFORM FRM_ZAIKO_MONEY.
*--- 警告設定
PERFORM FRM_ZAIKO_ZWARN.
*--- 帳票用内部テーブル更新処理
APPEND GF_WRITE TO GT_WRITE.
ENDLOOP.

ENDFORM.                    " FRM_KOBETSU_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_YOTAKU_DATA
*&---------------------------------------------------------------------*
*       在庫区分『預託』情報設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_YOTAKU_DATA.
*--- 『預託』情報取得
PERFORM FRM_YOTAKU_GET.
CLEAR G_KULAB.

LOOP AT GT_YOTAKU INTO GF_YOTAKU.
*--- 共通項目設定
PERFORM FRM_DATA_SET.
*--- 在庫区分コード、在庫区分名設定
GF_WRITE-ZKBCD = CNS_3.
GF_WRITE-ZKBNM = TEXT-019.

* ↓APPEND 2002/02/01 PSD M.Arai 在庫数量対応
G_KULAB = G_KULAB + GF_YOTAKU-KULAB.
* ↑

*--- 最新入荷日設定
PERFORM FRM_YOTAKU_IDATE.
*--- 最新出荷日設定
PERFORM FRM_YOTAKU_ODATE.
IF GF_WRITE-ODATE IS INITIAL.   " 最新出荷日未取得時
IF GF_WRITE-IDATE IS INITIAL.
CONTINUE.
ENDIF.
ENDIF.

*--- 在庫日数設定
PERFORM FRM_ZAIKO_ZDATE.
IF GF_WRITE-ZDATE <= P_KIGEN1.
CONTINUE.
ENDIF.

*--- 在庫数量（引当）、在庫数量（未引当）、
*--- 得意先／仕入先コード、得意先／仕入先名の設定
PERFORM FRM_KALAB_SET USING GF_YOTAKU-KULAB    " 在庫数量（引当）
GF_YOTAKU-KUNNR    " 得意先/仕入先コード
GF_YOTAKU-NAME1.   " 得意先/仕入先名
CHECK G_FLG_EXIT <> CNS_X.
*--- 在庫金額設定
PERFORM FRM_ZAIKO_MONEY.
*--- 警告設定
PERFORM FRM_ZAIKO_ZWARN.
*--- 帳票用内部テーブル更新処理
APPEND GF_WRITE TO GT_WRITE.

ENDLOOP.

ENDFORM.                    " FRM_YOTAKU_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_KOBETSU_GET
*&---------------------------------------------------------------------*
*       『個別』情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_KOBETSU_GET.
*--- 『個別』情報取得
SELECT A~VBELN A~POSNR A~KALAB
C~KUNNR C~NAME1
INTO TABLE GT_KOBETSU
FROM ( MSKA AS A INNER JOIN VBAK AS B
ON   A~VBELN = B~VBELN ) INNER JOIN KNA1 AS C
ON   B~KUNNR = C~KUNNR
WHERE   A~MATNR =  GF_INFO-MATNR
AND   A~WERKS =  GF_INFO-WERKS
AND   A~KALAB <> 0
AND   A~SOBKZ =  CNS_E.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
EXIT.
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSKA
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_KOBETSU_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_KOBETSU_IDATE
*&---------------------------------------------------------------------*
*       最新入荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_KOBETSU_IDATE.
*--- 転記日付取得
SELECT  SINGLE MAX( B~BUDAT )
INTO  (GF_WRITE-IDATE)
FROM   MSEG AS A INNER JOIN MKPF AS B
ON   A~MBLNR = B~MBLNR
AND   A~MJAHR = B~MJAHR
WHERE   A~MATNR = GF_INFO-MATNR
AND   A~WERKS = GF_INFO-WERKS
AND   A~KDAUF = GF_KOBETSU-VBELN
AND   A~KDPOS = GF_KOBETSU-POSNR
AND   A~SOBKZ = CNS_E
AND   A~SHKZG = CNS_S
* MODIFY PSD K.ARAI 2002/05/28
AND   A~BWART IN (CNS_101 , CNS_961,
CNS_601).
*     AND ( A~BWART = CNS_101
*      OR   A~BWART = CNS_961
*      OR   A~BWART = CNS_601 ) .
* MODIFY END
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
** Add 2004.03.22 >>>>>
PERFORM FRM_KOBETSU_IDATE_A .
** Add 2004.03.22 <<<<<
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.
** Add 2004.03.22 >>>>>
IF GF_WRITE-IDATE IS INITIAL .
PERFORM FRM_KOBETSU_IDATE_A .
ENDIF .
** Add 2004.03.22 <<<<<

ENDFORM.                    " FRM_KOBETSU_IDATE
*&---------------------------------------------------------------------*
*&      Form  FRM_KOBETSU_ODATE
*&---------------------------------------------------------------------*
*       最新出荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_KOBETSU_ODATE.
*--- 転記日付取得
SELECT  SINGLE MAX( B~BUDAT )
INTO  (GF_WRITE-ODATE)
FROM   MSEG AS A INNER JOIN MKPF AS B
ON   A~MBLNR = B~MBLNR
AND   A~MJAHR = B~MJAHR
WHERE   MATNR = GF_INFO-MATNR
AND   WERKS = GF_INFO-WERKS
AND   KDAUF = GF_KOBETSU-VBELN
AND   KDPOS = GF_KOBETSU-POSNR
AND   SOBKZ = CNS_E
AND   SHKZG = CNS_H
* MODIFY PSD K.ARAI 2002/05/28
AND   BWART IN (CNS_101 , CNS_961,
CNS_601) .
*     AND ( BWART = CNS_101
*      OR   BWART = CNS_961
*      OR   BWART = CNS_601 ) .
* MODIFY END
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
** Add 2004.03.22 >>>>>
PERFORM FRM_KOBETSU_ODATE_A .
** Add 2004.03.22 <<<<<
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_KOBETSU_ODATE
*&---------------------------------------------------------------------*
*&      Form  FRM_YOTAKU_GET
*&---------------------------------------------------------------------*
*       『預託』情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_YOTAKU_GET.
*--- 『預託』情報取得
SELECT A~KULAB
B~KUNNR B~NAME1
INTO CORRESPONDING FIELDS OF TABLE GT_YOTAKU
FROM MSKU AS A INNER JOIN KNA1 AS B
ON A~KUNNR = B~KUNNR
WHERE   A~MATNR =  GF_INFO-MATNR
AND   A~WERKS =  GF_INFO-WERKS
AND   A~KULAB <> 0
AND   A~SOBKZ =  CNS_W.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
EXIT.
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSKU
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_YOTAKU_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_YOTAKU_IDATE
*&---------------------------------------------------------------------*
*       最新入荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_YOTAKU_IDATE.
*--- 転記日付取得
SELECT  SINGLE MAX( B~BUDAT )
INTO  (GF_WRITE-IDATE)
FROM   MSEG AS A INNER JOIN MKPF AS B
ON   A~MBLNR = B~MBLNR
AND   A~MJAHR = B~MJAHR
WHERE   A~MATNR = GF_INFO-MATNR
AND   A~WERKS = GF_INFO-WERKS
AND   A~KUNNR = GF_YOTAKU-KUNNR
AND   A~SOBKZ = CNS_W
AND   A~SHKZG = CNS_S
* MODIFY PSD K.ARAI 2002/05/28
AND   A~BWART IN (CNS_631 , CNS_633).
*     AND ( A~BWART = CNS_631
*      OR   A~BWART = CNS_633 ) .
* MODIFY END
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
** Add 2004.03.22 >>>>>
PERFORM FRM_YOTAKU_IDATE_A .
** Add 2004.03.22 <<<<<
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.
** Add 2004.03.22 >>>>>
IF GF_WRITE-IDATE IS INITIAL .
PERFORM FRM_YOTAKU_IDATE_A .
ENDIF .
** Add 2004.03.22 <<<<<

ENDFORM.                    " FRM_YOTAKU_IDATE
*&---------------------------------------------------------------------*
*&      Form  FRM_YOTAKU_ODATE
*&---------------------------------------------------------------------*
*       最新出荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_YOTAKU_ODATE.
*--- 転記日付取得
SELECT  SINGLE MAX( B~BUDAT )
INTO  (GF_WRITE-ODATE)
FROM   MSEG AS A INNER JOIN MKPF AS B
ON   A~MBLNR = B~MBLNR
AND   A~MJAHR = B~MJAHR
WHERE   A~MATNR = GF_INFO-MATNR
AND   A~WERKS = GF_INFO-WERKS
AND   A~KUNNR = GF_YOTAKU-KUNNR
AND   A~SOBKZ = CNS_W
AND   A~SHKZG = CNS_H
* MODIFY PSD K.ARAI 2002/05/28
AND   A~BWART IN (CNS_631 , CNS_633) .
*     AND ( A~BWART = CNS_631
*      OR   A~BWART = CNS_633 ) .
* MODIFY END
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
** Add 2004.03.22 >>>>>
PERFORM FRM_YOTAKU_ODATE_A .
** Add 2004.03.22 <<<<<
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_YOTAKU_ODATE
*&---------------------------------------------------------------------*
*&      Form  FRM_SHIKYU_DATA
*&---------------------------------------------------------------------*
*       在庫区分『支給』情報設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_SHIKYU_DATA.
*--- 『支給』情報取得
PERFORM FRM_SHIKYU_GET.
CLEAR G_LBLAB.

LOOP AT GT_SHIRE INTO GF_SHIRE.
*--- 共通項目設定
PERFORM FRM_DATA_SET.
*--- 在庫区分コード、在庫区分名設定
* ↓ MODIFY 2002.03.04 PSD M.ARAI 在庫区分設定不具合対応
*    GF_WRITE-ZKBCD = CNS_3.
GF_WRITE-ZKBCD = CNS_4.
* ↑
GF_WRITE-ZKBNM = TEXT-020.

* ↓APPEND 2002/02/01 PSD M.Arai 在庫数量対応
G_LBLAB = G_LBLAB + GF_SHIRE-LBLAB.
* ↑

*--- 最新入荷日設定
PERFORM FRM_SHIKYU_IDATE.
*--- 最新出荷日設定
PERFORM FRM_SHIKYU_ODATE.
IF GF_WRITE-ODATE IS INITIAL.   " 最新出荷日未取得時
IF GF_WRITE-IDATE IS INITIAL.
CONTINUE.
ENDIF.
ENDIF.

*--- 在庫日数設定
PERFORM FRM_ZAIKO_ZDATE.
IF GF_WRITE-ZDATE <= P_KIGEN1.
CONTINUE.
ENDIF.
*--- 在庫数量（引当）、在庫数量（未引当）、
*--- 得意先／仕入先コード、得意先／仕入先名の設定
PERFORM FRM_KALAB_SET USING GF_SHIRE-LBLAB    " 在庫数量（引当）
GF_SHIRE-LIFNR    " 得意先/仕入先コード
GF_SHIRE-NAME1.   " 得意先/仕入先名
CHECK G_FLG_EXIT <> CNS_X.
*--- 在庫金額設定
PERFORM FRM_ZAIKO_MONEY.
*--- 警告設定
PERFORM FRM_ZAIKO_ZWARN.
*--- 帳票用内部テーブル更新処理
APPEND GF_WRITE TO GT_WRITE.

ENDLOOP.

ENDFORM.                    " FRM_SHIKYU_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_SHIKYU_GET
*&---------------------------------------------------------------------*
*       『支給』情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_SHIKYU_GET.
*--- 『支給』情報取得
SELECT A~LBLAB
B~LIFNR B~NAME1
INTO CORRESPONDING FIELDS OF TABLE GT_SHIRE
FROM MSLB AS A INNER JOIN LFA1 AS B
ON A~LIFNR =  B~LIFNR
WHERE A~MATNR =  GF_INFO-MATNR
AND A~WERKS =  GF_INFO-WERKS
AND A~LBLAB <> 0
AND A~SOBKZ =  CNS_O.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
EXIT.
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSLB
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SHIKYU_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_SHIKYU_IDATE
*&---------------------------------------------------------------------*
*       最新入荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_SHIKYU_IDATE.
*--- 転記日付取得
SELECT  SINGLE MAX( B~BUDAT )
INTO  (GF_WRITE-IDATE)
FROM   MSEG AS A INNER JOIN MKPF AS B
ON   A~MBLNR = B~MBLNR
AND   A~MJAHR = B~MJAHR
WHERE   A~MATNR = GF_INFO-MATNR
AND   A~WERKS = GF_INFO-WERKS
AND   A~LIFNR = GF_SHIRE-LIFNR
AND   A~SOBKZ = CNS_O
AND   A~SHKZG = CNS_S
* MODIFY PSD K.ARAI 2002/05/28
AND   A~BWART IN (CNS_541 , CNS_543) .
*     AND ( A~BWART = CNS_541
*      OR   A~BWART = CNS_543 ) .
* MODIFY END
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
** Add 2004.03.22 >>>>>
PERFORM FRM_SHIKYU_IDATE_A .
** Add 2004.03.22 <<<<<
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.
** Add 2004.03.22 >>>>>
IF GF_WRITE-IDATE IS INITIAL .
PERFORM FRM_SHIKYU_IDATE_A .
ENDIF .
** Add 2004.03.22 <<<<<

ENDFORM.                    " FRM_SHIKYU_IDATE
*&---------------------------------------------------------------------*
*&      Form  FRM_SHIKYU_ODATE
*&---------------------------------------------------------------------*
*       最新出荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_SHIKYU_ODATE.
*--- 転記日付取得
SELECT  SINGLE MAX( B~BUDAT )
INTO  (GF_WRITE-ODATE)
FROM   MSEG AS A INNER JOIN MKPF AS B
ON   A~MBLNR = B~MBLNR
AND   A~MJAHR = B~MJAHR
WHERE   A~MATNR = GF_INFO-MATNR
AND   A~WERKS = GF_INFO-WERKS
AND   A~LIFNR = GF_SHIRE-LIFNR
AND   A~SOBKZ = CNS_O
AND   A~SHKZG = CNS_H
* MODIFY PSD K.ARAI 2002/05/28
AND   A~BWART IN (CNS_541 , CNS_543).
*     AND ( A~BWART = CNS_541
*      OR   A~BWART = CNS_543 ) .
* MODIFY END
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
** Add 2004.03.22 >>>>>
PERFORM FRM_SHIKYU_ODATE_A .
** Add 2004.03.22 <<<<<
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SHIKYU_ODATE
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_CHECK
*&---------------------------------------------------------------------*
*       帳票データ存在チェック処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_WRITE_CHECK.
*--- 帳票出力用内部ＴＢＬデータ存在チェック
IF GT_WRITE IS INITIAL.
MESSAGE S600(Z1) WITH TEXT-021.
STOP.
ENDIF.

ENDFORM.                    " FRM_WRITE_CHECK
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*       帳票出力処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_WRITE_DATA.
DATA: L_BACK_WERKS TYPE TYP_WRITE-WERKS,    " プラント
L_BACK_EKGRP TYPE TYP_WRITE-EKGRP,    " 購買グループ
L_BACK_MATNR TYPE TYP_WRITE-MATNR,    " 品目コード
L_BACK_NAME1 TYPE TYP_WRITE-NAME1.    " プラント名

*--- ソート
SORT GT_WRITE BY WERKS      " 部門コード
EKGRP      " 購買グループ
MATNR      " 品目コード
ZKBCD      " 在庫区分コード
LIFNR.     " 得意先/仕入先コード

LOOP AT GT_WRITE INTO GF_WRITE.
* ↓ APPEND 2002/02/01 PSD M.Arai プラント別合計対応
IF P_TYPE = CNS_1.

* ↓ APPEND 2002/03/20 PSD M.ARAI 改ページ不具合対応
IF GF_WRITE-WERKS <> L_BACK_WERKS OR " プラント
GF_WRITE-EKGRP <> L_BACK_EKGRP.   " 購買グループ

IF SY-TABIX <> 1.  " 第1行出力以前は合計表示しない
PERFORM FRM_TOTAL_WRITE.     "合計出力
PERFORM FRM_TOTAL_CLEAR.     "合計値クリア
NEW-PAGE.
ENDIF.

ENDIF.
* ↑
*--- ブレイク
IF GF_WRITE-WERKS <> L_BACK_WERKS OR " プラント
GF_WRITE-EKGRP <> L_BACK_EKGRP OR " 購買グループ
GF_WRITE-MATNR <> L_BACK_MATNR.   " 品目コード
*--- 明細ヘッダ出力処理
PERFORM FRM_HEADER_WRITE.
ENDIF.
*--- 明細出力処理
PERFORM FRM_MEISAI_WRITE.
ELSE.
IF SY-TABIX <> 1 AND
GF_WRITE-WERKS <> L_BACK_WERKS.  "プラント
*---- プラント別合計行表示
PERFORM FRM_TOTAL_WERKS USING L_BACK_WERKS
L_BACK_NAME1.
ENDIF.
ENDIF.
* ↑

*--- 合計計算処理
PERFORM FRM_TOTAL_COUNT.
*--- ブレイク項目退避
L_BACK_WERKS = GF_WRITE-WERKS.    " プラント
L_BACK_EKGRP = GF_WRITE-EKGRP.    " 購買グループ
L_BACK_MATNR = GF_WRITE-MATNR.    " 品目コード
* ↓APPEND 2002/02/01 PSD M.Arai プラント別合計対応
L_BACK_NAME1 = GF_WRITE-NAME1.    " プラント名
* ↑
ENDLOOP.

IF P_TYPE <> CNS_1.
PERFORM FRM_TOTAL_WERKS USING L_BACK_WERKS
L_BACK_NAME1.
ENDIF.

*--- 合計行出力処理
PERFORM FRM_TOTAL_WRITE.

ENDFORM.                    " FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_HEADER_WRITE
*&---------------------------------------------------------------------*
*       明細ヘッダ出力処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_HEADER_WRITE.
*--- ブレイク時
FORMAT COLOR 7 INTENSIFIED OFF.
WRITE: /2 GF_WRITE-MATNR,
21 GF_WRITE-MAKTX.
FORMAT COLOR OFF.

ENDFORM.                    " FRM_HEADER_WRITE
*&---------------------------------------------------------------------*
*&      Form  FRM_MEISAI_WRITE
*&---------------------------------------------------------------------*
*       明細出力処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_MEISAI_WRITE.

FORMAT COLOR 2 INTENSIFIED OFF.
WRITE:  /2 GF_WRITE-ZKBNM,                       " 在庫区分名
12(8) GF_WRITE-LIFNR,                    " 得意先/仕入先コード
21(39) GF_WRITE-LIFNM,                   " 得意先/仕入先名
65(11) GF_WRITE-LBLAB DECIMALS 2,        " 在庫数量（引当）
84(11) GF_WRITE-NLBLB DECIMALS 2,        " 在庫数量（未引当）
97(3)  GF_WRITE-MEINS,                   " 単位
102 GF_WRITE-IDATE DD/MM/YY,              " 最新入荷日
113 GF_WRITE-ODATE DD/MM/YY,              " 最新出荷日
124(13) GF_WRITE-PEINH,                   " 在庫平均単価
138(13) GF_WRITE-MONEY,                   " 在庫金額
152(4) GF_WRITE-ZDATE NO-ZERO RIGHT-JUSTIFIED, " 在庫日数
157(3) GF_WRITE-ZWARN RIGHT-JUSTIFIED.    " 警告
FORMAT COLOR OFF.

ENDFORM.                    " FRM_MEISAI_WRITE
*&---------------------------------------------------------------------*
*&      Form  FRM_TOTAL_COUNT
*&---------------------------------------------------------------------*
*       合計計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_TOTAL_COUNT.
*--- 在庫金額合計算出
CASE GF_WRITE-ZWARN.
WHEN CNS_*.     " 停滞１ヶ月合計
G_ONEMON_TOTAL = G_ONEMON_TOTAL + GF_WRITE-MONEY.
* ↓APPEND 200/02/01 PSD M.Arai プラント別合計行出力
G_ONEMON_WERKS = G_ONEMON_WERKS + GF_WRITE-MONEY.
* ↑
WHEN CNS_**.    " 停滞２ヶ月合計
G_TWOMON_TOTAL = G_TWOMON_TOTAL + GF_WRITE-MONEY.
* ↓APPEND 200/02/01 PSD M.Arai プラント別合計行出力
G_TWOMON_WERKS = G_TWOMON_WERKS + GF_WRITE-MONEY.
* ↑
WHEN CNS_***.   " 停滞３ヶ月合計
G_TREMON_TOTAL = G_TREMON_TOTAL + GF_WRITE-MONEY.
* ↓APPEND 200/02/01 PSD M.Arai プラント別合計行出力
G_TREMON_WERKS = G_TREMON_WERKS + GF_WRITE-MONEY.
* ↑
ENDCASE.

ENDFORM.                    " FRM_TOTAL_COUNT
*&---------------------------------------------------------------------*
*&      Form  FRM_TOTAL_WRITE
*&---------------------------------------------------------------------*
*       合計行出力処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_TOTAL_WRITE.

*--- 総合計算出
G_ALL_TOTAL = G_ONEMON_TOTAL + G_TWOMON_TOTAL + G_TREMON_TOTAL.

SKIP.
FORMAT COLOR 3 ON INTENSIFIED.
WRITE: /83 CNS_***,
98 CNS_**,
113 CNS_*,
* 2002/01/07 PSD H.Tanaka ADD ↓
114 '                                                     ',
* 2002/01/07 PSD H.Tanaka ADD ↑
/68(4)  TEXT-022,
73(14) G_TREMON_TOTAL,  " 停滞３ヶ月合計
87(14) G_TWOMON_TOTAL,  " 停滞２ヶ月合計
101(14) G_ONEMON_TOTAL,  " 停滞１ヶ月合計
129     TEXT-023,
134(17) G_ALL_TOTAL,     " 総合計
* 2002/01/07 PSD H.Tanaka ADD ↓
151     '          '.
* 2002/01/07 PSD H.Tanaka ADD ↑
FORMAT COLOR OFF.

ENDFORM.                    " FRM_TOTAL_WRITE
*&---------------------------------------------------------------------*
*&      Form  FRM_KALAB_SET
*&---------------------------------------------------------------------*
*       在庫数量（引当）、在庫数量（未引当）、
*       得意先／仕入先コード、得意先／仕入先名の設定
*----------------------------------------------------------------------*
*      -->P_KALAB  利用可能評価在庫
*      -->P_KUNNR  得意先／仕入先コード
*      -->P_LIFNM  得意先／仕入先名
*----------------------------------------------------------------------*
FORM FRM_KALAB_SET USING    P_KALAB
P_KUNNR
P_LIFNM.
DATA L_KUNNR LIKE GF_WRITE-LIFNR.

IF P_KALAB = 0.
G_FLG_EXIT = CNS_X.
ELSE.
*--- 得意先／仕入先コード先頭０カット
CALL FUNCTION 'Z_MZERO_DELETE'
EXPORTING
CHANGE_STRING = P_KUNNR
IMPORTING
STRING        = L_KUNNR.
GF_WRITE-LBLAB = P_KALAB.   " 利用可能評価在庫
GF_WRITE-NLBLB = CNS_ZERO.  " ０固定
GF_WRITE-LIFNR = P_KUNNR.   " 得意先/仕入先コード
GF_WRITE-LIFNM = P_LIFNM.   " 得意先/仕入先名
ENDIF.

ENDFORM.                    " FRM_KALAB_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*       金額変換処理
*----------------------------------------------------------------------*
*      -->P_TSUKACD  通貨コード
*      -->P_KINGAKU  変換前金額
*      <--P_HENKAN   変換後金額
*----------------------------------------------------------------------*
FORM FRM_KINGAKU_HENKAN USING    P_TSUKACD
P_KINGAKU
CHANGING P_HENKAN.
DATA L_IDOC_AMOUNT(255) TYPE C.
*--- 汎用モジュール金額変換モジュール
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
EXPORTING
CURRENCY    = P_TSUKACD
SAP_AMOUNT  = P_KINGAKU
IMPORTING
IDOC_AMOUNT = L_IDOC_AMOUNT
EXCEPTIONS
OTHERS      = 1.
IF SY-SUBRC = 0.
P_HENKAN = L_IDOC_AMOUNT.
ENDIF.

ENDFORM.                    " FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*&      Form  FRM_TOTAL_WERKS
*&---------------------------------------------------------------------*
*       プラント別合計行表示
*----------------------------------------------------------------------*
FORM FRM_TOTAL_WERKS USING VALUE(P_WERKS)
VALUE(P_NAME1).

*--- 総合計算出
G_ALL_TOTAL = G_ONEMON_WERKS + G_TWOMON_WERKS + G_TREMON_WERKS.

SKIP.
FORMAT COLOR 3 ON INTENSIFIED OFF.
WRITE: /1(4)   P_WERKS,
12(30)  P_NAME1,

73(14) G_TREMON_WERKS,  " 停滞３ヶ月合計
87(14) G_TWOMON_WERKS,  " 停滞２ヶ月合計
101(14) G_ONEMON_WERKS,  " 停滞１ヶ月合計
134(17) G_ALL_TOTAL,     " 総合計
151     '          '.
FORMAT COLOR OFF.

CLEAR: G_TREMON_WERKS,
G_TWOMON_WERKS,
G_ONEMON_WERKS.

ENDFORM.                    " FRM_TOTAL_WERKS
*&---------------------------------------------------------------------*
*&      Form  FRM_TOTAL_CLEAR
*&---------------------------------------------------------------------*
*       合計値クリア
*----------------------------------------------------------------------*
FORM FRM_TOTAL_CLEAR.

CLEAR: G_ONEMON_TOTAL,
G_TWOMON_TOTAL,
G_TREMON_TOTAL.

ENDFORM.                    " FRM_TOTAL_CLEAR
*&---------------------------------------------------------------------*
*&      Form  FRM_CHK_FILE
*&---------------------------------------------------------------------*
*       2003/07/18 ADD
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_CHK_FILE.
* Mod ES-UP 2012/08/15 -->
*    CALL FUNCTION 'WS_FILENAME_GET'
*      EXPORTING
**       DEF_FILENAME           = ' '
**       DEF_PATH               = ' '
*       MASK                   = '*.*,ALL Files,*.*. '
*       MODE                   = 'S'
*       TITLE                  = '停滞在庫一覧表_TEST'
*      IMPORTING
*       FILENAME               = P_FILE
**       RC                     =
*      EXCEPTIONS
*        OTHERS                 = 5
*              .
*    IF SY-SUBRC <> 0.
** MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*    ENDIF.
** ↑
DATA: L_FILENAME    TYPE STRING,
L_PATH        TYPE STRING,
L_FULLPATH    TYPE STRING,
L_USER_ACTION TYPE I.

CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG(
EXPORTING
WINDOW_TITLE         = '停滞在庫一覧表_TEST'
*      DEFAULT_EXTENSION    = DEFAULT_EXTENSION
*      DEFAULT_FILE_NAME    = DEFAULT_FILE_NAME
*      WITH_ENCODING        = WITH_ENCODING
*      FILE_FILTER          = FILE_FILTER
*      INITIAL_DIRECTORY    = INITIAL_DIRECTORY
*      PROMPT_ON_OVERWRITE  = 'X'
CHANGING
FILENAME             = L_FILENAME
PATH                 = L_PATH
FULLPATH             = L_FULLPATH
USER_ACTION          = L_USER_ACTION
*      FILE_ENCODING        = FILE_ENCODING
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4 ).
IF SY-SUBRC = 0
AND L_USER_ACTION = CL_GUI_FRONTEND_SERVICES=>ACTION_OK.
P_FILE = L_FULLPATH.
ENDIF.
* Mod ES-UP 2012/08/15 <--
ENDFORM.                    " FRM_CHK_FILE
*&---------------------------------------------------------------------*
*&      Form  FRM_CHAR_EDIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_CHAR_EDIT.
LOOP AT GT_WRITE INTO GF_WRITE.
MOVE : GF_WRITE-WERKS TO GF_CHAR-WERKS,    "CHAR型の項目
GF_WRITE-NAME1 TO GF_CHAR-NAME1,
GF_WRITE-EKGRP TO GF_CHAR-EKGRP,
GF_WRITE-EKNAM TO GF_CHAR-EKNAM,
GF_WRITE-MATNR TO GF_CHAR-MATNR,
GF_WRITE-MAKTX TO GF_CHAR-MAKTX,
GF_WRITE-ZKBCD TO GF_CHAR-ZKBCD,
GF_WRITE-ZKBNM TO GF_CHAR-ZKBNM,
GF_WRITE-LIFNR TO GF_CHAR-LIFNR,
GF_WRITE-LIFNM TO GF_CHAR-LIFNM.

WRITE : GF_WRITE-LBLAB TO GF_CHAR-LBLAB,    "CHAR以外
GF_WRITE-NLBLB TO GF_CHAR-NLBLB,
GF_WRITE-MEINS TO GF_CHAR-MEINS,
GF_WRITE-IDATE TO GF_CHAR-IDATE,
GF_WRITE-ODATE TO GF_CHAR-ODATE,
GF_WRITE-PEINH TO GF_CHAR-PEINH,
GF_WRITE-MONEY TO GF_CHAR-MONEY,
GF_WRITE-ZDATE TO GF_CHAR-ZDATE,
GF_WRITE-ZWARN TO GF_CHAR-ZWARN.

PERFORM FRM_CSV_EDIT USING    GF_CHAR
CHANGING GF_CSV.       "CONCATENATE
APPEND  GF_CSV TO GT_CSV.
CLEAR   GF_CSV.
ENDLOOP.

ENDFORM.                    " FRM_CHAR_EDIT
*&---------------------------------------------------------------------*
*&      Form  FRM_CSV_EDIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GF_CHAR  text
*      <--P_GF_CSV  text
*----------------------------------------------------------------------*
FORM FRM_CSV_EDIT USING    P_CHAR TYPE TY_CHAR
CHANGING P_CSV.

CONCATENATE  P_CHAR-WERKS
P_CHAR-NAME1
P_CHAR-EKGRP
P_CHAR-EKNAM
P_CHAR-MATNR
P_CHAR-MAKTX
P_CHAR-ZKBCD
P_CHAR-ZKBNM
P_CHAR-LIFNR
P_CHAR-LIFNM
P_CHAR-LBLAB
P_CHAR-NLBLB
P_CHAR-MEINS
P_CHAR-IDATE
P_CHAR-ODATE
P_CHAR-PEINH
P_CHAR-MONEY
P_CHAR-ZDATE
P_CHAR-ZWARN
INTO   P_CSV
* Mod ES-UP 2012/08/15 -->
*    SEPARATED BY CNS_CSV.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/15 <--
ENDFORM.                    " FRM_CSV_EDIT
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_DL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATA_DL.
* Mod ES-UP 2012/08/15 -->
*  CALL FUNCTION 'WS_DOWNLOAD'
*   EXPORTING
*     FILENAME                      = P_FILE
*     FILETYPE                      = 'ASC'
*     MODE                          = ' '
**   IMPORTING
**    FILELENGTH                    =
*   TABLES
*     DATA_TAB                      = GT_CSV
**    FIELDNAMES                    =
*   EXCEPTIONS
*     FILE_OPEN_ERROR               = 1
*     FILE_WRITE_ERROR              = 2
*     INVALID_FILESIZE              = 3
*     INVALID_TYPE                  = 4
*     NO_BATCH                      = 5
*     UNKNOWN_ERROR                 = 6
*     INVALID_TABLE_WIDTH           = 7
*     GUI_REFUSE_FILETRANSFER       = 8
*     CUSTOMER_ERROR                = 9
*     OTHERS                        = 10
*            .
DATA: L_FILENAME TYPE STRING,
L_CODEPAGE TYPE ABAP_ENCODING.
**** START ADD 2015/02/04 ISID18 ****
DATA L_SAPCODEPAGE TYPE STRING.
L_SAPCODEPAGE = G_OUTPUT_CP.
**** END ADD 2015/02/04 ISID18 ****
L_FILENAME = P_FILE.
****START UPD 2014/8/29 ISID18****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
**** START UPD 2015/02/04 ISID18 ****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_UTF ).
IF L_SAPCODEPAGE IS NOT INITIAL.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( L_SAPCODEPAGE ).
ENDIF.
**** END UPD 2015/02/04 ISID18 ****
****END UPD 2014/08/29 ISID18****
CL_GUI_FRONTEND_SERVICES=>GUI_DOWNLOAD(
EXPORTING
*      BIN_FILESIZE              = BIN_FILESIZE
FILENAME                  = L_FILENAME
FILETYPE                  = 'ASC'
*      APPEND                    = SPACE
*      WRITE_FIELD_SEPARATOR     = ABAP_TRUE
*      HEADER                    = '00'
*      TRUNC_TRAILING_BLANKS     = SPACE
*      WRITE_LF                  = 'X'
*      COL_SELECT                = SPACE
*      COL_SELECT_MASK           = SPACE
*      DAT_MODE                  = SPACE
*      CONFIRM_OVERWRITE         = SPACE
*      NO_AUTH_CHECK             = SPACE
CODEPAGE                  = L_CODEPAGE
*      IGNORE_CERR               = ABAP_TRUE
*      REPLACEMENT               = '#'
*      WRITE_BOM                 = SPACE
*      TRUNC_TRAILING_BLANKS_EOL = 'X'
*      WK1_N_FORMAT              = SPACE
*      WK1_N_SIZE                = SPACE
*      WK1_T_FORMAT              = SPACE
*      WK1_T_SIZE                = SPACE
*      SHOW_TRANSFER_STATUS      = 'X'
*      FIELDNAMES                = FIELDNAMES
*      WRITE_LF_AFTER_LAST_LINE  = 'X'
*    IMPORTING
*      FILELENGTH                = FILELENGTH
CHANGING
DATA_TAB                  = GT_CSV
EXCEPTIONS
FILE_WRITE_ERROR          = 1
NO_BATCH                  = 2
GUI_REFUSE_FILETRANSFER   = 3
INVALID_TYPE              = 4
NO_AUTHORITY              = 5
UNKNOWN_ERROR             = 6
HEADER_NOT_ALLOWED        = 7
SEPARATOR_NOT_ALLOWED     = 8
FILESIZE_NOT_ALLOWED      = 9
HEADER_TOO_LONG           = 10
DP_ERROR_CREATE           = 11
DP_ERROR_SEND             = 12
DP_ERROR_WRITE            = 13
UNKNOWN_DP_ERROR          = 14
ACCESS_DENIED             = 15
DP_OUT_OF_MEMORY          = 16
DISK_FULL                 = 17
DP_TIMEOUT                = 18
FILE_NOT_FOUND            = 19
DATAPROVIDER_EXCEPTION    = 20
CONTROL_FLUSH_ERROR       = 21
NOT_SUPPORTED_BY_GUI      = 22
ERROR_NO_GUI              = 23
OTHERS                    = 24 ).
* Mod ES-UP 2012/08/15 <--
IF SY-SUBRC = 0.
MESSAGE   S400(Z1) WITH 'ダウンロードに成功しました'.
ELSE.
MESSAGE  E400(Z1) WITH 'ダウンロードできませんでした'.
ENDIF.

ENDFORM.                    " FRM_DATA_DL


* Add 2003.09.02 >>>>>
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_TRANSFER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATA_TRANSFER .

**** START ADD 2015/02/04 ISID18 ****
DATA L_SAPCODEPAGE TYPE STRING.
DATA L_CODEPAGE    TYPE ABAP_ENCODING.
L_SAPCODEPAGE = G_OUTPUT_CP.
IF L_SAPCODEPAGE IS NOT INITIAL.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( L_SAPCODEPAGE ).
ENDIF.
IF G_FLGUTF8 IS INITIAL.
TRY.
OPEN DATASET P_FILE FOR OUTPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
CATCH CX_SY_CODEPAGE_CONVERTER_INIT.
SY-SUBRC = 8.
ENDTRY.
ELSE.
**** END ADD 2015/02/04 ISID18 ****

* Mod ES-UP 2012/08/15 -->
*  Open DataSet P_FILE For Output In Text Mode .
****START DEL 2014/08/29 ISID18****
*  DATA L_CODEPAGE TYPE ABAP_ENCODING.
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
****END DEL 2014/08/29 ISID18****

OPEN DATASET P_FILE FOR OUTPUT
**** START UPD 2014/08/31 ISID19 ****
*      IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IN TEXT MODE ENCODING UTF-8
**** END UPD 2014/08/31 ISID19 ****
IGNORING CONVERSION ERRORS.
**** START ADD 2015/02/04 ISID18 ****
ENDIF.
**** END ADD 2015/02/04 ISID18 ****

* Mod ES-UP 2012/08/15 <--
IF SY-SUBRC NE 0 .
MESSAGE S400(Z1) WITH 'ファイルオープンエラー' .
STOP .
ENDIF .
CLEAR : GF_CSV .
LOOP AT GT_CSV INTO GF_CSV .
TRANSFER GF_CSV TO P_FILE .
CLEAR : GF_CSV .
ENDLOOP .
IF SY-SUBRC EQ 0 .
MESSAGE S400(Z1) WITH 'ダウンロードに成功しました'.
ELSE.
MESSAGE E400(Z1) WITH 'ダウンロードできませんでした'.
ENDIF.
ENDFORM .                    "FRM_DATA_TRANSFER
* Add 2003.09.02 <<<<<

** Add 2004.03.22 >>>>>
*&---------------------------------------------------------------------*
*&      Form  FRM_ZAIKO_IDATE
*&---------------------------------------------------------------------*
*       最新入荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_ZAIKO_IDATE_A.
DATA : L_IDATE TYPE D .
*--- 転記日付取得
SELECT  SINGLE MAX( BUDAT )
INTO  (L_IDATE)
FROM   (G_GENTAB)
WHERE   MATNR = GF_INFO-MATNR
AND   WERKS = GF_INFO-WERKS
AND   SOBKZ  <> 'O'
AND   SOBKZ  <> 'E'
AND   SOBKZ  <> 'W'
AND   SHKZG = CNS_S
AND   BWART IN (CNS_101 , CNS_122 ,
CNS_351 , CNS_501 ,
CNS_561 , CNS_541 ,
CNS_601 , CNS_631 ,
CNS_961).

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
IF GF_WRITE-IDATE LT L_IDATE .
MOVE :L_IDATE TO GF_WRITE-IDATE .
ENDIF .
WHEN 4.        " 対象データなし
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_ZAIKO_IDATE
*&---------------------------------------------------------------------*
*&      Form  FRM_ZAIKO_ODATE
*&---------------------------------------------------------------------*
*       最新出荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_ZAIKO_ODATE_A.
DATA : L_ODATE TYPE D .
*--- 転記日付取得
SELECT  SINGLE MAX( BUDAT )
INTO  (L_ODATE)
FROM   (G_GENTAB)
WHERE   MATNR = GF_INFO-MATNR
AND   WERKS = GF_INFO-WERKS
AND   SOBKZ  <> 'O'
AND   SOBKZ  <> 'E'
AND   SOBKZ  <> 'W'
AND   SHKZG = CNS_H
AND   BWART IN (CNS_101 , CNS_122,
CNS_351 , CNS_501,
CNS_561 , CNS_541,
CNS_601 , CNS_631,
CNS_961).

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
IF GF_WRITE-ODATE LT L_ODATE .
MOVE :L_ODATE TO GF_WRITE-ODATE .
ENDIF .
WHEN 4.        " 対象データなし
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.
ENDFORM.                    "FRM_ZAIKO_ODATE_A
*&---------------------------------------------------------------------*
*&      Form  FRM_KOBETSU_IDATE
*&---------------------------------------------------------------------*
*       最新入荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_KOBETSU_IDATE_A.
*--- 転記日付取得
SELECT  SINGLE MAX( BUDAT )
INTO  (GF_WRITE-IDATE)
FROM  (G_GENTAB)
WHERE   MATNR = GF_INFO-MATNR
AND   WERKS = GF_INFO-WERKS
AND   KDAUF = GF_KOBETSU-VBELN
AND   KDPOS = GF_KOBETSU-POSNR
AND   SOBKZ = CNS_E
AND   SHKZG = CNS_S
AND   BWART IN (CNS_101 , CNS_961,
CNS_601).
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_KOBETSU_IDATE
*&---------------------------------------------------------------------*
*&      Form  FRM_KOBETSU_ODATE
*&---------------------------------------------------------------------*
*       最新出荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_KOBETSU_ODATE_A.
*--- 転記日付取得
SELECT  SINGLE MAX( BUDAT )
INTO  (GF_WRITE-ODATE)
FROM   (G_GENTAB)
WHERE   MATNR = GF_INFO-MATNR
AND   WERKS = GF_INFO-WERKS
AND   KDAUF = GF_KOBETSU-VBELN
AND   KDPOS = GF_KOBETSU-POSNR
AND   SOBKZ = CNS_E
AND   SHKZG = CNS_H
AND   BWART IN (CNS_101 , CNS_961,
CNS_601) .
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_KOBETSU_ODATE

*&---------------------------------------------------------------------*
*&      Form  FRM_YOTAKU_IDATE
*&---------------------------------------------------------------------*
*       最新入荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_YOTAKU_IDATE_A.
*--- 転記日付取得
SELECT  SINGLE MAX( BUDAT )
INTO  (GF_WRITE-IDATE)
FROM  (G_GENTAB)
WHERE   MATNR = GF_INFO-MATNR
AND   WERKS = GF_INFO-WERKS
AND   KUNNR = GF_YOTAKU-KUNNR
AND   SOBKZ = CNS_W
AND   SHKZG = CNS_S
AND   BWART IN (CNS_631 , CNS_633).
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_YOTAKU_IDATE
*&---------------------------------------------------------------------*
*&      Form  FRM_YOTAKU_ODATE
*&---------------------------------------------------------------------*
*       最新出荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_YOTAKU_ODATE_A.
*--- 転記日付取得
SELECT  SINGLE MAX( BUDAT )
INTO  (GF_WRITE-ODATE)
FROM  (G_GENTAB)
WHERE   MATNR = GF_INFO-MATNR
AND   WERKS = GF_INFO-WERKS
AND   KUNNR = GF_YOTAKU-KUNNR
AND   SOBKZ = CNS_W
AND   SHKZG = CNS_H
AND   BWART IN (CNS_631 , CNS_633) .
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_YOTAKU_ODATE
*&---------------------------------------------------------------------*
*&      Form  FRM_SHIKYU_IDATE
*&---------------------------------------------------------------------*
*       最新入荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_SHIKYU_IDATE_A.
*--- 転記日付取得
SELECT  SINGLE MAX( BUDAT )
INTO  (GF_WRITE-IDATE)
FROM   (G_GENTAB)
WHERE   MATNR = GF_INFO-MATNR
AND   WERKS = GF_INFO-WERKS
AND   LIFNR = GF_SHIRE-LIFNR
AND   SOBKZ = CNS_O
AND   SHKZG = CNS_S
AND   BWART IN (CNS_541 , CNS_543) .
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SHIKYU_IDATE
*&---------------------------------------------------------------------*
*&      Form  FRM_SHIKYU_ODATE
*&---------------------------------------------------------------------*
*       最新出荷日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_SHIKYU_ODATE_A.
*--- 転記日付取得
SELECT  SINGLE MAX( BUDAT )
INTO  (GF_WRITE-ODATE)
FROM   (G_GENTAB)
WHERE   MATNR = GF_INFO-MATNR
AND   WERKS = GF_INFO-WERKS
AND   LIFNR = GF_SHIRE-LIFNR
AND   SOBKZ = CNS_O
AND   SHKZG = CNS_H
AND   BWART IN (CNS_541 , CNS_543).
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.        " 対象データなし
WHEN OTHERS.   " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_MSEG
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SHIKYU_ODATE
** Add 2004.03.22 <<<<<
**** START ADD 2015/02/04 ISID18 ****
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_CPAGE
*&---------------------------------------------------------------------*
*       コードページ取得
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_GET_CPAGE .

CLEAR:
G_OUTPUT_CP,
G_FLGUTF8.

CALL FUNCTION 'ZEG_ZZ_GLOBAL_PGM_CONFIG_GET'
EXPORTING
IMPPGM      = SY-REPID
IMPBUKRS    = TEXT-037
IMPORTING
EXPCODEPAGE = G_OUTPUT_CP
EXPFLGUTF8  = G_FLGUTF8.

ENDFORM.                    " FRM_GET_CPAGE
**** END ADD 2015/02/04 ISID18 ****
