*&---------------------------------------------------------------------*
*& Report  YTEST_PO_CREAT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  YTEST_PO_CREAT1 NO STANDARD PAGE HEADING.

CONSTANTS CNS_UTF TYPE STRING VALUE 'UTF-8'.
CONSTANTS CNS_TAB TYPE C VALUE CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
CONSTANTS CNS_TYP(10)    TYPE C VALUE 'ASC'.  "アスキーコード

TYPES:
BEGIN OF TYP_FIELD,
*    FIELD  TYPE CHAR100,
NUM(6)   TYPE C,
DOC_TYPE(3) TYPE C,
*    DOC_TYPE TYPE BAPIMEPOHEADER-DOC_TYPE,
END OF TYP_FIELD,

BEGIN OF TYP_MES,
PO_NUMBER TYPE BAPIMEPOHEADER-PO_NUMBER,
MSG       TYPE BAPI_MSG,
END OF TYP_MES.

DATA:
IT_DATA        TYPE  TABLE OF string,
ST_DATA        TYPE TYP_FIELD,
ST_POHEADER    TYPE BAPIMEPOHEADER,
ST_POHEADERX   TYPE BAPIMEPOHEADERX,
IT_RETURN_PURC TYPE STANDARD TABLE OF BAPIRET2,
IT_POITEM      TYPE STANDARD TABLE OF BAPIMEPOITEM,
ST_POITEM      TYPE BAPIMEPOITEM,
IT_POITEMX     TYPE STANDARD TABLE OF BAPIMEPOITEMX,
ST_POITEMX     TYPE BAPIMEPOITEMX,
IT_POSCHEDULE  TYPE STANDARD TABLE OF BAPIMEPOSCHEDULE,
ST_POSCHEDULE  TYPE BAPIMEPOSCHEDULE,
IT_POSCHEDULEX TYPE STANDARD TABLE OF BAPIMEPOSCHEDULX,
ST_POSCHEDULEX TYPE BAPIMEPOSCHEDULX,
IT_POCOND      TYPE STANDARD TABLE OF BAPIMEPOCOND,
ST_POCOND      TYPE BAPIMEPOCOND,
IT_POCONDX     TYPE STANDARD TABLE OF BAPIMEPOCONDX,
ST_POCONDX     TYPE BAPIMEPOCONDX,
IT_ACCOUNT     TYPE STANDARD TABLE OF BAPIMEPOACCOUNT,
ST_ACCOUNT     TYPE BAPIMEPOACCOUNT,
IT_ACCOUNTX    TYPE STANDARD TABLE OF BAPIMEPOACCOUNTX,
ST_ACCOUNTX    TYPE BAPIMEPOACCOUNTX,
W_ORDER        TYPE BAPIMEPOHEADER-PO_NUMBER,
FLG_ZB         TYPE C,
IT_MES         TYPE STANDARD TABLE OF TYP_MES.

*&----------------------------------------------------------------------
* SELECTION-SCREEN
*&----------------------------------------------------------------------
PARAMETERS:
P_FILE     TYPE ZEFILENAME,                        "Error File
P_TEST     TYPE C AS CHECKBOX DEFAULT 'X'.

*----------------------------------------------------------------------*
* AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
* ファイルパス
PERFORM INIT_FILENM_HELP CHANGING P_FILE.

*----------------------------------------------------------------------*
* INITIALIZATION
*----------------------------------------------------------------------*
INITIALIZATION.
PERFORM FRM_INI.

*&---------------------------------------------------------------------*
*&      Form  FRM_INI
*&---------------------------------------------------------------------*
FORM FRM_INI.
CLEAR:
IT_DATA,
ST_DATA,
ST_POHEADER,
ST_POHEADERX,
IT_RETURN_PURC,
IT_POITEM,
ST_POITEM,
IT_POITEMX,
ST_POITEMX,
IT_POSCHEDULE,
IT_POSCHEDULEX,
IT_POCOND,
ST_POCOND,
IT_POCONDX,
ST_POCONDX,
IT_ACCOUNT,
ST_ACCOUNT,
IT_ACCOUNTX,
ST_ACCOUNTX,
W_ORDER,
FLG_ZB,
IT_MES.
ENDFORM.                    " FRM_INI

*----------------------------------------------------------------------*
* START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.
PERFORM UPLOAD_LOCAL_FILE.

PERFORM EDIT_FILE.

TOP-OF-PAGE.
WRITE:(15)'PO' , (120)'メッセージ'.

*&---------------------------------------------------------------------*
*&      Form  INIT_ERRORFILE_HELP
*&---------------------------------------------------------------------*
*       ファイルパス
*----------------------------------------------------------------------*
*      <--O_FILENAME  エラーファイルパス
*----------------------------------------------------------------------*
FORM INIT_FILENM_HELP  CHANGING O_FILENAME TYPE RLGRAP-FILENAME.
DATA:
LTD_FILETABLE   TYPE FILETABLE,
LREF_FILETABLE  TYPE REF TO FILE_TABLE,
LW_RC           TYPE I.

CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
CHANGING
FILE_TABLE              = LTD_FILETABLE
RC                      = LW_RC
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 1
CNTL_ERROR              = 2
ERROR_NO_GUI            = 3
NOT_SUPPORTED_BY_GUI    = 4
OTHERS                  = 5.

IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

CLEAR LREF_FILETABLE.
READ TABLE LTD_FILETABLE REFERENCE INTO LREF_FILETABLE INDEX 1.

IF SY-SUBRC = 0.

O_FILENAME = LREF_FILETABLE->FILENAME.

ENDIF.

ENDFORM.                    " INIT_FILENM_HELP

*&---------------------------------------------------------------------*
*&      Form  UPLOAD_LOCAL_FILE
*&---------------------------------------------------------------------*
*       text  ローカルファイル読込
*----------------------------------------------------------------------*
FORM UPLOAD_LOCAL_FILE.

DATA :
LW_FILE    TYPE STRING,
L_CODEPAGE TYPE ABAP_ENCODING.

L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_UTF ).

LW_FILE = P_FILE.

CALL FUNCTION 'GUI_UPLOAD'
EXPORTING
FILENAME                = LW_FILE
FILETYPE                = CNS_TYP
HAS_FIELD_SEPARATOR     = ABAP_ON
*      READ_BY_LINE            = SPACE
*      CODEPAGE                = L_CODEPAGE
TABLES
DATA_TAB                = IT_DATA
EXCEPTIONS
FILE_OPEN_ERROR         = 1
FILE_READ_ERROR         = 2
NO_BATCH                = 3
GUI_REFUSE_FILETRANSFER = 4
INVALID_TYPE            = 5
NO_AUTHORITY            = 6
UNKNOWN_ERROR           = 7
BAD_DATA_FORMAT         = 8
HEADER_NOT_ALLOWED      = 9
SEPARATOR_NOT_ALLOWED   = 10
HEADER_TOO_LONG         = 11
UNKNOWN_DP_ERROR        = 12
ACCESS_DENIED           = 13
DP_OUT_OF_MEMORY        = 14
DISK_FULL               = 15
DP_TIMEOUT              = 16
OTHERS                  = 17.

CHECK SY-SUBRC <> 0.
MESSAGE S401(Y1) WITH '入力ファイルオープンエラー'
P_FILE.

LEAVE LIST-PROCESSING.

ENDFORM.                    " UPLOAD_LOCAL_FILE
*&---------------------------------------------------------------------*
*&      Form  EDIT_FILE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM EDIT_FILE.

DATA:
LST_FIELD      TYPE TYP_FIELD,
LTD_FIELD      TYPE STANDARD TABLE OF TYP_FIELD,
LW_VALUE       TYPE BAPICURR-BAPICURR,
LST_MES        TYPE TYP_MES,
LW_PO_ITEM     TYPE EBELP.

LOOP AT IT_DATA INTO ST_DATA.

*    IF ST_DATA(2) = 'NB'
*      OR ST_DATA(2) = 'ZB'.
*
*      IF SY-TABIX <> 1.
*        PERFORM BAPI_CREAT.
*      ENDIF.
*
*      IF ST_DATA(2) = 'ZB'.
*        FLG_ZB = ABAP_ON.
*      ENDIF.
*
*      LW_PO_ITEM = 10.

CLEAR:
LTD_FIELD,
ST_POHEADER,
ST_POHEADERX,
IT_RETURN_PURC,
IT_POITEM,
IT_POITEMX,
IT_POSCHEDULE,
IT_POSCHEDULEX,
IT_POCOND,
IT_POCONDX,
IT_ACCOUNT,
IT_ACCOUNTX,
W_ORDER.

*      SPLIT ST_DATA AT CNS_TAB INTO TABLE LTD_FIELD.

LOOP AT LTD_FIELD INTO LST_FIELD.
*        CASE SY-TABIX.
*          WHEN 1.
*            ST_POHEADER-DOC_TYPE   = LST_FIELD-FIELD.
*            ST_POHEADERX-DOC_TYPE  = ABAP_ON.
*          WHEN 2.
*            ST_POHEADER-COMP_CODE  = LST_FIELD-FIELD.
*            ST_POHEADERX-COMP_CODE = ABAP_ON.
*          WHEN 3.
*            ST_POHEADER-VENDOR     = LST_FIELD-FIELD.
*            ST_POHEADERX-VENDOR    = ABAP_ON.
*          WHEN 4.
*            ST_POHEADER-PURCH_ORG  = LST_FIELD-FIELD.
*            ST_POHEADERX-PURCH_ORG = ABAP_ON.
*          WHEN 5.
*            ST_POHEADER-PUR_GROUP  = LST_FIELD-FIELD.
*            ST_POHEADERX-PUR_GROUP = ABAP_ON.
*          WHEN 6.
*            ST_POHEADER-DOC_DATE   = LST_FIELD-FIELD.
*            ST_POHEADERX-DOC_DATE  = ABAP_ON.
*          WHEN 7.
*            IF LST_FIELD-FIELD IS NOT INITIAL.
*              ST_POHEADER-PMNTTRMS   = LST_FIELD-FIELD.
*              ST_POHEADERX-PMNTTRMS  = ABAP_ON.
*            ENDIF.
*          WHEN 8.
*            IF LST_FIELD-FIELD IS NOT INITIAL.
*              ST_POHEADER-CURRENCY   = LST_FIELD-FIELD.
*              ST_POHEADERX-CURRENCY  = ABAP_ON.
*            ENDIF.
*        ENDCASE.
ENDLOOP.

CONTINUE.
*    ENDIF.

CLEAR:
LTD_FIELD,
ST_POITEM,
ST_POCOND,
ST_POCOND,
ST_POCONDX,
ST_ACCOUNT,
ST_ACCOUNTX,
ST_POSCHEDULE,
ST_POSCHEDULEX.

SPLIT ST_DATA AT CNS_TAB INTO TABLE LTD_FIELD.

LOOP AT LTD_FIELD INTO LST_FIELD.
*      CASE SY-TABIX.
*        WHEN 1.
*
*          ST_POITEM-PO_ITEM     = LW_PO_ITEM.
*          ST_POITEMX-PO_ITEM    = LW_PO_ITEM.
*
*          ST_ACCOUNT-PO_ITEM    = LW_PO_ITEM.
*          ST_ACCOUNTX-PO_ITEM   = LW_PO_ITEM.
*
*          ST_POSCHEDULE-PO_ITEM  = LW_PO_ITEM.
*          ST_POSCHEDULEX-PO_ITEM = LW_PO_ITEM.
*
*          LW_PO_ITEM = LW_PO_ITEM + 10.
*
*        WHEN 2.
*          ST_POITEM-ACCTASSCAT  = LST_FIELD-FIELD.
*          ST_POITEMX-ACCTASSCAT = ABAP_ON.
*        WHEN 3.
*          ST_POITEM-MATERIAL    = LST_FIELD-FIELD.
*          ST_POITEMX-MATERIAL   = ABAP_ON.
*        WHEN 4.
*          ST_POITEM-SHORT_TEXT  = LST_FIELD-FIELD.
*          ST_POITEMX-SHORT_TEXT = ABAP_ON.
*        WHEN 5.
*          ST_POITEM-QUANTITY    = LST_FIELD-FIELD.
*          ST_POITEMX-QUANTITY   = ABAP_ON.
*
*          ST_POSCHEDULE-QUANTITY    = LST_FIELD-FIELD.
*          ST_POSCHEDULEX-QUANTITY   = ABAP_ON.
*
*        WHEN 6.
*
*          ST_POITEM-ORDERPR_UN    = LST_FIELD-FIELD.
*          ST_POITEMX-ORDERPR_UN   = ABAP_ON.
*        WHEN 7.
*          ST_POITEM-PLANT       = LST_FIELD-FIELD.
*          ST_POITEMX-PLANT      = ABAP_ON.
*        WHEN 8.
*          ST_POITEM-TAX_CODE    = LST_FIELD-FIELD.
*          ST_POITEMX-TAX_CODE   = ABAP_ON.
*        WHEN 9.
*          ST_POITEM-NET_PRICE    = LST_FIELD-FIELD.
*          ST_POITEMX-NET_PRICE   = ABAP_ON.
*        WHEN 10.
*          ST_POITEM-PRICE_UNIT    = LST_FIELD-FIELD.
*          ST_POITEMX-PRICE_UNIT   = ABAP_ON.
*        WHEN 11.
*          ST_POSCHEDULE-DELIVERY_DATE    = LST_FIELD-FIELD.
*          ST_POSCHEDULEX-DELIVERY_DATE   = ABAP_ON.
*        WHEN 12.
*          ST_POITEM-FREE_ITEM    = LST_FIELD-FIELD.
*          ST_POITEMX-FREE_ITEM   = ABAP_ON.
*        WHEN 13.
*          IF ST_POITEM-ACCTASSCAT = 'M'.
*            CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*              EXPORTING
*                INPUT         = LST_FIELD-FIELD
*              IMPORTING
*                OUTPUT        = ST_ACCOUNT-SD_DOC.
*
*            ST_ACCOUNTX-SD_DOC     = ABAP_ON.
*          ELSEIF ST_POITEM-ACCTASSCAT <> SPACE.
*            ST_ACCOUNT-COSTCENTER  = LST_FIELD-FIELD.
*            ST_ACCOUNTX-COSTCENTER = ABAP_ON.
*          ENDIF.
*
*        WHEN 14.
*          IF ST_POITEM-ACCTASSCAT = 'M'.
*            ST_ACCOUNT-ITM_NUMBER  = LST_FIELD-FIELD.
*            ST_ACCOUNTX-ITM_NUMBER = ABAP_ON.
*          ENDIF.
*      ENDCASE.
ENDLOOP.

IF FLG_ZB IS NOT INITIAL.
ST_POITEM-RET_ITEM  = ABAP_ON.
ST_POITEMX-RET_ITEM = ABAP_ON.
ENDIF.
APPEND ST_POITEM TO IT_POITEM.
CLEAR ST_POITEM.

APPEND ST_POITEMX TO IT_POITEMX.
CLEAR ST_POITEMX.

APPEND ST_ACCOUNT TO IT_ACCOUNT.
CLEAR ST_ACCOUNT.

APPEND ST_ACCOUNTX TO IT_ACCOUNTX.
CLEAR ST_ACCOUNTX.

APPEND ST_POSCHEDULE TO IT_POSCHEDULE.
CLEAR ST_POSCHEDULE.

APPEND ST_POSCHEDULEX TO IT_POSCHEDULEX.
CLEAR ST_POSCHEDULEX.

*    AT LAST.
*      PERFORM BAPI_CREAT.
*    ENDAT.

ENDLOOP.
LOOP AT IT_MES INTO LST_MES.
WRITE:(15) LST_MES-PO_NUMBER,
(140)LST_MES-MSG.
ENDLOOP.

ENDFORM.                    " EDIT_FILE

*&---------------------------------------------------------------------*
*&      Form  BAPI_CREAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM BAPI_CREAT.

DATA:
LST_RETURN TYPE BAPIRET2,
LST_MES    TYPE TYP_MES.

CALL FUNCTION 'BAPI_PO_CREATE1'
EXPORTING
POHEADER         = ST_POHEADER
POHEADERX        = ST_POHEADERX
TESTRUN          = P_TEST
IMPORTING
EXPPURCHASEORDER = W_ORDER
TABLES
RETURN           = IT_RETURN_PURC
POITEM           = IT_POITEM
POITEMX          = IT_POITEMX
POSCHEDULE       = IT_POSCHEDULE
POSCHEDULEX      = IT_POSCHEDULEX
POACCOUNT        = IT_ACCOUNT
POACCOUNTX       = IT_ACCOUNTX.

CLEAR:
LST_MES.

LOOP AT IT_RETURN_PURC INTO LST_RETURN
WHERE TYPE = 'A'
OR TYPE = 'E'.
MESSAGE ID LST_RETURN-ID
TYPE LST_RETURN-TYPE
NUMBER LST_RETURN-NUMBER
WITH LST_RETURN-MESSAGE_V1
LST_RETURN-MESSAGE_V2
LST_RETURN-MESSAGE_V3
LST_RETURN-MESSAGE_V4
INTO LST_MES-MSG.
EXIT.
ENDLOOP.

IF SY-SUBRC <> 0.
CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
EXPORTING
WAIT          = ABAP_ON.

LST_MES-PO_NUMBER = W_ORDER.
LST_MES-MSG       = 'PO登#成功'.
ENDIF.

APPEND LST_MES TO IT_MES.
CLEAR LST_MES.
CLEAR FLG_ZB.

ENDFORM.                    " BAPI_CREAT
