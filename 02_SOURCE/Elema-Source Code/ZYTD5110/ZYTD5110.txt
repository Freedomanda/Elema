*&-------------------------------------------------------------------
*& Report  ZYTD5110
*&-------------------------------------------------------------------
* [プログラム名]
*   ZYTD5110        得意先品目マスタ更新(プラント更新）
* [処理概要]
* [改定履歴]
*  2012/08/08   ISID              ES-UP
*&-------------------------------------------------------------------

REPORT ZYTD5110  MESSAGE-ID Y1
LINE-SIZE 170
LINE-COUNT 58
.

TABLES : KNMT .

TYPES : BEGIN OF TYP_KNMT ,
KUNNR LIKE KNMT-KUNNR ,
MATNR LIKE KNMT-MATNR ,
WERKS LIKE KNMT-WERKS ,
END OF TYP_KNMT ,
BEGIN OF TYP_FILE ,
KUNNR LIKE KNMT-KUNNR ,
WERKS LIKE KNMT-WERKS ,
END OF TYP_FILE .

DATA : WRK_KNMT TYPE TYP_KNMT ,
TAB_KNMT TYPE TABLE OF TYP_KNMT ,
WRK_FILE TYPE TYP_FILE ,
TAB_FILE TYPE TABLE OF TYP_FILE ,
BDC_TAB TYPE TABLE OF BDCDATA  WITH HEADER LINE ,
BDC_MSG TYPE TABLE OF BDCMSGCOLL WITH HEADER LINE ,
BDC_TRAN LIKE SYST-TCODE VALUE 'VD52' ,
BDC_MODE(1) TYPE C VALUE 'N' ,
I_COUNT TYPE P ,
S_COUNT TYPE P ,
E_COUNT TYPE P .


* Mod ES-UP 2012/08/22 -->
*CONSTANTS : W_TAB TYPE X VALUE '09' .
constants: W_TAB type string value CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/22 <--

PARAMETERS : P_FILE(128) TYPE C .
SELECT-OPTIONS : S_MATNR FOR KNMT-MATNR .
PARAMETERS : P_CHK AS CHECKBOX .

START-OF-SELECTION .

PERFORM READ_FILE .
PERFORM DATA_GET .
PERFORM DATA_EDIT .

FORM READ_FILE .
DATA L_LINE(20) TYPE C .
REFRESH BDC_TAB .
CLEAR : I_COUNT , S_COUNT , E_COUNT .
* Mod ES-UP 2012/08/22 -->
*  OPEN DATASET : P_FILE FOR INPUT IN TEXT MODE .
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
DATA L_CODEPAGE TYPE CPCODEPAGE.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
OPEN DATASET P_FILE FOR INPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.

* Mod ES-UP 2012/08/22 <--

IF SY-SUBRC NE 0 .
MESSAGE I209 .
STOP .
ENDIF .
MOVE : 'X' TO L_LINE .
DO .
READ DATASET P_FILE INTO L_LINE .
IF SY-SUBRC NE 0 .
EXIT .
ENDIF .
SPLIT L_LINE AT W_TAB
INTO WRK_FILE-KUNNR
WRK_FILE-WERKS .
PERFORM CONVERT_ALPHA CHANGING WRK_FILE-KUNNR  .
APPEND : WRK_FILE TO TAB_FILE .
CLEAR : WRK_FILE  , L_LINE .
ENDDO .

CLOSE DATASET P_FILE .
IF L_LINE EQ 'X' .
MESSAGE I302 .
STOP .
ENDIF .
ENDFORM .

FORM DATA_GET .
SELECT KUNNR MATNR WERKS
FROM KNMT
INTO CORRESPONDING FIELDS OF TABLE TAB_KNMT
FOR ALL ENTRIES IN TAB_FILE
WHERE KUNNR EQ TAB_FILE-KUNNR
AND  MATNR IN S_MATNR
.
IF SY-SUBRC NE 0 .
MESSAGE I302 .
STOP .
ENDIF .

ENDFORM .

FORM DATA_EDIT .
LOOP AT TAB_FILE INTO WRK_FILE .
LOOP AT TAB_KNMT INTO WRK_KNMT
WHERE KUNNR EQ WRK_FILE-KUNNR
AND  WERKS NE WRK_FILE-WERKS .
PERFORM BDC_GOGO .
WRITE :/01 WRK_KNMT-KUNNR ,
13 WRK_KNMT-MATNR ,
35 WRK_KNMT-WERKS ,
41 '→' ,
44 WRK_FILE-WERKS .
IF P_CHK NE 'X' .
PERFORM CALL_TRAN .
ENDIF .
ADD 1 TO I_COUNT .
ENDLOOP .
ENDLOOP .
ULINE .
WRITE : / '対象件数：' , 13 I_COUNT , 30 '件' ,
/ '更新件数：' , 13 S_COUNT , 30 '件' ,
/ 'エラー件数：' , 13 E_COUNT , 30 '件' .
* 2003/04/21 NDSC KURI ADD 件数のログ表示。
MESSAGE S401 WITH '対象件数' I_COUNT.
MESSAGE S401 WITH '更新件数' S_COUNT.
MESSAGE S401 WITH 'エラー件数' E_COUNT.

ENDFORM .

FORM BDC_GOGO .
PERFORM SET_BDC USING : 'RV10A001' '1000' 'X' ,
'BDC_CURSOR' 'MATNR_R-LOW' '' ,
'BDC_OKCODE' '=ONLI' '' ,
'KUNNR' WRK_KNMT-KUNNR '' ,
'VKORG' '1000' '' ,
'VTWEG' '10' '' ,
'MATNR_R-LOW' WRK_KNMT-MATNR '' ,
'SAPMV10A' '0200' 'X' ,
'BDC_CURSOR' 'MV10A-MATNR(01)' '' ,
'BDC_OKCODE' '=SELE' '' ,
'MV10A-SELKZ(01)' 'X' '' ,
'SAPMV10A' '0300' 'X' ,
'BDC_CURSOR' 'MV10A-WERKS' '' ,
'BDC_OKCODE' '=SICH' '' ,
'MV10A-WERKS' WRK_FILE-WERKS '' .
ENDFORM .

FORM CALL_TRAN .
DATA : W_MSG LIKE MESSAGE ,
W_MSGNO LIKE SY-MSGNO .
CALL TRANSACTION BDC_TRAN
USING   BDC_TAB
MODE    BDC_MODE
MESSAGES INTO BDC_MSG
.
IF SY-SUBRC EQ 0 .
ADD 1 TO S_COUNT .
WRITE :/ '変更されました' .
WAIT UP TO 2 SECONDS .
ELSE .
ADD 1 TO E_COUNT .
* 2003/04/21 NDSC KURI ADD ERROR時でも、2秒待ち。
WAIT UP TO 2 SECONDS .
LOOP AT BDC_MSG .
MOVE : BDC_MSG-MSGNR TO W_MSGNO .
CALL FUNCTION 'WRITE_MESSAGE'
EXPORTING
MSGID         = BDC_MSG-MSGID
MSGNO         = W_MSGNO
MSGTY         = BDC_MSG-MSGTYP
MSGV1         = BDC_MSG-MSGV1
MSGV2         = BDC_MSG-MSGV2
MSGV3         = BDC_MSG-MSGV3
MSGV4         = BDC_MSG-MSGV4
IMPORTING
MESSG         = W_MSG
.
MESSAGE ID BDC_MSG-MSGID
TYPE 'S'
NUMBER W_MSGNO
WITH BDC_MSG-MSGV1
BDC_MSG-MSGV2
BDC_MSG-MSGV3
BDC_MSG-MSGV4
.
WRITE W_MSG .
ENDLOOP .
ENDIF .
REFRESH : BDC_TAB , BDC_MSG .
ENDFORM .

FORM CONVERT_ALPHA CHANGING P_VALUE .
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT         = P_VALUE
IMPORTING
OUTPUT        = P_VALUE
.
ENDFORM .


FORM SET_BDC USING P_DAT P_VAL P_FLG .
MOVE : P_FLG TO BDC_TAB-DYNBEGIN .
IF P_FLG EQ 'X' .
MOVE : P_DAT TO BDC_TAB-PROGRAM ,
P_VAL TO BDC_TAB-DYNPRO .
ELSE .
MOVE : P_DAT TO BDC_TAB-FNAM ,
P_VAL TO BDC_TAB-FVAL .
ENDIF .
APPEND : BDC_TAB .
CLEAR : BDC_TAB .
ENDFORM .
