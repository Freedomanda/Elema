*&---------------------------------------------------------------------*
*&  REPORT ZN030300                                                    *
*&         【移行】支払予定データ（仕入）【セットアップ】              *
*&---------------------------------------------------------------------*
*&  機能     : YK410をZN002,YN210,YN220に変換する
*&
*&  作成日   : 2012/03/16
*&  作成者   : S.TAKIKAWA(SOLFIS)
*&---------------------------------------------------------------------*
*& YYYY/MM/DD  Programar         Description
*& 2012/10/16  ISID              ES-UP
*&---------------------------------------------------------------------*
REPORT ZN030300
NO STANDARD PAGE HEADING
LINE-SIZE   170
LINE-COUNT  58
MESSAGE-ID  YN01.
*----------------------------------------------------------------------*
*   テーブル
*----------------------------------------------------------------------*
TABLES:YK410,ZN002,YN210,YN220.
*----------------------------------------------------------------------*
*   型定義
*----------------------------------------------------------------------*
TYPES:T_TYP_YK410 TYPE STANDARD TABLE OF YK410,
T_TYP_ZN002 TYPE STANDARD TABLE OF ZN002,
T_TYP_YN210 TYPE STANDARD TABLE OF YN210,
T_TYP_YN220 TYPE STANDARD TABLE OF YN220.
TYPES:BEGIN OF TYP_ERR,
LIFNR    TYPE LIFNR,      "仕入先
PAYDOC   TYPE YKPAYDOC,   "支払予定番号
MESSAGE  TYPE CHAR255,    "エラー内容
END   OF TYP_ERR,
T_TYP_ERR TYPE STANDARD TABLE OF TYP_ERR.
TYPES:BEGIN OF TYP_LFB1,
LIFNR    TYPE LIFNR,      "仕入先
BUKRS    TYPE BUKRS,      "会社コード
ZWELS    TYPE DZWELS,     "支払方法
ZTERM    TYPE DZTERM,     "支払条件キー
END   OF TYP_LFB1,
T_TYP_LFB1 TYPE STANDARD TABLE OF TYP_LFB1.
TYPES:BEGIN OF TYP_DOWNLOAD,
BUKRS    TYPE CHAR4,
LIFNR    TYPE CHAR10,
PAYDOC   TYPE CHAR10,
PRCFLG   TYPE CHAR1,
CORFLG   TYPE CHAR1,
DELFLG   TYPE CHAR1,
ZFBDT    TYPE CHAR8,
PAYDAT   TYPE CHAR8,
PAYAMT   TYPE CHAR21,
WAERS    TYPE CHAR5,
LIFRE    TYPE CHAR10,
LIFN1    TYPE CHAR10,
UMSKZ    TYPE CHAR1,
SGTXT    TYPE CHAR50,
GSBER    TYPE CHAR4,
WERKS    TYPE CHAR4,
EKORG    TYPE CHAR4,
EKGRP    TYPE CHAR3,
ZTERM    TYPE CHAR4,
ZLSCH    TYPE CHAR1,
ZLSPR    TYPE CHAR1,
ZUONR    TYPE CHAR18,
INSDAT   TYPE CHAR8,
INSTIM   TYPE CHAR6,
INSUSR   TYPE CHAR12,
UPDDAT   TYPE CHAR8,
UPDTIM   TYPE CHAR6,
UPDUSR   TYPE CHAR12,
GJAHR    TYPE CHAR4,
BELNR    TYPE CHAR10,
PRCDAT   TYPE CHAR8,
FIFLG    TYPE CHAR1,
END   OF TYP_DOWNLOAD,
T_TYP_DOWNLOAD TYPE STANDARD TABLE OF TYP_DOWNLOAD.
*----------------------------------------------------------------------*
*   内部テーブル定義
*----------------------------------------------------------------------*
DATA:T_YK410 TYPE T_TYP_YK410,
T_ZN002 TYPE T_TYP_ZN002,
T_YN210 TYPE T_TYP_YN210,
T_YN220 TYPE T_TYP_YN220,
T_LFB1  TYPE T_TYP_LFB1,
T_ERR   TYPE T_TYP_ERR.
*----------------------------------------------------------------------*
*   変数定義
*----------------------------------------------------------------------*
CONSTANTS:
C_ON         TYPE C     VALUE 'X',
C_SPRAS      TYPE SPRAS VALUE 'J'.   "言語キー
* Add ES-UP 2012/10/16 -->
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
* Add ES-UP 2012/10/16 <--
*----------------------------------------------------------------------*
*   定数定義
*----------------------------------------------------------------------*
DATA:G_CNT_YK410   TYPE I,
G_CNT_ZN002   TYPE I,
G_CNT_YN210   TYPE I,
G_CNT_YN220   TYPE I,
G_CNT_ERR     TYPE I.
*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 1.
PARAMETERS:P_R_IKO   RADIOBUTTON GROUP R01.
SELECTION-SCREEN:COMMENT 3(10) TEXT-003 FOR FIELD P_R_IKO.
SELECTION-SCREEN:END   OF LINE.
SELECTION-SCREEN:BEGIN OF BLOCK BL01 WITH FRAME TITLE TEXT-003.
* 移行のみ
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 3.
PARAMETERS:P_R_UP   RADIOBUTTON GROUP R02.
SELECTION-SCREEN:COMMENT 6(14) TEXT-007 FOR FIELD P_R_UP.
SELECTION-SCREEN:END   OF LINE.
* 移行とダウンロード
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 3.
PARAMETERS:P_R_DUP   RADIOBUTTON GROUP R02.
SELECTION-SCREEN:COMMENT 6(24) TEXT-008 FOR FIELD P_R_DUP.
SELECTION-SCREEN:END   OF LINE.
* ダウンロードのみ
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 3.
PARAMETERS:P_R_DOWN   RADIOBUTTON GROUP R02.
SELECTION-SCREEN:COMMENT 6(18) TEXT-009 FOR FIELD P_R_DOWN.
SELECTION-SCREEN:END   OF LINE.
* 条件
SELECTION-SCREEN:BEGIN OF BLOCK BL1 WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS:P_BUKRS   FOR YK410-BUKRS.    "会社コード
SELECT-OPTIONS:P_LIFNR   FOR YK410-LIFNR.    "仕入先コード
SELECT-OPTIONS:P_PAYDOC  FOR YK410-PAYDOC.   "支払予定番号
SELECT-OPTIONS:P_DELFLG  FOR YK410-DELFLG.   "削除区分
SELECT-OPTIONS:P_PAYDAT  FOR YK410-PAYDAT.   "支払予定日
SELECT-OPTIONS:P_PAYAMT  FOR YK410-PAYAMT.   "支払予定額
SELECT-OPTIONS:P_FIFLG   FOR YK410-FIFLG.    "会計連絡済
PARAMETERS    :P_PASS(255) TYPE C LOWER CASE.
SELECTION-SCREEN:END   OF BLOCK BL1.
SELECTION-SCREEN:END   OF BLOCK BL01.

SELECTION-SCREEN:BEGIN OF BLOCK BL02 WITH FRAME TITLE TEXT-005.
PARAMETERS:P_INP_CZ   TYPE ZN002-CZFBDT.
PARAMETERS:P_INP_PH   TYPE ZN002-PHKONT.
SELECTION-SCREEN:END   OF BLOCK BL02.

SELECTION-SCREEN:BEGIN OF LINE,
POSITION 1.
PARAMETERS:P_R_DEL   RADIOBUTTON GROUP R01.
SELECTION-SCREEN:COMMENT 3(14) TEXT-004 FOR FIELD P_R_DEL.
SELECTION-SCREEN:END   OF LINE.
SELECTION-SCREEN:BEGIN OF BLOCK BL03 WITH FRAME TITLE TEXT-002.
PARAMETERS:P_ZN002 AS CHECKBOX.
SELECT-OPTIONS:P_BUK_Z   FOR ZN002-BUKRS.
SELECT-OPTIONS:P_LIF_Z   FOR ZN002-LIFNR.
SELECT-OPTIONS:P_CZF_Z   FOR ZN002-CZFBDT.
SELECT-OPTIONS:P_SEQ_Z   FOR ZN002-SEQ.
PARAMETERS:P_YN AS CHECKBOX.
SELECT-OPTIONS:P_GJA_1   FOR YN210-GJAHR.
SELECT-OPTIONS:P_SLP_1   FOR YN210-SLPDOC.
SELECT-OPTIONS:P_DTL_1   FOR YN210-DTLDOC.
SELECT-OPTIONS:P_VRF_1   FOR YN210-VRFCTON.
SELECT-OPTIONS:P_BUK_1   FOR YN210-BUKRS.
SELECTION-SCREEN:END   OF BLOCK BL03.
*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_PASS.
*-- ファイルダウンロード検索ヘルプ
PERFORM FRM_CHK_FILE.
*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
IF ( P_R_DOWN = C_ON
OR   P_R_DUP  = C_ON )
AND P_PASS IS INITIAL.
MESSAGE E999(YN01) WITH 'ダウンロードファイル名を入力してください'.
ENDIF.
*----------------------------------------------------------------------*
*  START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.

*---データ移行処理
IF P_R_IKO = C_ON.
*   移行用データ取得
PERFORM GET_YK410.
*   仕入先チェック用データ取得
PERFORM GET_LIFNR.
CHECK NOT T_YK410[] IS INITIAL.
IF P_R_DOWN = C_ON
OR P_R_DUP  = C_ON.
*     ファイルダウンロード
PERFORM DOWNLOAD.
ENDIF.
CHECK P_R_DOWN IS INITIAL.  "ダウンロードのみ以外処理続行
*   仕入先マスタ取得
PERFORM GET_LFB1.
*   編集
PERFORM EDIT_YN410.
*   登録
PERFORM INSERT_DATA.
*   処理結果出力
PERFORM WRITE_IKO.

*---削除
ELSE.
*   支払予定（仕入）ＤＢの削除
IF P_ZN002 = C_ON.
*     データ取得
PERFORM DEL_DATA_GET_ZN002.
IF NOT T_ZN002[] IS INITIAL.
*       削除
PERFORM DEL_DATA_ZN002.
ENDIF.
ENDIF.
*   外部/自社データＤＢの削除
IF P_YN = C_ON.
*     データ取得
PERFORM DEL_DATA_GET_YN2XX.
IF NOT T_YN210[] IS INITIAL
OR NOT T_YN220[] IS INITIAL.
*       削除
PERFORM DEL_DATA_YN2XX.
ENDIF.
ENDIF.
IF  T_ZN002[] IS INITIAL
AND T_YN210[] IS INITIAL
AND T_YN220[] IS INITIAL.
MESSAGE S762(YN01).
EXIT.
ENDIF.
*   処理結果出力
PERFORM WRITE_DEL.
ENDIF.
*&---------------------------------------------------------------------*
*&      Form  GET_YK410
*&---------------------------------------------------------------------*
*       移行用データ取得
*----------------------------------------------------------------------*
FORM GET_YK410.

SELECT *
INTO TABLE T_YK410
FROM YK410
WHERE BUKRS  IN P_BUKRS
AND LIFNR  IN P_LIFNR
AND PAYDOC IN P_PAYDOC
AND DELFLG IN P_DELFLG
AND PAYDAT IN P_PAYDAT
AND PAYAMT IN P_PAYAMT
AND FIFLG  IN P_FIFLG.

IF SY-SUBRC = 0.
ELSE.
MESSAGE S762(YN01).
ENDIF.

ENDFORM.                    " GET_YK410
*&---------------------------------------------------------------------*
*&      Form  GET_LFB1
*&---------------------------------------------------------------------*
*       仕入先マスタ取得
*----------------------------------------------------------------------*
FORM GET_LFB1.

SELECT LIFNR
BUKRS
ZWELS
ZTERM
INTO TABLE T_LFB1
FROM LFB1
FOR ALL ENTRIES IN T_YK410
WHERE LIFNR = T_YK410-LIFN1
AND BUKRS = T_YK410-BUKRS.
IF SY-SUBRC = 0.
SORT T_LFB1.
ENDIF.

ENDFORM.                    " GET_LFB1
*&---------------------------------------------------------------------*
*&      Form  EDIT_YN410
*&---------------------------------------------------------------------*
*       YN410編集
*----------------------------------------------------------------------*
FORM EDIT_YN410.
DATA:LW_YK410      TYPE YK410,
LW_ZN002      TYPE ZN002,
LW_YN210      TYPE YN210,
LW_YN220      TYPE YN220,
LW_LFB1       TYPE TYP_LFB1,
LW_ERR        TYPE TYP_ERR,
LW_DATUM      TYPE SY-DATUM,
LW_UZEIT      TYPE SY-UZEIT,
LW_LIFN1      TYPE YKLIFN1,
LW_SEQ        TYPE ZNESEQ,
LW_CHAR1      TYPE CHAR1,
LW_LIFNR      TYPE YNLIFNR,
LW_PAYAMT_DEF TYPE YKPAYAMT VALUE 2000.

LW_DATUM = SY-DATUM.
LW_UZEIT = SY-UZEIT.
READ TABLE T_YK410 INTO LW_YK410 INDEX 1.
LW_LIFN1 = LW_YK410-LIFN1.

LOOP AT T_YK410 INTO LW_YK410.
CLEAR:LW_ZN002, LW_YN210, LW_YN220.
*   SEQのカウント
IF LW_LIFN1 <> LW_YK410-LIFN1.
LW_SEQ = 1.
LW_LIFN1 = LW_YK410-LIFN1.
ELSE.
LW_SEQ = LW_SEQ + 1.
ENDIF.
*-----支払予定（仕入）【ZN002】データ作成
*   会社コード
LW_ZN002-BUKRS = LW_YK410-BUKRS.
*   仕入先コード(請求先)
LW_ZN002-LIFNR = LW_YK410-LIFN1.
*   照合締日
LW_ZN002-CZFBDT = P_INP_CZ.
*   SEQ
LW_ZN002-SEQ    = LW_SEQ.
*   支払予定日
LW_ZN002-PZFBDT = LW_YK410-PAYDAT.
*   支払方法
*   仕入先マスタの支払方法検索
READ TABLE T_LFB1 INTO LW_LFB1
WITH KEY LIFNR = LW_YK410-LIFN1
BUKRS = LW_YK410-BUKRS.
IF SY-SUBRC = 0.
LW_CHAR1 = LW_LFB1-ZWELS+1(1).  "2バイト目
*     1桁の場合はその値を設定
IF LW_CHAR1 IS INITIAL.
LW_ZN002-PZLSCH = LW_LFB1-ZWELS+0(1).
*     複数の支払方法が設定されている場合
ELSE.
*       通貨コードがJPYの場合は、入金予定金額を基準に検索値が変わる
IF LW_YK410-WAERS = 'JPY'.
PERFORM SEARCH_ZWELS    USING LW_YK410-PAYAMT
LW_LFB1-ZWELS
CHANGING LW_CHAR1.
IF LW_CHAR1 <> SPACE.
LW_ZN002-PZLSCH = LW_CHAR1.
ENDIF.
*       通貨コードがUSDの場合は、'Z'⇒'B'⇒'T'⇒'9'となる
ELSE.
PERFORM SEARCH_ZWELS    USING LW_PAYAMT_DEF
LW_LFB1-ZWELS
CHANGING LW_CHAR1.
IF LW_CHAR1 <> SPACE.
LW_ZN002-PZLSCH = LW_CHAR1.
ENDIF.
ENDIF.
ENDIF.
ELSE.
LW_ERR-LIFNR = LW_YK410-LIFNR.
LW_ERR-PAYDOC = LW_YK410-PAYDOC.
LW_ERR-MESSAGE = '支払先の仕入先マスタが取得できませんでした'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.

*   サイト
IF LW_LFB1-ZTERM+0(1) <> 'W'.
LW_ZN002-PZTERM = LW_LFB1-ZTERM.
ENDIF.
*   振替勘定
LW_ZN002-PHKONT = P_INP_PH.
*   通貨コード
LW_ZN002-WAERS  = LW_YK410-WAERS.
*   支払予定額
LW_ZN002-PWRBTR = LW_YK410-PAYAMT.
*   前渡済,振替仕入先,相殺先(初期値)
*   仕入割引条件
IF LW_LFB1-ZTERM+0(1) = 'W'.
LW_ZN002-PZTERM_D = LW_LFB1-ZTERM.
ENDIF.
*   自動支払保留(初期値)
*   備考
CONCATENATE LW_YK410-WERKS LW_YK410-SGTXT
INTO LW_ZN002-PMEMO.
*   登録日
LW_ZN002-INSDT = LW_DATUM.
*   登録時刻
LW_ZN002-INSTM = LW_UZEIT.
*   登録ユーザ
LW_ZN002-INSUSR = SY-UNAME.
*   その他の項目は初期値


*-----外部データ【YN210】 データ作成
*   外部会計年度
LW_YN210-GJAHR = '2012'.
*   外部番号
LW_YN210-SLPDOC = LW_YK410-PAYDOC.
LW_YN210-SLPDOC+0(1) = 'I'.
*   外部明細番号
LW_YN210-DTLDOC = 1.
*   仕入先コード(請求先)
LW_YN210-VRFCTON = LW_YK410-LIFN1.
*   会社コード
LW_YN210-BUKRS = 'C001'.
*   計上締日
LW_YN210-ZFBDT = '20120531'.
*   利益センタ(初期値)
*   担当者
LW_YN210-PERNR = SY-UNAME.
*   プラント
LW_YN210-DVSON = LW_YK410-WERKS.
*   照合対象フラグ
LW_YN210-TGTFLG = C_ON.
*   照合ステータス
LW_YN210-CSTS = '7'.
*   コメント
LW_YN210-COMMT = '振替前支払依頼'.
*   数量,単位,単価,消費税額,税抜金額(初期値)
*   税込金額
LW_YN210-KNETXAMT = LW_YK410-PAYAMT.
*   通貨コード
LW_YN210-WAERS = LW_YK410-WAERS.
*   照合番号
LW_YN210-CHKDOC = LW_YN210-SLPDOC.
*   照合日
LW_YN210-CHKDAT = LW_DATUM.
*   照合ユーザ
LW_YN210-CHKUSR = SY-UNAME.
*   更新日
LW_YN210-UPDDAT = LW_DATUM.
*   更新時刻
LW_YN210-UPDTIM = LW_UZEIT.
*   更新ユーザ
LW_YN210-UPDUSR = SY-UNAME.
*   更新プログラム
LW_YN210-UPDPRG = SY-REPID.
*   仕入先コード(発注先)
LW_YN210-LIST1 = LW_YK410-LIFN1.
*   登録日
LW_YN210-INSDT = LW_DATUM.
*   請求日
LW_YN210-LDATE1 = LW_DATUM.
*   照合締日
LW_YN210-CZFBDT = '20120531'.
*-----自社データ【YN220】 データ作成
*   伝票会計年度
LW_YN220-GJAHR = '2012'.
*   伝票番号
LW_YN220-SLPDOC = LW_YK410-PAYDOC.
LW_YN220-SLPDOC+0(1) = 'I'.
*   伝票明細番号
LW_YN220-DTLDOC = 1.
*   仕入先コード(請求先)
LW_YN220-VRFCTON = LW_YK410-LIFN1.
*   会社コード
LW_YN220-BUKRS = 'C001'.
*   計上締日
LW_YN220-ZFBDT = '20120531'.
*   利益センタ(初期値)
*   担当者
LW_YN220-PERNR = SY-UNAME.
*   プラント
LW_YN220-DVSON = LW_YK410-WERKS.
*   照合対象フラグ
LW_YN220-TGTFLG = C_ON.
*   照合ステータス
LW_YN220-CSTS = '7'.
*   コメント
LW_YN220-COMMT = '振替前支払依頼'.
*   会計伝票会計年度,伝票,明細初期値
*   数量,単位,単価,消費税額,税抜金額(初期値)
*   税込金額
LW_YN220-KNETXAMT = LW_YK410-PAYAMT.
*   通貨コード
LW_YN220-WAERS = LW_YK410-WAERS.
*   照合番号
LW_YN220-CHKDOC = LW_YN220-SLPDOC.
*   照合日
LW_YN220-CHKDAT = LW_DATUM.
*   照合ユーザ
LW_YN220-CHKUSR = SY-UNAME.
*   更新日
LW_YN220-UPDDAT = LW_DATUM.
*   更新時刻
LW_YN220-UPDTIM = LW_UZEIT.
*   更新ユーザ
LW_YN220-UPDUSR = SY-UNAME.
*   更新プログラム
LW_YN220-UPDPRG = SY-REPID.
*   仕入先コード(発注先)
LW_YN220-LIST1 = LW_YK410-LIFN1.
*   登録日
LW_YN220-INSDT = LW_DATUM.
*   請求日
LW_YN220-LDATE1 = LW_DATUM.
*   照合締日
LW_YN220-CZFBDT = '20120531'.


*   キー重複チェック
SELECT SINGLE LIFNR
INTO LW_LIFNR
FROM ZN002
WHERE BUKRS  = LW_ZN002-BUKRS
AND LIFNR  = LW_ZN002-LIFNR
AND CZFBDT = LW_ZN002-CZFBDT
AND SEQ    = LW_ZN002-SEQ.
IF SY-SUBRC = 0.
LW_ERR-LIFNR  = LW_YK410-LIFNR.
LW_ERR-PAYDOC = LW_YK410-PAYDOC.
LW_ERR-MESSAGE = 'ZN002にて同じキーが存在します'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.

*   キー重複チェック
SELECT SINGLE VRFCTON
INTO LW_LIFNR
FROM YN210
WHERE GJAHR   = LW_YN210-GJAHR
AND SLPDOC  = LW_YN210-SLPDOC
AND DTLDOC  = LW_YN210-DTLDOC
AND VRFCTON = LW_YN210-VRFCTON
AND BUKRS   = LW_YN210-BUKRS.
IF SY-SUBRC = 0.
LW_ERR-LIFNR  = LW_YK410-LIFNR.
LW_ERR-PAYDOC = LW_YK410-PAYDOC.
LW_ERR-MESSAGE = 'YN210にて同じキーが存在します'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.

*   キー重複チェック
SELECT SINGLE VRFCTON
INTO LW_LIFNR
FROM YN220
WHERE GJAHR   = LW_YN220-GJAHR
AND SLPDOC  = LW_YN220-SLPDOC
AND DTLDOC  = LW_YN220-DTLDOC
AND VRFCTON = LW_YN220-VRFCTON
AND BUKRS   = LW_YN220-BUKRS.
IF SY-SUBRC = 0.
LW_ERR-LIFNR  = LW_YK410-LIFNR.
LW_ERR-PAYDOC = LW_YK410-PAYDOC.
LW_ERR-MESSAGE = 'YN220にて同じキーが存在します'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.

*   ZN002,YN210,YN220すべて登録可能な場合
APPEND LW_YN210 TO T_YN210.
G_CNT_YN210 = G_CNT_YN210 + 1.

*   会計振替以降(初期値)
APPEND LW_ZN002 TO T_ZN002.
G_CNT_ZN002 = G_CNT_ZN002 + 1.

*   その他の項目は初期値
APPEND LW_YN220 TO T_YN220.
G_CNT_YN220 = G_CNT_YN220 + 1.


ENDLOOP.

ENDFORM.                    " EDIT_YN410
*&---------------------------------------------------------------------*
*&      Form  SEARCH_ZWELS
*&---------------------------------------------------------------------*
*       支払方法検索
*----------------------------------------------------------------------*
*      -->P_PAYAMT       金額
*      -->P_ZWELS        LFB1支払方法
*      <--P_CHAR1        ZN002支払い方法
*----------------------------------------------------------------------*
FORM SEARCH_ZWELS USING    P_PAYAMT   TYPE YKPAYAMT
P_ZWELS    TYPE DZWELS
CHANGING P_CHAR1    TYPE CHAR1.
CLEAR:P_CHAR1.
* 200,000円(内部換算値2000)以上の場合
IF P_PAYAMT >= 2000.
*  'Z'があれば、'Z'
SEARCH P_ZWELS FOR 'Z'.
IF SY-SUBRC = 0.
P_CHAR1 = 'Z'.
EXIT.
ENDIF.
*  'B'があれば、'B'
SEARCH P_ZWELS FOR 'B'.
IF SY-SUBRC = 0.
P_CHAR1 = 'B'.
EXIT.
ENDIF.
ENDIF.

* 2,000円(内部換算値20)以上の場合
IF P_PAYAMT >= 20.
*  'T'があれば、'T'
SEARCH P_ZWELS FOR 'T'.
IF SY-SUBRC = 0.
P_CHAR1 = 'T'.
EXIT.
ENDIF.
ENDIF.

* 上記で設定できない場合は'9'
P_CHAR1 = '9'.

ENDFORM.                    " SEARCH_ZWELS
*&---------------------------------------------------------------------*
*&      Form  INSERT_DATA
*&---------------------------------------------------------------------*
*       データ登録
*----------------------------------------------------------------------*
FORM INSERT_DATA.

*-----支払予定（仕入）
IF T_ZN002[] IS INITIAL.
EXIT.
ENDIF.
INSERT ZN002 FROM TABLE T_ZN002.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE E758(YN01) WITH 'ZN002'.
EXIT.
ENDIF.
*-----外部データ(仕入)
IF T_YN210[] IS INITIAL.
EXIT.
ENDIF.
INSERT YN210 FROM TABLE T_YN210.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE E758(YN01) WITH 'YN210'.
EXIT.
ENDIF.
*-----自社データ(仕入)
IF T_YN220[] IS INITIAL.
EXIT.
ENDIF.
INSERT YN220 FROM TABLE T_YN220.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE E758(YN01) WITH 'YN220'.
EXIT.
ENDIF.

* すべて正常に登録できた場合
COMMIT WORK AND WAIT.

ENDFORM.                    " INSERT_DATA
*&---------------------------------------------------------------------*
*&      Form  WRITE_IKO
*&---------------------------------------------------------------------*
*       処理結果出力【移行】
*----------------------------------------------------------------------*
FORM WRITE_IKO.
DATA:LW_CNT(10)  TYPE C,
LW_ERR      TYPE TYP_ERR.

WRITE G_CNT_YK410 TO LW_CNT.
WRITE: /001 '<データ移行>',
/003 '支払予定データ(YK410)抽出件数：',
040 LW_CNT,
050 '件'.
SKIP 1.

WRITE G_CNT_ZN002 TO LW_CNT.
WRITE: /003 '支払予定（仕入）(ZN002)登録件数：',
040 LW_CNT,
050 '件'.
WRITE G_CNT_YN210 TO LW_CNT.
WRITE: /003 '外部データ(仕入)(YN210)登録件数：',
040 LW_CNT,
050 '件'.
WRITE G_CNT_YN220 TO LW_CNT.
WRITE: /003 '自社データ(仕入)(YN220)登録件数：',
040 LW_CNT,
050 '件'.
WRITE G_CNT_ERR TO LW_CNT.
WRITE: /003 'エラー件数：',
040 LW_CNT,
050 '件'.
CHECK NOT T_ERR[] IS INITIAL.
SKIP 1.
WRITE: /003 '仕入先',
014 '支払予定番号',
029 'エラー内容'.
ULINE.
LOOP AT T_ERR INTO LW_ERR.
WRITE: /003 LW_ERR-LIFNR,
014 LW_ERR-PAYDOC,
029 LW_ERR-MESSAGE.
ENDLOOP.

ENDFORM.                    " WRITE_IKO
*&---------------------------------------------------------------------*
*&      Form  DEL_DATA_GET_ZN002
*&---------------------------------------------------------------------*
*       ZN002データ取得【削除】
*----------------------------------------------------------------------*
FORM DEL_DATA_GET_ZN002.

SELECT *
INTO TABLE T_ZN002
FROM ZN002
WHERE BUKRS  IN P_BUK_Z
AND LIFNR  IN P_LIF_Z
AND CZFBDT IN P_CZF_Z
AND SEQ    IN P_SEQ_Z.

IF SY-SUBRC = 0.
DESCRIBE TABLE T_ZN002 LINES G_CNT_ZN002.
ELSE.
MESSAGE S762(YN01).
ENDIF.

ENDFORM.                    " DEL_DATA_GET_ZN002
*&---------------------------------------------------------------------*
*&      Form  DEL_DATA_ZN002
*&---------------------------------------------------------------------*
*       ZN002削除【削除】
*----------------------------------------------------------------------*
FORM DEL_DATA_ZN002.

DELETE ZN002 FROM TABLE T_ZN002.
IF SY-SUBRC = 0.
COMMIT WORK AND WAIT.
ELSE.
ROLLBACK WORK.
MESSAGE E758(YN01) WITH 'ZN002'.
ENDIF.

ENDFORM.                    " DEL_DATA_ZN002
*&---------------------------------------------------------------------*
*&      Form  DEL_DATA_GET_YN2XX
*&---------------------------------------------------------------------*
*       YN210,YN220データ取得【削除】
*----------------------------------------------------------------------*
FORM DEL_DATA_GET_YN2XX.

SELECT *
INTO TABLE T_YN210
FROM YN210
WHERE GJAHR   IN P_GJA_1
AND SLPDOC  IN P_SLP_1
AND DTLDOC  IN P_DTL_1
AND VRFCTON IN P_VRF_1
AND BUKRS   IN P_BUK_1.

IF SY-SUBRC = 0.
DESCRIBE TABLE T_YN210 LINES G_CNT_YN210.
ENDIF.

SELECT *
INTO TABLE T_YN220
FROM YN220
WHERE GJAHR   IN P_GJA_1
AND SLPDOC  IN P_SLP_1
AND DTLDOC  IN P_DTL_1
AND VRFCTON IN P_VRF_1
AND BUKRS   IN P_BUK_1.

IF SY-SUBRC = 0.
DESCRIBE TABLE T_YN220 LINES G_CNT_YN220.
ENDIF.

ENDFORM.                    " DEL_DATA_GET_YN2XX
*&---------------------------------------------------------------------*
*&      Form  DEL_DATA_YN2XX
*&---------------------------------------------------------------------*
*       YN210,YN220削除【削除】
*----------------------------------------------------------------------*
FORM DEL_DATA_YN2XX.

IF NOT T_YN210[] IS INITIAL.
DELETE YN210 FROM TABLE T_YN210.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE E758(YN01) WITH 'YN210'.
ENDIF.
ENDIF.

IF NOT T_YN220[] IS INITIAL.
DELETE YN220 FROM TABLE T_YN220.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE E758(YN01) WITH 'YN220'.
ENDIF.
ENDIF.

COMMIT WORK AND WAIT.
ENDFORM.                    " DEL_DATA_YN2XX
*&---------------------------------------------------------------------*
*&      Form  WRITE_DEL
*&---------------------------------------------------------------------*
*       処理結果出力【削除】
*----------------------------------------------------------------------*
FORM WRITE_DEL.
DATA:LW_CNT(10)  TYPE C.

WRITE G_CNT_ZN002 TO LW_CNT.
WRITE: /001 '<移行データ削除>',
/003 '支払予定（仕入）(ZN002)削除件数：',
030 LW_CNT,
040 '件'.
WRITE G_CNT_YN210 TO LW_CNT.
WRITE: /003 '外部データ(仕入)(YN210)削除件数：',
030 LW_CNT,
040 '件'.
WRITE G_CNT_YN220 TO LW_CNT.
WRITE: /003 '自社データ(仕入)(YN220)削除件数：',
030 LW_CNT,
040 '件'.

ENDFORM.                    " WRITE_DEL
*&---------------------------------------------------------------------*
*&      Form  GET_LIFNR
*&---------------------------------------------------------------------*
*       仕入先の処理対象かどうかのチェック用データ取得
*----------------------------------------------------------------------*
FORM GET_LIFNR.

DATA:LT_YK410       TYPE T_TYP_YK410,
LW_YK410       TYPE YK410,
L_ID           TYPE THEAD-TDID,
L_LANGU        TYPE THEAD-TDSPRAS,
L_NAME         TYPE THEAD-TDNAME,
L_OBJECT       TYPE THEAD-TDOBJECT,
LT_LINES       TYPE STANDARD TABLE OF TLINE,
LW_LINES       TYPE TLINE.

LT_YK410[] = T_YK410[].
SORT LT_YK410 BY LIFNR.
DELETE ADJACENT DUPLICATES FROM LT_YK410 COMPARING LIFNR.
L_LANGU   = C_SPRAS.
L_ID      = 'YN01'.
L_OBJECT  = 'LFB1'.

LOOP AT LT_YK410 INTO LW_YK410.
CLEAR:LT_LINES, LW_LINES.
CONCATENATE LW_YK410-LIFNR LW_YK410-BUKRS
INTO L_NAME.
*   テキスト読込
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID                            = L_ID
LANGUAGE                      = L_LANGU
NAME                          = L_NAME
OBJECT                        = L_OBJECT
TABLES
LINES                         = LT_LINES
EXCEPTIONS
ID                            = 1
LANGUAGE                      = 2
NAME                          = 3
*     NOT_FOUND                     = 4
OBJECT                        = 5
REFERENCE_CHECK               = 6
WRONG_ACCESS_TO_ARCHIVE       = 7
OTHERS                        = 8.
IF SY-SUBRC = 0.
READ TABLE LT_LINES INTO LW_LINES INDEX 1.
IF LW_LINES-TDLINE = 'X'
OR LW_LINES-TDLINE = 'Y'.
ELSE.
DELETE T_YK410 WHERE LIFNR = LW_YK410-LIFNR.
ENDIF.
ELSE.
DELETE T_YK410 WHERE LIFNR = LW_YK410-LIFNR.
ENDIF.
ENDLOOP.

SORT T_YK410 BY LIFN1.
DESCRIBE TABLE T_YK410 LINES G_CNT_YK410.
* 再度0件チェック
IF G_CNT_YK410 IS INITIAL.
MESSAGE S762(YN01).
ENDIF.

ENDFORM.                    " GET_LIFNR
*&---------------------------------------------------------------------*
*&      Form  FRM_CHK_FILE
*&---------------------------------------------------------------------*
*       ファイルダウンロード検索ヘルプ
*----------------------------------------------------------------------*
FORM FRM_CHK_FILE.
* Mod ES-UP 2012/10/16 -->
*  CALL FUNCTION 'WS_FILENAME_GET'
*       EXPORTING
*            MASK     = '*.*,ALL Files,*.*. '
*            MODE     = 'S'
*            TITLE    = 'ダウンロード'
*       IMPORTING
*            FILENAME = P_PASS
*       EXCEPTIONS
*            OTHERS   = 5.
*  IF SY-SUBRC <> 0.
*  ENDIF.
DATA: L_FILENAME    TYPE STRING,
L_PATH        TYPE STRING,
L_FULLPATH    TYPE STRING,
L_TITLE       TYPE STRING,
L_USER_ACTION TYPE I.
L_TITLE = `ダウンロード`.
CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG(
EXPORTING
WINDOW_TITLE         = L_TITLE
*      DEFAULT_EXTENSION    = DEFAULT_EXTENSION
*      DEFAULT_FILE_NAME    = DEFAULT_FILE_NAME
*      WITH_ENCODING        = WITH_ENCODING
*      FILE_FILTER          = FILE_FILTER
*      INITIAL_DIRECTORY    = INITIAL_DIRECTORY
*      PROMPT_ON_OVERWRITE  = 'X'
CHANGING
FILENAME             = L_FILENAME
PATH                 = L_PATH
FULLPATH             = L_FULLPATH
USER_ACTION          = L_USER_ACTION
*      FILE_ENCODING        = FILE_ENCODING
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4 ).
IF SY-SUBRC = 0
AND L_USER_ACTION = CL_GUI_FRONTEND_SERVICES=>ACTION_OK.
P_PASS = L_FULLPATH.
ENDIF.
* Mod ES-UP 2012/10/16 <--
ENDFORM.                    " FRM_CHK_FILE
*&---------------------------------------------------------------------*
*&      Form  DOWNLOAD
*&---------------------------------------------------------------------*
*       ファイルダウンロード
*----------------------------------------------------------------------*
FORM DOWNLOAD.
DATA:L_PASS TYPE STRING,
LT_DOWNLOAD TYPE T_TYP_DOWNLOAD,
LW_DOWNLOAD TYPE TYP_DOWNLOAD,
LW_YK410    TYPE YK410.
* Add ES-UP 2012/10/16 -->
DATA L_CODEPAGE TYPE ABAP_ENCODING.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
* Add ES-UP 2012/10/16 <--
L_PASS = P_PASS.

CHECK NOT ( T_YK410[] IS INITIAL ).
* 変換処理
LOOP AT T_YK410 INTO LW_YK410.
MOVE-CORRESPONDING LW_YK410 TO LW_DOWNLOAD.
*   後ろマイナスの変換
IF LW_YK410-PAYAMT < 0.       "支払予定額
SHIFT LW_DOWNLOAD-PAYAMT CIRCULAR RIGHT.
ENDIF.
CONDENSE LW_DOWNLOAD-PAYAMT NO-GAPS.
APPEND LW_DOWNLOAD TO LT_DOWNLOAD.
ENDLOOP.

CALL FUNCTION 'GUI_DOWNLOAD'
EXPORTING
*     BIN_FILESIZE                  =
FILENAME                      = L_PASS
FILETYPE                       = 'ASC'
*     APPEND                        = ' '
WRITE_FIELD_SEPARATOR         = 'X'
*     HEADER                        = '00'
*     TRUNC_TRAILING_BLANKS         = ' '
*     WRITE_LF                      = 'X'
*     COL_SELECT                    = ' '
*     COL_SELECT_MASK               = ' '
* Add ES-UP 2012/10/16 -->
CODEPAGE                  = L_CODEPAGE
* Add ES-UP 2012/10/16 <--
*   IMPORTING
*     FILELENGTH                    =
TABLES
DATA_TAB                      = LT_DOWNLOAD
EXCEPTIONS
FILE_WRITE_ERROR              = 1
NO_BATCH                      = 2
GUI_REFUSE_FILETRANSFER       = 3
INVALID_TYPE                  = 4
NO_AUTHORITY                  = 5
UNKNOWN_ERROR                 = 6
HEADER_NOT_ALLOWED            = 7
SEPARATOR_NOT_ALLOWED         = 8
FILESIZE_NOT_ALLOWED          = 9
HEADER_TOO_LONG               = 10
DP_ERROR_CREATE               = 11
DP_ERROR_SEND                 = 12
DP_ERROR_WRITE                = 13
UNKNOWN_DP_ERROR              = 14
ACCESS_DENIED                 = 15
DP_OUT_OF_MEMORY              = 16
DISK_FULL                     = 17
DP_TIMEOUT                    = 18
FILE_NOT_FOUND                = 19
DATAPROVIDER_EXCEPTION        = 20
CONTROL_FLUSH_ERROR           = 21
OTHERS                        = 22
.
IF SY-SUBRC <> 0.
MESSAGE I000 WITH 'ダウンロードに失敗しました'.
ELSE.
MESSAGE S000 WITH 'ダウンロードしました'.
ENDIF.

ENDFORM.                    " DOWNLOAD
