*&---------------------------------------------------------------------*
*& Report  YTEST_PO_CREAT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  YTEST_PO_CREAT NO STANDARD PAGE HEADING.

CONSTANTS CNS_TYP(10)    TYPE C VALUE 'ASC'.  "アスキーコード

TYPES:
BEGIN OF TYP_FIELD,
NUM(6)        TYPE N,
EBELP         TYPE EBELP,
DOC_TYPE      TYPE BAPIMEPOHEADER-DOC_TYPE,
COMP_CODE     TYPE BAPIMEPOHEADER-COMP_CODE,
VENDOR        TYPE BAPIMEPOHEADER-VENDOR,
PURCH_ORG     TYPE BAPIMEPOHEADER-PURCH_ORG,
PUR_GROUP     TYPE BAPIMEPOHEADER-PUR_GROUP,
DOC_DATE      TYPE BAPIMEPOHEADER-DOC_DATE,
PMNTTRMS      TYPE BAPIMEPOHEADER-PMNTTRMS,
CURRENCY      TYPE BAPIMEPOHEADER-CURRENCY,
ACCTASSCAT    TYPE BAPIMEPOITEM-ACCTASSCAT,
MATERIAL      TYPE BAPIMEPOITEM-MATERIAL,
SHORT_TEXT    TYPE BAPIMEPOITEM-SHORT_TEXT,
QUANTITY      TYPE BAPIMEPOITEM-QUANTITY,
ORDERPR_UN    TYPE BAPIMEPOITEM-ORDERPR_UN,
PLANT         TYPE BAPIMEPOITEM-PLANT,
TAX_CODE      TYPE BAPIMEPOITEM-TAX_CODE,
NET_PRICE     TYPE BAPIMEPOITEM-NET_PRICE,
PRICE_UNIT    TYPE BAPIMEPOITEM-PRICE_UNIT,
DELIVERY_DATE TYPE BAPIMEPOSCHEDULE-DELIVERY_DATE,
FREE_ITEM     TYPE BAPIMEPOITEM-FREE_ITEM,
COSTCENTER    TYPE BAPIMEPOACCOUNT-COSTCENTER,
SD_DOC        TYPE BAPIMEPOACCOUNT-SD_DOC,
ITM_NUMBER    TYPE BAPIMEPOACCOUNT-ITM_NUMBER,
END OF TYP_FIELD,

BEGIN OF TYP_MES,
NUM(6)    TYPE N,
PO_NUMBER TYPE BAPIMEPOHEADER-PO_NUMBER,
MSG       TYPE BAPI_MSG,
END OF TYP_MES.

DATA:
IT_DATA        TYPE STANDARD TABLE OF TYP_FIELD,
ST_POHEADER    TYPE BAPIMEPOHEADER,
ST_POHEADERX   TYPE BAPIMEPOHEADERX,
IT_RETURN_PURC TYPE STANDARD TABLE OF BAPIRET2,
IT_POITEM      TYPE STANDARD TABLE OF BAPIMEPOITEM,
ST_POITEM      TYPE BAPIMEPOITEM,
IT_POITEMX     TYPE STANDARD TABLE OF BAPIMEPOITEMX,
ST_POITEMX     TYPE BAPIMEPOITEMX,
IT_POSCHEDULE  TYPE STANDARD TABLE OF BAPIMEPOSCHEDULE,
ST_POSCHEDULE  TYPE BAPIMEPOSCHEDULE,
IT_POSCHEDULEX TYPE STANDARD TABLE OF BAPIMEPOSCHEDULX,
ST_POSCHEDULEX TYPE BAPIMEPOSCHEDULX,
IT_POCOND      TYPE STANDARD TABLE OF BAPIMEPOCOND,
ST_POCOND      TYPE BAPIMEPOCOND,
IT_POCONDX     TYPE STANDARD TABLE OF BAPIMEPOCONDX,
ST_POCONDX     TYPE BAPIMEPOCONDX,
IT_ACCOUNT     TYPE STANDARD TABLE OF BAPIMEPOACCOUNT,
ST_ACCOUNT     TYPE BAPIMEPOACCOUNT,
IT_ACCOUNTX    TYPE STANDARD TABLE OF BAPIMEPOACCOUNTX,
ST_ACCOUNTX    TYPE BAPIMEPOACCOUNTX,
W_ORDER        TYPE BAPIMEPOHEADER-PO_NUMBER,
FLG_ZB         TYPE C,
IT_MES         TYPE STANDARD TABLE OF TYP_MES.

*&----------------------------------------------------------------------
* SELECTION-SCREEN
*&----------------------------------------------------------------------
PARAMETERS:
P_FILE     TYPE ZEFILENAME,                        "Error File
P_TEST     TYPE C AS CHECKBOX DEFAULT 'X'.

*----------------------------------------------------------------------*
* AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
* ファイルパス
PERFORM INIT_FILENM_HELP CHANGING P_FILE.

*----------------------------------------------------------------------*
* INITIALIZATION
*----------------------------------------------------------------------*
INITIALIZATION.
PERFORM FRM_INI.

*&---------------------------------------------------------------------*
*&      Form  FRM_INI
*&---------------------------------------------------------------------*
FORM FRM_INI.
CLEAR:
IT_DATA,
ST_POHEADER,
ST_POHEADERX,
IT_RETURN_PURC,
IT_POITEM,
ST_POITEM,
IT_POITEMX,
ST_POITEMX,
IT_POSCHEDULE,
IT_POSCHEDULEX,
IT_POCOND,
ST_POCOND,
IT_POCONDX,
ST_POCONDX,
IT_ACCOUNT,
ST_ACCOUNT,
IT_ACCOUNTX,
ST_ACCOUNTX,
W_ORDER,
FLG_ZB,
IT_MES.
ENDFORM.                    " FRM_INI

*----------------------------------------------------------------------*
* START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.
PERFORM UPLOAD_LOCAL_FILE.

PERFORM EDIT_FILE.

TOP-OF-PAGE.
IF P_TEST IS NOT INITIAL.
WRITE: /(6) '番号', (120)'メッセージ'.
ELSE.
WRITE: (6)'番号',(15)'PO' , (120)'メッセージ'.
ENDIF.


*&---------------------------------------------------------------------*
*&      Form  INIT_ERRORFILE_HELP
*&---------------------------------------------------------------------*
*       ファイルパス
*----------------------------------------------------------------------*
*      <--O_FILENAME  エラーファイルパス
*----------------------------------------------------------------------*
FORM INIT_FILENM_HELP  CHANGING O_FILENAME TYPE RLGRAP-FILENAME.
DATA:
LTD_FILETABLE   TYPE FILETABLE,
LREF_FILETABLE  TYPE REF TO FILE_TABLE,
LW_RC           TYPE I.

CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
CHANGING
FILE_TABLE              = LTD_FILETABLE
RC                      = LW_RC
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 1
CNTL_ERROR              = 2
ERROR_NO_GUI            = 3
NOT_SUPPORTED_BY_GUI    = 4
OTHERS                  = 5.

IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

CLEAR LREF_FILETABLE.
READ TABLE LTD_FILETABLE REFERENCE INTO LREF_FILETABLE INDEX 1.

IF SY-SUBRC = 0.

O_FILENAME = LREF_FILETABLE->FILENAME.

ENDIF.

ENDFORM.                    " INIT_FILENM_HELP

*&---------------------------------------------------------------------*
*&      Form  UPLOAD_LOCAL_FILE
*&---------------------------------------------------------------------*
*       text  ローカルファイル読込
*----------------------------------------------------------------------*
FORM UPLOAD_LOCAL_FILE.

DATA :
LW_FILE            TYPE RLGRAP-FILENAME,
LT_ALSMEX_TABLINE  TYPE STANDARD TABLE OF ALSMEX_TABLINE,
LS_TABLE           TYPE ALSMEX_TABLINE,
EXCEPTION          TYPE REF TO CX_ROOT,
LS_FILE            TYPE TYP_FIELD,
L_CNT              TYPE I.

LW_FILE = P_FILE.

CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE'
EXPORTING
FILENAME                      = LW_FILE
I_BEGIN_COL                   = 1
I_BEGIN_ROW                   = 2
I_END_COL                     = 24
I_END_ROW                     = 4342
TABLES
INTERN                        = LT_ALSMEX_TABLINE
EXCEPTIONS
INCONSISTENT_PARAMETERS       = 1
UPLOAD_OLE                    = 2
OTHERS                        = 3.
IF SY-SUBRC <> 0.
MESSAGE S401(Y1) WITH '入力ファイルオープンエラー'
P_FILE.

LEAVE LIST-PROCESSING.
ELSE.
DESCRIBE TABLE LT_ALSMEX_TABLINE LINES L_CNT.
IF L_CNT = 0.
MESSAGE S401(Y1) WITH '入力ファイルオープンエラー'
P_FILE.

LEAVE LIST-PROCESSING.
ELSE.
SORT LT_ALSMEX_TABLINE BY ROW COL.
TRY.
LOOP AT LT_ALSMEX_TABLINE INTO LS_TABLE.
CASE LS_TABLE-COL.
WHEN '0001'.
LS_FILE-NUM           = LS_TABLE-VALUE.
WHEN '0002'.
LS_FILE-EBELP         = LS_TABLE-VALUE.
WHEN '0003'.
LS_FILE-DOC_TYPE      = LS_TABLE-VALUE.
WHEN '0004'.
LS_FILE-COMP_CODE     = LS_TABLE-VALUE.
WHEN '0005'.
LS_FILE-VENDOR        = LS_TABLE-VALUE.
WHEN '0006'.
LS_FILE-PURCH_ORG     = LS_TABLE-VALUE.
WHEN '0007'.
LS_FILE-PUR_GROUP     = LS_TABLE-VALUE.
WHEN '0008'.
LS_FILE-DOC_DATE      = LS_TABLE-VALUE.
WHEN '0009'.
LS_FILE-PMNTTRMS      = LS_TABLE-VALUE.
WHEN '0010'.
LS_FILE-CURRENCY      = LS_TABLE-VALUE.
WHEN '0011'.
LS_FILE-ACCTASSCAT    = LS_TABLE-VALUE.
WHEN '0012'.
LS_FILE-MATERIAL      = LS_TABLE-VALUE.
WHEN '0013'.
LS_FILE-SHORT_TEXT    = LS_TABLE-VALUE.
WHEN '0014'.
LS_FILE-QUANTITY      = LS_TABLE-VALUE.
WHEN '0015'.
LS_FILE-ORDERPR_UN    = LS_TABLE-VALUE.
WHEN '0016'.
LS_FILE-PLANT         = LS_TABLE-VALUE.
WHEN '0017'.
LS_FILE-TAX_CODE      = LS_TABLE-VALUE.
WHEN '0018'.
LS_FILE-NET_PRICE     = LS_TABLE-VALUE.
WHEN '0019'.
LS_FILE-PRICE_UNIT    = LS_TABLE-VALUE.
WHEN '0020'.
LS_FILE-DELIVERY_DATE = LS_TABLE-VALUE.
WHEN '0021'.
LS_FILE-FREE_ITEM     = LS_TABLE-VALUE.
WHEN '0022'.
LS_FILE-COSTCENTER    = LS_TABLE-VALUE.
WHEN '0023'.
LS_FILE-SD_DOC        = LS_TABLE-VALUE.
WHEN '0024'.
LS_FILE-ITM_NUMBER    = LS_TABLE-VALUE.
WHEN OTHERS.
ENDCASE.
AT END OF ROW.
APPEND LS_FILE TO IT_DATA.
CLEAR LS_FILE.
ENDAT.
ENDLOOP.
CATCH CX_ROOT INTO EXCEPTION.
MESSAGE 'Excel data format is wrong,please check' TYPE 'E'.
ENDTRY.
ENDIF.
ENDIF.

SORT IT_DATA BY NUM   ASCENDING
EBELP ASCENDING.

ENDFORM.                    " UPLOAD_LOCAL_FILE
*&---------------------------------------------------------------------*
*&      Form  EDIT_FILE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM EDIT_FILE.

DATA:
LST_FIELD      TYPE TYP_FIELD,
LST_DATA1      TYPE TYP_FIELD,
LST_DATA       TYPE TYP_FIELD,
LTD_FIELD      TYPE STANDARD TABLE OF TYP_FIELD,
LST_MES        TYPE TYP_MES,
LW_PO_ITEM     TYPE EBELP,
LW_AMOUNT      TYPE BAPICURR_D.

LOOP AT IT_DATA INTO LST_DATA1.
LST_DATA = LST_DATA1.

AT NEW NUM.

LW_PO_ITEM = 10.

CLEAR:
FLG_ZB,
ST_POHEADER,
ST_POHEADERX,
W_ORDER.

REFRESH:
IT_RETURN_PURC,
IT_POITEM,
IT_POITEMX,
IT_POSCHEDULE,
IT_POSCHEDULEX,
IT_POCOND,
IT_POCONDX,
IT_ACCOUNT,
IT_ACCOUNTX.

IF LST_DATA-DOC_TYPE = 'ZB'.
FLG_ZB = ABAP_ON.
ENDIF.

ST_POHEADER-DOC_TYPE    = LST_DATA-DOC_TYPE.
ST_POHEADERX-DOC_TYPE   = ABAP_ON.

ST_POHEADER-COMP_CODE   = LST_DATA-COMP_CODE.
ST_POHEADERX-COMP_CODE  = ABAP_ON.

ST_POHEADER-VENDOR      = LST_DATA-VENDOR.
ST_POHEADERX-VENDOR     = ABAP_ON.

ST_POHEADER-PURCH_ORG   = LST_DATA-PURCH_ORG.
ST_POHEADERX-PURCH_ORG  = ABAP_ON.

ST_POHEADER-PUR_GROUP   = LST_DATA-PUR_GROUP.
ST_POHEADERX-PUR_GROUP  = ABAP_ON.

ST_POHEADER-DOC_DATE    = LST_DATA-DOC_DATE.
ST_POHEADERX-DOC_DATE   = ABAP_ON.

IF LST_DATA-PMNTTRMS IS NOT INITIAL.
ST_POHEADER-PMNTTRMS  = LST_DATA-PMNTTRMS.
ST_POHEADERX-PMNTTRMS = ABAP_ON.
ENDIF.

IF LST_DATA-CURRENCY IS NOT INITIAL.
ST_POHEADER-CURRENCY  = LST_DATA-CURRENCY.
ST_POHEADERX-CURRENCY = ABAP_ON.
ENDIF.

ENDAT.

ST_POITEM-PO_ITEM            = LW_PO_ITEM.
ST_POITEMX-PO_ITEM           = LW_PO_ITEM.

ST_POITEM-ACCTASSCAT         = LST_DATA-ACCTASSCAT.
ST_POITEMX-ACCTASSCAT        = ABAP_ON.

ST_POITEM-MATERIAL           = LST_DATA-MATERIAL.
ST_POITEMX-MATERIAL          = ABAP_ON.

ST_POITEM-SHORT_TEXT         = LST_DATA-SHORT_TEXT.
ST_POITEMX-SHORT_TEXT        = ABAP_ON.

ST_POITEM-QUANTITY           = LST_DATA-QUANTITY.
ST_POITEMX-QUANTITY          = ABAP_ON.

ST_POITEM-ORDERPR_UN         = LST_DATA-ORDERPR_UN.
ST_POITEMX-ORDERPR_UN        = ABAP_ON.

ST_POITEM-PLANT              = LST_DATA-PLANT.
ST_POITEMX-PLANT             = ABAP_ON.

ST_POITEM-TAX_CODE           = LST_DATA-TAX_CODE.
ST_POITEMX-TAX_CODE          = ABAP_ON.

ST_POITEM-NET_PRICE          = LST_DATA-NET_PRICE.
ST_POITEMX-NET_PRICE         = ABAP_ON.

ST_POITEM-PRICE_UNIT         = LST_DATA-PRICE_UNIT.
ST_POITEMX-PRICE_UNIT        = ABAP_ON.

ST_POITEM-FREE_ITEM          = LST_DATA-FREE_ITEM.
ST_POITEMX-FREE_ITEM         = ABAP_ON.

IF FLG_ZB IS NOT INITIAL.
ST_POITEM-RET_ITEM  = ABAP_ON.
ST_POITEMX-RET_ITEM = ABAP_ON.
ENDIF.

ST_ACCOUNT-PO_ITEM           = LW_PO_ITEM.
ST_ACCOUNTX-PO_ITEM          = LW_PO_ITEM.

IF ST_POITEM-ACCTASSCAT = 'M'.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT         = LST_DATA-SD_DOC
IMPORTING
OUTPUT        = ST_ACCOUNT-SD_DOC.

ST_ACCOUNTX-SD_DOC     = ABAP_ON.

ELSEIF ST_POITEM-ACCTASSCAT <> SPACE.

ST_ACCOUNT-COSTCENTER  = LST_DATA-COSTCENTER.
ST_ACCOUNTX-COSTCENTER = ABAP_ON.

ENDIF.

IF ST_POITEM-ACCTASSCAT = 'M'.
ST_ACCOUNT-ITM_NUMBER      = LST_DATA-ITM_NUMBER.
ST_ACCOUNTX-ITM_NUMBER     = ABAP_ON.
ENDIF.

ST_POSCHEDULE-PO_ITEM        = LW_PO_ITEM.
ST_POSCHEDULEX-PO_ITEM       = LW_PO_ITEM.

ST_POSCHEDULE-QUANTITY       = LST_DATA-QUANTITY.
ST_POSCHEDULEX-QUANTITY      = ABAP_ON.

ST_POSCHEDULE-DELIVERY_DATE  = LST_DATA-DELIVERY_DATE.
ST_POSCHEDULEX-DELIVERY_DATE = ABAP_ON.

LW_PO_ITEM = LW_PO_ITEM + 10.

IF FLG_ZB IS NOT INITIAL.
ST_POITEM-RET_ITEM  = ABAP_ON.
ST_POITEMX-RET_ITEM = ABAP_ON.
ENDIF.

APPEND ST_POITEM TO IT_POITEM.
CLEAR ST_POITEM.

APPEND ST_POITEMX TO IT_POITEMX.
CLEAR ST_POITEMX.

APPEND ST_ACCOUNT TO IT_ACCOUNT.
CLEAR ST_ACCOUNT.

APPEND ST_ACCOUNTX TO IT_ACCOUNTX.
CLEAR ST_ACCOUNTX.

APPEND ST_POSCHEDULE TO IT_POSCHEDULE.
CLEAR ST_POSCHEDULE.

APPEND ST_POSCHEDULEX TO IT_POSCHEDULEX.
CLEAR ST_POSCHEDULEX.

AT END OF NUM.
PERFORM BAPI_CREAT USING LST_DATA.
ENDAT.

ENDLOOP.

LOOP AT IT_MES INTO LST_MES.
IF P_TEST IS NOT INITIAL.
WRITE: /(6) LST_MES-NUM,
(140)LST_MES-MSG.
ELSE.
WRITE:(6)LST_MES-NUM,
(15) LST_MES-PO_NUMBER,
(140)LST_MES-MSG.
ENDIF.
ENDLOOP.

ENDFORM.                    " EDIT_FILE

*&---------------------------------------------------------------------*
*&      Form  BAPI_CREAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM BAPI_CREAT USING I_ST_DATA TYPE TYP_FIELD.

DATA:
LST_RETURN TYPE BAPIRET2,
LST_MES    TYPE TYP_MES.

REFRESH:
IT_RETURN_PURC.

CALL FUNCTION 'BAPI_PO_CREATE1'
EXPORTING
POHEADER         = ST_POHEADER
POHEADERX        = ST_POHEADERX
TESTRUN          = P_TEST
IMPORTING
EXPPURCHASEORDER = W_ORDER
TABLES
RETURN           = IT_RETURN_PURC
POITEM           = IT_POITEM
POITEMX          = IT_POITEMX
POSCHEDULE       = IT_POSCHEDULE
POSCHEDULEX      = IT_POSCHEDULEX
POACCOUNT        = IT_ACCOUNT
POACCOUNTX       = IT_ACCOUNTX.

CLEAR:
LST_MES.

LOOP AT IT_RETURN_PURC INTO LST_RETURN
WHERE TYPE = 'A'
OR TYPE = 'E'.
MESSAGE ID LST_RETURN-ID
TYPE LST_RETURN-TYPE
NUMBER LST_RETURN-NUMBER
WITH LST_RETURN-MESSAGE_V1
LST_RETURN-MESSAGE_V2
LST_RETURN-MESSAGE_V3
LST_RETURN-MESSAGE_V4
INTO LST_MES-MSG.
EXIT.
ENDLOOP.

IF SY-SUBRC <> 0.
CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
EXPORTING
WAIT          = ABAP_ON.

LST_MES-PO_NUMBER = W_ORDER.
LST_MES-MSG       = 'PO登#成功'.
ENDIF.

LST_MES-NUM = I_ST_DATA-NUM.

APPEND LST_MES TO IT_MES.
CLEAR LST_MES.
CLEAR FLG_ZB.

ENDFORM.                    " BAPI_CREAT
