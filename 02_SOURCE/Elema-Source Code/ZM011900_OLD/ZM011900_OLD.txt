*&-------------------------------------------------------------------
*& Report  ZM011900
*&-------------------------------------------------------------------
* [プログラム名]
*   ZM011900  当日入庫一覧表
* [処理概要]
*　　　当日入庫一覧表を作成する
* [改定履歴]
*　YYYY/MM/DD    Programar    Description
*  2004/05/06    T.KIHARA     新規開発　
*  2007/04/20    S.KURATA     ユーロ対応(換算レート取得方法変更)
*  2007/12/12    S.ONUKI      表示項目追加
*  2010/02/23    J.MA         表示項目追加
*&-------------------------------------------------------------------
REPORT ZM011900.

TYPE-POOLS SLIS.

* 構造宣言
TYPES: BEGIN OF TYP_ZM011900,
MATNR      TYPE        MSEG-MATNR,      "品目コード
MAKTX      TYPE        MAKT-MAKTX,      "品目テキスト  add 2007/12/11
WERKS      TYPE        MSEG-WERKS,      "プラント
LIFNR      TYPE        MSEG-LIFNR,      "仕入先勘定コード
KUNNR      TYPE        MSEG-KUNNR,      "得意先コード
NAME1      TYPE        LFA1-NAME1,      "得意先名称    add 2007/12/19
BWART      TYPE        MSEG-BWART,      "移動タイプ
MBLNR      TYPE        MSEG-MBLNR,      "入出庫伝票番号
MJAHR      TYPE        MSEG-MJAHR,      "入出庫伝票年度
WAERS      TYPE        LFM1-WAERS,      "通貨コード
DMBTR      TYPE        MSEG-DMBTR,      "国内通貨額
KDAUF      TYPE        MSEG-KDAUF,      "受注伝票番号
ERFMG      TYPE        MSEG-ERFMG,      "数量
BLDAT      TYPE        MKPF-BLDAT,      "伝票日付
BUDAT      TYPE        MKPF-BUDAT,      "伝票の転記日付
CPUDT      TYPE        MKPF-CPUDT,      "会計伝票登録日
CPUTM      TYPE        MKPF-CPUTM,      "登録時間
AEDAT      TYPE        MKPF-AEDAT,      "変更日
USNAM      TYPE        MKPF-USNAM,      "ユーザ名
LGPBE      TYPE        MARD-LGPBE,      "棚番          add 2007/12/11
EKGRP      TYPE        EKKO-EKGRP,      "購買グループ
EBELN      TYPE        EKKO-EBELN,      "購買伝票番号
LPONR      TYPE        EKKO-LPONR,      "最終明細番号
NETPR      TYPE        EKPO-NETPR,      "購買伝票番号における正味額
PEINH      TYPE        EKPO-PEINH,      "価格単位
INGAKU     TYPE        P DECIMALS 2,    "入庫金額
UKURS      TYPE        TCURR-UKURS,     "換算レート
INGAKU2    TYPE        P DECIMALS 2,    "入庫金額×社内レート
BEDAT      TYPE        EKKO-BEDAT,      "発注伝票日付　2010/2/23追加

END OF TYP_ZM011900.
* DATA宣言（処理用、帳票出力用）
DATA: GT_EXEC  TYPE TABLE OF TYP_ZM011900 ,"処理用
GF_EXEC  TYPE TYP_ZM011900.          "処理用構造

* 構造宣言,
TYPES: BEGIN OF TYP_MSEG,
MATNR      TYPE        MSEG-MATNR,      "品目コード
WERKS      TYPE        MSEG-WERKS,      "プラント
LIFNR      TYPE        MSEG-LIFNR,      "仕入先勘定コード
KUNNR      TYPE        MSEG-KUNNR,      "得意先コード
BWART      TYPE        MSEG-BWART,      "移動タイプ
MBLNR      TYPE        MSEG-MBLNR,      "入出庫伝票番号
MJAHR      TYPE        MSEG-MJAHR,      "入出庫伝票年度
DMBTR      TYPE        MSEG-DMBTR,      "国内通貨額
KDAUF      TYPE        MSEG-KDAUF,      "受注伝票番号
ERFMG      TYPE        MSEG-ERFMG,      "数量
EBELN      TYPE        MSEG-EBELN,      "購買発注番号
END OF TYP_MSEG.
* DATA宣言（処理用、帳票出力用）
DATA: GT_MSEG  TYPE TABLE OF TYP_MSEG ,"処理用
GF_MSEG  TYPE TYP_MSEG.          "処理用構造

* 構造宣言
TYPES: BEGIN OF TYP_MKPF,
BLDAT      TYPE        MKPF-BLDAT,      "伝票日付
BUDAT      TYPE        MKPF-BUDAT,      "伝票の転記日付
CPUDT      TYPE        MKPF-CPUDT,      "会計伝票登録日
CPUTM      TYPE        MKPF-CPUTM,      "登録時間
AEDAT      TYPE        MKPF-AEDAT,      "変更日
USNAM      TYPE        MKPF-USNAM,      "ユーザ名
END OF TYP_MKPF.
* DATA宣言（処理用、帳票出力用）
DATA: GT_MKPF  TYPE TABLE OF TYP_MKPF ,"処理用
GF_MKPF  TYPE TYP_MKPF.          "処理用構造

* 構造宣言
TYPES: BEGIN OF TYP_EKKO,
EKGRP      TYPE        EKKO-EKGRP,      "購買グループ
EBELN      TYPE        EKKO-EBELN,      "購買伝票番号
LPONR      TYPE        EKKO-LPONR,      "最終明細番号
BEDAT      TYPE        EKKO-BEDAT,      "発注伝票日付　2010/2/23追加
END OF TYP_EKKO.
* DATA宣言（処理用、帳票出力用）
DATA: GT_EKKO  TYPE TABLE OF TYP_EKKO ,"処理用
GF_EKKO  TYPE TYP_EKKO.          "処理用構造

* 構造宣言
TYPES: BEGIN OF TYP_EKPO,
NETPR      TYPE        EKPO-NETPR,      "購買伝票番号における正味額
PEINH      TYPE        EKPO-PEINH,      "価格単位
END OF TYP_EKPO.
* DATA宣言（処理用、帳票出力用）
DATA: GT_EKPO  TYPE TABLE OF TYP_EKPO ,"処理用
GF_EKPO  TYPE TYP_EKPO.          "処理用構造

* 構造宣言
TYPES: BEGIN OF TYP_TCURR,
KURST      TYPE        TCURR-KURST,      "換算レートタイプ
FCURR      TYPE        TCURR-FCURR,      "換算前通貨
TCURR      TYPE        TCURR-TCURR,      "換算後通貨
GDATU      TYPE        TCURR-GDATU,      "換算有効開始日
UKURS      TYPE        TCURR-UKURS,      "換算レート
END OF TYP_TCURR.
* DATA宣言（処理用、帳票出力用）
DATA: GT_TCURR  TYPE TABLE OF TYP_TCURR ,"処理用
GF_TCURR  TYPE TYP_TCURR.          "処理用構造

* 構造宣言
TYPES: BEGIN OF TYP_LFM1,
WAERS      TYPE        LFM1-WAERS,      "購買発注通貨
END OF TYP_LFM1.
* DATA宣言（処理用、帳票出力用）
DATA: GT_LFM1  TYPE TABLE OF TYP_LFM1 ,"処理用
GF_LFM1  TYPE TYP_LFM1.          "処理用構造

*構造宣言
TYPES: BEGIN OF TYPE_MAKT,
MAKTX      TYPE        MAKT-MAKTX,    "品目
END OF TYPE_MAKT.
* DATA宣言（処理用、帳票出力用）
DATA: GT_MAKT  TYPE TABLE OF TYPE_MAKT,  "処理用
GF_MAKT  TYPE TYPE_MAKT.           "処理用構造

*構造宣言
TYPES: BEGIN OF TYPE_LFA1,
NAME1      TYPE        LFA1-NAME1,     "仕入先名
END OF TYPE_LFA1.
* DATA宣言（処理用、帳票出力用）
DATA: GT_LFA1  TYPE TABLE OF TYPE_LFA1,  "処理用
GF_LFA1  TYPE TYPE_LFA1.           "処理用構造

*構造宣言
TYPES: BEGIN OF TYPE_MARD,
LGPBE      TYPE        MARD-LGPBE,    "棚番
END OF TYPE_MARD.
* DATA宣言（処理用、帳票出力用）
DATA: GT_MARD  TYPE TABLE OF TYPE_MARD,  "処理用
GF_MARD  TYPE TYPE_MARD.           "処理用構造


* 存在チェック用構造宣言
* T156
TYPES: BEGIN OF TYP_T156,
BWART      TYPE        T156-BWART,      "移動タイプ
END OF TYP_T156.
* MARA
TYPES: BEGIN OF TYP_MARA,
MATNR      TYPE        MARA-MATNR,      "品目コード
END OF TYP_MARA.
* T001W
TYPES: BEGIN OF TYP_T001W,
WERKS      TYPE        T001W-WERKS,      "プラント
END OF TYP_T001W.
* LFA1
TYPES: BEGIN OF TYP_LFA1,
LIFNR      TYPE        LFA1-LIFNR,      "仕入先勘定コード
END OF TYP_LFA1.
* KNA1
TYPES: BEGIN OF TYP_KNA1,
KUNNR      TYPE        KNA1-KUNNR,      "得意先コード
END OF TYP_KNA1.
* T024
TYPES: BEGIN OF TYP_T024,
EKGRP      TYPE        T024-EKGRP,      "購買グループ
END OF TYP_T024.


*--- REUSE_ALV_EVENTS_GET 用
DATA: GT_EVENT TYPE SLIS_T_EVENT.
DATA: GF_EVENT TYPE SLIS_ALV_EVENT.
DATA: GF_LAYOUT   TYPE SLIS_LAYOUT_ALV,     "レイアウト構造
GF_VARIANT   LIKE DISVARIANT,          "バリアント
G_TOP_OF_PAGE TYPE SLIS_FORMNAME VALUE 'TOP_OF_PAGE'.
DATA: G_REPID        TYPE SY-REPID,        " プログラムＩＤ
G_DATA         TYPE SY-DATUM.        " システム日付
DATA  GF_PRINT TYPE SLIS_PRINT_ALV.
DATA  WA_UI_FUNCTIONS TYPE UI_FUNCTIONS.

*  帳票出力用内部テーブル
DATA: GT_ALV   TYPE TABLE OF TYP_ZM011900
WITH HEADER LINE.
*  帳票出力用フィールドカタログ
DATA: GT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
WA_FIELDCAT LIKE LINE OF GT_FIELDCAT.

* 選択画面 *----------------------------------------------------*
* 特性
SELECTION-SCREEN BEGIN OF BLOCK BTOK
*フレームのタイトル設定(『特性』)
WITH FRAME TITLE TEXT-071.
* 選択項目 品目コード(任意) 複数選択
SELECT-OPTIONS:S_MATNR FOR GF_MSEG-MATNR.
* 選択項目 プラント(任意) 複数選択
SELECT-OPTIONS:S_WERKS FOR GF_MSEG-WERKS.
* 選択項目 仕入先勘定コード(任意) 複数選択
SELECT-OPTIONS:S_LIFNR FOR GF_MSEG-LIFNR.
* 選択項目 得意先コード(任意) 複数選択
SELECT-OPTIONS:S_KUNNR FOR GF_MSEG-KUNNR.
* 選択項目 移動タイプ(任意) 複数選択
SELECT-OPTIONS:S_BWART FOR GF_MSEG-BWART.
* 選択項目 伝票の転記日付(任意) 複数選択
SELECT-OPTIONS:S_BUDAT FOR GF_MKPF-BUDAT DEFAULT SY-DATUM OBLIGATORY.
* 選択項目 伝票日付(任意) 複数選択
SELECT-OPTIONS:S_BLDAT FOR GF_MKPF-BLDAT.
* 選択項目 会計伝票登録日(任意) 複数選択
SELECT-OPTIONS:S_CPUDT FOR GF_MKPF-CPUDT.
* 選択項目 登録時刻(任意) 複数選択
SELECT-OPTIONS:S_CPUTM FOR GF_MKPF-CPUTM.
* 選択項目 変更日(任意) 複数選択
SELECT-OPTIONS:S_AEDAT FOR GF_MKPF-AEDAT.
* 選択項目 ユーザ名(任意) 複数選択
SELECT-OPTIONS:S_USNAM FOR GF_MKPF-USNAM.
* 選択項目 購買グループ(任意) 複数選択
SELECT-OPTIONS:S_EKGRP FOR GF_EKKO-EKGRP.
* 選択項目 購買伝票番号(任意) 複数選択
SELECT-OPTIONS:S_EBELN FOR GF_EKKO-EBELN.
* 選択項目 入出庫伝票番号(任意) 複数選択
SELECT-OPTIONS:S_MBLNR FOR GF_MSEG-MBLNR.
* 選択項目 入出庫伝票年度(任意) 複数選択
SELECT-OPTIONS:S_MJAHR FOR GF_MSEG-MJAHR.
SELECTION-SCREEN END   OF BLOCK BTOK.

*--------------------------------------------------------------*
* INITIALIZATION
*--------------------------------------------------------------*
INITIALIZATION.

*---------------------------------------------------------------------*
* Form  FRM_INIT
*---------------------------------------------------------------------*
* 初期処理
*----------------------------------------------------------------------*
FORM FRM_INIT.

G_REPID = SY-REPID.   " プログラムＩＤ取得
G_DATA  = SY-DATUM.   " システム日付取得

ENDFORM.                    " FRM_INIT

*---------------------------------------------------------------------
* at selection-screen
*---------------------------------------------------------------------
AT SELECTION-SCREEN.
*入力チェック(月､営業所､営業グループ､品目階層、得意先)
IF SY-UCOMM+0(1) <> '%'.
* 品目コードチェック
PERFORM FRM_CHECK_MATNR.
* プラントチェック
PERFORM FRM_CHECK_WERKS.
* 仕入先勘定コードチェック
PERFORM FRM_CHECK_LIFNR.
* 得意先コードチェック
PERFORM FRM_CHECK_KUNNR.
* 移動タイプチェック
PERFORM FRM_CHECK_BWART.
* 購買グループチェック
PERFORM FRM_CHECK_EKGRP.
ENDIF.

*---------------------------------------------------------------------
* TOP-OF-PAGE
*---------------------------------------------------------------------
*TOP-OF-PAGE.
*ヘッダ設定
PERFORM FRM_TOP_OF_PAGE.

*&---------------------------------------------------------------------*
*&      Form  FRM_TOP_OF_PAGE
*&---------------------------------------------------------------------*
*       改ページ処理
*----------------------------------------------------------------------*
FORM FRM_TOP_OF_PAGE.

WRITE:  50     TEXT-023,
140    TEXT-024,SY-DATUM,        "日付
/140    TEXT-025,SY-PAGNO.        "ページ数

ENDFORM.                    " FRM_TOP_OF_PAGE

*---------------------------------------------------------------------
* ALV CALLER_EXIT
*---------------------------------------------------------------------
FORM FRM_CALLER_EXIT USING RS_DATA TYPE SLIS_DATA_CALLER_EXIT.
RS_DATA-CALLBACK_HEADER_TRANSPORT = 'FILITEXTS_TEXT_TRANSPORT'.
ENDFORM.

*---------------------------------------------------------------------
* START-OF-SELECTION
*---------------------------------------------------------------------
START-OF-SELECTION.
* 初期処理
PERFORM FRM_INIT.

* データ取得
PERFORM GET_DATA.

* フィールドカタログ生成
PERFORM MAKE_CATALOG_FIELD.

* レイアウト生成
CLEAR GF_LAYOUT.
MOVE ' ' TO GF_LAYOUT-COLWIDTH_OPTIMIZE.  "列幅の最適化
MOVE 'X' TO GF_LAYOUT-ZEBRA.              "行色変更

* レポート出力
PERFORM FRM_WRITE_DETAIL.

*&---------------------------------------------------------------------*
*&      Form  get_data
*&---------------------------------------------------------------------*
*       MSEG,EKKO,MKPF,EKPO,LFM1,TCURRテーブルからデータを取得する
*
*       MSEG･･･MATNR,WERKS,LIFNR,KUNNR,BWART,MBLNR,MJAHR,
*              DMBTR,KDAUF,ERFMG,EBELN
*       EKKO･･･EKGRP,EBELN,LPONR
*       EKPO･･･NETPR,PEINH
*       MKPF･･･MBLNR,MJAHR,BLDAT,BUDAT,CPUDT,CPUTM,AEDAT,USNAM
*       LFM1･･･WAERS
*       TCURR･･･UKURS
*----------------------------------------------------------------------*
FORM GET_DATA.
*----------------------------------------------------------------------
* MSEGテーブルのデータ取得
* 取得項目
*   MATNR(品目コード)、WERKS(プラント)、LIFNR(仕入先)、
*   KUNNR(得意先)、BWART(移動タイプ)、MBLNR(入出庫伝票番号)、
*   MJAHR(入出庫伝票年度)、DMBTR(国内通貨額)、KDAUF(受注伝票番号)、
*   ERFMG(数量)、EBELN(購買伝票番号)
* 抽出条件
*   S_MATNR IN 選択画面の品目コード
*   S_WERKS IN 選択画面のプラント
*   S_LIFNR IN 選択画面の仕入先コード
*   S_KUNNR IN 選択画面の得意先コード
*   S_BWART IN 選択画面の移動タイプ
*   S_MBLNR IN 選択画面の入出庫伝票番号
*   S_MJAHR IN 選択画面の入出庫伝票年度
*----------------------------------------------------------------------
SELECT MATNR
WERKS
LIFNR
KUNNR
BWART
MBLNR
MJAHR
DMBTR
KDAUF
ERFMG
EBELN
LGPLA
FROM  MSEG
INTO CORRESPONDING FIELDS OF GF_MSEG
WHERE  MATNR  IN  S_MATNR          "品目コード
AND   WERKS  IN  S_WERKS          "プラント
AND   LIFNR  IN  S_LIFNR          "仕入先勘定コード
AND   KUNNR  IN  S_KUNNR          "得意先コード
AND   BWART  IN  S_BWART          "移動タイプ
AND   MBLNR  IN  S_MBLNR          "入出庫伝票番号
AND   MJAHR  IN  S_MJAHR          "入出庫伝票年度
.

* GF_MSEG から GF_EXEC へデータ移動
MOVE GF_MSEG-MATNR TO GF_EXEC-MATNR.
MOVE GF_MSEG-WERKS TO GF_EXEC-WERKS.
MOVE GF_MSEG-LIFNR TO GF_EXEC-LIFNR.
MOVE GF_MSEG-KUNNR TO GF_EXEC-KUNNR.
MOVE GF_MSEG-BWART TO GF_EXEC-BWART.
MOVE GF_MSEG-MBLNR TO GF_EXEC-MBLNR.
MOVE GF_MSEG-MJAHR TO GF_EXEC-MJAHR.
* 国内通貨額を100倍する(高千穂電気仕様により)
GF_MSEG-DMBTR = GF_MSEG-DMBTR * 100.
MOVE GF_MSEG-DMBTR TO GF_EXEC-DMBTR.
MOVE GF_MSEG-KDAUF TO GF_EXEC-KDAUF.
MOVE GF_MSEG-ERFMG TO GF_EXEC-ERFMG.

*----------------------------------------------------------------------
* LFM1テーブルのデータ取得
* 取得項目
*   WAERS(通貨コード)
* 抽出条件
*   LIFNR = GF_MSEG-LIFNR
*   EKORG = 1000
*----------------------------------------------------------------------
SELECT WAERS
FROM LFM1
INTO CORRESPONDING FIELDS OF GF_LFM1
WHERE LIFNR = GF_MSEG-LIFNR
AND  EKORG = '1000'
.

* GF_LFM1 から GF_EXEC へデータ移動
MOVE GF_LFM1-WAERS TO GF_EXEC-WAERS.

ENDSELECT.

*----------------------------------------------------------------------
* MKPFテーブルのデータ取得
* 取得項目
*   BLDAT(伝票日付)、BUDAT(転記日付)、CPUDT(会計伝票登録日)、
*   CPUTM(登録時刻)、AEDAT(変更日)、USNAM(ユーザ名)
* 抽出条件
*   BLDAT IN 選択画面の伝票日付
*   BUDAT IN 選択画面の転記日付
*   CPUDT IN 選択画面の伝票登録日
*   CPUTM IN 登録時刻
*   AEDAT IN 変更日
*   USNAM IN ユーザ名
*   MBLNR = GF_EXEC-MBLNR
*   MJAHR = GF_EXEC-MJAHR
*----------------------------------------------------------------------
SELECT BLDAT
BUDAT
CPUDT
CPUTM
AEDAT
USNAM
FROM  MKPF
INTO CORRESPONDING FIELDS OF GF_MKPF
WHERE  BLDAT  IN  S_BLDAT    "伝票日付
AND   BUDAT  IN  S_BUDAT    "転記日付
AND   CPUDT  IN  S_CPUDT    "伝票登録日
AND   CPUTM  IN  S_CPUTM    "登録時刻
AND   AEDAT  IN  S_AEDAT    "変更日
AND   USNAM  IN  S_USNAM    "ユーザ名
AND   MBLNR  =  GF_EXEC-MBLNR    "入出庫伝票番号
AND   MJAHR  =  GF_EXEC-MJAHR    "入出庫伝票年度
.

* GF_MKPF から GF_EXEC へデータ移動
MOVE GF_MKPF-BLDAT TO GF_EXEC-BLDAT.
MOVE GF_MKPF-BUDAT TO GF_EXEC-BUDAT.
MOVE GF_MKPF-CPUDT TO GF_EXEC-CPUDT.
MOVE GF_MKPF-CPUTM TO GF_EXEC-CPUTM.
MOVE GF_MKPF-AEDAT TO GF_EXEC-AEDAT.
MOVE GF_MKPF-USNAM TO GF_EXEC-USNAM.

ENDSELECT.

* 対象データが存在しなかった場合、
* 現在のループパスを終了し、処理をループの開始に戻します
CASE SY-SUBRC.
WHEN 0.

* TCURRテーブルの社内レート取得
DATA: YM(6)    TYPE C,              "年月
FST      TYPE TCURR-GDATU,    "変数ymの月初日
FST2     TYPE TCURR-GDATU.    "変数fstを変換

*2007/04/20 MOD START
* 外貨の場合、社内レートを取得
IF GF_EXEC-WAERS <> 'JPY'.
*        IF gf_exec-waers = 'USD'.
*2007/04/20 MOD END

*  転記日の年月部分を取得
YM = GF_EXEC-BUDAT(6).
*  変数fstに月初日取得
CONCATENATE YM '01' INTO FST.
*2007/04/20 DEL START
**  日付の変換
*          CALL FUNCTION 'CONVERSION_EXIT_INVDT_INPUT'
*               EXPORTING
*                    input  = fst
*               IMPORTING
*                    output = fst2.
*2007/04/20 DEL END

*----------------------------------------------------------------------
* TCURRテーブルのデータ取得
* 取得項目
*   UKURS(社内レート)
* 抽出条件
*   KURST = 'M'
*   FCURR = 'USD'
*   TCURR = 'JPY'
*   GDATU = fst2
*----------------------------------------------------------------------
*2007/04/20 MOD START
*         換算レート取得
IF NOT GF_EXEC-WAERS IS INITIAL.
PERFORM CONVERT_TO_LOCAL_CURRENCY USING    GF_EXEC-WAERS
FST
CHANGING GF_TCURR-UKURS.
ENDIF.
*         GF_TCURR から GF_EXEC へデータ移動
MOVE GF_TCURR-UKURS TO GF_EXEC-UKURS.

*          SELECT ukurs
*                 FROM tcurr
*                 INTO CORRESPONDING FIELDS OF gf_tcurr
*                 WHERE kurst = 'M'
*                  AND  fcurr = 'USD'
*                  AND  tcurr = 'JPY'
*                  AND  gdatu = fst2
*                  .
*
** GF_TCURR から GF_EXEC へデータ移動
*            MOVE gf_tcurr-ukurs TO gf_exec-ukurs.
*
*          ENDSELECT.
*2007/04/20 MOD END

* JPYの場合、社内レートは1で固定
ELSE.
MOVE 1 TO GF_EXEC-UKURS.
ENDIF.

WHEN 4.
* 内部テーブル初期化
CLEAR GF_EXEC.
CLEAR GF_MSEG.
CLEAR GF_LFM1.
CLEAR GF_MKPF.
CLEAR GF_TCURR.
CLEAR GF_EKKO.
CLEAR GF_EKPO.

CONTINUE.
ENDCASE.

*----------------------------------------------------------------------
* MAKTXテーブルのデータ取得
* 取得項目
*   MAKTX(品目テキスト)
* 抽出条件
*   MATNR = GF_MSEG-MATNR
*----------------------------------------------------------------------
SELECT MAKTX
FROM  MAKT
INTO CORRESPONDING FIELDS OF GF_MAKT
WHERE  MATNR  =  GF_MSEG-MATNR.

MOVE GF_MAKT-MAKTX TO GF_EXEC-MAKTX.

ENDSELECT.
*----------------------------------------------------------------------
* LFA1テーブルのデータ取得
* 取得項目
*   NAME1(名称1)
* 抽出条件
*   KUNNR = GF_MSEG-LIFNR
*----------------------------------------------------------------------
SELECT NAME1
FROM  LFA1
INTO CORRESPONDING FIELDS OF GF_LFA1
WHERE  LIFNR  =  GF_MSEG-LIFNR.

MOVE GF_LFA1-NAME1 TO GF_EXEC-NAME1.

ENDSELECT.
*----------------------------------------------------------------------
* MARDテーブルのデータ取得
* 取得項目
*   LGPBE(品目テキスト)
* 抽出条件
*   MATNR = GF_MSEG-MATNR
*   WERKS = GF_MSEG-WERKS
*----------------------------------------------------------------------
SELECT LGPBE
FROM  MARD
INTO CORRESPONDING FIELDS OF GF_MARD
WHERE  MATNR  =  GF_MSEG-MATNR
AND    WERKS  =  GF_MSEG-WERKS.

MOVE GF_MARD-LGPBE TO GF_EXEC-LGPBE.

ENDSELECT.

*----------------------------------------------------------------------
* EKKOテーブルのデータ取得
* 取得項目
*   EBELN(購買伝票番号)、EKGRP(購買Gr)、LPONR(購買伝票明細番号)
* 抽出条件
*   EKGRP IN 選択画面の購買グループ
*   EBELN = GF_MSEG-EBELN
*----------------------------------------------------------------------
SELECT EBELN
EKGRP
LPONR
BEDAT  "発注伝票日付　2010/2/23追加
FROM  EKKO
INTO CORRESPONDING FIELDS OF GF_EKKO
WHERE  EKGRP  IN  S_EKGRP   "購買グループ
AND   EBELN  =  GF_MSEG-EBELN.  "購買伝票番号

*----------------------------------------------------------------------
* EKPOテーブルのデータ取得
* 取得項目
*   NETPR(正味価格)、PEINH(価格単位)
* 抽出条件
*   EBELN = GF_EKKO-EBELN
*   EBELP = GF_EKKO-LPONR
*----------------------------------------------------------------------
SELECT NETPR
PEINH
FROM  EKPO
INTO CORRESPONDING FIELDS OF GF_EKPO
WHERE  EBELN  =  GF_EKKO-EBELN     "購買伝票番号
AND   EBELP  =  GF_EKKO-LPONR.    "購買伝票の明細番号

* 通貨コードが'JPY'の時のみ、正味価格を100倍する(高千穂電気仕様により)
IF GF_EXEC-WAERS = 'JPY'.
GF_EKPO-NETPR = GF_EKPO-NETPR * 100.
ENDIF.

* GF_EKPO から GF_EXEC へデータ移動
MOVE GF_EKPO-NETPR TO GF_EXEC-NETPR.
MOVE GF_EKPO-PEINH TO GF_EXEC-PEINH.

ENDSELECT.

* 対象データが存在しなかった場合、
* 現在のループパスを終了し、処理をループの開始に戻します
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
* 内部テーブル初期化
CLEAR GF_EXEC.
CLEAR GF_MSEG.
CLEAR GF_LFM1.
CLEAR GF_MKPF.
CLEAR GF_TCURR.
CLEAR GF_EKKO.
CLEAR GF_EKPO.

CONTINUE.
ENDCASE.

* GF_EKKO から GF_EXEC へデータ移動
MOVE GF_EKKO-EKGRP TO GF_EXEC-EKGRP.
MOVE GF_EKKO-EBELN TO GF_EXEC-EBELN.
MOVE GF_EKKO-BEDAT TO GF_EXEC-BEDAT.  "発注伝票日付　2010/2/23追加

ENDSELECT.

*  入庫金額計算
GF_EXEC-INGAKU = ( GF_EXEC-ERFMG * GF_EXEC-NETPR / GF_EXEC-PEINH ).

*  入庫金額を円建計算(入庫金額×社内レート)
GF_EXEC-INGAKU2 = GF_EXEC-INGAKU * GF_EXEC-UKURS.

* Del 2007.10.26 ---->
***対象データが存在しなかった場合、
***現在のループパスを終了し、処理をループの開始に戻します
**    CASE sy-subrc.
**      WHEN 0.
**      WHEN 4.
***内部テーブル初期化
**        CLEAR gf_exec.
**        CLEAR gf_mseg.
**        CLEAR gf_lfm1.
**        CLEAR gf_mkpf.
**        CLEAR gf_tcurr.
**        CLEAR gf_ekko.
**        CLEAR gf_ekpo.
**
**        CONTINUE.
**    ENDCASE.
* Del 2007.10.26 <----

APPEND GF_EXEC TO GT_EXEC.

* 内部テーブル初期化
CLEAR GF_EXEC.
CLEAR GF_MSEG.
CLEAR GF_LFM1.
CLEAR GF_MKPF.
CLEAR GF_TCURR.
CLEAR GF_EKKO.
CLEAR GF_EKPO.

ENDSELECT.

* 対象データが存在しなかった場合にメッセージを表示
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S616(Z1).
ENDCASE.

ENDFORM.                    " get_data


*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_DETAIL
*&---------------------------------------------------------------------*
*       明細部分帳票出力処理
*----------------------------------------------------------------------*
FORM FRM_WRITE_DETAIL.

*--- 帳票設定処理
PERFORM FRM_WRITE_SET.

*--- リストの出力
CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM   = G_REPID  "レポートID
I_STRUCTURE_NAME     = 'typ_zm011900'  "構造
IT_FIELDCAT          = GT_FIELDCAT  "フィールドカタログ
IS_LAYOUT            = GF_LAYOUT  "レイアウト設定
I_SAVE               = 'A'  "レイアウト保存
IT_TOOLBAR_EXCLUDING = WA_UI_FUNCTIONS  "ALVのボタン設定
IS_VARIANT           = GF_VARIANT  "バリアント設定
IT_EVENTS            = GT_EVENT[]  "イベント設定
IS_PRINT             = GF_PRINT  "印刷設定
TABLES
T_OUTTAB             = GT_ALV  " 帳票出力用内部テーブル
EXCEPTIONS
PROGRAM_ERROR        = 1
OTHERS               = 2.

ENDFORM.                    " FRM_WRITE_DETAIL

*&---------------------------------------------------------------------*
*&      Form  frm_check_bwart
*&---------------------------------------------------------------------*
*       移動タイプ存在チェック
*----------------------------------------------------------------------*
FORM FRM_CHECK_BWART.
DATA:LT_DUMMY TYPE TABLE OF TYP_T156.

SELECT BWART
FROM T156
INTO CORRESPONDING FIELDS OF TABLE LT_DUMMY
WHERE BWART IN S_BWART.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE E606(Z1) WITH TEXT-001.
ENDCASE.

ENDFORM.                    " frm_check_bwart
*&---------------------------------------------------------------------*
*&      Form  frm_check_matnr
*&---------------------------------------------------------------------*
*       品目コード存在チェック
*----------------------------------------------------------------------*
FORM FRM_CHECK_MATNR.
DATA:LT_DUMMY TYPE TABLE OF TYP_MARA.

SELECT MATNR
FROM MARA
INTO CORRESPONDING FIELDS OF TABLE LT_DUMMY
WHERE MATNR IN S_MATNR.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE E606(Z1) WITH TEXT-002.
ENDCASE.

ENDFORM.                    " frm_check_matnr
*&---------------------------------------------------------------------*
*&      Form  frm_check_werks
*&---------------------------------------------------------------------*
*       プラント存在チェック
*----------------------------------------------------------------------*
FORM FRM_CHECK_WERKS.
DATA:LT_DUMMY TYPE TABLE OF TYP_T001W.

SELECT WERKS
FROM T001W
INTO CORRESPONDING FIELDS OF TABLE LT_DUMMY
WHERE WERKS IN S_WERKS.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE E606(Z1) WITH TEXT-003.
ENDCASE.

ENDFORM.                    " frm_check_werks
*&---------------------------------------------------------------------*
*&      Form  frm_check_lifnr
*&---------------------------------------------------------------------*
*       仕入先勘定コード存在チェック
*----------------------------------------------------------------------*
FORM FRM_CHECK_LIFNR.
DATA:LT_DUMMY TYPE TABLE OF TYP_LFA1.

SELECT LIFNR
FROM LFA1
INTO CORRESPONDING FIELDS OF TABLE LT_DUMMY
WHERE LIFNR IN S_LIFNR.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE E606(Z1) WITH TEXT-004.
ENDCASE.

ENDFORM.                    " frm_check_lifnr
*&---------------------------------------------------------------------*
*&      Form  frm_check_kunnr
*&---------------------------------------------------------------------*
*       得意先コード存在チェック
*----------------------------------------------------------------------*
FORM FRM_CHECK_KUNNR.
DATA:LT_DUMMY TYPE TABLE OF TYP_KNA1.

SELECT KUNNR
FROM KNA1
INTO CORRESPONDING FIELDS OF TABLE LT_DUMMY
WHERE KUNNR IN S_KUNNR.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE E606(Z1) WITH TEXT-005.
ENDCASE.

ENDFORM.                    " frm_check_kunnr
*&---------------------------------------------------------------------*
*&      Form  frm_check_ekgrp
*&---------------------------------------------------------------------*
*       購買グループ存在チェック
*----------------------------------------------------------------------*
FORM FRM_CHECK_EKGRP.
DATA:LT_DUMMY TYPE TABLE OF TYP_T024.

SELECT EKGRP
FROM T024
INTO CORRESPONDING FIELDS OF TABLE LT_DUMMY
WHERE EKGRP IN S_EKGRP.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE E606(Z1) WITH TEXT-006.
ENDCASE.

ENDFORM.                    " frm_check_ekgrp

*&---------------------------------------------------------------------*
*&      Form  MAKE_CATALOG_FIELD
*&---------------------------------------------------------------------*
*&　　　フィールドカタログを作成する
*&---------------------------------------------------------------------*
FORM MAKE_CATALOG_FIELD.
* フィールドカタログを初期化
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME = 'WERKS'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = 'プラント'.         "ALV表示項目名
WA_FIELDCAT-COL_POS = 1.                    "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'MATNR'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '品目コード'.       "ALV表示項目名
WA_FIELDCAT-COL_POS = 2.                    "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'MAKTX'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '品名'.             "ALV表示項目名
WA_FIELDCAT-COL_POS = 3.                    "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'EKGRP'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '購買グループ'.    "ALV表示項目名
WA_FIELDCAT-COL_POS = 4.                    "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'BWART'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '移動タイプ'.       "ALV表示項目名
WA_FIELDCAT-COL_POS = 5.                    "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'BUDAT'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '転記日付'.         "ALV表示項目名
WA_FIELDCAT-COL_POS = 6.                    "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'MBLNR'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '入出庫伝票番号'.   "ALV表示項目名
WA_FIELDCAT-COL_POS = 7.                    "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'ERFMG'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '数量'.             "ALV表示項目名
WA_FIELDCAT-COL_POS = 8.                    "列順
WA_FIELDCAT-JUST = 'R'.                     "右詰
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'NETPR'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '正味価格'.         "ALV表示項目名
WA_FIELDCAT-COL_POS = 9.                    "列順
WA_FIELDCAT-JUST = 'R'.                     "右詰
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'WAERS'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '通貨コード'.       "ALV表示項目名
WA_FIELDCAT-COL_POS = 10.                    "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'PEINH'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '価格単位'.         "ALV表示項目名
WA_FIELDCAT-COL_POS = 11.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'INGAKU'.           "エレメント名
WA_FIELDCAT-SELTEXT_M = '入庫金額'.         "ALV表示項目名
WA_FIELDCAT-COL_POS = 12.                   "列順
WA_FIELDCAT-JUST = 'R'.                     "右詰
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'INGAKU2'.          "エレメント名
WA_FIELDCAT-SELTEXT_M = '入庫金額円建'.     "ALV表示項目名
WA_FIELDCAT-COL_POS = 13.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'DMBTR'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '国内通貨額'.       "ALV表示項目名
WA_FIELDCAT-COL_POS = 14.                   "列順
WA_FIELDCAT-JUST = 'R'.                     "右詰
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'EBELN'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '購買伝票番号'.     "ALV表示項目名
WA_FIELDCAT-COL_POS = 15.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'LIFNR'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '仕入先勘定コード'. "ALV表示項目名
WA_FIELDCAT-COL_POS = 16.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'NAME1'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '仕入先名'.         "ALV表示項目名
WA_FIELDCAT-COL_POS = 17.                   "列順
WA_FIELDCAT-JUST = 'L'.                     "左詰
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'KDAUF'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '受注伝票番号'.     "ALV表示項目名
WA_FIELDCAT-COL_POS = 18.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'UKURS'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '換算レート'.       "ALV表示項目名
WA_FIELDCAT-COL_POS = 19.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'MJAHR'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '入出庫伝票年度'.   "ALV表示項目名
WA_FIELDCAT-COL_POS = 20.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'KUNNR'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '得意先コード'.     "ALV表示項目名
WA_FIELDCAT-COL_POS = 21.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'BLDAT'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '伝票日付'.         "ALV表示項目名
WA_FIELDCAT-COL_POS = 22.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'CPUDT'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '伝票登録日'.       "ALV表示項目名
WA_FIELDCAT-COL_POS = 23.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'CPUTM'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '登録時刻'.         "ALV表示項目名
WA_FIELDCAT-COL_POS = 24.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'AEDAT'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '変更日'.           "ALV表示項目名
WA_FIELDCAT-COL_POS = 25.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'USNAM'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = 'ユーザ名'.         "ALV表示項目名
WA_FIELDCAT-COL_POS = 26.                   "列順
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'LGPBE'.            "エレメント名
WA_FIELDCAT-SELTEXT_M = '棚番'.             "ALV表示項目名
WA_FIELDCAT-COL_POS = 27.                   "列順
WA_FIELDCAT-JUST = 'L'.                     "左詰
APPEND WA_FIELDCAT TO GT_FIELDCAT.
WA_FIELDCAT-FIELDNAME = 'BEDAT'.            "エレメント名2010/2/23追加
WA_FIELDCAT-SELTEXT_M = '発注伝票日付'.    "ALV表示項目名2010/2/23追加
WA_FIELDCAT-COL_POS = 28.                   "列順　　　　2010/2/23追加
APPEND WA_FIELDCAT TO GT_FIELDCAT.          "            2010/2/23追加


ENDFORM.                    " MAKE_CATALOG_FIELD

*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_SET
*&---------------------------------------------------------------------*
FORM FRM_WRITE_SET.
*--- 内部テーブル存在チェック
IF GT_EXEC IS INITIAL.
MESSAGE S204(Z1).
STOP.
ENDIF.
*--- 内部テーブル変換処理
GT_ALV[] = GT_EXEC[].
GF_PRINT-NO_PRINT_LISTINFOS = 'X'.
*--- イベント取得処理
PERFORM FRM_EVENT_GET.
*--- ページ切り替え設定
GF_LAYOUT-GROUP_CHANGE_EDIT = 'X'.
*--- バリアント保存設定
GF_VARIANT-VARIANT = '/ZM011900_01'.
ENDFORM.                    " FRM_WRITE_SET

*&---------------------------------------------------------------------*
*&      Form  FRM_EVENT_GET
*&---------------------------------------------------------------------*
FORM FRM_EVENT_GET.
*--- イベント取得
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
I_LIST_TYPE     = 0
IMPORTING
ET_EVENTS       = GT_EVENT
EXCEPTIONS
LIST_TYPE_WRONG = 1
OTHERS          = 2.

*--- 使用イベントに実行するサブルーチン名を設定
LOOP AT GT_EVENT INTO GF_EVENT.
CASE GF_EVENT-NAME.
WHEN 'TOP_OF_PAGE'.
GF_EVENT-FORM = 'FRM_TOP_OF_PAGE'.
MODIFY GT_EVENT FROM GF_EVENT.
WHEN 'CALLER_EXIT'.
GF_EVENT-FORM = 'FRM_CALLER_EXIT'.
MODIFY GT_EVENT FROM GF_EVENT.
ENDCASE.
ENDLOOP.
ENDFORM.                    " FRM_EVENT_GET
*&---------------------------------------------------------------------*
*&      Form  CONVERT_TO_LOCAL_CURRENCY
*&---------------------------------------------------------------------*
*       換算レート取得
*----------------------------------------------------------------------*
*      -->P_WAERS  通貨コード
*      -->P_DATE   日付
*      <--P_UKURS  換算レート
*----------------------------------------------------------------------*
FORM CONVERT_TO_LOCAL_CURRENCY USING    P_WAERS
P_DATE
CHANGING P_UKURS.

DATA : L_AMOUNT(8) TYPE P DECIMALS 2,
L_DATE      TYPE SY-DATUM.

L_DATE = P_DATE.

CALL FUNCTION 'CONVERT_TO_LOCAL_CURRENCY'
EXPORTING
DATE                    = L_DATE
FOREIGN_AMOUNT          = L_AMOUNT
FOREIGN_CURRENCY        = P_WAERS
LOCAL_CURRENCY          = 'JPY'
TYPE_OF_RATE            = 'M'
IMPORTING
EXCHANGE_RATE           = P_UKURS
EXCEPTIONS
NO_RATE_FOUND           = 1
OVERFLOW                = 2
NO_FACTORS_FOUND        = 3
NO_SPREAD_FOUND         = 4
DERIVED_2_TIMES         = 5
OTHERS                  = 6.

IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
STOP.
ENDIF.

ENDFORM.                    " CONVERT_TO_LOCAL_CURRENCY
