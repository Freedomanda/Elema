************************************************************************
* [プログラム名]
*   ZS010100        受注伝票一覧表
*
* [処理概要]
*   受注情報の把握
*     ・当日受発注一覧表
*     ・内示一覧表
*     ・未引当一覧表
*     ・出荷ブロックリスト
*     ・出荷可能データリスト
*     ・ＥＤＩ重複データ一覧表(機能追加)
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2001/12/05   PSD H.Tanaka      新規開発　
*  2002/01/09   PSD T.SAITOH      当日受注伝票一覧表　購買伝票なし時続行
*  2002/01/10   PSD H.Tanaka      ＡＬＶヘッダー表示
*  2002/01/11   PSD H.Tanaka      受注単価変更等
*  2002/01/15   PSD H.Tanaka      原価修正
*  2002/01/16   PSD H.Tanaka      原価修正
*  2002/01/21   PSD H.Tanaka      出荷ブロックリストデータ抽出条件変更
*  2002/01/30   PSD H.Tanaka      仕入先マスタの取得条件変更
*  2002/02/05   PSD H.Tanaka      ＥＤＩ重複データ一覧表対応
*  2002/03/14   PSD T.SAITOH      ALV一覧ステータス印刷拒否設定
*  2002/03/20   PSD T.SAITOH      出荷可能リストで出荷可能数０を対象外
*  2002/03/20   PSD T.SAITOH      在（在庫品）項目と設定処理追加
*  2002/03/20   PSD T.SAITOH      テーブル読込条件⑪、⑯の変更
*  2002/04/30   PSD K.Arai        テーブル読込条件⑯の変更
*  2002/05/02   PSD T.SAITOH      棚番の取得条件変更
*  2002/05/02   PSD K.Arai        出荷指示備考のセットデータ修正
*  2002/05/28   PSD K.ARAI        クレメモ・デビメモ時対応
*  2002/06/12   PSD T.SAITOH      見出し日付→受注日対応
*  2002/06/20   PSD T.SAITOH      再移送
*  2002/06/21   PSD T.SAITOH      得意先品目テキスト追加（出荷可能のみ）
*  2002/06/24   PSD T.SAITOH      納入区域が抜けているのでチェック
*  2002/07/15   PSD T.SAITOH      得意先発注番号３５桁対応、VBKDから取得
*  2002/07/15   PSD T.SAITOH      READ_TEXTエラーハンドリング修正
*  2002/07/17   PSD T.SAITOH      販売組織・流通ＣＨ・製品部門対応
*  2002/07/29   PSD T.SAITOH      受注在庫確認追加
*  2002/08/05   PSD T.SAITOH      出荷可能数の設定（MSKA-KALAB)
*  2002/08/06   PSD T.SAITOH      発注情報初期化ミス修正
*  2002/08/06   PSD T.SAITOH      発注価格単位考慮
*  2002/08/06   PSD T.SAITOH      ＡＬＶヘッダ対応（当日受注伝票）
*  2002/08/06   PSD T.SAITOH      発注金額円建て廃止
*  2002/08/08   カットオーバー ---------------------------------------*
*  2002/08/08   PSD T.SAITOH      ページ番号付加
*  2002/08/16   PSD T.SAITOH      当日受注伝票一覧・・・拒否理由追加
*  2002/08/21   PSD T.SAITOH      抽出条件（当日受注）修正
*  2002/09/20   PSD T.SAITOH      納品書種別の追加（出荷可能リスト）
*  2003/04/21   NDSC S.IWAKI      パフォーマンス対応
*  2003/05/27   NDSC R.TOMOEDA    パフォーマンス対応 Part.2
*  2004/01/14   DMC Y.Tsukahara   当日受発注一覧表原価項目表示対応
*  2004/04/02   DMC Y.Tsukahara   当日受発注一覧ジョブ異常終了対応
*  2004/04/21   NDSC A.MASUDA     出力項目新規追加
*  2004/09/29   DMC  A.MASUDA     出荷可能リスト：出荷可能数量不具合修正
*  2005/01/05   DMC  A.MASUDA     出荷可能リスト：出荷可能数量単位の修正
*  2006/05/31   DMC  S.SHIGEMITU  出荷可能リスト：輸送手段等項目追加修正
*  2006/11/16   DMC Y.OTA         出荷数量変換処理の修正
*  2007/06/15   DMC S.KURATA      出荷可能リスト：出荷数量変換処理の修正
*  2008/01/11   DMC S.KURATA      購買単価・受発注数量出力内容修正
*  2008/05/07   DMC
*  販売・購買価格をマスタより取得する際に数量スケールが
*  考慮されていないためスケールを考慮するように修正する
*  2008/07/03   DMC S.KURATA      仕入先名称出力不具合 修正
*  2009/05/29   NDSC S.KURATA     当日受発注一覧 未出力不具合対応
*  2011/05/23   SOLFIS M.Murata   購買グループを選択画面項目と出力
*                                 項目に追加
*                                 ※購買Grpは在庫発注のみを制御
*  2011/11/16   SOLFIS C.Maruta   DMW3580
*                                 当日受発注一覧表：輸送手段等項目追加
*  2012/09/06   ISID              ES-UP
*  2013/11/11   GSL T.HIGURASHI   当日受発注一覧表：表示条件、項目の変更
*  2013/12/11   GSL               仕様間違い対応
*                                 1.部屋番号→取得元項目の変更
*                                 2.支払条件→明細のみを対象とする
*  2014/02/03   GSL               当日受発注一覧表：表示条件、項目の追加
*                                 ・受注伝票-拒否理由
*                                 ・購買発注-削除フラグ
*  2014/02/12   GSL               当日受発注一覧表：
*                                 ALVヘッダ伝票日付項目の設定内容変更
*                                 変更前）受注伝票の伝票日付
*                                 変更後）選択画面の新規項目値
*                                 ・選択画面項目の追加
*                                 ・伝票日付項目の設定内容変更
************************************************************************
REPORT  zs010100.

*---------------------------------------------------------------------
* TYPES
*---------------------------------------------------------------------
TYPE-POOLS slis.
*--- 販売伝票データ型
TYPES: BEGIN OF typ_info,
vbeln TYPE vbak-vbeln,    " 販売伝票
audat TYPE vbak-audat,    " 伝票日付
auart TYPE vbak-auart,    " 販売伝票タイプ
vkgrp TYPE vbak-vkgrp,    " 営業グループ
vkbur TYPE vbak-vkbur,    " 営業所
vdatu TYPE vbak-vdatu,    " 指定納入期日
*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
*        BSTNK TYPE VBAK-BSTNK,    " 得意先発注番号
bstnk TYPE vbkd-bstkd,    " 得意先発注番号
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*
kunnr TYPE vbak-kunnr,    " 受注先
vbtyp TYPE vbak-vbtyp,    " 販売管理伝票カテゴリ
ernam TYPE vbak-ernam,    " ユーザＩＤ
posnr TYPE vbup-posnr,    " 明細（ＳＤ）
bezeia TYPE tvkbt-bezei,  " 営業署名
bezeib TYPE tvgrt-bezei,  " 営業グループ名
tknr   TYPE vbkd-bstdk_e, " 得意先発注日付
* 2002/01/30 PSD H.Tanaka ADD ↓
stcur  TYPE vbkd-kursk,   " 換算レート
*2013/11/11 Add Start
zterm  TYPE vbkd-zterm,    " 支払条件キー
chang  TYPE char1,         " 変更伝票区分
upnam  TYPE cdhdr-username," 変更ユーザID
udate  TYPE cdhdr-udate,   " 変更伝票の登録日付
utime  TYPE cdhdr-utime,   " 変更時刻
ebelu  TYPE ekko-ebeln,    " 購買伝票番号
*2013/11/11 Add End
END   OF typ_info.

*--- 販売明細データ型
TYPES: BEGIN OF typ_vbap,
vbeln  TYPE vbap-vbeln,   " 販売伝票
posnr  TYPE vbap-posnr,   " 販売伝票明細
matnr  TYPE vbap-matnr,   " 品目コード
arktx  TYPE vbap-arktx,   " 品目名
pstyv  TYPE vbap-pstyv,   " 明細カテゴリ
kdmat  TYPE vbap-kdmat,   " 得意先品目コード
netwr  TYPE vbap-netwr,   " 正味額
waerk  TYPE vbap-waerk,   " 伝票通貨
kwmeng TYPE vbap-kwmeng,  " 受注数量
kbmeng TYPE vbap-kbmeng,  " 累積確認済数量
* 2002/02/05 PSD H.Tanaka ADD ↓
vrkme  TYPE vbap-vrkme,   " 販売単位
vstel  TYPE vbap-vstel,   " 出荷ポイント／受領ポイント
* Mod 2003.12.08 ---->>
*         VNETPR TYPE VBAP-NETPR,   " 正味価格
vnetpr TYPE zsnetpr111,   " 正味価格
* Mod 2003.12.08 <<----

* 2002/02/01 PSD H.Tanaka ADD ↓
kpein  TYPE vbap-kpein,   " 価格条件単位
wavwr  TYPE vbap-wavwr,   " 原価
* 2002/01/30 PSD H.Tanaka DEL ↓
*         STCUR  TYPE VBAP-STCUR,   " 統計用換算ルート
werks  TYPE vbap-werks,   " プラント
lgort  TYPE vbap-lgort,   " 保管場所
* 2002/02/12 PSD H.Tanaka ADD ↓
abgru  TYPE vbap-abgru,   " 拒否理由
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*         VTEXT TYPE TVSTT-VTEXT,    " 出荷ポイントテキスト
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
* APPEND PSD K.ARAI 2002/05/28
zmeng TYPE vbap-zmeng,     " 目標数量
* APPEND END
* 2007/11/05 D.YI ADD START↓
mwsbp TYPE vbap-mwsbp,    " 税額
* 2007/11/05 D.YI ADD END↓
END   OF typ_vbap.

*--- 販売伝票納入日程行データ型
TYPES: BEGIN OF typ_vbep,
vbeln TYPE vbep-vbeln,    " 販売伝票
posnr TYPE vbep-posnr,    " 販売伝票明細
etenr TYPE vbep-etenr,    " 納入日程行番号
edatu TYPE vbep-edatu,    " 出荷日付
ettyp TYPE vbep-ettyp,    " 納入日程カテゴリ
lifsp TYPE vbep-lifsp,    " 出荷ブロック
banfn TYPE vbep-banfn,    " 購買依頼
bnfpo TYPE vbep-bnfpo,    " 購買依頼の明細
END   OF typ_vbep.

*--- 購買伝票明細データ型
TYPES: BEGIN OF typ_ekpo,
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
banfn  TYPE ekpo-banfn,   " 購買依頼
bnfpo  TYPE ekpo-bnfpo,   " 明細
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
ebeln  TYPE ekpo-ebeln,   " 購買伝票
ebelp  TYPE ekpo-ebelp,   " 明細
enetpr TYPE ekpo-netpr,   " 正味発注価格
menge  TYPE ekpo-menge,   " 発注数量
waers  TYPE ekko-waers,   " 通貨コード
wkurs  TYPE ekko-wkurs,   " 換算レート
*         LLIEF  TYPE EKKO-LLIEF,   " 供給仕入先
lifnr  TYPE ekko-lifnr,   " 仕入先勘定コード
wemng  TYPE eket-wemng,   " 納入数量
eindt  TYPE eket-eindt,   " 納入期日
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*         LNAME  TYPE LFA1-NAME1,   " 名称
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*---APPEND START PSD T.SAITOH 2002/08/06 ---------------------------*
peinh  TYPE ekpo-peinh,   " 価格単位
*---APPEND END   PSD T.SAITOH 2002/08/06 ---------------------------*
*---ADD BY DMC 2008/05/07 BEGIN
meins  TYPE ekpo-meins,    "発注単位
*---ADD BY DMC 2008/05/07 END
*2011/05/23 Add Start
ekgrp  TYPE ekko-ekgrp,    "購買Grp
*2011/05/23 Add End
*2013/11/11 Add Start
mwskz  TYPE ekpo-mwskz,    "消費税コード
*2013/11/11 Add End
END   OF typ_ekpo.

*--- 販売伝票フローデータ型
TYPES: BEGIN OF typ_vbfa,
vbelv   TYPE vbfa-vbelv,   " 先行販売管理伝票
posnv   TYPE vbfa-posnv,   " 元明細
vbeln   TYPE vbfa-vbeln,   " 後続伝票
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*         POSNN   TYPE VBFA-POSNN,   " 現明細
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
vbtyp_n TYPE vbfa-vbtyp_n, " 後続伝票カテゴリ
*---APPEND START DMC A.MASUDA 2004/09/29 ----------------------------*
wbstk   TYPE vbuk-wbstk,
*---APPEND END   DMC A.MASUDA 2004/09/29 ----------------------------*
lfimg   TYPE lips-lfimg,   " 出荷数量
END   OF typ_vbfa.

*--- 販売伝票取引先構造
TYPES: BEGIN OF typ_vbpa,
vbeln  TYPE vbpa-vbeln,    " 販売管理伝票
posnr  TYPE vbpa-posnr,    " 明細（ＳＤ）
parvw  TYPE vbpa-parvw,    " 取引先機能
pernr  TYPE vbpa-pernr,    " 従業員番号
adrnr  TYPE vbpa-adrnr,    " 住所
lzone  TYPE vbpa-lzone,    " 納入区域
END   OF typ_vbpa.
TYPES: BEGIN OF typ_vbpa2,
vbeln  TYPE vbpa-vbeln,    " 販売管理伝票
posnr  TYPE vbpa-posnr,    " 明細（ＳＤ）
parvw  TYPE vbpa-parvw,    " 取引先機能
pernr  TYPE vbpa-pernr,    " 従業員番号
nachn  TYPE pa0002-nachn,  " 姓
END   OF typ_vbpa2.
**---DELETE START NDSC A.MASUDA 2004/04/08 --------------------------*
*TYPES: BEGIN OF TYP_VBPA3,
*         VBELN  TYPE VBPA-VBELN,    " 販売管理伝票
*         POSNR  TYPE VBPA-POSNR,    " 明細（ＳＤ）
*         PARVW  TYPE VBPA-PARVW,    " 取引先機能
*         KUNNR  TYPE VBPA-KUNNR,    " 得意先コード
*         NAME1  TYPE ADRC-NAME1,    " 名称１
*         STREET TYPE ADRC-STREET,   " 都道府県
*       END   OF TYP_VBPA3.
**---DELETE END   NDSC A.MASUDA 2004/04/08 --------------------------*
*---APPEND START NDSC A.MASUDA 2004/04/21 --------------------------*
TYPES: BEGIN OF typ_vbpa3,
vbeln  TYPE vbpa-vbeln,    " 販売管理伝票
posnr  TYPE vbpa-posnr,    " 明細（ＳＤ）
parvw  TYPE vbpa-parvw,    " 取引先機能
kunnr  TYPE vbpa-kunnr,    " 得意先コード
name2  TYPE adrc-name2,    " 名称２
city1  TYPE adrc-city1,    " 市区町村
street TYPE adrc-street,   " 都道府県
bezei  TYPE t005u-bezei,   " 地域(名称)
END   OF typ_vbpa3.
*---APPEND END   NDSC A.MASUDA 2004/04/21 --------------------------*

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
*--- 仕入先マスタデータ型
TYPES: BEGIN OF typ_lfa1,
lifnr  TYPE lfa1-lifnr,    " 仕入先コード
name1  TYPE lfa1-name1,    " 名称１
*2013/12/11 Mod Start 1.部屋番号
*2013/11/11 Add Start
*         roomn  TYPE adrc-roomnumber, " 部屋/アパート番号
roomn  TYPE adrc-HOUSE_NUM1, " 番地-号部（部屋/アパート番号）
*2013/11/11 Add End
*2013/12/11 Mod End
END   OF typ_lfa1.
*--- 販売伝票: ビジネスデータ型
TYPES: BEGIN OF typ_vbkd,
vbeln  TYPE vbkd-vbeln,    " 販売伝票
posnr  TYPE vbkd-posnr,    " 販売伝票明細
bstkd  TYPE vbkd-bstkd,    " 得意先発注番号
END   OF typ_vbkd.
*---  組織単位: 出荷ポイント: テキストデータ型
TYPES: BEGIN OF typ_tvstt,
vstel  TYPE tvstt-vstel,   " 出荷ポイント/受領ポイント
spras  TYPE tvstt-spras,   " 言語キー
vtext  TYPE tvstt-vtext,   " テキスト
END   OF typ_tvstt.
*---  品目の保管場所データ型
TYPES: BEGIN OF typ_mard,
matnr  TYPE mard-matnr,    " 品目コード
werks  TYPE mard-werks,    " プラント
lgpbe  TYPE mard-lgpbe,    " 棚番
END   OF typ_mard.
*---  受注在庫データ型
TYPES: BEGIN OF typ_mska,
matnr  TYPE mska-matnr,    " 品目コード
werks  TYPE mska-werks,    " プラント
vbeln  TYPE mska-vbeln,    " 販売伝票番号
posnr  TYPE mska-posnr,    " 明細番号
kalab  TYPE mska-kalab,    " 利用可能評価在庫
END   OF typ_mska.

*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

* ADD 2004/02/12 Y.Tsukahara START
TYPES: BEGIN OF typ_eina,
umrez TYPE eina-umrez,
umren TYPE eina-umren,
* ADD 2004/03/29 Y.Tsukahara START
meins TYPE eina-meins,  "発注単位
* ADD 2004/03/29 Y.Tsukahara END
END OF typ_eina.
* ADD 2004/02/12 Y.Tsukahara END

*---APPEND START  D.YI 2007/11/05 ---------------------------*
*--- 在庫発注用
TYPES: BEGIN OF typ_ekpo1,
ebeln  TYPE ekpo-ebeln,   " 購買伝票番号
ebelp  TYPE ekpo-ebelp,   " 明細番号
menge  TYPE ekpo-menge,   " 在庫発注
netpr  TYPE ekpo-netpr,   " 発注単価
waers  TYPE ekko-waers,   " 通貨コード
wkurs  TYPE ekko-wkurs,   " 換算レート
lifnr  TYPE ekko-lifnr,   " 仕入先勘定コード
wemng  TYPE eket-wemng,   " 納入数量
eindt  TYPE eket-eindt,   " 納入期日
matnr  TYPE ekpo-matnr,   " 品目コード
txz01  TYPE ekpo-txz01,   " 品名
ernam  TYPE ekko-ernam,   " ユーザID
werks  TYPE ekpo-werks,   " プラント
ekgrp  TYPE ekko-ekgrp,   " 営業グループ
aedat  TYPE ekko-aedat,   " 伝票日付
*2008/01/15 ADD START
peinh  TYPE ekpo-peinh,   " 価格単位
*2008/01/15 ADD END
*---ADD BY DMC 2008/05/07 BEGIN
meins  TYPE ekpo-meins,    "発注単位
*---ADD BY DMC 2008/05/07 END
*2013/11/11 Add Start
mwskz  TYPE ekpo-mwskz,    " 消費税コード
chang  TYPE char1,         " 変更伝票区分
upnam  TYPE cdhdr-username," 変更ユーザID
udate  TYPE cdhdr-udate,   " 変更伝票の登録日付
utime  TYPE cdhdr-utime,   " 変更時刻
*2013/11/11 Add End
END OF typ_ekpo1.
*---APPEND END    D.YI 2007/11/05 ---------------------------*

*2013/11/11 Add Start
* 変更文書情報
TYPES: BEGIN OF typ_cdhdr,
objectclas TYPE cdhdr-objectclas, "オブジェクトクラス
objectid   TYPE cdhdr-objectid,   "対象値
changenr   TYPE cdhdr-changenr,   "変更文書番号
username   TYPE cdhdr-username,   "変更伝票の責任者のユーザ名
udate      TYPE cdhdr-udate,      "変更伝票の登録日付
utime      TYPE cdhdr-utime,      "変更時刻
tabname    TYPE cdpos-tabname,    "テーブル名
tabkey     TYPE cdpos-tabkey,     "変更テーブルレコードキー
fname      TYPE cdpos-fname,      "項目名
END   OF typ_cdhdr.

* 購買伝票の取引先
TYPES: BEGIN OF typ_adrc,
ebeln  TYPE ekko-ebeln,       "購買伝票番号
parvw  TYPE ekpa-parvw,       "取引先機能
lifn2  TYPE ekpa-lifn2,       "他の仕入先への参照
name1  TYPE adrc-name1,       "名称１
END   OF typ_adrc.

TYPES: BEGIN OF typ_vbeln,
vbeln TYPE vbak-vbeln,        "販売伝票番号
END   OF typ_vbeln,
BEGIN OF typ_ebeln,
ebeln TYPE ekko-ebeln,        "購買伝票番号
END   OF typ_ebeln,
typ_werks TYPE RANGE OF t001w-werks."プラント
*2013/11/11 Add End

*--- 選択画面用構造
DATA: g_spmon LIKE s901-spmon,      " 抽出年月
* 2002/02/05 PSD H.Tanaka ADD ↓
g_abgru LIKE vbap-abgru.      " 拒否理由
* 2002/02/05 PSD H.Tanaka ADD ↑

*---------------------------------------------------------------------
* DATA
*---------------------------------------------------------------------
*--- 販売伝票内部テーブル
DATA: gf_info  TYPE          typ_info,
gt_info  LIKE TABLE OF gf_info.

*--- 販売明細内部テーブル
DATA: gf_vbap  TYPE          typ_vbap,
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*      GT_VBAP  LIKE TABLE OF GF_VBAP.
gt_vbap  LIKE HASHED TABLE OF gf_vbap
WITH UNIQUE KEY vbeln posnr.
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)

*--- 販売伝票納入日程行内部テーブル
DATA: gf_vbep  TYPE          typ_vbep,
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
gt_vbep  LIKE TABLE OF gf_vbep,
gt_vbep2 LIKE TABLE OF gf_vbep.
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)

*--- 購買伝票明細内部テーブル
DATA: gf_ekpo  TYPE          typ_ekpo,
gt_ekpo  LIKE TABLE OF gf_ekpo.

*--- 購買伝票フロー内部テーブル
DATA: gf_vbfa  TYPE          typ_vbfa,
gt_vbfa  LIKE TABLE OF gf_vbfa.

*--- 販売伝票取引先内部テーブル
DATA: gf_vbpa TYPE          typ_vbpa.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
DATA: gt_vbpa  TYPE HASHED TABLE OF typ_vbpa
WITH UNIQUE KEY vbeln posnr parvw.
DATA: gf_vbpa2 TYPE         typ_vbpa2.
DATA: gt_vbpa2 TYPE HASHED TABLE OF typ_vbpa2
WITH UNIQUE KEY vbeln posnr parvw.

*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
*--- 出荷先住所内部テーブル
DATA: gf_vbpa3 TYPE         typ_vbpa3.
DATA: gt_vbpa3 TYPE HASHED TABLE OF typ_vbpa3
WITH UNIQUE KEY vbeln posnr parvw.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

*--- アドレス管理内部テーブル
DATA: gt_sadr  TYPE HASHED TABLE OF sadr
WITH UNIQUE KEY adrnr.

*--- 仕入先マスタ内部テーブル
DATA: gf_lfa1  TYPE          typ_lfa1.
DATA: gt_lfa1  TYPE HASHED TABLE OF typ_lfa1
WITH UNIQUE KEY lifnr.

*--- 販売伝票: ビジネス内部テーブル
DATA: gf_vbkd  TYPE          typ_vbkd.
DATA: gt_vbkd  TYPE HASHED TABLE OF typ_vbkd
WITH UNIQUE KEY vbeln posnr.

*---  組織単位: 出荷ポイント: テキスト内部テーブル
DATA: gf_tvstt  TYPE          typ_tvstt.
DATA: gt_tvstt  TYPE HASHED TABLE OF typ_tvstt
WITH UNIQUE KEY vstel spras.
*---  品目の保管場所データ内部テーブル
DATA: gf_mard  TYPE          typ_mard.
DATA: gt_mard  TYPE HASHED TABLE OF typ_mard
WITH UNIQUE KEY matnr werks.
*---  受注在庫内部テーブル
DATA: gf_mska  TYPE          typ_mska.
DATA: gt_mska  TYPE HASHED TABLE OF typ_mska
WITH UNIQUE KEY matnr werks vbeln posnr.

*-------2003/04/21 INSERT END   S.IWAKI(NDSC)



*---APPEND START  D.YI 2007/11/05 ---------------------------*
*--- 在庫発注用内部テーブル
DATA: gf_ekpo1  TYPE typ_ekpo1,
gt_ekpo1  TYPE STANDARD TABLE OF typ_ekpo1.
*---APPEND END    D.YI 2007/11/05 ---------------------------*

*2013/11/11 Add Start
DATA: gf_cdhdr TYPE typ_cdhdr,         "変更文書情報
gt_cdhdv TYPE STANDARD TABLE OF typ_cdhdr,
gt_cdhde TYPE STANDARD TABLE OF typ_cdhdr,
gt_vbak  TYPE STANDARD TABLE OF typ_info,
gf_adrc  TYPE typ_adrc,          "購買伝票の取引先
gt_adrc  TYPE STANDARD TABLE OF typ_adrc.

* 変更路歴からの検索
DATA: gt_vbeln TYPE STANDARD TABLE OF typ_vbeln, "販売伝票番号
gf_vbeln TYPE typ_vbeln,
gt_ebeln TYPE STANDARD TABLE OF typ_ebeln. "購買伝票番号
*2013/11/11 Add End

*--- 帳票出力用内部テーブル
* Mod 2003.12.08 --->>
*DATA: GF_WRITE   TYPE          ZSLIST_V01,
*      GT_WRITE   LIKE TABLE OF ZSLIST_V01.
DATA: gf_write   TYPE          zslist_v07_new,
gt_write   LIKE TABLE OF zslist_v07_new.

*---DELETE START NDSC A.MASUDA 2004/04/08 --------------------------*
* Mod 2003.12.08 <<---
* 2002/01/10 PSD H.Tanaka ADD ↓
*DATA: GT_ALV     TYPE TABLE OF ZSLIST_V07
*                 WITH HEADER LINE.
* 2002/01/10 PSD H.Tanaka ADD ↑
*---DELETE END   NDSC A.MASUDA 2004/04/08 --------------------------*
DATA: gt_alv     TYPE TABLE OF zslist_v07_new
WITH HEADER LINE.

*---APPEND START PSD T.SAITOH 2002/08/05 ---------------------------*
* 出荷可能リスト専用：出荷可能数
DATA: g_kalab TYPE mska-kalab.
*---APPEND END   PSD T.SAITOH 2002/08/05 ---------------------------*

*--- REUSE_ALV_EVENTS_GET 用
DATA: gt_event TYPE slis_t_event.
DATA: gf_event TYPE slis_alv_event.
DATA: gf_layout   TYPE slis_layout_alv,     "レイアウト構造
gf_variant   LIKE disvariant,          "バリアント
g_top_of_page TYPE slis_formname VALUE 'TOP_OF_PAGE'.
*---
DATA: g_repid        TYPE sy-repid,        " プログラムＩＤ
g_data         TYPE sy-datum,        " システム日付
g_flg_exit(1)  TYPE c VALUE '0',     " ＬＯＯＰ終了フラグ
*      G_NUMGF        TYPE ZSLIST_V01-NUMGF,
g_fdat         TYPE zslist_v01-fdat,
g_tdat         TYPE zslist_v01-tdat,
g_wavwr        TYPE vbap-netwr,
g_netpr        TYPE zslist_v01-kbmeng.
*---APPEND START PSD T.SAITOH 2002/03/14 ALV一覧ステータス印刷拒否---*
DATA: gf_print      TYPE slis_print_alv.
*---APPEND END   PSD T.SAITOH 2002/03/14 ---------------------------*
* APPEND 2004/01/07 START
DATA: g_wavwr_y      TYPE vbap-netwr.  "原価（円建て）用
* APPEND 2004/01/07 END

* ADD 2004/02/12 Y.Tsukahara START
DATA: wa_eina TYPE typ_eina.
* ADD 2004/02/12 Y.Tsukahara END
* ADD 2004/03/29 Y.Tsukahara START
DATA: wa_menge TYPE ekpo-menge.  "変換後数量退避用
* ADD 2004/03/29 Y.Tsukahara END

*---APPEND START DMC A.MASUDA 2004/09/29 ----------------------------*
*--- 出庫済み数量換算用
DATA:
gw_kalab  LIKE lips-lfimg.
*---APPEND END   DMC A.MASUDA 2004/09/29 ----------------------------*

RANGES:r_vkbur FOR vbak-vkbur.
*---------------------------------------------------------------------
* 定数宣言
*---------------------------------------------------------------------
CONSTANTS: cns_vbak(4)    TYPE c VALUE 'VBAK',
cns_vbpa(4)    TYPE c VALUE 'VBPA',
cns_vbep(4)    TYPE c VALUE 'VBEP',
cns_vbbp(4)    TYPE c VALUE 'VBBP',
cns_ekpo(4)    TYPE c VALUE 'EKPO',
cns_vbap(4)    TYPE c VALUE 'VBAP',
cns_mard(4)    TYPE c VALUE 'MARD',
cns_vbfa(4)    TYPE c VALUE 'VBFA',
cns_tvstt(5)   TYPE c VALUE 'TVSTT',
cns_lfa1(4)    TYPE c VALUE 'LFA1',
cns_a(1)       TYPE c VALUE 'A',
cns_h(1)       TYPE c VALUE 'H',
cns_i(1)       TYPE c VALUE 'I',
cns_k(1)       TYPE c VALUE 'K',
cns_l(1)       TYPE c VALUE 'L',
cns_c(1)       TYPE c VALUE 'C',
cns_j(1)       TYPE c VALUE 'J',
cns_x(1)       TYPE c VALUE 'X',
cns_n(1)       TYPE c VALUE 'N',
cns_o(1)       TYPE c VALUE 'O',
cns_ag(2)      TYPE c VALUE 'AG',
cns_ka(2)      TYPE c VALUE 'KA',
cns_kb(2)      TYPE c VALUE 'KB',
cns_kr(2)      TYPE c VALUE 'KR',
cns_sp(2)      TYPE c VALUE 'SP',
cns_pe(2)      TYPE c VALUE 'PE',
cns_ve(2)      TYPE c VALUE 'VE',
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
cns_we(2)      TYPE c VALUE 'WE',
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*
cns_zero(1)    TYPE c VALUE '0',
cns_zseo(4)    TYPE c VALUE 'ZSEO',
cns_zsek(4)    TYPE c VALUE 'ZSEK',
cns_onli(4)    TYPE c VALUE 'ONLI',
cns_0001(4)    TYPE c VALUE '0001',
cns_*(1)       TYPE c VALUE '*'
.
*---APPEND START PSD T.SAITOH 2002/03/20 仕様変更：機能追加----------*
CONSTANTS: cns_ztan(4)    TYPE c VALUE 'ZTAN',
cns_tan(3)     TYPE c VALUE 'TAN',
cns_ztmp(4)    TYPE c VALUE 'ZTMP'.
*---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*
* ADD 2004/01/07 Y.Tsukahara START
CONSTANTS: cns_tab(3)     TYPE c VALUE 'TAB',
cns_ztab(4)    TYPE c VALUE 'ZTAB',
cns_ztmb(4)    TYPE c VALUE 'ZTMB',
cns_jpy(3)     TYPE c VALUE 'JPY'.  "通貨単位（日本円）
* ADD 2004/01/07 Y.Tsukahara END
*---ADD BY DMC 2008/05/07 BEGIN
CONSTANTS: cns_hanbayi TYPE char3 VALUE 'HAN',  "販売
cns_koubayi TYPE char3 VALUE 'KOU',  "購買
cns_zayiko  TYPE char3 VALUE 'ZAI'.  "在庫
*---ADD BY DMC 2008/05/07 END
*2013/11/11 Add Start
* 変更履歴.変更項目
CONSTANTS:cns_verk  TYPE cdhdr-objectclas VALUE 'VERKBELEG',
cns_eink  TYPE cdhdr-objectclas VALUE 'EINKBELEG',
cns_vbkd  TYPE cdpos-tabname    VALUE 'VBKD',
cns_ekpa  TYPE cdpos-tabname    VALUE 'EKPA',
cns_eket  TYPE cdpos-tabname    VALUE 'EKET',
cns_netpr TYPE cdpos-fname      VALUE 'NETPR',
cns_wmeng TYPE cdpos-fname      VALUE 'WMENG',
cns_vdatu TYPE cdpos-fname      VALUE 'VDATU',
cns_pstyv TYPE cdpos-fname      VALUE 'PSTYV',
cns_zterm TYPE cdpos-fname      VALUE 'ZTERM',
cns_menge TYPE cdpos-fname      VALUE 'MENGE',
cns_aedat TYPE cdpos-fname      VALUE 'AEDAT',
cns_slfdt TYPE cdpos-fname      VALUE 'SLFDT',
cns_mwskz TYPE cdpos-fname      VALUE 'MWSKZ',
cns_lifn2 TYPE cdpos-fname      VALUE 'LIFN2',
*2014/02/03 Add Start 拒否理由、削除フラグ
cns_ABGRU type cdpos-fname      value 'ABGRU',
cns_LOEKZ type cdpos-fname      value 'LOEKZ',
*2014/02/03 Add End
* 購買発注.取引先
cns_ba    TYPE ekpa-parvw       VALUE 'BA',
cns_lf    TYPE ekpa-parvw       VALUE 'LF',
cns_rs    TYPE ekpa-parvw       VALUE 'RS',
cns_y1    TYPE ekpa-parvw       VALUE 'Y1'.
*2013/11/11 Add End

*---------------------------------------------------------------------
* 選択画面定義
*---------------------------------------------------------------------

*---APPEND START PSD T.SAITOH 2002/06/21 ---------------------------*
SELECTION-SCREEN BEGIN OF BLOCK union
WITH FRAME TITLE text-100.
PARAMETERS:pr_vkorg TYPE vbak-vkorg MEMORY ID vko,"販売組織
pr_vtweg TYPE vbak-vtweg MEMORY ID vtw,"流通CH
pr_spart TYPE vbak-spart MEMORY ID spa."製品部門
SELECTION-SCREEN END   OF BLOCK union.
*---APPEND END   PSD T.SAITOH 2002/06/21 ---------------------------*

*--- 帳票選択
SELECTION-SCREEN BEGIN OF BLOCK kigen
WITH FRAME TITLE text-006.
*--- 当日受発注一覧表
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: r_today  RADIOBUTTON GROUP rb1.
SELECTION-SCREEN COMMENT 3(18) text-008 FOR FIELD r_today.
*SELECTION-SCREEN COMMENT 22(15) TEXT-051.
*SELECTION-SCREEN COMMENT 40(15) TEXT-052.
SELECTION-SCREEN COMMENT 26(15) text-051.
SELECTION-SCREEN COMMENT 41(15) text-052.
SELECTION-SCREEN END   OF LINE.
*--- 内示一覧表
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: r_naiji  RADIOBUTTON GROUP rb1.
SELECTION-SCREEN COMMENT 3(18) text-009 FOR FIELD r_naiji.
*SELECTION-SCREEN COMMENT 22(15) TEXT-053.
*SELECTION-SCREEN COMMENT 40(15) TEXT-054.
SELECTION-SCREEN COMMENT 26(15) text-053.
SELECTION-SCREEN COMMENT 41(15) text-054.
SELECTION-SCREEN END   OF LINE.
*--- 未引当一覧表
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: r_mihiki RADIOBUTTON GROUP rb1.
SELECTION-SCREEN COMMENT 3(18) text-010 FOR FIELD r_mihiki.
*SELECTION-SCREEN COMMENT 22(15) TEXT-055.
*SELECTION-SCREEN COMMENT 40(15) TEXT-054.
SELECTION-SCREEN COMMENT 26(15) text-055.
SELECTION-SCREEN COMMENT 41(15) text-054.
SELECTION-SCREEN END   OF LINE.
*--- 出荷ブロックリスト
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: r_block  RADIOBUTTON GROUP rb1.
SELECTION-SCREEN COMMENT 3(18) text-011 FOR FIELD r_block.
*SELECTION-SCREEN COMMENT 22(15) TEXT-056.
SELECTION-SCREEN COMMENT 26(15) text-056.
* 2002/01/21 PSD H.Tanaka MOD ↓
*SELECTION-SCREEN COMMENT 40(15) TEXT-057.
SELECTION-SCREEN COMMENT 41(15) text-059.
SELECTION-SCREEN END   OF LINE.
*--- 出荷可能リスト
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: r_kano   RADIOBUTTON GROUP rb1.
SELECTION-SCREEN COMMENT 3(18) text-012 FOR FIELD r_kano.
*SELECTION-SCREEN COMMENT 22(15) TEXT-058.
*SELECTION-SCREEN COMMENT 40(15) TEXT-059.
SELECTION-SCREEN COMMENT 26(15) text-058.
SELECTION-SCREEN COMMENT 41(15) text-059.
SELECTION-SCREEN END   OF LINE.
* 2002/02/05 PSD H.Tanaka ADD ↓
*SELECTION-SCREEN END   OF BLOCK KIGEN.
*--- ＥＤＩ重複データ一覧表
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: r_tyofk   RADIOBUTTON GROUP rb1.
SELECTION-SCREEN COMMENT 3(20) text-068 FOR FIELD r_tyofk.
SELECTION-SCREEN COMMENT 26(15) text-072.
SELECTION-SCREEN COMMENT 41(15) text-059.
SELECTION-SCREEN END   OF LINE.
SELECTION-SCREEN END   OF BLOCK kigen.
* 2002/02/05 PSD H.Tanaka ADD ↑

*--- 条件指定
SELECTION-SCREEN BEGIN OF BLOCK joken WITH FRAME TITLE text-007.
*--- 抽出年月日
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  text-043.
SELECTION-SCREEN COMMENT 7(21) text-021.
SELECT-OPTIONS: pr_date  FOR gf_info-audat.
SELECTION-SCREEN END   OF LINE.
*--- 抽出年月
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  text-044.
SELECTION-SCREEN COMMENT 7(21) text-022.
SELECT-OPTIONS: pr_yymm    FOR g_spmon.
SELECTION-SCREEN END   OF LINE.
*--- 営業所コード
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  text-045.
SELECTION-SCREEN COMMENT 7(21) text-023.
SELECT-OPTIONS: pr_vkbur   FOR gf_info-vkbur.
SELECTION-SCREEN END   OF LINE.
*--- 出荷ポイント
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  text-046.
SELECTION-SCREEN COMMENT 7(21) text-062.
SELECT-OPTIONS: pr_werks   FOR gf_vbap-werks.
SELECTION-SCREEN END   OF LINE.

*--- 営業グループ
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  text-047.
PARAMETERS: r_vkgrp RADIOBUTTON GROUP rb2.
SELECTION-SCREEN COMMENT 7(21) text-063 FOR FIELD r_vkgrp.
SELECT-OPTIONS: pr_vkgrp   FOR gf_info-vkgrp.
SELECTION-SCREEN END   OF LINE.
*--- 営業員コード
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  text-048.
PARAMETERS: r_pernr RADIOBUTTON GROUP rb2.
SELECTION-SCREEN COMMENT 7(21) text-064 FOR FIELD r_pernr.
SELECT-OPTIONS: pr_pernr   FOR gf_vbpa-pernr.
SELECTION-SCREEN END   OF LINE.

*--- 出荷ブロック
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  text-049.
SELECTION-SCREEN COMMENT 7(21) text-019.
SELECT-OPTIONS: pr_lifsp   FOR gf_vbep-lifsp.
SELECTION-SCREEN END   OF LINE.
*--- 得意先コード
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  text-050.
SELECTION-SCREEN COMMENT 7(21) text-025.
SELECT-OPTIONS: pr_kunnr FOR gf_info-kunnr.
SELECTION-SCREEN END   OF LINE.
* 2002/02/05 PSD H.Tanaka ADD ↓
*--- 拒否理由
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  text-069.
SELECTION-SCREEN COMMENT 7(21) text-070.
SELECT-OPTIONS: pr_abgru FOR g_abgru DEFAULT 'ZZ'.
SELECTION-SCREEN END   OF LINE.
* 2002/02/05 PSD H.Tanaka ADD ↑
*2011/05/23 Add Start
*--- 購買グループ
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  text-075.
SELECTION-SCREEN COMMENT 7(21) text-076.
SELECT-OPTIONS: s_ekgrp FOR gf_ekpo1-ekgrp.
SELECTION-SCREEN END   OF LINE.
*2011/05/23 Add End
SELECTION-SCREEN END   OF BLOCK joken.

*---APPEND START GSL 2014/02/12 ------------------------------------*
*--- 日次帳票出力用オプション
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF BLOCK BK1 WITH FRAME
TITLE TEXT-101.
PARAMETERS       PA_AUDAT TYPE VBAK-AUDAT.  "伝票日付(ALVヘッダ項目)
SELECTION-SCREEN END   OF BLOCK BK1.
*---APPEND END   GSL 2014/02/12 ------------------------------------*


*---------------------------------------------------------------------
* AT SELECTION-SCREEN
*---------------------------------------------------------------------
AT SELECTION-SCREEN.
*--- 入力チェック処理
IF r_today      = cns_x.  " 当日受発注一覧表
PERFORM frm_check_today.
ELSEIF r_naiji  = cns_x.  " 内示一覧表
PERFORM frm_check_naiji.
ELSEIF r_mihiki = cns_x.  " 未引当一覧表
PERFORM frm_check_mihiki.
ELSEIF r_block  = cns_x.  " 出荷ブロックリスト
PERFORM frm_check_block.
ELSEIF r_kano   = cns_x.  " 出荷可能リスト
PERFORM frm_check_kano.
* 2002/02/05 PSD H.Tanaka ADD ↓
ELSEIF r_tyofk  = cns_x.  " ＥＤＩ重複データ一覧表
PERFORM frm_check_tyofk.
* 2002/02/05 PSD H.Tanaka ADD ↑
ENDIF.

*---------------------------------------------------------------------
* START-OF-SELECTION
*---------------------------------------------------------------------
START-OF-SELECTION.
*--- 初期処理
PERFORM frm_init.

*--- 帳票出力用内部テーブル設定処理
PERFORM frm_make_data.

*--- 帳票出力処理
PERFORM frm_write_data.

************************************************************************
* TOP-OF-PAGE
***********************************************************************
FORM frm_top_of_page.

*--- ヘッダー出力処理

* 営業所名
PERFORM frm_select_tvkbt USING gt_alv-bezeia.
* 営業グループ
PERFORM frm_select_tvgrt USING gt_alv-bezeib.

*--- 当日受発注一覧表
IF r_today = cns_x.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WRITE:  42      TEXT-001,
*            /1      TEXT-013,GF_WRITE-AUDAT DD/MM/YY,          " 日付
*                    TEXT-014,GF_WRITE-VKBUR,TEXT-015,GF_WRITE-BEZEIA,
*                    TEXT-017,GF_WRITE-VKGRP,TEXT-015,GF_WRITE-BEZEIB.
WRITE:  42      text-001,
/1      text-013,gt_alv-audat DD/MM/YY,          " 日付
text-014,gt_alv-vkbur,text-015,gt_alv-bezeia,
text-017,gt_alv-vkgrp,text-015,gt_alv-bezeib.
* 2002/01/10 PSD H.Tanaka MOD ↑
*--- 内示一覧表
ELSEIF r_naiji  = cns_x.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WRITE:  42      TEXT-002,
*            /1      TEXT-014,GF_WRITE-VKBUR,TEXT-015,GF_WRITE-BEZEIA,
*                    TEXT-017,GF_WRITE-VKGRP,TEXT-015,GF_WRITE-BEZEIB.
WRITE:  42      text-002,
/1      text-014,gt_alv-vkbur,text-015,gt_alv-bezeia,
text-017,gt_alv-vkgrp,text-015,gt_alv-bezeib.
* 2002/01/10 PSD H.Tanaka MOD ↑
*--- 未引当一覧表
ELSEIF r_mihiki = cns_x.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WRITE:  42      TEXT-003,
*            /1      TEXT-014,GF_WRITE-VKBUR,TEXT-015,GF_WRITE-BEZEIA,
*                    TEXT-017,GF_WRITE-VKGRP,TEXT-015,GF_WRITE-BEZEIB.
WRITE:  42      text-003,
/1      text-014,gt_alv-vkbur,text-015,gt_alv-bezeia,
text-017,gt_alv-vkgrp,text-015,gt_alv-bezeib.
* 2002/01/10 PSD H.Tanaka MOD ↑
*--- 出荷ブロックリスト
ELSEIF r_block  = cns_x.
IF r_vkgrp = cns_x.       " 営業所コードボタン押下時
* 2002/01/10 PSD H.Tanaka MOD ↓
*      WRITE:  42      TEXT-004,
*              /1      TEXT-018,GF_WRITE-VSTEL,TEXT-015,GF_WRITE-VTEXT,
*                      TEXT-017,GF_WRITE-VKGRP,TEXT-015,GF_WRITE-BEZEIB.
WRITE:  42      text-004,
/1      text-018,gt_alv-vstel,text-015,gt_alv-vtext,
text-017,gt_alv-vkgrp,text-015,gt_alv-bezeib.
* 2002/01/10 PSD H.Tanaka MOD ↑
ELSEIF r_pernr = cns_x.   " 営業員ボタン押下時
* 2002/01/10 PSD H.Tanaka MOD ↓
*      WRITE:  42      TEXT-004,
*              /1      TEXT-018,GF_WRITE-VSTEL,TEXT-015,GF_WRITE-VTEXT,
*                      TEXT-020,GF_WRITE-PERNR,TEXT-015,GF_WRITE-NACHN.
WRITE:  42      text-004,
/1      text-018,gt_alv-vstel,text-015,gt_alv-vtext,
text-020,gt_alv-pernr,text-015,gt_alv-nachn.
* 2002/01/10 PSD H.Tanaka MOD ↑
ENDIF.
*--- 出荷可能リスト
ELSEIF r_kano   = cns_x.
IF r_vkgrp = cns_x.       " 営業所コードボタン押下時
* 2002/01/10 PSD H.Tanaka MOD ↓
*      WRITE:  42      TEXT-005,
*              /1      TEXT-018,GF_WRITE-VSTEL,TEXT-015,GF_WRITE-VTEXT,
*                      TEXT-017,GF_WRITE-VKGRP,TEXT-015,GF_WRITE-BEZEIB,
*                      TEXT-060,G_FDAT,        TEXT-061,G_TDAT.
WRITE:  42      text-005,
/1      text-018,gt_alv-vstel,text-015,gt_alv-vtext,
text-017,gt_alv-vkgrp,text-015,gt_alv-bezeib,
text-060,g_fdat,        text-061,g_tdat.
* 2002/01/10 PSD H.Tanaka MOD ↑
ELSEIF r_pernr = cns_x.   " 営業員ボタン押下時
* 2002/01/10 PSD H.Tanaka MOD ↓
*      WRITE:  42      TEXT-005,
*              /1      TEXT-018,GF_WRITE-VSTEL,TEXT-015,GF_WRITE-VTEXT,
*                      TEXT-020,GF_WRITE-PERNR,TEXT-015,GF_WRITE-NACHN,
*                      TEXT-060,G_FDAT,        TEXT-061,G_TDAT.
WRITE:  42      text-005,
/1      text-018,gt_alv-vstel,text-015,gt_alv-vtext,
text-020,gt_alv-pernr,text-015,gt_alv-nachn,
text-060,g_fdat,        text-061,g_tdat.
* 2002/01/10 PSD H.Tanaka MOD ↑
ENDIF.
* 2002/02/05 PSD H.Tanaka ADD ↓
*--- ＥＤＩ重複データ一覧表
ELSEIF r_tyofk = cns_x.
*---MODIFY START PSD T.SAITOH 2002/06/12 ---------------------------*
*    IF G_DATA+4(1) = 0.
IF gt_alv-audat+4(1) = 0.
*      WRITE:  25      G_DATA+5(1),TEXT-073.
WRITE:  25      gt_alv-audat+5(1),text-073.
ELSE.
*      WRITE:  25      G_DATA+4(2),TEXT-073.
WRITE:  25      gt_alv-audat+4(2),text-073.
ENDIF.
*    IF G_DATA+6(1) = 0.
IF gt_alv-audat+6(1) = 0.
*      WRITE:  31      G_DATA+7(1),TEXT-074.
WRITE:  31      gt_alv-audat+7(1),text-074.
ELSE.
*      WRITE:  31      G_DATA+6(2),TEXT-074.
WRITE:  31      gt_alv-audat+6(2),text-074.
ENDIF.
*---MODIFY END   PSD T.SAITOH 2002/06/12 ---------------------------*
WRITE:  42      text-071.
IF r_vkgrp = cns_x.       " 営業所コードボタン押下時
WRITE:  /1      text-014,gt_alv-vkbur,text-015,gt_alv-bezeia,
text-017,gt_alv-vkgrp,text-015,gt_alv-bezeib.
ELSEIF r_pernr = cns_x.   " 営業員ボタン押下時
WRITE:  /1      text-014,gt_alv-vkbur,text-015,gt_alv-bezeia,
text-020,gt_alv-pernr,text-015,gt_alv-nachn.
ENDIF.
* 2002/02/05 PSD H.Tanaka ADD ↑
ENDIF.

*---APPEND START PSD T.SAITOH 2002/08/08 ---------------------------*
*   ページ番号付加
WRITE: 145 'PAGE:',sy-pagno. "<<< 2002/08/15 修正
*---APPEND END   PSD T.SAITOH 2002/08/08 ---------------------------*

ENDFORM.
************************************************************************
* ALV CALLER_EXIT（ 2002/01/10 PSD H.Tanaka ADD ）
***********************************************************************
FORM frm_caller_exit USING rs_data TYPE slis_data_caller_exit.
rs_data-callback_header_transport = 'FILITEXTS_TEXT_TRANSPORT'.
ENDFORM.
************************************************************************
* Form
***********************************************************************
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_TODAY
*&---------------------------------------------------------------------*
*       入力チェック処理（当日受発注一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_check_today.
*---入力パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓  2002.05.02 APPEND PSD K.Arai
IF sy-ucomm+0(1) = '%'.
EXIT.
ENDIF.
*--- ↑

IF NOT ( pr_yymm IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_yymm,pr_werks,pr_pernr,pr_lifsp.
REFRESH: pr_yymm,pr_werks,pr_pernr,pr_lifsp.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-008 text-022.
ELSEIF NOT ( pr_werks IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_werks,pr_pernr,pr_lifsp.
REFRESH: pr_werks,pr_pernr,pr_lifsp.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-008 text-062.
ELSEIF NOT ( pr_pernr IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_pernr,pr_lifsp.
REFRESH: pr_pernr,pr_lifsp.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-008 text-064.
ELSEIF NOT ( pr_lifsp IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_lifsp.
REFRESH: pr_lifsp.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-008 text-019.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
** 2002/02/06 PSD H.Tanaka MOD ↓
**  IF SY-UCOMM = CNS_ONLI.
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
** 2002/02/06 PSD H.Tanaka MOD ↑
*--- ↑
IF pr_date IS INITIAL.
MESSAGE e006(z1) WITH text-021.
ELSEIF pr_vkbur IS INITIAL.
MESSAGE e006(z1) WITH text-023.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
* ENDIF.
*--- ↑
ENDFORM.                   " FRM_CHECK_TODAY
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_NAIJI
*&---------------------------------------------------------------------*
*       入力チェック処理（内示一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_check_naiji.
*---入力必須パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓  2002.05.02 APPEND PSD K.Arai
IF sy-ucomm+0(1) = '%'.
EXIT.
ENDIF.
*--- ↑
IF NOT ( pr_date IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_date,pr_werks,pr_pernr,pr_lifsp,pr_kunnr.
REFRESH: pr_date,pr_werks,pr_pernr,pr_lifsp,pr_kunnr.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-009 text-021.
ELSEIF NOT ( pr_werks IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_werks,pr_pernr,pr_lifsp,pr_kunnr.
REFRESH: pr_werks,pr_pernr,pr_lifsp,pr_kunnr.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-009 text-062.
ELSEIF NOT ( pr_pernr IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_pernr,pr_lifsp,pr_kunnr.
REFRESH: pr_pernr,pr_lifsp,pr_kunnr.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-009 text-064.
ELSEIF NOT ( pr_lifsp IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_lifsp,pr_kunnr.
REFRESH: pr_lifsp,pr_kunnr.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-009 text-019.
ELSEIF NOT ( pr_kunnr IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_kunnr.
REFRESH: pr_kunnr.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-009 text-025.
ENDIF.

*--- ↓  2002.05.02 DELETE PSD K.Arai
** 2002/02/06 PSD H.Tanaka ADD ↓
**  IF SY-UCOMM = CNS_ONLI.
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
** 2002/02/06 PSD H.Tanaka ADD ↑
*--- ↑
IF pr_yymm IS INITIAL.
MESSAGE e006(z1) WITH text-022.
ELSEIF pr_vkbur IS INITIAL.
MESSAGE e006(z1) WITH text-023.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
*  ENDIF.
*--- ↑
ENDFORM.                   " FRM_CHECK_NAIJI
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_MIHIKI
*&---------------------------------------------------------------------*
*       入力チェック処理（未引当一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_check_mihiki.
*---入力必須パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓  2002.05.02 APPEND PSD K.Arai
IF sy-ucomm+0(1) = '%' .
EXIT.
ENDIF.
*--- ↑
IF NOT ( pr_date IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_date,pr_yymm,pr_werks,pr_pernr,pr_lifsp,pr_kunnr.
REFRESH: pr_date,pr_yymm,pr_werks,pr_pernr,pr_lifsp,pr_kunnr.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-010 text-021.
ELSEIF NOT ( pr_yymm  IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_yymm,pr_werks,pr_pernr,pr_lifsp,pr_kunnr.
REFRESH: pr_yymm,pr_werks,pr_pernr,pr_lifsp,pr_kunnr.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-010 text-022.
ELSEIF NOT ( pr_werks IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_werks,pr_pernr,pr_lifsp,pr_kunnr.
REFRESH: pr_werks,pr_pernr,pr_lifsp,pr_kunnr.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-010 text-062.
ELSEIF NOT ( pr_pernr IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_pernr,pr_lifsp,pr_kunnr.
REFRESH: pr_pernr,pr_lifsp,pr_kunnr.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-010 text-064.
ELSEIF NOT ( pr_lifsp IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_lifsp,pr_kunnr.
REFRESH: pr_lifsp,pr_kunnr.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-010 text-019.
ELSEIF NOT ( pr_kunnr IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_kunnr.
REFRESH: pr_kunnr.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-010 text-025.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
** 2002/02/06 PSD H.Tanaka ADD ↓
**  IF SY-UCOMM = CNS_ONLI.
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
** 2002/02/06 PSD H.Tanaka ADD ↑
*--- ↑
IF pr_vkbur IS INITIAL.
MESSAGE e006(z1) WITH text-023.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
*  ENDIF.
*--- ↑
ENDFORM.                   " FRM_CHECK_MIHIKI
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_BLOCK
*&---------------------------------------------------------------------*
*       入力チェック処理（出荷ブロックリスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_check_block.
*---入力必須パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓  2002.05.02 APPEND PSD K.Arai
IF sy-ucomm+0(1) = '%'.
EXIT.
ENDIF.
*--- ↑

IF NOT ( pr_date IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_date,pr_yymm,pr_vkbur.
REFRESH: pr_date,pr_yymm,pr_vkbur.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-011 text-021.
ELSEIF NOT ( pr_yymm  IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_yymm,pr_vkbur.
REFRESH: pr_yymm,pr_vkbur.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-011 text-022.
ELSEIF NOT ( pr_vkbur IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_vkbur.
REFRESH: pr_vkbur.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-011 text-023.
ENDIF.

*--- ↓  2002.05.02 DELETE PSD K.Arai
** 2002/02/06 PSD H.Tanaka ADD ↓
**  IF SY-UCOMM = CNS_ONLI.
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
** 2002/02/06 PSD H.Tanaka ADD ↑
*--- ↑
IF pr_werks IS INITIAL.
MESSAGE e006(z1) WITH text-062.
ELSEIF pr_lifsp IS INITIAL.
MESSAGE e006(z1) WITH text-019.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
*  ENDIF.
*--- ↑
ENDFORM.                   " FRM_CHECK_BLOCK
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_KANO
*&---------------------------------------------------------------------*
*       入力チェック処理（出荷可能リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_check_kano.
*---入力必須パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓ 2002.05.02 APPEND PSD K.Arai
IF sy-ucomm+0(1) = '%'.
EXIT.
ENDIF.
*--- ↑

IF NOT ( pr_yymm  IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_yymm,pr_vkbur,pr_lifsp.
REFRESH: pr_yymm,pr_vkbur,pr_lifsp.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-012 text-022.
ELSEIF NOT ( pr_vkbur IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_vkbur,pr_lifsp.
REFRESH: pr_vkbur,pr_lifsp.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-012 text-023.
ELSEIF NOT ( pr_lifsp IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: pr_lifsp.
REFRESH: pr_lifsp.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE e601(z1) WITH text-012 text-019.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
** 2002/02/06 PSD H.Tanaka ADD ↓
**  IF SY-UCOMM = CNS_ONLI.
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
** 2002/02/06 PSD H.Tanaka ADD ↑
*--- ↑

IF pr_date IS INITIAL.
MESSAGE e006(z1) WITH text-021.
ELSEIF pr_werks IS INITIAL.
MESSAGE e006(z1) WITH text-062.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
*  ENDIF.
*--- ↑

ENDFORM.                   " FRM_CHECK_KANO
*&---------------------------------------------------------------------*
*&      Form  FRM_INIT
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_init.

g_repid = sy-repid.   " プログラムＩＤ取得
g_data  = sy-datum.   " システム日付取得

ENDFORM.                    " FRM_INIT
*&---------------------------------------------------------------------
*&      Form  FRM_MAKE_DATA
*&---------------------------------------------------------------------
*       帳票出力用内部テーブル設定処理
*----------------------------------------------------------------------
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------
FORM frm_make_data.
*--- 表示帳票判別処理
IF r_today = cns_x.      " 当日受発注一覧表
PERFORM frm_data_today.
ELSEIF r_naiji = cns_x.  " 内示一覧表
PERFORM frm_data_naiji.
ELSEIF r_mihiki = cns_x. " 未引当一覧表
PERFORM frm_data_mihiki.
ELSEIF r_block = cns_x.  " 出荷ブロックリスト
PERFORM frm_data_block.
ELSEIF r_kano = cns_x.   " 出荷可能リスト
PERFORM frm_data_kano.
* 2002/02/05 PSD H.Tanaka ADD ↓
ELSEIF r_tyofk = cns_x.  " ＥＤＩ重複データ一覧表
PERFORM frm_data_tyofk.
* 2002/02/05 PSD H.Tanaka ADD ↑
ENDIF.

ENDFORM.                    " FRM_MAKE_DATA
*&---------------------------------------------------------------------
*&      Form  FRM_DATA_SET
*&---------------------------------------------------------------------
*       共通項目設定処理
*----------------------------------------------------------------------
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------
FORM frm_data_set.
CLEAR: gf_write,        " 帳票出力用構造クリア
g_flg_exit.      " ＬＯＯＰ終了フラグクリア
*---APPEND START PSD T.SAITOH 2002/08/06 ---------------------------*
* 発注伝票初期化位置修正
CLEAR: gf_ekpo.
*---APPEND END   PSD T.SAITOH 2002/08/06 ---------------------------*

*--- 共通項目設定
MOVE-CORRESPONDING gf_info TO gf_write.

*---APPEND START GSL 2014/02/12 ------------------------------------*
*選択画面で伝票日付が指定されている場合には、
*伝票日付(ALVヘッダ項目)は選択画面の指定日付を設定する。
IF PA_AUDAT IS NOT INITIAL.
GF_WRITE-AUDAT = PA_AUDAT.
ENDIF.
*---APPEND END   GSL 2014/02/12 ------------------------------------*

ENDFORM.                    " FRM_DATA_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_TODAY
*&---------------------------------------------------------------------*
*       テーブル読込条件①
*       販売伝票情報取得処理（当日受発注一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_info_today.
CLEAR   gf_info.
REFRESH gt_info.

*2013/11/11 Add Start
TYPES:
BEGIN OF typ_ekkn,
vbeln TYPE ekkn-vbeln,           "販売管理伝票番号
vbelp TYPE ekkn-vbelp,           "販売伝票明細
ebeln TYPE ekkn-ebeln,           "購買伝票番号
END   OF typ_ekkn.
DATA:
lt_ekkn  TYPE STANDARD TABLE OF typ_ekkn,
lf_ekkn  TYPE typ_ekkn,
lf_cdhdr TYPE typ_cdhdr.

* 変更文書情報取得
PERFORM frm_get_cdhdr.
*2013/11/11 Add End

*--- 販売伝票情報取得
SELECT a~vbeln a~audat a~auart a~vkgrp a~vkbur
a~vdatu a~bstnk a~kunnr a~vbtyp a~ernam
c~posnr
* 2002/01/30 PSD H.Tanaka MOD ↓
*         D~BEZEI E~BEZEI F~BSTDK_E
d~bezei e~bezei f~bstdk_e f~kursk
*2013/11/11 Add Start
f~zterm                       "支払条件
*2013/11/11 Add End
INTO TABLE gt_info
FROM ( ( ( ( ( vbak AS a INNER JOIN vbuk AS b
ON         a~vbeln  = b~vbeln ) INNER JOIN vbup  AS c
ON         a~vbeln  = c~vbeln ) INNER JOIN tvkbt AS d
ON         a~vkbur  = d~vkbur ) INNER JOIN tvgrt AS e
ON         a~vkgrp  = e~vkgrp ) INNER JOIN vbkd  AS f
ON         c~vbeln  = f~vbeln ) INNER JOIN vbap
*---APPEND MODIFY START PSD T.SAITOH 2002/08/21 --------------------*
*      ON         A~VBELN  = VBAP~VBELN
* 条件修正：明細レベル結合忘れ・・・【明細レベル結合を追加】
ON         c~vbeln  = vbap~vbeln
AND         c~posnr  = vbap~posnr
*---APPEND MODIFY END   PSD T.SAITOH 2002/08/21 --------------------*
WHERE a~audat IN pr_date
* Add 2008.03.07 --->
*   WHERE ( A~AUDAT IN PR_DATE
*      or  A~AEDAT IN PR_DATE )
* Add 2008.03.07 <---
AND   a~vkbur IN pr_vkbur
AND   a~vkgrp IN pr_vkgrp
AND   a~kunnr IN pr_kunnr
AND ( a~vbtyp =  cns_c
OR   a~vbtyp =  cns_h
OR   a~vbtyp =  cns_i
OR   a~vbtyp =  cns_k
OR   a~vbtyp =  cns_l )
*---MODIFY START PSD T.SAITOH 2002/08/16 ---------------------------*
*     AND   B~ABSTK <> CNS_C
AND   vbap~abgru <> 'ZZ' "拒否理由
*---MODIFY END   PSD T.SAITOH 2002/08/16 ---------------------------*
AND   d~spras =  cns_j
AND   e~spras =  cns_j
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
AND         a~vkorg = pr_vkorg
AND         a~vtweg = pr_vtweg
AND         a~spart = pr_spart
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
AND   f~posnr =  '000000'.

*2013/11/11 Add Start
* 変更履歴のある販売伝票[VBAK,VBAP,etc]取得
IF LINES( gt_vbeln ) > 0.
PERFORM frm_get_vbak.

*   変更ユーザIDに変更履歴.販売伝票の最終日時責任者のユーザ名をセット
LOOP AT gt_vbak INTO gf_info.
AT NEW vbeln.
CLEAR gf_cdhdr.
READ TABLE gt_cdhdv INTO gf_cdhdr
WITH KEY objectclas = cns_verk
objectid   = gf_info-vbeln.

*       販売伝票単位でセット
gf_info-upnam = gf_cdhdr-username."変更ユーザID
gf_info-udate = gf_cdhdr-udate.   "変更伝票の登録日付
gf_info-utime = gf_cdhdr-utime.   "変更時刻
MODIFY gt_vbak FROM gf_info TRANSPORTING upnam udate utime
WHERE vbeln = gf_info-vbeln.
ENDAT.
ENDLOOP.

*   販売情報内部テーブルに追加
APPEND LINES OF gt_vbak TO gt_info.
ENDIF.

* 変更履歴のある発注データに紐づく販売伝票[VBAK,VBAP,etc]取得
IF LINES( gt_ebeln ) > 0.
*   購買伝票勘定設定[EKKN]取得
SELECT vbeln vbelp ebeln
INTO TABLE lt_ekkn
FROM ekkn
FOR ALL ENTRIES IN gt_ebeln
WHERE ebeln = gt_ebeln-ebeln.     "変更履歴.購買伝票番号

*   発注データに紐づく販売伝票番号
SORT lt_ekkn BY vbeln vbelp ebeln.
CLEAR gt_vbeln.
gt_vbeln = lt_ekkn.
DELETE ADJACENT DUPLICATES FROM gt_vbeln.

*   変更履歴のある販売伝票[VBAK,VBAP,etc]取得
IF LINES( gt_vbeln ) > 0.
PERFORM frm_get_vbak.

*     変更ユーザIDに変更履歴.発注伝票の最終日時責任者のユーザ名をセット
LOOP AT gt_vbak INTO gf_info.
AT NEW vbeln.
CLEAR lf_cdhdr.
*         販売伝票に紐づく発注伝票内で最終日時を検索
LOOP AT lt_ekkn INTO lf_ekkn
WHERE vbeln = gf_info-vbeln.
CLEAR gf_cdhdr.
READ TABLE gt_cdhde INTO gf_cdhdr
WITH KEY objectclas = cns_eink
objectid   = lf_ekkn-ebeln.
IF  lf_cdhdr-udate <= gf_cdhdr-udate
AND lf_cdhdr-utime <  gf_cdhdr-utime.
lf_cdhdr = gf_cdhdr.
ENDIF.
ENDLOOP.

*         変更履歴.購買伝票と変更履歴.販売伝票の最終日時を比較
CLEAR gf_cdhdr.
READ TABLE gt_cdhdv INTO gf_cdhdr
WITH KEY objectclas = cns_verk
objectid   = lf_ekkn-vbeln.
IF  lf_cdhdr-udate <= gf_cdhdr-udate
AND lf_cdhdr-utime <  gf_cdhdr-utime.
lf_cdhdr = gf_cdhdr.
ENDIF.

*         販売伝票単位でセット
gf_info-upnam = lf_cdhdr-username."変更ユーザID
gf_info-udate = lf_cdhdr-udate.   "変更伝票の登録日付
gf_info-utime = lf_cdhdr-utime.   "変更時刻
MODIFY gt_vbak FROM gf_info TRANSPORTING upnam udate utime
WHERE vbeln = gf_info-vbeln.
ENDAT.

*       購買伝票番号を保持
CLEAR lf_ekkn.
READ TABLE lt_ekkn INTO lf_ekkn
WITH KEY vbeln = gf_info-vbeln
vbelp = gf_info-posnr.
gf_info-ebelu = lf_ekkn-ebeln.   "購買伝票番号
MODIFY gt_vbak FROM gf_info TRANSPORTING ebelu.
ENDLOOP.

*     販売情報内部テーブルに追加
APPEND LINES OF gt_vbak TO gt_info.
ENDIF.
ENDIF.

* 販売情報内部テーブルをSORT
SORT gt_info BY vbeln posnr
chang DESCENDING udate DESCENDING utime DESCENDING
ebelu DESCENDING.    "購買伝票紐づき優先

* 販売情報内部テーブルの重複行を削除
DELETE ADJACENT DUPLICATES FROM gt_info COMPARING vbeln posnr.

* 変更伝票区分の設定
LOOP AT gt_info INTO gf_info.
AT NEW vbeln.
READ TABLE gt_info INTO gf_info INDEX sy-tabix.
*     販売伝票の登録日(伝票日付) = 変更履歴の最終の変更日付の場合
IF gf_info-audat = gf_info-udate.
*       変更伝票区分をクリア
CLEAR gf_info-chang.
MODIFY gt_info FROM gf_info TRANSPORTING chang
WHERE vbeln = gf_info-vbeln.
ENDIF.
ENDAT.
ENDLOOP.

* 販売情報内部テーブルの1行目を読込
READ TABLE gt_info INTO gf_info INDEX 1.
*2013/11/11 Add End

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
* ADD 2010/05/11 --->
PERFORM frm_set_kobai .
IF NOT gt_write[] IS INITIAL .
*--- 帳票出力処理
PERFORM frm_write_data.
STOP .
ENDIF .
* ADD 2010/05/11 <---
MESSAGE s600(z1) WITH text-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbak
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_INFO_TODAY
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_TODAY
*&---------------------------------------------------------------------*
*       当日受発注一覧表用内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_data_today.
*--- 販売伝票情報設定
PERFORM frm_info_today.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM get_data.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT gt_info INTO gf_info.
*--- 共通項目設定
PERFORM frm_data_set.
*--- 販売伝票取引先情報取得
PERFORM frm_vbpa_get1.
*--- 得意先名設定
IF sy-subrc = 0.
PERFORM frm_kunnr_get USING    gf_vbpa-adrnr
CHANGING gf_write-kunnr
gf_write-kname.
ENDIF.
*---MODIFY START PSD T.SAITOH 2002/08/16 ---------------------------*
*--- 販売明細情報取得
*    PERFORM FRM_VBAP_GET1.
PERFORM frm_vbap_get1_abgru. "拒否理由追加読込
*---MODIFY END   PSD T.SAITOH 2002/08/16 ---------------------------*
CHECK g_flg_exit <> cns_x.
*--- 販売明細情報設定
PERFORM frm_vbap_set.
*--- 出荷指示備考設定
PERFORM frm_read_text USING    gf_vbap-vbeln
gf_vbap-posnr
CHANGING gf_write-etc.
*--- 販売伝票納入日程行情報取得
PERFORM frm_vbep_get1.
* APPEND PSD K.ARAI 2002/05/28
IF NOT ( gf_info-vbtyp = cns_k
OR  gf_info-vbtyp = cns_l ).
* APPEND END
CHECK g_flg_exit <> cns_x.
* APPEND PSD K.ARAI 2002/05/28
ENDIF.
* APPEND END
*--- 購買伝票明細情報取得
* 2002/01/10 PSD H.Tanaka MOD ↓
IF gf_vbep-banfn <> space AND
gf_vbep-bnfpo <> 0.
PERFORM frm_ekpo_get.
* 2002/01/30 PSD H.Tanaka ADD ↓
*--- 仕入先名設定
PERFORM frm_lfa1_get.
ENDIF.
* 2002/01/10 PSD H.Tanaka MOD ↑
* 2002/01/30 PSD H.Tanaka DEL ↓
*--- 仕入先名設定
*    PERFORM FRM_LFA1_GET.
* 2002/01/16 PSD H.Tanaka ADD ↓
*--- 数量変換処理
PERFORM frm_suryo_henkan.
* 2002/01/16 PSD H.Tanaka ADD ↑
*--- 計算処理
PERFORM frm_keisan_today.
* APPEND PSD K.ARAI 2002/05/28
* クレメモ・デビメモは入庫数に目標数量を設定する
IF  ( gf_info-vbtyp = cns_k
OR  gf_info-vbtyp = cns_l ).
PERFORM frm_get_zmeng CHANGING gf_write-kwmeng.
ENDIF.
* APPEN END

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM frm_set_bstkd_from_vbkd.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*---APPEND START D.YI 2007/11/05 ---------------------------*
* 販売価格を設定
PERFORM frm_set_kbetr1.
* 購買価格を設定
PERFORM frm_set_kbetr2 USING gf_ekpo-lifnr
gf_write-matnr
gf_vbap-werks
gf_write-audat
*---ADD BY DMC 2008/05/07 BEGIN
cns_koubayi.
*---ADD BY DMC 2008/05/07 END
* 消費税金額を設定
PERFORM frm_set_mwsbp.
*---APPEND END   D.YI 2007/11/05 ---------------------------*

*   insert 2011/11/16 C.MARUTA DMW3580{
* 輸送手段等テキスト取得処理
PERFORM FRM_READ_TEXT_YUSOUTOU USING GF_VBAP-VBELN
GF_VBAP-POSNR
CHANGING GF_WRITE-YUSOUTOU.
* } insert 2011/11/16 C.MARUTA DMW3580

*2013/11/11 Add Start
*   購買伝票番号の設定
IF gf_info-ebelu IS INITIAL.       "変更履歴->受注と発注が紐づき
gf_info-ebelu = gf_write-ebeln.  "登録日付->受注と発注が紐づき
ENDIF.

*   購買伝票番号の設定ありの場合
IF NOT gf_info-ebelu IS INITIAL.
*     購買伝票の取引先[EKPA,LFA1,ADRC]取得
CLEAR gt_adrc.
SELECT ekpa~ebeln ekpa~parvw ekpa~lifn2
adrc~name1
INTO TABLE gt_adrc
FROM ekpa INNER JOIN lfa1
ON ekpa~lifn2 = lfa1~lifnr
INNER JOIN adrc
ON lfa1~adrnr = adrc~addrnumber
WHERE ekpa~ebeln = gf_info-ebelu. "購買伝票番号

*     購買伝票の取引先
CLEAR gf_adrc.
READ TABLE gt_adrc INTO gf_adrc
WITH KEY ebeln = gf_info-ebelu
parvw = cns_ba.
gf_write-lifnr_ba = gf_adrc-lifn2. "発注_手配先
gf_write-name1_ba = gf_adrc-name1. "発注_手配先名称
CLEAR gf_adrc.
READ TABLE gt_adrc INTO gf_adrc
WITH KEY ebeln = gf_info-ebelu
parvw = cns_lf.
gf_write-lifnr_lf = gf_adrc-lifn2. "発注_仕入先
gf_write-name1_lf = gf_adrc-name1. "発注_仕入先名称
CLEAR gf_adrc.
READ TABLE gt_adrc INTO gf_adrc
WITH KEY ebeln = gf_info-ebelu
parvw = cns_rs.
gf_write-lifnr_rs = gf_adrc-lifn2. "発注_請求書発行者
gf_write-name1_rs = gf_adrc-name1. "発注_請求書発行者名称
CLEAR gf_adrc.
READ TABLE gt_adrc INTO gf_adrc
WITH KEY ebeln = gf_info-ebelu
parvw = cns_y1.
gf_write-lifnr_y1 = gf_adrc-lifn2. "発注_支払先
gf_write-name1_y1 = gf_adrc-name1. "発注_支払先名称
ENDIF.

gf_write-changkbn = gf_info-chang. "変更伝票区分
gf_write-username = gf_info-upnam. "変更ユーザID
*2013/11/11 Add End
*2013/12/11 Add Start 2.支払条件
select single ZTERM
from  vbkd
into  gf_write-ZTERM
where VBELN = gf_info-VBELN
and   POSNR = '000010'.
*2013/12/11 Add End
*--- 更新処理
APPEND gf_write TO gt_write.
ENDLOOP.
*---APPEND START D.YI 2007/11/05 ---------------------------*
* 在庫発注を設定
PERFORM frm_set_kobai.
*---APPEND END   D.YI 2007/11/05 ---------------------------*

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: gt_vbap,gt_vbep,gt_vbep2,gt_ekpo,
gt_vbpa,gt_sadr,gt_lfa1,gt_vbkd.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: gt_vbpa3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_TODAY
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_NAIJI
*&---------------------------------------------------------------------*
*       内示一覧表用内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_data_naiji.
*--- 販売伝票情報設定
PERFORM frm_info_naiji.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM get_data.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT gt_info INTO gf_info.
*--- 共通項目設定
PERFORM frm_data_set.
*--- 販売伝票取引先情報設定
PERFORM frm_vbpa_get1.
*--- 得意先名設定
IF sy-subrc = 0.
PERFORM frm_kunnr_get USING    gf_vbpa-adrnr
CHANGING gf_write-kunnr
gf_write-kname.
ENDIF.
*--- 販売明細情報設定
PERFORM frm_vbap_get1.
CHECK g_flg_exit <> cns_x.
*--- 販売明細情報設定
PERFORM frm_vbap_set.
*--- 出荷指示備考設定
PERFORM frm_read_text USING    gf_vbap-vbeln
gf_vbap-posnr
CHANGING gf_write-etc.
*--- 販売伝票納入日程行情報設定
PERFORM frm_vbep_get2.
* APPEND PSD K.ARAI 2002/05/28
IF NOT ( gf_info-vbtyp = cns_k
OR  gf_info-vbtyp = cns_l ).
* APPEND END
CHECK g_flg_exit <> cns_x.
* APPEND PSD K.ARAI 2002/05/28
ENDIF.
* APPEND END

*--- 販売伝票明細情報取得
* 2002/01/10 PSD H.Tanaka MOD ↓
*    PERFORM FRM_EKPO_GET.
IF gf_vbep-banfn <> space AND
gf_vbep-bnfpo <> 0.
PERFORM frm_ekpo_get.
ENDIF.
* 2002/01/10 PSD H.Tanaka MOD ↑
* 2002/01/16 PSD H.Tanaka ADD ↓
*--- 数量変換処理
PERFORM frm_suryo_henkan.
* 2002/01/16 PSD H.Tanaka ADD ↑
*--- 計算処理
PERFORM frm_keisan_naiji.
* APPEND PSD K.ARAI 2002/05/28
* クレメモ・デビメモは入庫数に目標数量を設定する
IF  ( gf_info-vbtyp = cns_k
OR  gf_info-vbtyp = cns_l ).
PERFORM frm_get_zmeng CHANGING gf_write-kwmeng.
ENDIF.
* APPEN END

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM frm_set_bstkd_from_vbkd.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*--- 更新処理
APPEND gf_write TO gt_write.
ENDLOOP.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: gt_vbap,gt_vbep,gt_vbep2,gt_ekpo,
gt_vbpa,gt_sadr,gt_vbkd.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: gt_vbpa3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_NAIJI
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_MIHIKI
*&---------------------------------------------------------------------*
*       未引当一覧表内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_data_mihiki.
*--- 販売伝票情報設定
PERFORM frm_info_mihiki.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM get_data.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT gt_info INTO gf_info.
*--- 共通項目設定
PERFORM frm_data_set.
*--- 販売伝票取引先情報取得
PERFORM frm_vbpa_get1.
*--- 得意先名設定
IF sy-subrc = 0.
PERFORM frm_kunnr_get USING    gf_vbpa-adrnr
CHANGING gf_write-kunnr
gf_write-kname.
ENDIF.
*--- 販売明細情報取得
PERFORM frm_vbap_get1.
CHECK g_flg_exit <> cns_x.
IF gf_vbap-kwmeng = gf_vbap-kbmeng.
CONTINUE.
ENDIF.

*--- 販売明細情報設定
PERFORM frm_vbap_set.
*--- 出荷指示備考設定
PERFORM frm_read_text USING    gf_vbap-vbeln
gf_vbap-posnr
CHANGING gf_write-etc.
*--- 販売伝票納入日程行情報設定
PERFORM frm_vbep_get2.
CHECK g_flg_exit <> cns_x.
* 2002/01/16 PSD H.Tanaka ADD ↓
*--- 数量変換処理
PERFORM frm_suryo_henkan.
* 2002/01/16 PSD H.Tanaka ADD ↑
*--- 計算処理
PERFORM frm_keisan_naiji.
*--- 未引当数設定
gf_write-mhnum = gf_write-kwmeng - gf_vbap-kbmeng.

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM frm_set_bstkd_from_vbkd.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*--- 更新処理
APPEND gf_write TO gt_write.
ENDLOOP.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: gt_vbap,gt_vbep,gt_vbep2,gt_ekpo,
gt_vbpa,gt_sadr,gt_vbkd.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: gt_vbpa3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_MIHIKI
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_BLOCK
*&---------------------------------------------------------------------*
*       出荷ブロックリスト用内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_data_block.
*--- 販売伝票情報設定
PERFORM frm_info_block.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM get_data.
PERFORM get_data2.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT gt_info INTO gf_info.
*--- 共通項目設定
PERFORM frm_data_set.
*--- 販売伝票取引先情報設定
PERFORM frm_vbpa_get1.
*--- 得意先名設定
IF sy-subrc = 0.
PERFORM frm_kunnr_get USING    gf_vbpa-adrnr
CHANGING gf_write-kunnr
gf_write-kname.
ENDIF.
*--- 販売明細情報設定
PERFORM frm_vbap_get2.
CHECK g_flg_exit <> cns_x.
*--- 販売明細情報設定
PERFORM frm_vbap_set.
*--- 出荷指示備考設定
PERFORM frm_read_text USING    gf_vbap-vbeln
gf_vbap-posnr
CHANGING gf_write-etc.
IF r_pernr = cns_x.    " 営業員コードボタン押下時
*--- 営業員名取得用販売伝票取引先情報設定
PERFORM frm_vbpa_get2.
ENDIF.
CHECK g_flg_exit <> cns_x.
*--- 出荷ポイント名設定
PERFORM frm_tvstt_get.
*--- 品目保管場所情報設定
PERFORM frm_mard_get.
*--- 販売伝票納入日程行情報設定
PERFORM frm_vbep_get3.
CHECK g_flg_exit <> cns_x.
*--- 購買伝票明細情報取得
* 2002/01/11 PSD H.Tanaka MOD ↓
*    PERFORM FRM_EKPO_GET.
IF gf_vbep-banfn <> space AND
gf_vbep-bnfpo <> 0.
PERFORM frm_ekpo_get.
* 2002/01/30 PSD H.Tanaka ADD ↓
*--- 仕入先名設定
PERFORM frm_lfa1_get.
ENDIF.
* 2002/01/11 PSD H.Tanaka MOD ↑
* 2002/01/30 PSD H.Tanaka DEL ↓
*--- 仕入先名設定
*    PERFORM FRM_LFA1_GET.
*--- 販売伝票フロー情報取得
PERFORM frm_vbfa_get.
* 2002/01/16 PSD H.Tanaka ADD ↓
*--- 数量変換処理
PERFORM frm_suryo_henkan.
* 2002/01/16 PSD H.Tanaka ADD ↑
*--- 計算処理
PERFORM frm_keisan_block.

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM frm_set_bstkd_from_vbkd.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*--- 更新処理
APPEND gf_write TO gt_write.
ENDLOOP.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: gt_vbap,gt_vbep,gt_vbep2,gt_ekpo,gt_vbfa,
gt_vbpa,gt_vbpa2,gt_sadr,gt_lfa1,gt_vbkd,gt_tvstt,gt_mard.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: gt_vbpa3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_BLOCK
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_KANO
*&---------------------------------------------------------------------*
*       出荷可能リスト用内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_data_kano.
*--- 販売伝票情報設定
PERFORM frm_info_kano.
*--- 指定選択年月日処理
PERFORM frm_date_set.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM get_data.
PERFORM get_data2.
PERFORM get_data3.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT gt_info INTO gf_info.
*--- 共通項目設定
PERFORM frm_data_set.
*--- 販売伝票取引先情報設定
PERFORM frm_vbpa_get1.
*---APPEND START PSD T.SAITOH 2002/06/24 ---------------------------*
*   納入区域
gf_write-lzone = gf_vbpa-lzone.
*---APPEND END   PSD T.SAITOH 2002/06/24 ---------------------------*
*--- 得意先名設定
IF sy-subrc = 0.
PERFORM frm_kunnr_get USING    gf_vbpa-adrnr
CHANGING gf_write-kunnr
gf_write-kname.
ENDIF.

*---APPEND START PSD T.SAITOH 2002/09/20 ---------------------------*
*   納品書種別
PERFORM frm_read_text_knb1 USING gf_write-kunnr
CHANGING gf_write-zs01.
*---APPEND END   PSD T.SAITOH 2002/09/20 ---------------------------*

*--- 販売明細情報設定
PERFORM frm_vbap_get2.
CHECK g_flg_exit <> cns_x.

*---APPEND START PSD T.SAITOH 2002/07/29 ---------------------------*
* 明細カテゴリが TAB,ZTAB,ZTMB のとき受注在庫をチェックする
IF NOT ( gf_vbap-pstyv <> 'TAB'
AND   gf_vbap-pstyv <> 'ZTAB'
AND   gf_vbap-pstyv <> 'ZTMB' ).
*      受注在庫存在チェック
PERFORM frm_check_mska.
CHECK g_flg_exit <> cns_x."受注在庫が存在しない場合対象外
ENDIF.
*---APPEND END   PSD T.SAITOH 2002/07/29 ---------------------------*

*--- 販売明細情報設定
PERFORM frm_vbap_set.
*--- 出荷指示備考設定
PERFORM frm_read_text USING    gf_vbap-vbeln
gf_vbap-posnr
CHANGING gf_write-etc.
IF r_pernr = cns_x.    " 営業員コードボタン押下時
*--- 営業員名取得用販売伝票取引先情報設定
PERFORM frm_vbpa_get2.
ENDIF.
CHECK g_flg_exit <> cns_x.
*--- 出荷ポイント名設定
PERFORM frm_tvstt_get.
*--- 品目保管場所情報設定
PERFORM frm_mard_get.
*--- 販売伝票納入日程行情報設定
PERFORM frm_vbep_get4.
CHECK g_flg_exit <> cns_x.
*--- 購買伝票明細情報取得
* 2002/01/11 PSD H.Tanaka MOD ↓
*    PERFORM FRM_EKPO_GET.
IF gf_vbep-banfn <> space AND
gf_vbep-bnfpo <> 0.
PERFORM frm_ekpo_get.
* 2002/01/30 PSD H.Tanaka ADD ↓
*--- 仕入先名設定
PERFORM frm_lfa1_get.
ENDIF.
* 2002/01/11 PSD H.Tanaka MOD ↑
*--- 販売伝票フロー情報取得
PERFORM frm_vbfa_get.
* 2002/01/16 PSD H.Tanaka ADD ↓
*--- 数量変換処理
PERFORM frm_suryo_henkan.
* 2002/01/16 PSD H.Tanaka ADD ↑
*--- 計算処理
PERFORM frm_keisan_block.

*---APPEND START PSD T.SAITOH 2002/08/05 ---------------------------*
* 出荷可能数を代入
* 明細カテゴリが TAB,ZTAB,ZTMB のとき受注在庫を設定する
IF NOT ( gf_vbap-pstyv <> 'TAB'
AND   gf_vbap-pstyv <> 'ZTAB'
AND   gf_vbap-pstyv <> 'ZTMB' ).

*---APPEND START DMC A.MASUDA 2004/09/29 ----------------------------*
READ TABLE gt_vbfa INTO gf_vbfa WITH KEY vbelv   = gf_vbap-vbeln
posnv   = gf_vbap-posnr
vbtyp_n = cns_j
BINARY SEARCH.
LOOP AT gt_vbfa INTO gf_vbfa FROM sy-tabix.
IF gf_vbfa-vbelv = gf_vbap-vbeln AND
gf_vbfa-posnv = gf_vbap-posnr AND
gf_vbfa-wbstk <> 'C'.
gw_kalab = gw_kalab + gf_vbfa-lfimg.
ENDIF.
ENDLOOP.
gf_write-numsc = g_kalab - gw_kalab.
CLEAR:
g_kalab,
gw_kalab.
*---APPEND START DMC A.MASUDA 2005/01/05 --------------------------*
PERFORM call_md_convert_material_unit USING gf_write-numsc
gf_write-numsj.
*---APPEND END   DMC A.MASUDA 2005/01/05 --------------------------*

*      GF_WRITE-NUMSC = G_KALAB.
*---APPEND START DMC A.MASUDA 2004/09/29 ----------------------------*

ENDIF.
*---APPEND END   PSD T.SAITOH 2002/08/05 ---------------------------*

*---APPEND START PSD T.SAITOH 2002/03/20 仕様変更：出荷可能数０を除外-*
IF gf_write-numsc = 0.
CONTINUE.
ENDIF.
*---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*

*---APPEND START PSD T.SAITOH 2002/06/21 ---------------------------*
*--- 得意先品目テキストの取得
PERFORM frm_ltx01.
*---APPEND END   PSD T.SAITOH 2002/06/21 ---------------------------*

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM frm_set_bstkd_from_vbkd.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
* 出荷先住所を設定
PERFORM frm_vbpa_get3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

*---APPEND START DMC  S.SHIGEMITU 2006/05/31 -----------------------*
* 輸送手段等テキスト取得処理
PERFORM frm_read_text_yusoutou USING gf_vbap-vbeln
gf_vbap-posnr
CHANGING gf_write-yusoutou.
*---APPEND END   DMC  S.SHIGEMITU 2006/05/31 -----------------------*

*--- 更新処理
APPEND gf_write TO gt_write.
ENDLOOP.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: gt_vbap,gt_vbep,gt_vbep2,gt_ekpo,gt_vbfa,gt_mska,
gt_vbpa,gt_vbpa2,gt_sadr,gt_lfa1,gt_vbkd,gt_tvstt,gt_mard.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: gt_vbpa3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_KANO
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_NAIJI
*&---------------------------------------------------------------------*
*       テーブル読込条件⑦
*       販売伝票情報取得処理（内示一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_info_naiji.
DATA: l_low  TYPE vbak-audat,
l_high TYPE vbak-audat.
CLEAR   gf_info.
REFRESH gt_info.

*--- 抽出年月編集
CONCATENATE pr_yymm-low  '01' INTO l_low.
IF pr_yymm-high IS INITIAL.
CONCATENATE pr_yymm-low  '31' INTO l_high.
ELSE.
CONCATENATE pr_yymm-high '31' INTO l_high.
ENDIF.
*--- 販売伝票情報取得
SELECT a~vbeln a~audat a~auart a~vkgrp a~vkbur
a~vdatu a~bstnk a~kunnr a~vbtyp a~ernam
c~posnr
* 2002/01/30 PSD H.Tanaka MOD ↓
*         D~BEZEI E~BEZEI F~BSTDK_E
d~bezei e~bezei f~bstdk_e f~kursk
INTO TABLE gt_info
FROM ( ( ( ( vbak AS a INNER JOIN vbuk AS b
ON         a~vbeln  = b~vbeln ) INNER JOIN vbup  AS c
ON         a~vbeln  = c~vbeln ) INNER JOIN tvkbt AS d
ON         a~vkbur  = d~vkbur ) INNER JOIN tvgrt AS e
ON         a~vkgrp  = e~vkgrp ) INNER JOIN vbkd  AS f
ON         c~vbeln  = f~vbeln
WHERE       ( a~audat >= l_low
AND         a~audat =< l_high )
AND         a~vkbur IN pr_vkbur
AND         a~vkgrp IN pr_vkgrp
AND         a~bstnk LIKE '仮%'
AND ( NOT ( a~auart =  cns_ka
AND         a~vbtyp =  cns_c )
AND   NOT ( a~auart =  cns_kb
AND         a~vbtyp =  cns_c ) )
AND         d~spras =  cns_j
AND         e~spras =  cns_j
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
AND         a~vkorg = pr_vkorg
AND         a~vtweg = pr_vtweg
AND         a~spart = pr_spart
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
AND         f~posnr =  '000000'.

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE s600(z1) WITH text-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbak
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_INFO_NAIJI
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_MIHIKI
*&---------------------------------------------------------------------*
*       テーブル読込条件⑨
*       販売伝票情報取得処理（未引当一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_info_mihiki.
CLEAR   gf_info.
REFRESH gt_info.

*--- 販売伝票情報取得
SELECT a~vbeln a~audat a~auart a~vkgrp a~vkbur
a~vdatu a~bstnk a~kunnr a~vbtyp a~ernam
c~posnr
* 2002/01/30 PSD H.Tanaka MOD ↓
*         D~BEZEI E~BEZEI F~BSTDK_E
d~bezei e~bezei f~bstdk_e f~kursk
INTO TABLE gt_info
FROM ( ( ( ( vbak AS a INNER JOIN vbuk AS b
ON         a~vbeln  = b~vbeln ) INNER JOIN vbup  AS c
ON         a~vbeln  = c~vbeln ) INNER JOIN tvkbt AS d
ON         a~vkbur  = d~vkbur ) INNER JOIN tvgrt AS e
ON         a~vkgrp  = e~vkgrp ) INNER JOIN vbkd  AS f
ON         c~vbeln  = f~vbeln
WHERE     a~vkbur IN pr_vkbur
AND     a~vkgrp IN pr_vkgrp
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
AND         a~vkorg = pr_vkorg
AND         a~vtweg = pr_vtweg
AND         a~spart = pr_spart
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
* 2002/01/16 PSD H.Tanaka MOD ↓
*     AND (   A~VBTYP =  CNS_I
*      OR   ( A~VBTYP =  CNS_C
*     AND     A~AUART <> CNS_KA ) )
AND ( ( a~vbtyp =  cns_i )
OR   ( a~vbtyp =  cns_c
AND     a~auart <> cns_ka )
OR   ( a~auart =  cns_kr
AND     a~vbtyp =  cns_h ) )
* 2002/01/16 PSD H.Tanaka MOD ↑
AND     b~abstk <> cns_c
AND     b~bestk =  cns_a
AND     c~besta =  cns_a
AND     d~spras =  cns_j
AND     e~spras =  cns_j
AND     f~posnr =  '000000'.

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE s600(z1) WITH text-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbak
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_INFO_MIHIKI
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_BLOCK
*&---------------------------------------------------------------------*
*       テーブル読込条件⑩
*       販売伝票情報取得処理（出荷ブロックリスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_info_block.
CLEAR   gf_info.
REFRESH gt_info.

*--- 販売伝票情報取得
SELECT a~vbeln a~audat a~auart a~vkgrp a~vkbur
a~vdatu a~bstnk a~kunnr a~vbtyp a~ernam
c~posnr
* 2002/01/30 PSD H.Tanaka MOD ↓
*         D~BEZEI E~BEZEI F~BSTDK_E
d~bezei e~bezei f~bstdk_e f~kursk
INTO TABLE gt_info
FROM ( ( ( ( vbak AS a INNER JOIN vbuk AS b
ON         a~vbeln  = b~vbeln ) INNER JOIN vbup  AS c
ON         a~vbeln  = c~vbeln ) INNER JOIN tvkbt AS d
ON         a~vkbur  = d~vkbur ) INNER JOIN tvgrt AS e
ON         a~vkgrp  = e~vkgrp ) INNER JOIN vbkd  AS f
ON         c~vbeln  = f~vbeln
* 2002/01/21 PSD H.Tanaka MOD ↓
*   WHERE     A~VKBUR IN PR_VKBUR
*     AND     A~VKGRP IN PR_VKGRP
WHERE     a~vkgrp IN pr_vkgrp
AND     a~kunnr IN pr_kunnr
* 2002/01/16 PSD H.Tanaka MOD ↓
*     AND (   A~VBTYP =  CNS_I
*      OR   ( A~VBTYP =  CNS_C
*     AND     A~AUART <> CNS_KA ) )
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
AND         a~vkorg = pr_vkorg
AND         a~vtweg = pr_vtweg
AND         a~spart = pr_spart
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
AND ( ( a~vbtyp =  cns_i )
OR   ( a~vbtyp =  cns_c
AND     a~auart <> cns_ka )
OR   ( a~auart =  cns_kr
AND     a~vbtyp =  cns_h ) )
* 2002/01/16 PSD H.Tanaka MOD ↑
AND     b~abstk <> cns_c
AND     c~lssta <> space
AND     d~spras =  cns_j
AND     e~spras =  cns_j
AND     f~posnr =  '000000'.

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE s600(z1) WITH text-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbak
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_INFO_BLOCK
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_KANO
*&---------------------------------------------------------------------*
*       テーブル読込条件⑮
*       販売伝票情報取得処理（出荷可能リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_info_kano.
CLEAR   gf_info.
REFRESH:gt_info,r_vkbur.
CLEAR:r_vkbur.
***2003.05.27 >>>
LOOP AT pr_werks.
MOVE-CORRESPONDING pr_werks TO r_vkbur.
IF pr_werks-low <> space.
r_vkbur-low = '0000'.
r_vkbur-low+0(3) = pr_werks-low+1(3).
ENDIF.
IF pr_werks-high <> space.
r_vkbur-high = '0000'.
r_vkbur-high+0(3) = pr_werks-high+1(3).
ENDIF.
APPEND r_vkbur.
CLEAR:r_vkbur.
ENDLOOP.
***2003.05.27 <<<
*--- 販売伝票情報取得
SELECT a~vbeln a~audat a~auart a~vkgrp a~vkbur
a~vdatu a~bstnk a~kunnr a~vbtyp a~ernam
c~posnr
d~bezei e~bezei f~bstdk_e f~kursk
INTO TABLE gt_info
FROM ( ( ( ( vbak AS a INNER JOIN vbuk AS b
ON         a~vbeln  = b~vbeln ) INNER JOIN vbup  AS c
ON         a~vbeln  = c~vbeln ) INNER JOIN tvkbt AS d
ON         a~vkbur  = d~vkbur ) INNER JOIN tvgrt AS e
ON         a~vkgrp  = e~vkgrp ) INNER JOIN vbkd  AS f
ON         c~vbeln  = f~vbeln
WHERE     a~vkgrp IN pr_vkgrp
AND     a~kunnr IN pr_kunnr
AND     a~vkbur IN r_vkbur  "2003.05.27 ADD
AND     a~vkorg = pr_vkorg
AND     a~vtweg = pr_vtweg
AND     a~spart = pr_spart
AND ( ( a~vbtyp =  cns_i )
OR   ( a~vbtyp =  cns_c AND a~auart <> cns_ka )
OR   ( a~auart =  cns_kr AND a~vbtyp =  cns_h ) )
AND     b~lfstk <> cns_c
AND     b~abstk <> cns_c
AND     c~lfgsa <> cns_c
AND     c~absta <> cns_c
AND     c~gbsta <> cns_c
AND     d~spras =  cns_j
AND     e~spras =  cns_j
AND     f~posnr =  '000000'.

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE s600(z1) WITH text-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbak
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_INFO_KANO
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET1
*&---------------------------------------------------------------------*
*       テーブル読込条件②
*       販売伝票取引先構造取得処理（当日受発注一覧表
*                                   内示一覧表、未引当リスト）
* 2002/08/16 PSD T.SATIOH 当日受発注一覧表のみ読込条件を変更するため
*                         現サブルーチンは対象外とする
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbap_get1.
CLEAR   gf_vbap.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR MATNR ARKTX  PSTYV
*                KDMAT NETWR WAERK KWMENG KBMENG
** 2002/02/05 PSD H.Tanaka MOD ↓
**                VSTEL NETPR WAVWR
*                VRKME VSTEL NETPR KPEIN WAVWR
** 2002/01/30 PSD H.Tanaka DEL ↓
**                STCUR
*                WERKS
*                LGORT
*    INTO GF_VBAP
*    FROM VBAP
*   WHERE VBELN = GF_INFO-VBELN
*     AND POSNR = GF_INFO-POSNR.
READ TABLE gt_vbap INTO gf_vbap
WITH TABLE KEY vbeln = gf_info-vbeln
posnr = gf_info-posnr.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
g_flg_exit = cns_x.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbap
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBAP_GET1
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET1_ABGRU
*&---------------------------------------------------------------------*
*       テーブル読込条件②-α
*       販売伝票取引先構造取得処理（当日受発注一覧表）
*       拒否理由追加・・・2002/08/16 PSD T.SAITOH
*----------------------------------------------------------------------*
FORM frm_vbap_get1_abgru.
CLEAR   gf_vbap.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR MATNR ARKTX  PSTYV
*                KDMAT NETWR WAERK KWMENG KBMENG
*                VRKME VSTEL NETPR KPEIN WAVWR
*                WERKS
*                LGORT
*                ABGRU
*    INTO GF_VBAP
*    FROM VBAP
*   WHERE VBELN = GF_INFO-VBELN
*     AND POSNR = GF_INFO-POSNR.
READ TABLE gt_vbap INTO gf_vbap
WITH TABLE KEY vbeln = gf_info-vbeln
posnr = gf_info-posnr.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
g_flg_exit = cns_x.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbap
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBAP_GET1_ABGRU

*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET1
*&---------------------------------------------------------------------*
*       テーブル読込条件⑥
*       得意先名取得用販売伝票取引先構造取得処理（全帳票対象）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbpa_get1.
CLEAR gf_vbpa.

*--- 販売伝票情報取得
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE VBELN POSNR PARVW PERNR ADRNR LZONE
*    INTO GF_VBPA
*    FROM VBPA
*   WHERE VBELN = GF_INFO-VBELN
** 2002/01/11 PSD H.Tanaka MOD ↓
**     AND POSNR = GF_INFO-POSNR
*     AND POSNR = '000000'
** 2002/01/11 PSD H.Tanaka MOD ↑
*     AND PARVW = CNS_AG.
READ TABLE gt_vbpa INTO gf_vbpa
WITH TABLE KEY vbeln = gf_info-vbeln
posnr = '000000'
parvw = cns_ag.
IF sy-subrc <> 0.
SELECT SINGLE vbeln posnr parvw pernr adrnr lzone
INTO gf_vbpa
FROM vbpa
WHERE vbeln = gf_info-vbeln
AND posnr = '000000'
AND parvw = cns_ag.
IF sy-subrc = 0.
INSERT gf_vbpa INTO TABLE gt_vbpa.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-038.
*      STOP.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbpa
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBPA_GET1
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET1
*&---------------------------------------------------------------------*
*       テーブル読込条件③
*       販売伝票納入日程行情報取得処理（当日受発注一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbep_get1.
CLEAR gf_vbep.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR ETENR EDATU
*                ETTYP LIFSP BANFN BNFPO
*    INTO CORRESPONDING FIELDS OF GF_VBEP
*    FROM VBEP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR
**-DELETE START PSD.SAITOH 20010109 --------------------*
**     AND BANFN <> ''
**-DELETE END PSD.SAITOH 20010109   --------------------*
*     .
READ TABLE gt_vbep INTO gf_vbep
WITH KEY vbeln = gf_info-vbeln
posnr = gf_info-posnr
BINARY SEARCH.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
gf_write-edatu = gf_vbep-edatu.
gf_write-lifsp = gf_vbep-lifsp.
WHEN 4.         " 対象データなし
g_flg_exit = cns_x.
*      MESSAGE S600(Z1) WITH TEXT-036.
*      STOP.
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBEP
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_VBEP_GET1
*&---------------------------------------------------------------------*
*&      Form  FRM_EKPO_GET
*&---------------------------------------------------------------------*
*       テーブル読込条件④
*       購買伝票明細情報取得処理（当日受発注一覧表、出荷ブロックリスト、
*                                 出荷可能リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_ekpo_get.
CLEAR   gf_ekpo.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 購買伝票情報取得
*  SELECT SINGLE A~EBELN A~EBELP A~NETPR
*         A~MENGE
** 2002/01/30 PSD H.Tanaka MOD ↓
*         B~WAERS B~WKURS B~LLIEF
*         B~WAERS B~WKURS B~LIFNR
*         C~WEMNG C~EINDT
**---APPEND START PSD T.SAITOH 2002/08/06 ---------------------------*
**   価格単位考慮
*         A~PEINH "価格単位
**---APPEND END   PSD T.SAITOH 2002/08/06 ---------------------------*
**---MODIFY START PSD T.SAITOH 2002/08/06 ---------------------------*
*    INTO (GF_EKPO-EBELN,
*          GF_EKPO-EBELP,
*          GF_EKPO-ENETPR,
*          GF_EKPO-MENGE,
*          GF_EKPO-WAERS,
*          GF_EKPO-WKURS,
*          GF_EKPO-LIFNR,
*          GF_EKPO-WEMNG,
*          GF_EKPO-EINDT,
*          GF_EKPO-PEINH )
**---MODIFY END   PSD T.SAITOH 2002/08/06 ---------------------------*
*    FROM ( EKPO AS A INNER JOIN EKKO AS B
*      ON   A~EBELN  = B~EBELN ) INNER JOIN EKET  AS C
*      ON   A~EBELN  = C~EBELN
*     AND   A~EBELP  = C~EBELP
*   WHERE   A~LOEKZ = ''
*     AND   C~ETENR = CNS_0001
*     AND   C~BANFN = GF_VBEP-BANFN
*     AND   C~BNFPO = GF_VBEP-BNFPO.
READ TABLE gt_ekpo INTO gf_ekpo
WITH KEY banfn = gf_vbep-banfn
bnfpo = gf_vbep-bnfpo
BINARY SEARCH.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
MOVE-CORRESPONDING gf_ekpo TO gf_write.
WHEN 4.         " 対象データなし
*-DELETE START PSD.SAITOH 20010109 --------------------*
*      MESSAGE S600(Z1) WITH TEXT-041.
*      STOP.
*-DELETE END PSD.SAITOH 20010109   --------------------*

WHEN OTHERS.    " システムエラー
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_EKPO
*                            SY-SUBRC.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_EKPO_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET2
*&---------------------------------------------------------------------*
*       テーブル読込条件⑭
*       販売伝票取引先構造取得処理（出荷ブロックリスト・出荷可能リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbap_get2.
CLEAR   gf_vbap.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR MATNR ARKTX  PSTYV
*                KDMAT NETWR WAERK KWMENG KBMENG
** 2002/02/06 PSD H.Tanaka MOD ↓
**                VSTEL NETPR WAVWR
**                VSTEL NETPR KPEIN WAVWR
*                VRKME VSTEL NETPR KPEIN WAVWR
** 2002/01/30 PSD H.Tanaka DEL ↓
**                STCUR
*                WERKS
*                LGORT
*    INTO GF_VBAP
*    FROM VBAP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR
*     AND VSTEL IN PR_WERKS.
READ TABLE gt_vbap INTO gf_vbap
WITH TABLE KEY vbeln = gf_info-vbeln
posnr = gf_info-posnr.
IF sy-subrc = 0.
IF gf_vbap-vstel IN pr_werks.
ELSE.
CLEAR gf_vbap.
sy-subrc = 4.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
g_flg_exit = cns_x.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbap
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBAP_GET2
*&---------------------------------------------------------------------*
*&      Form  FRM_KUNNR_GET
*&---------------------------------------------------------------------*
*       得意先名取得処理
*----------------------------------------------------------------------*
*      -->P_ADRNR  住所
*      <--P_KUNNR  得意先
*      <--P_NAME2  得意先名
*----------------------------------------------------------------------*
FORM frm_kunnr_get USING    p_adrnr
CHANGING p_kunnr
p_name2.
DATA l_addr1_sel TYPE addr1_sel.
DATA l_sadr      TYPE sadr.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  L_ADDR1_SEL-ADDRNUMBER = P_ADRNR.
**--- 汎用モジュール『ADDR_GET』
*  CALL FUNCTION 'ADDR_GET'
*       EXPORTING
*            ADDRESS_SELECTION = L_ADDR1_SEL
*       IMPORTING
*            SADR              = L_SADR
*       EXCEPTIONS
*            PARAMETER_ERROR   = 1
*            ADDRESS_NOT_EXIST = 2
*            VERSION_NOT_EXIST = 3
*            INTERNAL_ERROR    = 4
*            OTHERS            = 5.
l_addr1_sel-addrnumber = p_adrnr.
READ TABLE gt_sadr INTO l_sadr
WITH TABLE KEY adrnr = l_addr1_sel-addrnumber.
IF sy-subrc <> 0.
*--- 汎用モジュール『ADDR_GET』
CALL FUNCTION 'ADDR_GET'
EXPORTING
address_selection = l_addr1_sel
IMPORTING
sadr              = l_sadr
EXCEPTIONS
parameter_error   = 1
address_not_exist = 2
version_not_exist = 3
internal_error    = 4
OTHERS            = 5.
IF sy-subrc = 0.
INSERT l_sadr INTO TABLE gt_sadr.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
IF sy-subrc <> 0.
p_kunnr = ''.
ELSE.
p_name2 = l_sadr-name1.
ENDIF.

ENDFORM.                    " FRM_KUNNR_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_SET
*&---------------------------------------------------------------------*
*       販売明細情報設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbap_set.
*--- 共通項目設定
MOVE-CORRESPONDING gf_vbap TO gf_write.

*--- 区の設定
CASE gf_vbap-pstyv.
WHEN cns_zseo.
gf_write-ku = text-039.
WHEN cns_zsek.
gf_write-ku = text-040.
WHEN OTHERS.
ENDCASE.

*--- 在（在庫品）の設定
CLEAR gf_write-zai.
IF   gf_vbap-pstyv = cns_ztan  "標準明細子会社
OR gf_vbap-pstyv = cns_tan   "標準明細
OR gf_vbap-pstyv = cns_zsek  "セット品子明細
OR gf_vbap-pstyv = cns_ztmp. "添付資料必須
gf_write-zai = cns_*.
ENDIF.
*---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*

ENDFORM.                    " FRM_VBAP_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT
*&---------------------------------------------------------------------*
*       出荷指示備考取得処理
*----------------------------------------------------------------------*
*      -->P_VBELN   販売伝票
*      -->P_POSNR   販売伝票明細
*      <--P_TDLINE  出荷指示備考
*----------------------------------------------------------------------*
FORM frm_read_text USING    p_vbeln
p_posnr
CHANGING p_tdline.
DATA: lt_tline    TYPE TABLE OF tline,
lf_tline    TYPE tline,
l_vbeln     LIKE thead-tdname.

CONCATENATE p_vbeln
p_posnr
INTO l_vbeln.

*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
id        = '9001'
language  = 'J'
name      = l_vbeln
object    = 'VBBP'
TABLES
lines     = lt_tline
EXCEPTIONS
not_found = 4
*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
reference_check = 5
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*
OTHERS    = 8.
CASE sy-subrc.
WHEN 0.
READ TABLE lt_tline INTO lf_tline INDEX 1.
*--- 2002.05.02 MODIFY PSD K.Arai
*出荷指示備考の先頭'*'削除
p_tdline = lf_tline-tdline+0(40).
*     P_TDLINE = LF_TLINE+0(40).
*---MODIFY END
WHEN 8.
MESSAGE e001(z1) WITH text-024
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_READ_TEXT
*&---------------------------------------------------------------------*
*&      Form  FRM_KEISAN_TODAY
*&---------------------------------------------------------------------*
*       計算処理（当日受発注一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_keisan_today.
*--- 受注単価の変換
* 2002/01/23 PSD H.Tanaka ADD ↓
PERFORM frm_kingaku_henkan USING    gf_write-waerk
*                                      GF_WRITE-VNETPR
gf_vbap-vnetpr
*                             CHANGING GF_WRITE-JTNKYEN.
CHANGING g_netpr.

*--- 受注金額（円建て）計算
PERFORM frm_jyukin_set.

* 2002/01/23 PSD H.Tanaka ADD ↓
*--- 発注単価（円建て）計算
PERFORM frm_hatsutan_set.

*--- 発注金額（円建て）計算
PERFORM frm_hatsukin_set.
* MOD 2004/01/07 当月受注一覧の原価表示対応 START
*--- 原価（円建て）計算
IF  ( gf_vbap-pstyv = cns_tab        "個別購買発注
OR gf_vbap-pstyv = cns_ztab       "個別購買発注（子）
OR gf_vbap-pstyv = cns_ztmb ).    "添付資料個別
* 個別購買
PERFORM frm_genka_set_kobetsu.
ELSEIF ( gf_vbap-pstyv = cns_ztan    "標準明細子会社
OR gf_vbap-pstyv = cns_tan     "標準明細
OR gf_vbap-pstyv = cns_zsek    "セット品子明細
OR gf_vbap-pstyv = cns_ztmp ). "添付資料必須
* 在庫
PERFORM frm_genka_set_zaiko.
ELSE.
* その他 上記条件以外は過去のまま
PERFORM frm_genka_set.
ENDIF.
* MOD 2004/01/07 当月受注一覧の原価表示対応 END
* 2002/01/22 PSD H.Tanaka DEL ↓
*--- 原価金額（円建て）計算
*  PERFORM FRM_GENKIN_SET.

*--- 粗利金額（円建て）計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*  GF_WRITE-ARAEYN = GF_WRITE-NETWR - GF_WRITE-GYEN2.
PERFORM frm_arakin_set.

*--- 粗利率計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*    GF_WRITE-ARAPER = GF_WRITE-ARAEYN / G_NUMGF.
PERFORM frm_araritsu_set.

* 2002/01/23 PSD H.Tanaka DEL ↓
*--- 発注単価（円建て）計算
*  PERFORM FRM_HATSUTAN_SET.

*--- 受注単価（円建て）計算
PERFORM frm_jyutan_set.

ENDFORM.                    " FRM_KEISAN_TODAY
*&---------------------------------------------------------------------*
*&      Form  FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*       金額変換処理
*----------------------------------------------------------------------*
*      -->P_TSUKACD  通貨コード
*      -->P_KINGAKU  変換前金額
*      <--P_HENKAN   変換後金額
*----------------------------------------------------------------------*
FORM frm_kingaku_henkan USING    p_tsukacd
p_kingaku
CHANGING p_henkan.
DATA l_idoc_amount(255) TYPE c.
*--- 汎用モジュール金額変換モジュール
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
EXPORTING
currency    = p_tsukacd
sap_amount  = p_kingaku
IMPORTING
idoc_amount = l_idoc_amount
EXCEPTIONS
OTHERS      = 1.
IF sy-subrc <> 1.
p_henkan = l_idoc_amount.
ENDIF.

ENDFORM.                    " FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*&      Form  FRM_JYUKIN_SET
*&---------------------------------------------------------------------*
*       受注金額（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_jyukin_set.
DATA l_netwr TYPE zslist_v01-kbmeng.
* 2002/02/01 PSD H.Tanaka ADD ↓
*--- 受注単価計算
gf_write-vnetpr = g_netpr / gf_vbap-kpein.

*--- 受注金額（円建て）計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*  PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
*                                      GF_WRITE-NETWR
*                             CHANGING G_NUMGF.
*  GF_WRITE-NUMGF = G_NUMGF * GF_WRITE-STCUR.
PERFORM frm_kingaku_henkan USING    gf_write-waerk
gf_vbap-netwr
*                             CHANGING GF_WRITE-NETWR.
CHANGING l_netwr.
*  GF_WRITE-NETWR = GF_VBAP-NETWR.
*  GF_WRITE-NUMGF = GF_WRITE-NETWR * GF_WRITE-STCUR.
gf_write-netwr = l_netwr.
gf_write-numgf = l_netwr * gf_write-stcur.
* 2002/01/11 PSD H.Tanaka MOD ↑

ENDFORM.                    " FRM_JYUKIN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_HATSUKIN_SET
*&---------------------------------------------------------------------*
*       発注金額（円建て）計算処理→円建て廃止 2002/08/06
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_hatsukin_set.
* 2002/01/23 PSD H.Tanaka MOD ↓
*DATA L_HATSUKIN(16) TYPE P.
*--- 発注金額（円建て）計算
*  PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERS
*                                      GF_WRITE-ENETPR
*                             CHANGING L_HATSUKIN.
*  PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERS
*                                      GF_WRITE-ENETPR
*                             CHANGING GF_WRITE-ENETPR.
*  GF_WRITE-ENETPR = GF_WRITE-MENGE  * GF_WRITE-ENETPR.
*  GF_WRITE-MNYEN  = GF_WRITE-ENETPR * GF_WRITE-WKURS.
*  L_HATSUKIN = GF_WRITE-MENGE  * L_HATSUKIN.
*  GF_WRITE-MNYEN  = L_HATSUKIN * GF_WRITE-WKURS.

* ↓↓↓発注金額円建て廃止　発注換算レートを廃止する 2002/08/06 PSD T.S.
gf_write-mnyen = gf_write-menge  * gf_write-enetpr. "* GF_WRITE-WKURS.
* 2002/01/23 PSD H.Tanaka MOD ↑

ENDFORM.                    " FRM_HATSUKIN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_GENKA_SET
*&---------------------------------------------------------------------*
*       原価（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_genka_set.
*--- 原価（円建て）計算
* 2002/01/22 PSD H.Tanaka MOD ↓
PERFORM frm_kingaku_henkan USING    gf_write-waerk
*                                      GF_WRITE-WAVWR
gf_vbap-wavwr
*                             CHANGING GF_WRITE-WAVWR.
CHANGING g_wavwr.
IF gf_write-kwmeng <> cns_zero.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_WRITE-KWMENG.
gf_write-wavwr = g_wavwr / gf_vbap-kwmeng.
gf_write-gyen1 = ( g_wavwr / gf_vbap-kwmeng ) * gf_write-stcur.
ENDIF.

*--- 原価金額（円建て）計算
PERFORM frm_genkin_set.

* 2002/01/22 PSD H.Tanaka MOD ↑

ENDFORM.                    " FRM_GENKA_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_GENKIN_SET
*&---------------------------------------------------------------------*
*       原価金額（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_genkin_set.
*--- 原価金額（円建て）計算
* 2002/01/22 PSD H.Tanaka MOD ↓
*  GF_WRITE-GYEN2 = GF_WRITE-GYEN1 * GF_WRITE-KWMENG.
gf_write-gyen2 = g_wavwr * gf_write-stcur.
IF gf_info-vbtyp = cns_h OR
gf_info-vbtyp = cns_k.
gf_write-gyen2 = gf_write-gyen2 * - 1.
ENDIF.
* 2002/01/22 PSD H.Tanaka MOD ↑

ENDFORM.                    " FRM_GENKIN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_ARAKIN_SET
*&---------------------------------------------------------------------*
*       粗利金額（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_arakin_set.
*--- 粗利金額（円建て）計算
*--- 2002/01/11 PSD H.Tanaka MOD ↓
*  GF_WRITE-ARAEYN = G_NUMGF - GF_WRITE-GYEN2.
*--- 2002/02/01 PSD H.Tanaka MOD ↓
*  GF_WRITE-ARAEYN = GF_WRITE-NETWR - GF_WRITE-GYEN2.
gf_write-araeyn = gf_write-numgf - gf_write-gyen2.
*--- 2002/01/11 PSD H.Tanaka MOD ↑
ENDFORM.                    " FRM_ARAKIN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_ARARITSU_SET
*&---------------------------------------------------------------------*
*       粗利率計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_araritsu_set.
*--- 粗利率計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*  IF G_NUMGF <> CNS_ZERO.
*  IF GF_WRITE-NETWR <> CNS_ZERO.
*    GF_WRITE-ARAPER = GF_WRITE-ARAEYN / G_NUMGF.
* 2002/02/01 PSD H.Tanaka MOD ↓
IF gf_write-numgf <> cns_zero.
gf_write-araper = gf_write-araeyn / gf_write-numgf * 100.
ENDIF.
ENDFORM.                    " FRM_ARARITSU_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_HATSUTAN_SET
*&---------------------------------------------------------------------*
*       発注単価（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_hatsutan_set.
*--- 発注単価（円建て）計算
* 2002/01/23 PSD H.Tanaka MOD ↓
PERFORM frm_kingaku_henkan USING    gf_write-waers
*                                      GF_WRITE-ENETPR
gf_ekpo-enetpr
CHANGING gf_write-enetpr.

*---APPEND START PSD T.SAITOH 2002/08/06 ---------------------------*
*  価格単位考慮
CASE gf_ekpo-peinh.
WHEN 0.
gf_write-enetpr = gf_write-enetpr / 1.
WHEN OTHERS.
gf_write-enetpr = gf_write-enetpr / gf_ekpo-peinh.
ENDCASE.
*---APPEND END   PSD T.SAITOH 2002/08/06 ---------------------------*

gf_write-hctnk = gf_write-enetpr * gf_write-wkurs.
*  PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERS
*                                      GF_WRITE-ENETPR
*                             CHANGING GF_WRITE-HCTNK.
*  GF_WRITE-HCTNK = GF_WRITE-HCTNK * GF_WRITE-WKURS.
* 2002/01/23 PSD H.Tanaka MOD ↑
ENDFORM.                    " FRM_HATSUTAN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_JYUTAN_SET
*&---------------------------------------------------------------------*
*       受注単価（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_jyutan_set.
*--- 受注単価（円建て）計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*  GF_WRITE-JTNKYEN = G_NUMGF * GF_WRITE-STCUR.
* 2002/02/01 PSD H.Tanaka MOD ↓
*  GF_WRITE-JTNKYEN = GF_WRITE-VNETPR * GF_WRITE-STCUR.
gf_write-jtnkyen = ( g_netpr / gf_vbap-kpein )
* gf_write-stcur.
ENDFORM.                    " FRM_JYUTAN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_KEISAN_NAIJI
*&---------------------------------------------------------------------*
*       計算処理（内示一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_keisan_naiji.
* 2002/01/23 PSD H.Tanaka ADD ↓
*--- 受注単価の変換
PERFORM frm_kingaku_henkan USING    gf_write-waerk
*                                      GF_WRITE-VNETPR
gf_vbap-vnetpr
*                             CHANGING GF_WRITE-JTNKYEN.
* 2002/02/01 PSD H.Tanaka ADD ↓
*                             CHANGING GF_WRITE-VNETPR.
CHANGING g_netpr.

*--- 受注金額（円建て）計算
PERFORM frm_jyukin_set.
*--- 原価（円建て）計算
PERFORM frm_genka_set.
* 2002/01/22 PSD H.Tanaka DEL ↓
*--- 原価金額（円建て）計算
*  PERFORM FRM_GENKIN_SET.

*--- 粗利金額（円建て）計算
PERFORM frm_arakin_set.
*--- 粗利率計算
PERFORM frm_araritsu_set.
*--- 受注単価（円建て）計算
PERFORM frm_jyutan_set.

ENDFORM.                    " FRM_KEISAN_NAIJI
*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET2
*&---------------------------------------------------------------------*
*       テーブル読込条件⑤
*       営業員名取得用販売伝票取引先構造取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbpa_get2.
*  CLEAR GF_VBPA.

*--- 販売伝票情報取得
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE B~PERNR B~NACHN
*    INTO (GF_WRITE-PERNR, GF_WRITE-NACHN)
*    FROM   VBPA AS A INNER JOIN PA0002 AS B
*      ON A~PERNR = B~PERNR
*   WHERE A~VBELN = GF_INFO-VBELN
** 2002/01/25 PSD H.Tanaka MOD ↓
**     AND A~POSNR = GF_INFO-POSNR
**     AND A~PARVW = CNS_PE
*     AND A~POSNR = '000000'
*     AND A~PARVW = CNS_VE
*     AND A~PERNR IN PR_PERNR.
READ TABLE gt_vbpa2 INTO gf_vbpa2
WITH TABLE KEY vbeln = gf_info-vbeln
posnr = '000000'
parvw = cns_ve.
IF sy-subrc <> 0.
SELECT SINGLE a~vbeln a~posnr a~parvw b~pernr b~nachn
INTO gf_vbpa2
FROM   vbpa AS a INNER JOIN pa0002 AS b
ON a~pernr = b~pernr
WHERE a~vbeln = gf_info-vbeln
AND a~posnr = '000000'
AND a~parvw = cns_ve.
IF sy-subrc = 0.
INSERT gf_vbpa2 INTO TABLE gt_vbpa2.
ENDIF.
ENDIF.
IF sy-subrc = 0.
IF gf_vbpa2-pernr IN pr_pernr.
ELSE.
CLEAR gf_vbpa2.
sy-subrc = 4.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
gf_write-pernr = gf_vbpa2-pernr.
gf_write-nachn = gf_vbpa2-nachn.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
WHEN 4.         " 対象データなし
g_flg_exit = cns_x.
*      MESSAGE S600(Z1) WITH TEXT-038.
*      STOP.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbpa
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBPA_GET2
*&---------------------------------------------------------------------*
*&      Form  FRM_MARD_GET
*&---------------------------------------------------------------------*
*       テーブル読込条件⑬
*       品目保管場所情報設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_mard_get.

*--- 品目保管場所情報取得
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
** 2002/01/15 PSD H.Tanaka MOD ↓
**  SELECT SINGLE LGORT
*  SELECT SINGLE LGPBE
** 2002/01/15 PSD H.Tanaka MOD ↑
*    INTO (GF_WRITE-LGPBE)
*    FROM MARD
*   WHERE MATNR = GF_VBAP-MATNR
** 2002/01/15 PSD H.Tanaka MOD ↓
**     AND WERKS = GF_VBAP-POSNR
*     AND WERKS = GF_VBAP-WERKS
** 2002/01/15 PSD H.Tanaka MOD ↑
**---DELETE START PSD T.SAITOH 2002/05/02 保管場所をはずす-----------*
**     AND LGORT = GF_VBAP-LGORT
**---DELETE END   PSD T.SAITOH 2002/05/02 ---------------------------*
*     .
READ TABLE gt_mard INTO gf_mard
WITH TABLE KEY matnr = gf_vbap-matnr
werks = gf_vbap-werks.
*       BINARY SEARCH.
IF sy-subrc <> 0.
SELECT SINGLE matnr werks lgpbe
INTO gf_mard
FROM mard
WHERE matnr = gf_vbap-matnr
AND werks = gf_vbap-werks.
IF sy-subrc = 0.
INSERT gf_mard INTO TABLE gt_mard.
*      SORT GT_MARD BY MATNR WERKS.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
gf_write-lgpbe = gf_mard-lgpbe.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
WHEN 4.         " 対象データなし
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_MARD
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_MARD_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET2
*&---------------------------------------------------------------------*
*       テーブル読込条件⑧
*       販売伝票納入日程行情報取得処理（内示一覧表・未引当リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbep_get2.
CLEAR gf_vbep.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR ETENR EDATU
*                ETTYP LIFSP BANFN BNFPO
*    INTO CORRESPONDING FIELDS OF GF_VBEP
*    FROM VBEP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR.
READ TABLE gt_vbep INTO gf_vbep
WITH KEY vbeln = gf_info-vbeln
posnr = gf_info-posnr
BINARY SEARCH.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
gf_write-edatu = gf_vbep-edatu.
gf_write-lifsp = gf_vbep-lifsp.
WHEN 4.         " 対象データなし
g_flg_exit = cns_x.
*      MESSAGE S600(Z1) WITH TEXT-036.
*      STOP.
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBEP
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_VBEP_GET2
*&---------------------------------------------------------------------*
*&      Form  FRM_VBFA_GET
*&---------------------------------------------------------------------*
*       テーブル読込条件⑫
*       販売伝票フロー情報取得処理（出荷ブロックリスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbfa_get.
CLEAR gf_vbfa.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT A~VBELV A~POSNV A~VBELN A~VBTYP_N
*         C~LFIMG
*    INTO CORRESPONDING FIELDS OF TABLE GT_VBFA
*    FROM ( VBFA AS A INNER JOIN LIKP AS B
*      ON   A~VBELN    = B~VBELN ) INNER JOIN LIPS AS C
*      ON   A~VBELN    = C~VBELN
*     AND   A~POSNN    = C~POSNR
*     AND   B~VBELN    = C~VBELN
*   WHERE   A~VBELV    = GF_VBAP-VBELN
*     AND   A~POSNV    = GF_VBAP-POSNR
*     AND   A~VBTYP_N  = CNS_J.
READ TABLE gt_vbfa INTO gf_vbfa
WITH KEY vbelv = gf_vbap-vbeln
posnv = gf_vbap-posnr
vbtyp_n = cns_j
BINARY SEARCH.
*-------2003/04/21 UPDATE END S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*      LOOP AT GT_VBFA INTO GF_VBFA.
*        GF_WRITE-LIFMG = GF_WRITE-LIFMG + GF_VBFA-LFIMG.
*      ENDLOOP.
LOOP AT gt_vbfa INTO gf_vbfa FROM sy-tabix.
IF gf_vbfa-vbelv = gf_vbap-vbeln AND
gf_vbfa-posnv = gf_vbap-posnr.
gf_write-lifmg = gf_write-lifmg + gf_vbfa-lfimg.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
WHEN 4.         " 対象データなし
* 2002/01/25 PSD H.Tanaka DEL ↓
*      MESSAGE S600(Z1) WITH TEXT-042.
*      STOP.
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBFA
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_VBFA_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_KEISAN_BLOCK
*&---------------------------------------------------------------------*
*       計算処理（出荷ブロックリスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_keisan_block.
* 2002/01/23 PSD H.Tanaka ADD ↓
*--- 受注単価の変換
PERFORM frm_kingaku_henkan USING    gf_write-waerk
*                                      GF_WRITE-VNETPR
gf_vbap-vnetpr
*                             CHANGING GF_WRITE-JTNKYEN.
*                             CHANGING GF_WRITE-VNETPR.
CHANGING g_netpr.

*--- 受注金額（円建て）計算
PERFORM frm_jyukin_set.

* 2002/01/23 PSD H.Tanaka ADD ↓
*--- 発注単価（円建て）計算
PERFORM frm_hatsutan_set.

*--- 発注金額（円建て）計算
PERFORM frm_hatsukin_set.
*--- 原価（円建て）計算
PERFORM frm_genka_set.
* 2002/01/22 PSD H.Tanaka DEL ↓
*--- 原価金額（円建て）計算
*  PERFORM FRM_GENKIN_SET.

*--- 粗利金額（円建て）計算
PERFORM frm_arakin_set.
*--- 粗利率計算
PERFORM frm_araritsu_set.

*--- 発注単価（円建て）計算
* 2002/01/23 PSD H.Tanaka DEL ↓
*  PERFORM FRM_HATSUTAN_SET.

*--- 受注単価（円建て）計算
PERFORM frm_jyutan_set.
*--- 未出荷数量・出荷可能数量・発注残数計算
PERFORM frm_syuka_set.

ENDFORM.                    " FRM_KEISAN_BLOCK
*&---------------------------------------------------------------------*
*&      Form  FRM_SYUKA_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_syuka_set.
*--- 未出荷数量
gf_write-numms = gf_write-kwmeng - gf_write-lifmg.

*--- 出荷可能数量
gf_write-numsc = gf_write-kbmeng - gf_write-lifmg.
* 出荷可能数量変換処理
*---APPEND START DMC A.MASUDA 2005/01/05 --------------------------*
PERFORM call_md_convert_material_unit USING gf_write-numsc
gf_write-numsj.
*---APPEND END   DMC A.MASUDA 2005/01/05 --------------------------*

*--- 発注残数
gf_write-hznum = gf_write-menge - gf_write-wemng.

ENDFORM.                    " FRM_SYUKA_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET3
*&---------------------------------------------------------------------*
*       テーブル読込条件⑪
*       販売伝票納入日程行情報取得処理（出荷ブロックリスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbep_get3.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
DATA: w_hit(1) TYPE c.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
CLEAR gf_vbep.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票納入日程行情報取得
*  SELECT SINGLE VBELN POSNR ETENR EDATU
*                ETTYP LIFSP BANFN BNFPO
*    INTO CORRESPONDING FIELDS OF GF_VBEP
*    FROM VBEP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR
** 2002/01/25 PSD H.Tanaka DEL ↓
**     AND BANFN <> ''
**     AND LIFSP <> ''.
**---APPEND START PSD T.SAITOH 2002/03/20 出荷ブロック：スペースを除外-*
*     AND LIFSP <> SPACE
**---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*
*     AND LIFSP IN PR_LIFSP.
READ TABLE gt_vbep INTO gf_vbep
WITH KEY vbeln = gf_info-vbeln
posnr = gf_info-posnr
BINARY SEARCH.
IF sy-subrc = 0.
CLEAR w_hit.
LOOP AT gt_vbep INTO gf_vbep FROM sy-tabix.
IF gf_vbep-vbeln = gf_info-vbeln AND
gf_vbep-posnr = gf_info-posnr.
IF gf_vbep-lifsp <> space AND gf_vbep-lifsp IN pr_lifsp.
w_hit = 'X'.
EXIT.
ENDIF.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
IF w_hit IS INITIAL.
CLEAR gf_vbep.
sy-subrc = 4.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
gf_write-edatu = gf_vbep-edatu.
gf_write-lifsp = gf_vbep-lifsp.
WHEN 4.         " 対象データなし
g_flg_exit = cns_x.
*      MESSAGE S600(Z1) WITH TEXT-036.
*      STOP.
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBEP
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_VBEP_GET3
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET4
*&---------------------------------------------------------------------*
*       テーブル読込条件⑯
*       販売伝票納入日程行情報取得処理（出荷可能リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbep_get4.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
DATA: w_hit(1) TYPE c.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
CLEAR gf_vbep.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR ETENR EDATU
*                ETTYP LIFSP BANFN BNFPO
*    INTO CORRESPONDING FIELDS OF GF_VBEP
*    FROM VBEP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR
** ↓ MODIFY PSD K.Arai  2002/04/30 出荷ﾌﾞﾛｯｸされてないものを対象とする
*     AND LIFSP = SPACE
***---APPEND START PSD T.SAITOH 2002/03/20出荷ブロック：スペースを除外-*
**     AND LIFSP <> SPACE
***---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*
** ↑
*
** 2002/01/25 PSD H.Tanaka DEL ↓
**     AND BANFN <> ''
*     AND EDATU IN PR_DATE.
READ TABLE gt_vbep INTO gf_vbep
WITH KEY vbeln = gf_info-vbeln
posnr = gf_info-posnr
BINARY SEARCH.
IF sy-subrc = 0.
CLEAR w_hit.
LOOP AT gt_vbep INTO gf_vbep FROM sy-tabix.
IF gf_vbep-vbeln = gf_info-vbeln AND
gf_vbep-posnr = gf_info-posnr.
IF gf_vbep-lifsp = space AND gf_vbep-edatu IN pr_date.
w_hit = 'X'.
EXIT.
ENDIF.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
IF w_hit IS INITIAL.
CLEAR gf_vbep.
sy-subrc = 4.
ENDIF.
ENDIF.


*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
gf_write-edatu = gf_vbep-edatu.
gf_write-lifsp = gf_vbep-lifsp.
WHEN 4.         " 対象データなし
g_flg_exit = cns_x.
*      MESSAGE S600(Z1) WITH TEXT-036.
*      STOP.
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBEP
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_VBEP_GET4
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_write_data.
*--- 帳票設定処理
PERFORM frm_write_set.

*---APPEND START PSD T.SAITOH 2002/07/30 ---------------------------*
* ALV印刷強制処理
*  PERFORM FRM_SET_PRINT_PARAMETERS.
*---APPEND END   PSD T.SAITOH 2002/07/30 ---------------------------*

*--- リストの出力
CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
EXPORTING
i_callback_program             = g_repid        "レポートID
* Del ES-UP 2012/09/06 -->
*    i_callback_top_of_page         = g_top_of_page  "TOP_OF_PAGE
* Del ES-UP 2012/09/06 <--
*    I_STRUCTURE_NAME               = 'ZSLIST_V07'   "構造
i_structure_name               = 'ZSLIST_V07_NEW'   "構造

is_layout                      = gf_layout      "レイアウト設定
i_save                         = 'A'            "レイアウト保存
is_variant                     = gf_variant
it_events                      = gt_event[]     "イベント設定
*---APPEND START PSD T.SAITOH 2002/03/14 ALV一覧ステータス印刷拒否設定*
is_print                       = gf_print      "印刷設定
*---APPEND END   PSD T.SAITOH 2002/03/14 ---------------------------*
TABLES
* 2002/01/10 PSD H.Tanaka MOD ↓
*    T_OUTTAB                       = GT_WRITE  " 帳票出力用内部テーブル
t_outtab                       = gt_alv  " 帳票出力用内部テーブル
* 2002/01/10 PSD H.Tanaka MOD ↑
EXCEPTIONS
program_error                  = 1
OTHERS                         = 2
.
IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                    " FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_DATE_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_date_set.
IF pr_date-high IS INITIAL.
g_fdat = pr_date-low.
g_tdat = pr_date-low.
ELSE.
g_fdat = pr_date-low.
g_tdat = pr_date-high.
ENDIF.
ENDFORM.                    " FRM_DATE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_EVENT_GET
*&---------------------------------------------------------------------*
*       イベント取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_event_get.
*--- イベント取得
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
i_list_type     = 0
IMPORTING
et_events       = gt_event
EXCEPTIONS
list_type_wrong = 1
OTHERS          = 2.
IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

*--- 使用イベントに実行するサブルーチン名を設定
LOOP AT gt_event INTO gf_event.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WHERE NAME = 'TOP_OF_PAGE'.
*    GF_EVENT-FORM = 'FRM_TOP_OF_PAGE'.
*    MODIFY GT_EVENT FROM GF_EVENT.
CASE gf_event-name.
WHEN 'TOP_OF_PAGE'.
gf_event-form = 'FRM_TOP_OF_PAGE'.
MODIFY gt_event FROM gf_event.
WHEN 'CALLER_EXIT'.
gf_event-form = 'FRM_CALLER_EXIT'.
MODIFY gt_event FROM gf_event.
ENDCASE.
* 2002/01/10 PSD H.Tanaka MOD ↑
ENDLOOP.

ENDFORM.                    " FRM_EVENT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_SET
*&---------------------------------------------------------------------*
*       帳票設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_write_set.
* 2002/02/06 PSD H.Tanaka ADD ↓
*--- 内部テーブル存在チェック
IF gt_write IS INITIAL.
MESSAGE s204(z1).
STOP.
ENDIF.
* 2002/02/06 PSD H.Tanaka ADD ↑

* 2002/01/10 PSD H.Tanaka ADD ↓
*--- 内部テーブル変換処理
gt_alv[] = gt_write[].
* 2002/01/10 PSD H.Tanaka ADD ↑

*--- イベント取得処理
PERFORM frm_event_get.

*--- ページ切り替え設定
gf_layout-group_change_edit = cns_x.
*---APPEND START PSD T.SAITOH 2002/03/14 ALV一覧ステータス印刷拒否設定*
gf_print-no_print_listinfos = 'X'.
*---APPEND END   PSD T.SAITOH 2002/03/14 ---------------------------*

*--- バリアント保存設定
*--- 当日受発注一覧表
IF r_today = cns_x.
gf_variant-variant = '/ZS010100_01'.
*--- 内示一覧表
ELSEIF r_naiji  = cns_x.
gf_variant-variant = '/ZS010100_02'.
*--- 未引当一覧表
ELSEIF r_mihiki = cns_x.
gf_variant-variant = '/ZS010100_03'.
*--- 出荷ブロックリスト
ELSEIF r_block  = cns_x.
IF r_vkgrp = cns_x.      " 営業所コードボタン押下時
gf_variant-variant = '/ZS010100_04'.
ELSEIF r_pernr = cns_x.  " 営業員ボタン押下時
gf_variant-variant = '/ZS010100_05'.
ENDIF.
*--- 出荷可能リスト
ELSEIF r_kano   = cns_x.
IF r_vkgrp = cns_x.      " 営業所コードボタン押下時
gf_variant-variant = '/ZS010100_06'.
ELSEIF r_pernr = cns_x.  " 営業員ボタン押下時
gf_variant-variant = '/ZS010100_07'.
ENDIF.
* 2002/02/05 PSD H.Tanaka ADD ↓
*--- ＥＤＩ重複データ一覧表
ELSEIF r_tyofk  = cns_x.
IF r_vkgrp = cns_x.      " 営業所コードボタン押下時
gf_variant-variant = '/ZS010100_08'.
ELSEIF r_pernr = cns_x.  " 営業員ボタン押下時
gf_variant-variant = '/ZS010100_09'.
ENDIF.
* 2002/02/05 PSD H.Tanaka ADD ↑
ENDIF.

ENDFORM.                    " FRM_WRITE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_TVSTT_GET
*&---------------------------------------------------------------------*
*       出荷ポイント名設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_tvstt_get.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 出荷ポイント名設定
*  SELECT SINGLE VTEXT
*    INTO (GF_WRITE-VTEXT)
*    FROM TVSTT
*   WHERE VSTEL = GF_VBAP-VSTEL
*     AND SPRAS = CNS_J.
READ TABLE gt_tvstt INTO gf_tvstt
WITH TABLE KEY vstel = gf_vbap-vstel
spras = cns_j.
IF sy-subrc <> 0.
SELECT SINGLE vstel spras vtext
INTO gf_tvstt
FROM tvstt
WHERE vstel = gf_vbap-vstel
AND spras = cns_j.
IF sy-subrc = 0.
INSERT gf_tvstt INTO TABLE gt_tvstt.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
gf_write-vtext = gf_tvstt-vtext.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
WHEN 4.         " 対象データなし
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_tvstt
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_TVSTT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_LFA1_GET
*&---------------------------------------------------------------------*
*       仕入先名設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_lfa1_get.
*--- 仕入れ先名設定
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE NAME1
*    INTO (GF_WRITE-LNAME)
*    FROM LFA1
** 2002/01/30 PSD H.Tanaka MOD ↓
**   WHERE LIFNR = GF_EKPO-LLIEF."変更前
*  WHERE LIFNR = GF_EKPO-LIFNR.
READ TABLE gt_lfa1 INTO gf_lfa1
WITH TABLE KEY lifnr = gf_ekpo-lifnr.
IF sy-subrc <> 0.
*2013/11/11 Del Start
*    SELECT SINGLE lifnr name1
*      INTO gf_lfa1
*      FROM lfa1
*     WHERE lifnr = gf_ekpo-lifnr.
*2013/11/11 Del End
*2013/11/11 Add Start
*   仕入先マスタ情報[LFA1,ADRC]取得
SELECT SINGLE lfa1~lifnr lfa1~name1
*2013/12/11 Mod Start 1.部屋番号
*           adrc~roomnumber
adrc~HOUSE_NUM1
*2013/12/11 Mod End
INTO gf_lfa1
FROM lfa1 INNER JOIN adrc
ON lfa1~adrnr = adrc~addrnumber
WHERE lifnr = gf_ekpo-lifnr.
*2013/11/11 Add End
IF sy-subrc = 0.
INSERT gf_lfa1 INTO TABLE gt_lfa1.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
gf_write-lname = gf_lfa1-name1.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*2013/12/11 Mod Start 1.部屋番号
*2013/11/11 Add Start
*      gf_write-roomnumber = gf_lfa1-roomn. "部屋/アパート番号
gf_write-HOUSE_NUM1 = gf_lfa1-roomn. "部屋/アパート番号
*2013/11/11 Add End
*2013/12/11 Mod End
WHEN 4.         " 対象データなし
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_lfa1
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_LFA1_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_SURYO_HENKAN
*&---------------------------------------------------------------------*
*       数量変換処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_suryo_henkan.
IF gf_info-vbtyp = cns_h OR
gf_info-vbtyp = cns_k.
gf_write-kwmeng = gf_write-kwmeng * - 1.  " 受注数量
gf_write-lifmg  = gf_write-lifmg  * - 1.  " 出荷数量実績
* 2002/01/29 PSD H.Tanaka MOD ↓
*    GF_WRITE-NETWR  = GF_WRITE-NETWR  * - 1.  " 受注金額
gf_vbap-netwr   = gf_vbap-netwr  * - 1.  " 受注金額
gf_write-kbmeng = gf_write-kbmeng * - 1.  " 引当済数量
ENDIF.
ENDFORM.                    " FRM_SURYO_HENKAN
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_TYOFK
*&---------------------------------------------------------------------*
*       ＥＤＩ重複一覧表用内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_data_tyofk.
*--- 販売伝票情報設定
PERFORM frm_info_tyofk.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM get_data.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT gt_info INTO gf_info.
*--- 共通項目設定
PERFORM frm_data_set.
*--- 販売伝票取引先情報設定
PERFORM frm_vbpa_get1.
*--- 得意先名設定
IF sy-subrc = 0.
PERFORM frm_kunnr_get USING    gf_vbpa-adrnr
CHANGING gf_write-kunnr
gf_write-kname.
ENDIF.
*--- 販売明細情報設定
PERFORM frm_vbap_get3.
CHECK g_flg_exit <> cns_x.
*--- 販売明細情報設定(共通項目設定)
MOVE-CORRESPONDING gf_vbap TO gf_write.
*--- 出荷指示備考設定
PERFORM frm_read_text USING    gf_vbap-vbeln
gf_vbap-posnr
CHANGING gf_write-etc.
IF r_pernr = cns_x.    " 営業員コードボタン押下時
*--- 営業員名取得用販売伝票取引先情報設定
PERFORM frm_vbpa_get2.
ENDIF.
*--- 販売伝票納入日程行情報設定
PERFORM frm_vbep_get2.
CHECK g_flg_exit <> cns_x.
*--- 数量変換処理
PERFORM frm_suryo_henkan.
*--- 計算処理
PERFORM frm_keisan_naiji.

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM frm_set_bstkd_from_vbkd.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*--- 更新処理
APPEND gf_write TO gt_write.
ENDLOOP.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: gt_vbap,gt_vbep,gt_vbep2,gt_ekpo,
gt_vbpa,gt_vbpa2,gt_sadr,gt_vbkd.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: gt_vbpa3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_TYOFK
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_TYOFK
*&---------------------------------------------------------------------*
*       テーブル読込条件⑦
*       販売伝票情報取得処理（ＥＤＩ重複一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_info_tyofk.
CLEAR   gf_info.
REFRESH gt_info.

*--- 販売伝票情報取得
SELECT a~vbeln a~audat a~auart a~vkgrp a~vkbur
a~vdatu a~bstnk a~kunnr a~vbtyp a~ernam
c~posnr
d~bezei e~bezei f~bstdk_e f~kursk
INTO TABLE gt_info
FROM ( ( ( ( vbak AS a INNER JOIN vbuk AS b
ON         a~vbeln  = b~vbeln ) INNER JOIN vbup  AS c
ON         a~vbeln  = c~vbeln ) INNER JOIN tvkbt AS d
ON         a~vkbur  = d~vkbur ) INNER JOIN tvgrt AS e
ON         a~vkgrp  = e~vkgrp ) INNER JOIN vbkd  AS f
ON         c~vbeln  = f~vbeln
WHERE         a~audat IN pr_date
AND         a~vkbur IN pr_vkbur
AND         a~vkgrp IN pr_vkgrp
AND         a~kunnr IN pr_kunnr
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
AND         a~vkorg = pr_vkorg
AND         a~vtweg = pr_vtweg
AND         a~spart = pr_spart
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
AND ( NOT ( a~auart =  cns_ka
AND         a~vbtyp =  cns_c )
AND   NOT ( a~auart =  cns_kb
AND         a~vbtyp =  cns_c ) )
AND         d~spras =  cns_j
AND         e~spras =  cns_j
AND         f~posnr =  '000000'.

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE s600(z1) WITH text-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbak
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_INFO_TYOFK
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_TYOFK
*&---------------------------------------------------------------------*
*       入力チェック処理（ＥＤＩ重複データ一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_check_tyofk.
*---入力必須パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓  2002.05.02 MODIFY PSD K.Arai
IF sy-ucomm+0(1) = '%'.
EXIT.
ENDIF.
*--- ↑

IF NOT ( pr_yymm  IS INITIAL ).
CLEAR: pr_yymm,pr_werks,pr_lifsp.
REFRESH: pr_yymm,pr_werks,pr_lifsp.
MESSAGE e601(z1) WITH text-068 text-022.
ELSEIF NOT ( pr_werks IS INITIAL ).
CLEAR: pr_werks,pr_lifsp.
REFRESH: pr_werks,pr_lifsp.
MESSAGE e601(z1) WITH text-068 text-019.
ELSEIF NOT ( pr_lifsp IS INITIAL ).
CLEAR: pr_lifsp.
REFRESH: pr_lifsp.
MESSAGE e601(z1) WITH text-068 text-062.
ENDIF.

*--- ↓  2002.05.02 DELETE PSD K.Arai
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
*--- ↑
IF pr_date IS INITIAL.
MESSAGE e006(z1) WITH text-021.
ELSEIF pr_vkbur IS INITIAL.
MESSAGE e006(z1) WITH text-023.
ELSEIF pr_abgru IS INITIAL.
MESSAGE e006(z1) WITH text-070.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
*  ENDIF.
*--- ↑
ENDFORM.                    " FRM_CHECK_TYOFK
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET3
*&---------------------------------------------------------------------*
*       テーブル読込条件
*       販売伝票取引先構造取得処理（ＥＤＩ重複データ一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbap_get3.
CLEAR   gf_vbap.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR MATNR ARKTX  PSTYV
*                KDMAT NETWR WAERK KWMENG KBMENG
*                VRKME VSTEL NETPR KPEIN  WAVWR
*                WERKS LGORT
** 2002/02/12 PSD H.Tanaka ADD ↓
*                ABGRU
*    INTO GF_VBAP
*    FROM VBAP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR
*     AND ABGRU IN PR_ABGRU.
READ TABLE gt_vbap INTO gf_vbap
WITH TABLE KEY vbeln = gf_info-vbeln
posnr = gf_info-posnr.
IF sy-subrc = 0.
IF gf_vbap-abgru IN pr_abgru.
ELSE.
CLEAR gf_vbap.
sy-subrc = 4.
ENDIF.
ENDIF.

*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
g_flg_exit = cns_x.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbap
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBAP_GET3
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_ZMENG
*&---------------------------------------------------------------------*
*       目標数量を取得
*----------------------------------------------------------------------*
*      <--P_GF_WRITE_WEMNG  text
*----------------------------------------------------------------------*
FORM frm_get_zmeng CHANGING p_wemng.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE ZMENG
*           FROM VBAP
*           INTO P_WEMNG
*          WHERE VBELN = GF_VBAP-VBELN
*          AND   POSNR = GF_VBAP-POSNR.
*
*  CASE SY-SUBRC.
*    WHEN 0.
*    WHEN 4.
*    WHEN OTHERS.
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBAP
*                            SY-SUBRC.
*  ENDCASE.
p_wemng = gf_vbap-zmeng.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
ENDFORM.                    " FRM_GET_ZMENG

*&---------------------------------------------------------------------*
*&      Form  FRM_LTX01
*&---------------------------------------------------------------------*
*       READ_TEXTで得意先品目情報テキストを取得する
*----------------------------------------------------------------------*
FORM frm_ltx01.
*Del 2007.4.23--->
*  DATA: LT_TLINE    TYPE TABLE OF TLINE,
*        LF_TLINE    TYPE TLINE,
*        L_NAME      LIKE THEAD-TDNAME.
*
**---APPEND START PSD T.SAITOH 2002/06/21 ---------------------------*
*  CONCATENATE GF_WRITE-VBELN GF_WRITE-POSNR
*         INTO L_NAME.
**---APPEND END   PSD T.SAITOH 2002/06/21 ---------------------------*
**---MODIFY START PSD T.SAITOH 2002/06/21 ---------------------------*
**  L_NAME+0()   = PR_VKORG.       "販売組織
**  L_NAME+4(2)   = PR_VTWEG.       "流通チャネル
**  L_NAME+6(10)  = GF_WRITE-KUNNR. "得意先コード
**  L_NAME+16(18) = GF_WRITE-KDMAT. "品目コード
**     "READ_TEXT"汎用モジュール
*  CALL FUNCTION 'READ_TEXT'
*       EXPORTING
*            ID        = '0001'
*            LANGUAGE  = 'J'
*            NAME      = L_NAME
*            OBJECT    = 'VBBP'
*       TABLES
*            LINES     = LT_TLINE
*       EXCEPTIONS
*            NOT_FOUND = 4
**---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
** マスタ削除時の対応
*            REFERENCE_CHECK = 5 "マスタから削除された場合の対応
**---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*
*            OTHERS    = 8.
**---MODIFY END   PSD T.SAITOH 2002/06/21 ---------------------------*
*  CASE SY-SUBRC.
*    WHEN 0.
*      READ TABLE LT_TLINE INTO LF_TLINE INDEX 1.
*      GF_WRITE-LTX01 = LF_TLINE-TDLINE+0(20).        "得意先回答納期
**---MODIFY START PSD T.SAITOH 2002/07/15 ---------------------------*
** マスタ削除時の対応
**    WHEN 4."マスタから削除された場合取得できない時と同対応
*    WHEN 4 OR 5.
**---MODIFY END   PSD T.SAITOH 2002/07/15 ---------------------------*
*      GF_WRITE-LTX01 = ''.                   "ブランク設定
*    WHEN 8.
**---MODIFY START PSD T.SAITOH 2002/07/15 ---------------------------*
**      MESSAGE E001(Z1) WITH TEXT-016
*      MESSAGE E001(Z1) WITH 'READ_TEXT'
**---MODIFY END   PSD T.SAITOH 2002/07/15 ---------------------------*
*                            SY-SUBRC.
*  ENDCASE.
*Del 2007.04.23 <---
* Add 2006.06.07 --->
gf_write-ltx01 = ''.
IF gf_write-ltx01 EQ '' .
SELECT SINGLE postx FROM knmt
INTO gf_write-ltx01
WHERE vkorg EQ pr_vkorg
AND  vtweg EQ pr_vtweg
AND  kunnr EQ gf_write-kunnr
AND  matnr EQ gf_write-matnr .
IF sy-subrc NE 0 OR gf_write-ltx01 EQ '' .
SELECT SINGLE maktx FROM makt
INTO gf_write-ltx01
WHERE matnr EQ gf_write-matnr
AND spras EQ sy-langu .
ENDIF .

ENDIF .
* Add 2006.06.07 <---
ENDFORM.                                                    " FRM_LTX01
*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_BSTKD_FROM_VBKD
*&---------------------------------------------------------------------*
*       VBKDから得意先発注番号３５桁を設定
*----------------------------------------------------------------------*
FORM frm_set_bstkd_from_vbkd.

CLEAR: gf_write-bstnk.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE BSTKD
*                INTO GF_WRITE-BSTNK
*                FROM VBKD
*               WHERE VBELN = GF_WRITE-VBELN
*                 AND POSNR = 0.
READ TABLE gt_vbkd INTO gf_vbkd
WITH TABLE KEY vbeln = gf_write-vbeln
posnr = 0.
IF sy-subrc <> 0.
SELECT SINGLE vbeln posnr bstkd
INTO gf_vbkd
FROM vbkd
WHERE vbeln = gf_write-vbeln
AND posnr = 0.
IF sy-subrc = 0.
INSERT gf_vbkd INTO TABLE gt_vbkd.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

CASE sy-subrc.
WHEN 0.
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
gf_write-bstnk = gf_vbkd-bstkd.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
WHEN 4.
WHEN OTHERS.
MESSAGE a603(z1) WITH g_repid
'VBKD'
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_SET_BSTKD_FROM_VBKD
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_MSKA
*&---------------------------------------------------------------------*
*       受注在庫存在チェック
*----------------------------------------------------------------------*
FORM frm_check_mska.
*---MODIFY START PSD T.SAITOH 2002/08/05 ---------------------------*
*  DATA: L_KALAB TYPE MSKA-KALAB. "利用可能数量：ダミー

CLEAR g_kalab."出荷可能数を初期化
*---MODIFY END   PSD T.SAITOH 2002/08/05 ---------------------------*

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE KALAB
*                INTO G_KALAB
*                FROM MSKA
*               WHERE MATNR = GF_VBAP-MATNR
*                 AND WERKS = GF_VBAP-WERKS
*                 AND LGORT = 'H000'
*                 AND SOBKZ = 'E'
*                 AND VBELN = GF_VBAP-VBELN
*                 AND POSNR = GF_VBAP-POSNR
*                 AND KALAB <> 0.
READ TABLE gt_mska INTO gf_mska
WITH TABLE KEY matnr = gf_vbap-matnr
werks = gf_vbap-werks
vbeln = gf_vbap-vbeln
posnr = gf_vbap-posnr.
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)

*--- エラー処理
CASE sy-subrc.
WHEN 0.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
g_kalab = gf_mska-kalab.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
WHEN 4.         " 対象データなし
g_flg_exit = cns_x.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbap
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_CHECK_MSKA
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_PRINT_PARAMETERS
*&---------------------------------------------------------------------*
*       ALV印刷強制処理
*----------------------------------------------------------------------*
FORM frm_set_print_parameters.

DATA:lf_pri_params LIKE pri_params.
TABLES usr01.

SELECT SINGLE * FROM usr01 WHERE bname = sy-uname.

* プリンタ設定
lf_pri_params-pdest = usr01-spld.
* 書式設定
lf_pri_params-paart = 'X_65_255'.

CALL FUNCTION 'SET_PRINT_PARAMETERS'
EXPORTING
destination = lf_pri_params-pdest
immediately = 'X'
layout      = lf_pri_params-paart
line_count  = 65
line_size   = 255
new_list_id = 'X'
release     = usr01-spda.


ENDFORM.                    " FRM_SET_PRINT_PARAMETERS

*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_TVKBT
*&---------------------------------------------------------------------*
*       営業所
*----------------------------------------------------------------------*
*      <--P_L_VKBUR  営業所名
*----------------------------------------------------------------------*
FORM frm_select_tvkbt USING    p_l_vkbur.

SELECT SINGLE bezei
INTO p_l_vkbur
FROM tvkbt
WHERE vkbur = gt_alv-vkbur
AND spras = 'J'.

CASE sy-subrc.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE a603(z1) WITH sy-repid 'TVKBT' sy-subrc.
ENDCASE.


ENDFORM.                    " FRM_SELECT_TVKBT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_TVGRT
*&---------------------------------------------------------------------*
*       営業グループ
*----------------------------------------------------------------------*
*      <--P_L_VKGRP  営業グループ
*----------------------------------------------------------------------*
FORM frm_select_tvgrt USING    p_l_vkgrp.

SELECT SINGLE bezei
INTO p_l_vkgrp
FROM tvgrt
WHERE vkgrp = gt_alv-vkgrp
AND spras = 'J'.

CASE sy-subrc.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE a603(z1) WITH sy-repid 'TVGRT' sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_SELECT_TVGRT
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT_KNB1
*&---------------------------------------------------------------------*
*       納品書種別設定
*----------------------------------------------------------------------*
*      -->P_ZS01     ID
*      -->P_KUNNR    NAME
*      -->P_KNB1     OBJECT
*      <--P_TDLINE   納品書種別
*----------------------------------------------------------------------*
FORM frm_read_text_knb1 USING    p_kunnr
CHANGING p_tdline.

DATA: lt_tline    TYPE TABLE OF tline,
lf_tline    TYPE tline,
l_kunnr     LIKE thead-tdname.

CONCATENATE p_kunnr
'C001' INTO l_kunnr.


CALL FUNCTION 'READ_TEXT'
EXPORTING
client                        = sy-mandt
id                            = 'ZS01'
language                      = 'J'
name                          = l_kunnr
object                        = 'KNB1'
*     ARCHIVE_HANDLE                = 0
*     LOCAL_CAT                     = ' '
*   IMPORTING
*     HEADER                        =
TABLES
lines           = lt_tline
EXCEPTIONS
id                            = 1
language                      = 2
name                          = 3
not_found                     = 4
object                        = 5
reference_check               = 6
wrong_access_to_archive       = 7
OTHERS                        = 8.

CASE sy-subrc.
WHEN 0.
READ TABLE lt_tline INTO lf_tline INDEX 1.
p_tdline = lf_tline-tdline+0(2).
WHEN OTHERS.
p_tdline = space.
ENDCASE.


ENDFORM.                    " FRM_READ_TEXT_KNB1
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       データ読み込み
*----------------------------------------------------------------------*
FORM get_data.
*2014/02/03 Add Start 削除フラグ
types typ_loekz type range of ekpo-loekz.
data: lr_loekz  type typ_loekz,
lf_loekz  like line of lr_loekz.

* 発注明細は、削除/ロックされていないものが対象
lf_loekz-sign   = 'I'.
lf_loekz-option = 'EQ'.
append lf_loekz to lr_loekz.

* 当日受発注一覧の場合、削除/ロックも対象とする
IF r_today = cns_x.      " 当日受発注一覧表
refresh lr_loekz.
endif.
*2014/02/03 Add End
*--- 販売伝票情報取得
SELECT vbeln posnr matnr arktx  pstyv
kdmat netwr waerk kwmeng kbmeng
vrkme vstel netpr kpein wavwr
werks lgort abgru zmeng mwsbp
INTO TABLE gt_vbap
FROM vbap
FOR ALL ENTRIES IN gt_info
WHERE vbeln = gt_info-vbeln
AND posnr = gt_info-posnr.

SORT gt_vbap BY vbeln posnr.

*--- 販売伝票情報取得
SELECT vbeln posnr etenr edatu
ettyp lifsp banfn bnfpo
INTO TABLE gt_vbep
FROM vbep
FOR ALL ENTRIES IN gt_info
WHERE vbeln =  gt_info-vbeln
AND posnr =  gt_info-posnr.

SORT gt_vbep BY vbeln posnr etenr.

gt_vbep2[] = gt_vbep.
DELETE gt_vbep2 WHERE banfn = space
AND bnfpo = 0.
*2007/06/15 ADD START
IF gt_vbep2 IS INITIAL.
EXIT.
ENDIF.
*2007/06/15 ADD END

*--- 購買伝票情報取得
SELECT c~banfn c~bnfpo a~ebeln a~ebelp a~netpr a~menge
b~waers b~wkurs b~lifnr
c~wemng c~eindt
a~peinh
*---ADD BY DMC 2008/05/07 BEGIN
a~meins      "発注単位
*---ADD BY DMC 2008/05/07 END
*2011/05/23 Add Start
b~ekgrp      "購買Grp
*2011/05/23 Add End
*2013/11/11 Add Start
a~mwskz      "消費税コード
*2013/11/11 Add End
INTO TABLE gt_ekpo
FROM ( ekpo AS a INNER JOIN ekko AS b
ON   a~ebeln  = b~ebeln ) INNER JOIN eket  AS c
ON   a~ebeln  = c~ebeln
AND   a~ebelp  = c~ebelp
FOR ALL ENTRIES IN gt_vbep2
*2014/02/03 Mod Start 削除フラグ
*   WHERE   a~loekz = ''
where   a~loekz in lr_loekz
*2014/02/03 Add End
AND   c~etenr = cns_0001
AND   c~banfn = gt_vbep2-banfn
AND   c~bnfpo = gt_vbep2-bnfpo.

SORT gt_ekpo BY banfn bnfpo.

ENDFORM.                    " GET_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_DATA2
*&---------------------------------------------------------------------*
*       データ読み込み２
*----------------------------------------------------------------------*
FORM get_data2.
SELECT a~vbelv a~posnv a~vbeln a~vbtyp_n
*---APPEND START DMC A.MASUDA 2004/09/29 ------------------------------*
d~wbstk
*---APPEND END   DMC A.MASUDA 2004/09/29 ------------------------------*
c~lfimg
INTO TABLE gt_vbfa
FROM ( vbfa AS a INNER JOIN likp AS b
ON   a~vbeln    = b~vbeln ) INNER JOIN lips AS c
ON   a~vbeln    = c~vbeln
AND   a~posnn    = c~posnr
AND   b~vbeln    = c~vbeln
*---APPEND START DMC A.MASUDA 2004/09/29 ------------------------------*
INNER JOIN vbuk AS d
ON a~vbeln    = d~vbeln
*---APPEND END   DMC A.MASUDA 2004/09/29 ------------------------------*
FOR ALL ENTRIES IN gt_vbap
WHERE   a~vbelv    = gt_vbap-vbeln
AND   a~posnv    = gt_vbap-posnr
AND   a~vbtyp_n  = cns_j.

SORT gt_vbfa BY vbelv posnv.

ENDFORM.                                                    " GET_DATA2
*&---------------------------------------------------------------------*
*&      Form  GET_DATA3
*&---------------------------------------------------------------------*
*       データ読み込み３
*----------------------------------------------------------------------*
FORM get_data3.
SELECT matnr werks vbeln posnr kalab
INTO TABLE gt_mska
FROM mska
FOR ALL ENTRIES IN gt_vbap
WHERE matnr = gt_vbap-matnr
AND werks = gt_vbap-werks
AND lgort = 'H000'
AND sobkz = 'E'
AND vbeln = gt_vbap-vbeln
AND posnr = gt_vbap-posnr
AND kalab <> 0.

SORT gt_mska BY matnr werks vbeln posnr.

ENDFORM.                                                    " GET_DATA3
*&---------------------------------------------------------------------*
*&      Form  FRM_GENKA_SET_KOBETSU
*&---------------------------------------------------------------------*
* 個別購買原価設定
*----------------------------------------------------------------------*
FORM frm_genka_set_kobetsu.
* 原価項目設定
PERFORM frm_kingaku_henkan USING    gf_write-waerk
gf_vbap-wavwr
CHANGING g_wavwr.
IF gf_write-kwmeng <> cns_zero.
gf_write-wavwr = g_wavwr / gf_vbap-kwmeng.
ENDIF.
* 原価（円建て）項目設定
* ADD 2004/02/12 Y.Tsukahara START
CLEAR: g_wavwr_y.
* ADD 2004/02/12 Y.Tsukahara END
PERFORM frm_kingaku_henkan USING    gf_ekpo-waers
gf_ekpo-enetpr
CHANGING g_wavwr_y.
* ADD 基本数量単位と発注数量単位取得 2004/02/12 Y.Tsukahara START
CLEAR: wa_eina.
*
* MOD 2004/03/29 Y.Tsukahara START
*  SELECT SINGLE UMREZ UMREN FROM EINA INTO WA_EINA
SELECT SINGLE umrez umren meins FROM eina INTO wa_eina
* MOD 2004/03/29 Y.Tsukahara END
WHERE lifnr = gf_ekpo-lifnr
AND   matnr = gf_vbap-matnr.
* ADD 2004/02/12 Y.Tsukahara END
IF ( gf_vbap-waerk = cns_jpy AND
gf_ekpo-waers = cns_jpy ).
*1
* 受注通貨単位と発注通貨単位がともに”JPY”の場合
* MOD 2004/01/30 Y.Tsukahara START
*    GF_WRITE-GYEN1 = G_WAVWR_Y.
*  価格単位考慮
CASE gf_ekpo-peinh.
WHEN 0.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara START
gf_write-gyen1 = g_wavwr_y * ( wa_eina-umren / wa_eina-umrez ).
WHEN OTHERS.
gf_write-gyen1 = g_wavwr_y * ( wa_eina-umren / wa_eina-umrez )
/ gf_ekpo-peinh.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara END
ENDCASE.
* MOD 2004/01/30 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara START
* ADD 2004/01/29 Y.Tsukahara START
*    G_WAVWR = GF_WRITE-GYEN1 * GF_VBAP-KWMENG.
*--- 原価金額（円建て）計算
*    PERFORM FRM_GENKIN_SET.
PERFORM frm_genkin_set2 USING g_wavwr_y.
* ADD 2004/01/29 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara END
ELSEIF ( gf_vbap-waerk <> cns_jpy AND
gf_ekpo-waers <> cns_jpy ).
*2
* 受注通貨単位と発注通貨単位がともに”JPY”以外の場合
* MOD 2004/01/30 Y.Tsukahara START
*    GF_WRITE-GYEN1 = G_WAVWR_Y.
*  価格単位考慮
CASE gf_ekpo-peinh.
WHEN 0.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara START
gf_write-gyen1 = g_wavwr_y * ( wa_eina-umren / wa_eina-umrez ).
WHEN OTHERS.
gf_write-gyen1 = g_wavwr_y * ( wa_eina-umren / wa_eina-umrez )
/ gf_ekpo-peinh.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara END
ENDCASE.
* MOD 2004/01/30 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara START
* ADD 2004/01/29 Y.Tsukahara START
*    G_WAVWR = GF_WRITE-GYEN1 * GF_VBAP-KWMENG.
*--- 原価金額（円建て）計算
*    PERFORM FRM_GENKIN_SET.
PERFORM frm_genkin_set2 USING g_wavwr_y.
* ADD 2004/01/29 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara END
ELSEIF ( gf_vbap-waerk <> cns_jpy AND
gf_ekpo-waers =  cns_jpy ).
*3
* 受注通貨単位が”JPY”以外で、発注通貨単位が”JPY”の場合
* MOD 2004/01/30 Y.Tsukahara START
*    GF_WRITE-GYEN1 = G_WAVWR_Y / GF_WRITE-STCUR.
*  価格単位考慮
CASE gf_ekpo-peinh.
WHEN 0.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara START
gf_write-gyen1 = g_wavwr_y * ( wa_eina-umren / wa_eina-umrez )
/ gf_write-stcur.
WHEN OTHERS.
gf_write-gyen1 = ( g_wavwr_y / gf_ekpo-peinh )
* ( wa_eina-umren / wa_eina-umrez )
/ gf_write-stcur.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara END
ENDCASE.
* MOD 2004/01/30 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara START
* ADD 2004/01/29 Y.Tsukahara START
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara START
*    GF_WRITE-GYEN2 = ( G_WAVWR_Y / GF_EKPO-PEINH )
*                     * ( wa_eina-UMREN / wa_eina-UMREZ )
*                     * GF_VBAP-KWMENG.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara END
*    IF GF_INFO-VBTYP = CNS_H OR
*       GF_INFO-VBTYP = CNS_K.
*      GF_WRITE-GYEN2 = GF_WRITE-GYEN2 * - 1.
*    ENDIF.
PERFORM frm_genkin_set2 USING g_wavwr_y.
* ADD 2004/01/29 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara END
ELSEIF ( gf_vbap-waerk =  cns_jpy AND
gf_ekpo-waers <> cns_jpy ).
*4
* 受注通貨単位が”JPY”で、発注通貨単位が”JPY”以外の場合
* MOD 2004/01/30 Y.Tsukahara START
*    GF_WRITE-GYEN1 = G_WAVWR_Y * GF_EKPO-WKURS.
*  価格単位考慮
CASE gf_ekpo-peinh.
WHEN 0.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara START
gf_write-gyen1 = g_wavwr_y * ( wa_eina-umren / wa_eina-umrez )
* gf_ekpo-wkurs.
WHEN OTHERS.
gf_write-gyen1 = ( g_wavwr_y / gf_ekpo-peinh )
* ( wa_eina-umren / wa_eina-umrez )
* gf_ekpo-wkurs.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara END
ENDCASE.
* MOD 2004/01/30 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara START
* ADD 2004/01/29 Y.Tsukahara START
*    G_WAVWR = GF_WRITE-GYEN1 * GF_VBAP-KWMENG.
*--- 原価金額（円建て）計算
*    PERFORM FRM_GENKIN_SET.
PERFORM frm_genkin_set2 USING g_wavwr_y.
* ADD 2004/01/29 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara END
ENDIF.
ENDFORM.                    " FRM_GENKA_SET_KOBETSU
*&---------------------------------------------------------------------*
*&      Form  FRM_GENKA_SET_ZAIKO
*&---------------------------------------------------------------------*
* 在庫原価設定
*----------------------------------------------------------------------*
FORM frm_genka_set_zaiko.
DATA: lo_verpr TYPE mbew-verpr.
* 移動平均原価取得
SELECT SINGLE verpr
INTO lo_verpr
FROM mbew
WHERE matnr = gf_vbap-matnr
AND bwkey = gf_vbap-werks
AND bwtar = ''.
*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.    " 対象データなし
*2009/05/29 DEL START
*      MESSAGE S600(Z1) WITH TEXT-015.
*      STOP.
*2009/05/29 DEL END
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
'MBEW'
sy-subrc.
ENDCASE.
* 原価項目設定
PERFORM frm_kingaku_henkan USING    gf_write-waerk
gf_vbap-wavwr
CHANGING g_wavwr.
IF gf_write-kwmeng <> cns_zero.
gf_write-wavwr = g_wavwr / gf_vbap-kwmeng.
ENDIF.
* 原価（円建て）項目設定
PERFORM frm_kingaku_henkan USING    gf_vbap-waerk
lo_verpr
CHANGING g_wavwr_y.
IF ( gf_vbap-waerk = cns_jpy  ).
*1
* 受注通貨単位が”JPY”の場合
gf_write-gyen1 = g_wavwr_y.
ELSE.
*2
* 受注通貨単位が”JPY”以外の場合
gf_write-gyen1 = g_wavwr_y * gf_write-stcur.
ENDIF.
*--- 原価金額（円建て）計算
PERFORM frm_genkin_set.
ENDFORM.                    " FRM_GENKA_SET_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  FRM_GENKIN_SET2
*&---------------------------------------------------------------------*
*       原価金額(円建て)計算処理
*----------------------------------------------------------------------*
*      -->P_G_WAVWR_Y  外部通貨変換済み発注正味価格
* ADD 2004.02.13 Y.Tsukahara
*----------------------------------------------------------------------*
FORM frm_genkin_set2 USING    p_g_wavwr_y.
*
* ADD 2004/03/29 Y.Tsukahara START
DATA: l_msg(24) TYPE c VALUE 'MD_CONVERT_MATERIAL_UNIT'.

MOVE gf_vbap-kwmeng TO wa_menge.
* 数量変換処理
CALL FUNCTION 'MD_CONVERT_MATERIAL_UNIT'
EXPORTING
i_matnr              = gf_vbap-matnr
i_in_me              = gf_vbap-vrkme
i_out_me             = wa_eina-meins
i_menge              = wa_menge
IMPORTING
e_menge              = wa_menge
EXCEPTIONS
error_in_application = 1
error                = 2
OTHERS               = 3.

* DEL 2004/04/02 Y.Tsukahara START
*  IF SY-SUBRC <> 0.
*    MESSAGE E001(Z1) WITH L_MSG SY-SUBRC.
*  ENDIF.
* DEL 2004/04/02 Y.Tsukahara END
* ADD 2004/03/29 Y.Tsukahara END
* MOD 2004/03/29 Y.Tsukahara START
*  GF_WRITE-GYEN2 = ( P_G_WAVWR_Y / GF_EKPO-PEINH )
*                   * ( WA_EINA-UMREN / WA_EINA-UMREZ )
*                   * GF_VBAP-KWMENG * GF_WRITE-WKURS.
gf_write-gyen2 = ( p_g_wavwr_y / gf_ekpo-peinh )
*                  * ( WA_EINA-UMREN / WA_EINA-UMREZ )
* wa_menge * gf_write-wkurs.
* MOD 2004/03/29 Y.Tsukahara END
IF gf_info-vbtyp = cns_h OR
gf_info-vbtyp = cns_k.
gf_write-gyen2 = gf_write-gyen2 * - 1.
ENDIF.
*
* ADD 2004/03/29 Y.Tsukahara START
CLEAR: wa_menge.
* ADD 2004/03/29 Y.Tsukahara END
ENDFORM.                    " FRM_GENKIN_SET2

*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET3
*&---------------------------------------------------------------------*
*       出荷先住所取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbpa_get3.

DATA:wa_addname LIKE zslist_v07_new-addname.

*--- 出荷先住所取得
READ TABLE gt_vbpa3 INTO gf_vbpa3
WITH TABLE KEY vbeln = gf_info-vbeln
posnr = '000000'
parvw = cns_we.
*---DELETE START NDSC A.MASUDA 2004/04/21 --------------------------*
*  IF SY-SUBRC <> 0.
*    SELECT SINGLE A~VBELN A~POSNR A~PARVW A~KUNNR B~NAME1 B~STREET
*      INTO GF_VBPA3
*      FROM VBPA AS A INNER JOIN ADRC AS B
*        ON B~ADDRNUMBER = A~ADRNR
*     WHERE A~VBELN = GF_INFO-VBELN
*       AND A~POSNR = '000000'
*       AND A~PARVW = CNS_WE.
*    IF SY-SUBRC = 0.
*      INSERT GF_VBPA3 INTO TABLE GT_VBPA3.
*    ENDIF.
*  ENDIF.
*---DELETE END   NDSC A.MASUDA 2004/04/21 --------------------------*
*---APPEND START NDSC A.MASUDA 2004/04/21 --------------------------*
IF sy-subrc <> 0.
SELECT SINGLE a~vbeln a~posnr a~parvw a~kunnr b~name2
b~city1 b~street c~bezei
INTO gf_vbpa3
FROM vbpa AS a
INNER JOIN adrc AS b
ON b~addrnumber = a~adrnr
INNER JOIN t005u AS c
ON c~bland = b~region
WHERE a~vbeln = gf_info-vbeln
AND a~posnr = '000000'
AND a~parvw = cns_we
AND c~spras = 'J'
AND c~land1 = 'JP'.
IF sy-subrc = 0.
INSERT gf_vbpa3 INTO TABLE gt_vbpa3.
ENDIF.
ENDIF.
*---APPEND END   NDSC A.MASUDA 2004/04/21 --------------------------*
*--- エラー処理
CASE sy-subrc.
WHEN 0.
*---APPEND START NDSC A.MASUDA 2004/04/21 --------------------------*
gf_write-kunnr_we = gf_vbpa3-kunnr.
gf_write-kname_we = gf_vbpa3-name2.
CONCATENATE gf_vbpa3-city1 gf_vbpa3-street
INTO wa_addname.
gf_write-addname  = wa_addname.
gf_write-bezei    = gf_vbpa3-bezei.
*---APPEND END   NDSC A.MASUDA 2004/04/21 --------------------------*
*---DELETE START NDSC A.MASUDA 2004/04/21 --------------------------*
*      GF_WRITE-STREET   = GF_VBPA3-STREET.
*      GF_WRITE-KUNNR_WE = GF_VBPA3-KUNNR.
*      GF_WRITE-KNAME_WE = GF_VBPA3-NAME1.
*      GF_WRITE-STREET   = GF_VBPA3-STREET.
*---DELETE END   NDSC A.MASUDA 2004/04/21 --------------------------*
WHEN 4.         " 対象データなし
g_flg_exit = cns_x.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbpa
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBPA_GET3
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*
*---APPEND START DMC A.MASUDA 2005/01/05 --------------------------*
*&---------------------------------------------------------------------*
*&      FORM CALL_MD_CONVERT_MATERIAL_UNIT
*&---------------------------------------------------------------------*
*       出荷数量変換処理
*----------------------------------------------------------------------*
*   -->  PA_MENGE_B 出荷数量(変換前)
*   <--  PA_MENGE_A 出荷数量(変換後)
*----------------------------------------------------------------------*
FORM call_md_convert_material_unit USING pa_menge_b
pa_menge_a.

DATA:
lw_meins LIKE mara-meins.

* 品目マスタの販売単位を取得
*2007/06/15 MOD START S.KURATA
SELECT SINGLE vrkme
FROM mvke
INTO lw_meins
WHERE matnr = gf_vbap-matnr
AND vkorg = pr_vkorg
AND vtweg = pr_vtweg.

IF sy-subrc <> 0 OR
lw_meins IS INITIAL.
SELECT SINGLE meins
FROM mara
INTO lw_meins
WHERE matnr = gf_vbap-matnr.
ENDIF.
*  SELECT SINGLE MEINS
*    FROM MARA
*    INTO LW_MEINS
*   WHERE MATNR = GF_VBAP-MATNR.
*2007/06/15 MOD END S.KURATA

* 数量変換処理
CALL FUNCTION 'MD_CONVERT_MATERIAL_UNIT'
EXPORTING
i_matnr              = gf_vbap-matnr
*2007/06/15 MOD START S.KURATA
i_in_me              = gf_vbap-vrkme
i_out_me             = lw_meins
**---APPEND START DMC Y.OTA 2006/11/16 -----------------------*
**            I_IN_ME              = GF_VBAP-VRKME
**            I_OUT_ME             = LW_MEINS
*             I_IN_ME              = LW_MEINS
*             I_OUT_ME             = GF_VBAP-VRKME
**---APPEND END   DMC Y.OTA 2006/11/16 -----------------------*
*2007/06/15 MOD END S.KURATA
i_menge              = pa_menge_b
IMPORTING
e_menge              = pa_menge_a
EXCEPTIONS
error_in_application = 1
error                = 2
OTHERS               = 3.

ENDFORM.
*---APPEND END   DMC A.MASUDA 2005/01/05 --------------------------*
*---APPEND START DMC S.SHIGEMITU 2006/05/31 -----------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT_YUSOUTOU
*&---------------------------------------------------------------------*
*       輸送手段等テキスト取得処理
*----------------------------------------------------------------------*
*      -->P_VBELN   販売伝票
*      -->P_POSNR   販売伝票明細
*      <--P_TDLINE  輸送手段等テキスト
*----------------------------------------------------------------------*
FORM frm_read_text_yusoutou USING    p_vbeln
p_posnr
CHANGING p_tdline.
DATA: lt_tline    TYPE TABLE OF tline,
lf_tline    TYPE tline,
l_vbeln     LIKE thead-tdname.

CONCATENATE p_vbeln
p_posnr
INTO l_vbeln.

*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
id              = 'Z910'
language        = 'J'
name            = l_vbeln
object          = 'VBBP'
TABLES
lines           = lt_tline
EXCEPTIONS
not_found       = 4
reference_check = 5
OTHERS          = 8.
CASE sy-subrc.
WHEN 0.
READ TABLE lt_tline INTO lf_tline INDEX 1.
p_tdline = lf_tline-tdline.
WHEN 8.
MESSAGE e001(z1) WITH text-024
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_READ_TEXT_YUSOUTOU
*---APPEND END   DMC S.SHIGEMITU 2006/05/31 -----------------------*
*---APPEND START D.YI 2007/11/05 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_KBETR1
*&---------------------------------------------------------------------*
*       販売価格を設定
*----------------------------------------------------------------------*
FORM frm_set_kbetr1.

DATA: l_knumh TYPE a901-knumh,              "条件レコード番号
l_kbetr TYPE zslist_v07_new-kbetr1,
l_konwa TYPE konp-konwa,
*---ADD BY DMC 2008/05/07 BEGIN
l_kopos TYPE konp-kopos,              "条件連続番号
l_kmein TYPE konp-kmein,              "数量単位
*---ADD BY DMC 2008/05/07 END
l_kpein TYPE konp-kpein.

SELECT knumh
FROM a901
INTO l_knumh
UP TO 1 ROWS
WHERE kappl   = 'V'
AND kschl   = 'ZPR0'
AND vkorgau = pr_vkorg
AND vtweg   = pr_vtweg
AND spart   = pr_spart
AND kunnr   = gf_write-kunnr
AND zzzkdmat = gf_write-kdmat
AND datbi >= gf_write-audat.
ENDSELECT.

SELECT kbetr
konwa
kpein
*---ADD BY DMC 2008/05/07 BEGIN
kopos      "条件連続番号
kmein      "数量単位
*---ADD BY DMC 2008/05/07 END
FROM konp
INTO (gf_write-kbetr1, l_konwa, l_kpein
*---ADD BY DMC 2008/05/07 BEGIN
,l_kopos, l_kmein
*---ADD BY DMC 2008/05/07 END
)
UP TO 1 ROWS
WHERE knumh   = l_knumh
*---ADD BY DMC 2008/05/07 BEGIN
AND loevm_ko <> 'X'.
*---ADD BY DMC 2008/05/07 END
ENDSELECT.
*---ADD BY DMC 2008/05/07 BEGIN
PERFORM frm_get_konm USING    cns_hanbayi "データ処理区分
l_knumh     "KONPから:条件レコード番号
l_kopos     "KONPから:条件連続番号
l_kmein     "KONPから:数量単位
CHANGING gf_write-kbetr1.
*---ADD BY DMC 2008/05/07 END
PERFORM frm_kingaku_henkan USING    l_konwa
gf_write-kbetr1
CHANGING l_kbetr.
gf_write-kbetr1 = l_kbetr / l_kpein.

ENDFORM.                    " FRM_SET_KBETR1
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_KBETR2
*&---------------------------------------------------------------------*
*       購買価格を設定
*----------------------------------------------------------------------*
FORM frm_set_kbetr2 USING p_lifnr
p_matnr
p_werks
p_aedat
*---ADD BY DMC 2008/05/07 BEGIN
p_kbn  TYPE char3.
*---ADD BY DMC 2008/05/07 END

DATA: l_knumh TYPE a017-knumh,              "条件レコード番号
l_kbetr TYPE zslist_v07_new-kbetr2,
l_konwa TYPE konp-konwa,
*---ADD BY DMC 2008/05/07 BEGIN
l_kopos TYPE konp-kopos,              "条件連続番号
l_kmein TYPE konp-kmein,              "数量単位
*---ADD BY DMC 2008/05/07 END
l_kpein TYPE konp-kpein.

SELECT knumh
FROM a017
INTO l_knumh
UP TO 1 ROWS
WHERE kappl = 'M'
AND kschl = 'ZPB1'
AND lifnr = p_lifnr
AND matnr = p_matnr
AND werks = p_werks
AND datbi >= p_aedat.
ENDSELECT.

SELECT kbetr
konwa
kpein
*---ADD BY DMC 2008/05/07 BEGIN
kopos      "条件連続番号
kmein      "数量単位
*---ADD BY DMC 2008/05/07 END
FROM konp
INTO (gf_write-kbetr2, l_konwa, l_kpein
*---ADD BY DMC 2008/05/07 BEGIN
,l_kopos, l_kmein
*---ADD BY DMC 2008/05/07 END
)
UP TO 1 ROWS
WHERE knumh   = l_knumh
*---ADD BY DMC 2008/05/07 BEGIN
AND loevm_ko <> 'X'.
*---ADD BY DMC 2008/05/07 END
ENDSELECT.
*---ADD BY DMC 2008/05/07 BEGIN
PERFORM frm_get_konm USING    p_kbn       "データ処理区分
l_knumh     "KONPから:条件レコード番号
l_kopos     "KONPから:条件連続番号
l_kmein     "KONPから:数量単位
CHANGING gf_write-kbetr2.
*---ADD BY DMC 2008/05/07 END
PERFORM frm_kingaku_henkan USING    l_konwa
gf_write-kbetr2
CHANGING l_kbetr.
gf_write-kbetr2 = l_kbetr / l_kpein.

ENDFORM.                    " FRM_SET_KBETR2
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_KOBAI
*&---------------------------------------------------------------------*
*       在庫発注を設定
*----------------------------------------------------------------------*
FORM frm_set_kobai.

DATA: lt_tvkbz  TYPE STANDARD TABLE OF tvkbz,
lt_tvkbz2 TYPE STANDARD TABLE OF tvkbz,
l_enetpr  TYPE zslist_v07_new-enetpr,
lf_tvkbz  TYPE tvkbz.
*2013/11/11 Add Start
DATA: lt_ekpo1 TYPE STANDARD TABLE OF typ_ekpo1,
r_werks  TYPE typ_werks,       "プラント
lf_werks LIKE LINE OF r_werks.

*2014/02/03 Add Start 削除フラグ
types typ_loekz type range of ekpo-loekz.
data: lr_loekz  type typ_loekz,
lf_loekz  like line of lr_loekz.

* 発注明細は、削除/ロックされていないものが対象
lf_loekz-sign   = 'I'.
lf_loekz-option = 'EQ'.
append lf_loekz to lr_loekz.

* 当日受発注一覧の場合、削除/ロックも対象とする
IF r_today = cns_x.      " 当日受発注一覧表
refresh lr_loekz.
endif.
*2014/02/03 Add End

* 'P' + 営業所(3) でプラントに変換
CLEAR r_werks.
lf_werks-sign   = 'I'.
lf_werks-option = 'EQ'.
*2013/11/11 Add End

SELECT vkbur
INTO CORRESPONDING FIELDS OF TABLE lt_tvkbz
FROM tvkbz
WHERE vkbur IN pr_vkbur.

LOOP AT lt_tvkbz
INTO lf_tvkbz.
SHIFT lf_tvkbz-vkbur BY 1 PLACES RIGHT.
lf_tvkbz-vkbur+0(1) = 'P'.
APPEND lf_tvkbz TO lt_tvkbz2.

*2013/11/11 Add Start
*   'P' + 営業所(3) でプラントに変換
lf_werks-low = lf_tvkbz-vkbur.
APPEND lf_werks TO r_werks.
*2013/11/11 Add End
ENDLOOP.

SELECT b~ebeln  " 購買伝票番号
b~ebelp  " 明細番号
b~menge  " 在庫発注
b~netpr  " 発注単価
b~matnr  " 品目コード
b~txz01  " 品名
b~werks  " プラント
*2008/01/15 ADD START
b~peinh  " 価格単位
*2008/01/15 ADD END
a~waers  " 通貨コード
a~wkurs  " 換算レート
a~lifnr  " 仕入先勘定コード
a~ernam  " ユーザID
a~ekgrp  " 営業グループ
a~aedat  " 伝票日付
c~wemng  " 納入数量
c~eindt  " 納入期日
*---ADD BY DMC 2008/05/07 BEGIN
b~meins  "発注単位
*---ADD BY DMC 2008/05/07 END
*2013/11/11 Add Start
b~mwskz  " 消費税コード
*2013/11/11 Add End
INTO CORRESPONDING FIELDS OF TABLE gt_ekpo1
FROM ( ekko AS a INNER JOIN ekpo AS b
ON   a~ebeln  = b~ebeln ) INNER JOIN eket  AS c
ON   b~ebeln  = c~ebeln
AND   b~ebelp  = c~ebelp
FOR ALL ENTRIES IN lt_tvkbz2
WHERE a~aedat IN pr_date
*2011/05/23 Add Start
AND a~ekgrp IN s_ekgrp        "購買グループ
*2011/05/23 Add End
AND b~knttp <> 'M'
*2014/02/03 Mod Start 削除フラグ
*     AND b~loekz = ''
AND b~loekz in lr_loekz
*2014/02/03 Add End
AND b~werks = lt_tvkbz2-vkbur.

*2013/11/11 Add Start
* 変更履歴のある購買伝票[EKKO,EKPO,EKET]取得
IF LINES( gt_ebeln ) > 0.
SELECT ekpo~ebeln  "購買伝票番号
ekpo~ebelp  "明細番号
ekpo~menge  "在庫発注
ekpo~netpr  "発注単価
ekpo~matnr  "品目コード
ekpo~txz01  "品名
ekpo~werks  "プラント
ekpo~peinh  "価格単位
ekko~waers  "通貨コード
ekko~wkurs  "換算レート
ekko~lifnr  "仕入先勘定コード
ekko~ernam  "ユーザID
ekko~ekgrp  "営業グループ
ekko~aedat  "伝票日付
eket~wemng  "納入数量
eket~eindt  "納入期日
ekpo~meins  "発注単位
ekpo~mwskz  "消費税コード
INTO CORRESPONDING FIELDS OF TABLE lt_ekpo1
FROM ekko INNER JOIN ekpo
ON ekko~ebeln = ekpo~ebeln
INNER JOIN eket
ON ekpo~ebeln = eket~ebeln
AND ekpo~ebelp = eket~ebelp
FOR ALL ENTRIES IN gt_ebeln
WHERE ekko~ebeln = gt_ebeln-ebeln "変更履歴.購買伝票番号
AND ekko~ekgrp IN s_ekgrp       "購買グループ
AND ekpo~knttp <> 'M'           "勘定設定カテゴリ
*2014/02/03 Mod Start 削除フラグ
*       AND ekpo~loekz =  ''            "購買伝票の削除フラグ
AND ekpo~loekz in lr_loekz        "購買伝票の削除フラグ
*2014/02/03 Add End
AND ekpo~werks IN r_werks       "プラント
AND eket~etenr =  cns_0001.     "納入日程行

*   変更伝票区分に'X'をセット
gf_ekpo1-chang = 'X'.
MODIFY lt_ekpo1 FROM gf_ekpo1 TRANSPORTING chang
WHERE chang = space.

SORT lt_ekpo1 BY ebeln ebelp.

*   変更ユーザIDに変更履歴.購買伝票の最終日時責任者のユーザ名をセット
LOOP AT lt_ekpo1 INTO gf_ekpo1.
AT NEW ebeln.
CLEAR gf_cdhdr.
READ TABLE gt_cdhde INTO gf_cdhdr
WITH KEY objectclas = cns_eink
objectid   = gf_ekpo1-ebeln.

*       購買伝票単位でセット
gf_ekpo1-upnam = gf_cdhdr-username."変更ユーザID
gf_ekpo1-udate = gf_cdhdr-udate.   "変更伝票の登録日付
gf_ekpo1-utime = gf_cdhdr-utime.   "変更時刻
MODIFY lt_ekpo1 FROM gf_ekpo1 TRANSPORTING upnam udate utime
WHERE ebeln = gf_ekpo1-ebeln.
ENDAT.
ENDLOOP.

*   購買情報内部テーブルに追加
APPEND LINES OF lt_ekpo1 TO gt_ekpo1.

*   購買情報内部テーブルをSORT
SORT gt_ekpo1 BY ebeln ebelp
chang DESCENDING udate DESCENDING utime DESCENDING.

*   購買情報内部テーブルの重複行を削除
DELETE ADJACENT DUPLICATES FROM gt_ekpo1 COMPARING ebeln ebelp.

*   変更伝票区分の設定
LOOP AT gt_ekpo1 INTO gf_ekpo1.
AT NEW ebeln.
READ TABLE gt_ekpo1 INTO gf_ekpo1 INDEX sy-tabix.
*       購買伝票の登録日(rec登録日) = 変更履歴の最終の変更日付の場合
IF gf_ekpo1-aedat = gf_ekpo1-udate.
*         変更伝票区分をクリア
CLEAR gf_ekpo1-chang.
MODIFY gt_ekpo1 FROM gf_ekpo1 TRANSPORTING chang
WHERE ebeln = gf_ekpo1-ebeln.
ENDIF.
ENDAT.
ENDLOOP.
ENDIF.

* 購買伝票の取引先[EKPA,LFA1,ADRC]取得
CLEAR gt_adrc.
SELECT ekpa~ebeln ekpa~parvw ekpa~lifn2
adrc~name1
INTO TABLE gt_adrc
FROM ekpa INNER JOIN lfa1
ON ekpa~lifn2 = lfa1~lifnr
INNER JOIN adrc
ON lfa1~adrnr = adrc~addrnumber
FOR ALL ENTRIES IN gt_ekpo1
WHERE ekpa~ebeln = gt_ekpo1-ebeln.  "購買伝票番号
*2013/11/11 Add End

CLEAR: gf_lfa1,
gt_lfa1[].
LOOP AT gt_ekpo1
INTO gf_ekpo1.
*2008/07/03 ADD START
CLEAR gf_lfa1.
*2008/07/03 ADD END
READ TABLE gt_lfa1 INTO gf_lfa1
WITH TABLE KEY lifnr = gf_ekpo1-lifnr.
IF sy-subrc <> 0.
*2013/11/11 Del Start
*      SELECT SINGLE lifnr name1
*        INTO gf_lfa1
*        FROM lfa1
*       WHERE lifnr = gf_ekpo1-lifnr.
*2013/11/11 Del End
*2013/11/11 Add Start
*     仕入先マスタ情報[LFA1,ADRC]取得
SELECT SINGLE lfa1~lifnr lfa1~name1
*2013/12/11 Mod Start 1.部屋番号
*             adrc~roomnumber
adrc~HOUSE_NUM1
*2013/12/11 Mod End
INTO gf_lfa1
FROM lfa1 INNER JOIN adrc
ON lfa1~adrnr = adrc~addrnumber
WHERE lifnr = gf_ekpo1-lifnr.
*2013/11/11 Add End
IF sy-subrc = 0.
INSERT gf_lfa1 INTO TABLE gt_lfa1.
ENDIF.
ENDIF.

CLEAR: gf_write.
gf_write-ebeln  = gf_ekpo1-ebeln.
gf_write-ebelp  = gf_ekpo1-ebelp.
gf_write-menge  = gf_ekpo1-menge.
*2008/01/15 ADD START
gf_write-kwmeng = gf_write-menge.
*2008/01/15 ADD END

gf_write-waers  = gf_ekpo1-waers.                     " 通貨コード
gf_write-enetpr = gf_ekpo1-netpr.

PERFORM frm_kingaku_henkan USING    gf_write-waers
gf_write-enetpr
CHANGING l_enetpr.

gf_write-enetpr = l_enetpr.                           " 発注単価
*2008/01/15 ADD START
*    購買単価を価格単位で除算する
IF gf_ekpo1-peinh NE 0.
DIVIDE gf_write-enetpr BY gf_ekpo1-peinh.
ENDIF.
*2008/01/15 ADD END
gf_write-wkurs  = gf_ekpo1-wkurs.                     " 換算レート
gf_write-eindt = gf_ekpo1-eindt.                      " 納入期日
gf_write-wemng = gf_ekpo1-wemng.                      " 入庫数
gf_write-hznum = gf_write-menge - gf_write-wemng.     " 発注残数
gf_write-lname = gf_lfa1-name1.                       " 仕入先名
*2013/12/11 Mod Start 1.部屋番号
*2013/11/11 Add Start
*    gf_write-roomnumber = gf_lfa1-roomn. " 部屋/アパート番号
gf_write-HOUSE_NUM1 = gf_lfa1-roomn. " 部屋/アパート番号
*2013/11/11 Add End
*2013/12/11 Mod End
gf_write-matnr = gf_ekpo1-matnr.                      " 品目コード
gf_write-arktx = gf_ekpo1-txz01.                      " 品名
gf_write-mnyen = gf_write-menge
* gf_write-enetpr.                     " 発注金額
gf_write-ernam = gf_ekpo1-ernam.                      " ユーザID
gf_write-vkbur = gf_ekpo1-werks.
SHIFT gf_write-vkbur BY 1 PLACES LEFT.
gf_write-vkbur+3(1) = '0'.                           " 営業所

* Add 20071220 --->
gf_write-gyen2 = gf_write-mnyen .
* Add 20071220 <---

SELECT SINGLE  bezei
INTO gf_write-bezeia                               " 営業所名
FROM tvkbt
WHERE vkbur = gf_write-vkbur
AND spras = 'J'.

gf_write-vkgrp = gf_ekpo1-ekgrp.                     " 営業グループ

SELECT SINGLE bezei
INTO gf_write-bezeib                             "営業グループ名
FROM tvgrt
WHERE vkgrp = gf_write-vkgrp
AND spras = 'J'.

gf_write-audat = gf_ekpo1-aedat.                     " 伝票日付
* 購買価格を設定
PERFORM frm_set_kbetr2 USING gf_ekpo1-lifnr
gf_write-matnr
gf_ekpo1-werks
gf_write-audat
*---ADD BY DMC 2008/05/07 BEGIN
cns_zayiko.
*---ADD BY DMC 2008/05/07 END
*2011/05/23 Add Start
gf_write-ekgrp = gf_ekpo1-ekgrp.
*2011/05/23 Add End

*2013/11/11 Add Start
gf_write-mwskz = gf_ekpo1-mwskz.   "消費税コード

*   購買伝票の取引先
CLEAR gf_adrc.
READ TABLE gt_adrc INTO gf_adrc
WITH KEY ebeln = gf_ekpo1-ebeln
parvw = cns_ba.
gf_write-lifnr_ba = gf_adrc-lifn2. "発注_手配先
gf_write-name1_ba = gf_adrc-name1. "発注_手配先名称
CLEAR gf_adrc.
READ TABLE gt_adrc INTO gf_adrc
WITH KEY ebeln = gf_ekpo1-ebeln
parvw = cns_lf.
gf_write-lifnr_lf = gf_adrc-lifn2. "発注_仕入先
gf_write-name1_lf = gf_adrc-name1. "発注_仕入先名称
CLEAR gf_adrc.
READ TABLE gt_adrc INTO gf_adrc
WITH KEY ebeln = gf_ekpo1-ebeln
parvw = cns_rs.
gf_write-lifnr_rs = gf_adrc-lifn2. "発注_請求書発行者
gf_write-name1_rs = gf_adrc-name1. "発注_請求書発行者名称
CLEAR gf_adrc.
READ TABLE gt_adrc INTO gf_adrc
WITH KEY ebeln = gf_ekpo1-ebeln
parvw = cns_y1.
gf_write-lifnr_y1 = gf_adrc-lifn2. "発注_支払先
gf_write-name1_y1 = gf_adrc-name1. "発注_支払先名称

gf_write-changkbn = gf_ekpo1-chang."変更伝票区分
gf_write-username = gf_ekpo1-upnam."変更ユーザID
*2013/11/11 Add End

APPEND gf_write TO gt_write.

ENDLOOP.

ENDFORM.                    " FRM_SET_KOBAI
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_MWSBP
*&---------------------------------------------------------------------*
*      消費税金額を設定
*----------------------------------------------------------------------*
FORM frm_set_mwsbp.

DATA: l_mwsbp TYPE zslist_v07_new-mwsbp.

PERFORM frm_kingaku_henkan USING    gf_write-waerk
gf_vbap-mwsbp
CHANGING l_mwsbp.
gf_write-mwsbp = l_mwsbp.

ENDFORM.                    " FRM_SET_MWSBP
*---APPEND END   D.YI 2007/11/05 ---------------------------*
*---ADD BY DMC 2008/05/07 BEGIN
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_KONM
*&---------------------------------------------------------------------*
*      スケール数量を取得
*----------------------------------------------------------------------*
*  -->  U_KBN       データ処理区分
*  -->  U_KNUMH     KONPから:条件レコード番号
*  -->  U_KOPOS     KONPから:条件連続番号
*  -->  U_KPEIN     KONPから:価格条件単位
*  <--  C_KBETR     スケール数量
*----------------------------------------------------------------------*
FORM frm_get_konm USING    u_kbn    TYPE char3
u_knumh  TYPE a901-knumh
u_kopos TYPE konp-kopos
u_kmein  TYPE konp-kmein
CHANGING c_kbetr.
DATA: l_matnr      TYPE mara-matnr,
l_meins      TYPE mara-meins,
l_o_meins    TYPE mara-meins,
l_suryou     TYPE ekpo-menge,
l_konm_kbetr TYPE zslist_v07_new-kbetr1,
l_konm_kstbm TYPE konm-kstbm.

MOVE u_kmein TO l_o_meins.             "価格条件単位
* 販売価格の場合
IF u_kbn = cns_hanbayi.
MOVE gf_write-matnr  TO l_matnr.     "品目コード
MOVE gf_write-vrkme  TO l_meins.     "販売単位
MOVE gf_write-kwmeng TO l_suryou.    "累積受注数量

* 購買価格の場合
ELSEIF u_kbn = cns_koubayi.
MOVE gf_write-matnr TO l_matnr.      "品目コード
MOVE gf_ekpo-meins TO l_meins.       "発注単位
MOVE gf_ekpo-menge TO l_suryou.      "購買発注数量

* 在庫発注の場合
ELSEIF u_kbn = cns_zayiko.
MOVE gf_ekpo1-matnr TO l_matnr.      "品目コード
MOVE gf_ekpo1-meins TO l_meins.      "発注単位
MOVE gf_ekpo1-menge TO l_suryou.     "購買発注数量
ENDIF.

* 伝票単位が価格条件単位と違い場合
IF l_meins <> l_o_meins.
*   数量変換処理
CALL FUNCTION 'MD_CONVERT_MATERIAL_UNIT'
EXPORTING
i_matnr              = l_matnr
i_in_me              = l_meins
i_out_me             = l_o_meins
i_menge              = l_suryou
IMPORTING
e_menge              = l_suryou
EXCEPTIONS
error_in_application = 1
error                = 2
OTHERS               = 3.
ENDIF.

* 数量スケールでの価格の取得
SELECT kbetr
kstbm
FROM   konm                    "条件 (一次元の数量スケール)
INTO   (l_konm_kbetr, l_konm_kstbm)
UP TO 1 ROWS
WHERE  knumh = u_knumh AND     "条件レコード番号
kopos = u_kopos AND     "条件連続番号
kstbm =< l_suryou       "条件スケール数量
ORDER BY kstbm DESCENDING.
ENDSELECT.
* 存在した場合
IF sy-subrc = 0.
c_kbetr = l_konm_kbetr.
ENDIF.
ENDFORM.                    " FRM_GET_KONM
*---ADD BY DMC 2008/05/07 END
*2013/11/11 Add Start
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_CDHDR
*&---------------------------------------------------------------------*
*       変更文書情報取得
*----------------------------------------------------------------------*
FORM FRM_GET_CDHDR.
TYPES:
BEGIN OF typ_cdpos,
tabname TYPE cdpos-tabname,      "テーブル名
tabkey  TYPE cdpos-tabkey,       "変更テーブルレコードキー
fname   TYPE cdpos-fname,        "項目名
*2013/12/11 Add Start 2.支払条件
changenr type cdpos-changenr,    "変更文書番号
*2013/12/11 Add End
END   OF typ_cdpos,
BEGIN OF typ_tvkbz,
vkbur TYPE tvkbz-vkbur,          "営業所
END   OF typ_tvkbz.
DATA:
lt_cdhdr TYPE STANDARD TABLE OF typ_cdhdr,
lt_cdpos TYPE STANDARD TABLE OF typ_cdpos,
lf_cdpos TYPE typ_cdpos,
lt_tvkbz TYPE STANDARD TABLE OF typ_tvkbz,
lf_tvkbz TYPE typ_tvkbz,
lf_ebeln TYPE typ_ebeln.

*
CLEAR:gt_cdhdv, gt_cdhde, gt_vbeln.

* 変更文書情報[CDHDR]取得
SELECT objectclas objectid changenr username udate utime
INTO TABLE lt_cdhdr
FROM cdhdr
WHERE objectclas IN (cns_verk, cns_eink)
AND udate      IN pr_date.

* 変更文書情報[CDPOS]取得
LOOP AT lt_cdhdr INTO gf_cdhdr.
CLEAR lt_cdpos.
SELECT tabname tabkey fname
INTO TABLE lt_cdpos
FROM cdpos
WHERE objectclas =  gf_cdhdr-objectclas
AND objectid   =  gf_cdhdr-objectid
AND changenr   =  gf_cdhdr-changenr
*2013/12/11 Mod Start 2.支払条件
*       AND tabname    IN (cns_vbak, cns_vbap, cns_vbep, cns_vbkd,
AND tabname    IN (cns_vbak, cns_vbap, cns_vbep,
*2013/12/11 Mod End
cns_ekpa, cns_ekpo, cns_eket)
AND fname      IN (cns_netpr, cns_wmeng, cns_vdatu, cns_pstyv,
*2013/12/11 Mod Start 2.支払条件
*                          cns_zterm, cns_menge, cns_aedat, cns_slfdt,
cns_menge, cns_aedat, cns_slfdt,
*2013/12/11 Mod End
*2014/02/03 Add Start 拒否理由、削除フラグ
cns_ABGRU, cns_LOEKZ,
*2014/02/03 Add End
cns_mwskz, cns_lifn2).

CHECK sy-subrc = 0.
LOOP AT lt_cdpos INTO lf_cdpos.
gf_cdhdr-tabname = lf_cdpos-tabname.
gf_cdhdr-tabkey  = lf_cdpos-tabkey.
gf_cdhdr-fname   = lf_cdpos-fname.
APPEND gf_cdhdr TO gt_cdhdv.
ENDLOOP.
ENDLOOP.

*2013/12/11 Add Start 2.支払条件
* 変更文書情報[CDPOS]取得（支払条件のみ）
LOOP AT lt_cdhdr INTO gf_cdhdr.
CLEAR: lt_cdpos.
SELECT tabname tabkey fname changenr
INTO TABLE lt_cdpos
FROM cdpos
WHERE objectclas =  gf_cdhdr-objectclas
AND objectid   =  gf_cdhdr-objectid
AND changenr   =  gf_cdhdr-changenr
AND tabname    =  cns_vbkd
AND fname      =  cns_zterm.

* 明細変更の確認
read table lt_cdpos
with key TABKEY+13(6) = '000010'
transporting no fields.
if sy-subrc = 0.
* 明細変更時は、表示対象とする
LOOP AT lt_cdpos INTO lf_cdpos.
gf_cdhdr-tabname = lf_cdpos-tabname.
gf_cdhdr-tabkey  = lf_cdpos-tabkey.
gf_cdhdr-fname   = lf_cdpos-fname.
APPEND gf_cdhdr TO gt_cdhdv.
ENDLOOP.
else.
* ヘッダ変更時は、条件により表示対象とする
select single vbeln
from   vbkd
into   gf_cdhdr-objectid
where  vbeln = gf_cdhdr-objectid
and    posnr = '000010'.
if sy-subrc <> 0.
* ヘッダ変更に伴い、明細も変更されるため、表示対象とする
LOOP AT lt_cdpos INTO lf_cdpos.
gf_cdhdr-tabname = lf_cdpos-tabname.
gf_cdhdr-tabkey  = lf_cdpos-tabkey.
gf_cdhdr-fname   = lf_cdpos-fname.
APPEND gf_cdhdr TO gt_cdhdv.
ENDLOOP.
endif.
endif.
endloop.
*2013/12/11 Add End

* 変更販売伝票、変更購買伝票に分割
SORT gt_cdhdv BY objectclas objectid udate DESCENDING utime DESCENDING.
gt_cdhde = gt_cdhdv.
DELETE gt_cdhdv
WHERE objectclas = cns_eink.
DELETE gt_cdhde
WHERE objectclas = cns_verk.

* 変更履歴.販売伝票番号
LOOP AT gt_cdhdv INTO gf_cdhdr.
gf_vbeln-vbeln = gf_cdhdr-objectid.
APPEND gf_vbeln TO gt_vbeln.
ENDLOOP.
DELETE ADJACENT DUPLICATES FROM gt_vbeln.

* 変更履歴.購買伝票番号
LOOP AT gt_cdhde INTO gf_cdhdr.
lf_ebeln-ebeln = gf_cdhdr-objectid.
APPEND lf_ebeln TO gt_ebeln.
ENDLOOP.
DELETE ADJACENT DUPLICATES FROM gt_ebeln.

ENDFORM.                    " FRM_GET_CDHDR
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_VBAK
*&---------------------------------------------------------------------*
*       変更履歴のある販売伝票[VBAK,VBAP,etc]取得
*----------------------------------------------------------------------*
FORM FRM_GET_VBAK.

CLEAR gt_vbak.

* 変更履歴のある販売伝票[VBAK,VBAP,etc]取得
SELECT vbak~vbeln vbak~audat vbak~auart vbak~vkgrp vbak~vkbur
vbak~vdatu vbak~bstnk vbak~kunnr vbak~vbtyp vbak~ernam
vbup~posnr
tvkbt~bezei
tvgrt~bezei
vbkd~bstdk_e vbkd~kursk vbkd~zterm
INTO TABLE gt_vbak
FROM vbak INNER JOIN vbuk
ON vbak~vbeln = vbuk~vbeln
INNER JOIN vbup
ON vbak~vbeln = vbup~vbeln
INNER JOIN tvkbt
ON vbak~vkbur = tvkbt~vkbur
INNER JOIN tvgrt
ON vbak~vkgrp = tvgrt~vkgrp
INNER JOIN vbkd
ON vbup~vbeln = vbkd~vbeln
INNER JOIN vbap
ON vbup~vbeln = vbap~vbeln
AND vbup~posnr = vbap~posnr
FOR ALL ENTRIES IN gt_vbeln
WHERE vbak~vbeln  =  gt_vbeln-vbeln "変更履歴.販売伝票番号
AND vbak~vkbur  IN pr_vkbur       "営業所
AND vbak~vkgrp  IN pr_vkgrp       "営業グループ
AND vbak~kunnr  IN pr_kunnr       "受注先
AND vbak~vbtyp  IN (cns_c, cns_h, cns_i, cns_k, cns_l)
*2014/02/03 Add Start 拒否理由
*     AND vbap~abgru  <> 'ZZ'           "拒否理由
*2014/02/03 Add End
AND tvkbt~spras =  cns_j          "言語
AND tvgrt~spras =  cns_j          "言語
AND vbak~vkorg  =  pr_vkorg       "販売組織
AND vbak~vtweg  =  pr_vtweg       "流通チャネル
AND vbak~spart  =  pr_spart       "製品部門
AND vbkd~posnr  =  '000000'.      "明細番号(販売管理伝票)

* 変更伝票区分に'X'をセット
gf_info-chang = 'X'.
MODIFY gt_vbak FROM gf_info TRANSPORTING chang
WHERE chang = space.

SORT gt_vbak BY vbeln posnr.

ENDFORM.                    " FRM_GET_VBAK
*2013/11/11 Add End
