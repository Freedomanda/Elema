*&---------------------------------------------------------------------*
*&  REPORT ZM12900                                                     *
*&         帳簿棚卸一覧表                                              *
*&---------------------------------------------------------------------*
*&  機能     :個別購買データ・在庫データをアドオンテーブルに格納する。
*&  作成日   :2010/08/27
*&  作成者   :S.KURATA(SOLFIS)
*&  変更履歴 :
*&---------------------------------------------------------------------*
REPORT ZM12900  MESSAGE-ID  Z1
NO STANDARD PAGE HEADING
LINE-SIZE   100.

TABLES:T001W,MARC,MARD.
*----------------------------------------------------------------------*
*  型定義
*----------------------------------------------------------------------*
* 受注在庫情報格納用
TYPES:BEGIN OF T_MSKA,
MATNR            TYPE MSKA-MATNR,         "品目コード
WERKS            TYPE MSKA-WERKS,         "プラント
VBELN            TYPE MSKA-VBELN,         "販売伝票番号
POSNR            TYPE MSKA-POSNR,         "販売明細番号
KALAB            TYPE MSKA-KALAB,         "利用可能評価在庫
EKGRP            TYPE MARC-EKGRP,         "購買グループ
LGPBE            TYPE MARD-LGPBE,         "棚番
END OF T_MSKA.

* 受注伝票情報格納用
TYPES:BEGIN OF T_VBAK,
VBELN            TYPE VBAK-VBELN,         "販売伝票番号
BSTNK            TYPE VBAK-BSTNK,         "得意先発注番号
KUNNR            TYPE VBAK-KUNNR,         "受注先
NAME1            TYPE KNA1-NAME1,         "名称１
END OF T_VBAK.

* 品目情報格納用
TYPES:BEGIN OF T_MARA,
MATNR            TYPE MAKT-MATNR,         "品目コード
MAKTX            TYPE MAKT-MAKTX,         "品目テキスト
MSEH3            TYPE T006A-MSEH3,        "商用数量単位
END OF T_MARA.
TYPES:BEGIN OF T_MARA_KEY,
MATNR            TYPE MARA-MATNR,         "品目コード
END OF T_MARA_KEY.

* 通貨格納用
TYPES:BEGIN OF T_T001K,
WERKS            TYPE T001K-BWKEY,        "プラント
WAERS            TYPE T001-WAERS,         "通貨コード
END OF T_T001K.
TYPES:BEGIN OF T_T001K_KEY,
WERKS            TYPE T001K-BWKEY,        "プラント
END OF T_T001K_KEY.

* 購買Grテキスト格納用
TYPES:BEGIN OF T_T024,
EKGRP            TYPE T024-EKGRP,         "購買グループ
EKNAM            TYPE T024-EKNAM,         "購買グループテキスト
END OF T_T024.
TYPES:BEGIN OF T_T024_KEY,
EKGRP            TYPE T024-EKGRP,         "購買グループ
END OF T_T024_KEY.

* 購買伝票情報格納用
TYPES:BEGIN OF T_EKKO,
VBELV            TYPE VBFA-VBELV,         "先行販売伝票
POSNV            TYPE VBFA-POSNV,         "販売伝票前明細
VBELN            TYPE VBFA-VBELN,         "後続販売伝票
POSNN            TYPE VBFA-POSNN,         "販売伝票次明細
LIFNR            TYPE EKKO-LIFNR,         "仕入先
NAME1            TYPE LFA1-NAME1,         "名称１
END OF T_EKKO.

* 入庫日格納用
TYPES:BEGIN OF T_EKBE,
EBELN            TYPE EKBE-EBELN,         "購買伝票番号
EBELP            TYPE EKBE-EBELP,         "購買伝票明細
ZEKKN            TYPE EKBE-ZEKKN,         "連続番号
VGABE            TYPE EKBE-VGABE,         "履歴取引タイプ
GJAHR            TYPE EKBE-GJAHR,         "入出庫伝票年度
BELNR            TYPE EKBE-BELNR,         "入出庫伝票番号
BUZEI            TYPE EKBE-BUZEI,         "入出庫明細番号
BLDAT            TYPE EKBE-BLDAT,         "伝票日付
END OF T_EKBE.

* 受注納期格納用
TYPES:BEGIN OF T_VBEP,
VBELN            TYPE VBEP-VBELN,         "販売伝票番号
POSNR            TYPE VBEP-POSNR,         "販売明細番号
EDATU            TYPE VBEP-EDATU,         "納入日程日付
END OF T_VBEP.

* 単価算出情報格納用
TYPES:BEGIN OF T_MBEW,
MATNR            TYPE MBEW-MATNR,         "品目コード
WERKS            TYPE MBEW-BWKEY,         "評価レベル
SALK3            TYPE MBEW-SALK3,         "評価在庫合計額
VERPR            TYPE MBEW-VERPR,         "移動平均原価
PEINH            TYPE MBEW-PEINH,         "価格単位
END OF T_MBEW.
TYPES:BEGIN OF T_MBEW_KEY,
MATNR            TYPE MBEW-MATNR,         "品目コード
WERKS            TYPE MBEW-BWKEY,         "プラント
END OF T_MBEW_KEY.

* 在庫情報格納用
TYPES:BEGIN OF T_MARC,
MATNR            TYPE MARC-MATNR,         "品目コード
WERKS            TYPE MARC-WERKS,         "プラント
EKGRP            TYPE MARC-EKGRP,         "購買グループ
TRAME            TYPE MARC-TRAME,         "積送中在庫
LABST            TYPE MARD-LABST,         "利用可能在庫数量
SPEME            TYPE MARD-SPEME,         "保留在庫
LGPBE            TYPE MARD-LGPBE,         "棚番
END OF T_MARC.

* 仕入先情報格納用
TYPES:BEGIN OF T_EORD,
MATNR            TYPE EORD-MATNR,         "品目コード
WERKS            TYPE EORD-WERKS,         "プラント
ZEORD            TYPE EORD-ZEORD,         "レコード番号
LIFNR            TYPE EORD-LIFNR,         "仕入先
NAME1            TYPE LFA1-NAME1,         "名称１
END OF T_EORD.

* 預託在庫格納用
TYPES:BEGIN OF T_MSKU,
MATNR            TYPE MSKU-MATNR,         "品目コード
WERKS            TYPE MSKU-WERKS,         "プラント
CHARG            TYPE MSKU-CHARG,         "ロット番号
KUNNR            TYPE MSKU-KUNNR,         "得意先
KULAB            TYPE MSKU-KULAB,         "利用可能評価在庫
END OF T_MSKU.

* 支給在庫格納用
TYPES:BEGIN OF T_MSLB,
MATNR           TYPE MSLB-MATNR,          "品目コード
WERKS           TYPE MSLB-WERKS,          "プラント
CHARG           TYPE MSLB-CHARG,          "ロット番号
LIFNR           TYPE MSLB-LIFNR,          "仕入先
LBLAB           TYPE MSLB-LBLAB,          "利用可能評価在庫
END OF T_MSLB.

* 出済未出庫格納用(在庫データ)
TYPES:BEGIN OF T_ZS0020,
MATNR           TYPE ZS0020-MATNR,        "品目コード
WERKS           TYPE ZS0020-WERKS,        "プラント
LFIMG           TYPE ZS0020-LFIMG,        "出荷数量実績
END OF T_ZS0020.

* 出済未出庫格納用(個別購買データ)
TYPES:BEGIN OF T_LIPS,
VGBEL           TYPE LIPS-VGBEL,          "受注伝票番号
VGPOS           TYPE LIPS-VGPOS,          "受注伝票明細
LFIMG           TYPE LIPS-LFIMG,          "出荷数量実績
END OF T_LIPS.
*----------------------------------------------------------------------*
*  内部テーブル・構造定義
*----------------------------------------------------------------------*
* 受注在庫情報格納用
DATA: IT_MSKA           TYPE STANDARD TABLE OF T_MSKA,
WA_MSKA           TYPE T_MSKA.

* 受注伝票情報格納用
DATA: IT_VBAK           TYPE HASHED   TABLE OF T_VBAK
WITH UNIQUE KEY VBELN,
WA_VBAK           TYPE T_VBAK.

* 品目情報格納用
DATA: IT_MARA           TYPE HASHED   TABLE OF T_MARA
WITH UNIQUE KEY MATNR,
WA_MARA           TYPE T_MARA,
IT_MARA_KEY       TYPE STANDARD TABLE OF T_MARA_KEY,
WA_MARA_KEY       TYPE T_MARA_KEY.

* 通貨格納用
DATA: IT_T001K          TYPE HASHED   TABLE OF T_T001K
WITH UNIQUE KEY WERKS,
WA_T001K          TYPE T_T001K,
IT_T001K_KEY      TYPE STANDARD TABLE OF T_T001K_KEY,
WA_T001K_KEY      TYPE T_T001K_KEY.

* 購買Grテキスト格納用
DATA: IT_T024           TYPE HASHED   TABLE OF T_T024
WITH UNIQUE KEY EKGRP,
WA_T024           TYPE T_T024,
IT_T024_KEY       TYPE STANDARD TABLE OF T_T024_KEY,
WA_T024_KEY       TYPE T_T024_KEY.

* 購買伝票情報格納用
DATA: IT_EKKO           TYPE SORTED   TABLE OF T_EKKO
WITH NON-UNIQUE KEY VBELV POSNV,
WA_EKKO           TYPE T_EKKO.

* 入庫日格納用
DATA: IT_EKBE           TYPE STANDARD TABLE OF T_EKBE,
WA_EKBE           TYPE T_EKBE.

* 受注納期格納用
DATA: IT_VBEP           TYPE HASHED   TABLE OF T_VBEP
WITH UNIQUE KEY VBELN POSNR,
WA_VBEP           TYPE T_VBEP.

* 単価算出情報格納用
DATA: IT_MBEW           TYPE HASHED   TABLE OF T_MBEW
WITH UNIQUE KEY MATNR WERKS,
WA_MBEW           TYPE T_MBEW,
IT_MBEW_KEY       TYPE STANDARD TABLE OF T_MBEW_KEY,
WA_MBEW_KEY       TYPE T_MBEW_KEY.

* 在庫データテーブル登録用
DATA: IT_ZM0020         TYPE STANDARD TABLE OF ZM0020,
WA_ZM0020         TYPE ZM0020.

* 在庫情報格納用
DATA: IT_MARC           TYPE STANDARD TABLE OF T_MARC,
WA_MARC           TYPE T_MARC.

* 仕入先情報格納用
DATA: IT_EORD           TYPE SORTED TABLE OF T_EORD
WITH NON-UNIQUE KEY MATNR WERKS,
WA_EORD           TYPE T_EORD.

* 預託在庫格納用
DATA: IT_MSKU           TYPE SORTED TABLE OF T_MSKU
WITH NON-UNIQUE KEY MATNR WERKS,
WA_MSKU           TYPE T_MSKU.

* 支給在庫格納用
DATA: IT_MSLB           TYPE SORTED TABLE OF T_MSLB
WITH NON-UNIQUE KEY MATNR WERKS,
WA_MSLB           TYPE T_MSLB.

* 出済未出庫格納用(在庫データ)
DATA: IT_ZS0020         TYPE HASHED TABLE OF T_ZS0020
WITH UNIQUE KEY MATNR WERKS,
WA_ZS0020         TYPE T_ZS0020.

* 出済未出庫格納用(個別購買データ)
DATA: IT_LIPS           TYPE STANDARD TABLE OF T_LIPS,
WA_LIPS           TYPE T_LIPS.

*----------------------------------------------------------------------*
*  変数定義
*----------------------------------------------------------------------*
DATA:
CNT_INS               TYPE I.

*----------------------------------------------------------------------*
*  定数定義
*----------------------------------------------------------------------*
CONSTANTS:
CNS_MONTH_01(2)       TYPE N VALUE '01',
CNS_MONTH_12(2)       TYPE N VALUE '12',
CNS_SPRAS_J(1)        TYPE C VALUE 'J',
CNS_VBTYP_V(1)        TYPE C VALUE 'V',
CNS_BWART_101(3)      TYPE C VALUE '101',
CNS_ETENR_0001(4)     TYPE N VALUE '0001',
CNS_ON(1)             TYPE C VALUE 'X',
CNS_SOBKZ_W(1)        TYPE C VALUE 'W',
CNS_SOBKZ_O(1)        TYPE C VALUE 'O',
CNS_WBSTA_C(1)        TYPE C VALUE 'C'.

*----------------------------------------------------------------------*
*  選択画面定義
*----------------------------------------------------------------------*
*年
PARAMETERS     P_YEAR   TYPE ZM0020-ZYEAR OBLIGATORY.
*月
PARAMETERS     P_MONTH  TYPE ZM0020-ZMONTH OBLIGATORY.
*プラント
SELECT-OPTIONS S_WERKS  FOR  T001W-WERKS MEMORY ID WRK OBLIGATORY.
*購買グループ
SELECT-OPTIONS S_EKGRP  FOR  MARC-EKGRP  MEMORY ID EKG.
*品目コード
SELECT-OPTIONS S_MATNR  FOR  MARC-MATNR.
*棚番
SELECT-OPTIONS S_LGPBE  FOR  MARD-LGPBE.

*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.

* 月のチェック
IF P_MONTH BETWEEN CNS_MONTH_01 AND CNS_MONTH_12.
ELSE.
*   月 が正しくありません
MESSAGE E009 WITH TEXT-M01.
ENDIF.

*----------------------------------------------------------------------*
*  START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.

* 個別購買データ
PERFORM PROCESS_KOBETSU.

* 在庫データ
PERFORM PROCESS_ZAIKO.

* 処理対象データ存在チェック
IF IT_ZM0020 IS INITIAL.
*   帳簿棚卸一覧表に該当するデータがありません
MESSAGE S600 WITH TEXT-M02.
STOP.
ENDIF.

* テーブル更新
PERFORM UPDATE_ZM0020.

* 結果出力
* X件登録しました
MESSAGE S618 WITH CNT_INS.

*&---------------------------------------------------------------------*
*&      Form  PROCESS_KOBETSU
*&---------------------------------------------------------------------*
*       個別購買データ
*----------------------------------------------------------------------*
FORM PROCESS_KOBETSU.

* データ取得
PERFORM GET_DATA_KOBETSU.

* 編集
PERFORM EDIT_DATA_KOBETSU.

ENDFORM.                    " PROCESS_KOBETSU
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_KOBETSU
*&---------------------------------------------------------------------*
*       個別購買データ取得
*----------------------------------------------------------------------*
FORM GET_DATA_KOBETSU.

* 受注在庫情報
PERFORM GET_MSKA.
IF IT_MSKA IS INITIAL.
EXIT.
ENDIF.

* 受注伝票情報
PERFORM GET_VBAK.

* 品目情報
PERFORM GET_MARA_K.

* 通貨
PERFORM GET_T001K_K.

* 購買グループ名
PERFORM GET_T024_K.

* 購買伝票情報
PERFORM GET_EKKO.

* 入庫日
PERFORM GET_EKBE.

* 受注納期
PERFORM GET_VBEP.

* 単価・在庫金額
PERFORM GET_MBEW_K.

* 出済未出庫
PERFORM GET_LIPS.

ENDFORM.                    " GET_DATA_KOBETSU
*&---------------------------------------------------------------------*
*&      Form  GET_MSKA
*&---------------------------------------------------------------------*
*       受注在庫情報
*----------------------------------------------------------------------*
FORM GET_MSKA.

REFRESH IT_MSKA.

SELECT MSKA~MATNR         "品目コード
MSKA~WERKS         "プラント
MSKA~VBELN         "販売伝票番号
MSKA~POSNR         "販売明細番号
MSKA~KALAB         "利用可能評価在庫
MARC~EKGRP         "購買グループ
MARD~LGPBE         "棚番
INTO TABLE IT_MSKA
FROM MSKA
INNER JOIN MARC
ON MSKA~MATNR = MARC~MATNR
AND MSKA~WERKS = MARC~WERKS
INNER JOIN MARD
ON MARC~MATNR = MARD~MATNR
AND MARC~WERKS = MARD~WERKS
WHERE MSKA~MATNR IN S_MATNR
AND MSKA~WERKS IN S_WERKS
AND MSKA~KALAB <> 0
AND MARC~EKGRP IN S_EKGRP
AND MARD~LGPBE IN S_LGPBE.

ENDFORM.                    " GET_MSKA
*&---------------------------------------------------------------------*
*&      Form  GET_VBAK
*&---------------------------------------------------------------------*
*       受注伝票情報
*----------------------------------------------------------------------*
FORM GET_VBAK.

DATA : LT_MSKA TYPE STANDARD TABLE OF T_MSKA.

REFRESH IT_VBAK.
LT_MSKA = IT_MSKA.
SORT LT_MSKA BY VBELN.
DELETE ADJACENT DUPLICATES FROM LT_MSKA COMPARING VBELN.

SELECT VBAK~VBELN         "販売伝票番号
VBAK~BSTNK         "得意先発注番号
VBAK~KUNNR         "受注先
KNA1~NAME1         "名称１
INTO TABLE IT_VBAK
FROM VBAK
INNER JOIN KNA1
ON VBAK~KUNNR = KNA1~KUNNR
FOR ALL ENTRIES IN LT_MSKA
WHERE VBAK~VBELN = LT_MSKA-VBELN.

ENDFORM.                    " GET_VBAK
*&---------------------------------------------------------------------*
*&      Form  GET_MARA_K
*&---------------------------------------------------------------------*
*       品目情報(個別購買)
*----------------------------------------------------------------------*
FORM GET_MARA_K.

DATA : LT_MSKA TYPE STANDARD TABLE OF T_MSKA.

REFRESH : IT_MARA,IT_MARA_KEY.
* 品目コードの重複を削除
LT_MSKA = IT_MSKA.
SORT LT_MSKA BY MATNR.
DELETE ADJACENT DUPLICATES FROM LT_MSKA COMPARING MATNR.
LOOP AT LT_MSKA INTO WA_MSKA.
CLEAR WA_MARA_KEY.
WA_MARA_KEY-MATNR = WA_MSKA-MATNR.
APPEND WA_MARA_KEY TO IT_MARA_KEY.
ENDLOOP.

PERFORM GET_MARA TABLES IT_MARA_KEY.
FREE IT_MARA_KEY.

ENDFORM.                    " GET_MARA_K
*&---------------------------------------------------------------------*
*&      Form  GET_MARA
*&---------------------------------------------------------------------*
*       品目情報
*----------------------------------------------------------------------*
*      -->IT_KEY  抽出条件項目(品目コード)
*----------------------------------------------------------------------*
FORM GET_MARA TABLES   IT_KEY STRUCTURE WA_MARA_KEY.

SELECT MAKT~MATNR         "品目コード
MAKT~MAKTX         "品目テキスト
T006A~MSEH3        "商用数量単位
INTO TABLE IT_MARA
FROM MARA
INNER JOIN MAKT
ON MARA~MATNR = MAKT~MATNR
INNER JOIN T006A
ON MARA~MEINS = T006A~MSEHI
FOR ALL ENTRIES IN IT_KEY
WHERE MARA~MATNR  = IT_KEY-MATNR
AND MAKT~SPRAS  = CNS_SPRAS_J
AND T006A~SPRAS = CNS_SPRAS_J.

ENDFORM.                    " GET_MARA
*&---------------------------------------------------------------------*
*&      Form  GET_T001K_K
*&---------------------------------------------------------------------*
*       通貨コード(個別購買)
*----------------------------------------------------------------------*
FORM GET_T001K_K.

DATA : LT_MSKA TYPE STANDARD TABLE OF T_MSKA.

REFRESH : IT_T001K,IT_T001K_KEY.
* プラントの重複を削除
LT_MSKA = IT_MSKA.
SORT LT_MSKA BY WERKS.
DELETE ADJACENT DUPLICATES FROM LT_MSKA COMPARING WERKS.
LOOP AT LT_MSKA INTO WA_MSKA.
CLEAR WA_T001K_KEY.
WA_T001K_KEY-WERKS = WA_MSKA-WERKS.
APPEND WA_T001K_KEY TO IT_T001K_KEY.
ENDLOOP.

PERFORM GET_T001K TABLES IT_T001K_KEY.
FREE IT_T001K_KEY.

ENDFORM.                    " GET_T001K_K
*&---------------------------------------------------------------------*
*&      Form  GET_T001K
*&---------------------------------------------------------------------*
*       通貨コード
*----------------------------------------------------------------------*
*      -->IT_KEY  抽出条件項目(プラント)
*----------------------------------------------------------------------*
FORM GET_T001K TABLES   IT_KEY STRUCTURE WA_T001K_KEY.

SELECT T001K~BWKEY        "評価レベル
T001~WAERS         "通貨コード
INTO TABLE IT_T001K
FROM T001K
INNER JOIN T001
ON T001K~BUKRS = T001~BUKRS
FOR ALL ENTRIES IN IT_KEY
WHERE T001K~BWKEY = IT_KEY-WERKS.

ENDFORM.                    " GET_T001K
*&---------------------------------------------------------------------*
*&      Form  GET_T024_K
*&---------------------------------------------------------------------*
*       購買グループ名(個別購買)
*----------------------------------------------------------------------*
FORM GET_T024_K.

DATA : LT_MSKA TYPE STANDARD TABLE OF T_MSKA.

REFRESH : IT_T024,IT_T024_KEY.
* 購買グループの重複を削除
LT_MSKA = IT_MSKA.
SORT LT_MSKA BY EKGRP.
DELETE ADJACENT DUPLICATES FROM LT_MSKA COMPARING EKGRP.
LOOP AT LT_MSKA INTO WA_MSKA.
CLEAR WA_T024_KEY.
WA_T024_KEY-EKGRP = WA_MSKA-EKGRP.
APPEND WA_T024_KEY TO IT_T024_KEY.
ENDLOOP.

PERFORM GET_T024 TABLES IT_T024_KEY.
FREE IT_T024_KEY.

ENDFORM.                    " GET_T024_K
*&---------------------------------------------------------------------*
*&      Form  GET_T024
*&---------------------------------------------------------------------*
*       購買グループ名
*----------------------------------------------------------------------*
*      -->IT_KEY  抽出条件項目(購買グループ)
*----------------------------------------------------------------------*
FORM GET_T024 TABLES   IT_KEY STRUCTURE WA_T024_KEY.

SELECT EKGRP              "購買グループ
EKNAM              "購買グループテキスト
INTO TABLE IT_T024
FROM T024
FOR ALL ENTRIES IN IT_KEY
WHERE EKGRP = IT_KEY-EKGRP.

ENDFORM.                    " GET_T024
*&---------------------------------------------------------------------*
*&      Form  GET_EKKO
*&---------------------------------------------------------------------*
*       購買伝票情報
*----------------------------------------------------------------------*
FORM GET_EKKO.

DATA : LT_MSKA TYPE STANDARD TABLE OF T_MSKA.

REFRESH IT_EKKO.
* 販売伝票番号・明細番号の重複を削除
LT_MSKA = IT_MSKA.
SORT LT_MSKA BY VBELN POSNR.
DELETE ADJACENT DUPLICATES FROM LT_MSKA COMPARING VBELN POSNR.

SELECT VBFA~VBELV         "先行販売伝票
VBFA~POSNV         "販売伝票前明細
VBFA~VBELN         "後続販売伝票
VBFA~POSNN         "販売伝票次明細
EKKO~LIFNR         "仕入先
LFA1~NAME1         "仕入先名
INTO TABLE IT_EKKO
FROM VBFA
INNER JOIN EKKO
ON VBFA~VBELN = EKKO~EBELN
INNER JOIN LFA1
ON EKKO~LIFNR = LFA1~LIFNR
FOR ALL ENTRIES IN LT_MSKA
WHERE VBFA~VBELV   = LT_MSKA-VBELN
AND VBFA~POSNV   = LT_MSKA-POSNR
AND VBFA~VBTYP_N = CNS_VBTYP_V.

ENDFORM.                    " GET_EKKO
*&---------------------------------------------------------------------*
*&      Form  GET_EKBE
*&---------------------------------------------------------------------*
*       入庫日
*----------------------------------------------------------------------*
FORM GET_EKBE.

IF IT_EKKO IS INITIAL.
EXIT.
ENDIF.

REFRESH IT_EKBE.
SELECT EBELN              "購買伝票番号
EBELP              "購買伝票明細番号
ZEKKN              "連続番号
VGABE              "取引タイプ
GJAHR              "入出庫伝票年度
BELNR              "入出庫伝票番号
BUZEI              "入出庫明細番号
BLDAT              "伝票日付
INTO TABLE IT_EKBE
FROM EKBE
FOR ALL ENTRIES IN IT_EKKO
WHERE EBELN = IT_EKKO-VBELN
AND BWART = CNS_BWART_101.

ENDFORM.                    " GET_EKBE
*&---------------------------------------------------------------------*
*&      Form  GET_VBEP
*&---------------------------------------------------------------------*
*       受注納期
*----------------------------------------------------------------------*
FORM GET_VBEP.

REFRESH IT_VBEP.
SELECT VBELN         "販売伝票番号
POSNR         "販売明細番号
EDATU         "納入日程日付
INTO TABLE IT_VBEP
FROM VBEP
FOR ALL ENTRIES IN IT_MSKA
WHERE VBELN = IT_MSKA-VBELN
AND POSNR = IT_MSKA-POSNR
AND ETENR = CNS_ETENR_0001.

ENDFORM.                    " GET_VBEP
*&---------------------------------------------------------------------*
*&      Form  GET_MBEW_K
*&---------------------------------------------------------------------*
*       単価・在庫金額（個別購買)
*----------------------------------------------------------------------*
FORM GET_MBEW_K.

DATA : LT_MSKA TYPE STANDARD TABLE OF T_MSKA.

REFRESH : IT_MBEW,IT_MBEW_KEY.
* 品目×プラントの重複を削除
LT_MSKA = IT_MSKA.
SORT LT_MSKA BY MATNR WERKS.
DELETE ADJACENT DUPLICATES FROM LT_MSKA COMPARING MATNR WERKS.
LOOP AT LT_MSKA INTO WA_MSKA.
CLEAR WA_MBEW_KEY.
WA_MBEW_KEY-MATNR = WA_MSKA-MATNR.  "品目コード
WA_MBEW_KEY-WERKS = WA_MSKA-WERKS.  "プラント
APPEND WA_MBEW_KEY TO IT_MBEW_KEY.
ENDLOOP.

PERFORM GET_MBEW TABLES IT_MBEW_KEY.
FREE IT_MBEW_KEY.

ENDFORM.                    " GET_MBEW_K
*&---------------------------------------------------------------------*
*&      Form  GET_MBEW
*&---------------------------------------------------------------------*
*       単価・在庫金額
*----------------------------------------------------------------------*
*      -->IT_KEY  抽出条件項目(品目コード・プラント)
*----------------------------------------------------------------------*
FORM GET_MBEW TABLES   IT_KEY STRUCTURE WA_MBEW_KEY.

SELECT MATNR         "品目コード
BWKEY         "評価レベル
SALK3         "評価在庫合計額
VERPR         "移動平均原価
PEINH         "価格単位
INTO TABLE IT_MBEW
FROM MBEW
FOR ALL ENTRIES IN IT_KEY
WHERE MATNR = IT_KEY-MATNR
AND BWKEY = IT_KEY-WERKS.

ENDFORM.                    " GET_MBEW
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA_KOBETSU
*&---------------------------------------------------------------------*
*       個別購買データ編集
*----------------------------------------------------------------------*
FORM EDIT_DATA_KOBETSU.

DATA : LV_LFIMG TYPE LIPS-LFIMG.

* 入庫日を降順ソート　※同伝票番号で最新の日付を取得する為
SORT IT_EKBE BY EBELN BLDAT DESCENDING.

LOOP AT IT_MSKA INTO WA_MSKA.
CLEAR WA_ZM0020.

*   受注伝票情報検索
CLEAR WA_VBAK.
READ TABLE IT_VBAK  INTO WA_VBAK
WITH TABLE KEY VBELN = WA_MSKA-VBELN.
*   品目情報
CLEAR WA_MARA.
READ TABLE IT_MARA  INTO WA_MARA
WITH TABLE KEY MATNR = WA_MSKA-MATNR.
*   通貨
CLEAR WA_T001K.
READ TABLE IT_T001K INTO WA_T001K
WITH TABLE KEY WERKS = WA_MSKA-WERKS.
*   購買グループ名
CLEAR WA_T024.
READ TABLE IT_T024  INTO WA_T024
WITH TABLE KEY EKGRP = WA_MSKA-EKGRP.
*   購買伝票情報
CLEAR WA_EKKO.
READ TABLE IT_EKKO  INTO WA_EKKO
WITH TABLE KEY VBELV = WA_MSKA-VBELN
POSNV = WA_MSKA-POSNR.
*   入庫日
CLEAR WA_EKBE.
LOOP AT IT_EKBE INTO WA_EKBE
WHERE EBELN = WA_EKKO-VBELN.
*     取得できたらLOOPを抜ける
EXIT.
ENDLOOP.

*   受注納期
CLEAR WA_VBEP.
READ TABLE IT_VBEP  INTO WA_VBEP
WITH TABLE KEY VBELN = WA_MSKA-VBELN
POSNR = WA_MSKA-POSNR.
*   単価・在庫金額
CLEAR WA_MBEW.
READ TABLE IT_MBEW  INTO WA_MBEW
WITH TABLE KEY MATNR = WA_MSKA-MATNR
WERKS = WA_MSKA-WERKS.
*   出済未出庫
CLEAR LV_LFIMG.
LOOP AT IT_LIPS INTO WA_LIPS WHERE VGBEL = WA_MSKA-VBELN
AND VGPOS = WA_MSKA-POSNR.
*     未出庫の出荷数を集計
LV_LFIMG = LV_LFIMG + WA_LIPS-LFIMG.
ENDLOOP.

WA_ZM0020-ZYEAR   = P_YEAR.                  "年
WA_ZM0020-ZMONTH  = P_MONTH.                 "月
WA_ZM0020-WERKS   = WA_MSKA-WERKS.           "プラント
WA_ZM0020-MATNR   = WA_MSKA-MATNR.           "品目コード
WA_ZM0020-VBELN   = WA_MSKA-VBELN.           "受注番号
WA_ZM0020-POSNR   = WA_MSKA-POSNR.           "明細番号
WA_ZM0020-MAKTX   = WA_MARA-MAKTX.           "品目名
WA_ZM0020-LGPBE   = WA_MSKA-LGPBE.           "棚番
WA_ZM0020-MSEH3   = WA_MARA-MSEH3.           "単位
WA_ZM0020-WAERS   = WA_T001K-WAERS.          "通貨
WA_ZM0020-EKNAM   = WA_T024-EKNAM.           "グループ名
WA_ZM0020-KUNNR   = WA_VBAK-KUNNR.           "得意先
WA_ZM0020-KNAME   = WA_VBAK-NAME1.           "得意先名
WA_ZM0020-BSTNK   = WA_VBAK-BSTNK.           "得意先発注番号
WA_ZM0020-LIFNR   = WA_EKKO-LIFNR.           "仕入先
WA_ZM0020-LNAME   = WA_EKKO-NAME1.           "仕入先名
WA_ZM0020-BLDAT   = WA_EKBE-BLDAT.           "入庫日
WA_ZM0020-EDATU   = WA_VBEP-EDATU.           "受注納期
WA_ZM0020-LABST   = WA_MSKA-KALAB.           "当月残数
WA_ZM0020-LFIMG   = LV_LFIMG.                "出済未出庫
WA_ZM0020-VERPR   = WA_MBEW-VERPR.           "平均単価
WA_ZM0020-SALK3   = WA_MBEW-VERPR / WA_MBEW-PEINH
* WA_ZM0020-LABST.       "在庫金額
WA_ZM0020-PEINH   = WA_MBEW-PEINH.           "価格単位
APPEND WA_ZM0020 TO IT_ZM0020.
ENDLOOP.

FREE: IT_MSKA,IT_VBAK,IT_MARA,IT_T001K,IT_T024,
IT_EKKO,IT_EKBE,IT_VBEP,IT_MBEW.

ENDFORM.                    " EDIT_DATA_KOBETSU
*&---------------------------------------------------------------------*
*&      Form  PROCESS_ZAIKO
*&---------------------------------------------------------------------*
*       在庫データ
*----------------------------------------------------------------------*
FORM PROCESS_ZAIKO.

* データ取得
PERFORM GET_DATA_ZAIKO.

* 編集
PERFORM EDIT_DATA_ZAIKO.

ENDFORM.                    " PROCESS_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_ZAIKO
*&---------------------------------------------------------------------*
*       在庫データ取得
*----------------------------------------------------------------------*
FORM GET_DATA_ZAIKO.

* 在庫情報
PERFORM GET_MARC.
IF IT_MARC IS INITIAL.
EXIT.
ENDIF.

* 購買グループ名
PERFORM GET_T024_Z.

* 品目情報
PERFORM GET_MARA_Z.

* 通貨
PERFORM GET_T001K_Z.

* 仕入先情報
PERFORM GET_EORD.

* 預託在庫
PERFORM GET_MSKU.

* 支給在庫
PERFORM GET_MSLB.

* 単価・在庫金額
PERFORM GET_MBEW_Z.

* 出済未出庫
PERFORM GET_ZS0020.

ENDFORM.                    " GET_DATA_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  GET_MARC
*&---------------------------------------------------------------------*
*       在庫情報
*----------------------------------------------------------------------*
FORM GET_MARC.

REFRESH IT_MARC.
SELECT MARC~MATNR         "品目コード
MARC~WERKS         "プラント
MARC~EKGRP         "購買グループ
MARC~TRAME         "積送中在庫
MARD~LABST         "利用可能在庫数量
MARD~SPEME         "保留在庫
MARD~LGPBE         "棚番
INTO TABLE IT_MARC
FROM MARC
INNER JOIN MARD
ON MARC~MATNR = MARD~MATNR
AND MARC~WERKS = MARD~WERKS
WHERE MARC~MATNR IN S_MATNR
AND MARC~WERKS IN S_WERKS
AND MARC~EKGRP IN S_EKGRP
AND MARD~LGPBE IN S_LGPBE.

ENDFORM.                    " GET_MARC
*&---------------------------------------------------------------------*
*&      Form  GET_T024_Z
*&---------------------------------------------------------------------*
*       購買グループ名(在庫)
*----------------------------------------------------------------------*
FORM GET_T024_Z.

DATA : LT_MARC TYPE STANDARD TABLE OF T_MARC.

REFRESH : IT_T024,IT_T024_KEY.
* 購買グループの重複を削除
LT_MARC = IT_MARC.
SORT LT_MARC BY EKGRP.
DELETE ADJACENT DUPLICATES FROM LT_MARC COMPARING EKGRP.
LOOP AT LT_MARC INTO WA_MARC.
CLEAR WA_T024_KEY.
WA_T024_KEY-EKGRP = WA_MARC-EKGRP.
APPEND WA_T024_KEY TO IT_T024_KEY.
ENDLOOP.

PERFORM GET_T024 TABLES IT_T024_KEY.
FREE IT_T024_KEY.

ENDFORM.                    " GET_T024_Z
*&---------------------------------------------------------------------*
*&      Form  GET_MARA_Z
*&---------------------------------------------------------------------*
*       品目情報(在庫)
*----------------------------------------------------------------------*
FORM GET_MARA_Z.

DATA : LT_MARC TYPE STANDARD TABLE OF T_MARC.

REFRESH : IT_MARA,IT_MARA_KEY.
* 品目コードの重複を削除
LT_MARC = IT_MARC.
SORT LT_MARC BY MATNR.
DELETE ADJACENT DUPLICATES FROM LT_MARC COMPARING MATNR.
LOOP AT LT_MARC INTO WA_MARC.
CLEAR WA_MARA_KEY.
WA_MARA_KEY-MATNR = WA_MARC-MATNR.
APPEND WA_MARA_KEY TO IT_MARA_KEY.
ENDLOOP.

PERFORM GET_MARA TABLES IT_MARA_KEY.
FREE IT_MARA_KEY.

ENDFORM.                    " GET_MARA_Z
*&---------------------------------------------------------------------*
*&      Form  GET_T001K_Z
*&---------------------------------------------------------------------*
*       通貨コード(在庫)
*----------------------------------------------------------------------*
FORM GET_T001K_Z.

DATA : LT_MARC TYPE STANDARD TABLE OF T_MARC.

REFRESH : IT_T001K,IT_T001K_KEY.
* プラントの重複を削除
LT_MARC = IT_MARC.
SORT IT_MARC BY WERKS.
DELETE ADJACENT DUPLICATES FROM LT_MARC COMPARING WERKS.
LOOP AT LT_MARC INTO WA_MARC.
CLEAR WA_T001K_KEY.
WA_T001K_KEY-WERKS = WA_MARC-WERKS.
APPEND WA_T001K_KEY TO IT_T001K_KEY.
ENDLOOP.

PERFORM GET_T001K TABLES IT_T001K_KEY.
FREE IT_T001K_KEY.

ENDFORM.                    " GET_T001K_Z
*&---------------------------------------------------------------------*
*&      Form  GET_EORD
*&---------------------------------------------------------------------*
*       仕入先情報
*----------------------------------------------------------------------*
FORM GET_EORD.

DATA : LT_MARC TYPE STANDARD TABLE OF T_MARC.

LT_MARC = IT_MARC.
* 品目・プラントの重複を削除
SORT LT_MARC BY MATNR WERKS.
DELETE ADJACENT DUPLICATES FROM LT_MARC COMPARING MATNR WERKS.

REFRESH IT_EORD.
SELECT EORD~MATNR         "品目コード
EORD~WERKS         "プラント
EORD~ZEORD         "レコード番号
EORD~LIFNR         "仕入先
LFA1~NAME1         "名称１
INTO TABLE IT_EORD
FROM EORD
INNER JOIN LFA1
ON EORD~LIFNR = LFA1~LIFNR
FOR ALL ENTRIES IN LT_MARC
WHERE EORD~MATNR =  LT_MARC-MATNR
AND EORD~WERKS =  LT_MARC-WERKS
AND EORD~VDATU <= SY-DATUM
AND EORD~BDATU >= SY-DATUM
AND EORD~FLIFN =  CNS_ON.

ENDFORM.                    " GET_EORD
*&---------------------------------------------------------------------*
*&      Form  GET_MSKU
*&---------------------------------------------------------------------*
*       預託在庫
*----------------------------------------------------------------------*
FORM GET_MSKU.

DATA : LT_MARC TYPE STANDARD TABLE OF T_MARC.

LT_MARC = IT_MARC.
* 品目・プラントの重複を削除
SORT LT_MARC BY MATNR WERKS.
DELETE ADJACENT DUPLICATES FROM LT_MARC COMPARING MATNR WERKS.

REFRESH IT_MSKU.
SELECT MATNR         "品目コード
WERKS         "プラント
CHARG         "ロット番号
KUNNR         "得意先
KULAB         "利用可能評価在庫
INTO TABLE IT_MSKU
FROM MSKU
FOR ALL ENTRIES IN LT_MARC
WHERE MATNR = LT_MARC-MATNR
AND WERKS = LT_MARC-WERKS
AND SOBKZ = CNS_SOBKZ_W.

ENDFORM.                    " GET_MSKU
*&---------------------------------------------------------------------*
*&      Form  GET_MSLB
*&---------------------------------------------------------------------*
*       支給在庫
*----------------------------------------------------------------------*
FORM GET_MSLB.

DATA : LT_MARC TYPE STANDARD TABLE OF T_MARC.

LT_MARC = IT_MARC.
* 品目・プラントの重複を削除
SORT LT_MARC BY MATNR WERKS.
DELETE ADJACENT DUPLICATES FROM LT_MARC COMPARING MATNR WERKS.

REFRESH IT_MSLB.
SELECT MATNR          "品目コード
WERKS          "プラント
CHARG          "ロット番号
LIFNR          "仕入先
LBLAB          "利用可能評価在庫
INTO TABLE IT_MSLB
FROM MSLB
FOR ALL ENTRIES IN LT_MARC
WHERE MATNR = LT_MARC-MATNR
AND WERKS = LT_MARC-WERKS
AND SOBKZ = CNS_SOBKZ_O.

ENDFORM.                    " GET_MSLB
*&---------------------------------------------------------------------*
*&      Form  GET_MBEW_Z
*&---------------------------------------------------------------------*
*       単価・在庫金額(在庫)
*----------------------------------------------------------------------*
FORM GET_MBEW_Z.

DATA : LT_MARC TYPE STANDARD TABLE OF T_MARC.

REFRESH : IT_MBEW,IT_MBEW_KEY.
* 品目×プラントの重複を削除
LT_MARC = IT_MARC.
SORT LT_MARC BY MATNR WERKS.
DELETE ADJACENT DUPLICATES FROM LT_MARC COMPARING MATNR WERKS.
LOOP AT LT_MARC INTO WA_MARC.
CLEAR WA_MBEW_KEY.
WA_MBEW_KEY-MATNR = WA_MARC-MATNR. "品目コード
WA_MBEW_KEY-WERKS = WA_MARC-WERKS. "プラント
APPEND WA_MBEW_KEY TO IT_MBEW_KEY.
ENDLOOP.

PERFORM GET_MBEW TABLES IT_MBEW_KEY.
FREE IT_MBEW_KEY.

ENDFORM.                    " GET_MBEW_Z
*&---------------------------------------------------------------------*
*&      Form  GET_ZS0020
*&---------------------------------------------------------------------*
*       出済未出庫
*----------------------------------------------------------------------*
FORM GET_ZS0020.

DATA : LT_MARC TYPE STANDARD TABLE OF T_MARC.

LT_MARC = IT_MARC.
* 品目・プラントの重複を削除
SORT LT_MARC BY MATNR WERKS.
DELETE ADJACENT DUPLICATES FROM LT_MARC COMPARING MATNR WERKS.

REFRESH IT_ZS0020.
SELECT MATNR        "品目コード
WERKS        "プラント
LFIMG        "出荷数量実績
INTO TABLE IT_ZS0020
FROM ZS0020
FOR ALL ENTRIES IN LT_MARC
WHERE MATNR = LT_MARC-MATNR
AND WERKS = LT_MARC-WERKS.

ENDFORM.                    " GET_ZS0020
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA_ZAIKO
*&---------------------------------------------------------------------*
*       在庫データ編集
*----------------------------------------------------------------------*
FORM EDIT_DATA_ZAIKO.

LOOP AT IT_MARC INTO WA_MARC.
CLEAR WA_ZM0020.

*   購買グループ名
CLEAR WA_T024.
READ TABLE IT_T024  INTO WA_T024
WITH TABLE KEY EKGRP = WA_MARC-EKGRP.

*   品目情報
CLEAR WA_MARA.
READ TABLE IT_MARA  INTO WA_MARA
WITH TABLE KEY MATNR = WA_MARC-MATNR.

*   通貨コード
CLEAR WA_T001K.
READ TABLE IT_T001K INTO WA_T001K
WITH TABLE KEY WERKS = WA_MARC-WERKS.

*   仕入先情報
CLEAR WA_EORD.
READ TABLE IT_EORD  INTO WA_EORD
WITH TABLE KEY MATNR = WA_MARC-MATNR
WERKS = WA_MARC-WERKS.
*   預託在庫
CLEAR WA_MSKU.
READ TABLE IT_MSKU  INTO WA_MSKU
WITH TABLE KEY MATNR = WA_MARC-MATNR
WERKS = WA_MARC-WERKS.
*   支給在庫
CLEAR WA_MSLB.
READ TABLE IT_MSLB  INTO WA_MSLB
WITH TABLE KEY MATNR = WA_MARC-MATNR
WERKS = WA_MARC-WERKS.
*   出済未出庫
CLEAR WA_ZS0020.
READ TABLE IT_ZS0020 INTO WA_ZS0020
WITH TABLE KEY MATNR = WA_MARC-MATNR
WERKS = WA_MARC-WERKS.
*   単価・在庫金額
CLEAR WA_MBEW.
READ TABLE IT_MBEW  INTO WA_MBEW
WITH TABLE KEY MATNR = WA_MARC-MATNR
WERKS = WA_MARC-WERKS.

WA_ZM0020-ZYEAR   = P_YEAR.                             "年
WA_ZM0020-ZMONTH  = P_MONTH.                            "月
WA_ZM0020-WERKS   = WA_MARC-WERKS.                      "プラント
WA_ZM0020-MATNR   = WA_MARC-MATNR.                      "品目コード
WA_ZM0020-MAKTX   = WA_MARA-MAKTX.                      "品目名
WA_ZM0020-LGPBE   = WA_MARC-LGPBE.                      "棚番
WA_ZM0020-MSEH3   = WA_MARA-MSEH3.                      "単位
WA_ZM0020-WAERS   = WA_T001K-WAERS.                     "通貨
WA_ZM0020-EKNAM   = WA_T024-EKNAM.                      "グループ名
WA_ZM0020-LIFNR   = WA_EORD-LIFNR.                      "仕入先
WA_ZM0020-LNAME   = WA_EORD-NAME1.                      "仕入先名
WA_ZM0020-LABST   = WA_MARC-LABST.                      "当月残数
WA_ZM0020-KULAB   = WA_MSKU-KULAB.                      "預託在庫
WA_ZM0020-LBLAB   = WA_MSLB-LBLAB.                      "支給在庫
WA_ZM0020-TRAME   = WA_MARC-TRAME.                      "転送中在庫
WA_ZM0020-LFIMG   = WA_ZS0020-LFIMG.                    "出済未出庫
WA_ZM0020-SPEME   = WA_MARC-SPEME.                      "保留在庫
WA_ZM0020-VERPR   = WA_MBEW-VERPR.                      "平均単価
WA_ZM0020-SALK3   = WA_MBEW-SALK3.                      "在庫金額
WA_ZM0020-PEINH   = WA_MBEW-PEINH.                      "価格単位

*   当月残数・預託在庫・支給在庫・転送中在庫・保留在庫
*   すべてがゼロの場合、処理対象外とする。
IF WA_ZM0020-LABST = 0  AND  "当月残数
WA_ZM0020-KULAB = 0  AND  "預託在庫
WA_ZM0020-LBLAB = 0  AND  "支給在庫
WA_ZM0020-TRAME = 0  AND  "転送中在庫
WA_ZM0020-SPEME = 0.      "保留在庫
CONTINUE.
ELSE.
APPEND WA_ZM0020 TO IT_ZM0020.
ENDIF.
ENDLOOP.

FREE: IT_MARC,IT_T024,IT_MARA,IT_T001K,
IT_EORD,IT_MSKU,IT_MSLB,IT_ZS0020,IT_MBEW.

ENDFORM.                    " EDIT_DATA_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZM0020
*&---------------------------------------------------------------------*
*       テーブル更新
*----------------------------------------------------------------------*
FORM UPDATE_ZM0020.

* テーブルロック
PERFORM ENQUEUE_ZM0020.

* データ削除
PERFORM DELETE_ZM0020.

* データ登録
PERFORM INSERT_ZM0020.

* ロック解除
PERFORM DEQUEUE_ZM0020.

ENDFORM.                    " UPDATE_ZM0020
*&---------------------------------------------------------------------*
*&      Form  ENQUEUE_ZM0020
*&---------------------------------------------------------------------*
*       テーブルロック
*----------------------------------------------------------------------*
FORM ENQUEUE_ZM0020.

CALL FUNCTION 'ENQUEUE_EZ_ZM0020'
EXPORTING
ZYEAR                = P_YEAR
ZMONTH               = P_MONTH
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.

CASE SY-SUBRC.
WHEN 0.
WHEN 1.
*     棚卸データテーブル は他のユーザによりロックされています
MESSAGE S004 WITH TEXT-M03.
STOP.
WHEN OTHERS.
*     ロックできませんでした
MESSAGE S202.
STOP.
ENDCASE.

ENDFORM.                    " ENQUEUE_ZM0020
*&---------------------------------------------------------------------*
*&      Form  DELETE_ZM0020
*&---------------------------------------------------------------------*
*       データ削除
*----------------------------------------------------------------------*
FORM DELETE_ZM0020.

DELETE FROM ZM0020 WHERE ZYEAR  = P_YEAR
AND ZMONTH = P_MONTH.

* 削除エラー時
CASE SY-SUBRC.
WHEN 0 OR 4.
WHEN OTHERS.
*     ロールバック
ROLLBACK WORK.
*     ロック解除
PERFORM DEQUEUE_ZM0020.
*     棚卸データテーブルの削除でエラーが発生しました
MESSAGE S400 WITH TEXT-M04.
STOP.
ENDCASE.

ENDFORM.                    " DELETE_ZM0020
*&---------------------------------------------------------------------*
*&      Form  INSERT_ZM0020
*&---------------------------------------------------------------------*
*       データ登録
*----------------------------------------------------------------------*
FORM INSERT_ZM0020.

INSERT ZM0020 FROM TABLE IT_ZM0020 ACCEPTING DUPLICATE KEYS.

* 登録正常時
IF SY-SUBRC = 0.
*   コミット
COMMIT WORK.
*   登録件数取得
CNT_INS = SY-DBCNT.

* 登録エラー時
ELSE.
*   ロールバック
ROLLBACK WORK.
*   ロック解除
PERFORM DEQUEUE_ZM0020.
*   棚卸データテーブルの登録でエラーが発生しました
MESSAGE S400 WITH TEXT-M05.
STOP.
ENDIF.

ENDFORM.                    " INSERT_ZM0020
*&---------------------------------------------------------------------*
*&      Form  DEQUEUE_ZM0020
*&---------------------------------------------------------------------*
*       ロック解除
*----------------------------------------------------------------------*
FORM DEQUEUE_ZM0020.

CALL FUNCTION 'DEQUEUE_EZ_ZM0020'
EXPORTING
ZYEAR             = P_YEAR
ZMONTH            = P_MONTH.

ENDFORM.                    " DEQUEUE_ZM0020
*&---------------------------------------------------------------------*
*&      Form  GET_LIPS
*&---------------------------------------------------------------------*
*       出済未出庫(個別購買データ)
*----------------------------------------------------------------------*
FORM GET_LIPS.

REFRESH IT_LIPS.
SELECT LIPS~VGBEL    "参照伝票番号
LIPS~VGPOS    "参照伝票明細
LIPS~LFIMG    "出荷済未出庫
INTO TABLE IT_LIPS
FROM LIPS
INNER JOIN VBUP
ON LIPS~VBELN = VBUP~VBELN
AND LIPS~POSNR = VBUP~POSNR
FOR ALL ENTRIES IN IT_MSKA
WHERE LIPS~VGBEL =  IT_MSKA-VBELN
AND LIPS~VGPOS =  IT_MSKA-POSNR
AND VBUP~WBSTA <> CNS_WBSTA_C.

ENDFORM.                    " GET_LIPS
