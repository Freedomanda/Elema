REPORT zb070200 MESSAGE-ID y1 NO STANDARD PAGE HEADING
LINE-SIZE 170 LINE-COUNT 58.
************************************************************************
* プログラムID  :ZB070200
* プログラム名  :得意先コード登録・更新確認リスト
* 作成日        :2007/11/27
* 作成者        :DMC
* 変更履歴      :
* 2008/04/09    DMC
* 2008/12/25    NDSC　与信関連テキスト取得変更
* 2010/05/26    Solfis 日付を単一指定に修正
************************************************************************
*----------------------------------------------------------------------*
*     宣言部
*----------------------------------------------------------------------*
TABLES:     cdhdr,                     "変更伝票ヘッダ
cdpos,                     "変更伝票明細
kna1,                      "得意先マスタ: 一般データ
adrc,                      "アドレス(中央アドレス管理)
t005t,                     "国名
t002t,                     "言語キーテキスト
* Add 2007.12.25 --->
t005u,                     "地域テキスト
* Add 2007.12.25 <---
knb1,                      "得意先マスタ（会社コード）
skat,                      "勘定コードマスタレコード
t052u,                     "支払条件の独自説明
t042z,                     "自動支払の支払方法
knvh,                      "得意先階層
b930,                      "出荷タイプ
b931,                      "出荷タイプ
t685t,                     "条件: タイプ: テキスト
nach,                      "詳細出力データ
knvi,                      "得意先マスタ 税コード
knkk,                      "与信管理領域データ
knvv,                      "得意先マスタ: 販売データ
tvkbt,                     "組織単位: 営業所: テキスト
tvgrt,                     "組織単位: 販売グループ: テキスト
t151t,                     "得意先: 得意先グループ: テキスト
tcurt,                     "通貨コードテキスト
tvkdt,                     "得意先価格決定区分: テキスト
tvsdt,                     "得意先: 統計グループ: テキスト
tprit,                     "得意先: 納入優先順位テキスト
tvsbt,                     "出荷条件: テキスト
t001w,                     "プラント/支店
tvktt,                     "勘定設定グループ: テキスト
tskdt,                     "税: 得意先テキスト
knvp,                      "得意先マスタ 取引先機能
pa0002,                    "HR マスタレコード
tvv1t.                     "得意先グループ 1: テキスト
*---------------------------------------------------------------------*
*       構造定義          　　　　                                    *
*---------------------------------------------------------------------*
**対象ヘッダデータ
TYPES:BEGIN OF typ_hdata.
INCLUDE STRUCTURE cdhdr.
TYPES:END   OF typ_hdata.
**対象明細データ
TYPES:BEGIN OF typ_mdata.
INCLUDE STRUCTURE cdpos.
TYPES:END   OF typ_mdata.
**出力データ
TYPES:BEGIN OF typ_otdata,
lname      LIKE tsp03l-lname,    "スプール: デバイス名
padest     LIKE tsp03l-padest,   "スプール: 出力デバイスの略称
kunnr      LIKE kna1-kunnr,      "得意先コード
name1      LIKE adrc-name1,                          "名称1
name1m(1)  TYPE c,                                   "名称1変更
name2      LIKE adrc-name2,                          "名称2
name2m(1)  TYPE c,                                   "名称2変更
sortl      LIKE adrc-sort1,      "検索用語
street     LIKE adrc-street,     "都道府県名
streetm(1) TYPE c,               "都道府県名変更
post_code  LIKE adrc-post_code1, "郵便番号
pcodem(1)  TYPE c,               "郵便番号変更
city       LIKE adrc-city1,      "市区町村
citym(1)   TYPE c,               "市区町村変更
country    LIKE adrc-country,    "国コード
ctrm(1)    TYPE c,               "国コード変更
landx      LIKE t005t-landx,     "国テキスト
landxm(1)  TYPE c,               "国テキスト変更
langu      LIKE adrc-langu,      "言語キー
langum(1)  TYPE c,               "言語キー変更
sptxt      LIKE t002t-sptxt,     "言語テキスト
sptxtm(1)  TYPE c,               "言語テキスト変更
tel        LIKE adrc-tel_number, "電話番号
telm(1)    TYPE c,               "電話番号変更
text1(132) TYPE c,               "コメント
text2(132) TYPE c,               "上場区分
text3(132) TYPE c,               "評価ランク
text4(132) TYPE c,               "備考
akont      LIKE knb1-akont,      "統制勘定
akontm(1)  TYPE c,               "統制勘定変更
txt20      LIKE skat-txt20,      "勘定コードテキスト
txt20m(1)  TYPE c,               "勘定コードテキスト変更
zterm      LIKE knb1-zterm,      "支払条件
ztermm(1)  TYPE c,               "支払条件変更
text5      LIKE t052u-text1,     "支払条件テキスト
text5m(1)  TYPE c,               "支払条件テキスト変更
zwels      LIKE knb1-zwels,      "支払方法
zwelsm(1)  TYPE c,               "支払方法変更
text6(300) TYPE c,               "支払方法テキスト
text6m(1)  TYPE c,               "支払方法テキスト変更
kverm      LIKE knb1-kverm,      "コメント(会社コード)
kvermm(1)  TYPE c,               "コメント変更(会社コード)
text7(132) TYPE c,               "入金条件メモ
text8(132) TYPE c,               "高千穂請求書
text9(132) TYPE c,               "納品書種別
hkunnr     LIKE knvh-hkunnr,     "得意先階層
vtext3     LIKE t685t-vtext,     "納品書区分
ldest      LIKE tsp03l-lname,    "納品書プリンタ
klimk(16)   TYPE c,              "与信限度額
klimkm(1)   TYPE c,              "与信限度額変更
texta1(132) TYPE c,              "上場区分
texta2(132) TYPE c,              "評点
texta3(132) TYPE c,              "企業コード
texta4(132) TYPE c,              "与信情報履歴
vkbur       LIKE knvv-vkbur,     "営業所
vkburm(1)   TYPE c,              "営業所変更
bezei       LIKE tvkbt-bezei,    "営業所テキスト
bezeim(1)   TYPE c,              "営業所テキスト変更
vkgrp       LIKE knvv-vkgrp,     "営業グループ
vkgrpm(1)   TYPE c,              "営業グループ変更
bezei4      LIKE tvgrt-bezei,    "営業グループテキスト
bezei4m(1)  TYPE c,              "営業グループテキスト変更
kdgrp       LIKE knvv-kdgrp,     "得意先グループ
kdgrpm(1)   TYPE c,              "得意先グループ変更
ktext       LIKE t151t-ktext,    "得意先グループテキスト
ktextm(1)   TYPE c,              "得意先グループテキスト変更
waers       LIKE knvv-waers,     "通貨コード
waersm(1)   TYPE c,              "通貨コード変更
ltext       LIKE tcurt-ltext,    "通貨コードテキスト
ltextm(1)   TYPE c,              "通貨コードテキスト変更
kalks       LIKE knvv-kalks,     "得意先価格決定
kalksm(1)   TYPE c,              "得意先価格決定変更
vtext       LIKE tvkdt-vtext,    "得意先価格決定テキスト
vtextm(1)   TYPE c,              "得意先価格決定テキスト変更
versg       LIKE knvv-versg,     "統計グループ
bezei20     LIKE tvsdt-bezei20,  "統計グループテキスト
lprio       LIKE knvv-lprio,     "出荷優先順位
lpriom(1)   TYPE c,              "出荷優先順位変更
bezei2      LIKE tprit-bezei,    "出荷優先順位テキスト
bezei2m(1)  TYPE c,              "出荷優先順位テキスト変更
vsbed       LIKE knvv-vsbed,     "出荷条件
vsbedm(1)   TYPE c,              "出荷条件変更
vtext2      LIKE tvsbt-vtext,    "出荷条件テキスト
vtext2m(1)  TYPE c,              "出荷条件テキスト変更
vwerk       LIKE knvv-vwerk,     "出荷プラント
vwerkm(1)   TYPE c,              "出荷プラント変更
name        LIKE t001w-name1,    "出荷プラントテキスト
namem(1)    TYPE c,              "出荷プラントテキスト変更
kzazu       LIKE knvv-kzazu,     "受注結合出荷区分
kzazum(1)   TYPE c,              "受注結合出荷区分変更
zterm2      LIKE knvv-zterm,     "支払条件(販売エリア)
zterm2m(1)  TYPE c,              "支払条件変更
texta5      LIKE t052u-text1,    "支払条件テキスト(販売エリア)
texta5m(1)  TYPE c,              "支払条件テキスト変更
ktgrd       LIKE knvv-ktgrd,     "勘定設定グループ
ktgrdm(1)   TYPE c,              "勘定設定グループ変更
vtext5      LIKE tvktt-vtext,    "勘定設定グループテキスト
vtext5m(1)  TYPE c,              "勘定設定グループテキスト変更
taxkd       LIKE knvi-taxkd,     "税分類
taxkdm(1)   TYPE c,              "税分類変更
vtext4      LIKE tskdt-vtext,    "税分類テキスト
vtext4m(1)  TYPE c,              "税分類テキスト変更
pernr       LIKE knvp-pernr,     "営業員
pernrm(1)   TYPE c,              "営業員変更
pernrt(50)  TYPE c,              "営業員テキスト
pernrtm(1)  TYPE c,              "営業員テキスト変更
kvgr1       LIKE knvv-kvgr1,     "得意先グループ1
kvgr1m(1)   TYPE c,              "得意先グループ1変更
bezei3      LIKE tvv1t-bezei,    "得意先グループ1テキスト
bezei3m(1)  TYPE c,              "得意先グループ1テキスト変更
erdat       LIKE kna1-erdat,     "登録日
ernam       LIKE kna1-ernam,     "登録者
udate       LIKE cdhdr-udate,    "更新日
username    LIKE cdhdr-username, "更新者
* Add 2007.12.25 --->
region      LIKE adrc-region ,
regionm(1)  TYPE c ,
regiont     LIKE t005u-bezei ,
* Add 2007.12.25 <---
END   OF typ_otdata.
* プリンタ/トレイ型
TYPES: BEGIN OF typ_printa,
lname      TYPE tsp03l-lname,      " デバイス名(長)
padest     TYPE tsp03l-padest,     " デバイスの略称
END   OF typ_printa.
*---------------------------------------------------------------------*
*       構造定義                                                 　　 *
*---------------------------------------------------------------------*
DATA: gw_hdata  TYPE typ_hdata,  "対象ヘッダデータ構造
gw_hdata1 TYPE typ_hdata,  "対象ヘッダデータ構造1
gw_mdata  TYPE typ_mdata,  "対象明細データ構造
gw_otdata TYPE typ_otdata, "出力データ構造
gw_printa TYPE typ_printa.
*---------------------------------------------------------------------*
*       テーブル定義                                                  *
*---------------------------------------------------------------------*
DATA: gt_hdata  TYPE TABLE OF typ_hdata,   "対象ヘッダデータテーブル
gt_mdata  TYPE TABLE OF typ_mdata,   "対象明細データテーブル
gt_otdata TYPE TABLE OF typ_otdata,  "出力データテーブル
gt_printa LIKE HASHED TABLE OF gw_printa
WITH UNIQUE KEY lname.
* Add 2008.04.09 --->
DATA: gt_kna1 TYPE TABLE OF kna1.
* Add 2008.04.09 <---
*---------------------------------------------------------------------*
*       変数定義                                                      *
*---------------------------------------------------------------------*
DATA:w_bukrs  LIKE knb1-bukrs. "会社コード
DATA:w_tatyp  LIKE knvi-tatyp. "税カテゴリ
DATA:w_flg    TYPE c.          "登録・変更パタン判断FLAG
DATA:w_cnt    TYPE i.          "出力用内部テーブルのデータ件数
*---------------------------------------------------------------------*
*       定数定義                                                      *
*---------------------------------------------------------------------*
CONSTANTS:
c_mark(1)   TYPE c VALUE '*',  "マーク
c_code(1)   TYPE x VALUE '09'. "TAB
*----------------------------------------------------------------------*
*     入力画面定義
*----------------------------------------------------------------------*
SELECTION-SCREEN:BEGIN OF BLOCK bl1 WITH FRAME .
SELECT-OPTIONS: s_kunnr FOR kna1-kunnr.
* Modify 2008.04.09 --->
*PARAMETERS P_YMD LIKE SY-DATUM OBLIGATORY.
*------------------------------------------>>>>
* Mod 2010/05/26 --->
*SELECT-OPTIONS: S_YMD FOR SY-DATUM OBLIGATORY.
PARAMETERS p_ymd LIKE sy-datum OBLIGATORY.
* Mod 2010/05/26 <---
* Modify 2008.04.09 <---
PARAMETERS:p_otfile(128) TYPE c LOWER CASE OBLIGATORY.
PARAMETERS:p_lname TYPE tsp03l-lname OBLIGATORY.
SELECTION-SCREEN:END OF BLOCK bl1.
*----------------------------------------------------------------------*
INITIALIZATION.
							
*----------------------------------------------------------------------*
* 出力ファイル名
GET PARAMETER ID 'ZSVF' FIELD p_otfile.
CONCATENATE p_otfile
sy-repid
sy-uname
sy-uzeit
'.TXT'
INTO p_otfile .

*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
*----------------------------------------------------------------------*
PERFORM check_param.               "入力パラメータチェック
PERFORM open_file.                 "ファイルオープン
PERFORM get_lname.                 "プリンタ/トレイ取得
************************************************************************
START-OF-SELECTION.
************************************************************************
PERFORM int_sec.                   "初期処理
PERFORM set_data.                  "出力データ取得
PERFORM end_sec.                   "結果ファイル出力
************************************************************************
END-OF-SELECTION.
************************************************************************
*&---------------------------------------------------------------------*
*&      Form  CHECK_PARAM
*&---------------------------------------------------------------------*
*       入力パラメータチェック
*----------------------------------------------------------------------*
FORM check_param.
*  SELECT COUNT(*)
*    FROM CDHDR
*   WHERE OBJECTID IN S_KUNNR
*     AND UDATE    =  P_YMD.
*  IF SY-SUBRC <> 0.
*    "該当データは存在しません
*    MESSAGE E008.
*    STOP.
*  ENDIF.
ENDFORM.                                                  " CHECK_PARAM
*&---------------------------------------------------------------------*
*&      Form  OPEN_FILE
*&---------------------------------------------------------------------*
*       ファイルオープン
*----------------------------------------------------------------------*
FORM open_file.
*出力ファイル
OPEN DATASET p_otfile FOR OUTPUT IN TEXT MODE.
IF sy-subrc <> 0.
MESSAGE e612 WITH '出力ファイルオープンエラー' p_otfile.
STOP.
ENDIF.
IF sy-subrc = 0.
DELETE DATASET p_otfile.
ENDIF.
ENDFORM.                                                    " OPEN_FILE
*&---------------------------------------------------------------------*
*&      Form  GET_LNAME
*&---------------------------------------------------------------------*
*       プリンタ/トレイ取得
*----------------------------------------------------------------------*
FORM get_lname.

CLEAR:gt_printa[],gw_printa.
SELECT lname
padest
INTO TABLE gt_printa
FROM tsp03l.
IF sy-subrc = 0.
READ TABLE gt_printa WITH TABLE KEY lname = p_lname
INTO gw_printa.
CASE sy-subrc.
WHEN 0.
WHEN 4.    " 対象データなし
MESSAGE e024 WITH '画面入力されたプリンタ/トレイ'.
ENDCASE.
ENDIF.

ENDFORM.                                                    " GET_LNAME
*&---------------------------------------------------------------------*
*&      Form  INT_SEC
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM int_sec.

CLEAR  :gw_hdata,gw_mdata,gw_hdata1,gw_otdata,gw_printa,
w_bukrs,w_tatyp,w_flg,w_cnt.
REFRESH:gt_hdata,gt_mdata,gt_otdata,
* Add 2008.04.09 --->
gt_kna1.
* Add 2008.04.09 <---

ENDFORM.                                                      " INT_SEC
*&---------------------------------------------------------------------*
*&      Form  SET_DATA
*&---------------------------------------------------------------------*
*       出力データ取得
*----------------------------------------------------------------------*
FORM set_data.
* Add 2008.04.09 --->
* 得意先マスタデータ取得
PERFORM get_kna1_data.
* Add 2008.04.09 <---
* 対象ヘッダデータ取得
PERFORM get_hdata.
* 対象明細データ取得
PERFORM get_mdata.
* Add 2008.04.09 --->
PERFORM edit_hdata.
* Add 2008.04.09 <---
* 出力データ編集
SORT gt_hdata BY objectid ASCENDING
utime DESCENDING.
CLEAR: gw_hdata1,gw_hdata,gw_printa.
LOOP AT gt_hdata INTO gw_hdata.
IF gw_hdata1-objectid = gw_hdata-objectid.
CLEAR:gw_hdata.
CONTINUE.
ENDIF.
gw_hdata1 = gw_hdata.
CLEAR:gw_otdata.
gw_otdata-lname = p_lname.
READ TABLE gt_printa WITH TABLE KEY lname = p_lname
INTO gw_printa.
gw_otdata-padest = gw_printa-padest.
*   得意先コード設定
gw_otdata-kunnr = gw_hdata-objectid.
*   一般データ取得
PERFORM get_kna1 USING gw_hdata-objectid.
*   会社コード取得
PERFORM get_knb1 USING gw_hdata-objectid.
*   その他取得
PERFORM get_knvh USING gw_hdata-objectid.
*   与信管理取得
PERFORM get_knkk USING gw_hdata-objectid w_bukrs.
*   販売エリア取得
PERFORM get_knvv USING gw_hdata-objectid.
*   更新日、更新者取得
PERFORM get_date USING gw_hdata-objectid.
*   変更場合、マック設定
PERFORM set_flg.
APPEND gw_otdata TO gt_otdata.
CLEAR:gw_hdata.
ENDLOOP.

ENDFORM.                                                     " SET_DATA
* Add 2008.04.09 --->
*&---------------------------------------------------------------------*
*&      Form  GET_KNA1_DATA
*&---------------------------------------------------------------------*
*       得意先マスタデータ取得
*----------------------------------------------------------------------*
FORM get_kna1_data.
SELECT *
FROM kna1
INTO CORRESPONDING FIELDS OF TABLE gt_kna1
WHERE kunnr IN s_kunnr.
ENDFORM.          "GET_KNA1_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_KNA1_DATA
*&---------------------------------------------------------------------*
*       得意先マスタデータ取得
*----------------------------------------------------------------------*
FORM edit_hdata.
DATA: lt_hdata   TYPE TABLE OF typ_hdata,
lw_kna1  TYPE kna1,
lw_hdata TYPE typ_hdata.
REFRESH: lt_hdata.
CLEAR: lw_kna1,lw_hdata.
* 得意先が入力する場合
IF NOT s_kunnr IS INITIAL.
lt_hdata = gt_hdata.
LOOP AT gt_kna1 INTO lw_kna1.
READ TABLE gt_hdata INTO lw_hdata
WITH KEY objectid = lw_kna1-kunnr.
*     得意先の変更履歴データがある場合
IF sy-subrc = 0.
*       処理なし
*     得意先の変更履歴データがない場合
ELSE.
lw_hdata-objectid = lw_kna1-kunnr.
APPEND lw_hdata TO lt_hdata.
ENDIF.
CLEAR: lw_kna1,lw_hdata.
ENDLOOP.

REFRESH: gt_hdata.
gt_hdata = lt_hdata.
REFRESH: lt_hdata.
* 得意先が入力しない場合
ELSE.
*   処理なし
ENDIF.
ENDFORM.          "EDIT_HDATA
* Add 2008.04.09 <---
*&---------------------------------------------------------------------*
*&      Form  GET_HDATA
*&---------------------------------------------------------------------*
*       対象ヘッダデータ取得
*----------------------------------------------------------------------*
FORM get_hdata.
* Add 2008.04.09 --->
DATA: l_cond      TYPE char255,
l_itab_cond TYPE TABLE OF char255.
* 得意先が入力する場合
* MOD 2008.12.19 --->
*  IF NOT S_KUNNR IS INITIAL.
* Mod 2010/05/26 --->
*  IF S_KUNNR IS INITIAL and S_YMD IS INITIAL .
IF s_kunnr IS INITIAL AND p_ymd IS INITIAL .
* Mod 2010/05/26 <---
* Mod 2008.12.19 <---
* Mod 2010/05/26 --->
*    FREE S_YMD.
*    MOVE: 'I'        TO S_YMD-SIGN,
*          'EQ'       TO S_YMD-OPTION,
*          SY-DATUM   TO S_YMD-LOW,
*          ''         TO S_YMD-HIGH.
*    APPEND S_YMD.
*  ENDIF.
p_ymd = sy-datum .
ENDIF .
* Mod 2010/05/26 <---
* Add 2008.04.09 <---

SELECT *
FROM cdhdr
INTO TABLE gt_hdata
WHERE objectclas IN ('DEBI','KLIM')
AND objectid IN s_kunnr
* Modify 2008.04.09 --->
*     AND UDATE    = P_YMD
*------------------------------------------>>>>
* Mod 2010/05/26 --->
*    AND UDATE    IN S_YMD
AND udate    = p_ymd
* Mod 2010/05/26 <---
* Modify 2008.04.09 <---
AND change_ind IN ('I','U').

IF sy-subrc <> 0.
*   得意先が入力しない場合
IF s_kunnr IS INITIAL.
"該当データは存在しません
MESSAGE s008.
STOP.
ENDIF.
ENDIF.

ENDFORM.                                                    " GET_HDATA
*&---------------------------------------------------------------------*
*&      Form  GET_MDATA
*&---------------------------------------------------------------------*
*       対象明細データ取得
*----------------------------------------------------------------------*
FORM get_mdata.
* Add 2008.04.09 --->
DATA: lw_hdata TYPE typ_hdata.
CLEAR: lw_hdata.
* Add 2008.04.09 <---
* Modify 2008.04.09 --->
*  SELECT *
*    FROM CDPOS
*    INTO TABLE GT_MDATA
*     FOR ALL ENTRIES IN GT_HDATA
*   WHERE OBJECTCLAS = GT_HDATA-OBJECTCLAS
*     AND OBJECTID   = GT_HDATA-OBJECTID
*     AND CHANGENR   = GT_HDATA-CHANGENR
*     AND CHNGIND    = 'U'.
*------------------------------------------>>>>
LOOP AT gt_hdata INTO lw_hdata.
SELECT *
FROM cdpos
APPENDING TABLE gt_mdata
WHERE objectclas = lw_hdata-objectclas
AND objectid   = lw_hdata-objectid
AND changenr   = lw_hdata-changenr
AND chngind    = 'U'.
ENDLOOP.
* Modify 2008.04.09 <---
SORT gt_mdata BY objectclas objectid ASCENDING
changenr DESCENDING.

ENDFORM.                                                    " GET_MDATA
*&---------------------------------------------------------------------*
*&      Form  GET_DATE
*&---------------------------------------------------------------------*
*       更新日、更新者取得
*----------------------------------------------------------------------*
FORM get_date USING p_objectid.

DATA:lw_hdata  TYPE typ_hdata.
CLEAR:lw_hdata.
READ TABLE gt_hdata INTO lw_hdata
WITH KEY objectid   = p_objectid.
IF sy-subrc = 0.
gw_otdata-udate    =  lw_hdata-udate.       "更新日
gw_otdata-username =  lw_hdata-username.    "更新者
ENDIF.

ENDFORM.                                                     " GET_DATE
*&---------------------------------------------------------------------*
*&      Form  SET_FLG
*&---------------------------------------------------------------------*
*       変更場合、マック設定
*----------------------------------------------------------------------*
FORM set_flg.

* 登録・更新パタン判断
READ TABLE gt_hdata INTO gw_hdata1
WITH KEY objectid   = gw_hdata-objectid
change_ind = 'I'.
IF sy-subrc <> 0.
PERFORM set_mark.
ENDIF.

ENDFORM.                                                      " SET_FLG
*&---------------------------------------------------------------------*
*&      Form  SET_MARK
*&---------------------------------------------------------------------*
*       変更場合、マック設定
*----------------------------------------------------------------------*
FORM set_mark.

* 一般データ
PERFORM upd_data USING 'KNA1' 'NAME1'
CHANGING gw_otdata-name1m.                  "名称1変更
PERFORM upd_data USING 'KNA1' 'NAME2'
CHANGING gw_otdata-name2m.                  "名称2変更
PERFORM upd_data USING 'KNA1' 'STRAS'
CHANGING gw_otdata-streetm. "都道府県名変更
PERFORM upd_data USING 'KNA1' 'PSTLZ'
CHANGING gw_otdata-pcodem.  "郵便番号変更
PERFORM upd_data USING 'KNA1' 'ORT01'
CHANGING gw_otdata-citym.   "市区町村変更
PERFORM upd_data USING 'KNA1' 'LAND1'
CHANGING gw_otdata-ctrm.    "国コード変更
IF NOT gw_otdata-ctrm IS INITIAL.
gw_otdata-landxm = c_mark.              "国テキスト変更
ENDIF.
* Add 2007.12.25 --->
PERFORM upd_data USING 'KNA1' 'REGION'
CHANGING gw_otdata-regionm.    "地域変更
* Add 2007.12.25 <----
PERFORM upd_data USING 'KNA1' 'SPRAS'
CHANGING gw_otdata-langum.  "言語変更
IF NOT gw_otdata-langum IS INITIAL.
gw_otdata-sptxtm = c_mark.              "言語テキスト変更
ENDIF.
PERFORM upd_data USING 'KNA1' 'TELF1'
CHANGING gw_otdata-telm.    "電話番号変更
* 会社コード
PERFORM upd_data USING 'KNB1' 'AKONT'
CHANGING gw_otdata-akontm.  "勘定コード変更
IF NOT gw_otdata-akontm IS INITIAL.
gw_otdata-txt20m = c_mark.              "勘定コードテキスト変更
ENDIF.
PERFORM upd_data USING 'KNB1' 'ZTERM'
CHANGING gw_otdata-ztermm.  "支払条件変更
IF NOT gw_otdata-ztermm IS INITIAL.
gw_otdata-text5m = c_mark.              "支払条件テキスト変更
ENDIF.
PERFORM upd_data USING 'KNB1' 'ZWELS'
CHANGING gw_otdata-zwelsm.  "支払方法変更
IF NOT gw_otdata-zwelsm IS INITIAL.
gw_otdata-text6m = c_mark.              "支払方法テキスト変更
ENDIF.
PERFORM upd_data USING 'KNB1' 'KVERM'
CHANGING gw_otdata-kvermm.                  "コメント2
* 与信管理
PERFORM upd_data USING 'KNKK' 'KLIMK'
CHANGING gw_otdata-klimkm.  "与信限度額変更
* 販売エリア
PERFORM upd_data USING 'KNVV' 'VKBUR'
CHANGING gw_otdata-vkburm.  "営業所変更
IF NOT gw_otdata-vkburm IS INITIAL.
gw_otdata-bezeim = c_mark.              "営業所テキスト変更
ENDIF.
PERFORM upd_data USING 'KNVV' 'VKGRP'
CHANGING gw_otdata-vkgrpm.  "営業グループ変更
IF NOT gw_otdata-vkgrpm IS INITIAL.
gw_otdata-bezei4m = c_mark.             "営業グループテキスト変更
ENDIF.
PERFORM upd_data USING 'KNVV' 'KDGRP'
CHANGING gw_otdata-kdgrpm.  "得意先グループ変更
IF NOT gw_otdata-kdgrpm IS INITIAL.
gw_otdata-ktextm = c_mark.              "得意先グループテキスト変更
ENDIF.
PERFORM upd_data USING 'KNVV' 'WAERS'
CHANGING gw_otdata-waersm.  "通貨コード変更
IF NOT gw_otdata-waersm IS INITIAL.
gw_otdata-ltextm = c_mark.              "通貨コードテキスト変更
ENDIF.
PERFORM upd_data USING 'KNVV' 'KALKS'
CHANGING gw_otdata-kalksm.  "得意先価格決定変更
IF NOT gw_otdata-kalksm IS INITIAL.
gw_otdata-vtextm = c_mark.              "得意先価格決定テキスト変更
ENDIF.
PERFORM upd_data USING 'KNVV' 'LPRIO'
CHANGING gw_otdata-lpriom.  "出荷優先順位変更
IF NOT gw_otdata-lpriom IS INITIAL.
gw_otdata-bezei2m = c_mark.             "出荷優先順位テキスト変更
ENDIF.
PERFORM upd_data USING 'KNVV' 'VSBED'
CHANGING gw_otdata-vsbedm.  "出荷条件変更
IF NOT gw_otdata-vsbedm IS INITIAL.
gw_otdata-vtext2m = c_mark.             "出荷条件テキスト変更
ENDIF.
PERFORM upd_data USING 'KNVV' 'VWERK'
CHANGING gw_otdata-vwerkm.  "出荷プラント変更
IF NOT gw_otdata-vwerkm IS INITIAL.
gw_otdata-namem = c_mark.               "出荷プラントテキスト変更
ENDIF.
PERFORM upd_data USING 'KNVV' 'KZAZU'
CHANGING gw_otdata-kzazum.  "受注結合出荷区分変更
PERFORM upd_data USING 'KNVV' 'ZTERM'
CHANGING gw_otdata-zterm2m. "支払条件変更(販売エリア)
IF NOT gw_otdata-zterm2m IS INITIAL.
gw_otdata-texta5m = c_mark.             "支払条件テキスト変更
ENDIF.
PERFORM upd_data USING 'KNVV' 'KTGRD'
CHANGING gw_otdata-ktgrdm.  "勘定設定グループ変更
IF NOT gw_otdata-ktgrdm IS INITIAL.
gw_otdata-vtext5m = c_mark.           "勘定設定グループテキスト変更
ENDIF.
PERFORM upd_data USING 'KNVI' 'TAXKD'
CHANGING gw_otdata-taxkdm.  "税分類変更
IF NOT gw_otdata-taxkdm IS INITIAL.
gw_otdata-vtext4m = c_mark.             "税分類テキスト変更
ENDIF.
PERFORM upd_data USING 'KNVP' 'PERNR'
CHANGING gw_otdata-pernrm.  "営業員変更
IF NOT gw_otdata-pernrm IS INITIAL.
gw_otdata-pernrtm = c_mark.             "営業員テキスト変更
ENDIF.
PERFORM upd_data USING 'KNVV' 'KVGR1'
CHANGING gw_otdata-kvgr1m.  "得意先グループ1変更
IF NOT gw_otdata-kvgr1m IS INITIAL.
gw_otdata-bezei3m = c_mark.            "得意先グループ1テキスト変更
ENDIF.

ENDFORM.                                                     " SET_MARK
*&---------------------------------------------------------------------*
*&      Form  UPD_DATA
*&---------------------------------------------------------------------*
*       変更履歴
*----------------------------------------------------------------------*
*      -->P_TABNAME
*      -->P_FNAME
*      <--P_NAMEM
*----------------------------------------------------------------------*
FORM upd_data  USING    p_tabname
p_fname
CHANGING   p_namem.

READ TABLE gt_mdata INTO gw_mdata
WITH KEY objectid   = gw_hdata-objectid
tabname    = p_tabname
fname      = p_fname.
IF sy-subrc = 0.
p_namem = c_mark.
ENDIF.

ENDFORM.                                                     " UPD_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_KNA1
*&---------------------------------------------------------------------*
*       一般データ取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  得意先コード
*----------------------------------------------------------------------*
FORM get_kna1 USING    p_kunnr.
CLEAR: kna1.

* Modify 2008.04.09 --->
*  SELECT *
*    FROM KNA1
*    INTO CORRESPONDING FIELDS OF KNA1
*   WHERE KUNNR = P_KUNNR.
*ENDSELECT.
*------------------------------------------>>>>
READ TABLE gt_kna1 INTO kna1
WITH KEY kunnr = p_kunnr.
* Modify 2008.04.09 <---
IF sy-subrc = 0.
gw_otdata-erdat   = kna1-erdat.              "登録日
gw_otdata-ernam   = kna1-ernam.              "登録者
CLEAR:adrc.
SELECT *
FROM adrc
INTO CORRESPONDING FIELDS OF adrc
WHERE addrnumber = kna1-adrnr.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-name1 = adrc-name1.                         "名称1
gw_otdata-name2 = adrc-name2.                         "名称2
gw_otdata-sortl = adrc-sort1.              "検索用語
gw_otdata-street = adrc-street.            "都道府県名
gw_otdata-post_code = adrc-post_code1.     "郵便番号
gw_otdata-city   = adrc-city1.             "市区町村
gw_otdata-country = adrc-country.          "国コード
IF NOT gw_otdata-country IS INITIAL.
PERFORM get_t005t USING gw_otdata-country
adrc-langu.      "国テキスト
ENDIF.
gw_otdata-langu = adrc-langu.              "言語キー
IF NOT gw_otdata-langu IS INITIAL.
PERFORM get_t002t USING gw_otdata-langu. "言語テキスト
ENDIF.
* Add 2007.12.25 --->
gw_otdata-region = adrc-region .            "地域
IF NOT gw_otdata-region IS INITIAL.
PERFORM get_t005u USING  adrc-region
adrc-country
adrc-langu. "言語テキスト
ENDIF.
* Add 2007.12.25 <---
gw_otdata-tel   = adrc-tel_number.         "電話番号
ENDIF.
ENDIF.
PERFORM get_text USING   'KNA1'
p_kunnr
'0026'
CHANGING  gw_otdata-text1.      "コメント
PERFORM get_text USING   'KNA1'
p_kunnr
'0027'
CHANGING  gw_otdata-text2.      "上場区分
PERFORM get_text USING   'KNA1'
p_kunnr
'0028'
CHANGING  gw_otdata-text3.      "評価ランク
PERFORM get_text USING   'KNA1'
p_kunnr
'0029'
CHANGING  gw_otdata-text4.      "備考

*Add 2008/12/25 --->
PERFORM get_text USING   'KNA1'
p_kunnr
'0027'
CHANGING  gw_otdata-texta1.      "上場区分

PERFORM get_text USING   'KNA1'
p_kunnr
'0021'
CHANGING  gw_otdata-texta2.      "評点

PERFORM get_text USING   'KNA1'
p_kunnr
'0020'
CHANGING  gw_otdata-texta3.      "企業コード


*Add 2008/12/25 <---



ENDFORM.                                                    " GET_KNA1
*&---------------------------------------------------------------------*
*&      Form  GET_T005T
*&---------------------------------------------------------------------*
*       国テキスト取得
*----------------------------------------------------------------------*
*      -->P_COUNTRY  国コード
*      -->P_LANGU    言語
*----------------------------------------------------------------------*
FORM get_t005t USING    p_country
p_langu.

CLEAR:t005t.
SELECT *
FROM t005t
INTO CORRESPONDING FIELDS OF t005t
WHERE land1 = p_country
AND spras = p_langu.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-landx = t005t-landx.       "国テキスト
ENDIF.

ENDFORM.                                                    " GET_T005T
*&---------------------------------------------------------------------*
*&      Form  GET_T002T
*&---------------------------------------------------------------------*
*       言語テキスト取得
*----------------------------------------------------------------------*
*      -->P_LANGU  言語キー
*----------------------------------------------------------------------*
FORM get_t002t USING    p_langu.

CLEAR:t002t.
SELECT *
FROM t002t
INTO CORRESPONDING FIELDS OF t002t
WHERE spras = p_langu
AND sprsl = p_langu.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-sptxt = t002t-sptxt.       "言語キーテキスト
ENDIF.

ENDFORM.                                                    " GET_T002T
* Add 2007.12.25 --->
*&---------------------------------------------------------------------*
*&      Form  GET_T005U
*&---------------------------------------------------------------------*
*       地域テキスト取得
*----------------------------------------------------------------------*
*      -->P_LANGU  言語キー
*----------------------------------------------------------------------*
FORM get_t005u USING   p_region
p_land1
p_langu.

CLEAR:t005u.
SELECT *
FROM t005u
INTO CORRESPONDING FIELDS OF t005u
WHERE spras = p_langu
AND land1 = p_land1
AND bland = p_region .
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-regiont = t005u-bezei.       "言語キーテキスト
ENDIF.

ENDFORM.                                                    " GET_T005U
* Add 2007.12.25 <---
*&---------------------------------------------------------------------*
*&      Form  GET_KNB1
*&---------------------------------------------------------------------*
*       会社コード取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  得意先コード
*----------------------------------------------------------------------*
FORM get_knb1 USING    p_kunnr.

DATA: l_name(14) TYPE c.
CLEAR: knb1.
SELECT *
FROM knb1
INTO CORRESPONDING FIELDS OF knb1
WHERE kunnr = p_kunnr.
ENDSELECT.
IF sy-subrc = 0.
CLEAR:w_bukrs.
w_bukrs = knb1-bukrs.                        "会社コード
gw_otdata-akont = knb1-akont.                "統制勘定
IF NOT knb1-akont IS INITIAL.
PERFORM get_skat USING knb1-akont w_bukrs. "勘定コードテキスト
ENDIF.
gw_otdata-zterm = knb1-zterm.                "支払条件
IF NOT knb1-zterm IS INITIAL.
PERFORM get_t052u USING knb1-zterm.
IF sy-subrc = 0.
gw_otdata-text5 = t052u-text1.           "支払条件テキスト
ENDIF.
ENDIF.
gw_otdata-zwels = knb1-zwels.                "支払方法
IF NOT gw_otdata-zwels IS INITIAL.
PERFORM get_t042z USING gw_otdata-zwels.   "支払方法テキスト
ENDIF.
gw_otdata-kverm = knb1-kverm.                "コメント(会社コード)
CLEAR: l_name.

CONCATENATE knb1-kunnr knb1-bukrs INTO l_name.
PERFORM get_text USING   'KNB1'
l_name
'ZF04'
CHANGING  gw_otdata-text7.    "入金条件メモ
PERFORM get_text USING   'KNB1'
l_name
'ZK01'
CHANGING  gw_otdata-text8.    "高千穂請求書
PERFORM get_text USING   'KNB1'
l_name
'ZS01'
CHANGING  gw_otdata-text9.    "納品書種別
ENDIF.

ENDFORM.                                                    " GET_KNB1
*&---------------------------------------------------------------------*
*&      Form  GET_SKAT
*&---------------------------------------------------------------------*
*       勘定コードテキスト取得
*----------------------------------------------------------------------*
*      -->P_AKONT  G/L 勘定コード
*      -->P_BUKRS  勘定コード表
*----------------------------------------------------------------------*
FORM get_skat USING    p_akont
p_bukrs.

CLEAR: skat.
SELECT *
FROM skat
INTO CORRESPONDING FIELDS OF skat
WHERE saknr = p_akont
AND ktopl = p_bukrs
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-txt20 = skat-txt20.       "勘定コードテキスト
ENDIF.

ENDFORM.                                                     " GET_SKAT
*&---------------------------------------------------------------------*
*&      Form  GET_T052U
*&---------------------------------------------------------------------*
*       支払条件テキスト取得
*----------------------------------------------------------------------*
*      -->P_ZTERM 支払条件
*----------------------------------------------------------------------*
FORM get_t052u USING    p_zterm.

CLEAR: t052u.
SELECT *
FROM t052u
INTO CORRESPONDING FIELDS OF t052u
WHERE zterm = p_zterm
AND spras = 'J'.
ENDSELECT.

ENDFORM.                                                    " GET_T052U
*&---------------------------------------------------------------------*
*&      Form  GET_T042Z
*&---------------------------------------------------------------------*
*       支払方法テキスト取得
*----------------------------------------------------------------------*
*      -->P_ZLSCH 支払方法
*----------------------------------------------------------------------*
FORM get_t042z USING    p_zlsch.

DATA: l_len TYPE i,
l_cnt TYPE i,
l_zlsch LIKE t042z-zlsch.
CLEAR: l_len,l_cnt,l_zlsch,gw_otdata-text6.
DESCRIBE FIELD p_zlsch LENGTH l_len.
DO l_len TIMES.
l_zlsch = p_zlsch+l_cnt(1).
IF l_zlsch <> ''.
CLEAR: t042z.
SELECT *
FROM t042z
INTO CORRESPONDING FIELDS OF t042z
WHERE zlsch = l_zlsch
AND land1 = 'JP'.
ENDSELECT.
IF sy-subrc = 0.
"支払方法テキスト
CONCATENATE gw_otdata-text6 t042z-text1 INTO gw_otdata-text6.
l_cnt = l_cnt + 1.
ENDIF.
ELSE.
EXIT.
ENDIF.
ENDDO.

ENDFORM.                                                    " GET_T042Z
*&---------------------------------------------------------------------*
*&      Form  GET_KNVH
*&---------------------------------------------------------------------*
*       その他取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  得意先コード
*----------------------------------------------------------------------*
FORM get_knvh USING    p_kunnr.

DATA:l_kschl LIKE b930-kschl,
l_knumh LIKE b930-knumh.
CLEAR: knvh.
SELECT *
FROM knvh
INTO CORRESPONDING FIELDS OF knvh
WHERE kunnr = p_kunnr
* Add 2010/05/26 --->
AND  datab <= p_ymd
AND  datbi => p_ymd
.
* Add 2010/05/26 <---
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-hkunnr = knvh-hkunnr.       "得意先階層
ENDIF.

CLEAR: b930.
SELECT *
FROM b930
INTO CORRESPONDING FIELDS OF b930
WHERE kunnr = p_kunnr.
ENDSELECT.
IF sy-subrc = 0.
CLEAR: l_kschl,l_knumh.
l_kschl = b930-kschl.
l_knumh = b930-knumh.
ELSE.
CLEAR: b931.
SELECT *
FROM b931
INTO CORRESPONDING FIELDS OF b931
WHERE kunnr = p_kunnr.
ENDSELECT.
IF sy-subrc = 0.
CLEAR: l_kschl,l_knumh.
l_kschl = b931-kschl.
l_knumh = b931-knumh.
ENDIF.
ENDIF.
IF NOT l_kschl IS INITIAL.
PERFORM get_t685t USING l_kschl. "納品書区分
ENDIF.
IF NOT l_knumh IS INITIAL.
PERFORM get_nach USING l_knumh.  "納品書プリンタ
ENDIF.

ENDFORM.                                                     " GET_KNVH
*&---------------------------------------------------------------------*
*&      Form  GET_T685T
*&---------------------------------------------------------------------*
*       納品書区分取得
*----------------------------------------------------------------------*
*      -->P_KSCHL  納品書区分
*----------------------------------------------------------------------*
FORM get_t685t USING    p_kschl.

CLEAR: t685t.
SELECT *
FROM t685t
INTO CORRESPONDING FIELDS OF t685t
WHERE kschl = p_kschl.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-vtext3 = t685t-vtext.       "納品書区分
ENDIF.

ENDFORM.                                                    " GET_T685T
*&---------------------------------------------------------------------*
*&      Form  GET_NACH
*&---------------------------------------------------------------------*
*       納品書プリンタ取得
*----------------------------------------------------------------------*
*      -->P_KNUMH  出力条件レコード番号
*----------------------------------------------------------------------*
FORM get_nach USING    p_knumh.

CLEAR: nach.
SELECT *
FROM nach
INTO CORRESPONDING FIELDS OF nach
WHERE knumh = p_knumh.
ENDSELECT.
IF sy-subrc = 0.
CALL FUNCTION 'CONVERSION_EXIT_SPDEV_OUTPUT'
EXPORTING
input  = nach-ldest
IMPORTING
output = gw_otdata-ldest. "納品書プリンタ
ENDIF.

ENDFORM.                                                     " GET_NACH
*&---------------------------------------------------------------------*
*&      Form  GET_KNKK
*&---------------------------------------------------------------------*
*       与信管理取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  "得意先コード
*      -->P_BUKRS  "会社コード
*----------------------------------------------------------------------*
FORM get_knkk USING    p_kunnr
p_bukrs.

DATA: l_name(14) TYPE c.
CLEAR: knkk.
SELECT *
FROM knkk
INTO CORRESPONDING FIELDS OF knkk
WHERE kunnr = p_kunnr
AND kkber = p_bukrs.
ENDSELECT.
IF sy-subrc = 0.
*    GW_OTDATA-KLIMK = KNKK-KLIMK.              "与信限度額
gw_otdata-klimk = knkk-klimk * 100.              "与信限度額
CONCATENATE knkk-kunnr knkk-kkber INTO l_name.
*Del  2008/12/25 --->
*    PERFORM GET_TEXT USING   'KNKK'
*                             L_NAME
*                             '0001'
*                   CHANGING  GW_OTDATA-TEXTA1. "上場区分
*    PERFORM GET_TEXT USING   'KNKK'
*                             L_NAME
*                             '0002'
*                   CHANGING  GW_OTDATA-TEXTA2. "評点
*    PERFORM GET_TEXT USING   'KNKK'
*                             L_NAME
*                             '0003'
*                   CHANGING  GW_OTDATA-TEXTA3. "企業コード
*Del  2008/12/25 <---

PERFORM get_text USING   'KNKK'
l_name
'0004'
CHANGING  gw_otdata-texta4. "与信情報履歴
ENDIF.

ENDFORM.                                                     " GET_KNKK
*&---------------------------------------------------------------------*
*&      Form  GET_KNVV
*&---------------------------------------------------------------------*
*       販売エリア取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  "得意先コード
*----------------------------------------------------------------------*
FORM get_knvv USING    p_kunnr.

CLEAR: knvv.
SELECT *
FROM knvv
INTO CORRESPONDING FIELDS OF knvv
WHERE kunnr = p_kunnr.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-vkbur = knvv-vkbur.               "営業所
IF NOT gw_otdata-vkbur IS INITIAL.
PERFORM get_tvkbt USING gw_otdata-vkbur.  "営業所テキスト
ENDIF.
gw_otdata-vkgrp = knvv-vkgrp.               "営業グループ
IF NOT gw_otdata-vkgrp IS INITIAL.
PERFORM get_tvgrt USING gw_otdata-vkgrp.  "営業グループテキスト
ENDIF.
gw_otdata-kdgrp = knvv-kdgrp.               "得意先グループ
IF NOT gw_otdata-kdgrp IS INITIAL.
PERFORM get_t151t USING gw_otdata-kdgrp.  "得意先グループテキスト
ENDIF.
gw_otdata-waers = knvv-waers.               "通貨コード
IF NOT gw_otdata-waers IS INITIAL.
PERFORM get_tcurt USING gw_otdata-waers.  "通貨コードテキスト
ENDIF.
gw_otdata-kalks = knvv-kalks.               "得意先価格決定
IF NOT gw_otdata-kalks IS INITIAL.
PERFORM get_tvkdt USING gw_otdata-kalks.  "得意先価格決定テキスト
ENDIF.
gw_otdata-versg = knvv-versg.               "統計グループ
IF NOT gw_otdata-versg IS INITIAL.
PERFORM get_tvsdt USING gw_otdata-versg.  "統計グループテキスト
ENDIF.
gw_otdata-lprio = knvv-lprio.               "出荷優先順位
IF NOT gw_otdata-lprio IS INITIAL.
PERFORM get_tprit USING gw_otdata-lprio.  "出荷優先順位テキスト
ENDIF.
gw_otdata-vsbed = knvv-vsbed.               "出荷条件
IF NOT gw_otdata-vsbed IS INITIAL.
PERFORM get_tvsbt USING gw_otdata-vsbed.  "出荷条件テキスト
ENDIF.
gw_otdata-vwerk = knvv-vwerk.               "出荷プラント
IF NOT gw_otdata-vwerk IS INITIAL.
PERFORM get_t001w USING gw_otdata-vwerk.  "出荷プラントテキスト
ENDIF.
gw_otdata-kzazu = knvv-kzazu.               "受注結合出荷区分
gw_otdata-zterm2 = knvv-zterm.              "支払条件
IF NOT gw_otdata-zterm2 IS INITIAL.
PERFORM get_t052u USING gw_otdata-zterm2.
IF sy-subrc = 0.
gw_otdata-texta5 = t052u-text1.         "支払条件テキスト
ENDIF.
ENDIF.
gw_otdata-ktgrd = knvv-ktgrd.               "勘定設定グループ
"勘定設定グループテキスト
IF NOT gw_otdata-ktgrd IS INITIAL.
PERFORM get_tvktt USING gw_otdata-ktgrd.
ENDIF.
PERFORM get_knvi USING p_kunnr.             "税分類
"税分類テキスト
IF NOT gw_otdata-taxkd IS INITIAL AND NOT w_tatyp IS INITIAL.
PERFORM get_tskdt USING gw_otdata-taxkd w_tatyp.
ENDIF.
PERFORM get_knvp USING p_kunnr.             "営業員
IF NOT gw_otdata-pernr IS INITIAL.
PERFORM get_pa0002 USING gw_otdata-pernr. "営業員テキスト
ENDIF.
gw_otdata-kvgr1 = knvv-kvgr1.               "得意先グループ1
IF NOT gw_otdata-kvgr1 IS INITIAL.
PERFORM get_tvv1t USING gw_otdata-kvgr1.  "得意先グループ1テキスト
ENDIF.
ENDIF.

ENDFORM.                                                     " GET_KNVV
*&---------------------------------------------------------------------*
*&      Form  GET_TVKBT
*&---------------------------------------------------------------------*
*       営業所テキスト取得
*----------------------------------------------------------------------*
*      -->P_VKBUR  営業所
*----------------------------------------------------------------------*
FORM get_tvkbt USING    p_vkbur.

CLEAR: tvkbt.
SELECT *
FROM tvkbt
INTO CORRESPONDING FIELDS OF tvkbt
WHERE vkbur = p_vkbur
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-bezei = tvkbt-bezei.       "営業所テキス
ENDIF.

ENDFORM.                                                    " GET_TVKBT
*&---------------------------------------------------------------------*
*&      Form  GET_TVGRT
*&---------------------------------------------------------------------*
*       営業グループテキスト取得
*----------------------------------------------------------------------*
*      -->P_VKGRP  営業グループ
*----------------------------------------------------------------------*
FORM get_tvgrt USING    p_vkgrp.

CLEAR: tvgrt.
SELECT *
FROM tvgrt
INTO CORRESPONDING FIELDS OF tvgrt
WHERE vkgrp = p_vkgrp
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-bezei4 = tvgrt-bezei.       "営業グループテキスト
ENDIF.

ENDFORM.                                                    " GET_TVGRT
*&---------------------------------------------------------------------*
*&      Form  GET_T151T
*&---------------------------------------------------------------------*
*       得意先グループテキスト取得
*----------------------------------------------------------------------*
*      -->P_KDGRP  得意先グループ
*----------------------------------------------------------------------*
FORM get_t151t USING    p_kdgrp.

CLEAR: t151t.
SELECT *
FROM t151t
INTO CORRESPONDING FIELDS OF t151t
WHERE kdgrp = p_kdgrp
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-ktext = t151t-ktext.       "得意先グループテキスト
ENDIF.

ENDFORM.                                                    " GET_T151T
*&---------------------------------------------------------------------*
*&      Form  GET_TCURT
*&---------------------------------------------------------------------*
*       通貨コードテキスト取得
*----------------------------------------------------------------------*
*      -->P_WAERS  通貨コード
*----------------------------------------------------------------------*
FORM get_tcurt USING    p_waers.

CLEAR: tcurt.
SELECT *
FROM tcurt
INTO CORRESPONDING FIELDS OF tcurt
WHERE waers = p_waers
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-ltext = tcurt-ltext.       "通貨コードテキスト
ENDIF.

ENDFORM.                                                    " GET_TCURT
*&---------------------------------------------------------------------*
*&      Form  GET_TVKDT
*&---------------------------------------------------------------------*
*       得意先価格決定テキスト取得
*----------------------------------------------------------------------*
*      -->P_KALKS  得意先価格決定
*----------------------------------------------------------------------*
FORM get_tvkdt USING    p_kalks.

CLEAR: tvkdt.
SELECT *
FROM tvkdt
INTO CORRESPONDING FIELDS OF tvkdt
WHERE kalks = p_kalks
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-vtext = tvkdt-vtext.       "得意先価格決定テキスト
ENDIF.

ENDFORM.                                                    " GET_TVKDT
*&---------------------------------------------------------------------*
*&      Form  GET_TVSDT
*&---------------------------------------------------------------------*
*       統計グループテキスト取得
*----------------------------------------------------------------------*
*      -->P_STGKU  統計グループ
*----------------------------------------------------------------------*
FORM get_tvsdt USING    p_stgku.

CLEAR: tvsdt.
SELECT *
FROM tvsdt
INTO CORRESPONDING FIELDS OF tvsdt
WHERE stgku = p_stgku
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-bezei20 = tvsdt-bezei20.       "統計グループテキスト
ENDIF.

ENDFORM.                                                    " GET_TVSDT
*&---------------------------------------------------------------------*
*&      Form  GET_TPRIT
*&---------------------------------------------------------------------*
*       出荷優先順位テキスト取得
*----------------------------------------------------------------------*
*      -->P_LPRIO  出荷優先順位
*----------------------------------------------------------------------*
FORM get_tprit USING    p_lprio.

CLEAR: tprit.
SELECT *
FROM tprit
INTO CORRESPONDING FIELDS OF tprit
WHERE lprio = p_lprio
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-bezei2 = tprit-bezei.       "出荷優先順位テキスト
ENDIF.

ENDFORM.                                                    " GET_TPRIT
*&---------------------------------------------------------------------*
*&      Form  GET_TVSBT
*&---------------------------------------------------------------------*
*       出荷条件テキスト取得
*----------------------------------------------------------------------*
*      -->P_VSBED  出荷条件
*----------------------------------------------------------------------*
FORM get_tvsbt USING    p_vsbed.

CLEAR: tvsbt.
SELECT *
FROM tvsbt
INTO CORRESPONDING FIELDS OF tvsbt
WHERE vsbed = p_vsbed
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-vtext2 = tvsbt-vtext.       "出荷条件テキスト
ENDIF.

ENDFORM.                                                    " GET_TVSBT
*&---------------------------------------------------------------------*
*&      Form  GET_T001W
*&---------------------------------------------------------------------*
*       出荷プラントテキスト取得
*----------------------------------------------------------------------*
*      -->P_WERKS  出荷プラント
*----------------------------------------------------------------------*
FORM get_t001w USING    p_werks.

CLEAR: t001w.
SELECT *
FROM t001w
INTO CORRESPONDING FIELDS OF t001w
WHERE werks = p_werks.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-name = t001w-name1.       "出荷プラントテキスト
ENDIF.

ENDFORM.                                                    " GET_T001W
*&---------------------------------------------------------------------*
*&      Form  GET_TVKTT
*&---------------------------------------------------------------------*
*       勘定設定グループテキスト取得
*----------------------------------------------------------------------*
*      -->P_KTGRD  勘定設定グループ条件
*----------------------------------------------------------------------*
FORM get_tvktt USING    p_ktgrd.

CLEAR: tvktt.
SELECT *
FROM tvktt
INTO CORRESPONDING FIELDS OF tvktt
WHERE ktgrd = p_ktgrd
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-vtext5 = tvktt-vtext.       "勘定設定グループテキスト
ENDIF.

ENDFORM.                                                    " GET_TVKTT
*&---------------------------------------------------------------------*
*&      Form  GET_KNVI
*&---------------------------------------------------------------------*
*       税分類取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  得意先コード
*----------------------------------------------------------------------*
FORM get_knvi USING    p_kunnr.

CLEAR: knvi.
SELECT *
FROM knvi
INTO CORRESPONDING FIELDS OF knvi
WHERE kunnr = p_kunnr.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-taxkd = knvi-taxkd.       "税分類
CLEAR:w_tatyp.
w_tatyp         = knvi-tatyp.       "税カテゴリ
ENDIF.

ENDFORM.                                                     " GET_KNVI
*&---------------------------------------------------------------------*
*&      Form  GET_TSKDT
*&---------------------------------------------------------------------*
*       税分類テキスト取得
*----------------------------------------------------------------------*
*      -->P_TAXKD  税分類
*      -->P_TATYP  税カテゴリ
*----------------------------------------------------------------------*
FORM get_tskdt USING    p_taxkd
p_tatyp.

CLEAR: tskdt.
SELECT *
FROM tskdt
INTO CORRESPONDING FIELDS OF tskdt
WHERE taxkd = p_taxkd
AND tatyp = p_tatyp
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-vtext4 = tskdt-vtext.       "税分類テキスト
ENDIF.

ENDFORM.                                                    " GET_TSKDT
*&---------------------------------------------------------------------*
*&      Form  GET_KNVP
*&---------------------------------------------------------------------*
*       営業員取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  得意先コード
*----------------------------------------------------------------------*
FORM get_knvp USING    p_kunnr.

CLEAR: knvp.
SELECT *
FROM knvp
INTO CORRESPONDING FIELDS OF knvp
WHERE kunnr = p_kunnr
AND parvw = 'VE'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-pernr = knvp-pernr.       "営業員
ENDIF.

ENDFORM.                                                     " GET_KNVP
*&---------------------------------------------------------------------*
*&      Form  GET_TVV1T
*&---------------------------------------------------------------------*
*       得意先グループ1テキスト取得
*----------------------------------------------------------------------*
*      -->P_KVGR1  得意先グループ1
*----------------------------------------------------------------------*
FORM get_tvv1t USING    p_kvgr1.

CLEAR: tvv1t.
SELECT *
FROM tvv1t
INTO CORRESPONDING FIELDS OF tvv1t
WHERE kvgr1 = p_kvgr1
AND spras = 'J'.
ENDSELECT.
IF sy-subrc = 0.
gw_otdata-bezei3 = tvv1t-bezei.       "得意先グループ1テキスト
ENDIF.

ENDFORM.                                                    " GET_TVV1T
*&---------------------------------------------------------------------*
*&      Form  GET_PA0002
*&---------------------------------------------------------------------*
*       営業員テキスト取得
*----------------------------------------------------------------------*
*      -->P_PERNR  営業員
*----------------------------------------------------------------------*
FORM get_pa0002 USING    p_pernr.

DATA: l_name(50) TYPE c.
CLEAR: pa0002.
SELECT *
FROM pa0002
INTO CORRESPONDING FIELDS OF pa0002
WHERE pernr = p_pernr.
ENDSELECT.
IF sy-subrc = 0.
CONCATENATE pa0002-nchmc pa0002-vnamc INTO l_name.
gw_otdata-pernrt = l_name.       "営業員テキスト
ENDIF.

ENDFORM.                                                   " GET_PA0002
*&---------------------------------------------------------------------*
*&      Form  READ_TEXT
*&---------------------------------------------------------------------*
*       テキスト読込
*----------------------------------------------------------------------*
*      -->P_ID    ID                                                   *
*      -->P_KEY   NO                                                   *
*      -->P_OBJ   OBJECT　                                             *
*      <--P_OUT   テキスト                                             *
*----------------------------------------------------------------------*
FORM get_text USING    p_obj
p_key
p_id
CHANGING  p_out.

DATA : BEGIN OF rtline OCCURS 0.
INCLUDE STRUCTURE tline.
DATA : END   OF rtline .
DATA:l_name LIKE thead-tdname.

CLEAR:l_name,p_out.
l_name = p_key.

CALL FUNCTION 'READ_TEXT'
EXPORTING
id                      = p_id
language                = sy-langu
name                    = l_name
object                  = p_obj
TABLES
lines                   = rtline
EXCEPTIONS
id                      = 1
language                = 2
name                    = 3
not_found               = 4
object                  = 5
reference_check         = 6
wrong_access_to_archive = 7
OTHERS                  = 8.

READ TABLE rtline INDEX 1.
IF ( sy-subrc = 0 ).
SEARCH rtline-tdline FOR c_code.
IF ( sy-subrc = 0 ).
REPLACE c_code WITH space INTO rtline-tdline.
ENDIF.
p_out = rtline-tdline.
ENDIF.

ENDFORM.                                                    " READ_TEXT
*&---------------------------------------------------------------------*
*&      Form  END_SEC
*&---------------------------------------------------------------------*
*       結果ファイル出力
*----------------------------------------------------------------------*
FORM end_sec.

DATA: wa_header TYPE string,
wa_record TYPE string.
CLEAR: w_cnt,wa_header,wa_record.

OPEN DATASET p_otfile FOR OUTPUT IN TEXT MODE.
IF sy-subrc = 0.
*     ヘッダ行作成
CONCATENATE
text-114
text-115
text-001
text-002
text-003
text-004
text-005
text-006
text-008
text-009
text-010
text-011
text-012
text-013
text-014
text-015
text-016
text-017
text-018
text-019
text-020
text-021
text-022
text-023
text-024
text-025
text-026
text-027
text-028
text-029
text-030
text-031
text-032
text-033
text-034
text-035
text-036
text-037
text-038
text-039
text-040
text-041
text-042
text-043
text-044
text-045
text-046
text-047
text-048
text-049
text-050
text-051
text-052
text-053
text-054
text-055
text-056
text-057
text-058
text-059
text-060
text-061
text-062
text-063
text-064
text-065
text-066
text-067
text-068
text-069
text-070
text-071
text-072
text-073
text-074
text-075
text-076
text-077
text-078
text-079
text-080
text-081
text-082
text-083
text-084
text-085
text-086
text-087
text-088
text-089
text-090
text-091
text-092
text-093
text-094
text-095
text-096
text-097
text-098
text-099
text-100
text-101
text-102
text-103
text-104
text-105
text-106
text-107
text-108
text-109
text-110
text-111
text-112
text-113
* Add 2007.12.25 --->
text-116
text-117
text-118
* Add 2007.12.25 <---
INTO wa_header
SEPARATED BY c_code.
TRANSFER wa_header TO p_otfile.
IF sy-subrc <> 0.
MESSAGE s612 WITH '結果ファイルのダウンロードに失敗しました'.
STOP.
ENDIF.
*     データ行作成
LOOP AT gt_otdata INTO gw_otdata.
CONCATENATE
gw_otdata-lname
gw_otdata-padest
gw_otdata-kunnr
gw_otdata-name1
gw_otdata-name1m
gw_otdata-name2
gw_otdata-name2m
gw_otdata-sortl
gw_otdata-street
gw_otdata-streetm
gw_otdata-post_code
gw_otdata-pcodem
gw_otdata-city
gw_otdata-citym
gw_otdata-country
gw_otdata-ctrm
gw_otdata-landx
gw_otdata-landxm
gw_otdata-langu
gw_otdata-langum
gw_otdata-sptxt
gw_otdata-sptxtm
gw_otdata-tel
gw_otdata-telm
gw_otdata-text1
gw_otdata-text2
gw_otdata-text3
gw_otdata-text4
gw_otdata-akont
gw_otdata-akontm
gw_otdata-txt20
gw_otdata-txt20m
gw_otdata-zterm
gw_otdata-ztermm
gw_otdata-text5
gw_otdata-text5m
gw_otdata-zwels
gw_otdata-zwelsm
gw_otdata-text6
gw_otdata-text6m
gw_otdata-kverm
gw_otdata-kvermm
gw_otdata-text7
gw_otdata-text8
gw_otdata-text9
gw_otdata-hkunnr
gw_otdata-vtext3
gw_otdata-ldest
gw_otdata-klimk
gw_otdata-klimkm
gw_otdata-texta1
gw_otdata-texta2
gw_otdata-texta3
gw_otdata-texta4
gw_otdata-vkbur
gw_otdata-vkburm
gw_otdata-bezei
gw_otdata-bezeim
gw_otdata-vkgrp
gw_otdata-vkgrpm
gw_otdata-bezei4
gw_otdata-bezei4m
gw_otdata-kdgrp
gw_otdata-kdgrpm
gw_otdata-ktext
gw_otdata-ktextm
gw_otdata-waers
gw_otdata-waersm
gw_otdata-ltext
gw_otdata-ltextm
gw_otdata-kalks
gw_otdata-kalksm
gw_otdata-vtext
gw_otdata-vtextm
gw_otdata-versg
gw_otdata-bezei20
gw_otdata-lprio
gw_otdata-lpriom
gw_otdata-bezei2
gw_otdata-bezei2m
gw_otdata-vsbed
gw_otdata-vsbedm
gw_otdata-vtext2
gw_otdata-vtext2m
gw_otdata-vwerk
gw_otdata-vwerkm
gw_otdata-name
gw_otdata-namem
gw_otdata-kzazu
gw_otdata-kzazum
gw_otdata-zterm2
gw_otdata-zterm2m
gw_otdata-texta5
gw_otdata-texta5m
gw_otdata-ktgrd
gw_otdata-ktgrdm
gw_otdata-vtext5
gw_otdata-vtext5m
gw_otdata-taxkd
gw_otdata-taxkdm
gw_otdata-vtext4
gw_otdata-vtext4m
gw_otdata-pernr
gw_otdata-pernrm
gw_otdata-pernrt
gw_otdata-pernrtm
gw_otdata-kvgr1
gw_otdata-kvgr1m
gw_otdata-bezei3
gw_otdata-bezei3m
gw_otdata-erdat
gw_otdata-ernam
gw_otdata-udate
gw_otdata-username
* Add 2007.12.25 --->
gw_otdata-region
gw_otdata-regionm
gw_otdata-regiont
* Add 2007.12.25 <---
INTO wa_record
SEPARATED BY c_code.
TRANSFER wa_record TO p_otfile.
IF sy-subrc <> 0.
MESSAGE s612 WITH '結果ファイルのダウンロードに失敗しました'.
STOP.
ELSE.
w_cnt = w_cnt + 1.
ENDIF.
ENDLOOP.
ENDIF.
CLOSE DATASET p_otfile.
IF sy-subrc = 0.
MESSAGE s612 WITH w_cnt '件出力しました'.
ELSE.

ENDIF.

ENDFORM.                                                      " END_SEC
