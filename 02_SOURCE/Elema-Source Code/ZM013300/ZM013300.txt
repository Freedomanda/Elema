*&---------------------------------------------------------------------*
*&  REPORT ZM013300　                                                  *
*&         発注参照入庫一括取消                                        *
*&---------------------------------------------------------------------*
*&  機能     : 発注参照入庫一括取消のバッチインプット処理を行う
*&  作成日   : 2012/07/05
*&  作成者   : SHIN(solfis)
*&---------------------------------------------------------------------*
*&[改定履歴]
*& YYYY/MM/DD  Programar         Description
*& 2012/11/13  ISID              ES-UP
*&---------------------------------------------------------------------*
REPORT ZM013300 LINE-SIZE 170
LINE-COUNT 58
NO STANDARD PAGE HEADING
MESSAGE-ID Y1.
*&---------------------------------------------------------------------*
*& 属性定義                                                            *
*&---------------------------------------------------------------------*
TYPES:
* ファイル読込用構造
BEGIN OF T_S_FILE,
MBLNR         TYPE MKPF-MBLNR,       "入出庫伝票（元）
BUDAT         TYPE MKPF-BUDAT,       "転記日付（取消）
END   OF T_S_FILE,
"内部テーブル定義（入力ファイル）
T_I_FILE        TYPE TABLE OF T_S_FILE,

* 出力用構造
* 画面出力構造
BEGIN OF T_S_OUT,
MBLNR         TYPE MKPF-MBLNR,       "入出庫伝票（元）
BUDAT         TYPE MKPF-BUDAT,       "転記日付
MBLNR_C       TYPE MKPF-MBLNR,       "入出庫伝票（取消）
MESSAGE       TYPE BAPIRET2-MESSAGE, "BAPIのエラーメッセージ
EBELN         TYPE MSEG-EBELN,       "購買発注伝票番号
* 非表示項目(内部処理用)
MJAHR         TYPE MKPF-MJAHR,       "会計年度
BUFLG          TYPE C,               "転記日付項目の有無確認
END   OF T_S_OUT,
T_I_OUT        TYPE TABLE OF T_S_OUT.  "内部テーブル定義（出力用）


*&---------------------------------------------------------------------*
*& コンスタント定義
*&---------------------------------------------------------------------*
CONSTANTS:

* 処理フラグ
BEGIN OF CNS_FLG,
ON(1)         TYPE C     VALUE 'X',     "フラグON
OFF(1)        TYPE C     VALUE ' ',     "フラグOFF
END   OF CNS_FLG.
* Add ES-UP 2012/11/13 -->
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
* Add ES-UP 2012/11/13 <--

*&---------------------------------------------------------------------*
*& 選択画面定義                                                        *
*&---------------------------------------------------------------------*
PARAMETERS:
P_FILE(128)  LOWER CASE OBLIGATORY.          "ファイル

SELECTION-SCREEN SKIP.

PARAMETERS:
P_MJAHR      TYPE MKPF-MJAHR OBLIGATORY.     "会計年度

*&---------------------------------------------------------------------*
*& AT SELECTION-SCREEN                                                 *
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
PERFORM FILE_OPEN_DIALOG.

*&---------------------------------------------------------------------*
*& START-OF-SELECTION                                                  *
*&---------------------------------------------------------------------*
START-OF-SELECTION.
PERFORM MAIN.

*&---------------------------------------------------------------------*
*& TOP-OF-PAGE                                                         *
*&---------------------------------------------------------------------*
TOP-OF-PAGE.
*     ヘッダ部の書き込み
WRITE: 70  TEXT-T01.
WRITE:/140 TEXT-T02,
SY-DATUM USING EDIT MASK '____/__/__'.
WRITE:/02  TEXT-T03,
40  TEXT-T04.

WRITE:/02  TEXT-T05,
20  TEXT-T06,
40  TEXT-T07,
60  TEXT-T08,
140 TEXT-T09.
WRITE: SY-ULINE.
*&---------------------------------------------------------------------*
*&      Form  MAIN
*&---------------------------------------------------------------------*
*       メイン処理
*----------------------------------------------------------------------*
FORM MAIN .

DATA:
LIT_FILE    TYPE T_I_FILE,     "内部TBL:入力ファイル
LIT_OUT     TYPE T_I_OUT.      "内部TBL:画面出力用

*-入力ファイル処理
PERFORM FILE_PROC
CHANGING LIT_FILE.       "内部TBL:入力ファイル

*- データ一括取得
PERFORM GET_PROC
USING LIT_FILE        "内部TBL:入力ファイル
CHANGING LIT_OUT.        "内部TBL:取消対象情報

*- データ更新処理BAPI
PERFORM CANCEL_PROC
CHANGING LIT_OUT.        "内部TBL:取消対象情報

*- 出力処理
PERFORM OUTPUT_PROC
USING LIT_OUT.        "内部TBL:画面出力用

ENDFORM.                    " MAIN
*&---------------------------------------------------------------------*
*&      Form  file_open_dialog_sv
*&---------------------------------------------------------------------*
*       ファイルダイアログ表示
*----------------------------------------------------------------------*
FORM FILE_OPEN_DIALOG.

DATA:
LV_FILENAME  TYPE STRING,
LV_FILETABLE TYPE FILETABLE,
LV_RC TYPE I.


CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
EXPORTING
FILE_FILTER             = '*.txt'
INITIAL_DIRECTORY       = 'C:\'
CHANGING
FILE_TABLE              = LV_FILETABLE
RC                      = LV_RC
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 1
CNTL_ERROR              = 2
ERROR_NO_GUI            = 3
OTHERS                  = 4
.

READ TABLE LV_FILETABLE INTO LV_FILENAME INDEX 1.
P_FILE = LV_FILENAME.

ENDFORM.                    " file_open_dialog
*&---------------------------------------------------------------------*
*&      Form  FILE_PROC
*&---------------------------------------------------------------------*
*       ファイル読込
*----------------------------------------------------------------------*
FORM FILE_PROC CHANGING PIT_FILE TYPE T_I_FILE.
* Add ES-UP 2012/11/13 -->
data L_CODEPAGE TYPE ABAP_ENCODING.
* Add ES-UP 2012/11/13 <--
DATA LV_FILENAME TYPE STRING.
LV_FILENAME = P_FILE.
* Add ES-UP 2012/11/13 -->
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
* Add ES-UP 2012/11/13 <--
CALL FUNCTION 'GUI_UPLOAD'
EXPORTING
FILENAME                = LV_FILENAME
HAS_FIELD_SEPARATOR     = CNS_FLG-ON
* Add ES-UP 2012/11/13 -->
CODEPAGE                = L_CODEPAGE
* Add ES-UP 2012/11/13 <--
TABLES
DATA_TAB                = PIT_FILE
EXCEPTIONS
FILE_OPEN_ERROR         = 1
FILE_READ_ERROR         = 2
NO_BATCH                = 3
GUI_REFUSE_FILETRANSFER = 4
INVALID_TYPE            = 5
NO_AUTHORITY            = 6
UNKNOWN_ERROR           = 7
BAD_DATA_FORMAT         = 8
HEADER_NOT_ALLOWED      = 9
SEPARATOR_NOT_ALLOWED   = 10
HEADER_TOO_LONG         = 11
UNKNOWN_DP_ERROR        = 12
ACCESS_DENIED           = 13
DP_OUT_OF_MEMORY        = 14
DISK_FULL               = 15
DP_TIMEOUT              = 16
OTHERS                  = 17.

* データ読込エラーの場合、終了処理へ
IF SY-SUBRC <> 0.
MESSAGE S401 WITH TEXT-E01.
LEAVE LIST-PROCESSING.
ENDIF.

* データなしの場合、終了処理へ
CHECK PIT_FILE IS INITIAL.
MESSAGE S400 WITH TEXT-E02.
LEAVE LIST-PROCESSING.

ENDFORM.                    " FILE_PROC
*&---------------------------------------------------------------------*
*&      Form  GET_PROC
*&---------------------------------------------------------------------*
*       text　入出庫情報取得処理
*----------------------------------------------------------------------*
FORM GET_PROC    USING PIT_FILE    TYPE T_I_FILE
CHANGING PIT_OUT    TYPE T_I_OUT.

DATA:
LS_FILE     TYPE T_S_FILE,     "構造体：入力ファイルWORK
LS_OUT      TYPE T_S_OUT,      "構造体：出力用
LIT_FILE    TYPE T_I_FILE,     "内部TBL:入力ファイルWORK
LIT_OUT     TYPE T_I_OUT.      "内部TBL:出力用

LIT_FILE = PIT_FILE.

REFRESH PIT_OUT.

LOOP AT LIT_FILE INTO LS_FILE.

CLEAR LS_OUT.

SELECT MKPF~MBLNR
MKPF~BUDAT
MSEG~EBELN
INTO CORRESPONDING FIELDS OF LS_OUT
FROM MKPF
INNER JOIN MSEG
ON MKPF~MBLNR = MSEG~MBLNR
WHERE MKPF~MBLNR = LS_FILE-MBLNR.

ENDSELECT.

"入力ファイルに転記日付が有る場合
IF NOT LS_FILE-BUDAT IS INITIAL.
LS_OUT-MBLNR = LS_FILE-MBLNR.
"入力ファイルのデータを利用して転記
LS_OUT-BUDAT = LS_FILE-BUDAT.
LS_OUT-MJAHR = P_MJAHR.
LS_OUT-BUFLG = CNS_FLG-ON.
"入力ファイルに転記日付がない場合
ELSE.
LS_OUT-MBLNR = LS_FILE-MBLNR.
"DBの転記日付を用いて転記
LS_OUT-MJAHR = P_MJAHR.
LS_OUT-BUFLG = CNS_FLG-OFF.

ENDIF.

APPEND LS_OUT TO PIT_OUT.

ENDLOOP.

* SORT PIT_OUT BY MBLNR.

ENDFORM.                    " GET_PROC
*&---------------------------------------------------------------------*
*&      Form  CANCEL_PROC
*&---------------------------------------------------------------------*
*       text  取消処理（BAPI）
*----------------------------------------------------------------------*
FORM CANCEL_PROC USING PIT_OUT TYPE T_I_OUT.

DATA:
LS_OUT      TYPE T_S_OUT,                     "構造体：出力用
LIT_OUT     TYPE T_I_OUT,                     "内部TBL：出力用
LS_H_RET    TYPE BAPI2017_GM_HEAD_RET,        "構造体：入出庫伝票
LS_RET      TYPE BAPIRET2,                    "構造体：メッセージ
LIT_RET     TYPE STANDARD TABLE OF BAPIRET2.  "内部TBL:メッセージ

LIT_OUT = PIT_OUT.

REFRESH PIT_OUT.

LOOP AT LIT_OUT INTO LS_OUT.

REFRESH LIT_RET.
CLEAR : LS_RET , LS_H_RET.


CALL FUNCTION 'BAPI_GOODSMVT_CANCEL'
EXPORTING
MATERIALDOCUMENT          = LS_OUT-MBLNR
MATDOCUMENTYEAR           = LS_OUT-MJAHR
GOODSMVT_PSTNG_DATE       = LS_OUT-BUDAT
*       GOODSMVT_PR_UNAME         =
IMPORTING
GOODSMVT_HEADRET          = LS_H_RET
TABLES
RETURN                    = LIT_RET
*       GOODSMVT_MATDOCITEM       =
.
READ TABLE LIT_RET INTO LS_RET INDEX 1.

IF LS_RET-NUMBER = 111.
"SAP標準エラーメッセージがVERSIONによりバグがあるので
"メッセージの修正
CONCATENATE '入出庫伝票 ' LS_RET-MESSAGE_V2 ' は他のユーザ '
LS_RET-MESSAGE_V1 ' によりブロックされています'
INTO LS_OUT-MESSAGE.

ELSE.

LS_OUT-MESSAGE = LS_RET-MESSAGE.            "エラーメッセージ

ENDIF.

LS_OUT-MBLNR_C = LS_H_RET-MAT_DOC.           "入出庫伝票情報（取消）

APPEND LS_OUT TO PIT_OUT.
"取消失敗した場合ROLLBACKする。
IF LS_RET-TYPE = 'E'.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
*       IMPORTING
*         RETURN        =
.
"取消成功した場合COMMITする。
ELSE.
*      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
*       IMPORTING
*         RETURN        =

CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
EXPORTING
WAIT          = CNS_FLG-ON
*       IMPORTING
*         RETURN        =
.
ENDIF.
ENDLOOP.

* SORT PIT_OUT BY MBLNR.

ENDFORM.                              "CANCEL_PROC
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_PROC
*&---------------------------------------------------------------------*
*       text  画面出力
*----------------------------------------------------------------------*
FORM OUTPUT_PROC USING  PIT_OUT  TYPE T_I_OUT.

DATA:
LS_OUT     TYPE T_S_OUT.      "構造体:出力用

LOOP AT PIT_OUT INTO LS_OUT.

*     データ部の書き込み

WRITE:/ LS_OUT-MBLNR UNDER TEXT-T05.

IF LS_OUT-BUFLG = CNS_FLG-ON.
WRITE: LS_OUT-BUDAT UNDER TEXT-T06 USING EDIT MASK '____/__/__'.
ENDIF.
WRITE: LS_OUT-MBLNR_C UNDER TEXT-T07,
LS_OUT-MESSAGE UNDER TEXT-T08,
LS_OUT-EBELN UNDER TEXT-T09.

ENDLOOP.

ENDFORM.                    " OUTPUT_PROC
