************************************************************************
* [プログラム名]
*   ZS010602        売上一覧表（粗利小数点なしバージョン)
*
* [処理概要]
*   売上状況の把握
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2001/12/20   PSD H.Tanaka      新規開発　
*  2002/01/10   PSD H.Tanaka      ＡＬＶヘッダー表示
*  2002/01/15   PSD H.Tanaka      金額設定
*  2002/01/21   PSD H.Tanaka      数量マイナス編集
*  2002/01/23   PSD H.Tanaka      原価計算対応
*  2002/02/22   PSD M.Arai        売上単価不具合対応
*  2002/03/13   PSD T.SAITOH      ALVステータス印刷拒否設定
*  2002/04/01   PSD T.SAITOH      ショートダンプ可能性個所修正
*  2002/04/01   PSD T.SAITOH      プログラムIDを変更し粗利小数点
*                                 バージョンプログラムとして複製
*                                 構造を別バージョンで作成
*  2002/04/01   PSD T.SAITOH      原価金額円建て、売上金額円建ての小数点
*                                 を設定対応
*  2002/05/01   PSD T.SAITOH      テキスト不具合修正
*  2002/05/02   PSD T.SAITOH      会計伝票番号取得廃止
*  2002/05/02   PSD T.SAITOH      粗利金額（円建て）をLISと同様とする
*  2002/06/20   PSD T.SAITOH      再移送
*  2002/06/21   PSD T.SAITOH      得意先コード（支払人）ドメイン変更
*  2002/07/12   PSD T.SAITOH      得意先発注番号取得先変更
*  2002/07/17   PSD T.SAITOH      READ_TEXT エラーハンドリング対応
*  2002/07/29   PSD T.SAITOH      販売組織／流通チャネル／製品部門対応
*  2002/08/08   カットオーバー ---------------------------------------*
*  2002/08/08   PSD T.SAITOH          ページ番号付加
*  2002/10/18   PSD K.ARAI        金額算出の変更
*  2002/10/18   PSD K.ARAI        売上単価項目算出方法の変更
*  2002/10/21   PSD K.ARAI        販売伝票データ抽出条件追加
*  2004/04/07   NDSC A.MASUDA     テキストの再取得処理追加
*  2007/02/06   DMC R.HATA        出荷先名追加
*  2007/10/03   DMC R.Hata        テキスト再取得条件変更
*  2009/03/06   NDSC S.KURATA     売上単価の取得方法変更
*  2009/09/03   NDSC T.HAYASHI    売上単価の取得方法変更
*  2009/11/17   SOLFIS C.ONUKI    売上単価の取得方法変更
*  2010/09/21   SOLFIS M.MURATA   粗利率の符号を粗利金額の符号と合せる
*  2011/12/05   SOLFIS C.MARUTA   DMW3765
*                                 抽出区分に登録日追加(これまでは転記日)
*                                 ヘッダにどちらの抽出か印字
*                                 抽出区分によってALVレイアウト分岐追加
************************************************************************
report  zs010602.

*---------------------------------------------------------------------
* TYPES
*---------------------------------------------------------------------
type-pools slis.
*--- 請求伝票データ型
types: begin of typ_info,
vbeln   type vbrp-vbeln,     " 請求伝票
posnr   type vbrp-posnr,     " 明細
fkimg   type vbrp-fkimg,     " 請求数量
vrkme   type vbrp-vrkme,     " 販売単位
kursk   type vbrp-kursk,     " 換算レート
aubel   type vbrp-aubel,     " 販売伝票
aupos   type vbrp-aupos,     " 販売伝票明細
matnr   type vbrp-matnr,     " 品目コード
arktx   type vbrp-arktx,     " テキスト
pstyv   type vbrp-pstyv,     " 明細カテゴリ
matkl   type vbrp-matkl,     " 品目グループ
prodh   type vbrp-prodh,     " 品目階層
vstel   type vbrp-vstel,     " 出荷ポイント
vkgrp   type vbrp-vkgrp,     " 営業グループ
vkbur   type vbrp-vkbur,     " 営業所
wavwr   type vbrp-wavwr,     " 原価
mvgr1   type vbrp-mvgr1,     " 商品グループ
mvgr2   type vbrp-mvgr2,     " 最終製品
mvgr3   type vbrp-mvgr3,     " 商品分類
mvgr4   type vbrp-mvgr4,     " 開発部販売実績
* ↓ MODIFY 2002.02.26 PSD M.ARAI 売上計上日不具合対応
*         ERDAT   TYPE VBRP-ERDAT,     " 登録日
fkdat   type vbrk-fkdat,     " 請求日
* ↑
netwra  type vbrp-netwr,     " 正味額
waerk   type vbrk-waerk,     " 伝票通貨
*---DELETE START PSD T.SAITOH 2002/05/02 ---------------------------*
*         BELNR   TYPE VBRK-BELNR,     " 伝票番号
*---DELETE END   PSD T.SAITOH 2002/05/02 ---------------------------*
kdgrp   type vbrk-kdgrp,     " 得意先グループ
zterm   type vbrk-zterm,     " 支払条件
kunnra  type vbrk-kunrg,     " 支払人
kunag   type vbrk-kunag,     " 受注先
fkart   type vbrk-fkart,     " 請求タイプ
* 2002/01/16 PSD H.Tanaka DEL ↓
*         BSTNK   TYPE VBRK-BSTNK_VF,  " 得意先受注番号
* 2002/01/16 PSD H.Tanaka DEL ↑
vbtyp   type vbrk-vbtyp,     " 販売伝票カテゴリ
vtext   type tvstt-vtext,    " 出荷ポイント名
* 2002/01/15 PSD H.Tanaka MOD ↓
bezeib  type tvkbt-bezei,    " 営業署名
bezeia  type tvgrt-bezei,    " 営業グループ名
* 2002/01/15 PSD H.Tanaka MOD ↑
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
kurrf   type vbrk-kurrf ,    " 換算レート
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 ADD START
knumv   type vbrk-knumv,     " 伝票条件番号
*2009/03/06 ADD END
*   insert 2011/12/5 C.MARUTA DMW3765{
erdat   type vbrk-erdat,     " 伝票登録日
* } insert 2011/12/5 C.MARUTA DMW3765
end   of typ_info.

*--- 販売伝票データ型
types: begin of typ_vbap,
* 2002/01/16 PSD H.Tanaka ADD ↓
*         VBELN  TYPE VBAP-VBELN,   " 販売伝票
*         POSNR  TYPE VBAP-POSNR,   " 販売伝票明細
aubel  type vbap-vbeln,   " 販売伝票
aupos  type vbap-posnr,   " 販売伝票明細
* 2002/01/16 PSD H.Tanaka ADD ↑
kwmeng type vbap-kwmeng,  " 受注数量
kdmat  type vbap-kdmat,   " 得意先品目コード
audat  type vbak-audat,   " 伝票日付
*---MODIFY START PSD T.SAITOH 2002/07/12 ---------------------------*
** 2002/01/16 PSD H.Tanaka ADD ↓
*         BSTNK  TYPE VBAK-BSTNK,   " 得意先発注番号
** 2002/01/16 PSD H.Tanaka ADD ↑
bstnk  type vbkd-bstkd,   " 得意先発注番号(３５桁)
*---MODIFY END   PSD T.SAITOH 2002/07/12 ---------------------------*
* ↓ append 2002.02.22 psd m.arai 売上単価不具合対応
netpr  type vbap-netpr,   " 正味額
kpein  type vbap-kpein,   " 価格条件単位
* ↑
end   of typ_vbap.

*---------------------------------------------------------------------
* DATA
*---------------------------------------------------------------------
*--- 購買伝票内部テーブル
data: gf_info  type          typ_info,
gt_info  type table of typ_info.

*--- 販売伝票内部テーブル
data: gf_vbap  type          typ_vbap,
gt_vbap  type table of typ_vbap.

*--- 帳票出力用内部テーブル
data: gf_write   type          zslist_v06a,
gt_write   like table of zslist_v06a.
* 2002/01/10 PSD H.Tanaka ADD ↓
data: gt_alv     type table of zslist_v06a
with header line.
* 2002/01/10 PSD H.Tanaka ADD ↑

*--- REUSE_ALV_EVENTS_GET 用
data: gt_event type slis_t_event.
data: gf_event type slis_alv_event.
data: gf_layout   type slis_layout_alv,     "レイアウト構造
gf_variant   like disvariant,          "バリアント
g_top_of_page type slis_formname value 'TOP_OF_PAGE'.
*---
data: g_repid        type sy-repid,        " プログラムＩＤ
g_data         type sy-datum,        " システム日付
g_edatu        like vbep-edatu,      " 出荷日付
g_adrnr        like vbpa-adrnr,      " 住所
g_bstdk_e      like vbkd-bstdk_e,    " 得意先回答納期
g_flg_exit(1)  type c value '0',     " ＬＯＯＰ終了フラグ
g_kunnra       type vbrk-kunrg.

* 2002/03/12  PSD T.SAITOH ADD ↓----------------------------------- *
data: gf_print type slis_print_alv.
* 2002/03/12  PSD T.SAITOH ADD ↑----------------------------------- *

*---------------------------------------------------------------------
* 定数宣言
*---------------------------------------------------------------------
constants: cns_vbrp(4)    type c value 'VBRP',
cns_vbpa(4)    type c value 'VBPA',
cns_vbep(4)    type c value 'VBEP',
cns_vbbp(4)    type c value 'VBBP',
cns_ekpo(4)    type c value 'EKPO',
cns_vbap(4)    type c value 'VBAP',
cns_vbkd(4)    type c value 'VBKD',
cns_vbfa(4)    type c value 'VBFA',
cns_tvstt(5)   type c value 'TVSTT',
cns_a(1)       type c value 'A',
cns_n(1)       type c value 'N',
cns_h(1)       type c value 'H',
*           CNS_I(1)       TYPE C VALUE 'I',
cns_k(1)       type c value 'K',
cns_l(1)       type c value 'L',
cns_m(1)       type c value 'M',
cns_o(1)       type c value 'O',
cns_c(1)       type c value 'C',
cns_j(1)       type c value 'J',
cns_s(1)       type c value 'S',
cns_x(1)       type c value 'X',
cns_p(1)       type c value 'P',
cns_py(2)      type c value 'PY',
cns_ag(2)      type c value 'AG',
cns_f2(2)      type c value 'F2',
cns_ka(2)      type c value 'KA',
cns_kb(2)      type c value 'KB',
cns_l2(2)      type c value 'L2',
cns_g2(2)      type c value 'G2',
cns_sp(2)      type c value 'SP',
cns_s1(2)      type c value 'S1',
cns_s2(2)      type c value 'S2',
cns_pe(2)      type c value 'PE',
cns_re(2)      type c value 'RE',
cns_tan(3)     type c value 'TAN',
cns_ztan(4)    type c value 'ZTAN',
cns_ztmp(4)    type c value 'ZTMP',
cns_zero(1)    type c value '0',
cns_zseo(4)    type c value 'ZSEO',
cns_zsek(4)    type c value 'ZSEK',
cns_onli(4)    type c value 'ONLI',
cns_0001(4)    type c value '0001',
cns_*(1)       type c value '*'
.
*---------------------------------------------------------------------
* 選択画面定義
*---------------------------------------------------------------------
*   insert 2011/12/5 C.MARUTA DMW3765{
selection-screen begin of line.
selection-screen comment (8) text-022.
selection-screen position 35.
parameters r_fkdat radiobutton group gr1 default 'X'. "売上計上日
selection-screen comment 37(10) text-023 for field r_fkdat.
selection-screen position 60.
parameters r_erdat radiobutton group gr1.             "登録日
selection-screen comment 62(6) text-024 for field r_erdat.
selection-screen end of line.
* } insert 2011/12/5 C.MARUTA DMW3765
*--- 抽出年月日
* ↓ MODIFY 2002.02.26 PSD M.Arai 売上計上日変更対応
*SELECT-OPTIONS: S_ERDAT FOR GF_INFO-ERDAT OBLIGATORY.
select-options: s_erdat for gf_info-fkdat obligatory.
* ↑
*---APPEND START PSD T.SAITOH 2002/07/29 ---------------------------*
*   販売組織
parameters: pr_vkorg type tvko-vkorg memory id vko obligatory,
*   流通チャネル
pr_vtweg type tvtw-vtweg memory id vtw obligatory,
*   製品部門
pr_spart type tspa-spart memory id spa obligatory.
*---APPEND END   PSD T.SAITOH 2002/07/29 ---------------------------*

*--- 営業所コード
select-options: s_vkbur for gf_info-vkbur obligatory.
*--- 営業グループ
select-options: s_vkgrp for gf_info-vkgrp.
*--- 得意先コード
select-options: s_kunrg for g_kunnra.

* Add 2006.10.27 --->
*--- 品目コード
select-options: s_matnr for gf_info-matnr .
* Add 2006.10.27 <---

* Add 2008.11.17 --->
*--- 品目コード
select-options: s_fkart for gf_info-fkart .
* Add 2008.11.17 <---



*---------------------------------------------------------------------
* START-OF-SELECTION
*---------------------------------------------------------------------
start-of-selection.
*--- 初期処理
perform frm_init.

*--- 帳票出力用内部テーブル設定処理
perform frm_make_data.

*--- 帳票出力処理
perform frm_write_data.

************************************************************************
* TOP-OF-PAGE
***********************************************************************
form frm_top_of_page.
*--- ヘッダー出力処理
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WRITE:  50      TEXT-001,
*            /1      TEXT-002,GF_WRITE-VKBUR,TEXT-004,GF_WRITE-BEZEIA,
*                    TEXT-003,GF_WRITE-VKGRP,TEXT-004,GF_WRITE-BEZEIB,
*                    TEXT-005,GF_WRITE-DATFM,        " 日付
*                    TEXT-006,GF_WRITE-DATTO.        " 日付
write:  50      text-001,
/1      text-002,gt_alv-vkbur,text-004,gt_alv-bezeia,
text-003,gt_alv-vkgrp,text-004,gt_alv-bezeib,
text-005,gt_alv-datfm,        " 日付
text-006,gt_alv-datto.        " 日付
* 2002/01/10 PSD H.Tanaka MOD ↑

*   insert 2011/12/5 C.MARUTA DMW3765{
if r_fkdat = 'X'.      "売上計上日で抽出
write 123 text-025.
else.
write 123 text-026.
endif.
* } insert 2011/12/5 C.MARUTA DMW3765

*---APPEND START PSD T.SAITOH 2002/08/08 ---------------------------*
*   ページ番号付加
write: 140 'PAGE:',sy-pagno.
*---APPEND END   PSD T.SAITOH 2002/08/08 ---------------------------*

endform.
************************************************************************
* ALV CALLER_EXIT（ 2002/01/10 PSD H.Tanaka ADD ）
***********************************************************************
form frm_caller_exit using rs_data type slis_data_caller_exit.
rs_data-callback_header_transport = 'FILITEXTS_TEXT_TRANSPORT'.
endform.
************************************************************************
* Form
***********************************************************************
*&---------------------------------------------------------------------*
*&      Form  FRM_INIT
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_init.

g_repid = sy-repid.   " プログラムＩＤ取得
g_data  = sy-datum.   " システム日付取得

endform.                    " FRM_INIT
*&---------------------------------------------------------------------
*&      Form  FRM_MAKE_DATA
*&---------------------------------------------------------------------
*       帳票出力用内部テーブル設定処理
*----------------------------------------------------------------------
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------
form frm_make_data.
*--- 請求伝票情報取得処理
perform frm_vbrk_get.

*--- 帳票出力情報設定処理
loop at gt_info into gf_info.
*--- 請求伝票情報設定処理
perform frm_vbrk_set.
*--- 販売伝票情報取得処理
perform frm_vbap_get.
*--- 販売伝票情報設定処理
perform frm_vbap_set.
* 2002/01/21 PSD H.Tanaka ADD ↓
*--- 数量のマイナス設定処理
perform frm_data_set.
*--- 選択処理年月日設定処理
perform frm_date_set.
*--- 計算処理
perform frm_keisan_set.
*--- 帳票用内部テーブル更新処理
append gf_write to gt_write.
endloop.

endform.                    " FRM_MAKE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_VBRK_GET
*&---------------------------------------------------------------------*
*       請求伝票情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbrk_get.
clear   gf_info.
refresh gt_info.

*--- 販売伝票情報取得
*   insert 2011/12/5 C.MARUTA DMW3765{
if r_fkdat = 'X'.      "売上計上日で抽出
* } insert 2011/12/5 C.MARUTA DMW3765
select a~vbeln a~posnr a~fkimg a~vrkme a~kursk
a~aubel a~aupos a~matnr a~arktx a~pstyv
a~matkl a~prodh a~vstel a~vkgrp a~vkbur
a~wavwr a~mvgr1 a~mvgr2 a~mvgr3 a~mvgr4
* ↓ MODIFY  2002.02.26 PSD M.Arai 売上計上日不具合対応
*         A~ERDAT A~NETWR
b~fkdat a~netwr
* ↑
*---MODIFY START PSD T.SAITOH 2002/05/02 ---------------------------*
*        B~WAERK B~BELNR B~KDGRP B~ZTERM
b~waerk         b~kdgrp b~zterm
*---MODIFY END   PSD T.SAITOH 2002/05/02 ---------------------------*
* 2002/01/16 PSD H.Tanaka MOD ↓
b~kunrg b~kunag b~fkart
*         B~BSTNK_VF
b~vbtyp
*         C~BEZEI D~BEZEI E~VTEXT
* 2002/01/16 PSD H.Tanaka MOD ↑
c~vtext d~bezei e~bezei
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*** 売上金額（円だて）算出のため
b~kurrf
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 ADD START
b~knumv
*2009/03/06 ADD END
*   insert 2011/12/5 C.MARUTA DMW3765{
b~erdat
* } insert 2011/12/5 C.MARUTA DMW3765
into table gt_info
from ( ( ( vbrp as a inner join vbrk as b
on       a~vbeln  = b~vbeln ) inner join tvstt as c
on       a~vstel  = c~vstel ) inner join tvgrt as d
on       a~vkgrp  = d~vkgrp ) inner join tvkbt as e
on       a~vkbur  = e~vkbur
where     a~vkgrp in s_vkgrp
and     a~vkbur in s_vkbur
* ↓ MODIFY 2002.02.26 M.Arai 売上計上日変更対応
*     AND     A~ERDAT IN S_ERDAT
and     b~fkdat in s_erdat

* Add 2006.10.27 --->
and matnr in s_matnr
* Add 2006.10.27 <---

* Add 2006.10.27 --->
and b~fkart in s_fkart
* Add 2006.10.27 <---



* ↑
*---APPEND START PSD T.SAITOH 2002/07/29 ---------------------------*
and     b~vkorg = pr_vkorg
and     b~vtweg = pr_vtweg
and     b~spart = pr_spart
*---APPEND END   PSD T.SAITOH 2002/07/29 ---------------------------*
and     b~kunrg in s_kunrg
and ( ( b~fkart =  cns_f2
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_m )
*---APPEND START PSD K.ARAI   2002/10/21 ---------------------------*
or   ( b~fkart =  cns_l2
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_p )
*---APPEND END   PSD K.ARAI   2002/10/21 ---------------------------*
or   ( b~fkart =  cns_re
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_o )
or   ( b~fkart =  cns_s2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_s )
or   ( b~fkart =  cns_s2
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_s )
or   ( b~fkart =  cns_s1
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_n )
or   ( b~fkart =  cns_s1
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_n )
or   ( b~fkart =  cns_l2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_p )
or   ( b~fkart =  cns_g2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_o ) )
and     c~spras =  cns_j
and     d~spras =  cns_j
and     e~spras =  cns_j.

*   insert 2011/12/5 C.MARUTA DMW3765{
else.                  "登録日で抽出
select a~vbeln a~posnr a~fkimg a~vrkme a~kursk
a~aubel a~aupos a~matnr a~arktx a~pstyv
a~matkl a~prodh a~vstel a~vkgrp a~vkbur
a~wavwr a~mvgr1 a~mvgr2 a~mvgr3 a~mvgr4
b~fkdat a~netwr b~waerk b~kdgrp b~zterm
b~kunrg b~kunag b~fkart b~vbtyp c~vtext
d~bezei e~bezei b~kurrf b~knumv b~erdat
into table gt_info
from ( ( ( vbrp as a inner join vbrk as b
on       a~vbeln  = b~vbeln ) inner join tvstt as c
on       a~vstel  = c~vstel ) inner join tvgrt as d
on       a~vkgrp  = d~vkgrp ) inner join tvkbt as e
on       a~vkbur  = e~vkbur
where     a~vkgrp in s_vkgrp
and     a~vkbur in s_vkbur
and     b~erdat in s_erdat      "←変更
and     a~matnr in s_matnr
and     b~fkart in s_fkart
and     b~vkorg = pr_vkorg
and     b~vtweg = pr_vtweg
and     b~spart = pr_spart
and     b~kunrg in s_kunrg
and ( ( b~fkart =  cns_f2
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_m )
or   ( b~fkart =  cns_l2
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_p )
or   ( b~fkart =  cns_re
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_o )
or   ( b~fkart =  cns_s2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_s )
or   ( b~fkart =  cns_s2
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_s )
or   ( b~fkart =  cns_s1
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_n )
or   ( b~fkart =  cns_s1
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_n )
or   ( b~fkart =  cns_l2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_p )
or   ( b~fkart =  cns_g2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_o ) )
and     c~spras =  cns_j
and     d~spras =  cns_j
and     e~spras =  cns_j.
endif.
* } insert 2011/12/5 C.MARUTA DMW3765
*--- エラー処理
case sy-subrc.
when 0.
when 4.         " 対象データなし
message s600(z1) with text-007.
stop.
when others.    " システムエラー
message a603(z1) with g_repid
cns_vbrp
sy-subrc.
endcase.

endform.                    " FRM_VBRK_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBRK_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbrk_set.
clear: gf_write,        " 帳票出力用構造クリア
g_flg_exit.      " ＬＯＯＰ終了フラグクリア
*--- 共通項目設定
move-corresponding gf_info to gf_write.

*--- 区・在（在庫品）設定
if gf_write-pstyv = cns_zseo.
gf_write-ku = text-008.
elseif gf_write-pstyv = cns_zsek or
gf_write-pstyv = cns_tan  or
gf_write-pstyv = cns_ztan or
gf_write-pstyv = cns_ztmp.
gf_write-zai = cns_*.
if gf_write-pstyv = cns_zsek.
gf_write-ku  = text-009.
endif.
endif.

*--- 伝区設定
if gf_write-fkart = cns_re.
gf_write-denku = text-010.
elseif gf_write-fkart = cns_g2.
gf_write-denku = text-011.
elseif gf_write-fkart = cns_l2.
gf_write-denku = text-012.
elseif gf_write-fkart = cns_s1.
gf_write-denku = text-013.
elseif gf_write-fkart = cns_s2.
gf_write-denku = text-014.
endif.

endform.                    " FRM_VBRK_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbap_get.
clear   gf_vbap.
refresh gt_vbap.

*--- 販売伝票情報取得
select a~vbeln a~posnr a~kwmeng a~kdmat
b~audat
* 2002/01/16 PSD H.Tanaka ADD ↓
b~bstnk
* 2002/01/16 PSD H.Tanaka ADD ↑
* ↓ 2002.02.22 psd m.arai 売上単価不具合対応
a~netpr
a~kpein
* ↑
*    INTO CORRESPONDING FIELDS OF TABLE GT_VBAP
into table gt_vbap
from vbap as a inner join vbak as b
on a~vbeln = b~vbeln
where a~vbeln = gf_info-aubel
and a~posnr = gf_info-aupos.

*--- エラー処理
case sy-subrc.
when 0.
*      SORT GT_VBAP BY VBELN POSNR.
sort gt_vbap by aubel aupos.
when 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-015.
when others.    " システムエラー
message a603(z1) with g_repid
cns_vbap
sy-subrc.
endcase.

endform.                    " FRM_VBAP_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbap_set.

loop at gt_vbap into gf_vbap.
if sy-tabix = 1.
*--- 販売情報設定
move-corresponding gf_vbap to gf_write.
*---APPEND START PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 出荷指示備考設定
perform frm_read_text_forwarding.
*---APPEND END   PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 社内用備考設定
perform frm_read_text.
*--- 販売伝票納入日程行情報取得
perform frm_vbep_get.
*--- 販売伝票ビジネスデータ情報取得
perform frm_vbkd_get.


* Add 2007.02.06 --->
*--- 出荷先名設定
perform frm_vbpa_get using   'WE'
'出荷先名'
changing gf_write-shukka.
*--- 出荷先名設定
perform frm_addr_get using    gf_write-shukka
changing gf_write-shukka.
* Add 2007.02.06 <---


*--- 販売伝票取引先取得（受注先名取得用）
* 2002/01/11 PSD H.Tanaka MOD ↓
*      PERFORM FRM_VBPA_GET USING    CNS_SP
perform frm_vbpa_get using    cns_ag
* 2002/01/11 PSD H.Tanaka MOD ↑
text-019
*                           CHANGING GF_WRITE-KUNAG.
changing gf_write-kunnrb.
*--- 受注先名設定
*      PERFORM FRM_ADDR_GET USING    GF_WRITE-KUNAG
perform frm_addr_get using    gf_write-kunnrb
changing gf_write-kunnrb.
*--- 販売伝票取引先取得（得意先名取得用）
* 2002/01/11 PSD H.Tanaka MOD ↓
*      PERFORM FRM_VBPA_GET USING    CNS_PY
perform frm_vbpa_get using    cns_ag
* 2002/01/11 PSD H.Tanaka MOD ↑
text-018
*                           CHANGING GF_WRITE-KUNNRA.
changing gf_write-kuntx.
*--- 得意先名設定
*      PERFORM FRM_ADDR_GET USING    GF_WRITE-KUNNRA
perform frm_addr_get using    gf_write-kuntx
changing gf_write-kuntx.
else.
*--- 受注数量設定
gf_write-kwmeng = gf_write-kwmeng + gf_vbap-kwmeng.
endif.
endloop.

endform.                    " FRM_VBAP_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT
*&---------------------------------------------------------------------*
*       社内用備考取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_read_text.
data: lt_tline    type table of tline,
lf_tline    type tline,
l_vbeln     like thead-tdname.

*  CONCATENATE GF_VBAP-VBELN
*              GF_VBAP-POSNR
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
*  ヘッダ単位のためヘッダのみ
*  CONCATENATE GF_VBAP-AUBEL
*              GF_VBAP-AUPOS
*              INTO L_VBELN.
* Modified 2004.04.07 >>>
* L_VBELN = GF_VBAP-AUBEL.
select single vgbel
from vbrp
into l_vbeln
where vbeln eq gf_info-vbeln
and  posnr eq gf_info-posnr
.

* Modified 2004.04.07 <<<

*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 汎用モジュール『READ_TEXT』
call function 'READ_TEXT'
exporting
id        = '0001'
language  = 'J'
name      = l_vbeln
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
* 設計書どおりに記述していないため修正
*            OBJECT    = 'VBBP'
object    = 'VBBK'
*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
tables
lines     = lt_tline
exceptions
not_found = 4
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
reference_check = 5
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
others    = 8.
case sy-subrc.
when 0.
read table lt_tline into lf_tline index 1.
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
*     GF_WRITE-ETCB = LF_TLINE+0(40).
gf_write-etcb = lf_tline-tdline.
*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
* Mod 2007.10.03 --->
*    WHEN 8.
when others .
* Mod 2007.10.03 <---

*---APPEND START NDSC A.MASUDA 2004/04/07---------------------------*
l_vbeln = gf_vbap-aubel.
*--- 汎用モジュール『READ_TEXT』
call function 'READ_TEXT'
exporting
id        = '0001'
language  = 'J'
name      = l_vbeln
object    = 'VBBK'
tables
lines     = lt_tline
exceptions
not_found = 4
reference_check = 5
others    = 8.
case sy-subrc.
when 0.
read table lt_tline into lf_tline index 1.
gf_write-etcb = lf_tline-tdline.
when 8.
message e001(z1) with text-016
sy-subrc.
endcase.
*---APPEND START NDSC A.MASUDA 2004/04/07---------------------------*
*---DELETE START NDSC A.MASUDA 2004/04/07---------------------------*
*      MESSAGE E001(Z1) WITH TEXT-016
*                            SY-SUBRC.
*---DELETE END   NDSC A.MASUDA 2004/04/07---------------------------*
endcase.

endform.                    " FRM_READ_TEXT
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET
*&---------------------------------------------------------------------*
*       販売伝票納入日程行情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbep_get.
*--- 販売伝票納入日程行取得
select single edatu
into (gf_write-edatu)
from vbep
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR
where vbeln = gf_vbap-aubel
and posnr = gf_vbap-aupos
and etenr = cns_0001.

*--- エラー処理
case sy-subrc.
when 0.
when 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-017.
when others.    " システムエラー
message a603(z1) with g_repid
cns_vbep
sy-subrc.
endcase.

endform.                    " FRM_VBEP_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBKD_GET
*&---------------------------------------------------------------------*
*       販売伝票ビジネスデータ情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbkd_get.
*--- 販売伝票ビジネスデータ情報取得
select single bstdk_e
*---APPEND START PSD T.SAITOH 2002/07/12 ---------------------------*
bstkd "得意先発注番号（３５桁）
*---APPEND END   PSD T.SAITOH 2002/07/12 ---------------------------*
*---MODIFY START PSD T.SAITOH 2002/07/12 ---------------------------*
*    INTO (GF_WRITE-TKNK)
into (gf_write-tknk,gf_write-bstnk)
*---MODIFY END   PSD T.SAITOH 2002/07/12 ---------------------------*
from vbkd
* 2002/01/22 PSD H.Tanaka MOD ↓
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR.
where vbeln = gf_vbap-aubel
*     AND POSNR = GF_VBAP-AUPOS
and posnr = '000000'.

*--- エラー処理
case sy-subrc.
when 0.
when 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-020.
when others.    " システムエラー
message a603(z1) with g_repid
cns_vbkd
sy-subrc.
endcase.

endform.                    " FRM_VBKD_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET
*&---------------------------------------------------------------------*
*       販売伝票取引先取得処理
*----------------------------------------------------------------------*
*      -->P_PAEVW  取引先機能
*      -->P_TEXT   エラー時出力用テーブル名
*      <--P_ADRNR  住所
*----------------------------------------------------------------------*
form frm_vbpa_get using    p_paevw
p_text
changing p_adrnr.
*--- 販売伝票取引情報取得
select single adrnr
into (p_adrnr)
from vbpa
* 2002/01/11 PSD H.Tanaka MOD ↓
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR
where vbeln = gf_vbap-aubel
and posnr = '000000'
* 2002/01/11 PSD H.Tanaka MOD ↑
and parvw = p_paevw.

*--- エラー処理
case sy-subrc.
when 0.
when 4.         " 対象データなし
message s600(z1) with p_text.
when others.    " システムエラー
message a603(z1) with g_repid
cns_vbpa
sy-subrc.
endcase.

endform.                    " FRM_VBPA_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_DATE_SET
*&---------------------------------------------------------------------*
*       選択処理年月日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_date_set.
gf_write-datfm = s_erdat-low.
gf_write-datto = s_erdat-high.
endform.                    " FRM_DATE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_KEISAN_SET
*&---------------------------------------------------------------------*
*       計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_keisan_set.
data: l_netwra type zslist_v06a-kwmeng,
l_wavwr  type zslist_v06a-netpra.
*2009/03/06 ADD START
data: l_kbetr        type konv-kbetr,
l_kpein        type konv-kpein,
l_waers        type konv-waers,
l_netpra(13)   type c.
*2009/03/06 ADD END
*--- 売上金額設定
* 2002/01/22 PSD H.Tanaka MOD ↓
*2009/03/06 DEL START
*  PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
**                                      GF_WRITE-NETWRA
***                             CHANGING GF_WRITE-NETWRB.
**                             CHANGING GF_WRITE-NETWRA.
** ↓ modify 2002.02.22 psd m.arai 売上単価不具合対応
**                                      GF_INFO-NETWRA
*                                      GF_VBAP-NETPR
*                             CHANGING L_NETWRA.
*2009/03/06 DEL END
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*** 売上金額はVBAP-NETPRではなく、VBRP-NETWRから算出する。
perform frm_kingaku_henkan using     gf_write-waerk
gf_info-netwra
changing  gf_write-netwra.
*  GF_WRITE-NETWRA = L_NETWRA.
*  IF GF_VBAP-KPEIN <> 0.
*    GF_WRITE-NETWRA = ( GF_WRITE-NETWRA * GF_WRITE-FKIMG )
*                    / GF_VBAP-KPEIN.
*  ELSE.
*    GF_WRITE-NETWRA = 0.
*  ENDIF.

* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*

* ↑

*--- 原価設定
* 2002/01/22 PSD H.Tanaka MOD ↓
perform frm_kingaku_henkan using    gf_write-waerk
*                                      GF_WRITE-WAVWR
gf_info-wavwr
*                             CHANGING GF_WRITE-WAVWRA.
*                             CHANGING GF_WRITE-WAVWR.
changing l_wavwr.
*--- 原価計算
* 2002/01/24 PSD H.Tanaka MOD ↓
*  IF GF_WRITE-KWMENG <> CNS_ZERO.
if gf_info-fkimg <> cns_zero.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_WRITE-KWMENG.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_VBAP-KWMENG.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_INFO-FKIMG.
gf_write-wavwr = l_wavwr / gf_info-fkimg.
gf_write-wavwra = ( l_wavwr / gf_info-fkimg ) * gf_write-kursk.
endif.
*--- 原価（円建て）計算
*  GF_WRITE-WAVWRA = GF_WRITE-WAVWR * GF_WRITE-KURSK.

*--- 原価金額計算
*  GF_WRITE-GYENA = GF_WRITE-WAVWR.
*  GF_WRITE-GYENA = L_WAVWR.
if gf_info-vbtyp = cns_n or
gf_info-vbtyp = cns_o.
*    GF_WRITE-GYENA = GF_WRITE-GYENA * -1.
l_wavwr = l_wavwr * -1.
endif.
gf_write-gyena = l_wavwr.
*--- 原価金額（円建て）計算（小数点なし）
* 2002/01/11 PSD H.Tanaka MOD ↓
*  GF_WRITE-GYENB  = GF_WRITE-WAVWRA * GF_WRITE-FKIMG.
*  GF_WRITE-GYENB = GF_WRITE-GYENA * GF_WRITE-KURSK.
gf_write-gyenb = l_wavwr * gf_write-kursk.

*--- 売上単価計算
*---MODIFY START PSD T.SAITOH 2002/04/01 ---------------------------*
*  IF GF_WRITE-FKIMG <> CNS_ZERO. "チェックする内容が違うのでは？
*                                  とりあえず、修正する。
if gf_vbap-kpein <> cns_zero.
*---MODIFY END   PSD T.SAITOH 2002/04/01 ---------------------------*
* 2002/01/22 PSD H.Tanaka MOD ↓
*    GF_WRITE-NETPRA = GF_WRITE-NETWRB / GF_WRITE-FKIMG.
*    GF_WRITE-NETPRA = L_NETWRA / GF_WRITE-FKIMG.

* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 MOD START
*   条件レート・価格条件単位取得
perform frm_get_konv using    gf_info-knumv
gf_info-posnr
changing l_kbetr
l_kpein
l_waers.
if l_kpein <> cns_zero.
*     条件レートを通貨変換
write l_kbetr to l_netpra currency l_waers no-grouping.
*     売上単価 = 条件レート ÷ 価格条件単位
gf_write-netpra = l_netpra / l_kpein.
endif.
**** 売上単価　=　売上金額　÷　数量
*    IF GF_INFO-FKIMG <> CNS_ZERO.
*      GF_WRITE-NETPRA = GF_WRITE-NETWRA / GF_INFO-FKIMG.
*    ENDIF.
*2009/03/06 MOD END
*    GF_WRITE-NETPRA = L_NETWRA / GF_VBAP-KPEIN."売上単価算出
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*

* APPEND START PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 DEL START
**** 売上単価を求める際、マイナスの値が出ることを防ぐため
*    IF GF_WRITE-NETWRA < CNS_ZERO.
*      GF_WRITE-NETPRA = GF_WRITE-NETPRA * - 1 .
*    ENDIF.
*2009/03/06 DEL END
* APPEND END   PSD K.ARAI 2002/10/18--------------------------*

*---DELETE START PSD T.SAITOH 2002/04/01 ---------------------------*
*  ENDIF.
*---DELETE END   PSD T.SAITOH 2002/04/01 ---------------------------*

*--- 売上単価（円建て）計算
* ↓ MODIFY 2002/02/22 PSD M.Arai 売上単価不具合対応
*  GF_WRITE-NETPRB = GF_WRITE-NETPRA * GF_WRITE-KURSK.
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 MOD START
*-- 売上単価（円建て） = 売上単価　×　換算レート
gf_write-netprb  = gf_write-netpra * gf_write-kursk.
*    GF_WRITE-NETPRB  =
*          ( GF_WRITE-NETPRA / GF_VBAP-KPEIN ) * GF_WRITE-KURSK.
*2009/03/06 MOD END
*   GF_WRITE-NETPRB = ( L_NETWRA / GF_VBAP-KPEIN )  * GF_WRITE-KURSK.
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
* ↑
*---MODIFY START PSD T.SAITOH 2002/04/01 ---------------------------*
endif.
*---MODIFY END   PSD T.SAITOH 2002/04/01 ---------------------------*


*--- 売上金額（円建て）計算（小数点なし）
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
***売上金額（円建て）=　売上金額（原価） × 換算レート
gf_write-netwrb = gf_write-netwra * gf_info-kurrf.
*  GF_WRITE-NETWRB = GF_WRITE-FKIMG * GF_WRITE-NETPRB.
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
* 2002/01/11 PSD H.Tanaka MOD ↑

*---APPEND START PSD T.SAITOH 2002/04/01 ---------------------------*
* 売上金額（円建て）小数点ありをリストビューア項目に設定する
gf_write-netwrc = gf_write-fkimg * gf_write-netprb.
* 原価金額（円建て）小数点ありをリストビューア項目に設定する
gf_write-gyenc =  l_wavwr * gf_write-kursk.
*---APPEND END   PSD T.SAITOH 2002/04/01 ---------------------------*

*--- 粗利金額計算
*---MODIFY START PSD T.SAITOH 2002/05/02 ---------------------------*
*  GF_WRITE-ARAEYN = GF_WRITE-NETWRB - GF_WRITE-GYENB.
* 粗利金額 = （売上金額（外貨）−原価金額（外貨））＊ 換算レート
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*** 換算レートを修正
gf_write-araeyn
= ( gf_write-netwra - l_wavwr ) * gf_info-kurrf.
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
*---MODIFY END   PSD T.SAITOH 2002/05/02 ---------------------------*

*--- 粗利率計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*    GF_WRITE-ARAPER = GF_WRITE-ARAEYN / GF_WRITE-NETWRA.
*  IF GF_WRITE-NETWRA <> CNS_ZERO.
if gf_write-netwrb <> cns_zero.
gf_write-araper = gf_write-araeyn / gf_write-netwrb * 100.
* 2002/01/11 PSD H.Tanaka MOD ↑
endif.

* Add Start 2010/09/21
* 粗利率の符号は粗利金額のそれと合せる
if gf_write-araeyn < 0.             "粗利金額 < 0
if gf_write-araper > 0.           "粗利率 > 0
gf_write-araper = gf_write-araper * -1.
endif.
else.                               "粗利金額 => 0
if gf_write-araper < 0.           "粗利率 < 0
gf_write-araper = gf_write-araper * -1.
endif.
endif.
* Add End   2010/09/21

*---modify START PSD T.SAITOH 2002/04/01 ---------------------------*
* 売上金額（円建て）小数点ありをリストビューア項目に設定する
*    GF_WRITE-NETWRC = GF_WRITE-NETWRB.
* 原価金額（円建て）小数点ありをリストビューア項目に設定する
*    GF_WRITE-GYENC = GF_WRITE-GYENB.
*---modify END   PSD T.SAITOH 2002/04/01 ---------------------------*
endform.                    " FRM_KEISAN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_ADDR_GET
*&---------------------------------------------------------------------*
*       受注先名／得意先名取得処理
*----------------------------------------------------------------------*
*      -->P_ADRNR  住所
*      <--P_NAME2  受注先名／得意先名
*----------------------------------------------------------------------*
form frm_addr_get using    p_adrnr
changing p_name2.
data l_addr1_sel type addr1_sel.
data l_sadr      type sadr.

l_addr1_sel-addrnumber = p_adrnr.
*--- 汎用モジュール『ADDR_GET』
call function 'ADDR_GET'
exporting
address_selection = l_addr1_sel
importing
sadr              = l_sadr
exceptions
parameter_error   = 1
address_not_exist = 2
version_not_exist = 3
internal_error    = 4
others            = 5.
if sy-subrc <> 0.
*    P_KUNNR = ''.
else.
p_name2 = l_sadr-name1.
endif.

endform.                    " FRM_ADDR_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_write_data.
*--- 帳票設定処理
perform frm_write_set.

*--- リストの出力
call function 'REUSE_ALV_LIST_DISPLAY'
exporting
i_callback_program             = g_repid        "レポートID
*   I_CALLBACK_TOP_OF_PAGE          = G_TOP_OF_PAGE  "TOP_OF_PAGE
i_structure_name               = 'ZSLIST_V06a'   "構造
is_layout                      = gf_layout      "レイアウト設定
i_save                         = 'A'            "レイアウト保存
is_variant                     = gf_variant
it_events                      = gt_event[]     "イベント設定
* 2002/03/13  PSD T.SAITOH ADD ↓-------------------------------------*
is_print                       = gf_print      "印刷設定
* 2002/03/13  PSD T.SAITOH ADD ↑-------------------------------------*
tables
* 2002/01/10 PSD H.Tanaka MOD ↓
*    T_OUTTAB                       = GT_WRITE  " 帳票出力用内部テーブル
t_outtab                       = gt_alv  " 帳票出力用内部テーブル
* 2002/01/10 PSD H.Tanaka MOD ↑
exceptions
program_error                  = 1
others                         = 2
.
if sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
endif.

endform.                    " FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_SET
*&---------------------------------------------------------------------*
*       帳票設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_write_set.
* 2002/02/06 PSD H.Tanaka ADD ↓
*--- 内部テーブル存在チェック
if gt_write is initial.
message s204(z1).
stop.
endif.
* 2002/02/06 PSD H.Tanaka ADD ↑
* 2002/01/10 PSD H.Tanaka ADD ↓
*--- 内部テーブル変換処理
gt_alv[] = gt_write[].
* 2002/01/10 PSD H.Tanaka ADD ↑
* 2002/03/12  PSD T.SAITOH ADD ↓-------------------------------------*
gf_print-no_print_listinfos = 'X'.
* 2002/03/12  PSD T.SAITOH ADD ↑-------------------------------------*

*--- イベント取得処理
perform frm_event_get.

*--- ページ切り替え設定
gf_layout-group_change_edit = cns_x.

*--- バリアント保存設定
*   modify 2011/12/5 C.MARUTA DMW3765{
*  GF_VARIANT-VARIANT = '/ZS010600_01'.
if r_fkdat = 'X'.      "売上計上日
gf_variant-variant = '/ZS010600_01'.
else.                  "登録日
gf_variant-variant = '/ZS010600_04'.
endif.
* } modify 2011/12/5 C.MARUTA DMW3765
endform.                    " FRM_WRITE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_EVENT_GET
*&---------------------------------------------------------------------*
*       イベント取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_event_get.
*--- イベント取得
call function 'REUSE_ALV_EVENTS_GET'
exporting
i_list_type     = 0
importing
et_events       = gt_event
exceptions
list_type_wrong = 1
others          = 2.
if sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
endif.

*--- 使用イベントに実行するサブルーチン名を設定
loop at gt_event into gf_event.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WHERE NAME = 'TOP_OF_PAGE'.
*      GF_EVENT-FORM = 'FRM_TOP_OF_PAGE'.
*      MODIFY GT_EVENT FROM GF_EVENT.
case gf_event-name.
when 'TOP_OF_PAGE'.
gf_event-form = 'FRM_TOP_OF_PAGE'.
modify gt_event from gf_event.
when 'CALLER_EXIT'.
gf_event-form = 'FRM_CALLER_EXIT'.
modify gt_event from gf_event.
endcase.
* 2002/01/10 PSD H.Tanaka MOD ↑
endloop.

endform.                    " FRM_EVENT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*       金額変換処理
*----------------------------------------------------------------------*
*      -->P_TSUKACD  通貨コード
*      -->P_KINGAKU  変換前金額
*      <--P_HENKAN   変換後金額
*----------------------------------------------------------------------*
form frm_kingaku_henkan using    p_tsukacd
p_kingaku
changing p_henkan.
data l_idoc_amount(255) type c.
*--- 汎用モジュール金額変換モジュール
call function 'CURRENCY_AMOUNT_SAP_TO_IDOC'
exporting
currency    = p_tsukacd
sap_amount  = p_kingaku
importing
idoc_amount = l_idoc_amount
exceptions
others      = 1.
if sy-subrc <> 1.
p_henkan = l_idoc_amount.
endif.

endform.                    " FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_SET
*&---------------------------------------------------------------------*
*       数量のマイナス設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_data_set.
* 2002/01/15 PSD H.Tanaka ADD ↓
*--- 売上金額・売上数量・受注数量変換
if gf_info-vbtyp = cns_n or
gf_info-vbtyp = cns_o.
* 2002/01/24 PSD H.Tanaka MOD ↓
*    GF_WRITE-NETWRA = GF_WRITE-NETWRA * -1. " 売上金額
gf_info-netwra = gf_info-netwra * -1. " 売上金額
* 2002/01/21 PSD H.Tanaka MOD ↓
*    GF_WRITE-WAVWR  = GF_WRITE-WAVWR  * -1.
gf_write-fkimg  = gf_write-fkimg  * -1. " 売上数量
gf_write-kwmeng = gf_write-kwmeng * -1. " 受注数量
endif.
* 2002/01/15 PSD H.Tanaka ADD ↑

endform.                    " FRM_DATA_SET
*---APPEND START PSD T.SAITOH 2002/05/01 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT_forwarding
*&---------------------------------------------------------------------*
*       出荷指示備考取得処理
*----------------------------------------------------------------------*
form frm_read_text_forwarding.
data: lt_tline    type table of tline,
lf_tline    type tline,
l_vbeln     like thead-tdname.
* Modified 2003.04.07 >>>
*  CONCATENATE GF_VBAP-AUBEL
*              GF_VBAP-AUPOS
*              INTO L_VBELN.
*
select single vgbel vgpos
from vbrp
into (l_vbeln+0(10),l_vbeln+10(6) )
where vbeln eq gf_info-vbeln
and  posnr eq gf_info-posnr
.
* Modified 2003.04.07 <<<
*--- 汎用モジュール『READ_TEXT』
call function 'READ_TEXT'
exporting
id        = '9001'
language  = 'J'
name      = l_vbeln
object    = 'VBBP'
tables
lines     = lt_tline
exceptions
not_found = 4
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
reference_check = 5
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
others    = 8.
case sy-subrc.
when 0.
read table lt_tline into lf_tline index 1.
gf_write-etca = lf_tline-tdline.
when 8.
*---APPEND START NDSC A.MASUDA 2004/04/07---------------------------*
concatenate gf_vbap-aubel
gf_vbap-aupos
into l_vbeln.
*--- 汎用モジュール『READ_TEXT』
call function 'READ_TEXT'
exporting
id        = '9001'
language  = 'J'
name      = l_vbeln
object    = 'VBBP'
tables
lines     = lt_tline
exceptions
not_found = 4
reference_check = 5
others    = 8.
case sy-subrc.
when 0.
read table lt_tline into lf_tline index 1.
gf_write-etca = lf_tline-tdline.
when 8.
message e001(z1) with text-016
sy-subrc.
endcase.
*---APPEND END   NDSC A.MASUDA 2004/04/07---------------------------*
*---DELETE START NDSC A.MASUDA 2004/04/07---------------------------*
*      MESSAGE E001(Z1) WITH TEXT-016
*                            SY-SUBRC.
*---DELETE END   NDSC A.MASUDA 2004/04/07---------------------------*
endcase.

endform.                    " FRM_READ_TEXT_forwarding
*---APPEND END   PSD T.SAITOH 2002/05/01 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_KONV
*&---------------------------------------------------------------------*
*       条件レート・価格条件単位取得
*----------------------------------------------------------------------*
*      -->I_KNUMV  伝票条件番号
*      -->I_POSNR  請求伝票明細
*      <--O_KBETR  条件レート
*      <--O_KPEIN  価格条件単位
*      <--O_WAERS  通貨コード
*----------------------------------------------------------------------*
form frm_get_konv using    i_knumv
i_posnr
changing o_kbetr
o_kpein
o_waers.
*insert{
*構造の宣言：条件カウンタZAEHKも取得する
data:begin of lo_wa_temp,
zaehk like konv-zaehk,
*insert{
*ステップ番号STUNRも取得する
stunr like konv-stunr,
*}insert2009/09/15 T.HAYASHI
kbetr like konv-kbetr,
waers like konv-waers,
kpein like konv-kpein,
end of lo_wa_temp.
*一時テーブルの宣言：条件カウンタZAEHKが異なる全てのレコードを格納する
data lo_ta_temp like standard table of lo_wa_temp.
*}insert2009/09/03 T.HAYASHI

*modify{
*条件カウンタZAEHKも取得

*modify{
*ステップ番号STUNRも取得
select zaehk stunr kbetr waers kpein
*SELECT ZAEHK KBETR WAERS KPEIN
*}modify2009/09/15 T.HAYASHI
into table lo_ta_temp
*  SELECT KBETR WAERS KPEIN
*    INTO (O_KBETR, O_WAERS, O_KPEIN)
*}modify2009/09/03 T.HAYASHI
from konv
*delete{
*         UP TO 1 ROWS
*}delete2009/09/03 T.HAYASHI
where knumv = i_knumv
and kposn = i_posnr
*modify{
and ( kschl = 'ZPR0'
or kschl = 'ZPR1'
or kschl = 'ZPR2' ).
*     AND KSCHL = 'ZPR0'.
*}modify2009/09/09 T.HAYASHI

*insert{
clear lo_wa_temp.
*一時テーブルを条件カウンタZAEHK降順、ステップ番号STUNR降順でソート
*modify{
*SORT LO_TA_TEMP BY ZAEHK DESCENDING STUNR DESCENDING.
sort lo_ta_temp by stunr descending zaehk descending.
*}modify2009/11/17 C.ONUKI

*ソートされた一時テーブルの先頭行を読込
read table lo_ta_temp into lo_wa_temp index 1.

*読込んだ行のコンポーネントKBETR, KPEIN, WAERSをCHANGING変数にセット
o_kbetr = lo_wa_temp-kbetr.
o_kpein = lo_wa_temp-kpein.
o_waers = lo_wa_temp-waers.
*}insert2009/09/03 T.HAYASHI
endform.                    " FRM_GET_KONV
