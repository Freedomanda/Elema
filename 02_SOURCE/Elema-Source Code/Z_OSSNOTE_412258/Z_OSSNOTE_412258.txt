*&---------------------------------------------------------------------*
*& Report  Z_OSSNOTE_412258
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_OSSNOTE_412258.

CONSTANTS: C_BLOCK_SIZE TYPE I VALUE 5000.

PARAMETERS: ALLCLNT DEFAULT ' ' AS CHECKBOX,
TESTRUN DEFAULT 'X' AS CHECKBOX.

START-OF-SELECTION.

DATA: LT_T000 TYPE TABLE OF T000 WITH HEADER LINE.

IF ALLCLNT IS INITIAL.

PERFORM CLEANUP_CLIENT
USING SY-MANDT.

ELSE.

SELECT * FROM T000
CLIENT SPECIFIED
INTO TABLE LT_T000.

LOOP AT LT_T000.

PERFORM CLEANUP_CLIENT
USING LT_T000-MANDT.

ENDLOOP.

ENDIF.

*&--------------------------------------------------------------------*
*&      Form  cleanup_client
*&--------------------------------------------------------------------*
*      -->IV_CLIENT  text
*---------------------------------------------------------------------*
FORM CLEANUP_CLIENT
USING IV_CLIENT LIKE SY-MANDT.

SKIP.

WRITE: / 'Checking Client' COLOR COL_HEADING ,
IV_CLIENT COLOR COL_HEADING .

DEFINE CLEANUP_ADRT.

DATA: LV_COMM_&2 TYPE AD_COMM.

LV_COMM_&2 = '&2'.
TRANSLATE LV_COMM_&2 TO UPPER CASE.                  "#EC TRANSLANG

PERFORM CLEANUP_ADRT
USING  IV_CLIENT
'ADR&1'
LV_COMM_&2.

END-OF-DEFINITION.

CLEANUP_ADRT 2 TEL.
CLEANUP_ADRT 3 FAX.
CLEANUP_ADRT 4 TTX.
CLEANUP_ADRT 5 TLX.
CLEANUP_ADRT 6 INT.
CLEANUP_ADRT 7 RML.
CLEANUP_ADRT 8 X40.
CLEANUP_ADRT 9 RFC.
CLEANUP_ADRT 10 PRT.
CLEANUP_ADRT 11 SSF.
CLEANUP_ADRT 12 URI.
CLEANUP_ADRT 13 PAG.

ENDFORM.                    "cleanup_client

*&--------------------------------------------------------------------*
*&      Form  cleanup_adrcomc
*&--------------------------------------------------------------------*

FORM CLEANUP_ADRT
USING  IV_CLIENT LIKE SY-MANDT
IV_TABLE
IV_COMM.

STATICS: SV_CLIENT LIKE SY-MANDT,
SV_ERROR_FOUND TYPE XFELD.

DATA: LT_ADRT_D LIKE ADRT OCCURS 0 WITH HEADER LINE,

BEGIN OF LT_COMM OCCURS 0,
CLIENT     LIKE ADR2-CLIENT,
ADDRNUMBER LIKE ADR2-ADDRNUMBER,
PERSNUMBER LIKE ADR2-PERSNUMBER,
CONSNUMBER LIKE ADR2-CONSNUMBER,
END OF LT_COMM,

LT_ADRT     LIKE ADRT OCCURS 0 WITH HEADER LINE,

LV_ADDRNUMBER_LOW  LIKE ADRC-ADDRNUMBER,
LV_ADDRNUMBER_HIGH LIKE ADRC-ADDRNUMBER,

LV_LINES LIKE SY-TABIX.

DEFINE BEGIN_OF_ERROR.

IF SV_ERROR_FOUND IS INITIAL.
SKIP.
WRITE: /5(10)  'ADDRNUMBER',
17(10) 'PERSNUMBER',
29(9)  'COMM_TYPE'
40(10) 'CONSNUMBER',
51(10) 'LANGU',
SV_ERROR_FOUND = 'X'.
ENDIF.

END-OF-DEFINITION.

IF IV_CLIENT <> SV_CLIENT.
CLEAR SV_ERROR_FOUND.
SV_CLIENT = IV_CLIENT.
ENDIF.

LV_ADDRNUMBER_LOW = '0000000000'.

DO.

REFRESH LT_ADRT_D.

SELECT CLIENT ADDRNUMBER PERSNUMBER CONSNUMBER
FROM (IV_TABLE)
CLIENT SPECIFIED
INTO TABLE LT_COMM
UP TO C_BLOCK_SIZE ROWS
WHERE CLIENT     = IV_CLIENT
AND   ADDRNUMBER > LV_ADDRNUMBER_LOW
ORDER BY CLIENT ADDRNUMBER.
IF SY-SUBRC <> 0.
EXIT.
ENDIF.

LV_ADDRNUMBER_HIGH = LV_ADDRNUMBER_LOW.
READ TABLE LT_COMM INDEX SY-DBCNT.
LV_ADDRNUMBER_HIGH = LT_COMM-ADDRNUMBER.

SELECT CLIENT ADDRNUMBER PERSNUMBER CONSNUMBER
FROM (IV_TABLE)
CLIENT SPECIFIED
APPENDING TABLE LT_COMM
WHERE CLIENT     = IV_CLIENT
AND   ADDRNUMBER = LV_ADDRNUMBER_HIGH.

SORT LT_COMM.
DELETE ADJACENT DUPLICATES FROM LT_COMM.
SORT LT_COMM BY
ADDRNUMBER PERSNUMBER CONSNUMBER.

SELECT * FROM ADRT
CLIENT SPECIFIED
INTO TABLE LT_ADRT
WHERE CLIENT     =  IV_CLIENT
AND   ADDRNUMBER >  LV_ADDRNUMBER_LOW
AND   ADDRNUMBER <= LV_ADDRNUMBER_HIGH
AND   COMM_TYPE  =  IV_COMM.

SORT LT_ADRT BY CLIENT ADDRNUMBER PERSNUMBER COMM_TYPE.

LOOP AT LT_ADRT.

READ TABLE LT_COMM
WITH KEY CLIENT     = LT_ADRT-CLIENT
ADDRNUMBER = LT_ADRT-ADDRNUMBER
PERSNUMBER = LT_ADRT-PERSNUMBER
CONSNUMBER = LT_ADRT-CONSNUMBER
BINARY SEARCH
TRANSPORTING NO FIELDS.
IF SY-SUBRC <> 0.
WRITE: /5(10)  LT_ADRT-ADDRNUMBER,
17(10) LT_ADRT-PERSNUMBER,
29(9)  IV_COMM,
40(10) LT_ADRT-CONSNUMBER,
51(10) LT_ADRT-LANGU.

LT_ADRT_D = LT_ADRT.
APPEND LT_ADRT_D.
ENDIF.


ENDLOOP.

IF TESTRUN IS INITIAL.

DELETE ADRT
CLIENT SPECIFIED
FROM TABLE LT_ADRT_D.

ENDIF.
COMMIT WORK.

LV_ADDRNUMBER_LOW = LV_ADDRNUMBER_HIGH.

ENDDO.

* It is theoretically possible that ADRT entries exist with an
* address number higher than the highest address number
* in (IV_TABLE). These have to be deleted.
REFRESH LT_ADRT_D.
SELECT * FROM ADRT
CLIENT SPECIFIED
INTO TABLE LT_ADRT_D
WHERE CLIENT     =  IV_CLIENT
AND   ADDRNUMBER >  LV_ADDRNUMBER_LOW
AND   COMM_TYPE  =  IV_COMM.
IF SY-SUBRC = 0.
* Write a protocol for these entries.
LOOP AT LT_ADRT_D.
WRITE: /5(10)  LT_ADRT_D-ADDRNUMBER,
17(10) LT_ADRT_D-PERSNUMBER,
29(9)  IV_COMM,
40(10) LT_ADRT_D-CONSNUMBER,
51(10) LT_ADRT_D-LANGU.
ENDLOOP.
ENDIF.

IF TESTRUN IS INITIAL.

DELETE ADRT
CLIENT SPECIFIED
FROM TABLE LT_ADRT_D.

ENDIF.
COMMIT WORK.

ENDFORM.                    "cleanup_adrt
