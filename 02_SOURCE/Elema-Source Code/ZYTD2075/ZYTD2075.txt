REPORT ZYTD2075 MESSAGE-ID Y1 LINE-SIZE 170 LINE-COUNT 58.
************************************************************************
*  REPORT     ZYTD2075
*  PROGRAM    変更BIファイル作成
*  MAKE DATE  1998.12.09
*  CODED BY   S.AOYAGI(PSS)
*  変更履歴   2001.04.03  支払人デフォルト値の削除
*                         出力タイプ デフォルト値削除
*                         出力タイプ変更登録
*             2009.07.24  項目「出力デバイス」追加 (NDSC D.KODAMA)
*             2012.08.31  ES-UP(ISID)
*             2014/08/29  コードページを"UTF-8"に修正(ISID18)
*             2015/01/08  アップロード時のBOMロジック改修(ISID11)
*             2015/02/04  コードページ処理の再修正(ISID11)
************************************************************************
PARAMETERS:P_CHK AS CHECKBOX.
PARAMETERS:P_IFILE(60) LOWER CASE OBLIGATORY.
***2002.07.11 >>>
PARAMETERS:P_R1 RADIOBUTTON GROUP RADI DEFAULT 'X',
P_R2 RADIOBUTTON GROUP RADI.
***2002.07.11 <<<
PARAMETERS:P_MODE(1) DEFAULT 'N'.
***
TABLES:KNA1,TVST,TVBUR.
*- BDC tab
DATA : BEGIN OF BDC OCCURS 0 .
INCLUDE STRUCTURE BDCDATA.
DATA : END   OF BDC .
* Mod ES-UP 2012/10/24 -->
*  DATA:D_LINE(1000).
DATA D_LINE TYPE STRING.
* Mod ES-UP 2012/10/24 <--
DATA:BEGIN OF TAB OCCURS 0,
KSCHL LIKE NAST-KSCHL,
LFART LIKE KOMB-LFART,
VSTEL LIKE KOMB-VSTEL,
KUNNR LIKE KNA1-KUNNR,
PARVW LIKE NAST-PARVW,
NACHA LIKE NAST-NACHA,
VSZTP LIKE NACH-VSZTP,
SPRAS LIKE NAST-SPRAS,
*2009/07/24 ADD START
LDEST(30) TYPE C,
*2009/07/24 ADD START
FLAG(1),
END OF TAB.
*
DATA:BEGIN OF ETAB OCCURS 0,
KSCHL LIKE NAST-KSCHL,
LFART LIKE KOMB-LFART,
VSTEL LIKE KOMB-VSTEL,
KUNNR LIKE KNA1-KUNNR,
PARVW LIKE NAST-PARVW,
NACHA LIKE NAST-NACHA,
VSZTP LIKE NACH-VSZTP,
SPRAS LIKE NAST-SPRAS,
*2009/07/24 ADD START
LDEST(30) TYPE C,
*2009/07/24 ADD START
MESSAGE(100),
END OF ETAB.

DATA:TOTAL TYPE P.

* Mod ES-UP 2012/08/31 -->
*CONSTANTS W_TAB TYPE X VALUE '09'.
CONSTANTS W_TAB TYPE STRING VALUE CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/31 <--

DATA:BDC_MODE(1).
DATA MSG1 LIKE MESSAGE .
DATA:OKCNT TYPE P,
NGCNT TYPE P.
************************************************************************
START-OF-SELECTION.
PERFORM OPEN_FILE.
PERFORM SPLIT_FILE.
IF P_CHK = 'X'.
PERFORM KNA1_CHECK.
*  ENDIF.
ELSE.
PERFORM KNA1_CHECK.
***2002.07.11 >>>
IF P_R1 = 'X'.
PERFORM MAKE_BDC.
ELSEIF P_R2 = 'X'.
PERFORM MAKE_BDC2.
ENDIF.
***2002.07.11 <<<
ENDIF.
PERFORM INFO.

END-OF-SELECTION.
***
TOP-OF-PAGE.
SKIP.
ULINE.
WRITE:/000 '出力タイプ'(001),
015 '出荷タイプ'(002),
030 '出荷ﾎﾟｲﾝﾄ'(003),
045 '得意先'(004),
060 '取引先'(005),
073 '媒体'(006),
083 '時刻'(007),
093 '言語'(008),
*2009/07/24 ADD START
103 '出力デバイス'(010),
*2009/07/24 ADD END
118 'メッセージ'(009).
ULINE.
************************************************************************
***  ファイルオープン
************************************************************************
FORM OPEN_FILE.
* REFRESH: JTAB.CLEAR: STAB.
* Add ES-UP 2012/08/22 -->

**** START ADD 2015/02/04 ISID11 ****
DATA:
L_Z_OUTPUT_CP TYPE  ZTEGZZM001-Z_OUTPUT_CP,
L_CODEPAGE    TYPE ABAP_ENCODING,
L_SUBRC    TYPE SY-SUBRC,
L_FLGUTF8  TYPE  FLAG,
L_SAPCODEPAGE TYPE STRING.

CALL FUNCTION 'ZEG_ZZ_GLOBAL_PGM_CONFIG_GET'
EXPORTING
IMPPGM      = SY-REPID
IMPBUKRS    = TEXT-012
IMPORTING
EXPCODEPAGE = L_Z_OUTPUT_CP
EXPFLGUTF8  = L_FLGUTF8.
**** END ADD 2015/02/04 ISID11 ****

****START UPD 2014/08/29 ISID18****
*  CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
*  DATA L_CODEPAGE TYPE CPCODEPAGE.
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
****END DEL 2014/08/29 ISID18****
* Add ES-UP 2012/08/22 <--
* Mod ES-UP 2012/08/22 -->
*  OPEN DATASET P_IFILE  FOR INPUT IN TEXT MODE.
**** START ADD 2015/02/04 ISID11 ****
IF L_FLGUTF8 IS INITIAL.

L_SAPCODEPAGE = L_Z_OUTPUT_CP.
IF L_SAPCODEPAGE IS NOT INITIAL.

L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( L_SAPCODEPAGE ).

ENDIF.

TRY .
OPEN DATASET P_IFILE  FOR INPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.

L_SUBRC = SY-SUBRC.

CATCH CX_SY_CODEPAGE_CONVERTER_INIT.

L_SUBRC = 8.

ENDTRY.

ELSE.
**** END ADD 2015/02/04 ISID11 ****
OPEN DATASET P_IFILE  FOR INPUT
**** START UPD 2014/08/31 ISID19 ****
*    IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IN TEXT MODE ENCODING UTF-8
**** END UPD 2014/08/31 ISID19 ****
**** START ADD 2015/01/08 ISID11 ****
SKIPPING BYTE-ORDER MARK
**** END ADD 2015/01/08 ISID11 ****
IGNORING CONVERSION ERRORS.
**** START ADD 2015/02/04 ISID11 ****
L_SUBRC = SY-SUBRC.

ENDIF.
**** END ADD 2015/02/04 ISID11 ****
* Mod ES-UP 2012/08/22 <--
**** START UPD 2015/02/04 ISID11 ****
*  IF SY-SUBRC <> 0.
IF L_SUBRC <> 0.
**** END UPD 2015/02/04 ISID11 ****
MESSAGE I401 WITH 'ファイルオープンエラー' P_IFILE. STOP.
ENDIF.
ENDFORM.                    "OPEN_FILE
************************************************************************
***
************************************************************************
FORM SPLIT_FILE.
REFRESH:TAB .
CLEAR:D_LINE.
DO .
CLEAR :D_LINE .
READ DATASET P_IFILE INTO D_LINE.
IF SY-SUBRC <> 0. EXIT. ENDIF.
SPLIT D_LINE AT W_TAB INTO
TAB-KSCHL
TAB-LFART
TAB-VSTEL
TAB-KUNNR
TAB-PARVW
TAB-NACHA
TAB-VSZTP
TAB-SPRAS
*2009/07/24 ADD START
TAB-LDEST.
*2009/07/24 ADD END
APPEND TAB .    CLEAR TAB .
TOTAL = TOTAL + 1.
ENDDO.
MESSAGE I402 WITH TOTAL '件、読み込みました'.
CLOSE DATASET P_IFILE .
ENDFORM.                    "SPLIT_FILE
************************************************************************
***
************************************************************************
FORM KNA1_CHECK.
CLEAR:TAB,NGCNT.
LOOP AT TAB.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT  = TAB-KUNNR
IMPORTING
OUTPUT = TAB-KUNNR.

CLEAR:KNA1.
SELECT SINGLE KUNNR INTO KNA1-KUNNR
FROM KNA1 WHERE KUNNR = TAB-KUNNR.
IF SY-SUBRC <> 0.
MOVE-CORRESPONDING TAB TO ETAB.
ETAB-MESSAGE = '得意先'.
TAB-FLAG = 'X'.
NGCNT = NGCNT + 1.
ENDIF.
***
IF P_R1 = 'X'.
SELECT SINGLE VSTEL INTO TVST-VSTEL FROM TVST
WHERE VSTEL = TAB-VSTEL.
IF SY-SUBRC <> 0.
MOVE-CORRESPONDING TAB TO ETAB.
CONCATENATE ETAB-MESSAGE '出荷ポイント'
INTO ETAB-MESSAGE SEPARATED BY ' '.
IF TAB-FLAG <> 'X'.
TAB-FLAG = 'X'.
NGCNT = NGCNT + 1.
ENDIF.
ENDIF.
ELSE.
SELECT SINGLE VKBUR INTO TVBUR-VKBUR FROM TVBUR
WHERE VKBUR = TAB-VSTEL.
IF SY-SUBRC <> 0.
MOVE-CORRESPONDING TAB TO ETAB.
CONCATENATE ETAB-MESSAGE '営業所'
INTO ETAB-MESSAGE SEPARATED BY ' '.
IF TAB-FLAG <> 'X'.
TAB-FLAG = 'X'.
NGCNT = NGCNT + 1.
ENDIF.
ENDIF.
ENDIF.
***
IF P_R1 = 'X'.
IF TAB-KSCHL = 'ZS20' OR TAB-KSCHL = 'ZS21' OR
TAB-KSCHL = 'ZS22'.
ELSE.
MOVE-CORRESPONDING TAB TO ETAB.
CONCATENATE ETAB-MESSAGE '出力タイプ'
INTO ETAB-MESSAGE SEPARATED BY ' '.
IF TAB-FLAG <> 'X'.
TAB-FLAG = 'X'.
NGCNT = NGCNT + 1.
ENDIF.
ENDIF.
ELSE.
IF TAB-KSCHL = 'ZS01'.
ELSE.
MOVE-CORRESPONDING TAB TO ETAB.
CONCATENATE ETAB-MESSAGE '出力タイプ'
INTO ETAB-MESSAGE SEPARATED BY ' '.
IF TAB-FLAG <> 'X'.
TAB-FLAG = 'X'.
NGCNT = NGCNT + 1.
ENDIF.
ENDIF.
ENDIF.
IF TAB-FLAG = 'X'.
APPEND ETAB.
CLEAR ETAB.
ENDIF.
MODIFY TAB.
CLEAR:ETAB,TAB.
ENDLOOP.

IF NGCNT = 0.
MESSAGE I402 WITH 'エラーデータはないと思われます'.
ENDIF.
ENDFORM.                    "KNA1_CHECK
************************************************************************
***BDC実行
************************************************************************
FORM MAKE_BDC.
CLEAR:TAB.
BDC_MODE = P_MODE.
CLEAR:OKCNT.
LOOP AT TAB WHERE FLAG <> 'X'.
REFRESH BDC.
CLEAR BDC.
PERFORM FRM_SET_BDCTAB
TABLES   BDC
USING : 'X' 'SAPMV13B'       '0100'      ,
' ' 'RV13B-KSCHL'    TAB-KSCHL  , "出力タイプ
' ' 'BDC_OKCODE'    '/00'  , "
'X' 'SAPLV14A'    '0100'  , "
' ' 'RV130-SELKZ(01)' 'X',
' ' 'BDC_OKCODE'     '=WEIT'       , "
'X' 'SAPMV13B'       '1930'      ,
' ' 'KOMB-LFART' TAB-LFART  , "
' ' 'KOMB-VSTEL' TAB-VSTEL  , "
' ' 'KOMB-KUNNR(01)' TAB-KUNNR ,
' ' 'NACH-PARVW(01)' TAB-PARVW ,
*                      ' ' 'NACH-PARVW(01)' 'SP' ,
' ' 'NACH-NACHA(01)' TAB-NACHA ,
' ' 'NACH-VSZTP(01)' TAB-VSZTP ,
' ' 'NACH-SPRAS(01)' TAB-SPRAS ,
*2009/07/24 ADD START
' ' 'BDC_OKCODE'     '/00',
'X' 'SAPMV13B'       '1930'      ,
' ' 'BDC_CURSOR'     'KOMB-KUNNR(01)',
' ' 'RV130-SELKZ(01)' 'X',
' ' 'BDC_OKCODE'     '=KOMM',
'X' 'SAPMV13B'       '0211'     ,
' ' 'NACH-LDEST'     TAB-LDEST,
*2009/07/24 ADD END
' ' 'BDC_OKCODE'     '=SICH'     .


PERFORM CALL_TRAN .                       "バッチインプット実行
ENDLOOP.
ENDFORM.                    "MAKE_BDC
************************************************************************
***BDC実行
************************************************************************
FORM MAKE_BDC2.
CLEAR:TAB.
BDC_MODE = P_MODE.
CLEAR:OKCNT.
LOOP AT TAB WHERE FLAG <> 'X'.
REFRESH BDC.
CLEAR BDC.
PERFORM FRM_SET_BDCTAB
TABLES   BDC
USING : 'X' 'SAPMV13B'       '0100'      ,
' ' 'RV13B-KSCHL'    TAB-KSCHL  , "出力タイプ
' ' 'BDC_OKCODE'    '/00'  , "
'X' 'SAPLV14A'    '0100'  , "
' ' 'RV130-SELKZ(01)' 'X',
' ' 'BDC_OKCODE'     '=WEIT'       , "
'X' 'SAPMV13B'       '1911'      ,
*                     ' ' 'KOMB-LFART' TAB-LFART  , "
' ' 'KOMB-VKBUR' TAB-VSTEL  , "
' ' 'KOMB-KUNNR(01)' TAB-KUNNR ,
' ' 'NACH-PARVW(01)' 'SP', "TAB-PARVW ,
' ' 'NACH-NACHA(01)' TAB-NACHA ,
' ' 'NACH-VSZTP(01)' TAB-VSZTP ,
' ' 'NACH-SPRAS(01)' TAB-SPRAS ,
*2009/07/24 ADD START
' ' 'BDC_OKCODE'     '/00',
'X' 'SAPMV13B'       '1911'      ,
' ' 'BDC_CURSOR'     'KOMB-KUNNR(01)',
' ' 'RV130-SELKZ(01)' 'X',
' ' 'BDC_OKCODE'     '=KOMM',
'X' 'SAPMV13B'       '0211'     ,
' ' 'NACH-LDEST'     TAB-LDEST,
*2009/07/24 ADD END
' ' 'BDC_OKCODE'     '=SICH'     .
PERFORM CALL_TRAN .                       "バッチインプット実行
ENDLOOP.
ENDFORM.                    "MAKE_BDC2
************************************************************************
***
************************************************************************
FORM CALL_TRAN.
IF P_R1 = 'X'.
CALL TRANSACTION 'VV21' USING BDC MODE BDC_MODE   "本番は 'N' にする
UPDATE 'S'.
ELSE.
CALL TRANSACTION 'VV11' USING BDC MODE BDC_MODE   "本番は 'N' にする
UPDATE 'S'.
ENDIF.
IF SY-SUBRC = 0 .
OKCNT = OKCNT + 1 .
ELSE .
NGCNT = NGCNT + 1.
CALL FUNCTION 'WRITE_MESSAGE'
EXPORTING
MSGID  = SY-MSGID
MSGNO  = SY-MSGNO
MSGTY  = SY-MSGTY
MSGV1  = SY-MSGV1
MSGV2  = SY-MSGV2
MSGV3  = SY-MSGV3
MSGV4  = SY-MSGV4
MSGV5  = SY-MSGV4
IMPORTING
MESSG  = MSG1
EXCEPTIONS
OTHERS = 1.
ETAB-MESSAGE = MSG1.
MOVE-CORRESPONDING TAB TO ETAB.
APPEND ETAB.
CLEAR ETAB.
ENDIF.

ENDFORM.                    "CALL_TRAN
************************************************************************
*       ＢdＣテーブルへのセット
************************************************************************
FORM FRM_SET_BDCTAB TABLES P_BDCDATA STRUCTURE BDCDATA
USING  VALUE(OPERAND1)
VALUE(OPERAND2)
VALUE(OPERAND3) .
CLEAR P_BDCDATA .
IF OPERAND1 = 'X' .
P_BDCDATA-DYNBEGIN = OPERAND1 .     " 'X'
P_BDCDATA-PROGRAM  = OPERAND2 .     " PROGRAM NAME
P_BDCDATA-DYNPRO   = OPERAND3 .     " Dynpro NO
APPEND P_BDCDATA .
ELSE .
P_BDCDATA-FNAM = OPERAND2 .
P_BDCDATA-FVAL = OPERAND3 .
APPEND P_BDCDATA .
ENDIF .

ENDFORM.                    " frm_set_bdctab
************************************************************************
***
************************************************************************
FORM INFO.
CLEAR:ETAB.
MESSAGE I402 WITH OKCNT '件、正常に登録しました'.
MESSAGE I402 WITH NGCNT '件、エラーが発生しました'.

LOOP AT ETAB.
WRITE:/ ETAB-KSCHL UNDER TEXT-001,
ETAB-LFART UNDER TEXT-002,
ETAB-VSTEL UNDER TEXT-003,
ETAB-KUNNR UNDER TEXT-004,
ETAB-PARVW UNDER TEXT-005,
ETAB-NACHA UNDER TEXT-006,
ETAB-VSZTP UNDER TEXT-007,
ETAB-SPRAS UNDER TEXT-008,
*2009/07/24 ADD START
ETAB-LDEST UNDER TEXT-010,
*2009/07/24 ADD END
ETAB-MESSAGE UNDER TEXT-009.
ENDLOOP.
ENDFORM.                    "INFO
