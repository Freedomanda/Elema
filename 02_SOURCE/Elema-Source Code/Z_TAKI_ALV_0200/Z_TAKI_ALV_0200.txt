*----------------------------------------------------------------------*
*   INCLUDE Z_TAKI_ALV_0200                                            *
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&   クラス定義　
*&---------------------------------------------------------------------*
CLASS CLS_EVENT_RECIEVER_0200 DEFINITION.
PUBLIC SECTION.
*    METHODS HANDLE_TOOLBAR
*      FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID
*      IMPORTING E_OBJECT E_INTERACTIVE.
METHODS HANDLE_DATA_CHANGED
FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID
IMPORTING ER_DATA_CHANGED.
METHODS HANDLE_DATA_CHANGED_FINISHED
FOR EVENT DATA_CHANGED_FINISHED OF CL_GUI_ALV_GRID
IMPORTING E_MODIFIED.
*    METHODS HANDLE_F4
*      FOR EVENT ONF4 OF CL_GUI_ALV_GRID
*      IMPORTING E_FIELDNAME
*                ES_ROW_NO
*                ER_EVENT_DATA.
*    METHODS HANDLE_BEFORE_USER_COMMAND
*      FOR EVENT BEFORE_USER_COMMAND OF CL_GUI_ALV_GRID
*      IMPORTING E_UCOMM.
*    METHODS HANDLE_AFTER_USER_COMMAND
*      FOR EVENT AFTER_USER_COMMAND OF CL_GUI_ALV_GRID
*      IMPORTING E_UCOMM.
METHODS HANDLE_USER_COMMAND
FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID
IMPORTING E_UCOMM.
ENDCLASS.

CLASS CLS_EVENT_RECIEVER_0200 IMPLEMENTATION.
*  METHOD HANDLE_TOOLBAR.
*    PERFORM CUSTOMIZE_TOOLBAR_0200 USING E_OBJECT.
*  ENDMETHOD.
METHOD HANDLE_DATA_CHANGED.
PERFORM CHANGE_T_ALV_CHECKER_0200 USING ER_DATA_CHANGED.
PERFORM CHECK_INPUT_DATA_0200.
ENDMETHOD.
METHOD HANDLE_DATA_CHANGED_FINISHED.
PERFORM SET_T_ALV_CHECKER_0200.
PERFORM SET_T_GRID_DATA_0200_TEXT.
PERFORM PROCESS_EVENT_ENTER.
ENDMETHOD.
*  METHOD HANDLE_F4.
*    PERFORM F4_INPUT_0200 USING E_FIELDNAME
*                                ES_ROW_NO
*                                ER_EVENT_DATA.
*  ENDMETHOD.
*  METHOD HANDLE_BEFORE_USER_COMMAND.
*    IF E_UCOMM = CL_GUI_ALV_GRID=>MC_FC_MAINTAIN_VARIANT.
*      PERFORM SET_VISIBLE_0200 USING ' '.
*    ENDIF.
*    IF E_UCOMM = CL_GUI_ALV_GRID=>MC_FC_PRINT_BACK AND
*       SY-SAPRL = '46C'.
*      PERFORM SET_VISIBLE_0200 USING ' '.
*    ENDIF.
*  ENDMETHOD.
*  METHOD HANDLE_AFTER_USER_COMMAND.
*    IF E_UCOMM = CL_GUI_ALV_GRID=>MC_FC_MAINTAIN_VARIANT.
*      PERFORM SET_VISIBLE_0200 USING 'X'.
*    ENDIF.
*    IF E_UCOMM = CL_GUI_ALV_GRID=>MC_FC_PRINT_BACK AND
*       SY-SAPRL = '46C'.
*      PERFORM SET_VISIBLE_0200 USING 'X'.
*    ENDIF.
*  ENDMETHOD.
METHOD HANDLE_USER_COMMAND.
PERFORM EXECUTE_USER_COMMAND_0200 USING E_UCOMM.
ENDMETHOD.
ENDCLASS.

*CLASS CLS_EVENT_RECIEVER_LOG DEFINITION.
*  PUBLIC SECTION.
*    METHODS HANDLE_DOUBLE_CLICK
*      FOR EVENT DOUBLE_CLICK OF CL_GUI_ALV_GRID
*      IMPORTING E_ROW.
*ENDCLASS.

*CLASS CLS_EVENT_RECIEVER_LOG IMPLEMENTATION.
*  METHOD HANDLE_DOUBLE_CLICK.
*    PERFORM SET_SELECTED_CELL_0200 USING E_ROW.
*  ENDMETHOD.
*ENDCLASS.

*&---------------------------------------------------------------------*
*&   オブジェクト定義　
*&---------------------------------------------------------------------*
DATA: OBJ_GRID_0200             TYPE REF TO CL_GUI_ALV_GRID,
OBJ_SPLITTER_CONTAINER TYPE REF TO CL_GUI_EASY_SPLITTER_CONTAINER,
OBJ_APPLOG_CONTAINER TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
OBJ_GRID_LOG              TYPE REF TO CL_GUI_ALV_GRID,
OBJ_EVENT_RECIEVER_0200   TYPE REF TO CLS_EVENT_RECIEVER_0200.
*      OBJ_EVENT_RECIEVER_LOG    TYPE REF TO CLS_EVENT_RECIEVER_LOG.
* ALV一覧表示用レイアウト（入力画面）
DATA: S_VARIANT_0200 TYPE DISVARIANT.
* ALV一覧表示用レイアウト（入力画面）
DATA: S_LAYOUT_0200 TYPE LVC_S_LAYO.
* ALV一覧表示用レイアウト（入力画面）
DATA: S_LAYOUT_LOG TYPE LVC_S_LAYO.
* ALV一覧表示用項目内部テーブル（入力画面）
DATA: T_FCAT_0200 TYPE LVC_T_FCAT.
* ALV一覧表示用項目内部テーブル（入力画面）
DATA: T_FCAT_LOG TYPE LVC_T_FCAT.
* ALV一覧項目F4対応内部テーブル（入力画面）
DATA: T_F4_0200 TYPE STANDARD TABLE OF LVC_S_F4.
* ALV一覧項目COLOR対応内部テーブル（入力画面）
DATA: T_COLOR_0200 TYPE LVC_T_SCOL.
* ALV一覧表示用除外ツール内部テーブル（入力画面）
DATA: T_TOOLBAR_0200 TYPE UI_FUNCTIONS.

TYPES: BEGIN OF TYP_GRID_DATA_0200,
YNKNETXAMT        LIKE YN110-KNETXAMT, " 税込金額
YNWAERS           LIKE YN110-WAERS,    " 通貨コード
*         YNCOLORS          TYPE LVC_T_SCOL,
END OF TYP_GRID_DATA_0200.

* ALV一覧表示用内部テーブル（入力画面）
DATA: T_GRID_DATA_0200 TYPE STANDARD TABLE OF TYP_GRID_DATA_0200.


*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0200 OUTPUT.
SET PF-STATUS '0200'.
SET TITLEBAR '0200'.
ENDMODULE.                 " STATUS_0300  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  INITIALIZE_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE INITIALIZE_0200 OUTPUT.

*  CALL METHOD OBJ_GRID_0100->SET_VISIBLE
*    EXPORTING VISIBLE       = C_OFF.
*
*  REFRESH T_LOG_DATA.
IF OBJ_GRID_0200 IS INITIAL.
*   出力項目定義取得
PERFORM COSTOMIZE_ALV_0200.
PERFORM SET_T_FCAT_0200.
PERFORM SET_S_LAYOUT_0200.
PERFORM SET_S_VARIANT_0200.
PERFORM SET_T_TOOLBAR_0200.
*    PERFORM SET_T_FCAT_LOG.
*    PERFORM SET_S_LAYOUT_LOG.
PERFORM SET_T_GRID_DATA_0200_COLOR.
PERFORM DISPLAY_ALV_GRID_0200.
REFRESH_FLAG = SPACE.
ENDIF.

ENDMODULE.                 " INITIALIZE_0100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  REFRESH_ALV_GRID_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE REFRESH_ALV_GRID_0200 OUTPUT.

IF REFRESH_FLAG = C_ON.
PERFORM COSTOMIZE_ALV_0200.
PERFORM SET_T_FCAT_0200.
PERFORM SET_T_GRID_DATA_0200_COLOR.
*    PERFORM REFRESH_ALV_GRID_LOG.
PERFORM REFRESH_ALV_GRID_0200.
REFRESH_FLAG = C_OFF.
ENDIF.

ENDMODULE.                 " REFRESH_ALV_GRID_0200  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  EXIT_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE EXIT_0200 INPUT.

IF RC_CODE = 0.
*    RETURN_MODE = 'E'.
LEAVE TO SCREEN 0.
ENDIF.

ENDMODULE.                 " EXIT_0300  INPUT
*&---------------------------------------------------------------------*
*&      Module  REFRESH_GRID_DATA_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE REFRESH_GRID_DATA_0200 INPUT.

PERFORM REFRESH_GRID_DATA USING OBJ_GRID_0200.

ENDMODULE.                 " REFRESH_GRID_DATA_0200  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0200 INPUT.

CASE OK_CODE.
WHEN OTHERS.
*    WHEN 'SAVE'.
*      PERFORM CHECK_INPUT_DATA_0200.
*      DESCRIBE TABLE T_LOG_DATA LINES COUNTER.
*      CHECK COUNTER = 0.
*      PERFORM CHANGE_T_GRID_DATA.
*      IF RC_CODE = 0.
*        PERFORM POPUP_TO_INFORM USING C_MSGNO_INFORM_MODIFY.
*        REFRESH_FLAG = C_ON.
*        RETURN_MODE = C_RETURN_MODE_SAVE.
LEAVE TO SCREEN 0.
*      ENDIF.
ENDCASE.

ENDMODULE.                 " USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*&      Form  COSTOMIZE_ALV_0200
*&---------------------------------------------------------------------*
*       ALV属性設定（入力画面）
*----------------------------------------------------------------------*
FORM COSTOMIZE_ALV_0200 .

DATA: L_H_ALV_CUSTOMIZER LIKE LINE OF T_ALV_CUSTOMIZER_0200.

REFRESH T_ALV_CUSTOMIZER_0200.

* 編集属性設定
CLEAR L_H_ALV_CUSTOMIZER.
L_H_ALV_CUSTOMIZER-NAME = 'EDIT'.
L_H_ALV_CUSTOMIZER-PROPS+1(1) = 'X'.
L_H_ALV_CUSTOMIZER-PROPS+2(1) = 'X'.
APPEND L_H_ALV_CUSTOMIZER TO T_ALV_CUSTOMIZER_0200.

ENDFORM.                    " COSTOMIZE_ALV_0200
*&---------------------------------------------------------------------*
*&      Form  SET_T_FCAT_0200
*&---------------------------------------------------------------------*
*       ALV項目設定
*----------------------------------------------------------------------*
FORM SET_T_FCAT_0200.

PERFORM SET_FIELD_NAME TABLES T_FCAT_0200.
PERFORM SET_FIELD_PROPS_1 TABLES T_FCAT_0200
T_GRID_DATA_0200
T_ALV_CUSTOMIZER_0200.
PERFORM SET_FIELD_PROPS_2 TABLES T_FCAT_0200
T_ALV_CUSTOMIZER_0200.
*  PERFORM SET_FIELD_PROPS_3 TABLES T_FCAT_0200
*                                   T_GRID_DATA_0200
*                                   T_ALV_CUSTOMIZER_0200
*                                   T_F4_0200.
PERFORM SET_T_COLORS TABLES T_FCAT_0200
T_COLOR_0200
T_ALV_CUSTOMIZER_0200.

ENDFORM.                    " SET_T_FCAT_0200
*&---------------------------------------------------------------------*
*&      Form  SET_FIELD_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_FCAT_0100  text
*----------------------------------------------------------------------*
FORM SET_FIELD_NAME  TABLES   P_T_FCAT TYPE LVC_T_FCAT.
* 金額
P_T_FCAT-FIELDNAME = 'YNKNETXAMT'.
P_T_FCAT-COL_ID    = '1'.
APPEND P_T_FCAT.
* 通貨
P_T_FCAT-FIELDNAME = 'YNWAERS'.
P_T_FCAT-COL_ID    = '2'.
APPEND P_T_FCAT.

ENDFORM.                    " SET_FIELD_NAME
*&---------------------------------------------------------------------*
*&      Form  SET_FIELD_PROPS_1
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_FCAT_0100  text
*----------------------------------------------------------------------*
FORM SET_FIELD_PROPS_1 TABLES P_T_FCAT  TYPE LVC_T_FCAT
P_T_GRID_DATA
P_T_ALV_CUSTOMIZER TYPE TYP_T_ALV_CUSTOMIZER
.
DATA:L_H_DD03P TYPE DD03P,
lw_fieldname  type FIELDNAME.
FIELD-SYMBOLS: <FS>.
FIELD-SYMBOLS: <FS_FCAT> LIKE LINE OF P_T_FCAT.

LOOP AT P_T_FCAT ASSIGNING <FS_FCAT>.
lw_fieldname = <FS_FCAT>-fieldname+2(28).
READ TABLE T_DD03P_YN210 INTO L_H_DD03P
WITH KEY FIELDNAME = lw_fieldname.
<FS_FCAT>-DATATYPE   = L_H_DD03P-DATATYPE.
<FS_FCAT>-INTTYPE    = L_H_DD03P-INTTYPE.
<FS_FCAT>-IFIELDNAME = L_H_DD03P-FIELDNAME.
<FS_FCAT>-ROLLNAME   = L_H_DD03P-ROLLNAME.
<FS_FCAT>-OUTPUTLEN  = L_H_DD03P-OUTPUTLEN.
<FS_FCAT>-DD_OUTLEN  = L_H_DD03P-LENG.
<FS_FCAT>-DECIMALS   = L_H_DD03P-DECIMALS.
<FS_FCAT>-DOMNAME    = L_H_DD03P-DOMNAME.
<FS_FCAT>-CONVEXIT   = L_H_DD03P-CONVEXIT.
<FS_FCAT>-COLTEXT    = L_H_DD03P-DDTEXT.
<FS_FCAT>-SCRTEXT_S  = L_H_DD03P-SCRTEXT_S.
<FS_FCAT>-SCRTEXT_M  = L_H_DD03P-SCRTEXT_M.
<FS_FCAT>-SCRTEXT_L  = L_H_DD03P-SCRTEXT_L.
<FS_FCAT>-INTLEN = SY-FDPOS.
<FS_FCAT>-EDIT   = C_ON.
CLEAR:L_H_DD03P.
ENDLOOP.
ENDFORM.                    " GET_YN_20_DATA
*&---------------------------------------------------------------------*
*&      Form  SET_FIELD_PROPS_2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_FCAT  text
*      -->P_T_ALV_CUSTOMIZER  text
*----------------------------------------------------------------------*
FORM SET_FIELD_PROPS_2 TABLES P_T_FCAT           TYPE LVC_T_FCAT
P_T_ALV_CUSTOMIZER TYPE TYP_T_ALV_CUSTOMIZER
.
DATA: L_INDEX LIKE SY-TABIX.

FIELD-SYMBOLS: <FS> TYPE ANY.

LOOP AT P_T_FCAT.
L_INDEX = SY-TABIX - 1.
LOOP AT P_T_ALV_CUSTOMIZER FROM 2.
ASSIGN COMPONENT P_T_ALV_CUSTOMIZER-NAME OF STRUCTURE P_T_FCAT
TO <FS>.
IF SY-SUBRC = 0.
<FS> =  P_T_ALV_CUSTOMIZER-PROPS+L_INDEX(1).
ENDIF.
ENDLOOP.
MODIFY P_T_FCAT.
ENDLOOP.

READ TABLE P_T_FCAT WITH KEY DATATYPE = 'CUKY'.
IF SY-SUBRC = 0.
P_T_FCAT-CFIELDNAME = P_T_FCAT-FIELDNAME.
MODIFY P_T_FCAT TRANSPORTING CFIELDNAME
WHERE DATATYPE = 'CURR'.
ENDIF.

ENDFORM.                    " SET_FIELD_PROPS_2
*&---------------------------------------------------------------------*
*&      Form  SET_T_COLORS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_FCAT  text
*      -->P_T_ALV_CUSTOMIZER  text
*----------------------------------------------------------------------*
FORM SET_T_COLORS TABLES P_T_FCAT           TYPE LVC_T_FCAT
P_T_COLOR          TYPE LVC_T_SCOL
P_T_ALV_CUSTOMIZER TYPE TYP_T_ALV_CUSTOMIZER
.

DATA: L_INDEX LIKE SY-TABIX.
DATA: LS_COLOR TYPE LVC_S_SCOL.

READ TABLE P_T_ALV_CUSTOMIZER WITH KEY NAME = 'EDIT'.
REFRESH P_T_COLOR.
LOOP AT P_T_FCAT.
L_INDEX = SY-TABIX - 1.
IF SY-SUBRC = 0.
IF P_T_ALV_CUSTOMIZER-PROPS+L_INDEX(1) = SPACE.
LS_COLOR-FNAME = P_T_FCAT-FIELDNAME.
LS_COLOR-COLOR-COL = 0.
LS_COLOR-COLOR-INT = 0.
LS_COLOR-COLOR-INV = 0.
APPEND LS_COLOR TO P_T_COLOR.
ENDIF.
ENDIF.
ENDLOOP.

ENDFORM.                    " SET_T_COLORS
*&---------------------------------------------------------------------*
*&      Form  SET_S_LAYOUT_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SET_S_LAYOUT_0200 .

CLEAR S_LAYOUT_0200.
S_LAYOUT_0200-CTAB_FNAME = 'YNCOLORS'.

ENDFORM.                    " SET_S_LAYOUT_0200
*&---------------------------------------------------------------------*
*&      Form  SET_S_VARIANT_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SET_S_VARIANT_0200 .
S_VARIANT_0200-REPORT = SY-REPID.
S_VARIANT_0200-HANDLE = '0200'.
ENDFORM.                    " SET_S_VARIANT_0200
*&---------------------------------------------------------------------*
*&      Form  SET_T_TOOLBAR_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SET_T_TOOLBAR_0200 .

DATA: L_FUNC TYPE UI_FUNC.

L_FUNC = CL_GUI_ALV_GRID=>MC_FC_CHECK.          " エントリチェック
APPEND L_FUNC TO T_TOOLBAR_0200.
L_FUNC = CL_GUI_ALV_GRID=>MC_FC_REFRESH.        " リフレッシュ
APPEND L_FUNC TO T_TOOLBAR_0200.
L_FUNC = CL_GUI_ALV_GRID=>MC_FC_LOC_CUT.        " ローカル: カット
APPEND L_FUNC TO T_TOOLBAR_0200.
L_FUNC = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY.       " ローカル: コピー
APPEND L_FUNC TO T_TOOLBAR_0200.
L_FUNC = CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW.   " ローカル: 行コピー
APPEND L_FUNC TO T_TOOLBAR_0200.
L_FUNC = CL_GUI_ALV_GRID=>MC_MB_PASTE.          " ペーストメニュー
APPEND L_FUNC TO T_TOOLBAR_0200.
L_FUNC = CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO.       " 元に戻す
APPEND L_FUNC TO T_TOOLBAR_0200.
L_FUNC = CL_GUI_ALV_GRID=>MC_MB_FILTER.         " フィルタ
APPEND L_FUNC TO T_TOOLBAR_0200.
L_FUNC = CL_GUI_ALV_GRID=>MC_MB_VIEW.           " ビューメニュー
APPEND L_FUNC TO T_TOOLBAR_0200.
L_FUNC = CL_GUI_ALV_GRID=>MC_FC_GRAPH.          " グラフィック
APPEND L_FUNC TO T_TOOLBAR_0200.
L_FUNC = CL_GUI_ALV_GRID=>MC_FC_INFO .          " 情報
APPEND L_FUNC TO T_TOOLBAR_0200.

ENDFORM.                    " SET_T_TOOLBAR_0200
*&---------------------------------------------------------------------*
*&      Form  SET_T_GRID_DATA_0200_COLOR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SET_T_GRID_DATA_0200_COLOR .

FIELD-SYMBOLS: <FS_GRID_DATA> LIKE LINE OF T_GRID_DATA_0200.

ENDFORM.                    " SET_T_GRID_DATA_0100_COLOR
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_GRID_0200
*&---------------------------------------------------------------------*
*       ALV一覧表示
*----------------------------------------------------------------------*
FORM DISPLAY_ALV_GRID_0200 .

DATA: LT_F4 TYPE LVC_T_F4.
LT_F4[] = T_F4_0200[].

CREATE OBJECT OBJ_SPLITTER_CONTAINER
EXPORTING
PARENT    = CL_GUI_CONTAINER=>DEFAULT_SCREEN
SASH_POSITION      = 100
WITH_BORDER  = 0.
CREATE OBJECT OBJ_APPLOG_CONTAINER
EXPORTING
CONTAINER_NAME  = 'UNVISIBLE_CONTAINER'.
CALL METHOD OBJ_APPLOG_CONTAINER->SET_VISIBLE
EXPORTING VISIBLE       = C_OFF.
CREATE OBJECT OBJ_GRID_0200
EXPORTING
I_PARENT       = OBJ_SPLITTER_CONTAINER->TOP_LEFT_CONTAINER
I_APPLOGPARENT = OBJ_APPLOG_CONTAINER.
CREATE OBJECT OBJ_EVENT_RECIEVER_0200.
*    SET HANDLER
*      OBJ_EVENT_RECIEVER_0200->HANDLE_TOOLBAR FOR OBJ_GRID_0200.
SET HANDLER OBJ_EVENT_RECIEVER_0200->HANDLE_DATA_CHANGED
FOR OBJ_GRID_0200.
SET HANDLER OBJ_EVENT_RECIEVER_0200->HANDLE_DATA_CHANGED_FINISHED
FOR OBJ_GRID_0200.
*    SET HANDLER OBJ_EVENT_RECIEVER_0200->HANDLE_F4
*      FOR OBJ_GRID_0200.
*    SET HANDLER
*      OBJ_EVENT_RECIEVER_0200->HANDLE_BEFORE_USER_COMMAND
*        FOR OBJ_GRID_0200.
*    SET HANDLER
*      OBJ_EVENT_RECIEVER_0200->HANDLE_AFTER_USER_COMMAND
*        FOR OBJ_GRID_0200.
SET HANDLER
OBJ_EVENT_RECIEVER_0200->HANDLE_USER_COMMAND
FOR OBJ_GRID_0200.
CALL METHOD OBJ_GRID_0200->REGISTER_F4_FOR_FIELDS
EXPORTING IT_F4 = LT_F4.
CALL METHOD OBJ_GRID_0200->REGISTER_EDIT_EVENT
EXPORTING I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_ENTER.
CALL METHOD OBJ_GRID_0200->SET_TABLE_FOR_FIRST_DISPLAY
EXPORTING IS_VARIANT            = S_VARIANT_0200
IS_LAYOUT             = S_LAYOUT_0200
IT_TOOLBAR_EXCLUDING  = T_TOOLBAR_0200
I_SAVE                = 'A'
CHANGING  IT_OUTTAB             = T_GRID_DATA_0200
IT_FIELDCATALOG       = T_FCAT_0200
.
ENDFORM.                    " DISPLAY_ALV_GRID_0200
*&---------------------------------------------------------------------*
*&      Form  REFRESH_ALV_GRID_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM REFRESH_ALV_GRID_0200 .
CALL METHOD OBJ_GRID_0200->SET_TABLE_FOR_FIRST_DISPLAY
EXPORTING IS_VARIANT            = S_VARIANT_0200
IS_LAYOUT             = S_LAYOUT_0200
IT_TOOLBAR_EXCLUDING  = T_TOOLBAR_0200
I_SAVE                = 'A'
CHANGING  IT_OUTTAB             = T_GRID_DATA_0200
IT_FIELDCATALOG       = T_FCAT_0200
.
ENDFORM.                    " REFRESH_ALV_GRID_0200
*&---------------------------------------------------------------------*
*&      Form  CHANGE_T_ALV_CHECKER_0200
*&---------------------------------------------------------------------*
*       チェック項目の内容更新
*----------------------------------------------------------------------*
*      -->P_OBJ_DATA_CHANGED  更新された項目内容
*----------------------------------------------------------------------*
FORM CHANGE_T_ALV_CHECKER_0200
USING P_OBJ_DATA_CHANGED TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL.
DATA: LS_CELL TYPE LVC_S_MODI,
LS_ROID TYPE LVC_S_ROID,
LS_LINE TYPE LVC_S_MOCE.

LOOP AT P_OBJ_DATA_CHANGED->MT_INSERTED_ROWS INTO LS_LINE.
ENDLOOP.

ENDFORM.                    " CHANGE_T_ALV_CHECKER_0200
*&---------------------------------------------------------------------*
*&      Form  CHECK_INPUT_DATA_0200
*&---------------------------------------------------------------------*
*       外部データ入力チェック
*----------------------------------------------------------------------*
FORM CHECK_INPUT_DATA_0200.

ENDFORM.                    " CHECK_INPUT_DATA_0200
*&---------------------------------------------------------------------*
*&      Form  SET_T_ALV_CHECKER_0200
*&---------------------------------------------------------------------*
*       チェック項目の内容設定
*----------------------------------------------------------------------*
FORM SET_T_ALV_CHECKER_0200 .

ENDFORM.                    " SET_T_ALV_CHECKER_0200
*&---------------------------------------------------------------------*
*&      Form  SET_T_GRID_DATA_0200_TEXT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SET_T_GRID_DATA_0200_TEXT .

ENDFORM.                    " SET_T_GRID_DATA_0200_TEXT
*&---------------------------------------------------------------------*
*&      Form  PROCESS_EVENT_ENTER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM PROCESS_EVENT_ENTER .

DATA: L_EVTID TYPE I.
DATA: L_LINES TYPE I.

IF NOT CL_GUI_ALV_GRID=>CUR_EVENT IS INITIAL.
L_EVTID = CL_GUI_ALV_GRID=>CUR_EVENT->EVENTID.
IF L_EVTID = 19.  " ENTER
*      DESCRIBE TABLE T_LOG_DATA LINES L_LINES.
IF L_LINES = 0.
CALL METHOD OBJ_GRID_0200->REFRESH_TABLE_DISPLAY.
CALL METHOD CL_GUI_CFW=>FLUSH.
ENDIF.
ENDIF.
ENDIF.

ENDFORM.                    " PROCESS_EVENT_ENTER
*&---------------------------------------------------------------------*
*&      Form  CUSTOMIZE_TOOLBAR_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_OBJECT  text
*----------------------------------------------------------------------*
FORM CUSTOMIZE_TOOLBAR_0200
USING P_OBJ_TOOLBAR_SET TYPE REF TO CL_ALV_EVENT_TOOLBAR_SET.

DATA: LS_BUTTON TYPE STB_BUTTON.
CLEAR LS_BUTTON.
LS_BUTTON-FUNCTION = C_USER_COMMAND_COPY_ROW.
*  LS_BUTTON-ICON = ICON_COPY_OBJECT.
LS_BUTTON-BUTN_TYPE = 0.
LS_BUTTON-DISABLED = ' '.
LS_BUTTON-QUICKINFO = TEXT-103.
INSERT LS_BUTTON INTO P_OBJ_TOOLBAR_SET->MT_TOOLBAR INDEX 8.
CASE INPUT_MODE.
WHEN 'N'.
*    WHEN C_INPUT_MODE_EDIT.
WHEN OTHERS.
LS_BUTTON-DISABLED = 'X'.
MODIFY P_OBJ_TOOLBAR_SET->MT_TOOLBAR FROM LS_BUTTON
TRANSPORTING DISABLED
WHERE FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW
OR FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW
OR FUNCTION = CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW
OR FUNCTION = C_USER_COMMAND_COPY_ROW.
ENDCASE.

ENDFORM.                    " CUSTOMIZE_TOOLBAR_0200
*&---------------------------------------------------------------------*
*&      Form  EXECUTE_USER_COMMAND_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_UCOMM  text
*----------------------------------------------------------------------*
FORM EXECUTE_USER_COMMAND_0200 USING    P_UCOMM.

DATA: LS_GRID_DATA LIKE LINE OF T_GRID_DATA_0200.
DATA: LS_ROW TYPE LVC_S_ROW.

CASE P_UCOMM.
WHEN C_USER_COMMAND_COPY_ROW.
CALL METHOD OBJ_GRID_0200->GET_CURRENT_CELL
IMPORTING ES_ROW_ID = LS_ROW.
IF LS_ROW-INDEX > 0.
READ TABLE T_GRID_DATA_0200 INTO LS_GRID_DATA
INDEX LS_ROW-INDEX.
IF SY-SUBRC = 0.
APPEND LS_GRID_DATA TO T_GRID_DATA_0200.
CALL METHOD OBJ_GRID_0200->REFRESH_TABLE_DISPLAY.
CALL METHOD CL_GUI_CFW=>FLUSH.
ENDIF.
ENDIF.
ENDCASE.

ENDFORM.                    " EXECUTE_USER_COMMAND_0200
*&---------------------------------------------------------------------*
*&      Form  REFRESH_GRID_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_OBJ_GRID  text
*----------------------------------------------------------------------*
FORM REFRESH_GRID_DATA  USING P_OBJ_GRID TYPE REF TO CL_GUI_ALV_GRID.

DATA: L_VALID TYPE C.

CLEAR RC_CODE.
CALL METHOD P_OBJ_GRID->CHECK_CHANGED_DATA
IMPORTING
E_VALID = L_VALID.
IF L_VALID <> 'X'.
RC_CODE = '9'.
ENDIF.

ENDFORM.                    " REFRESH_GRID_DATA
*&---------------------------------------------------------------------*
*&      Form  SET_VISIBLE_0200
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_VISIBLE   text
*----------------------------------------------------------------------*
FORM SET_VISIBLE_0200  USING    P_VISIBLE.

CALL METHOD OBJ_GRID_0200->SET_VISIBLE
EXPORTING VISIBLE       = P_VISIBLE.

ENDFORM.                    " SET_VISIBLE_0200
