************************************************************************
* [プログラム名]
*   ZS010602        売上一覧表（粗利小数点なしバージョン)
*
* [処理概要]
*   売上状況の把握
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2001/12/20   PSD H.Tanaka      新規開発　
*  2002/01/10   PSD H.Tanaka      ＡＬＶヘッダー表示
*  2002/01/15   PSD H.Tanaka      金額設定
*  2002/01/21   PSD H.Tanaka      数量マイナス編集
*  2002/01/23   PSD H.Tanaka      原価計算対応
*  2002/02/22   PSD M.Arai        売上単価不具合対応
*  2002/03/13   PSD T.SAITOH      ALVステータス印刷拒否設定
*  2002/04/01   PSD T.SAITOH      ショートダンプ可能性個所修正
*  2002/04/01   PSD T.SAITOH      プログラムIDを変更し粗利小数点
*                                 バージョンプログラムとして複製
*                                 構造を別バージョンで作成
*  2002/04/01   PSD T.SAITOH      原価金額円建て、売上金額円建ての小数点
*                                 を設定対応
*  2002/05/01   PSD T.SAITOH      テキスト不具合修正
*  2002/05/02   PSD T.SAITOH      会計伝票番号取得廃止
*  2002/05/02   PSD T.SAITOH      粗利金額（円建て）をLISと同様とする
*  2002/06/20   PSD T.SAITOH      再移送
*  2002/06/21   PSD T.SAITOH      得意先コード（支払人）ドメイン変更
*  2002/07/12   PSD T.SAITOH      得意先発注番号取得先変更
*  2002/07/17   PSD T.SAITOH      READ_TEXT エラーハンドリング対応
*  2002/07/29   PSD T.SAITOH      販売組織／流通チャネル／製品部門対応
*  2002/08/08   カットオーバー ---------------------------------------*
*  2002/08/08   PSD T.SAITOH          ページ番号付加
*  2002/10/18   PSD K.ARAI        金額算出の変更
*  2002/10/18   PSD K.ARAI        売上単価項目算出方法の変更
*  2002/10/21   PSD K.ARAI        販売伝票データ抽出条件追加
*  2004/04/07   NDSC A.MASUDA     テキストの再取得処理追加
*  2007/02/06   DMC R.HATA        出荷先名追加
*  2007/10/03   DMC R.Hata        テキスト再取得条件変更
*  2007/11/12   D.YI              出荷済未出庫/消費税金額追加
*  2007/12/20   DMC               出荷済未出庫出力対象修正
*  2008/02/04   DMC               出力項目に出荷先コード追加
*  2008/06/19   DMC               出荷済未出庫データ取得方法修正
*  2009/03/06   NDSC S.KURATA     売上単価の取得方法変更
*  2009/11/25   SOLFIS C.ONUKI    売上単価の取得方法変更
*  2010/11/10   SOLFIS M.MURATA   DMW2445
*                                 アーカイブによる伝票フロー不具合のため
*                                 本PGMに影響が出た。バグ改修ではなく
*                                 運用でカバーしてもらうための改修。
*  2011/01/07   SOLFIS M.MURATA   DMW2638
*                                 抽出区分に登録日追加(これまでは転記日)
*                                 ヘッダにどちらの抽出か印字
*                                 抽出区分によってALVレイアウト分岐追加
*                                 ヘッダ印字文字列の追加
*                                 ※抽出区分によって印字文字列変更
************************************************************************
REPORT  zs010602.

*---------------------------------------------------------------------
* TYPES
*---------------------------------------------------------------------
TYPE-POOLS slis.
*--- 請求伝票データ型
TYPES: BEGIN OF typ_info,
vbeln   TYPE vbrp-vbeln,     " 請求伝票
posnr   TYPE vbrp-posnr,     " 明細
fkimg   TYPE vbrp-fkimg,     " 請求数量
vrkme   TYPE vbrp-vrkme,     " 販売単位
kursk   TYPE vbrp-kursk,     " 換算レート
aubel   TYPE vbrp-aubel,     " 販売伝票
aupos   TYPE vbrp-aupos,     " 販売伝票明細
matnr   TYPE vbrp-matnr,     " 品目コード
arktx   TYPE vbrp-arktx,     " テキスト
pstyv   TYPE vbrp-pstyv,     " 明細カテゴリ
matkl   TYPE vbrp-matkl,     " 品目グループ
prodh   TYPE vbrp-prodh,     " 品目階層
vstel   TYPE vbrp-vstel,     " 出荷ポイント
vkgrp   TYPE vbrp-vkgrp,     " 営業グループ
vkbur   TYPE vbrp-vkbur,     " 営業所
wavwr   TYPE vbrp-wavwr,     " 原価
mvgr1   TYPE vbrp-mvgr1,     " 商品グループ
mvgr2   TYPE vbrp-mvgr2,     " 最終製品
mvgr3   TYPE vbrp-mvgr3,     " 商品分類
mvgr4   TYPE vbrp-mvgr4,     " 開発部販売実績
* ↓ MODIFY 2002.02.26 PSD M.ARAI 売上計上日不具合対応
*         ERDAT   TYPE VBRP-ERDAT,     " 登録日
fkdat   TYPE vbrk-fkdat,     " 請求日
* ↑
netwra  TYPE vbrp-netwr,     " 正味額
waerk   TYPE vbrk-waerk,     " 伝票通貨
*---DELETE START PSD T.SAITOH 2002/05/02 ---------------------------*
*         BELNR   TYPE VBRK-BELNR,     " 伝票番号
*---DELETE END   PSD T.SAITOH 2002/05/02 ---------------------------*
kdgrp   TYPE vbrk-kdgrp,     " 得意先グループ
zterm   TYPE vbrk-zterm,     " 支払条件
kunnra  TYPE vbrk-kunrg,     " 支払人
kunag   TYPE vbrk-kunag,     " 受注先
fkart   TYPE vbrk-fkart,     " 請求タイプ
* 2002/01/16 PSD H.Tanaka DEL ↓
*         BSTNK   TYPE VBRK-BSTNK_VF,  " 得意先受注番号
* 2002/01/16 PSD H.Tanaka DEL ↑
vbtyp   TYPE vbrk-vbtyp,     " 販売伝票カテゴリ
vtext   TYPE tvstt-vtext,    " 出荷ポイント名
* 2002/01/15 PSD H.Tanaka MOD ↓
bezeib  TYPE tvkbt-bezei,    " 営業署名
bezeia  TYPE tvgrt-bezei,    " 営業グループ名
* 2002/01/15 PSD H.Tanaka MOD ↑
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
kurrf   TYPE vbrk-kurrf ,    " 換算レート
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*

*---APPEND START D.YI 2007/11/12 ---------------------------*
mwsbp   TYPE vbrp-mwsbp,     " 消費税金額
*---APPEND END   D.YI 2007/11/12 ---------------------------*
*2009/03/06 ADD START
knumv   TYPE vbrk-knumv,     " 伝票条件番号
*2009/03/06 ADD END
*2011/01/07 ADD START
erdat   TYPE vbrk-erdat,     " 伝票登録日
*2011/01/07 ADD END
END   OF typ_info.

*---APPEND START D.YI 2007/11/12 ---------------------------*
TYPES: BEGIN OF typ_likp,
fkdat     TYPE likp-fkdat,     " 売上計上日
vbeln     TYPE likp-vbeln,     " 出荷伝票
lfimg     TYPE lips-lfimg,     " 出荷数量
END   OF typ_likp.
*---APPEND END   D.YI 2007/11/12 ---------------------------*

*--- 販売伝票データ型
TYPES: BEGIN OF typ_vbap,
* 2002/01/16 PSD H.Tanaka ADD ↓
*         VBELN  TYPE VBAP-VBELN,   " 販売伝票
*         POSNR  TYPE VBAP-POSNR,   " 販売伝票明細
aubel  TYPE vbap-vbeln,   " 販売伝票
aupos  TYPE vbap-posnr,   " 販売伝票明細
* 2002/01/16 PSD H.Tanaka ADD ↑
kwmeng TYPE vbap-kwmeng,  " 受注数量
kdmat  TYPE vbap-kdmat,   " 得意先品目コード
audat  TYPE vbak-audat,   " 伝票日付
*---MODIFY START PSD T.SAITOH 2002/07/12 ---------------------------*
** 2002/01/16 PSD H.Tanaka ADD ↓
*         BSTNK  TYPE VBAK-BSTNK,   " 得意先発注番号
** 2002/01/16 PSD H.Tanaka ADD ↑
bstnk  TYPE vbkd-bstkd,   " 得意先発注番号(３５桁)
*---MODIFY END   PSD T.SAITOH 2002/07/12 ---------------------------*
* ↓ append 2002.02.22 psd m.arai 売上単価不具合対応
netpr  TYPE vbap-netpr,   " 正味額
kpein  TYPE vbap-kpein,   " 価格条件単位
* ↑
END   OF typ_vbap.
*---APPEND START DMC 2007/12/20 ---------------------------*
TYPES: BEGIN OF typ_vbup,
vbeln     TYPE vbup-vbeln,     " 販売管理伝票番号
posnr     TYPE vbup-posnr,     " 明細番号 (販売管理伝票)
rfsta     TYPE vbup-rfsta,     " 参照ステータス
gbsta     TYPE vbup-gbsta,     " 明細の全処理ステータス
matnr     TYPE vbap-matnr,     "品目コード
vrkme     TYPE vbap-vrkme,     "販売単位
vkgrp     TYPE vbak-vkgrp,     "営業グループ
vkbur     TYPE vbak-vkbur,     "営業所
bstnk     TYPE vbak-bstnk,     "得意先発注番号
kunnra    TYPE kna1-kunnr,     "支払人
kuntx     TYPE kna1-name1,     "支払人名
maktx     TYPE makt-maktx,     "品目テキスト
bezeia    TYPE tvgrt-bezei,    "営業グループ名
bezeib    TYPE tvkbt-bezei,    "営業所名
datfm     TYPE sy-datum,       "選択処理年月日（Ｆｒｏｍ）
datto     TYPE sy-datum,       "選択処理年月日（Ｔｏ）
END   OF typ_vbup.
*---APPEND END DMC 2007/12/20---------------------------*
*---------------------------------------------------------------------
* DATA
*---------------------------------------------------------------------
*--- 購買伝票内部テーブル
DATA: gf_info  TYPE          typ_info,
gt_info  TYPE TABLE OF typ_info.

*--- 販売伝票内部テーブル
DATA: gf_vbap  TYPE          typ_vbap,
gt_vbap  TYPE TABLE OF typ_vbap.

*--- 帳票出力用内部テーブル
DATA: gf_write   TYPE          zslist_v06a_new,
gt_write   LIKE TABLE OF zslist_v06a_new.
* 2002/01/10 PSD H.Tanaka ADD ↓
DATA: gt_alv     TYPE TABLE OF zslist_v06a_new
WITH HEADER LINE.
* 2002/01/10 PSD H.Tanaka ADD ↑

*--- REUSE_ALV_EVENTS_GET 用
DATA: gt_event TYPE slis_t_event.
DATA: gf_event TYPE slis_alv_event.
DATA: gf_layout   TYPE slis_layout_alv,     "レイアウト構造
gf_variant   LIKE disvariant,          "バリアント
g_top_of_page TYPE slis_formname VALUE 'TOP_OF_PAGE'.
*---
DATA: g_repid        TYPE sy-repid,        " プログラムＩＤ
g_data         TYPE sy-datum,        " システム日付
g_edatu        LIKE vbep-edatu,      " 出荷日付
g_adrnr        LIKE vbpa-adrnr,      " 住所
g_bstdk_e      LIKE vbkd-bstdk_e,    " 得意先回答納期
g_flg_exit(1)  TYPE c VALUE '0',     " ＬＯＯＰ終了フラグ
g_kunnra       TYPE vbrk-kunrg.

* 2002/03/12  PSD T.SAITOH ADD ↓----------------------------------- *
DATA: gf_print TYPE slis_print_alv.
* 2002/03/12  PSD T.SAITOH ADD ↑----------------------------------- *

*---APPEND START DMC 2007/12/20 ---------------------------*
*--- 販売伝票: 明細ステータス内部テーブル
DATA: gf_vbup  TYPE          typ_vbup,
gt_vbup  TYPE TABLE OF typ_vbup.
DATA: g_lfsta(1) TYPE c VALUE 'A',
g_gbsta(1) TYPE c VALUE 'C',
g_flg      TYPE c .
*---APPEND END DMC 2007/12/20---------------------------*
*2008/06/19 ADD START
DATA: g_wbsta(1) TYPE c VALUE 'C'.
*2008/06/19 ADD END
*---------------------------------------------------------------------
* 定数宣言
*---------------------------------------------------------------------
CONSTANTS: cns_vbrp(4)    TYPE c VALUE 'VBRP',
cns_vbpa(4)    TYPE c VALUE 'VBPA',
cns_vbep(4)    TYPE c VALUE 'VBEP',
cns_vbbp(4)    TYPE c VALUE 'VBBP',
cns_ekpo(4)    TYPE c VALUE 'EKPO',
cns_vbap(4)    TYPE c VALUE 'VBAP',
cns_vbkd(4)    TYPE c VALUE 'VBKD',
cns_vbfa(4)    TYPE c VALUE 'VBFA',
cns_tvstt(5)   TYPE c VALUE 'TVSTT',
cns_a(1)       TYPE c VALUE 'A',
cns_n(1)       TYPE c VALUE 'N',
cns_h(1)       TYPE c VALUE 'H',
*           CNS_I(1)       TYPE C VALUE 'I',
cns_k(1)       TYPE c VALUE 'K',
cns_l(1)       TYPE c VALUE 'L',
cns_m(1)       TYPE c VALUE 'M',
cns_o(1)       TYPE c VALUE 'O',
cns_c(1)       TYPE c VALUE 'C',
cns_j(1)       TYPE c VALUE 'J',
cns_s(1)       TYPE c VALUE 'S',
cns_x(1)       TYPE c VALUE 'X',
cns_p(1)       TYPE c VALUE 'P',
cns_py(2)      TYPE c VALUE 'PY',
cns_ag(2)      TYPE c VALUE 'AG',
cns_f2(2)      TYPE c VALUE 'F2',
cns_ka(2)      TYPE c VALUE 'KA',
cns_kb(2)      TYPE c VALUE 'KB',
cns_l2(2)      TYPE c VALUE 'L2',
cns_g2(2)      TYPE c VALUE 'G2',
cns_sp(2)      TYPE c VALUE 'SP',
cns_s1(2)      TYPE c VALUE 'S1',
cns_s2(2)      TYPE c VALUE 'S2',
cns_pe(2)      TYPE c VALUE 'PE',
cns_re(2)      TYPE c VALUE 'RE',
cns_tan(3)     TYPE c VALUE 'TAN',
cns_ztan(4)    TYPE c VALUE 'ZTAN',
cns_ztmp(4)    TYPE c VALUE 'ZTMP',
cns_zero(1)    TYPE c VALUE '0',
cns_zseo(4)    TYPE c VALUE 'ZSEO',
cns_zsek(4)    TYPE c VALUE 'ZSEK',
cns_onli(4)    TYPE c VALUE 'ONLI',
cns_0001(4)    TYPE c VALUE '0001',
cns_*(1)       TYPE c VALUE '*'
.
*---------------------------------------------------------------------
* 選択画面定義
*---------------------------------------------------------------------
*2011/01/07 ADD START
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (8) text-022.
SELECTION-SCREEN POSITION 35.
PARAMETERS r_fkdat RADIOBUTTON GROUP gr1 DEFAULT 'X'. "売上計上日
SELECTION-SCREEN COMMENT 37(10) text-023 FOR FIELD r_fkdat.
SELECTION-SCREEN POSITION 60.
PARAMETERS r_erdat RADIOBUTTON GROUP gr1.             "登録日
SELECTION-SCREEN COMMENT 62(6) text-024 FOR FIELD r_erdat.
SELECTION-SCREEN END OF LINE.
*2011/01/07 ADD END
*--- 抽出年月日
* ↓ MODIFY 2002.02.26 PSD M.Arai 売上計上日変更対応
*SELECT-OPTIONS: S_ERDAT FOR GF_INFO-ERDAT OBLIGATORY.
SELECT-OPTIONS: s_erdat FOR gf_info-fkdat OBLIGATORY.
* ↑
*---APPEND START PSD T.SAITOH 2002/07/29 ---------------------------*
*   販売組織
PARAMETERS: pr_vkorg TYPE tvko-vkorg MEMORY ID vko OBLIGATORY,
*   流通チャネル
pr_vtweg TYPE tvtw-vtweg MEMORY ID vtw OBLIGATORY,
*   製品部門
pr_spart TYPE tspa-spart MEMORY ID spa OBLIGATORY.
*---APPEND END   PSD T.SAITOH 2002/07/29 ---------------------------*

*--- 営業所コード
SELECT-OPTIONS: s_vkbur FOR gf_info-vkbur OBLIGATORY.
*--- 営業グループ
SELECT-OPTIONS: s_vkgrp FOR gf_info-vkgrp.
*--- 得意先コード
SELECT-OPTIONS: s_kunrg FOR g_kunnra.

* Add 2006.10.27 --->
*--- 品目コード
SELECT-OPTIONS: s_matnr FOR gf_info-matnr .
* Add 2006.10.27 <---

* Add 2010/11/10 Start
*--- 販売伝票番号
SELECT-OPTIONS: s_vbeln FOR gf_vbup-vbeln .
* Add 2010/11/10 End

*---------------------------------------------------------------------
* START-OF-SELECTION
*---------------------------------------------------------------------
START-OF-SELECTION.
*--- 初期処理
PERFORM frm_init.

*--- 帳票出力用内部テーブル設定処理
PERFORM frm_make_data.

*--- 帳票出力処理
PERFORM frm_write_data.

************************************************************************
* TOP-OF-PAGE
***********************************************************************
FORM frm_top_of_page.
*--- ヘッダー出力処理
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WRITE:  50      TEXT-001,
*            /1      TEXT-002,GF_WRITE-VKBUR,TEXT-004,GF_WRITE-BEZEIA,
*                    TEXT-003,GF_WRITE-VKGRP,TEXT-004,GF_WRITE-BEZEIB,
*                    TEXT-005,GF_WRITE-DATFM,        " 日付
*                    TEXT-006,GF_WRITE-DATTO.        " 日付
WRITE:  50      text-001,
/1      text-002,gt_alv-vkbur,text-004,gt_alv-bezeia,
text-003,gt_alv-vkgrp,text-004,gt_alv-bezeib,
text-005,gt_alv-datfm,        " 日付
text-006,gt_alv-datto.        " 日付
* 2002/01/10 PSD H.Tanaka MOD ↑

*2011/01/07 ADD START
IF r_fkdat = 'X'.      "売上計上日で抽出
WRITE 123 text-025.
ELSE.
WRITE 123 text-026.
ENDIF.
*2011/01/07 ADD END

*---APPEND START PSD T.SAITOH 2002/08/08 ---------------------------*
*   ページ番号付加
WRITE: 140 'PAGE:',sy-pagno.
*---APPEND END   PSD T.SAITOH 2002/08/08 ---------------------------*

ENDFORM.
************************************************************************
* ALV CALLER_EXIT（ 2002/01/10 PSD H.Tanaka ADD ）
***********************************************************************
FORM frm_caller_exit USING rs_data TYPE slis_data_caller_exit.
rs_data-callback_header_transport = 'FILITEXTS_TEXT_TRANSPORT'.
ENDFORM.
************************************************************************
* Form
***********************************************************************
*&---------------------------------------------------------------------*
*&      Form  FRM_INIT
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_init.

g_repid = sy-repid.   " プログラムＩＤ取得
g_data  = sy-datum.   " システム日付取得

ENDFORM.                    " FRM_INIT
*&---------------------------------------------------------------------
*&      Form  FRM_MAKE_DATA
*&---------------------------------------------------------------------
*       帳票出力用内部テーブル設定処理
*----------------------------------------------------------------------
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------
FORM frm_make_data.

*---APPEND START DMC 2007/12/20 ---------------------------*
* 出荷済未出庫対象データ取得処理
PERFORM frm_vbup_get.
* 出荷済未出庫対象データ編集処理
PERFORM frm_vbup_set.
*---APPEND END DMC 2007/12/20---------------------------*

*--- 請求伝票情報取得処理
PERFORM frm_vbrk_get.

*--- 帳票出力情報設定処理
LOOP AT gt_info INTO gf_info.
*--- 請求伝票情報設定処理
PERFORM frm_vbrk_set.
*--- 販売伝票情報取得処理
PERFORM frm_vbap_get.
*--- 販売伝票情報設定処理
PERFORM frm_vbap_set.
* 2002/01/21 PSD H.Tanaka ADD ↓
*--- 数量のマイナス設定処理
PERFORM frm_data_set.
*--- 選択処理年月日設定処理
PERFORM frm_date_set.
*--- 計算処理
PERFORM frm_keisan_set.

*--- 帳票用内部テーブル更新処理
APPEND gf_write TO gt_write.
ENDLOOP.

*---APPEND START D.YI 2007/11/12 ---------------------------*
*--- 出荷済未出庫
PERFORM frm_likp_set.
*---APPEND END   D.YI 2007/11/12 ---------------------------*


ENDFORM.                    " FRM_MAKE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_VBRK_GET
*&---------------------------------------------------------------------*
*       請求伝票情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbrk_get.
CLEAR   gf_info.
REFRESH gt_info.

*--- 販売伝票情報取得

*2011/01/07 ADD START
IF r_fkdat = 'X'.      "売上計上日で抽出
*2011/01/07 ADD END
SELECT a~vbeln a~posnr a~fkimg a~vrkme a~kursk
a~aubel a~aupos a~matnr a~arktx a~pstyv
a~matkl a~prodh a~vstel a~vkgrp a~vkbur
a~wavwr a~mvgr1 a~mvgr2 a~mvgr3 a~mvgr4
* ↓ MODIFY  2002.02.26 PSD M.Arai 売上計上日不具合対応
*         A~ERDAT A~NETWR
b~fkdat a~netwr
* ↑
*---MODIFY START PSD T.SAITOH 2002/05/02 ---------------------------*
*        B~WAERK B~BELNR B~KDGRP B~ZTERM
b~waerk         b~kdgrp b~zterm
*---MODIFY END   PSD T.SAITOH 2002/05/02 ---------------------------*
* 2002/01/16 PSD H.Tanaka MOD ↓
b~kunrg b~kunag b~fkart
*         B~BSTNK_VF
b~vbtyp
*         C~BEZEI D~BEZEI E~VTEXT
* 2002/01/16 PSD H.Tanaka MOD ↑
c~vtext d~bezei e~bezei
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*** 売上金額（円だて）算出のため
b~kurrf
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
*---APPEND START D.YI 2007/11/12 ---------------------------*
a~mwsbp     " 消費税金額
*---APPEND END   D.YI 2007/11/12 ---------------------------*
*2009/03/06 ADD START
b~knumv
*2009/03/06 ADD END
*2011/01/07 ADD START
b~erdat
*2011/01/07 ADD END
INTO TABLE gt_info
FROM ( ( ( vbrp AS a INNER JOIN vbrk AS b
ON       a~vbeln  = b~vbeln ) INNER JOIN tvstt AS c
ON       a~vstel  = c~vstel ) INNER JOIN tvgrt AS d
ON       a~vkgrp  = d~vkgrp ) INNER JOIN tvkbt AS e
ON       a~vkbur  = e~vkbur
WHERE     a~vkgrp IN s_vkgrp
AND     a~vkbur IN s_vkbur
* ↓ MODIFY 2002.02.26 M.Arai 売上計上日変更対応
*     AND     A~ERDAT IN S_ERDAT
AND     b~fkdat IN s_erdat

* Add 2006.10.27 --->
AND matnr IN s_matnr
* Add 2006.10.27 <---



* ↑
*---APPEND START PSD T.SAITOH 2002/07/29 ---------------------------*
AND     b~vkorg = pr_vkorg
AND     b~vtweg = pr_vtweg
AND     b~spart = pr_spart
*---APPEND END   PSD T.SAITOH 2002/07/29 ---------------------------*
AND     b~kunrg IN s_kunrg
AND ( ( b~fkart =  cns_f2
AND     b~fktyp =  cns_l
AND     b~vbtyp =  cns_m )
*---APPEND START PSD K.ARAI   2002/10/21 ---------------------------*
OR   ( b~fkart =  cns_l2
AND     b~fktyp =  cns_l
AND     b~vbtyp =  cns_p )
*---APPEND END   PSD K.ARAI   2002/10/21 ---------------------------*
OR   ( b~fkart =  cns_re
AND     b~fktyp =  cns_l
AND     b~vbtyp =  cns_o )
OR   ( b~fkart =  cns_s2
AND     b~fktyp =  cns_a
AND     b~vbtyp =  cns_s )
OR   ( b~fkart =  cns_s2
AND     b~fktyp =  cns_l
AND     b~vbtyp =  cns_s )
OR   ( b~fkart =  cns_s1
AND     b~fktyp =  cns_a
AND     b~vbtyp =  cns_n )
OR   ( b~fkart =  cns_s1
AND     b~fktyp =  cns_l
AND     b~vbtyp =  cns_n )
OR   ( b~fkart =  cns_l2
AND     b~fktyp =  cns_a
AND     b~vbtyp =  cns_p )
OR   ( b~fkart =  cns_g2
AND     b~fktyp =  cns_a
AND     b~vbtyp =  cns_o ) )
AND     c~spras =  cns_j
AND     d~spras =  cns_j
AND     e~spras =  cns_j.
*2011/01/07 ADD START
ELSE.                  "登録日で抽出
SELECT a~vbeln a~posnr a~fkimg a~vrkme a~kursk
a~aubel a~aupos a~matnr a~arktx a~pstyv
a~matkl a~prodh a~vstel a~vkgrp a~vkbur
a~wavwr a~mvgr1 a~mvgr2 a~mvgr3 a~mvgr4
b~fkdat a~netwr b~waerk b~kdgrp b~zterm
b~kunrg b~kunag b~fkart b~vbtyp c~vtext
d~bezei e~bezei b~kurrf a~mwsbp b~knumv
b~erdat
INTO TABLE gt_info
FROM ( ( ( vbrp AS a INNER JOIN vbrk AS b
ON a~vbeln  = b~vbeln )
INNER JOIN tvstt AS c
ON a~vstel  = c~vstel )
INNER JOIN tvgrt AS d
ON a~vkgrp  = d~vkgrp )
INNER JOIN tvkbt AS e
ON a~vkbur  = e~vkbur
WHERE     a~vkgrp IN s_vkgrp
AND     a~vkbur IN s_vkbur
AND     b~erdat IN s_erdat      "←変更
AND     a~matnr IN s_matnr
AND     b~vkorg = pr_vkorg
AND     b~vtweg = pr_vtweg
AND     b~spart = pr_spart
AND     b~kunrg IN s_kunrg
AND ( ( b~fkart =  cns_f2
AND     b~fktyp =  cns_l
AND     b~vbtyp =  cns_m )
OR   ( b~fkart =  cns_l2
AND     b~fktyp =  cns_l
AND     b~vbtyp =  cns_p )
OR   ( b~fkart =  cns_re
AND     b~fktyp =  cns_l
AND     b~vbtyp =  cns_o )
OR   ( b~fkart =  cns_s2
AND     b~fktyp =  cns_a
AND     b~vbtyp =  cns_s )
OR   ( b~fkart =  cns_s2
AND     b~fktyp =  cns_l
AND     b~vbtyp =  cns_s )
OR   ( b~fkart =  cns_s1
AND     b~fktyp =  cns_a
AND     b~vbtyp =  cns_n )
OR   ( b~fkart =  cns_s1
AND     b~fktyp =  cns_l
AND     b~vbtyp =  cns_n )
OR   ( b~fkart =  cns_l2
AND     b~fktyp =  cns_a
AND     b~vbtyp =  cns_p )
OR   ( b~fkart =  cns_g2
AND     b~fktyp =  cns_a
AND     b~vbtyp =  cns_o ) )
AND     c~spras =  cns_j
AND     d~spras =  cns_j
AND     e~spras =  cns_j.
ENDIF.
*2011/01/07 ADD END

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
*---APPEND START DMC 2007/12/20 ---------------------------*
CHECK: NOT g_flg IS INITIAL.
*---APPEND END DMC 2007/12/20 ---------------------------*
MESSAGE s600(z1) WITH text-007.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbrp
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBRK_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBRK_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbrk_set.
DATA: l_mwsbp TYPE zslist_v06a_new-mwsbp.

CLEAR: gf_write,        " 帳票出力用構造クリア
g_flg_exit.      " ＬＯＯＰ終了フラグクリア
*--- 共通項目設定
MOVE-CORRESPONDING gf_info TO gf_write.

*--- 区・在（在庫品）設定
IF gf_write-pstyv = cns_zseo.
gf_write-ku = text-008.
ELSEIF gf_write-pstyv = cns_zsek OR
gf_write-pstyv = cns_tan  OR
gf_write-pstyv = cns_ztan OR
gf_write-pstyv = cns_ztmp.
gf_write-zai = cns_*.
IF gf_write-pstyv = cns_zsek.
gf_write-ku  = text-009.
ENDIF.
ENDIF.

*--- 伝区設定
IF gf_write-fkart = cns_re.
gf_write-denku = text-010.
ELSEIF gf_write-fkart = cns_g2.
gf_write-denku = text-011.
ELSEIF gf_write-fkart = cns_l2.
gf_write-denku = text-012.
ELSEIF gf_write-fkart = cns_s1.
gf_write-denku = text-013.
ELSEIF gf_write-fkart = cns_s2.
gf_write-denku = text-014.
ENDIF.


*---APPEND START D.YI 2007/11/12 ---------------------------*
PERFORM frm_kingaku_henkan USING    gf_write-waerk
gf_info-mwsbp
CHANGING l_mwsbp.
gf_write-mwsbp = l_mwsbp.
*---APPEND END   D.YI 2007/11/12 ---------------------------*


ENDFORM.                    " FRM_VBRK_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbap_get.
CLEAR   gf_vbap.
REFRESH gt_vbap.

*--- 販売伝票情報取得
SELECT a~vbeln a~posnr a~kwmeng a~kdmat
b~audat
* 2002/01/16 PSD H.Tanaka ADD ↓
b~bstnk
* 2002/01/16 PSD H.Tanaka ADD ↑
* ↓ 2002.02.22 psd m.arai 売上単価不具合対応
a~netpr
a~kpein
* ↑
*    INTO CORRESPONDING FIELDS OF TABLE GT_VBAP
INTO TABLE gt_vbap
FROM vbap AS a INNER JOIN vbak AS b
ON a~vbeln = b~vbeln
WHERE a~vbeln = gf_info-aubel
AND a~posnr = gf_info-aupos.

*--- エラー処理
CASE sy-subrc.
WHEN 0.
*      SORT GT_VBAP BY VBELN POSNR.
SORT gt_vbap BY aubel aupos.
WHEN 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-015.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbap
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBAP_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbap_set.

LOOP AT gt_vbap INTO gf_vbap.
IF sy-tabix = 1.
*--- 販売情報設定
MOVE-CORRESPONDING gf_vbap TO gf_write.
*---APPEND START PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 出荷指示備考設定
PERFORM frm_read_text_forwarding.
*---APPEND END   PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 社内用備考設定
PERFORM frm_read_text.
*--- 販売伝票納入日程行情報取得
PERFORM frm_vbep_get.
*--- 販売伝票ビジネスデータ情報取得
PERFORM frm_vbkd_get.


*2008/02/04 MOD START
*--- 出荷先コード・出荷先名設定
PERFORM frm_vbpa_get1 USING    'WE'
'出荷先'
gf_vbap-aubel
CHANGING gf_write-shukkacd
gf_write-shukka.
** Add 2007.02.06 --->
**--- 出荷先名設定
*      PERFORM FRM_VBPA_GET USING   'WE'
*                                    '出荷先名'
*                           CHANGING GF_WRITE-SHUKKA.
**--- 出荷先名設定
*      PERFORM FRM_ADDR_GET USING    GF_WRITE-SHUKKA
*                           CHANGING GF_WRITE-SHUKKA.
** Add 2007.02.06 <---
*2008/02/04 MOD END

*--- 販売伝票取引先取得（受注先名取得用）
* 2002/01/11 PSD H.Tanaka MOD ↓
*      PERFORM FRM_VBPA_GET USING    CNS_SP
PERFORM frm_vbpa_get USING    cns_ag
* 2002/01/11 PSD H.Tanaka MOD ↑
text-019
*                           CHANGING GF_WRITE-KUNAG.
CHANGING gf_write-kunnrb.
*--- 受注先名設定
*      PERFORM FRM_ADDR_GET USING    GF_WRITE-KUNAG
PERFORM frm_addr_get USING    gf_write-kunnrb
CHANGING gf_write-kunnrb.
*--- 販売伝票取引先取得（得意先名取得用）
* 2002/01/11 PSD H.Tanaka MOD ↓
*      PERFORM FRM_VBPA_GET USING    CNS_PY
PERFORM frm_vbpa_get USING    cns_ag
* 2002/01/11 PSD H.Tanaka MOD ↑
text-018
*                           CHANGING GF_WRITE-KUNNRA.
CHANGING gf_write-kuntx.
*--- 得意先名設定
*      PERFORM FRM_ADDR_GET USING    GF_WRITE-KUNNRA
PERFORM frm_addr_get USING    gf_write-kuntx
CHANGING gf_write-kuntx.
ELSE.
*--- 受注数量設定
gf_write-kwmeng = gf_write-kwmeng + gf_vbap-kwmeng.
ENDIF.
ENDLOOP.

ENDFORM.                    " FRM_VBAP_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT
*&---------------------------------------------------------------------*
*       社内用備考取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_read_text.
DATA: lt_tline    TYPE TABLE OF tline,
lf_tline    TYPE tline,
l_vbeln     LIKE thead-tdname.

*  CONCATENATE GF_VBAP-VBELN
*              GF_VBAP-POSNR
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
*  ヘッダ単位のためヘッダのみ
*  CONCATENATE GF_VBAP-AUBEL
*              GF_VBAP-AUPOS
*              INTO L_VBELN.
* Modified 2004.04.07 >>>
* L_VBELN = GF_VBAP-AUBEL.
SELECT SINGLE vgbel
FROM vbrp
INTO l_vbeln
WHERE vbeln EQ gf_info-vbeln
AND  posnr EQ gf_info-posnr
.

* Modified 2004.04.07 <<<

*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
id        = '0001'
language  = 'J'
name      = l_vbeln
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
* 設計書どおりに記述していないため修正
*            OBJECT    = 'VBBP'
object    = 'VBBK'
*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
TABLES
lines     = lt_tline
EXCEPTIONS
not_found = 4
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
reference_check = 5
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
OTHERS    = 8.
CASE sy-subrc.
WHEN 0.
READ TABLE lt_tline INTO lf_tline INDEX 1.
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
*     GF_WRITE-ETCB = LF_TLINE+0(40).
gf_write-etcb = lf_tline-tdline.
*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
* Mod 2007.10.03 --->
*    WHEN 8.
WHEN OTHERS .
* Mod 2007.10.03 <---

*---APPEND START NDSC A.MASUDA 2004/04/07---------------------------*
l_vbeln = gf_vbap-aubel.
*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
id              = '0001'
language        = 'J'
name            = l_vbeln
object          = 'VBBK'
TABLES
lines           = lt_tline
EXCEPTIONS
not_found       = 4
reference_check = 5
OTHERS          = 8.
CASE sy-subrc.
WHEN 0.
READ TABLE lt_tline INTO lf_tline INDEX 1.
gf_write-etcb = lf_tline-tdline.
WHEN 8.
MESSAGE e001(z1) WITH text-016
sy-subrc.
ENDCASE.
*---APPEND START NDSC A.MASUDA 2004/04/07---------------------------*
*---DELETE START NDSC A.MASUDA 2004/04/07---------------------------*
*      MESSAGE E001(Z1) WITH TEXT-016
*                            SY-SUBRC.
*---DELETE END   NDSC A.MASUDA 2004/04/07---------------------------*
ENDCASE.

ENDFORM.                    " FRM_READ_TEXT
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET
*&---------------------------------------------------------------------*
*       販売伝票納入日程行情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbep_get.
*--- 販売伝票納入日程行取得
SELECT SINGLE edatu
INTO (gf_write-edatu)
FROM vbep
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR
WHERE vbeln = gf_vbap-aubel
AND posnr = gf_vbap-aupos
AND etenr = cns_0001.

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-017.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbep
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBEP_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBKD_GET
*&---------------------------------------------------------------------*
*       販売伝票ビジネスデータ情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_vbkd_get.
*--- 販売伝票ビジネスデータ情報取得
SELECT SINGLE bstdk_e
*---APPEND START PSD T.SAITOH 2002/07/12 ---------------------------*
bstkd "得意先発注番号（３５桁）
*---APPEND END   PSD T.SAITOH 2002/07/12 ---------------------------*
*---MODIFY START PSD T.SAITOH 2002/07/12 ---------------------------*
*    INTO (GF_WRITE-TKNK)
INTO (gf_write-tknk,gf_write-bstnk)
*---MODIFY END   PSD T.SAITOH 2002/07/12 ---------------------------*
FROM vbkd
* 2002/01/22 PSD H.Tanaka MOD ↓
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR.
WHERE vbeln = gf_vbap-aubel
*     AND POSNR = GF_VBAP-AUPOS
AND posnr = '000000'.

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-020.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbkd
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBKD_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET
*&---------------------------------------------------------------------*
*       販売伝票取引先取得処理
*----------------------------------------------------------------------*
*      -->P_PAEVW  取引先機能
*      -->P_TEXT   エラー時出力用テーブル名
*      <--P_ADRNR  住所
*----------------------------------------------------------------------*
FORM frm_vbpa_get USING    p_paevw
p_text
CHANGING p_adrnr.
*--- 販売伝票取引情報取得
SELECT SINGLE adrnr
INTO (p_adrnr)
FROM vbpa
* 2002/01/11 PSD H.Tanaka MOD ↓
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR
WHERE vbeln = gf_vbap-aubel
AND posnr = '000000'
* 2002/01/11 PSD H.Tanaka MOD ↑
AND parvw = p_paevw.

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE s600(z1) WITH p_text.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbpa
sy-subrc.
ENDCASE.

ENDFORM.                    " FRM_VBPA_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_DATE_SET
*&---------------------------------------------------------------------*
*       選択処理年月日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_date_set.
gf_write-datfm = s_erdat-low.
gf_write-datto = s_erdat-high.
ENDFORM.                    " FRM_DATE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_KEISAN_SET
*&---------------------------------------------------------------------*
*       計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_keisan_set.
DATA: l_netwra TYPE zslist_v06a_new-kwmeng,
l_wavwr  TYPE zslist_v06a_new-netpra.
*2009/03/06 ADD START
DATA: l_kbetr      TYPE konv-kbetr,
l_kpein      TYPE konv-kpein,
l_waers      TYPE konv-waers,
l_netpra(13) TYPE c.
*2009/03/06 ADD END
*--- 売上金額設定
* 2002/01/22 PSD H.Tanaka MOD ↓
*2009/03/06 DEL START
*  PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
**                                      GF_WRITE-NETWRA
***                             CHANGING GF_WRITE-NETWRB.
**                             CHANGING GF_WRITE-NETWRA.
** ↓ modify 2002.02.22 psd m.arai 売上単価不具合対応
**                                      GF_INFO-NETWRA
*                                      GF_VBAP-NETPR
*                             CHANGING L_NETWRA.
*2009/03/06 DEL END
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*** 売上金額はVBAP-NETPRではなく、VBRP-NETWRから算出する。
PERFORM frm_kingaku_henkan USING     gf_write-waerk
gf_info-netwra
CHANGING  gf_write-netwra.
*  GF_WRITE-NETWRA = L_NETWRA.
*  IF GF_VBAP-KPEIN <> 0.
*    GF_WRITE-NETWRA = ( GF_WRITE-NETWRA * GF_WRITE-FKIMG )
*                    / GF_VBAP-KPEIN.
*  ELSE.
*    GF_WRITE-NETWRA = 0.
*  ENDIF.

* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*

* ↑

*--- 原価設定
* 2002/01/22 PSD H.Tanaka MOD ↓
PERFORM frm_kingaku_henkan USING    gf_write-waerk
*                                      GF_WRITE-WAVWR
gf_info-wavwr
*                             CHANGING GF_WRITE-WAVWRA.
*                             CHANGING GF_WRITE-WAVWR.
CHANGING l_wavwr.
*--- 原価計算
* 2002/01/24 PSD H.Tanaka MOD ↓
*  IF GF_WRITE-KWMENG <> CNS_ZERO.
IF gf_info-fkimg <> cns_zero.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_WRITE-KWMENG.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_VBAP-KWMENG.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_INFO-FKIMG.
gf_write-wavwr = l_wavwr / gf_info-fkimg.
gf_write-wavwra = ( l_wavwr / gf_info-fkimg ) * gf_write-kursk.
ENDIF.
*--- 原価（円建て）計算
*  GF_WRITE-WAVWRA = GF_WRITE-WAVWR * GF_WRITE-KURSK.

*--- 原価金額計算
*  GF_WRITE-GYENA = GF_WRITE-WAVWR.
*  GF_WRITE-GYENA = L_WAVWR.
IF gf_info-vbtyp = cns_n OR
gf_info-vbtyp = cns_o.
*    GF_WRITE-GYENA = GF_WRITE-GYENA * -1.
l_wavwr = l_wavwr * -1.
ENDIF.
gf_write-gyena = l_wavwr.
*--- 原価金額（円建て）計算（小数点なし）
* 2002/01/11 PSD H.Tanaka MOD ↓
*  GF_WRITE-GYENB  = GF_WRITE-WAVWRA * GF_WRITE-FKIMG.
*  GF_WRITE-GYENB = GF_WRITE-GYENA * GF_WRITE-KURSK.
gf_write-gyenb = l_wavwr * gf_write-kursk.

*--- 売上単価計算
*---MODIFY START PSD T.SAITOH 2002/04/01 ---------------------------*
*  IF GF_WRITE-FKIMG <> CNS_ZERO. "チェックする内容が違うのでは？
*                                  とりあえず、修正する。
IF gf_vbap-kpein <> cns_zero.
*---MODIFY END   PSD T.SAITOH 2002/04/01 ---------------------------*
* 2002/01/22 PSD H.Tanaka MOD ↓
*    GF_WRITE-NETPRA = GF_WRITE-NETWRB / GF_WRITE-FKIMG.
*    GF_WRITE-NETPRA = L_NETWRA / GF_WRITE-FKIMG.

* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 MOD START
*   条件レート・価格条件単位取得
PERFORM frm_get_konv USING    gf_info-knumv
gf_info-posnr
CHANGING l_kbetr
l_kpein
l_waers.
IF l_kpein <> cns_zero.
*     条件レートを通貨変換
WRITE l_kbetr TO l_netpra CURRENCY l_waers NO-GROUPING.
*     売上単価 = 条件レート ÷ 価格条件単位
gf_write-netpra = l_netpra / l_kpein.
ENDIF.
**** 売上単価　=　売上金額　÷　数量
*    IF GF_INFO-FKIMG <> CNS_ZERO.
*      GF_WRITE-NETPRA = GF_WRITE-NETWRA / GF_INFO-FKIMG.
*    ENDIF.
*2009/03/06 MOD END
*    GF_WRITE-NETPRA = L_NETWRA / GF_VBAP-KPEIN."売上単価算出
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*

* APPEND START PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 DEL START
**** 売上単価を求める際、マイナスの値が出ることを防ぐため
*    IF GF_WRITE-NETWRA < CNS_ZERO.
*      GF_WRITE-NETPRA = GF_WRITE-NETPRA * - 1 .
*    ENDIF.
*2009/03/06 DEL END
* APPEND END   PSD K.ARAI 2002/10/18--------------------------*

*---DELETE START PSD T.SAITOH 2002/04/01 ---------------------------*
*  ENDIF.
*---DELETE END   PSD T.SAITOH 2002/04/01 ---------------------------*

*--- 売上単価（円建て）計算
* ↓ MODIFY 2002/02/22 PSD M.Arai 売上単価不具合対応
*  GF_WRITE-NETPRB = GF_WRITE-NETPRA * GF_WRITE-KURSK.
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*2009/03/06 MOD START
*-- 売上単価（円建て） = 売上単価　×　換算レート
gf_write-netprb  = gf_write-netpra * gf_write-kursk.
*    GF_WRITE-NETPRB  =
*          ( GF_WRITE-NETPRA / GF_VBAP-KPEIN ) * GF_WRITE-KURSK.
*2009/03/06 MOD END
*   GF_WRITE-NETPRB = ( L_NETWRA / GF_VBAP-KPEIN )  * GF_WRITE-KURSK.
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
* ↑
*---MODIFY START PSD T.SAITOH 2002/04/01 ---------------------------*
ENDIF.
*---MODIFY END   PSD T.SAITOH 2002/04/01 ---------------------------*


*--- 売上金額（円建て）計算（小数点なし）
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
***売上金額（円建て）=　売上金額（原価） × 換算レート
gf_write-netwrb = gf_write-netwra * gf_info-kurrf.
*  GF_WRITE-NETWRB = GF_WRITE-FKIMG * GF_WRITE-NETPRB.
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
* 2002/01/11 PSD H.Tanaka MOD ↑

*---APPEND START PSD T.SAITOH 2002/04/01 ---------------------------*
* 売上金額（円建て）小数点ありをリストビューア項目に設定する
gf_write-netwrc = gf_write-fkimg * gf_write-netprb.
* 原価金額（円建て）小数点ありをリストビューア項目に設定する
gf_write-gyenc =  l_wavwr * gf_write-kursk.
*---APPEND END   PSD T.SAITOH 2002/04/01 ---------------------------*

*--- 粗利金額計算
*---MODIFY START PSD T.SAITOH 2002/05/02 ---------------------------*
*  GF_WRITE-ARAEYN = GF_WRITE-NETWRB - GF_WRITE-GYENB.
* 粗利金額 = （売上金額（外貨）−原価金額（外貨））＊ 換算レート
* MODIFY START PSD K.ARAI 2002/10/18--------------------------*
*** 換算レートを修正
gf_write-araeyn
= ( gf_write-netwra - l_wavwr ) * gf_info-kurrf.
* MODIFY END   PSD K.ARAI 2002/10/18--------------------------*
*---MODIFY END   PSD T.SAITOH 2002/05/02 ---------------------------*

*--- 粗利率計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*    GF_WRITE-ARAPER = GF_WRITE-ARAEYN / GF_WRITE-NETWRA.
*  IF GF_WRITE-NETWRA <> CNS_ZERO.
IF gf_write-netwrb <> cns_zero.
gf_write-araper = gf_write-araeyn / gf_write-netwrb * 100.
* 2002/01/11 PSD H.Tanaka MOD ↑
ENDIF.

*---modify START PSD T.SAITOH 2002/04/01 ---------------------------*
* 売上金額（円建て）小数点ありをリストビューア項目に設定する
*    GF_WRITE-NETWRC = GF_WRITE-NETWRB.
* 原価金額（円建て）小数点ありをリストビューア項目に設定する
*    GF_WRITE-GYENC = GF_WRITE-GYENB.
*---modify END   PSD T.SAITOH 2002/04/01 ---------------------------*
ENDFORM.                    " FRM_KEISAN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_ADDR_GET
*&---------------------------------------------------------------------*
*       受注先名／得意先名取得処理
*----------------------------------------------------------------------*
*      -->P_ADRNR  住所
*      <--P_NAME2  受注先名／得意先名
*----------------------------------------------------------------------*
FORM frm_addr_get USING    p_adrnr
CHANGING p_name2.
DATA l_addr1_sel TYPE addr1_sel.
DATA l_sadr      TYPE sadr.

l_addr1_sel-addrnumber = p_adrnr.
*--- 汎用モジュール『ADDR_GET』
CALL FUNCTION 'ADDR_GET'
EXPORTING
address_selection = l_addr1_sel
IMPORTING
sadr              = l_sadr
EXCEPTIONS
parameter_error   = 1
address_not_exist = 2
version_not_exist = 3
internal_error    = 4
OTHERS            = 5.
IF sy-subrc <> 0.
*    P_KUNNR = ''.
ELSE.
p_name2 = l_sadr-name1.
ENDIF.

ENDFORM.                    " FRM_ADDR_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_write_data.
*--- 帳票設定処理
PERFORM frm_write_set.

*--- リストの出力
CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
EXPORTING
i_callback_program             = g_repid        "レポートID
*   I_CALLBACK_TOP_OF_PAGE          = G_TOP_OF_PAGE  "TOP_OF_PAGE
i_structure_name               = 'ZSLIST_V06A_NEW'   "構造
is_layout                      = gf_layout      "レイアウト設定
i_save                         = 'A'            "レイアウト保存
is_variant                     = gf_variant
it_events                      = gt_event[]     "イベント設定
* 2002/03/13  PSD T.SAITOH ADD ↓-------------------------------------*
is_print                       = gf_print      "印刷設定
* 2002/03/13  PSD T.SAITOH ADD ↑-------------------------------------*
TABLES
* 2002/01/10 PSD H.Tanaka MOD ↓
*    T_OUTTAB                       = GT_WRITE  " 帳票出力用内部テーブル
t_outtab                       = gt_alv  " 帳票出力用内部テーブル
* 2002/01/10 PSD H.Tanaka MOD ↑
EXCEPTIONS
program_error                  = 1
OTHERS                         = 2
.
IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                    " FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_SET
*&---------------------------------------------------------------------*
*       帳票設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_write_set.
* 2002/02/06 PSD H.Tanaka ADD ↓
*--- 内部テーブル存在チェック
IF gt_write IS INITIAL.
MESSAGE s204(z1).
STOP.
ENDIF.
* 2002/02/06 PSD H.Tanaka ADD ↑
* 2002/01/10 PSD H.Tanaka ADD ↓
*--- 内部テーブル変換処理
gt_alv[] = gt_write[].
* 2002/01/10 PSD H.Tanaka ADD ↑
* 2002/03/12  PSD T.SAITOH ADD ↓-------------------------------------*
gf_print-no_print_listinfos = 'X'.
* 2002/03/12  PSD T.SAITOH ADD ↑-------------------------------------*

*--- イベント取得処理
PERFORM frm_event_get.

*--- ページ切り替え設定
gf_layout-group_change_edit = cns_x.

*--- バリアント保存設定
*2011/01/07 DEL START
*  gf_variant-variant = '/ZS010600_01'.
*2011/01/07 DEL END
*2011/01/07 ADD START
IF r_fkdat = 'X'.      "売上計上日
gf_variant-variant = '/ZS010600_01'.
ELSE.                  "登録日
gf_variant-variant = '/ZS010600_03'.
ENDIF.
*2011/01/07 ADD END
ENDFORM.                    " FRM_WRITE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_EVENT_GET
*&---------------------------------------------------------------------*
*       イベント取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_event_get.
*--- イベント取得
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
i_list_type     = 0
IMPORTING
et_events       = gt_event
EXCEPTIONS
list_type_wrong = 1
OTHERS          = 2.
IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

*--- 使用イベントに実行するサブルーチン名を設定
LOOP AT gt_event INTO gf_event.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WHERE NAME = 'TOP_OF_PAGE'.
*      GF_EVENT-FORM = 'FRM_TOP_OF_PAGE'.
*      MODIFY GT_EVENT FROM GF_EVENT.
CASE gf_event-name.
WHEN 'TOP_OF_PAGE'.
gf_event-form = 'FRM_TOP_OF_PAGE'.
MODIFY gt_event FROM gf_event.
WHEN 'CALLER_EXIT'.
gf_event-form = 'FRM_CALLER_EXIT'.
MODIFY gt_event FROM gf_event.
ENDCASE.
* 2002/01/10 PSD H.Tanaka MOD ↑
ENDLOOP.

ENDFORM.                    " FRM_EVENT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*       金額変換処理
*----------------------------------------------------------------------*
*      -->P_TSUKACD  通貨コード
*      -->P_KINGAKU  変換前金額
*      <--P_HENKAN   変換後金額
*----------------------------------------------------------------------*
FORM frm_kingaku_henkan USING    p_tsukacd
p_kingaku
CHANGING p_henkan.
DATA l_idoc_amount(255) TYPE c.
*--- 汎用モジュール金額変換モジュール
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
EXPORTING
currency    = p_tsukacd
sap_amount  = p_kingaku
IMPORTING
idoc_amount = l_idoc_amount
EXCEPTIONS
OTHERS      = 1.
IF sy-subrc <> 1.
p_henkan = l_idoc_amount.
ENDIF.

ENDFORM.                    " FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_SET
*&---------------------------------------------------------------------*
*       数量のマイナス設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_data_set.
* 2002/01/15 PSD H.Tanaka ADD ↓
*--- 売上金額・売上数量・受注数量変換
IF gf_info-vbtyp = cns_n OR
gf_info-vbtyp = cns_o.
* 2002/01/24 PSD H.Tanaka MOD ↓
*    GF_WRITE-NETWRA = GF_WRITE-NETWRA * -1. " 売上金額
gf_info-netwra = gf_info-netwra * -1. " 売上金額
* 2002/01/21 PSD H.Tanaka MOD ↓
*    GF_WRITE-WAVWR  = GF_WRITE-WAVWR  * -1.
gf_write-fkimg  = gf_write-fkimg  * -1. " 売上数量
gf_write-kwmeng = gf_write-kwmeng * -1. " 受注数量
ENDIF.
* 2002/01/15 PSD H.Tanaka ADD ↑

ENDFORM.                    " FRM_DATA_SET
*---APPEND START PSD T.SAITOH 2002/05/01 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT_forwarding
*&---------------------------------------------------------------------*
*       出荷指示備考取得処理
*----------------------------------------------------------------------*
FORM frm_read_text_forwarding.
DATA: lt_tline    TYPE TABLE OF tline,
lf_tline    TYPE tline,
l_vbeln     LIKE thead-tdname.
* Modified 2003.04.07 >>>
*  CONCATENATE GF_VBAP-AUBEL
*              GF_VBAP-AUPOS
*              INTO L_VBELN.
*
SELECT SINGLE vgbel vgpos
FROM vbrp
INTO (l_vbeln+0(10),l_vbeln+10(6) )
WHERE vbeln EQ gf_info-vbeln
AND  posnr EQ gf_info-posnr
.
* Modified 2003.04.07 <<<
*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
id        = '9001'
language  = 'J'
name      = l_vbeln
object    = 'VBBP'
TABLES
lines     = lt_tline
EXCEPTIONS
not_found = 4
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
reference_check = 5
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
OTHERS    = 8.
CASE sy-subrc.
WHEN 0.
READ TABLE lt_tline INTO lf_tline INDEX 1.
gf_write-etca = lf_tline-tdline.
WHEN 8.
*---APPEND START NDSC A.MASUDA 2004/04/07---------------------------*
CONCATENATE gf_vbap-aubel
gf_vbap-aupos
INTO l_vbeln.
*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
id              = '9001'
language        = 'J'
name            = l_vbeln
object          = 'VBBP'
TABLES
lines           = lt_tline
EXCEPTIONS
not_found       = 4
reference_check = 5
OTHERS          = 8.
CASE sy-subrc.
WHEN 0.
READ TABLE lt_tline INTO lf_tline INDEX 1.
gf_write-etca = lf_tline-tdline.
WHEN 8.
MESSAGE e001(z1) WITH text-016
sy-subrc.
ENDCASE.
*---APPEND END   NDSC A.MASUDA 2004/04/07---------------------------*
*---DELETE START NDSC A.MASUDA 2004/04/07---------------------------*
*      MESSAGE E001(Z1) WITH TEXT-016
*                            SY-SUBRC.
*---DELETE END   NDSC A.MASUDA 2004/04/07---------------------------*
ENDCASE.

ENDFORM.                    " FRM_READ_TEXT_forwarding

*---APPEND START D.YI 2007/11/12 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_LIKP_SET
*&---------------------------------------------------------------------*
*       出荷済未出庫
*----------------------------------------------------------------------*
FORM frm_likp_set.

DATA: lt_alv    TYPE STANDARD TABLE OF zslist_v06a_new,
*---DEL START DMC 2007/12/20 ---------------------------*
*        LF_ALV_H  TYPE ZSLIST_V06A_NEW,
*        LF_ALV_T  TYPE ZSLIST_V06A_NEW,
*---DEL END DMC 2007/12/20 ---------------------------*
lf_alv_w  TYPE zslist_v06a_new,
lt_likp   TYPE STANDARD TABLE OF typ_likp,
lf_likp   TYPE typ_likp,
lf_likp_t TYPE typ_likp,
l_lfimg   TYPE lips-lfimg,
l_wavwr   TYPE vbap-wavwr,
l_wavwr_w TYPE zslist_v06a_new-gyenb,
l_kwmeng  TYPE vbap-kwmeng,
l_waerk   TYPE vbap-waerk,
l_kursk   TYPE vbkd-kursk.
*---APPEND START DMC 2007/12/20 ---------------------------*
DATA:
lf_alv_h  TYPE typ_vbup,
lf_alv_t  TYPE typ_vbup.
*---APPEND END DMC 2007/12/20 ---------------------------*

*---MOD START DMC 2007/12/20 ---------------------------*
*  LT_ALV[] = GT_WRITE[].

*  SORT LT_ALV BY AUBEL.
SORT gt_vbup BY vbeln posnr.

*  LOOP AT LT_ALV
*     INTO LF_ALV_H.
*
*    IF LF_ALV_T-AUBEL <> LF_ALV_H-AUBEL.
*      LF_ALV_T = LF_ALV_H.

LOOP AT gt_vbup
INTO lf_alv_h .

CHECK: lf_alv_h-vkbur IN s_vkbur.

IF lf_alv_t-vbeln <> lf_alv_h-vbeln.
lf_alv_t = lf_alv_h.
*---MOD END DMC 2007/12/20---------------------------*

* 原価金額円の取得
CLEAR: l_kwmeng,
l_wavwr,
l_waerk,
l_wavwr_w.

SELECT SINGLE
a~wavwr
a~waerk
a~kwmeng
b~kursk
INTO (l_wavwr, l_waerk, l_kwmeng, l_kursk)
FROM ( vbap AS a INNER JOIN vbkd AS b
ON  a~vbeln  = b~vbeln )
*---MOD START DMC 2007/12/20 ---------------------------*
*       WHERE A~VBELN = LF_ALV_T-AUBEL.
WHERE a~vbeln = lf_alv_t-vbeln.
*---MOD END DMC 2007/12/20---------------------------*

PERFORM frm_kingaku_henkan USING  l_waerk
l_wavwr
CHANGING l_wavwr_w.

* 出荷数量、売上予定日の取得
CLEAR: lt_likp[].
SELECT c~vbeln
c~fkdat
d~lfimg
INTO CORRESPONDING FIELDS OF TABLE lt_likp
FROM ( ( ( vbfa AS a INNER JOIN vbup AS b
ON     a~vbeln  = b~vbeln ) INNER JOIN likp AS c
ON     b~vbeln  = c~vbeln ) INNER JOIN lips AS d
ON     c~vbeln  = d~vbeln )
*---MOD START DMC 2007/12/20 ---------------------------*
*     WHERE     A~VBELV = LF_ALV_T-AUBEL
WHERE     a~vbelv = lf_alv_t-vbeln
*---MOD END DMC 2007/12/20---------------------------*
AND     b~wbsta = 'A'.

SORT lt_likp BY fkdat.
LOOP AT lt_likp
INTO lf_likp.

l_lfimg = l_lfimg + lf_likp-lfimg.
lf_likp_t = lf_likp.

AT END OF fkdat.
CLEAR: lf_alv_w.
lf_alv_w-kunnra = lf_alv_t-kunnra.            " 得意先コード
lf_alv_w-kuntx  = lf_alv_t-kuntx.             " 得意先名
*---MOD START DMC 2007/12/20 ---------------------------*
*          LF_ALV_W-AUBEL  = LF_ALV_T-AUBEL.             " 受注番号
lf_alv_w-aubel  = lf_alv_t-vbeln.             " 受注番号
*---MOD END DMC 2007/12/20---------------------------*
lf_alv_w-denku  = text-021.                   " 伝区
lf_alv_w-bstnk  = lf_alv_t-bstnk.             " 得意先発注番号
lf_alv_w-matnr  = lf_alv_t-matnr.             " 品目コード
*---MOD START DMC 2007/12/20 ---------------------------*
*          LF_ALV_W-ARKTX  = LF_ALV_T-ARKTX.             " 品名
lf_alv_w-arktx  = lf_alv_t-maktx.             " 品名
*---MOD END DMC 2007/12/20---------------------------*
lf_alv_w-vrkme  = lf_alv_t-vrkme.             " 数量単位
lf_alv_w-vkbur  = lf_alv_t-vkbur.             " 営業所
lf_alv_w-bezeia = lf_alv_t-bezeia.            " 営業所名
lf_alv_w-vkgrp  = lf_alv_t-vkgrp.             " 営業グループ
lf_alv_w-bezeib = lf_alv_t-bezeib.            " 営業グループ名
lf_alv_w-datfm  = lf_alv_t-datfm.             " Ｆｒｏｍ
lf_alv_w-datto  = lf_alv_t-datto.             " Ｔｏ
lf_alv_w-fkdat2 = lf_likp_t-fkdat.            " 売上予定日
lf_alv_w-lfimg   = l_lfimg.                   " 出荷数量
lf_alv_w-kursk   = l_kursk.                   " 換算レート
l_wavwr_w = l_wavwr_w * l_lfimg * l_kursk / l_kwmeng.
lf_alv_w-gyenb   = l_wavwr_w.                 " 原価金額円
APPEND lf_alv_w TO gt_write.
CLEAR:l_lfimg.
ENDAT.
ENDLOOP.
ENDIF.

ENDLOOP.

ENDFORM.                    " FRM_LIKP_SET
*---APPEND END   D.YI 2007/11/13 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_VBUP_GET
*&---------------------------------------------------------------------*
*       出荷済未出庫対象データ取得処理
*----------------------------------------------------------------------*
FORM frm_vbup_get.

*2008/06/19 ADD START
DATA : l_vbelv TYPE vbfa-vbelv.
*2008/06/19 ADD END

SELECT a~vbeln a~posnr a~rfsta a~gbsta b~matnr
b~vrkme c~vkgrp c~vkbur c~bstnk
INTO CORRESPONDING FIELDS OF TABLE gt_vbup
FROM ( ( vbup AS a INNER JOIN vbap AS b
ON a~vbeln = b~vbeln
AND a~posnr = b~posnr ) INNER JOIN vbak AS c
ON b~vbeln = c~vbeln )
*2008/06/19 MOD START
WHERE
* Add 2010/11/10 Start
a~vbeln IN s_vbeln
AND
* Add 2010/11/10 End
a~lfsta <> g_lfsta.
*   WHERE A~LFSTA <> G_LFSTA
*     AND A~GBSTA <> G_GBSTA.
*2008/06/19 MOD END

*--- エラー処理
CASE sy-subrc.
WHEN 0.
*2008/06/19 ADD START
*     受注に紐付く出荷のステータスをチェックする
LOOP AT gt_vbup INTO gf_vbup.
SELECT vbfa~vbelv
INTO l_vbelv
FROM vbfa
INNER JOIN vbup
ON vbfa~vbeln    = vbup~vbeln
AND vbfa~posnn    = vbup~posnr
UP TO 1 ROWS
WHERE vbfa~vbelv    = gf_vbup-vbeln
AND vbfa~posnv    = gf_vbup-posnr
AND vbfa~vbtyp_n  = 'J'
AND vbup~wbsta   <> g_wbsta.
ENDSELECT.

CASE sy-subrc.
WHEN 0.
WHEN 4.      " 対象データなし
*           出荷伝票の在庫移動ステータスが全てCのデータは削除
DELETE gt_vbup.
WHEN OTHERS. " システムエラー
MESSAGE a603(z1) WITH g_repid
'VBUP'
sy-subrc.
ENDCASE.
ENDLOOP.
*     出荷のステータスチェック後の対象データが無い場合
IF gt_vbup IS INITIAL.
g_flg = 'X'.
ENDIF.
*2008/06/19 ADD END
WHEN 4.         " 対象データなし
g_flg = 'X'.
*      MESSAGE S600(Z1) WITH '出荷済未出庫伝票'.
*      STOP.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
'VBUP'
sy-subrc.
ENDCASE.
ENDFORM.                    " FRM_VBUP_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBUP_SET
*&---------------------------------------------------------------------*
*       出荷済未出庫対象データ編集処理
*----------------------------------------------------------------------*
FORM frm_vbup_set.

LOOP AT gt_vbup INTO gf_vbup.
*--- 支払人設定
PERFORM frm_vbpa_get1 USING   'RG'
'支払人'
gf_vbup-vbeln
CHANGING gf_vbup-kunnra
gf_vbup-kuntx.
*--- 品目テキスト設定
PERFORM frm_makt_get USING gf_vbup-matnr
CHANGING gf_vbup-maktx.
*--- 営業所名設定
PERFORM frm_tvkbt_get USING gf_vbup-vkbur
CHANGING gf_vbup-bezeia.
*--- 営業グループ名設定
PERFORM frm_tvgrt_get USING gf_vbup-vkgrp
CHANGING gf_vbup-bezeib.
*--- 選択処理年月日設定処理
gf_vbup-datfm = s_erdat-low.
gf_vbup-datto = s_erdat-high.

MODIFY gt_vbup FROM gf_vbup.
ENDLOOP.
ENDFORM.                    " FRM_VBUP_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_MAKT_GET
*&---------------------------------------------------------------------*
*       品目テキスト設定
*----------------------------------------------------------------------*
*      -->P_GF_VBUP_MATNR  品目コード
*      <--P_GF_VBUP_MAKTX  品目テキスト
*----------------------------------------------------------------------*
FORM frm_makt_get USING    p_matnr
CHANGING p_maktx.

SELECT SINGLE maktx INTO p_maktx
FROM makt
WHERE matnr = p_matnr AND spras = cns_j.

ENDFORM.                    " FRM_MAKT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_TVGRT_GET
*&---------------------------------------------------------------------*
*       営業グループ名設定
*----------------------------------------------------------------------*
*      -->P_VKGRP  営業グループ
*      <--P_BEZEIB  営業グループ名
*----------------------------------------------------------------------*
FORM frm_tvgrt_get USING    p_vkgrp
CHANGING p_bezeib.

SELECT SINGLE bezei INTO p_bezeib
FROM tvgrt
WHERE spras = cns_j AND vkgrp = p_vkgrp.

ENDFORM.                    " FRM_TVGRT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_TVKBT_GET
*&---------------------------------------------------------------------*
*       営業所名設定
*----------------------------------------------------------------------*
*      -->P_VKBUR   営業所
*      <--P_BEZEIA  営業所名
*----------------------------------------------------------------------*
FORM frm_tvkbt_get USING    p_vkbur
CHANGING p_bezeia.

SELECT SINGLE bezei INTO p_bezeia
FROM tvkbt
WHERE spras = cns_j AND vkbur = p_vkbur.

ENDFORM.                    " FRM_TVKBT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET1
*&---------------------------------------------------------------------*
*       販売伝票取引先取得処理1
*----------------------------------------------------------------------*
*      -->P_PAEVW  取引先機能
*      -->P_TEXT   エラー時出力用テーブル名
*      -->P_VBELN  販売伝票
*      <--P_KUNNRA 支払人
*      <--P_KUNTX  支払人名
*----------------------------------------------------------------------*
FORM frm_vbpa_get1 USING    p_paevw
p_text
p_vbeln
CHANGING p_kunnra
p_kuntx.
DATA: l_adrnr  LIKE  vbpa-adrnr.

*--- 販売伝票取引情報取得
SELECT SINGLE kunnr adrnr
INTO (p_kunnra,l_adrnr)
FROM vbpa
WHERE vbeln = p_vbeln
AND posnr = '000000'
AND parvw = p_paevw.

*--- エラー処理
CASE sy-subrc.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE s600(z1) WITH p_text.
WHEN OTHERS.    " システムエラー
MESSAGE a603(z1) WITH g_repid
cns_vbpa
sy-subrc.
ENDCASE.

*--- 支払人名設定
PERFORM frm_addr_get USING    l_adrnr
CHANGING p_kuntx.

ENDFORM.                    " FRM_VBPA_GET1
*modify 2009/11/25 C.ONUKI{
*&---------------------------------------------------------------------
*
*&      Form  FRM_GET_KONV
*&---------------------------------------------------------------------
*
*       条件レート・価格条件単位取得
*----------------------------------------------------------------------
*
*      -->I_KNUMV  伝票条件番号
*      -->I_POSNR  請求伝票明細
*      <--O_KBETR  条件レート
*      <--O_KPEIN  価格条件単位
*      <--O_WAERS  通貨コード
*----------------------------------------------------------------------
*
*FORM FRM_GET_KONV USING    I_KNUMV
*                           I_POSNR
*                  CHANGING O_KBETR
*                           O_KPEIN
*                           O_WAERS.
*
*  SELECT KBETR WAERS KPEIN
*    INTO (O_KBETR, O_WAERS, O_KPEIN)
*    FROM KONV
*         UP TO 1 ROWS
*   WHERE KNUMV = I_KNUMV
*     AND KPOSN = I_POSNR
*     AND KSCHL = 'ZPR0'.
*  ENDSELECT.
*
*ENDFORM.                    " FRM_GET_KONV
*&---------------------------------------------------------------------
*
*&      Form  FRM_GET_KONV
*&---------------------------------------------------------------------
*
*       条件レート・価格条件単位取得
*----------------------------------------------------------------------
*
*      -->I_KNUMV  伝票条件番号
*      -->I_POSNR  請求伝票明細
*      <--O_KBETR  条件レート
*      <--O_KPEIN  価格条件単位
*      <--O_WAERS  通貨コード
*----------------------------------------------------------------------
*
FORM frm_get_konv USING    i_knumv
i_posnr
CHANGING o_kbetr
o_kpein
o_waers.
*構造の宣言：条件カウンタZAEHKも取得する
DATA:BEGIN OF lo_wa_temp,
zaehk LIKE konv-zaehk,
*ステップ番号STUNRも取得する
stunr LIKE konv-stunr,
kbetr LIKE konv-kbetr,
waers LIKE konv-waers,
kpein LIKE konv-kpein,
END OF lo_wa_temp.
*一時テーブルの宣言：条件カウンタZAEHKが異なる全てのレコードを格納する
DATA lo_ta_temp LIKE STANDARD TABLE OF lo_wa_temp.

*条件カウンタZAEHKも取得

*ステップ番号STUNRも取得
SELECT zaehk stunr kbetr waers kpein
*SELECT ZAEHK KBETR WAERS KPEIN
INTO TABLE lo_ta_temp
*  SELECT KBETR WAERS KPEIN
*    INTO (O_KBETR, O_WAERS, O_KPEIN)
FROM konv
*         UP TO 1 ROWS
WHERE knumv = i_knumv
AND kposn = i_posnr
AND ( kschl = 'ZPR0'
OR kschl = 'ZPR1'
OR kschl = 'ZPR2' ).
*     AND KSCHL = 'ZPR0'.

CLEAR lo_wa_temp.
*一時テーブルを条件カウンタZAEHK降順、ステップ番号STUNR降順でソート
*SORT LO_TA_TEMP BY ZAEHK DESCENDING STUNR DESCENDING.
SORT lo_ta_temp BY stunr DESCENDING zaehk DESCENDING.

*ソートされた一時テーブルの先頭行を読込
READ TABLE lo_ta_temp INTO lo_wa_temp INDEX 1.

*読込んだ行のコンポーネントKBETR, KPEIN, WAERSをCHANGING変数にセット
o_kbetr = lo_wa_temp-kbetr.
o_kpein = lo_wa_temp-kpein.
o_waers = lo_wa_temp-waers.
ENDFORM.                    " FRM_GET_KONV
*}modify 2009/11/25 C.ONUKI
