*&---------------------------------------------------------------------*
*& Report  ZZ_TEST_GSL_VARI
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ZZ_TEST_GSL_VARI.

*ALV作成用
TYPE-POOLS:
SLIS.

TYPES :BEGIN OF GTS_VARI,
REPORT     TYPE VARID-REPORT,      "PG-ID
VARIANT    TYPE VARID-VARIANT,     "バリアント名
TRANSPORT  TYPE VARID-TRANSPORT ,  "システムバリアント　自動転送フラグ
ENVIRONMNT TYPE VARID-ENVIRONMNT , "バックグラウンド処理フラグ
PROTECTED  TYPE VARID-PROTECTED,   "バリアント保護フラグ
ENAME      TYPE VARID-ENAME ,      "ユーザ名
AENAME     TYPE VARID-AENAME ,     "最終変更者名
END OF GTS_VARI.

TYPES :BEGIN OF GTS_OUT ,
REPORT    TYPE VARID-REPORT ,   "PGID
VARIANT   TYPE VARID-VARIANT ,  "バリアント
BACK      TYPE C ,              "バックグラウンド処理専用
HOGO      TYPE C ,              "バリアント保護
KATAROG   TYPE C ,              "カタログでの照会のみ
ENAME     TYPE VARID-ENAME,     "登録者
AENAME    TYPE VARID-AENAME,    "変更者
TABLENAME TYPE RSDYNBREPI-TABLENAME ,
NAME      TYPE VANZ-TEXT,       "項目名
TEXT      TYPE VANZ-TEXT,       "項目名称
KIND      TYPE VANZ-KIND ,      "型
PROTECTED TYPE VANZ-PROTECTED , "保護項目
INVISIBLE TYPE VANZ-INVISIBLE,  "非表示項目
NOINT     TYPE VANZ-NOINT ,     "非表示項目'BIS'
NO_IMPORT TYPE VANZ-NO_IMPORT,  "項目を値なしで保存
OBLI      TYPE VANZ-OBLI,       "必須項目
VTYPE     TYPE VANZ-VTYPE,      "必須変数
VNAME     TYPE VANZ-VNAME ,     "変数名
SIGN      TYPE RSPARAMS-SIGN,   "I/E
OPTION    TYPE RSPARAMS-OPTION, "OPTION
LOW       TYPE RSPARAMS-LOW,    "開始
HIGH      TYPE RSPARAMS-HIGH ,  "終了
END OF GTS_OUT .

DATA: GDT_VARI       TYPE STANDARD TABLE OF GTS_VARI ,
GDS_VARI       LIKE LINE OF GDT_VARI ,
GDT_SSCR       TYPE STANDARD TABLE OF RSSCR,
GDS_SSCR       LIKE LINE OF GDT_SSCR,
GDT_RSPARAMS   TYPE STANDARD TABLE OF RSPARAMS,
GDS_RSPARAMS   LIKE LINE OF GDT_RSPARAMS,
GDT_VANZ       TYPE STANDARD TABLE OF VANZ,
GDS_VANZ       LIKE LINE OF GDT_VANZ ,
GDT_RSDYNBREPI TYPE STANDARD TABLE OF RSDYNBREPI ,
GDS_RSDYNBREPI LIKE LINE OF GDT_RSDYNBREPI,
GDT_RSSELDYN   TYPE STANDARD TABLE OF RSSELDYN,
GDS_RSSELDYN   LIKE LINE OF GDT_RSSELDYN,
GDT_OUT        TYPE STANDARD TABLE OF GTS_OUT,
GDT_OUT2       TYPE STANDARD TABLE OF GTS_OUT,
GDS_OUT        LIKE LINE OF GDT_OUT,
GDS_OUT2       LIKE LINE OF GDT_OUT2.

DATA:VARlD        TYPE VARID.
DATA:GDS_VARIANT  TYPE DISVARIANT,
GDS_LAYOUT   TYPE SLIS_LAYOUT_ALV.
DATA:GDT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV ."フィールドカタログ

CONSTANTS GDF_X(1)     TYPE C VALUE 'X' .
CONSTANTS GDF_A(1)     TYPE C VALUE 'A' .
CONSTANTS GDF_MSG2(22) TYPE C VALUE 'REUSE_ALV_GRID_DISPLAY' .
CONSTANTS GDF_ERR(1)   TYPE C VALUE 'E' .

***選択画面
SELECTION-SCREEN BEGIN OF LINE.
*全項目出力
PARAMETERS:P_ALL TYPE C RADIOBUTTON GROUP G1 USER-COMMAND CHOS
DEFAULT 'X'.
SELECTION-SCREEN:COMMENT 3(6) FOR FIELD P_ALL .
*PG単位で出力
PARAMETERS:P_PG TYPE C RADIOBUTTON GROUP G1.
SELECTION-SCREEN:COMMENT 12(6) FOR FIELD P_PG.
*バリアントID単位で出力
PARAMETERS:P_VARI TYPE C RADIOBUTTON GROUP G1.
SELECTION-SCREEN:COMMENT 28(10) FOR FIELD P_VARI .

SELECTION-SCREEN END OF LINE.
SELECT-OPTIONS: S_PGID FOR VARI-REPORT.
SELECT-OPTIONS: S_VARI FOR VARI-VARIANT.

START-OF-SELECTION.
PERFORM MAIN.
PERFORM OUTPUT_ALV .
*&---------------------------------------------------------
*&   FORM MAIN
*&---------------------------------------------------------
*     主処理
*----------------------------------------------------------
FORM MAIN .

SELECT REPORT
VARIANT     "バリアント名
TRANSPORT   "システムバリアントー自動転送フラグ
ENVIRONMNT  "バックグラウンド処理フラグ
PROTECTED   "バリアント保護フラグ
ENAME       "ユーザ名
AENAME      "最終更新者
FROM  VARID   INTO TABLE GDT_VARI
WHERE REPORT  IN S_PGID       "PGID(選択パラメータ)
AND VARIANT IN S_VARI .     "バリアント名(選択パラメータ)

IF SY-SUBRC <> 0 .
* メッセージ：処理対象のデータが存在しません
MESSAGE I003(Z1) WITH '処理対象のデータが存在しません' DISPLAY LIKE GDF_ERR.
LEAVE LIST-PROCESSING.
ELSE.
SORT GDT_VARI BY REPORT VARIANT .
ENDIF.

*処理対象データが存在する場合
LOOP AT GDT_VARI INTO GDS_VARI .
AT NEW REPORT.
*選択画面の項目順に選択パラメータを読込む
*注)選択パラメータがlnoludeから出力されている場合、
* 順番通リに読込まれないことがある。
LOAD REPORT GDS_VARI-REPORT PART 'SSCR' INTO GDT_SSCR .
*不要なレコードを削除
DELETE GDT_SSCR WHERE TYPE = ''
OR NUMB = 0 .
ENDAT.
*バリアント設定内容取得
CALL FUNCTION 'RS_VARIANT_CONTENTS'
EXPORTING
REPORT           = GDS_VARI-REPORT
VARIANT          = GDS_VARI-VARIANT  "
TABLES
*           選択画面のパリアント値を格納
VALUTAB            = GDT_RSPARAMS
OBJECTS            = GDT_VANZ
*          動的選択値を格納
FREE_SELECTIONS_DESC   = GDT_RSDYNBREPI
FREE_SELECTIONS_VALUE  = GDT_RSSELDYN
EXCEPTIONS
VARLANT_NON_EXISTENT   = 1
VARLANT_OBSOLETE       = 2
OTHERS     = 3
.
IF SY-SUBRC <> 0 .
*MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*    WITH SY-MSCV SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
*出力用内部テーブル構造をCLEAR
CLEAR:GDS_OUT .

* ヘッダ項目を取得
LOOP AT GDT_SSCR INTO GDS_SSCR .
PERFORM SET_HEAD .
READ TABLE GDT_VANZ INTO GDS_VANZ WITH KEY NAME = GDS_SSCR-NAME.
IF SY-SUBRC = 0.
PERFORM SET_VANZ.

* 取得できない、場合
ELSE.
GDS_OUT-NAME = GDS_SSCR-NAME.
GDS_OUT-TEXT = '項目が取得できません'.
ENDIF.
* 出力用パラメータ取得処理(選択バラメータVer)

*  ※(selec←optionsで登録された項目を出力するためLOOP処理となる)
LOOP AT GDT_RSPARAMS INTO GDS_RSPARAMS
WHERE SELNAME = GDS_SSCR-NAME . "SELECT-OPTION/PARAMETER名
*  出力内部テーブル用ヘッダデータを取得
PERFORM SET_HEAD.
*  出力内部テープ1レ用明細データを取得
PERFORM SET_VANZ.

GDS_OUT-SIGN   = GDS_RSPARAMS-SIGN .
GDS_OUT-OPTION = GDS_RSPARAMS-OPTION ."
GDS_OUT-LOW    = GDS_RSPARAMS-LOW.
GDS_OUT-HIGH   = GDS_RSPARAMS-HIGH.
APPEND GDS_OUT TO GDT_OUT.
CLEAR : GDS_OUT .
ENDLOOP.

IF SY-SUBRC <> 0 .
APPEND GDS_OUT TO GDT_OUT.
CLEAR:GDS_OUT.
ENDIF.
ENDLOOP.

* 出力用バラメータ取得処壊(勤的選択項目Ver)
LOOP AT GDT_RSDYNBREPI INTO GDS_RSDYNBREPI.
PERFORM SET_HEAD.
PERFORM SET_RSDYNBREPI .
LOOP AT GDT_RSSELDYN INTO GDS_RSSELDYN
WHERE TABLENAME = GDS_RSDYNBREPI-TABLENAME "テーブル名
AND FIELDNAME = GDS_RSDYNBREPI-FIELDNAME."項目名
PERFORM SET_HEAD.
PERFORM SET_RSDYNBREPI.

GDS_OUT-SIGN   = GDS_RSSELDYN-SIGN.
GDS_OUT-OPTiON = GDS_RSSELDYN-OPTION.
GDS_OUT-LOW    = GDS_RSSELDYN-LOW.
GDS_OUT-HIGH   = GDS_RSSELDYN-HIGH.
APPEND GDS_OUT TO GDT_OUT.
CLEAR:GDS_OUT.
ENDLOOP.
IF SY-SUBRC <> 0.
APPEND GDS_OUT TO GDT_OUT.
CLEAR GDS_OUT.
ENDIF.
ENDLOOP.
ENDLOOP.
*全項目出力
IF P_ALL = 'X' .
LOOP AT GDT_OUT INTO GDS_OUT.
APPEND GDS_OUT TO GDT_OUT2.
ENDLOOP.
ENDIF.
*PG単位で出力
IF P_PG = 'X' .
LOOP AT GDT_OUT INTO GDS_OUT2.
GDS_OUT = GDS_OUT2.

AT NEW REPORT.
APPEND GDS_OUT TO GDT_OUT2.
ENDAT.
ENDLOOP.
ENDIF.
*バリアント単位で出力
IF P_VARI = 'X' .
LOOP AT GDT_OUT INTO GDS_OUT2.
GDS_OUT = GDS_OUT2.
AT NEW VARIANT.
APPEND GDS_OUT TO GDT_OUT2.
ENDAT.
ENDLOOP.
ENDIF.
ENDFORM.   "MAIN
*&------------------------------------------------------
*&   Form DISPLAY
*&------------------------------------------------------
*   AVL出力
*------------------------------------------------------
FORM OUTPUT_ALV.
*出力用レイアウト構造設定
GDS_LAYOUT-DETAIL_POPUP  = GDF_X  ."'X'.
GDS_LAYOUT-COLWIDTH_OPTIMIZE = GDF_X ."'X'.
*バリアント格納溝造を作成
GDS_VARIANT-REPORT = SY-REPID.
*出力構造作成
PERFORM U_FIELDCAT USING GDT_FIELDCAT:
'REPORT' 40 'CHAR'
'PGID' 'PGID' 'PCID' '' '' '' '' ,
'VARIANT' 14 'CHAR'
'バリアント' 'バリアント' 'バリアント' '' '' '' '' ,
'BACK' 1 'CHAR'
'バックグラウンド' 'バックグラウンド処理専用' ' バックグラウンド処理専用' '' '' '' '' ,
'HOGO' 1 'CHAR'
'パリアント保護' 'パリアント保護' 'バリアント保護' '' '' '' '',
'KATAROG' 1 'CHAR'
'カタログでの照会のみ' 'カタログでの照会のみ' 'カタログでの照会のみ' '' '' '' '' ,
'ENAME' 12'CHAR'
'ユーザ名' 'ユーザ名' 'ユーザ名(登録者)' '' '' '' '' ,
'AENAME' 12'CHAR'
'更新者名' '最終更新者名' ' 最終更新者名' '' '' '' '',
'TABLENAME' 30 'CHAR'
'テーブル名' 'テーブル名' 'テーブル名' '' '' '' '' ,
'NAME'  30'CHAR'
'項目名' '項目名' '項目名' '' '' '' '' ,
'TEXT'   30'CHAR'
'項目名称' '項目名称' '項目名称' '' '' '' '',
'KIND'  1 'CHAR'
'型' '型' '型' '' '' '' '' ,
'PROTECTED' 1 'CHAR'
'保護項目' '保護項目' '保誰項目' '' '' '' '' ,
'INVISIBLE' 1 'CHAR'
'非表示項目' '非表示項目' '非表示項目' '' '' '' '',
'NOINT'  1'CHAR'
'非表示項目BIS' '非表示項目BIS' '非表示項目BIS' '' '' '' '' ,
'NO_IMPORT' 1  'CHAR'
'項目を値なしで保存' '項目を値なしで保存' '項目を値なしで保存' '' '' '' '' ,
'OBLI'  1'CHAR'
'必須項目' '必須項目' '必須項目' '' '' '' '' ,
'VTYPE'  1 'CHAR'
'選択変数' '選択変数' '選択変数' '' '' '' '' ,
'VNAME'  30'CHAR'
'変数名' '変数名' '変数名' '' '' '' '' ,
'SIGN'  1'CHAR'
'I/E' 'I/E' 'I/E' '' '' '' '' ,
'OPTION' 2'CHAR'
'OPTION' 'OPTION' 'OPTION' '' '' '' '' ,
'LOW'   45'CHAR'
'開始' '開始' '開始' '' '' '' '' ,
'HIGH'  45'CHAR'
'終了' '終了' '終了' '' '' '' '' .

*ALV出力処理
CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
I_BUFFER_ACTIVE       = GDF_X          "'X'.
I_CALLBACK_PROGRAM    = SY-REPID         "レポートID.
*  I_CALLBACK_TOP_OF_PAGE     = GCF-TOP-OF-PAGE     "TOP-OF-PAGE呼び出し
IS_LAYOUT             = GDS_LAYOUT       "レイアウト設定
IT_FIELDCAT           = GDT_FIELDCAT
I_SAVE                = GDF_A        "'A'レイアウト保存
IS_VARIANT            = GDS_VARIANT      "パリアント設定
*  lT EVENTS          = GDT-EVENT[]       "イベント設定
TABLES
T_OUTTAB              = GDT_OUT2
EXCEPTIONS
PROGRAM_ERROR         = 1
OTHERS                = 2.
IF SY-SUBRC <> 0.
*メッセージ:汎用モジュールがエラーリターンしました
MESSAGE I003(Z1) WITH '汎用モジュールがエラーリターンしました' GDF_MSG2 SY-SUBRC.
LEAVE LIST-PROCESSING.
ENDIF.
ENDFORM.  "DISPLAY
*&-----------------------------------------------------
*&  Form U_FIELDCAT
*&-----------------------------------------------------
*<-- P_FIELDCAT 項目テキストのある項目カタログ
*--> P_FLDNM 項目名
*--> P_LEN  表示幅
*-->  P_TYPE DIC上の属性
*-->  P_STEXT テキスト（短
*--> 　P_MTEXT　テキスト（中
*--> 　P_LTEXT　テキスト（長
*--> 　P_CFIELD　通貨コード
*--> 　P_QFIELD　単位コード
*--> 　P_TECH　表示の制御
*--> 　P_NO_ZERO　前ゼロ削除処理
*------------------------------------------------------
FORM U_FIELDCAT USING P_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV
P_FLDNM    TYPE SLIS_FIELDCAT_ALV-FIELDNAME
P_LEN      TYPE SLIS_FIELDCAT_ALV-OUTPUTLEN
P_TYPE     TYPE SLIS_FIELDCAT_ALV-DATATYPE
P_STEXT    TYPE SLIS_FIELDCAT_ALV-SELTEXT_S
P_MTEXT    TYPE SLIS_FIELDCAT_ALV-SELTEXT_M
P_LTEXT    TYPE SLIS_FIELDCAT_ALV-SELTEXT_L
P_CFIELD   TYPE SLIS_FIELDCAT_ALV-CFIELDNAME
P_QFIELD   TYPE SLIS_FIELDCAT_ALV-QFIELDNAME
P_TECH     TYPE SLIS_FIELDCAT_ALV-TECH
P_NO_ZERO  TYPE SLIS_FIELDCAT_ALV-NO_ZERO.
*ローカル変数
DATA LDS_FIELDCAT TYPE SLIS_FIELDCAT_ALV.  "フィールドカタログ格紡用ワーク
LDS_FIELDCAT-FIELDNAME  = P_FLDNM .   "項目名
LDS_FIELDCAT-OUTPUTLEN  = P_LEN.      "表示幅
LDS_FIELDCAT-DATATYPE   = P_TYPE.     "DIC上の属性
LDS_FIELDCAT-SELTEXT_S  = P_STEXT.    "テキスト(腹
LDS_FIELDCAT-SELTEXT_M  = P_MTEXT.    "テキスト(中
LDS_FIELDCAT-SELTEXT_L  = P_LTEXT.    "テキスト(長
LDS_FIELDCAT-CFIELDNAME = P_CFIELD.   "通貰コード
LDS_FIELDCAT-QFIELDNAME = P_QFIELD.   "単位コード
LDS_FIELDCAT-TECH       = P_TECH.     "表示の制御
LDS_FIELDCAT-NO_ZERO    = P_NO_ZERO.  "前ゼロ肖ll除処瑛
APPEND LDS_FIELDCAT TO P_FIELDCAT.
ENDFORM."U_FIELDCAT

*&-----------------------------------------------------
*&  Form SET_HEAD
*&-----------------------------------------------------
*   ヘッダデータ格納
*------------------------------------------------------
FORM SET_HEAD .
GDS_OUT-REPORT  = GDS_VARI-REPORT.    "プログラム名
GDS_OUT-VARIANT = GDS_VARI-VARIANT.   "バリアント名
*バックグラウンド処理フラグが、'B'の場合、バックグラウンド処理専用フラグを立てる
IF GDS_VARI-ENVIRONMNT = 'B' .
GDS_OUT-BACK = 'X' .
ENDIF.

GDS_OUT-HOGO = GDS_VARI-PROTECTED."バリアント保誰フラグ
*システムバリアントー自動転送フラグが下記の場含、フラグを立てる
* 'N':'カタログでのみ照会'に〆
* 'X':'カタログでのみ照会"システムパリアント(自動移送)'に〆
IF GDS_VARI-TRANSPORT = 'N' OR GDS_VARI-TRANSPORT = 'X' .
GDS_OUT-KATAROG    = 'X'.
ENDIF.
GDS_OUT-ENAME = GDS_VARI-ENAME ."ユーザ名
GDS_OUT-AENAME = GDS_VARI-AENAME."ユーザ(最終更新者)
ENDFORM. "SETHEAD
*&-----------------------------------------------------
*&  Form SET_VANZ
*&-----------------------------------------------------
*   TEXT
*------------------------------------------------------
FORM SET_VANZ .
GDS_OUT-NAME      = GDS_VANZ-NAME.       "SELECT一OPTION / PARAMETER名
GDS_OUT-TEXT      = GDS_VANZ-TEXT.       "SYSTのデータエレメントCHAR30
GDS_OUT-KIND      = GDS_VANZ-KIND.       "選択タイプ
GDS_OUT-PROTECTED = GDS_VANZ-PROTECTED.  "フラグ:選択保議
GDS_OUT-INVISIBLE = GDS_VANZ-INVISIBLE.  "SYSTのデータエレメントCHAROl
GDS_OUT-NOINT     = GDS_VANZ-NOINT.      "間隔なし
GDS_OUT-NO_IMPORT = GDS_VANZ-NO_IMPORT.  "SYSTのデータエレメントCHAROl
GDS_OUT-VTYPE     = GDS_VANZ-VTYPE.      "パリアント変数タイプ

*バリアント変数タイプがブランク以外の場合、変数名にパリアント変数名を格納する
IF GDS_VANZ-VTYPE <> '' .
GDS_OUT-VNAME = GDS_VANZ-VNAME .
ENDIF.

GDS_OUT-OBLI = GDS_VANZ-OBLI."必須入力項目

*選択フラグ(多目的)が"O"(オー)の場合、フラグを立てる
IF GDS_VANZ-APPENDAGE = 'O' .
GDS_OUT-OBLI = 'X' .
ENDIF.
ENDFORM.
*&-----------------------------------------------------
*&  Form SET_RSDYNBREPI
*&-----------------------------------------------------
*   TEXT
*------------------------------------------------------
FORM SET_RSDYNBREPI .
GDS_OUT-TABLENAME = GDS_RSDYNBREPI-TABLENAME.  "テーブル名
GDS_OUT-NAME      = GDS_RSDYNBREPI-FIELDNAME.  "項目名
GDS_OUT-TEXT      = GDS_RSDYNBREPI-SEL_TEXT.   "テキスト(30文字)
ENDFORM. "SET RSDYNBREP{
