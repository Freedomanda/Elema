************************************************************************
* [プログラム名]
*   ZYTD5170   購買情報テキスト一括更新
*
* [処理概要]
*   購買情報テキスト一括更新を行う。
*
* [改定履歴]
*　YYYY/MM/DD  Programar         Description
*  2012/08/13  ISID              ES-UP
*  2014/09/01  ISID19            コードページを"UTF-8"に修正
*  2014/09/11  ISID19            グローバル化対応
*& 2015/01/13  ISID11            アップロード時のBOMロジック改修
*  2015/02/04  ISID18            コードページ修正
************************************************************************
REPORT ZYTD5170 MESSAGE-ID Z1 .

*----------------------------------------------------------------------*
* 型定義
*----------------------------------------------------------------------*
TYPES : BEGIN OF TYP_FILE ,
LIFNR(10) TYPE C ,          "仕入先コード
MATNR(18) TYPE C ,          "品目コード
WERKS(04) TYPE C ,          "プラント
LTXT1(40) TYPE C ,          "購買情報注記
LTXT2(40) TYPE C ,          "購買発注テキスト
END OF TYP_FILE ,
BEGIN OF TYP_DATA  ,
INFNR LIKE EINA-INFNR ,     "購買情報番号
LIFNR LIKE EINA-LIFNR ,     "仕入先コード
MATNR LIKE EINA-MATNR ,     "品目コード
EKORG LIKE EINE-EKORG ,     "購買組織
ESOKZ LIKE EINE-ESOKZ ,     "購買情報区分
WERKS LIKE EINE-WERKS ,     "プラント
LTXT1 LIKE RM06I-LTEX1 ,    "購買情報注記
LTXT2 LIKE RM06I-LTEX1 ,    "購買発注テキスト
END OF TYP_DATA  .

*----------------------------------------------------------------------*
* 変数宣言
*----------------------------------------------------------------------*
DATA : D_TAB TYPE TABLE OF TYP_DATA ,
D_WRK TYPE TYP_DATA ,
F_TAB TYPE TABLE OF TYP_FILE ,
F_WRK TYPE TYP_FILE ,
T_TAB TYPE TABLE OF TLINE ,
T_WRK TYPE TLINE.

DATA : W_CNT        TYPE I,              "テーブル行数カウンタ
W_NAME       LIKE THEAD-TDNAME.   "テキスト名称

*----------------------------------------------------------------------*
* 選択画面
*----------------------------------------------------------------------*

**** START ADD 2014/09/11 ISID19 ****
PARAMETERS : P_BUKRS  TYPE T001-BUKRS OBLIGATORY.
**** END ADD 2014/09/11 ISID19 ****

PARAMETERS : P_FILE LIKE RLGRAP-FILENAME.
* Add 2006.03.16 --->
PARAMETERS : P_LOCAL RADIOBUTTON GROUP R_1 , "ローカル
P_SERVE RADIOBUTTON GROUP R_1 . "サーバー
* Add 2006.03.16 <---
* Add ES-UP 2012/08/13 -->
*----------------------------------------------------------------------*
* 固定値定義
*----------------------------------------------------------------------*
****START UPD 2014/09/01 ISID19****
*CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
CONSTANTS CNS_UTF TYPE STRING VALUE `UTF-8`.
****END UPD 2014/09/01 ISID19****

* Add ES-UP 2012/08/13 <--

**** START ADD 2014/09/10 ISID19 ****
************************************************************************
* INITIALIZATION
************************************************************************
INITIALIZATION .
GET PARAMETER ID 'BUK' FIELD P_BUKRS.
**** END ADD 2014/09/10 ISID19 ****

*----------------------------------------------------------------------*
* AT SELECTION-SCREEN .
*----------------------------------------------------------------------*
AT SELECTION-SCREEN .

**** START ADD 2014/09/10 ISID19 ****
PERFORM CHK_PRC.
**** END ADD 2014/09/10 ISID19 ****

*----------------------------------------------------------------------*
* AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
PERFORM WS_FILENAME_GET USING P_FILE.

*----------------------------------------------------------------------*
* START-OF-SELECTION .
*----------------------------------------------------------------------*
START-OF-SELECTION .

PERFORM READ_FILE .
PERFORM DATA_GET .
LOOP AT F_TAB INTO F_WRK .
PERFORM SET_TEXT.
ENDLOOP .

*----------------------------------------------------------------------*
* ファイルパス取得
*----------------------------------------------------------------------*
FORM WS_FILENAME_GET USING P_FILE.
* Mod ES-UP 2012/08/13 -->
*  CALL FUNCTION 'WS_FILENAME_GET'
*    EXPORTING
*       DEF_PATH         = 'C:\SAPDATA'
*       MASK             = '*.*,ALL FILES,*.*.'
*       MODE             = 'O'
*    IMPORTING
*       FILENAME         = P_FILE
*    EXCEPTIONS
*       INV_WINSYS       = 1
*       NO_BATCH         = 2
*       SELECTION_CANCEL = 3
*       SELECTION_ERROR  = 4
*       OTHERS           = 5.
DATA: L_INITIAL_DIRECTORY TYPE STRING,
L_FILE_TABLE TYPE FILETABLE,
L_FILE       TYPE REF TO FILE_TABLE,
L_RC         TYPE I.
L_INITIAL_DIRECTORY = `C:\SAPDATA`.
CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG(
EXPORTING
*      WINDOW_TITLE            = WINDOW_TITLE
*      DEFAULT_EXTENSION       = DEFAULT_EXTENSION
*      DEFAULT_FILENAME        = DEFAULT_FILENAME
*      FILE_FILTER             = FILE_FILTER
*      WITH_ENCODING           = WITH_ENCODING
INITIAL_DIRECTORY       = L_INITIAL_DIRECTORY
*      MULTISELECTION          = MULTISELECTION
CHANGING
FILE_TABLE              = L_FILE_TABLE
RC                      = L_RC
*      USER_ACTION             = USER_ACTION
*      FILE_ENCODING           = FILE_ENCODING
EXCEPTIONS
*      FILE_OPEN_DIALOG_FAILED = 1
*      CNTL_ERROR              = 2
*      ERROR_NO_GUI            = 3
*      NOT_SUPPORTED_BY_GUI    = 4
OTHERS                  = 0 ).
READ TABLE L_FILE_TABLE REFERENCE INTO L_FILE INDEX 1.
IF SY-SUBRC = 0.
P_FILE = L_FILE->FILENAME.
ENDIF.
* Mod ES-UP 2012/08/13 <--
ENDFORM.                    "WS_FILENAME_GET
*----------------------------------------------------------------------*
* ファイル読み込み
*----------------------------------------------------------------------*
FORM READ_FILE .
* Add 2006.03.16 --->
* Mod ES-UP 2012/10/24 -->
*Data : L_LINE(1000) Type C .
DATA L_LINE TYPE STRING.
* Mod ES-UP 2012/10/24 <--
* Mod ES-UP 2012/08/13 -->
*Data : W_TAB Type X Value '09' .
DATA: L_CODEPAGE TYPE ABAP_ENCODING,
L_FILE TYPE STRING.
L_FILE = P_FILE.

**** START ADD 2015/02/03 ISID18 ****
DATA:
L_Z_OUTPUT_CP TYPE ZTEGZZM001-Z_OUTPUT_CP,
L_SAPCODEPAGE TYPE STRING,
L_FLGUTF8     TYPE FLAG.
CALL FUNCTION 'ZEG_ZZ_GLOBAL_PGM_CONFIG_GET'
EXPORTING
IMPPGM      = SY-REPID
IMPBUKRS    = P_BUKRS
IMPORTING
EXPCODEPAGE = L_Z_OUTPUT_CP
EXPFLGUTF8  = L_FLGUTF8.
L_SAPCODEPAGE = L_Z_OUTPUT_CP.
**** END ADD 2015/02/03 ISID18 ****

****START UPD 2014/09/01 ISID19****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
****START UPD 2015/02/04 ISID18 ****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_UTF ).
IF L_SAPCODEPAGE IS NOT INITIAL.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( L_SAPCODEPAGE ).
ENDIF.
**** END UPD 2015/02/04 ISID18 ****
****END UPD 2014/09/01 ISID19****

* Mod ES-UP 2012/08/13 <--
IF P_LOCAL EQ 'X' .
* Add 2006.03.16 <---
* Mod ES-UP 2012/08/13 -->
*  CALL FUNCTION 'WS_UPLOAD'
*       EXPORTING
*            FILENAME                = P_FILE
*            FILETYPE                = 'DAT'
*       TABLES
*            DATA_TAB                = F_TAB
*       EXCEPTIONS
*            CONVERSION_ERROR        = 1
*            FILE_OPEN_ERROR         = 2
*            FILE_READ_ERROR         = 3
*            INVALID_TYPE            = 4
*            NO_BATCH                = 5
*            UNKNOWN_ERROR           = 6
*            INVALID_TABLE_WIDTH     = 7
*            GUI_REFUSE_FILETRANSFER = 8
*            CUSTOMER_ERROR          = 9
*            OTHERS                  = 10.
CL_GUI_FRONTEND_SERVICES=>GUI_UPLOAD(
EXPORTING
FILENAME                = L_FILE
FILETYPE                = 'DAT'
HAS_FIELD_SEPARATOR     = ABAP_TRUE
*      HEADER_LENGTH           = 0
*      READ_BY_LINE            = 'X'
*      DAT_MODE                = SPACE
CODEPAGE                = L_CODEPAGE
*      IGNORE_CERR             = ABAP_TRUE
*      REPLACEMENT             = '#'
*      VIRUS_SCAN_PROFILE      = VIRUS_SCAN_PROFILE
*    IMPORTING
*      FILELENGTH              = FILELENGTH
*      HEADER                  = HEADER
CHANGING
DATA_TAB                = F_TAB
EXCEPTIONS
FILE_OPEN_ERROR         = 1
FILE_READ_ERROR         = 2
NO_BATCH                = 3
GUI_REFUSE_FILETRANSFER = 4
INVALID_TYPE            = 5
NO_AUTHORITY            = 6
UNKNOWN_ERROR           = 7
BAD_DATA_FORMAT         = 8
HEADER_NOT_ALLOWED      = 9
SEPARATOR_NOT_ALLOWED   = 10
HEADER_TOO_LONG         = 11
UNKNOWN_DP_ERROR        = 12
ACCESS_DENIED           = 13
DP_OUT_OF_MEMORY        = 14
DISK_FULL               = 15
DP_TIMEOUT              = 16
NOT_SUPPORTED_BY_GUI    = 17
ERROR_NO_GUI            = 18
OTHERS                  = 19 ).
* Mod ES-UP 2012/08/13 <--
* 汎用モジュール失敗時エラーメッセージ出力
IF SY-SUBRC NE 0.
MESSAGE I616 .
STOP .
ELSE.
ENDIF.
* Add 2006.03.16 --->
ELSE .
* Mod ES-UP 2012/08/13 -->
*    Open Dataset P_FILE For Input IN TEXT MODE .

**** START UPD 2014/09/01 ISID19 ****
*    OPEN DATASET P_FILE FOR INPUT
*      IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
*      IGNORING CONVERSION ERRORS.
**** START ADD 2015/02/04 ISID18 ****
IF L_FLGUTF8 IS INITIAL.
TRY.
OPEN DATASET P_FILE FOR INPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
CATCH CX_SY_CODEPAGE_CONVERTER_INIT.
SY-SUBRC = 8.
ENDTRY.
ELSE.
**** END ADD 2015/02/04 ISID18 ****
OPEN DATASET P_FILE FOR INPUT IN TEXT MODE ENCODING UTF-8
**** START ADD 2015/01/13 ISID11 ****
SKIPPING BYTE-ORDER MARK
**** END ADD 2015/01/13 ISID11 ****
IGNORING CONVERSION ERRORS.
**** END UPD 2014/09/01 ISID19 ****
**** START ADD 2015/02/04 ISID18 ****
ENDIF.
**** END ADD 2015/02/04 ISID18 ****

* Mod ES-UP 2012/08/13 <--
IF SY-SUBRC NE 0 .
MESSAGE I616 .
STOP .
ELSE .
DO .
READ DATASET P_FILE INTO L_LINE .
IF SY-SUBRC NE 0 .
EXIT .
ENDIF .
* Mod ES-UP 2012/08/13 -->
*         Split L_LINE At W_TAB
SPLIT L_LINE AT CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
* Mod ES-UP 2012/08/13 <--
INTO F_WRK-LIFNR
F_WRK-MATNR
F_WRK-WERKS
F_WRK-LTXT1
F_WRK-LTXT2
.
APPEND F_WRK TO F_TAB .
CLEAR : F_WRK .
ENDDO .
CLOSE DATASET P_FILE .
ENDIF .
ENDIF .
* Add 2006.03.16 <---

* 取得データ０件時エラーメッセージ出力
CLEAR : W_CNT.
DESCRIBE TABLE F_TAB LINES W_CNT .
IF W_CNT = 0 .
MESSAGE I616 .
STOP .
ELSE.
ENDIF.

* 取得データ変換
LOOP AT F_TAB INTO F_WRK.
PERFORM CONV_ALPHA_IN_SYORI USING F_WRK-LIFNR
CHANGING F_WRK-LIFNR.
PERFORM CONV_MATN1_IN_SYORI USING F_WRK-MATNR
CHANGING F_WRK-MATNR.
MODIFY F_TAB FROM F_WRK.
ENDLOOP.

ENDFORM .                    "READ_FILE
*----------------------------------------------------------------------*
* 対象データ取得
*----------------------------------------------------------------------*
FORM DATA_GET .

**** START ADD 2014/09/11 ISID19 ****
DATA:
LW_EKORG TYPE  EINE-EKORG.
*  購買組織データ取得
SELECT  EKORG
FROM  T024E
INTO  LW_EKORG
UP TO 1 ROWS
WHERE BUKRS = P_BUKRS.
ENDSELECT.
**** END ADD 2014/09/11 ISID19 ****-

* データ取得
SELECT EINA~INFNR
EINA~LIFNR
EINA~MATNR
EINE~EKORG
EINE~ESOKZ
EINE~WERKS
INTO CORRESPONDING FIELDS OF TABLE D_TAB
FROM EINA AS EINA INNER JOIN EINE AS EINE
ON EINA~INFNR = EINE~INFNR
FOR ALL ENTRIES IN F_TAB
WHERE EINA~MATNR = F_TAB-MATNR
AND EINA~LIFNR = F_TAB-LIFNR
AND EINE~WERKS = F_TAB-WERKS

**** START ADD 2014/09/11 ISID19 ****
AND EINE~EKORG = LW_EKORG.
**** END ADD 2014/09/11 ISID19 ****

* 取得データ０件時エラーメッセージ出力
CLEAR : W_CNT.
DESCRIBE TABLE D_TAB LINES W_CNT .
IF W_CNT = 0 .
MESSAGE I616 .
STOP .
ELSE.
SORT D_TAB BY LIFNR MATNR WERKS.
ENDIF.

* テキスト取得
LOOP AT D_TAB INTO D_WRK.

CLEAR : W_NAME.
MOVE :  D_WRK-INFNR TO W_NAME.

*   購買情報注記の取得
PERFORM READ_TEXT USING 'AT  ' W_NAME 'EINA'
CHANGING D_WRK-LTXT1.

CLEAR : W_NAME.
CONCATENATE D_WRK-INFNR
D_WRK-EKORG
D_WRK-ESOKZ
D_WRK-WERKS
INTO W_NAME.

*   購買発注テキストの取得
PERFORM READ_TEXT USING 'BT  ' W_NAME 'EINE'
CHANGING D_WRK-LTXT2.

MODIFY D_TAB FROM D_WRK.
CLEAR : D_WRK .
ENDLOOP.

ENDFORM .                    "DATA_GET

*----------------------------------------------------------------------*
* 購買情報テキスト更新
*----------------------------------------------------------------------*
FORM SET_TEXT.
DATA : FLG_UPD_TXT1(1) TYPE C, "購買情報注記更新フラグ
FLG_UPD_TXT2(1) TYPE C. "購買発注テキスト更新フラグ

**** START ADD 2014/09/11 ISID19 ****
DATA:
LW_MESSAGE  TYPE STRING.
**** END ADD 2014/09/11 ISID19 ****

READ TABLE D_TAB INTO D_WRK WITH KEY LIFNR = F_WRK-LIFNR
MATNR = F_WRK-MATNR
WERKS = F_WRK-WERKS.
*                                      BINARY SEARCH.
IF SY-SUBRC NE 0 .
*    WRITE : / '品目'     , F_WRK-MATNR ,
*              '仕入先'   , F_WRK-LIFNR ,
*              'プラント' , F_WRK-WERKS ,
*              'の購買情報は存在しませんでした。'.
EXIT .

**** START ADD 2014/09/11 ISID19 ****
ELSE.
* プラント権限チュック
IF F_WRK-WERKS IS NOT INITIAL.
AUTHORITY-CHECK OBJECT 'M_RECH_WRK'
ID 'WERKS' FIELD F_WRK-WERKS
ID 'ACTVT' FIELD '03'.
IF SY-SUBRC <> 0.
CLEAR LW_MESSAGE.
MESSAGE E048(Z3) WITH F_WRK-WERKS
INTO LW_MESSAGE.
*   プラント &1 では実行する権限がありません
WRITE : / LW_MESSAGE.
RETURN.
ENDIF.
ENDIF.
**** END ADD 2014/09/11 ISID19 ****

ENDIF .
* 入力ファイルの購買情報注記／購買発注テキストが両方とも空白の場合
* あるいは、両方とも現在の購買テキストと同じ場合
IF ( F_WRK-LTXT1 IS INITIAL    AND F_WRK-LTXT2 IS INITIAL )
OR ( F_WRK-LTXT1 = D_WRK-LTXT1 AND F_WRK-LTXT2 = D_WRK-LTXT2 ).

**** START UPD 2014/09/11 ISID19 ****
*        WRITE : / '品目'     , F_WRK-MATNR ,
*              '仕入先'   , F_WRK-LIFNR ,
*              'プラント' , F_WRK-WERKS ,
*              'の購買情報は変更されませんでした。'.
CLEAR LW_MESSAGE.
MESSAGE E110(Z3) WITH F_WRK-MATNR F_WRK-LIFNR F_WRK-WERKS
INTO LW_MESSAGE.
*   品目&1仕入先&2プラント&3の購買情報は変更されませんでした。
WRITE : / LW_MESSAGE.
**** END UPD 2014/09/11 ISID19 ****

ELSE.

IF  F_WRK-LTXT1 NE D_WRK-LTXT1
AND NOT F_WRK-LTXT1 IS INITIAL.
IF F_WRK-LTXT1 EQ 'X' .
CLEAR : F_WRK-LTXT1 .
ENDIF .
*     購買情報注記の更新
CLEAR : W_NAME.
MOVE :  D_WRK-INFNR TO W_NAME.
PERFORM CREATE_TEXT USING 'AT  ' W_NAME 'EINA' F_WRK-LTXT1.

IF SY-SUBRC = 0.
MOVE : 'X' TO FLG_UPD_TXT1.
ENDIF.

ENDIF.

IF  F_WRK-LTXT2 NE D_WRK-LTXT2
AND NOT F_WRK-LTXT2 IS INITIAL.
IF F_WRK-LTXT2 EQ 'X' .
CLEAR : F_WRK-LTXT2 .
ENDIF .

*     購買発注テキストの更新
CLEAR : W_NAME.
CONCATENATE D_WRK-INFNR
D_WRK-EKORG
D_WRK-ESOKZ
D_WRK-WERKS
INTO W_NAME.
PERFORM CREATE_TEXT USING 'BT  ' W_NAME 'EINE' F_WRK-LTXT2.
IF SY-SUBRC = 0.
MOVE : 'X' TO FLG_UPD_TXT2.
ENDIF.
ENDIF.

IF FLG_UPD_TXT1 = 'X'
OR FLG_UPD_TXT2 = 'X'.
ULINE.

**** START UPD 2014/09/11 ISID19 ****
*      WRITE : / '品目'     , F_WRK-MATNR ,
*                '仕入先'   , F_WRK-LIFNR ,
*                'プラント' , F_WRK-WERKS ,
*                'の購買情報について、下記項目が変更されました。'.
CLEAR LW_MESSAGE.
MESSAGE E111(Z3) WITH F_WRK-MATNR F_WRK-LIFNR F_WRK-WERKS
INTO LW_MESSAGE.
*   品目&1仕入先&2プラント&3の購買情報について、下記項目が変更されました。
WRITE : / LW_MESSAGE.
**** END UPD 2014/09/11 ISID19 ****

ENDIF.

*   購買情報注記の更新が行われた場合、変更情報を画面に出力
IF FLG_UPD_TXT1 = 'X'.

**** START UPD 2014/09/11 ISID19 ****
*      WRITE: / '購買情報注記    ：' , D_WRK-LTXT1 , '⇒' , F_WRK-LTXT1.
CLEAR LW_MESSAGE.
MESSAGE E112(Z3) WITH D_WRK-LTXT1 F_WRK-LTXT1
INTO LW_MESSAGE.
*   購買情報注記    ：&1⇒&2
WRITE : / LW_MESSAGE.
**** END UPD 2014/09/11 ISID19 ****

ENDIF.

*   購買発注テキストの更新が行われた場合、変更情報を画面に出力
IF FLG_UPD_TXT2 = 'X'.

**** START UPD 2014/09/11 ISID19 ****
*      WRITE: / '購買発注テキスト：' , D_WRK-LTXT2 , '⇒' , F_WRK-LTXT2.
CLEAR LW_MESSAGE.
MESSAGE E113(Z3) WITH D_WRK-LTXT2 F_WRK-LTXT2
INTO LW_MESSAGE.
*   購買発注テキスト：&1⇒&2
WRITE : / LW_MESSAGE.
**** END UPD 2014/09/11 ISID19 ****

ENDIF.
ENDIF.

ENDFORM.                    "SET_TEXT
*----------------------------------------------------------------------*
* 前ゼロ埋め変換
*----------------------------------------------------------------------*
FORM CONV_ALPHA_IN_SYORI USING P_IN
CHANGING P_OUT.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT  = P_IN
IMPORTING
OUTPUT = P_OUT.

ENDFORM.                    "CONV_ALPHA_IN_SYORI

*----------------------------------------------------------------------*
* 前ゼロ埋め変換
*----------------------------------------------------------------------*
FORM CONV_MATN1_IN_SYORI USING P_IN
CHANGING P_OUT.

CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
EXPORTING
INPUT  = P_IN
IMPORTING
OUTPUT = P_OUT.

ENDFORM.                    "CONV_MATN1_IN_SYORI

*----------------------------------------------------------------------*
* テキスト読込
*----------------------------------------------------------------------*
FORM READ_TEXT USING P_ID P_NAME P_OBJECT
CHANGING P_TEXT .

CLEAR   : T_WRK.
REFRESH : T_TAB.

CALL FUNCTION 'READ_TEXT'
EXPORTING
ID                      = P_ID

**** START UPD 2014/09/11 ISID19 ****
*       LANGUAGE                = 'J'
LANGUAGE                = SY-LANGU
**** END UPD 2014/09/11 ISID19 ****

NAME                    = P_NAME
OBJECT                  = P_OBJECT
TABLES
LINES                   = T_TAB
EXCEPTIONS
ID                      = 1
LANGUAGE                = 2
NAME                    = 3
NOT_FOUND               = 4
OBJECT                  = 5
REFERENCE_CHECK         = 6
WRONG_ACCESS_TO_ARCHIVE = 7
OTHERS                  = 8.

IF SY-SUBRC = 0.
READ TABLE T_TAB INTO T_WRK INDEX 1.
MOVE : T_WRK-TDLINE TO P_TEXT.
ELSE.
CLEAR : P_TEXT.
ENDIF.
ENDFORM .                    "READ_TEXT

*----------------------------------------------------------------------*
* テキスト更新汎用モジュール
*----------------------------------------------------------------------*
FORM CREATE_TEXT USING P_ID P_NAME P_OBJECT P_TEXT.

CLEAR   : T_WRK.
REFRESH : T_TAB.

MOVE : P_TEXT   TO T_WRK-TDLINE.
APPEND T_WRK TO T_TAB.

CALL FUNCTION 'CREATE_TEXT'
EXPORTING
FID         = P_ID

**** START UPD 2014/09/11 ISID19 ****
*      FLANGUAGE   = 'J'
FLANGUAGE   = SY-LANGU
**** END UPD 2014/09/11 ISID19 ****

FNAME       = P_NAME
FOBJECT     = P_OBJECT
SAVE_DIRECT = 'X'
FFORMAT     = '*'
TABLES
FLINES      = T_TAB
EXCEPTIONS
NO_INIT     = 1
NO_SAVE     = 2
OTHERS      = 3.

ENDFORM.                    "

**** START ADD 2014/09/10 ISID19 ****
*&---------------------------------------------------------------------*
*&      Form  CHK_PRC
*&---------------------------------------------------------------------*
*       チェック
*----------------------------------------------------------------------*
FORM CHK_PRC .

* 会社コード存在チェック
SELECT SINGLE BUKRS
FROM T001
INTO P_BUKRS
WHERE BUKRS = P_BUKRS.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'P_BUKRS'.
MESSAGE E016(Z3) WITH P_BUKRS.
*   会社コード & が存在しません。
ENDIF.

* 会社コード権限チェック
AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
ID 'BUKRS' FIELD P_BUKRS
ID 'ACTVT' FIELD '03'.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'P_BUKRS'.
MESSAGE E015(Z3) WITH P_BUKRS.
*   会社コード & では実行する権限がありません。
ENDIF.

ENDFORM.                    " CHK_PRC
**** END ADD 2014/09/10 ISID19 ****
*Selection text・
*P_BUKRS:        Company code
*P_FILE:        File name
*P_LOCAL:        Local
*P_SERVE:        Server
