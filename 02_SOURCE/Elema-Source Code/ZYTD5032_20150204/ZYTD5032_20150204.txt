REPORT  ZYTD5032 MESSAGE-ID Y1.
************************************************************************
* プログラムID  : ZYTD5032
* プログラム名  : 購買情報マスタセットアップ用ファイル作成
* 作成日        : 1998/12/08
* 作成者        : Pioneer System Science
* 変更履歴      : NDSC   ヘッダ行削除ロジックの削除 2002/05/22
*                 NDSC   項目空白時の編集処理の修正(バグ?) 2002/07/05
*                 DMC    スケールに対応するように修正 2008/03/17
*                 SOKFIS 入力情報をファイルに一本化 2010/03/03
*                 ISID   ES-UP 2012/08/08
*                 ISID   ES-UP 2012/10/29
*                 GSL Tohtake 数値のみの品目コードは前ゼロ埋め処理を行う2012/12/14
*                 ISID18 コードページを"UTF-8"に修正 2014/08/29
*                 ISID11 アップロード時のBOMロジック改修 2015/01/08
*                 ISID18 コードページ修正 2015/02/04
************************************************************************
* テーブル・構造体 定義
TABLES:EINA ,   "購買情報: 一般データ
BGR00,   "セッションデータ用バッチ入力構造
BEIN0,   "購買情報: トランザクションデータ (バッチインプット)
BEINA,   "購買情報: 一般データ (バッチインプット)
BEINE,   "購買情報: 購買組織データ (バッチインプット)
BKONP,   "条件: 明細（バッチインプット）
BKONM.   "条件: 数量スケール 1 次元（バッチ）

* 変数等 定義
FIELD-SYMBOLS <F>.    "区切り文字
DATA:WK_READ(999) TYPE C OCCURS 0 WITH HEADER LINE.
*DATA:WK_READ_SPLIT LIKE ZM002 OCCURS 0 WITH HEADER LINE.
DATA:BEGIN OF WK_READ_SPLIT OCCURS 0,
KUBUN(1)      TYPE C,    "処理区分 1->新規  2->変更
LIFNR(10)     TYPE C,    "仕入先コード
MATNR(18)     TYPE C,    "品目コード
EKORG(04)     TYPE C,    "購買組織
WERKS(04)     TYPE C,    "プラント
INFNR(10)     TYPE C,    "購買情報番号
LOHNB(01)     TYPE C,    "区分：外注先
PIPEL(01)     TYPE C,    "区分：パイプライン
KONSI(01)     TYPE C,    "区分：受託
MATKL(09)     TYPE C,    "品目グループ
TXZ01(40)     TYPE C,    "テキスト（短）
SORTL(10)     TYPE C,    "ソートキー
MEINS(03)     TYPE C,    "購買発注単位
UMREZ(05)     TYPE C,    "変換式の分子
UMREN(05)     TYPE C,    "変換式の分母
IDNLF(22)     TYPE C,    "仕入先品目コード
VERKF(30)     TYPE C,    "仕入先営業担当者
TELF1(16)     TYPE C,    "仕入先電話番号
MAHN1(04)     TYPE C,    "第一回催促状日数
MAHN2(04)     TYPE C,    "第二回催促状日数
MAHN3(04)     TYPE C,    "第三回催促状日数
URZNR(10)     TYPE C,    "原産地証明書番号
URZDT(10)     TYPE C,    "原産地証明書有効終了日
URZLA(03)     TYPE C,    "原産国
URZTP(01)     TYPE C,    "証明書区分
URZZT(16)     TYPE C,    "関税率番号
REGIO(03)     TYPE C,    "地域
VABME(01)     TYPE C,    "可変購買発注単位有効
LTSNR(06)     TYPE C,    "仕入先部門
LTSSF(05)     TYPE C,    "部門ソート番号
WGLIF(18)     TYPE C,    "仕入先品目グループ
RUECK(02)     TYPE C,    "返品合意
LIFAB(10)     TYPE C,    "有効期間開始日
LIFBI(10)     TYPE C,    "有効期間終了日
KOLIF(10)     TYPE C,    "製造元/販売元
ANZPU(17)     TYPE C,    "リベートポイント
PUNEI(03)     TYPE C,    "ポイント単位
RELIF(01)     TYPE C,    "通常仕入先
APLFZ(03)     TYPE C,    "納入予定日数
UNTTO(03)     TYPE C,    "不足許容範囲
MTXNO(01)     TYPE C,    "情報Text
EKGRP(03)     TYPE C,    "購買グループ
UEBTO(03)     TYPE C,    "過剰納入許容値
KZABS(01)     TYPE C,    "請書必須
NORBM(13)     TYPE C,    "標準発注数量
UEBTK(01)     TYPE C,    "過剰納入無制限
BSTAE(04)     TYPE C,    "確認管理
MINBM(13)     TYPE C,    "最小発注数量
WEBRE(01)     TYPE C,    "入庫基準請求書
MWSKZ(02)     TYPE C,    "税コード
MHDRZ(04)     TYPE C,    "有効期限日数残
XERSN(01)     TYPE C,    "ERS不可
EVERS(02)     TYPE C,    "出荷指示
EXPRF(05)     TYPE C,    "輸出入手続き
BSTMA(13)     TYPE C,    "最大数量
RDPRF(04)     TYPE C,    "丸め Profile
MEGRU(04)     TYPE C,    "単位 Group
NETPR(11)     TYPE C,    "正味価格
WAERS(05)     TYPE C,    "通貨コード
PEINH(05)     TYPE C,    "購買価格単位
BPRME(03)     TYPE C,    "購買価格発注単位
SKTOF(01)     TYPE C,    "現金値引対象外
BPUMN(05)     TYPE C,    "数量変換分母
BPUMZ(05)     TYPE C,    "数量変換分子
EKKOL(04)     TYPE C,    "条件グループ
MEPRF(01)     TYPE C,    "価格設定日制御
INCO1(03)     TYPE C,    "インコタームズ
INCO2(28)     TYPE C,    "インコタームズテキスト
ANGNR(10)     TYPE C,    "見積番号
ANGDT(08)     TYPE C,    "見積有効開始日
KSCHL(04)     TYPE C,    "条件タイプ
DATAB(08)     TYPE C,    "有効開始日
DATBI(08)     TYPE C,    "有効終了日
KBETR(11)     TYPE C,    "スケール/率
KPEIN(05)     TYPE C,    "価格単位
KMEIN(03)     TYPE C,    "条件単位
MXWRT(11)     TYPE C,    "条件下限
GKWRT(11)     TYPE C,    "条件上限
STFKZ(01)     TYPE C,    "スケールタイプ
KZNEP(01)     TYPE C,    "条件除外区分
KSTBM(15)     TYPE C,    "スケール数量
KBETR2(11)    TYPE C,    "金額/率
* 2008/03/17 APPEND START
KNUMH(10)     TYPE C,    "条件レコードNo
KONWA(5)      TYPE C,    "条件通貨コード
* 2008/03/17 APPEND END
END OF WK_READ_SPLIT.

* 2010/03/03 APPEND START
*-- 入力ファイルデータ格納用
TYPES:BEGIN OF T_INFILE,
MATNR      TYPE MARC-MATNR, "品目コード
WERKS_OLD  TYPE MARC-WERKS, "プラント
WERKS_NEW  TYPE MARC-WERKS, "プラント（新）
EKGRP      TYPE MARC-EKGRP, "購買グループ
DATUM      TYPE D,          "有効日
DUMMY(2)   TYPE C,          "末尾ゴミ対処
END OF  T_INFILE.

DATA:GT_INFILE TYPE STANDARD TABLE OF T_INFILE,
GW_INFILE TYPE T_INFILE.

*-- 実行結果出力用
DATA:G_ERR_FLG(1) TYPE C, "EINAを読めなかった判定
G_ERR_CNT    TYPE I, "EINAを読めなかった件数
G_IN_CNT     TYPE I. "入力ファイルの件数

**** START ADD 2015/02/04 ISID18 ****
DATA:
G_OUTPUT_CP   TYPE ZTEGZZM001-Z_OUTPUT_CP,
G_SAPCODEPAGE TYPE STRING,
G_CODEPAGE    TYPE ABAP_ENCODING,
G_FLGUTF8     TYPE FLAG.
**** END ADD 2015/02/04 ISID18 ****

*-- タブ区切り受け取り用

* Mod ES-UP 2012/08/22 -->
*CONSTANTS : W_TAB TYPE X VALUE '09' .
CONSTANTS: W_TAB TYPE STRING VALUE CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/22 <--

* 2010/03/03 APPEND END

* 入力パラメータ 定義
* 2010/03/03 DELETED START
*-- 選択画面の項目削除
** データ抽出用品目ファイル
*SELECTION-SCREEN : BEGIN OF BLOCK 1 WITH FRAME TITLE TEXT-002.
*PARAMETERS : P_FILE AS CHECKBOX .
*PARAMETERS : FNAMEIN LIKE RLGRAP-FILENAME.  "入力ファイル
*SELECTION-SCREEN : END OF BLOCK 1.
*SELECTION-SCREEN SKIP 1.
** 選択条件
*SELECTION-SCREEN : BEGIN OF BLOCK 2 WITH FRAME TITLE TEXT-003.
*PARAMETERS : I_WERKS LIKE EINE-WERKS  OBLIGATORY.
*SELECT-OPTIONS : S_MATNR FOR EINA-MATNR.
*SELECTION-SCREEN : END OF BLOCK 2.
*SELECTION-SCREEN SKIP 1.
** 追加項目
*SELECTION-SCREEN : BEGIN OF BLOCK 3 WITH FRAME TITLE TEXT-004.
*PARAMETERS : P_WERKS LIKE EINE-WERKS OBLIGATORY.
*PARAMETERS : P_EKGRP LIKE EINE-EKGRP OBLIGATORY.
** NDSC KURI ADD 有効開始日
*PARAMETERS : P_DATE LIKE SY-DATUM DEFAULT SY-DATUM OBLIGATORY.
*SELECTION-SCREEN : END OF BLOCK 3.
*SELECTION-SCREEN SKIP 1.
* 2010/03/03 DELETED END

* 2010/03/03 APPEND START
*-- 入力ファイル名だけは必要
* データ抽出用品目ファイル
SELECTION-SCREEN : BEGIN OF BLOCK 1 WITH FRAME TITLE TEXT-002.
PARAMETERS : FNAMEIN LIKE RLGRAP-FILENAME.  "入力ファイル
SELECTION-SCREEN : END OF BLOCK 1.
SELECTION-SCREEN SKIP 1.
* 2010/03/03 APPEND END

* 出力ファイル
SELECTION-SCREEN : BEGIN OF BLOCK 4 WITH FRAME TITLE TEXT-005.
*PARAMETERS : FNAMEOUT LIKE RLGRAP-FILENAME OBLIGATORY.  "出力ファイル

PARAMETERS:FNAMEOUT(120) LOWER CASE OBLIGATORY
DEFAULT '\\tecr3ap01\r3common\' .

SELECTION-SCREEN : END OF BLOCK 4.
SELECTION-SCREEN SKIP 1.
* SESSION名
PARAMETERS  P_GROUP LIKE BGR00-GROUP DEFAULT 'INFOSATZ' NO-DISPLAY.

DATA:IN_CNT  TYPE P,
OUT_CNT TYPE P,
DEL_CNT TYPE P.

DATA: LIN           TYPE P.

* Add ES-UP 2012/08/22 -->
****START DEL 2014/08/29 ISID18****
*  CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
*  DATA L_CODEPAGE TYPE CPCODEPAGE.
****END DEL 2014/08/29 ISID18****
* Add ES-UP 2012/08/22 <--

AT SELECTION-SCREEN.

**** START ADD 2015/02/04 ISID18 ****
* コードページ取得処理
PERFORM FRM_GET_CPAGE.
**** END ADD 2015/02/04 ISID18 ****

* 出力用ファイルオープン
DELETE DATASET FNAMEOUT.
* Mod ES-UP 2012/08/22 -->
*  OPEN DATASET FNAMEOUT FOR OUTPUT IN TEXT MODE.
****START DEL 2014/08/29 ISID18****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
****END DEL 2014/08/29 ISID18****
* Mod ES-UP 2012/10/29 -->
*  OPEN DATASET FNAMEOUT FOR INPUT
*    IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
*    IGNORING CONVERSION ERRORS.
**** START ADD 2015/02/04 ISID18 ****
CLEAR: G_SAPCODEPAGE, G_CODEPAGE.
G_SAPCODEPAGE = G_OUTPUT_CP.
IF G_SAPCODEPAGE IS NOT INITIAL.
G_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( G_SAPCODEPAGE ).
ENDIF.
IF G_FLGUTF8 IS INITIAL.
TRY.
OPEN DATASET FNAMEOUT FOR OUTPUT
IN LEGACY TEXT MODE CODE PAGE G_CODEPAGE
IGNORING CONVERSION ERRORS.
CATCH CX_SY_CODEPAGE_CONVERTER_INIT.
SY-SUBRC = 8.
ENDTRY.
ELSE.
**** END ADD 2015/02/04 ISID18 ****
**** START UPD 2015/02/04 ISID18 ****
*  OPEN DATASET FNAMEOUT FOR OUTPUT IN TEXT MODE ENCODING UTF-8.
OPEN DATASET FNAMEOUT FOR OUTPUT IN TEXT MODE ENCODING UTF-8
IGNORING CONVERSION ERRORS.
ENDIF.
**** END UPD 2015/02/04 ISID18 ****
* Mod ES-UP 2012/10/29 <--

* Mod ES-UP 2012/08/22 <--
IF SY-SUBRC NE 0.
MESSAGE S668. STOP.
ENDIF.

*AT SELECTION-SCREEN ON VALUE-REQUEST FOR FNAMEIN.
** 初期画面でファイル名に対してVALUE-REQUESTが発生した時の処理
*  CALL FUNCTION 'WS_FILENAME_GET'
*       EXPORTING
**           DEF_FILENAME     = 'MMINFO.TXT '
*            DEF_PATH         = 'D:\ABAP\'
*            MASK  = '*.csv,CSV File,*.csv*,TXT File,*.txt*.'
*            MODE             = 'O'  "'S'以外なら何でも可
*            TITLE            = '購買情報入力ファイル指定'
*       IMPORTING
*            FILENAME         = FNAMEIN
**           RC               =
*       EXCEPTIONS
*            INV_WINSYS       = 1
*            NO_BATCH         = 2
*            SELECTION_CANCEL = 3
*            SELECTION_ERROR  = 4
*            OTHERS           = 5.
*
START-OF-SELECTION.
* 2010/03/03 DELETED START
*  IF P_FILE EQ 'X' .
** 品目コードデータファイル読込処理
*    PERFORM READ_FILE .
*  ENDIF .
* 2010/03/03 DELETED END
* 2010/03/03 APPEND START
*-- ファイルからしか実行できないように変更
PERFORM READ_FILE .
* 2010/03/03 APPEND END
PERFORM DATA_GET .

TRANSFER 'BGR00' TO FNAMEOUT.
*  PERFORM MAKE_OUTDATA. "出力用ﾃﾞｰﾀ作成

* 2010/03/03 MODIFY START
* MESSAGE I401 WITH '入力件数' IN_CNT.
MESSAGE I401 WITH '入力件数' G_IN_CNT.
MESSAGE I401 WITH '出力件数' IN_CNT.
* 2010/03/03 MODIFY  END
* 2010/03/03 DELETED START
* MESSAGE I401 WITH '削除件数' DEL_CNT.
* 2010/03/03 DELETED END
END-OF-SELECTION.
*&---------------------------------------------------------------------*
*&      Form  READ_MMINFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM READ_MMINFO.
* READ DATASET FNAMEIN INTO WK_READ.   2002/05/22 DEL
*  DO.
*    READ DATASET FNAMEIN INTO WK_READ.
*    IF SY-SUBRC NE 0.
*      EXIT.
*    ENDIF.
*    APPEND WK_READ.
*    IN_CNT = IN_CNT + 1.
*  ENDDO.
*  CLOSE DATASET FNAMEIN.
ENDFORM.                    " READ_MMINFO

*&---------------------------------------------------------------------*
*&      Form  MAKE_OUTDATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MAKE_OUTDATA.
*  PERFORM SPLIT_MMINFO.  "読込ファイルを区切り文字で分割する
REFRESH WK_READ.  "WK_READはもう不要
* 2010/03/03 DELETED START
* PERFORM CHECK_MMINFO.  "EINAと照合し、矛盾するﾃﾞｰﾀはDELETEする
* 2010/03/03 DELETED END
PERFORM MAKE_MMINFOD.  "ファイルMMINFORECORDSの作成
CLOSE DATASET FNAMEOUT. "書き出しファイルを閉じる
ENDFORM.                    " MAKE_OUTDATA

*&---------------------------------------------------------------------*
*&      Form  SPLIT_MMINFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SPLIT_MMINFO.
* Mod ES-UP 2012/08/22 -->
*CONSTANTS : W_TAB TYPE X VALUE '09' .
CONSTANTS: W_TAB TYPE STRING VALUE CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/22 <--

REFRESH WK_READ_SPLIT.
LOOP AT WK_READ.
CLEAR WK_READ_SPLIT.
*   SPLIT WK_READ AT ',' INTO
SPLIT WK_READ AT W_TAB INTO
WK_READ_SPLIT-KUBUN     "処理区分 1->新規  2->変更
WK_READ_SPLIT-LIFNR     "仕入先コード
WK_READ_SPLIT-MATNR     "品目コード
WK_READ_SPLIT-EKORG     "購買組織
WK_READ_SPLIT-WERKS     "プラント
WK_READ_SPLIT-INFNR     "購買情報番号
WK_READ_SPLIT-LOHNB     "区分：外注先
WK_READ_SPLIT-PIPEL     "区分：パイプライン
WK_READ_SPLIT-KONSI     "区分：受託
WK_READ_SPLIT-MATKL     "品目グループ
WK_READ_SPLIT-TXZ01     "テキスト（短）
WK_READ_SPLIT-SORTL     "ソートキー
WK_READ_SPLIT-MEINS     "購買発注単位
WK_READ_SPLIT-UMREZ     "変換式の分子
WK_READ_SPLIT-UMREN     "変換式の分母
WK_READ_SPLIT-IDNLF     "仕入先品目コード
WK_READ_SPLIT-VERKF     "仕入先営業担当者
WK_READ_SPLIT-TELF1     "仕入先電話番号
WK_READ_SPLIT-MAHN1     "第一回催促状日数
WK_READ_SPLIT-MAHN2     "第二回催促状日数
WK_READ_SPLIT-MAHN3     "第三回催促状日数
WK_READ_SPLIT-URZNR     "原産地証明書番号
WK_READ_SPLIT-URZDT     "原産地証明書有効終了日
WK_READ_SPLIT-URZLA     "原産国
WK_READ_SPLIT-URZTP     "証明書区分
WK_READ_SPLIT-URZZT     "関税率番号
WK_READ_SPLIT-REGIO     "地域
WK_READ_SPLIT-VABME     "可変購買発注単位有効
WK_READ_SPLIT-LTSNR     "仕入先部門
WK_READ_SPLIT-LTSSF     "部門ソート番号
WK_READ_SPLIT-WGLIF     "仕入先品目グループ
WK_READ_SPLIT-RUECK     "返品合意
WK_READ_SPLIT-LIFAB     "有効期間開始日
WK_READ_SPLIT-LIFBI     "有効期間終了日
WK_READ_SPLIT-KOLIF     "製造元/販売元
WK_READ_SPLIT-ANZPU     "リベートポイント
WK_READ_SPLIT-PUNEI     "ポイント単位
WK_READ_SPLIT-RELIF     "通常仕入先
WK_READ_SPLIT-APLFZ     "納入予定日数
WK_READ_SPLIT-UNTTO     "不足許容範囲
WK_READ_SPLIT-MTXNO     "情報Text
WK_READ_SPLIT-EKGRP     "購買グループ
WK_READ_SPLIT-UEBTO     "過剰納入許容値
WK_READ_SPLIT-KZABS     "請書必須
WK_READ_SPLIT-NORBM     "標準発注数量
WK_READ_SPLIT-UEBTK     "過剰納入無制限
WK_READ_SPLIT-BSTAE     "確認管理
WK_READ_SPLIT-MINBM     "最小発注数量
WK_READ_SPLIT-WEBRE     "入庫基準請求書
WK_READ_SPLIT-MWSKZ     "税コード
WK_READ_SPLIT-MHDRZ     "有効期限日数残
WK_READ_SPLIT-XERSN     "ERS不可
WK_READ_SPLIT-EVERS     "出荷指示
WK_READ_SPLIT-EXPRF     "輸出入手続き
WK_READ_SPLIT-BSTMA     "最大数量
WK_READ_SPLIT-RDPRF     "丸め Profile
WK_READ_SPLIT-MEGRU     "単位 Group
WK_READ_SPLIT-NETPR     "正味価格
WK_READ_SPLIT-WAERS     "通貨コード
WK_READ_SPLIT-PEINH     "購買価格単位
WK_READ_SPLIT-BPRME     "購買価格発注単位
WK_READ_SPLIT-SKTOF     "現金値引対象外
WK_READ_SPLIT-BPUMN     "数量変換分母
WK_READ_SPLIT-BPUMZ     "数量変換分子
WK_READ_SPLIT-EKKOL     "条件グループ
WK_READ_SPLIT-MEPRF     "価格設定日制御
WK_READ_SPLIT-INCO1     "インコタームズ
WK_READ_SPLIT-INCO2     "インコタームズテキスト
WK_READ_SPLIT-ANGNR     "見積番号
WK_READ_SPLIT-ANGDT     "見積有効開始日
WK_READ_SPLIT-KSCHL     "条件タイプ
WK_READ_SPLIT-DATAB     "有効開始日
WK_READ_SPLIT-DATBI     "有効終了日
WK_READ_SPLIT-KBETR     "スケール/率
WK_READ_SPLIT-KPEIN     "価格単位
WK_READ_SPLIT-KMEIN     "条件単位
WK_READ_SPLIT-MXWRT     "条件下限
WK_READ_SPLIT-GKWRT     "条件上限
WK_READ_SPLIT-STFKZ     "スケールタイプ
WK_READ_SPLIT-KZNEP     "条件除外区分
WK_READ_SPLIT-KSTBM     "スケール数量
WK_READ_SPLIT-KBETR2.   "金額/率
IF WK_READ_SPLIT-LIFNR <> SPACE.
APPEND WK_READ_SPLIT.
ENDIF.
ENDLOOP.
ENDFORM.                    " SPLIT_MMINFO
* 2010/03/03 DELETED START
**&--------------------------------------------------------------------*
**&      Form  CHECK_MMINFO
**&--------------------------------------------------------------------*
**       text
**---------------------------------------------------------------------*
**  -->  p1        text
**  <--  p2        text
**---------------------------------------------------------------------*
*FORM CHECK_MMINFO.
*  DATA:DELCODE(1) TYPE C.  "'X'がついたﾃﾞｰﾀは削除する
** 98.04.13 登録データが既に登録されていた -> '1'
**          更新データが登録されてなかった -> '2'   Nakai@PSS
*  LOOP AT WK_READ_SPLIT.
*
*    CLEAR DELCODE.
*    TRANSLATE  WK_READ_SPLIT-LIFNR  TO UPPER CASE.
*    TRANSLATE  WK_READ_SPLIT-MATNR  TO UPPER CASE.
*
*    SELECT * FROM EINA WHERE LIFNR =  WK_READ_SPLIT-LIFNR
*                         AND MATNR =  WK_READ_SPLIT-MATNR.
** 存在したら、SELECTループに入ってくる
*      CASE WK_READ_SPLIT-KUBUN.
*        WHEN '1'. "既に存在しているﾃﾞｰﾀを登録しようとしたらエラー
**          DELCODE = '1'.
*        WHEN '2'. "変更ﾃﾞｰﾀなら存在しててＯＫ
*      ENDCASE.
*    ENDSELECT.
*
*    IF SY-SUBRC NE 0.   "EINAに同一のﾃﾞｰﾀは無かった
*      CASE WK_READ_SPLIT-KUBUN.
*        WHEN '1'.  "新規のﾃﾞｰﾀならば存在してなくてＯＫ
*        WHEN '2'.  "変更ﾃﾞｰﾀならば存在してないとおかしい
*          DELCODE = '2'.
*      ENDCASE.
*    ENDIF.
*
*    IF NOT DELCODE IS INITIAL.
*      CASE DELCODE.
*        WHEN '1'.
*          MESSAGE I004 WITH WK_READ_SPLIT-LIFNR
*                            '-'
*                            WK_READ_SPLIT-MATNR
*                            'は登録済みです'.
*        WHEN '2'.
*          MESSAGE I004 WITH WK_READ_SPLIT-LIFNR
*                            '-'
*                            WK_READ_SPLIT-MATNR
*                            'は未登録です'.
*        WHEN OTHERS.
*          MESSAGE I004 WITH 'その他のエラー'.
*      ENDCASE.
*      DELETE WK_READ_SPLIT.
*      DEL_CNT = DEL_CNT + 1.
*    ENDIF.
*    IN_CNT = IN_CNT + 1.
*  ENDLOOP.
*
*ENDFORM.                    " CHECK_MMINFO
* 2010/03/03 DELETED END
*&---------------------------------------------------------------------*
*&      Form  MAKE_MMINFOD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MAKE_MMINFOD.
DESCRIBE TABLE  WK_READ_SPLIT LINES LIN.
* 2010/03/03 APPEND START
CLEAR:IN_CNT.
IN_CNT = LIN.
* 2010/03/03 APPEND END
IF LIN > 0.
PERFORM SET_BGR00.   "構造体BGR00セット
PERFORM OUT_BGR00.   "構造体BGR00アウトプット
ENDIF.
LOOP AT WK_READ_SPLIT.
PERFORM SET_BEIN0. "構造体BEIN0セット
PERFORM OUT_BEIN0. "構造体BEIN0アウトプット
PERFORM SET_BEINA. "構造BEINAセット
PERFORM OUT_BEINA. "構造BEINAアウトプット
PERFORM SET_BEINE. "構造BEINEセット
PERFORM OUT_BEINE. "構造BEINEアウトプット
PERFORM SET_BKONP. "構造BKONPセット
PERFORM OUT_BKONP. "構造BKONP出力
* 2008/03/17 APPEND START
PERFORM SET_BKONM. "構造BKONMセット
* 2008/03/17 APPEND END
*    PERFORM OUT_BKONM. "構造BKONM出力
ENDLOOP.

ENDFORM.                    " MAKE_MMINFOD

*&---------------------------------------------------------------------*
*&      Form  SET_BGR00
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_BGR00.
CLEAR BGR00.
BGR00-STYPE  = '0'.
BGR00-GROUP  = P_GROUP.
BGR00-MANDT  = SY-MANDT.
BGR00-USNAM  = SY-UNAME.
* BGR00-START  = '/'.
BGR00-START  = SPACE .
BGR00-XKEEP  = 'X'.     "セッションを保持しない
BGR00-NODATA = '/'.
ENDFORM.                                                    " SET_BGR00
*&---------------------------------------------------------------------*
*&      Form  OUT_BGR00
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM OUT_BGR00.
TRANSFER BGR00 TO FNAMEOUT.
ENDFORM.                                                    " OUT_BGR00

*&---------------------------------------------------------------------*
*&      Form  SET_BEIN0
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_BEIN0.
BEIN0-STYPE = '1'.           "ＢＤＣインターフェイスレコード
CASE WK_READ_SPLIT-KUBUN.
WHEN '1'.                  "新規データ
BEIN0-TCODE = 'ME11'.
WHEN '2'.                  "変更データ
BEIN0-TCODE = 'ME12'.
ENDCASE.
BEIN0-LIFNR = WK_READ_SPLIT-LIFNR.   "仕入先コード
IF WK_READ_SPLIT-MATNR = SPACE.
BEIN0-MATNR = '/'.                 "品目コード
ELSE.
BEIN0-MATNR = WK_READ_SPLIT-MATNR. "品目コード
ENDIF.
BEIN0-EKORG = WK_READ_SPLIT-EKORG.   "購買組織
BEIN0-WERKS = WK_READ_SPLIT-WERKS.   "プラント
IF WK_READ_SPLIT-INFNR = SPACE.
BEIN0-INFNR = '/'.                 "購買情報番号
ELSE.
BEIN0-INFNR = WK_READ_SPLIT-INFNR. "購買情報番号
ENDIF.
IF WK_READ_SPLIT-LOHNB = SPACE.
BEIN0-LOHNB = '/'.                 "区分：外注先
ELSE.
BEIN0-LOHNB = WK_READ_SPLIT-LOHNB. "区分：外注先
ENDIF.
IF WK_READ_SPLIT-PIPEL = SPACE.
BEIN0-PIPEL = '/'.                 "区分：パイプライン
ELSE.
BEIN0-PIPEL = WK_READ_SPLIT-PIPEL. "区分：パイプライン
ENDIF.
IF WK_READ_SPLIT-KONSI = SPACE.
BEIN0-KONSI = '/'.                 "区分：受託
ELSE.
BEIN0-KONSI = WK_READ_SPLIT-KONSI. "区分：受託
ENDIF.
ENDFORM.                                                    " SET_BEIN0

*&---------------------------------------------------------------------*
*&      Form  OUT_BEIN0
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM OUT_BEIN0.
TRANSFER BEIN0 TO FNAMEOUT.
ENDFORM.                                                    " OUT_BEIN0

*&---------------------------------------------------------------------*
*&      Form  SET_BEINA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_BEINA.
BEINA-STYPE = '2'.      "ＢＤＣインターフェイスレコードタイプ
BEINA-TBNAM = 'EINA'.   "テーブル名
BEINA-MFRNR = '/' .
*2002/07/05 MOD START
*  IF WK_READ_SPLIT-MATNR = SPACE.
IF WK_READ_SPLIT-MATKL <> SPACE.
*2002/07/05 MOD END
BEINA-MATKL = WK_READ_SPLIT-MATKL. "品目グループ
ELSE.
BEINA-MATKL = '/'.                 "品目グループ
ENDIF.
BEINA-LOEKZ = '/'.      "削除ﾌﾗｸﾞ
*2002/07/05 MOD START
*  IF WK_READ_SPLIT-MATNR = SPACE.
IF WK_READ_SPLIT-TXZ01 <> SPACE.
*2002/07/05 MOD END
BEINA-TXZ01 = WK_READ_SPLIT-TXZ01. "購買情報に対するテキスト
ELSE.
BEINA-TXZ01 = '/'.                 "購買情報に対するテキスト
ENDIF.
*2002/07/05 MOD START
*  IF WK_READ_SPLIT-MATNR = SPACE.
IF WK_READ_SPLIT-SORTL <>  SPACE.
*2002/07/05 MOD END
BEINA-SORTL = WK_READ_SPLIT-SORTL. "ソートキー
ELSE.
BEINA-SORTL = '/'.                 "ソートキー
ENDIF.
IF WK_READ_SPLIT-MEINS = SPACE.
BEINA-MEINS = '/'.                 "購買発注単位（発注）
ELSE.
BEINA-MEINS = WK_READ_SPLIT-MEINS. "購買発注単位（発注）
ENDIF.
IF WK_READ_SPLIT-UMREZ = SPACE.
BEINA-UMREZ = '/'.                 "変換式の分子（発注）
ELSE.
BEINA-UMREZ = WK_READ_SPLIT-UMREZ. "変換式の分子（発注）
ENDIF.
IF WK_READ_SPLIT-UMREN = SPACE.
BEINA-UMREN = '/'.                 "変換式の分母（発注）
ELSE.
BEINA-UMREN = WK_READ_SPLIT-UMREN. "変換式の分母（発注）
ENDIF.
IF WK_READ_SPLIT-IDNLF = SPACE.
BEINA-IDNLF = '/'.                 "仕入先の品目コード
ELSE.
BEINA-IDNLF = WK_READ_SPLIT-IDNLF. "仕入先の品目コード
ENDIF.
IF WK_READ_SPLIT-VERKF = SPACE.
BEINA-VERKF = '/'.                 "仕入先営業担当社
ELSE.
BEINA-VERKF = WK_READ_SPLIT-VERKF. "仕入先営業担当社
ENDIF.
IF WK_READ_SPLIT-TELF1 = SPACE.
BEINA-TELF1 = '/'.                 "仕入先電話番号
ELSE.
BEINA-TELF1 = WK_READ_SPLIT-TELF1. "仕入先電話番号
ENDIF.
IF WK_READ_SPLIT-MAHN1 = SPACE.
BEINA-MAHN1 = '/'.                 "第１回確認状／督促状までの日数
ELSE.
BEINA-MAHN1 = WK_READ_SPLIT-MAHN1. "第１回確認状／督促状までの日数
ENDIF.
IF WK_READ_SPLIT-MAHN2 = SPACE.
BEINA-MAHN2 = '/'.                 "第２回確認状／督促状までの日数
ELSE.
BEINA-MAHN2 = WK_READ_SPLIT-MAHN2. "第２回確認状／督促状までの日数
ENDIF.
IF WK_READ_SPLIT-MAHN3 = SPACE.
BEINA-MAHN3 = '/'.                 "第３回確認状／督促状までの日数
ELSE.
BEINA-MAHN3 = WK_READ_SPLIT-MAHN3. "第３回確認状／督促状までの日数
ENDIF.
IF WK_READ_SPLIT-URZNR = SPACE.
BEINA-URZNR = '/'.                 "原産地証明書番号
ELSE.
BEINA-URZNR = WK_READ_SPLIT-URZNR. "原産地証明書番号
ENDIF.
IF WK_READ_SPLIT-URZDT = SPACE.
BEINA-URZDT = '/'.                 "原産地証明書有効終了日
ELSE.
BEINA-URZDT = WK_READ_SPLIT-URZDT. "原産地証明書有効終了日
ENDIF.
IF WK_READ_SPLIT-URZLA = SPACE.
BEINA-URZLA = '/'.                 "原産国証明：発行元の国
ELSE.
BEINA-URZLA = WK_READ_SPLIT-URZLA. "原産国証明：発行元の国
ENDIF.
IF WK_READ_SPLIT-URZTP = SPACE.
BEINA-URZTP = '/'.                 "証明書区分
ELSE.
BEINA-URZTP = WK_READ_SPLIT-URZTP. "証明書区分
ENDIF.
IF WK_READ_SPLIT-URZZT = SPACE.
BEINA-URZZT = '/'.                 "関税率番号
ELSE.
BEINA-URZZT = WK_READ_SPLIT-URZZT. "関税率番号
ENDIF.
IF WK_READ_SPLIT-REGIO = SPACE.
BEINA-REGIO = '/'.                 "地域
ELSE.
BEINA-REGIO = WK_READ_SPLIT-REGIO. "地域
ENDIF.
IF WK_READ_SPLIT-VABME = SPACE.
BEINA-VABME = '/'.                 "可変購買発注単位有効
ELSE.
BEINA-VABME = WK_READ_SPLIT-VABME. "可変購買発注単位有効
ENDIF.
IF WK_READ_SPLIT-LTSNR = SPACE.
BEINA-LTSNR = '/'.                 "仕入先部門
ELSE.
BEINA-LTSNR = WK_READ_SPLIT-LTSNR. "仕入先部門
ENDIF.
IF WK_READ_SPLIT-LTSSF = SPACE.
BEINA-LTSSF = '/'.                 "シーケンス番号ソート
ELSE.
BEINA-LTSSF = WK_READ_SPLIT-LTSSF. "シーケンス番号ソート
ENDIF.
IF WK_READ_SPLIT-WGLIF = SPACE.
BEINA-WGLIF = '/'.                 "仕入先品目グループ
ELSE.
BEINA-WGLIF = WK_READ_SPLIT-WGLIF. "仕入先品目グループ
ENDIF.
IF WK_READ_SPLIT-RUECK = SPACE.
BEINA-RUECK = '/'.                 "返品合意
ELSE.
BEINA-RUECK = WK_READ_SPLIT-RUECK. "返品合意
ENDIF.
IF WK_READ_SPLIT-LIFAB = SPACE.
BEINA-LIFAB = '/'.                 "有効期間開始日（供給オプション）
ELSE.
BEINA-LIFAB = WK_READ_SPLIT-LIFAB. "有効期間開始日（供給オプション）
ENDIF.
IF WK_READ_SPLIT-LIFBI = SPACE.
BEINA-LIFBI = '/'.                 "有効期間終了日（供給オプション）
ELSE.
BEINA-LIFBI = WK_READ_SPLIT-LIFBI. "有効期間終了日（供給オプション）
ENDIF.
IF WK_READ_SPLIT-KOLIF = SPACE.
BEINA-KOLIF = '/'.                 "製造元／販売元
ELSE.
BEINA-KOLIF = WK_READ_SPLIT-KOLIF. "製造元／販売元
ENDIF.
IF WK_READ_SPLIT-ANZPU = SPACE.
BEINA-ANZPU = '/'.                 "ポイント数
ELSE.
BEINA-ANZPU = WK_READ_SPLIT-ANZPU. "ポイント数
ENDIF.
IF WK_READ_SPLIT-PUNEI = SPACE.
BEINA-PUNEI = '/'.                 "ポイント単位
ELSE.
BEINA-PUNEI = WK_READ_SPLIT-PUNEI. "ポイント単位
ENDIF.
IF WK_READ_SPLIT-RELIF = SPACE.
BEINA-RELIF = '/'.                 "規定仕入先
ELSE.
BEINA-RELIF = WK_READ_SPLIT-RELIF. "規定仕入先
ENDIF.
BEINA-SENDE = '/'.      "ＢＤＣインターフェイス用レコード終了ﾌﾗｸﾞ

ENDFORM.                    " SET_BEINA

*&---------------------------------------------------------------------*
*&      Form  OUT_BEINA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM OUT_BEINA.
TRANSFER BEINA TO FNAMEOUT.
ENDFORM.                    " OUT_BEINA

*&---------------------------------------------------------------------*
*&      Form  SET_BEINE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_BEINE.
CLEAR BEINE.
BEINE-STYPE = '2'.  "ＢＤＣインターフェイスレコードタイプ
BEINE-TBNAM = 'EINE'.  "テーブル名
BEINE-LOEKZ = '/'.  "削除ﾌﾗｸﾞ
BEINE-IPRKZ = '/' .
IF WK_READ_SPLIT-EKGRP = SPACE.
BEINE-EKGRP = '/'.                 "購買グループ
ELSE.
BEINE-EKGRP = WK_READ_SPLIT-EKGRP. "購買グループ
ENDIF.
CASE WK_READ_SPLIT-KUBUN.
WHEN '1'.
IF WK_READ_SPLIT-WAERS = SPACE.
BEINE-WAERS = '/'.                  "通貨コード
ELSE.
BEINE-WAERS = WK_READ_SPLIT-WAERS.  "通貨コード
ENDIF.
WHEN '2'.
BEINE-WAERS = '/'.  "通貨コード
ENDCASE.
BEINE-BONUS = '/'.  "区分：取引量ﾘﾍﾞｰﾄ
BEINE-MGBON = '/'.  "区分：数量基準のリベート

IF WK_READ_SPLIT-MINBM = SPACE.
BEINE-MINBM = '/'.                 "最小発注数量
ELSE.
BEINE-MINBM = WK_READ_SPLIT-MINBM. "最小発注数量
ENDIF.
IF WK_READ_SPLIT-NORBM = SPACE.
BEINE-NORBM = '/'.                 "標準発注数量
ELSE.
BEINE-NORBM = WK_READ_SPLIT-NORBM. "標準発注数量
ENDIF.
IF WK_READ_SPLIT-APLFZ = SPACE.
BEINE-APLFZ = '/'.                 "計画出荷日時
ELSE.
BEINE-APLFZ = WK_READ_SPLIT-APLFZ. "計画出荷日時
ENDIF.
IF WK_READ_SPLIT-UEBTO = SPACE.
BEINE-UEBTO = '/'.                 "過剰納入許容限界値
ELSE.
BEINE-UEBTO = WK_READ_SPLIT-UEBTO. "過剰納入許容限界値
ENDIF.
IF WK_READ_SPLIT-UEBTK = SPACE.
BEINE-UEBTK = '/'.                 "区分：過剰納入無制限
ELSE.
BEINE-UEBTK = WK_READ_SPLIT-UEBTK. "区分：過剰納入無制限
ENDIF.
IF WK_READ_SPLIT-UNTTO = SPACE.
BEINE-UNTTO = '/'.                 "不足納入許容範囲
ELSE.
BEINE-UNTTO = WK_READ_SPLIT-UNTTO. "不足納入許容範囲
ENDIF.
IF WK_READ_SPLIT-ANGNR = SPACE.
BEINE-ANGNR = '/'.                 "見積番号
ELSE.
BEINE-ANGNR = WK_READ_SPLIT-ANGNR. "見積番号
ENDIF.
IF WK_READ_SPLIT-ANGDT = SPACE.
BEINE-ANGDT = '/'.                 "見積有効開始日
ELSE.
BEINE-ANGDT = WK_READ_SPLIT-ANGDT. "見積有効開始日
ENDIF.
CASE WK_READ_SPLIT-KUBUN.
WHEN '1'.
IF WK_READ_SPLIT-NETPR = SPACE.
BEINE-NETPR = '/'.                  "伝票通貨による正味価格
ELSE.
BEINE-NETPR = WK_READ_SPLIT-NETPR.  "伝票通貨による正味価格
ENDIF.
IF WK_READ_SPLIT-PEINH = SPACE.
BEINE-PEINH = '/'.                  "購買価格単位
ELSE.
BEINE-PEINH = WK_READ_SPLIT-PEINH.  "購買価格単位
ENDIF.
WHEN '2'.
BEINE-NETPR = '/'.  "伝票通貨による正味価格
BEINE-PEINH = '/'.  "購買価格単位
ENDCASE.
IF WK_READ_SPLIT-BPRME = SPACE.
BEINE-BPRME = '/'.                 "購買発注価格単位（購買）
ELSE.
BEINE-BPRME = WK_READ_SPLIT-BPRME. "購買発注価格単位（購買）
ENDIF.
BEINE-PRDAT = '/'.  "価格設定日

IF WK_READ_SPLIT-BPUMZ = SPACE.
BEINE-BPUMZ = '/'.                 "購買発注単位への変換分子
ELSE.
BEINE-BPUMZ = WK_READ_SPLIT-BPUMZ. "購買発注単位への変換分子
ENDIF.
IF WK_READ_SPLIT-BPUMN = SPACE.
BEINE-BPUMN = '/'.                 "購買発注単位への変換分母
ELSE.
BEINE-BPUMN = WK_READ_SPLIT-BPUMN. "購買発注単位への変換分母
ENDIF.
IF WK_READ_SPLIT-MTXNO = SPACE.
BEINE-MTXNO = '/'.                 "情報Text
ELSE.
BEINE-MTXNO = WK_READ_SPLIT-MTXNO. "情報Text
ENDIF.
IF WK_READ_SPLIT-WEBRE = SPACE.
BEINE-WEBRE = '/'.                 "区分：入庫基準の請求照合
ELSE.
BEINE-WEBRE = WK_READ_SPLIT-WEBRE. "区分：入庫基準の請求照合
ENDIF.
IF WK_READ_SPLIT-EKKOL = SPACE.
BEINE-EKKOL = '/'.                 "仕入先条件グループ
ELSE.
BEINE-EKKOL = WK_READ_SPLIT-EKKOL. "仕入先条件グループ
ENDIF.
IF WK_READ_SPLIT-SKTOF = SPACE.
BEINE-SKTOF = '/'.                 "現金値引対象外明細
ELSE.
BEINE-SKTOF = WK_READ_SPLIT-SKTOF. "現金値引対象外明細
ENDIF.
IF WK_READ_SPLIT-KZABS = SPACE.
BEINE-KZABS = '/'.                 "区分：購買発注請書必須
ELSE.
BEINE-KZABS = WK_READ_SPLIT-KZABS. "区分：購買発注請書必須
ENDIF.
IF WK_READ_SPLIT-MWSKZ = SPACE.
BEINE-MWSKZ = '/'.                 "税コード
ELSE.
BEINE-MWSKZ = WK_READ_SPLIT-MWSKZ. "税コード
ENDIF.
BEINE-BWTAR = '/'.  "評価タイプ
BEINE-EBONU = '/'.  "決済グループ１（購買）
IF WK_READ_SPLIT-EVERS = SPACE.
BEINE-EVERS = '/'.                 "出荷指示
ELSE.
BEINE-EVERS = WK_READ_SPLIT-EVERS. "出荷指示
ENDIF.
IF WK_READ_SPLIT-EXPRF = SPACE.
BEINE-EXPRF = '/'.                 "輸出手続きを個別に認識するコード
ELSE.
BEINE-EXPRF = WK_READ_SPLIT-EXPRF. "輸出手続きを個別に認識するコード
ENDIF.
IF WK_READ_SPLIT-BSTAE = SPACE.
BEINE-BSTAE = '/'.                 "確認管理キー
ELSE.
BEINE-BSTAE = WK_READ_SPLIT-BSTAE. "確認管理キー
ENDIF.
* IF WK_READ_SPLIT-MEPRF = SPACE.
*   BEINE-MEPRF = '/'.                 "価格設定日制御
BEINE-MEPRF = '1'.                 "価格設定日制御
* ELSE.
*   BEINE-MEPRF = WK_READ_SPLIT-MEPRF. "価格設定日制御
* ENDIF.
IF WK_READ_SPLIT-INCO1 = SPACE.
BEINE-INCO1 = '/'.                 "インコターム
ELSE.
BEINE-INCO1 = WK_READ_SPLIT-INCO1. "インコターム
ENDIF.
IF WK_READ_SPLIT-INCO2 = SPACE.
BEINE-INCO2 = '/'.                 "インコターム２
ELSE.
BEINE-INCO2 = WK_READ_SPLIT-INCO2. "インコターム２
ENDIF.
IF WK_READ_SPLIT-XERSN = SPACE.
BEINE-XERSN = '/'.                 "ＥＲＳ（自動入庫／請求決済）不可
ELSE.
BEINE-XERSN = WK_READ_SPLIT-XERSN. "ＥＲＳ（自動入庫／請求決済）不可
ENDIF.

BEINE-EBON2 = '/'.  "決済グループ２（購買）
BEINE-EBON3 = '/'.  "決済グループ３
BEINE-EBONF = '/'.  "期末リベート決済契約の対象外の明細
IF WK_READ_SPLIT-MHDRZ = SPACE.
BEINE-MHDRZ = '/'.                 "最小残存貯蔵寿命
ELSE.
BEINE-MHDRZ = WK_READ_SPLIT-MHDRZ. "最小残存貯蔵寿命
ENDIF.
BEINE-VERID = '/'.  "製造バージョン
BEINE-SENDE = '/'.  "ＢＤＣインターフェイス用レコード終了ﾌﾗｸﾞ
IF WK_READ_SPLIT-BSTMA = SPACE.
BEINE-BSTMA = '/'.                 "最大数量
ELSE.
BEINE-BSTMA = WK_READ_SPLIT-BSTMA. "最大数量
ENDIF.
IF WK_READ_SPLIT-RDPRF = SPACE.
BEINE-RDPRF = '/'.                 "丸めプロファイル
ELSE.
BEINE-RDPRF = WK_READ_SPLIT-RDPRF. "丸めプロファイル
ENDIF.
IF WK_READ_SPLIT-MEGRU = SPACE.
BEINE-MEGRU = '/'.                 "単位グループ
ELSE.
BEINE-MEGRU = WK_READ_SPLIT-MEGRU. "単位グループ
ENDIF.
BEINE-J_1BNBM = '/'.                 "NBM code(Brazil)

ENDFORM.                    " SET_BEINE
*&---------------------------------------------------------------------*
*&      Form  OUT_BEINE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM OUT_BEINE.
TRANSFER BEINE TO FNAMEOUT.
ENDFORM.                    " OUT_BEINE

*&---------------------------------------------------------------------*
*&      Form  SET_BKONP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_BKONP.
BKONP-STYPE = '2'.   "ＢＤＣインターフェイスレコードタイプ
BKONP-TBNAM = 'KONP'.  "テーブル名
* IF WK_READ_SPLIT-KSCHL = SPACE.
*    BKONP-KSCHL = 'PB00'.              "条件タイプ
* ELSE.
BKONP-KSCHL = WK_READ_SPLIT-KSCHL. "条件タイプ
* ENDIF.
IF WK_READ_SPLIT-KBETR = SPACE.
BKONP-KBETR = WK_READ_SPLIT-NETPR. "条件金額
ELSE.
BKONP-KBETR = WK_READ_SPLIT-KBETR. "条件金額
ENDIF.
BKONP-KONWA = '/'.                   "通貨コード
IF WK_READ_SPLIT-KPEIN = SPACE.
BKONP-KPEIN = '/'.                 "購買価格単位
ELSE.
BKONP-KPEIN = WK_READ_SPLIT-KPEIN. "購買価格単位
ENDIF.
IF WK_READ_SPLIT-KMEIN = SPACE.
BKONP-KMEIN = '/'.                 "条件単位
ELSE.
BKONP-KMEIN = WK_READ_SPLIT-KMEIN. "条件単位
ENDIF.
BKONP-LIFNR = '/'.   "仕入先の勘定コード
IF WK_READ_SPLIT-DATAB = SPACE.
BKONP-DATAB = '/'.                 "条件の有効開始日
ELSE.
BKONP-DATAB = WK_READ_SPLIT-DATAB. "条件の有効開始日
ENDIF.
IF WK_READ_SPLIT-DATBI = SPACE.
BKONP-DATBI = '/'.                 "条件の有効終了日
ELSE.
BKONP-DATBI = WK_READ_SPLIT-DATBI. "条件の有効終了日
ENDIF.
IF WK_READ_SPLIT-MXWRT = SPACE.
BKONP-MXWRT = '/'.                 "条件の下限金額
ELSE.
BKONP-MXWRT = WK_READ_SPLIT-MXWRT. "条件の下限金額
ENDIF.
IF WK_READ_SPLIT-GKWRT = SPACE.
BKONP-GKWRT = '/'.                 "条件額の条件
ELSE.
BKONP-GKWRT = WK_READ_SPLIT-GKWRT. "条件額の条件
ENDIF.
IF WK_READ_SPLIT-STFKZ = SPACE.
BKONP-STFKZ = '/'.                 "スケールタイプ
ELSE.
BKONP-STFKZ = WK_READ_SPLIT-STFKZ. "スケールタイプ
ENDIF.
IF WK_READ_SPLIT-KZNEP = SPACE.
BKONP-KZNEP = '/'.                 "条件除外区分
ELSE.
BKONP-KZNEP = WK_READ_SPLIT-KZNEP. "条件除外区分
ENDIF.
BKONP-EIGKO = 'X'.  "ﾕｰｻﾞｰ定義の条件マスタ
BKONP-MEBME = '/'.  "条件購買発注単位

ENDFORM.                    " SET_BKONP
*&---------------------------------------------------------------------*
*&      Form  OUT_BKONP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM OUT_BKONP.
TRANSFER BKONP TO FNAMEOUT.
ENDFORM.                    " OUT_BKONP

*&---------------------------------------------------------------------*
*&      Form  SET_BKONM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_BKONM.
DATA: LT_KONM TYPE TABLE OF KONM,
LW_KONM TYPE KONM.

SELECT *
INTO TABLE LT_KONM
FROM KONM
WHERE KNUMH = WK_READ_SPLIT-KNUMH.

IF SY-SUBRC <> 0.
EXIT.
ENDIF.

LOOP AT LT_KONM INTO LW_KONM.

BKONM-STYPE = '2'.           "ＢＤＣインターフェイスレコードタイプ
BKONM-TBNAM = 'KONM'.                "テーブル名
BKONM-KSCHL = WK_READ_SPLIT-KSCHL.   "条件タイプ

BKONM-KSTBM = LW_KONM-KSTBM.         "スケール数量
WRITE LW_KONM-KBETR TO BKONM-KBETR   "金額/率
CURRENCY WK_READ_SPLIT-KONWA.

PERFORM OUT_BKONM. "構造BKONM出力

ENDLOOP.

ENDFORM.                    " SET_BKONM
*&---------------------------------------------------------------------*
*&      Form  OUT_BKONM
*&---------------------------------------------------------------------*
FORM OUT_BKONM.
TRANSFER BKONM TO FNAMEOUT.
ENDFORM.                    " OUT_BKONM
*---------------------------------------------------------------------*
*       FORM Data_Get                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM DATA_GET .
* 2010/03/03 DELETED START
*--パフォーマンス考慮
*  DATA :  BEGIN OF T_A017 OCCURS 1 ,
*            KSCHL LIKE A017-KSCHL ,
*            LIFNR LIKE A017-LIFNR ,
*            MATNR LIKE A017-MATNR ,
*            WERKS LIKE A017-WERKS ,
*            DATBI LIKE A017-DATBI ,
*            DATAB LIKE A017-DATAB ,
*            KNUMH LIKE A017-KNUMH ,
*          END OF T_A017 ,
*          BEGIN OF T_KONP OCCURS 1 ,
*            KNUMH LIKE KONP-KNUMH ,
*            KOPOS LIKE KONP-KOPOS ,
*            KBETR LIKE KONP-KBETR ,
*            KONWA LIKE KONP-KONWA ,
*            KPEIN LIKE KONP-KPEIN ,
*            KMEIN LIKE KONP-KMEIN ,
*          END OF T_KONP ,
* 2010/03/03 DELETED END
* 2010/03/03 APPEND START
TYPES:  BEGIN OF T_A017,
LIFNR TYPE A017-LIFNR ,"読み込みキー
MATNR TYPE A017-MATNR ,"読み込みキー
WERKS TYPE A017-WERKS ,"読み込みキー
KAPPL TYPE A017-KAPPL ,
KSCHL TYPE A017-KSCHL ,
ESOKZ TYPE A017-ESOKZ ,
EKORG TYPE A017-EKORG ,
DATBI TYPE A017-DATBI ,
DATAB TYPE A017-DATAB ,
KNUMH TYPE A017-KNUMH ,
END OF T_A017 ,
BEGIN OF T_KONP ,
KNUMH TYPE KONP-KNUMH ,
KOPOS TYPE KONP-KOPOS ,
KBETR TYPE KONP-KBETR ,
KONWA TYPE KONP-KONWA ,
KPEIN TYPE KONP-KPEIN ,
KMEIN TYPE KONP-KMEIN ,
END OF T_KONP ,
BEGIN OF T_EIN,
MATNR TYPE EINA-MATNR,
WERKS TYPE EINE-WERKS,
MWSKZ TYPE EINE-MWSKZ,
EKORG TYPE EINE-EKORG,
ESOKZ TYPE EINE-ESOKZ,
EVERS TYPE EINE-EVERS,
LIFNR TYPE EINA-LIFNR,
END OF T_EIN.

DATA:LT_A017 TYPE SORTED TABLE OF T_A017
WITH UNIQUE KEY LIFNR MATNR WERKS ESOKZ
KAPPL KSCHL EKORG DATBI,
LW_A017     TYPE T_A017,
LT_KONP     TYPE SORTED TABLE OF T_KONP
WITH UNIQUE KEY KNUMH KOPOS,
LW_KONP     TYPE T_KONP,
LW_KONP_MAX TYPE T_KONP, "最大
LT_EIN      TYPE SORTED TABLE OF T_EIN
WITH NON-UNIQUE KEY MATNR WERKS,
LW_EIN      TYPE T_EIN,
* 2010/03/03 APPEND END
W_SEI(10) TYPE N ,
W_SHO(3) TYPE N .
* 2010/03/03 APPEND START
*-- 初期化処理追加
REFRESH:WK_READ_SPLIT,LT_A017,LT_KONP,LT_EIN.
CLEAR:LW_A017,LW_KONP,G_ERR_CNT.
* 2010/03/03 APPEND END

* 2010/03/03 MODIFY START
*--入力ファイルの内容で一括取得
*  CLEAR WK_READ_SPLIT.
*  SELECT EINE~MWSKZ EINE~EKORG EINE~ESOKZ
*        EINE~WERKS EINE~EVERS EINA~MATNR EINA~LIFNR
*           FROM EINE INNER JOIN EINA
*             ON EINE~INFNR = EINA~INFNR
*      INTO CORRESPONDING FIELDS OF TABLE WK_READ_SPLIT
*      WHERE WERKS EQ I_WERKS
*      AND  MATNR IN S_MATNR.
*  IF SY-SUBRC <> 0.
*    MESSAGE S606. STOP.
*  ENDIF.
SELECT EINA~MATNR EINE~WERKS
EINE~MWSKZ EINE~EKORG EINE~ESOKZ
EINE~EVERS EINA~LIFNR
FROM EINE INNER JOIN EINA
ON EINE~INFNR = EINA~INFNR
INTO TABLE LT_EIN
FOR ALL ENTRIES IN GT_INFILE
WHERE WERKS = GT_INFILE-WERKS_OLD "旧プラント
AND MATNR = GT_INFILE-MATNR.
* 2010/03/03 MODIFY  END

* 2010/03/03 APPEND START
IF NOT LT_EIN[] IS INITIAL. "EINAデータがある場合のみ実行
* 2010/03/03 APPEND END
SELECT * FROM A017
* 2010/03/03 MODIFY START
*--内部テーブル変更
*       INTO CORRESPONDING FIELDS OF TABLE T_A017
*        FOR ALL ENTRIES IN WK_READ_SPLIT
*       WHERE LIFNR EQ WK_READ_SPLIT-LIFNR
*        AND  MATNR EQ WK_READ_SPLIT-MATNR
*        AND  WERKS EQ WK_READ_SPLIT-WERKS
INTO CORRESPONDING FIELDS OF TABLE LT_A017
FOR ALL ENTRIES IN LT_EIN
WHERE LIFNR EQ LT_EIN-LIFNR
AND  MATNR EQ LT_EIN-MATNR
AND  WERKS EQ LT_EIN-WERKS
* 2010/03/03 MODIFY  END
AND  KSCHL EQ 'ZPB1'.
* 2010/03/03 DELETED START
** 有効開始終了の追加
*        AND  DATBI > P_DATE
*        AND  DATAB < P_DATE.
* 2010/03/03 DELETED END
IF SY-SUBRC = 0.
* 2010/03/03 MODIFY START
*--内部テーブル変更
*       SELECT * FROM KONP
*         INTO CORRESPONDING FIELDS OF TABLE T_KONP
*       FOR ALL ENTRIES IN T_A017
*       WHERE KNUMH EQ  T_A017-KNUMH.
*      SORT T_KONP BY KNUMH KOPOS DESCENDING.
SELECT KNUMH KOPOS KBETR KONWA KPEIN KMEIN
FROM KONP
INTO TABLE LT_KONP
FOR ALL ENTRIES IN LT_A017
WHERE KNUMH EQ  LT_A017-KNUMH.
* 2010/03/03 MODIFY  END
ENDIF.
* 2010/03/03 APPEND START
ENDIF.
* 2010/03/03 APPEND END

* 2010/03/03 MODIFY START
*--ループする内部テーブルを変更
*  LOOP AT WK_READ_SPLIT .
LOOP AT GT_INFILE INTO GW_INFILE.
*   初期化
CLEAR:WK_READ_SPLIT,LW_KONP,LW_A017,LW_EIN.
G_ERR_FLG = 'X'.                            "ループ前にエラーON

LOOP AT LT_EIN INTO LW_EIN WHERE MATNR = GW_INFILE-MATNR
AND WERKS = GW_INFILE-WERKS_OLD.
MOVE-CORRESPONDING : LW_EIN TO WK_READ_SPLIT .
CLEAR G_ERR_FLG.                          "読めたのでエラーOFF
* 2010/03/03 MODIFY  END
* 2010/03/03 MODIFY START
*--READ内部テーブルを変更
*      READ TABLE : T_A017 WITH KEY LIFNR = WK_READ_SPLIT-LIFNR
*                                   MATNR = WK_READ_SPLIT-MATNR
*                                   WERKS = WK_READ_SPLIT-WERKS .
*      MOVE-CORRESPONDING : T_A017 TO WK_READ_SPLIT .
LOOP AT LT_A017 INTO LW_A017
WHERE LIFNR = WK_READ_SPLIT-LIFNR
AND MATNR = WK_READ_SPLIT-MATNR
AND WERKS = WK_READ_SPLIT-WERKS
AND DATBI > GW_INFILE-DATUM
AND DATAB < GW_INFILE-DATUM.
MOVE-CORRESPONDING : LW_A017 TO WK_READ_SPLIT .
EXIT.              "最初に見つかった1件だけでOK
ENDLOOP.
* 2010/03/03 MODIFY  END
* 2010/03/03 MODIFY START
*--LOOP内部テーブルを変更
*      LOOP AT T_KONP WHERE KNUMH EQ T_A017-KNUMH .
*        PERFORM CURRENCY_CONVERT USING T_KONP-KONWA
*                              CHANGING T_KONP-KBETR .
*        MOVE-CORRESPONDING : T_KONP TO WK_READ_SPLIT .
*        SPLIT WK_READ_SPLIT-KBETR AT '.'
*                                 INTO W_SEI W_SHO .
*        IF W_SHO EQ 0 .
*          MOVE W_SEI TO WK_READ_SPLIT-KBETR .
*        ENDIF .
*        EXIT .
*      ENDLOOP .
*      CLEAR : T_A017 , T_KONP .
*      MOVE : '1'     TO WK_READ_SPLIT-KUBUN ,
*             P_WERKS TO WK_READ_SPLIT-WERKS ,
*             P_EKGRP TO WK_READ_SPLIT-EKGRP ,
*             'ZPB1'  TO WK_READ_SPLIT-KSCHL .
* 伝票条件・条件連続番号で最後
CLEAR:LW_KONP_MAX.
LOOP AT LT_KONP INTO LW_KONP
WHERE KNUMH EQ LW_A017-KNUMH .
IF LW_KONP_MAX-KOPOS < LW_KONP-KOPOS.
LW_KONP_MAX = LW_KONP.
ENDIF.
ENDLOOP .

PERFORM CURRENCY_CONVERT USING LW_KONP_MAX-KONWA
CHANGING LW_KONP_MAX-KBETR .
MOVE-CORRESPONDING : LW_KONP_MAX TO WK_READ_SPLIT .

CLEAR:W_SEI,W_SHO.
SPLIT WK_READ_SPLIT-KBETR AT '.'
INTO W_SEI W_SHO .
IF W_SHO EQ 0 .
MOVE W_SEI TO WK_READ_SPLIT-KBETR .
ENDIF .

CLEAR : LW_A017 , LW_KONP .
MOVE : '1'                 TO WK_READ_SPLIT-KUBUN ,
GW_INFILE-WERKS_NEW TO WK_READ_SPLIT-WERKS ,
GW_INFILE-EKGRP     TO WK_READ_SPLIT-EKGRP ,
'ZPB1'              TO WK_READ_SPLIT-KSCHL .
* 2010/03/03 MODIFY  END
PERFORM TANI_CONVERT CHANGING :WK_READ_SPLIT-KMEIN ,
WK_READ_SPLIT-MEINS .

* 2010/03/03 MODIFY START
*      MODIFY : WK_READ_SPLIT .
APPEND WK_READ_SPLIT.
ENDLOOP.
IF G_ERR_FLG = 'X'.
IF G_ERR_CNT IS INITIAL. "エラー初回
WRITE:/01 TEXT-006.   "未登録品目/プラントリスト
ENDIF.
WRITE:/01 GW_INFILE-MATNR,
20 GW_INFILE-WERKS_OLD.
G_ERR_CNT = G_ERR_CNT + 1.
ENDIF.
* 2010/03/03 MODIFY  END
ENDLOOP .
* 2010/03/03 APPEND START
FREE GT_INFILE.
* 2010/03/03 APPEND END
ENDFORM .                    "DATA_GET

*---------------------------------------------------------------------*
*       FORM Currency_Convert                                         *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  P_TANI                                                        *
*  -->  P_SUTI                                                        *
*---------------------------------------------------------------------*
FORM CURRENCY_CONVERT USING  P_TANI
CHANGING P_SUTI .
DATA: W_ATAIF(15),                   "フル桁の値
*      w_dec5(12) type p decimals 5,      "単価
W_SYO  LIKE TCURX-CURRDEC.     "少数桁数
*  call function 'CURRENCY_AMOUNT_SAP_TO_IDOC'
*        exporting
*             currency    = p_tani
*           sap_amount  = p_suti
*      importing
*           idoc_amount = w_dec5
*      exceptions
*           others      = 1.
CALL FUNCTION 'FWOS_CURRENCY_DECIMALS_READ'
EXPORTING
I_CURRENCY = P_TANI
IMPORTING
E_DECIMALS = W_SYO
EXCEPTIONS
OTHERS     = 1.
*write w_dec5 decimals w_syo to P_SUTI.
*condense P_SUTI no-gaps.
*
P_SUTI = P_SUTI * ( 10 ** ( 2 - W_SYO ) ) .

ENDFORM.                    "CURRENCY_CONVERT

*---------------------------------------------------------------------*
*       FORM Read_File                                                *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM READ_FILE .
* 2010/03/03 APPEND START
*  DATA : L_LINE(20) TYPE C ,
DATA : L_LINE(100) TYPE C ,
* 2010/03/03 APPEND END
NO_DATA(1) TYPE C VALUE 'X' .
* 2010/03/03 APPEND START

* Add ES-UP 2012/08/22 -->
****START DEL 2014/08/29 ISID18****
*  CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
*  DATA L_CODEPAGE TYPE CPCODEPAGE.
****END DEL 2014/08/29 ISID18****
* Add ES-UP 2012/08/22 <--

*-- 初期化
REFRESH:GT_INFILE.
CLEAR:  G_IN_CNT.
* 2010/03/03 APPEND END

* Mod ES-UP 2012/08/22 -->
*  OPEN DATASET FNAMEIN FOR INPUT IN TEXT MODE .
****START DEL 2014/08/29 ISID18****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
****END DEL 2014/08/29 ISID18****

**** START ADD 2015/02/04 ISID18 ****
IF G_FLGUTF8 IS INITIAL.
TRY.
OPEN DATASET FNAMEIN FOR INPUT
IN LEGACY TEXT MODE CODE PAGE G_CODEPAGE
IGNORING CONVERSION ERRORS.
CATCH CX_SY_CODEPAGE_CONVERTER_INIT.
SY-SUBRC = 8.
ENDTRY.
ELSE.
**** END ADD 2015/02/04 ISID18 ****
OPEN DATASET FNAMEIN FOR INPUT
**** START UPD 2014/08/31 ISID19 ****
*    IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IN TEXT MODE ENCODING UTF-8
**** END UPD 2014/08/31 ISID19 ****
**** START ADD 2015/01/08 ISID11 ****
SKIPPING BYTE-ORDER MARK
**** END ADD 2015/01/08 ISID11 ****
IGNORING CONVERSION ERRORS.
**** START ADD 2015/02/04 ISID18 ****
ENDIF.
**** END ADD 2015/02/04 ISID18 ****

* Mod ES-UP 2012/08/22 <--
IF SY-SUBRC NE 0 .
MESSAGE I668 .
STOP .
ENDIF .
DO .
READ DATASET FNAMEIN INTO L_LINE .
IF  SY-SUBRC NE 0 .
EXIT .
ENDIF .
* 2010/03/03 DELETED START
*    MOVE : L_LINE TO S_MATNR-LOW ,
*           'EQ'   TO S_MATNR-OPTION ,
*           'I'    TO S_MATNR-SIGN .
*    APPEND S_MATNR .
* 2010/03/03 DELETED END
* 2010/03/03 APPEND START
*-- 入力ファイルを内部テーブルに格納
CLEAR:GW_INFILE.
SPLIT L_LINE AT W_TAB INTO
GW_INFILE-MATNR
GW_INFILE-WERKS_OLD
GW_INFILE-WERKS_NEW
GW_INFILE-EKGRP
GW_INFILE-DATUM
GW_INFILE-DUMMY.
* Mod GSL Tohtake 2012/12/14 -->
CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
EXPORTING
INPUT  = GW_INFILE-MATNR
IMPORTING
OUTPUT = GW_INFILE-MATNR.
* Mod GSL Tohtake 2012/12/14 <--
APPEND GW_INFILE TO GT_INFILE.
* 2010/03/03 APPEND END
CLEAR : L_LINE ,NO_DATA .
ENDDO .
CLOSE DATASET FNAMEIN .
IF NO_DATA EQ 'X' .
MESSAGE I204 .
STOP .
ENDIF .
* 2010/03/03 APPEND START
DESCRIBE TABLE GT_INFILE LINES G_IN_CNT.
* 2010/03/03 APPEND END
ENDFORM .                    "READ_FILE

*---------------------------------------------------------------------*
*       FORM Tani_Convert                                             *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  P_TANI                                                        *
*---------------------------------------------------------------------*
FORM TANI_CONVERT CHANGING P_TANI .
CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
EXPORTING
INPUT          = P_TANI
LANGUAGE       = SY-LANGU
IMPORTING
*     LONG_TEXT      =
OUTPUT         = P_TANI
*     SHORT_TEXT     =
EXCEPTIONS
UNIT_NOT_FOUND = 1
OTHERS         = 2.
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.


ENDFORM .                    "TANI_CONVERT
**** START ADD 2015/02/04 ISID18 ****
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_CPAGE
*&---------------------------------------------------------------------*
*       コードページ取得
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_GET_CPAGE .

CLEAR:
G_OUTPUT_CP,
G_FLGUTF8.

CALL FUNCTION 'ZEG_ZZ_GLOBAL_PGM_CONFIG_GET'
EXPORTING
IMPPGM      = SY-REPID
IMPBUKRS    = TEXT-007
IMPORTING
EXPCODEPAGE = G_OUTPUT_CP
EXPFLGUTF8  = G_FLGUTF8.

ENDFORM.                    " FRM_GET_CPAGE
**** END ADD 2015/02/04 ISID18 ****
