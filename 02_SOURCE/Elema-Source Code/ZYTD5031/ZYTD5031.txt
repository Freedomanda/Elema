*&-------------------------------------------------------------------
*& Report  ZYTD5031
*&-------------------------------------------------------------------
* [プログラム名]
*   ZYTD5031        仕入単価更新プログラム
* [処理概要]
* [改定履歴]
*  2012/08/22   ISID              ES-UP
*  2014/08/31   ISID19            コードページを"UTF-8"に修正
*& 2014/09/09   ISID19            グローバル化対応
*& 2015/01/13   ISID11            アップロード時のBOMロジック改修
*& 2015/02/04   ISID11            コードページ処理の再修正
*& 2015/05/20   ISID17            BDC日付書式とチェック時点
*&-------------------------------------------------------------------
REPORT ZYTD5031     MESSAGE-ID Y1
LINE-SIZE 170
LINE-COUNT 68 .
TABLES : EINA , EINE .

TYPES : BEGIN OF TYP_INPUT ,
KSCHL LIKE A017-KSCHL ,
LIFNR LIKE A017-LIFNR ,
MATNR LIKE A017-MATNR ,
EKORG LIKE A017-EKORG ,
WERKS LIKE A017-WERKS ,
ESOKZ LIKE A017-ESOKZ ,
DATBI LIKE A017-DATBI ,
DATAB LIKE A017-DATAB ,
*          KBETR Like KONP-KBETR ,
KBETR(10) TYPE C      ,
KONWA LIKE KONP-KONWA ,
*          KPEIN Like KONP-KPEIN ,
KPEIN(5) TYPE C       ,
KMEIN LIKE KONP-KMEIN ,
END OF TYP_INPUT .

DATA : WRK TYPE TYP_INPUT ,
TAB TYPE TABLE OF TYP_INPUT ,
W_FIRST(1) TYPE C ,
BDC_TAB TYPE TABLE OF BDCDATA WITH HEADER LINE ,
BDC_MSG TYPE TABLE OF BDCMSGCOLL WITH HEADER LINE ,
W_MODE(1) TYPE C VALUE 'N' .

* Mod ES-UP 2012/08/22 -->
*Constants : W_TAB Type X Value '09' .
CONSTANTS: W_TAB TYPE STRING VALUE
CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/22 <--

**** START ADD 2014/09/09 ISID19 ****
PARAMETERS : P_BUKRS  TYPE T001-BUKRS OBLIGATORY.
**** END ADD 2014/09/09 ISID19 ****

PARAMETERS : P_TEST AS CHECKBOX ,
IN_FILE(128) TYPE C .

PARAMETERS : P_KSCHL  LIKE A017-KSCHL  DEFAULT 'ZPB1' .

**** START ADD 2014/09/09 ISID19 ****
************************************************************************
* INITIALIZATION
************************************************************************
INITIALIZATION .
GET PARAMETER ID 'BUK' FIELD P_BUKRS.

************************************************************************
*  AT SELECTION-SCREEN.
************************************************************************
AT SELECTION-SCREEN.
PERFORM CHK_PRC.
**** END ADD 2014/09/09 ISID19 ****

START-OF-SELECTION .

PERFORM READ_FILE .
*Perform BDC_GoGo .

FORM READ_FILE .
* Mod ES-UP 2012/10/24 -->
*  Data : IN_LINE(300) Type C ,
DATA : IN_LINE TYPE STRING,

**** START ADD 2014/09/09 ISID19 ****
LW_MESSAGE TYPE STRING,
LW_FLAG    TYPE C,
LW_SUBRC   TYPE SY-SUBRC,
**** END ADD 2014/09/09 ISID19 ****
**** START ADD 2015/02/04 ISID11 ****
LW_Z_OUTPUT_CP TYPE  ZTEGZZM001-Z_OUTPUT_CP,
LW_SAPCODEPAGE TYPE STRING,
LW_FLGUTF8  TYPE FLAG,
LW_CODEPAGE TYPE ABAP_ENCODING,
**** END ADD 2015/02/04 ISID11 ****
* Mod ES-UP 2012/10/24 <--
DUMMY(10) TYPE C .
* Mod ES-UP 2012/08/22 -->

****START DEL 2014/08/31 ISID19****
*  CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
*  DATA L_CODEPAGE TYPE CPCODEPAGE.
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
****END DEL 2014/08/31 ISID19****

* Mod ES-UP 2012/08/22 <--
MOVE 'X' TO W_FIRST .
* Mod ES-UP 2012/08/22 -->
**** START ADD 2015/02/04 ISID11 ****
CALL FUNCTION 'ZEG_ZZ_GLOBAL_PGM_CONFIG_GET'
EXPORTING
IMPPGM      = SY-REPID
IMPBUKRS    = P_BUKRS
IMPORTING
EXPCODEPAGE = LW_Z_OUTPUT_CP
EXPFLGUTF8  = LW_FLGUTF8.
**** END ADD 2015/02/04 ISID11 ****
****START UPD 2014/08/31 ISID19****
*  Open DataSet IN_FILE For Input In Text Mode .
*  OPEN DATASET IN_FILE FOR INPUT
*    IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
*    IGNORING CONVERSION ERRORS.
**** START ADD 2015/02/04 ISID11 ****
IF LW_FLGUTF8 IS INITIAL.

LW_SAPCODEPAGE = LW_Z_OUTPUT_CP.
IF LW_SAPCODEPAGE IS NOT INITIAL.

LW_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( LW_SAPCODEPAGE ).

ENDIF.
TRY .
OPEN DATASET IN_FILE FOR INPUT
IN LEGACY TEXT MODE CODE PAGE LW_CODEPAGE
IGNORING CONVERSION ERRORS.

LW_SUBRC = SY-SUBRC.

CATCH CX_SY_CODEPAGE_CONVERTER_INIT.

LW_SUBRC = 8.

ENDTRY.

ELSE.
**** END ADD 2015/02/04 ISID11 ****
OPEN DATASET IN_FILE FOR INPUT IN TEXT MODE ENCODING UTF-8
**** START ADD 2015/01/13 ISID11 ****
SKIPPING BYTE-ORDER MARK
**** END ADD 2015/01/13 ISID11 ****
IGNORING CONVERSION ERRORS.
****END UPD 2014/08/31 ISID19****
**** START ADD 2015/02/04 ISID11 ****
LW_SUBRC = SY-SUBRC.

ENDIF.
**** END ADD 2015/02/04 ISID11 ****
* Mod ES-UP 2012/08/22 <--
**** START UPD 2015/02/04 ISID11 ****
*  IF SY-SUBRC NE  0 .
IF LW_SUBRC NE  0 .
**** END UPD 2015/02/04 ISID11 ****
MESSAGE I209 .
STOP .
ENDIF .
**** START ADD 2015/02/04 ISID11 ****
CLEAR LW_SUBRC.
**** END ADD 2015/02/04 ISID11 ****
DO .
READ DATASET IN_FILE INTO IN_LINE  .
IF SY-SUBRC NE 0 .
EXIT .
ENDIF .

**** START ADD 2014/09/09 ISID19 ****
CLEAR : WRK ,
W_FIRST,
LW_FLAG,
LW_SUBRC.
**** END ADD 2014/09/09 ISID19 **

CLEAR : DUMMY .
SPLIT IN_LINE
AT  W_TAB
INTO WRK-LIFNR
WRK-WERKS
DUMMY
WRK-MATNR
WRK-KONWA
WRK-KBETR
WRK-KPEIN
WRK-DATAB
WRK-DATBI.

MOVE : P_KSCHL TO WRK-KSCHL .
*           '1000' To WRK-EKORG ,
*           '0'    To WRK-ESOKZ .
IF DUMMY IS INITIAL .
PERFORM MATN_CONV USING WRK-MATNR .
PERFORM ALPHA_CONV USING WRK-LIFNR .
SELECT SINGLE INFNR FROM EINA
INTO DUMMY
WHERE MATNR EQ WRK-MATNR
AND  LIFNR EQ WRK-LIFNR
.
ENDIF .

**** START ADD 2014/09/09 ISID19 ****
*   プラントチェック
IF WRK-WERKS IS NOT INITIAL.
PERFORM FRM_CHE_WERKS USING WRK-WERKS
CHANGING LW_FLAG.
IF LW_FLAG = 'X'.
CONTINUE.
ENDIF.
**** END ADD 2014/09/09 ISID19 ****

SELECT EKORG ESOKZ
FROM EINE
INTO CORRESPONDING FIELDS OF WRK
WHERE WERKS EQ WRK-WERKS
AND  INFNR EQ DUMMY.
EXIT .
ENDSELECT .

**** START ADD 2014/09/09 ISID19 ****
LW_SUBRC = SY-SUBRC.
ENDIF.
**** END ADD 2014/09/09 ISID19 ****

**** START UPD 2014/09/09 ISID19 ****
*    IF SY-SUBRC NE 0 .
*       Write :/ '購買情報' ,  DUMMY , 'が登録されていません。'  .
IF   LW_SUBRC NE 0
OR WRK-WERKS IS INITIAL.
MESSAGE S109(Z3) WITH DUMMY  INTO LW_MESSAGE.
*   購買情報&1が登録されていません。
WRITE :/ LW_MESSAGE.
**** END UPD 2014/09/09 ISID19 ****

ELSE .
*      Append WRK To TAB .
PERFORM BDC_GOGO .
ENDIF .

**** START DEL 2014/09/09 ISID19 ****
*    CLEAR : WRK , W_FIRST .
**** END DEL 2014/09/09 ISID19 ****

ENDDO .
IF W_FIRST EQ  'X' .
MESSAGE I204 .
STOP .
ENDIF .
CLOSE DATASET IN_FILE .
ENDFORM .                    "Read_File

*&---------------------------------------------------------------------*
*&      Form  BDC_GoGo
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM BDC_GOGO.
**** START ADD BY ISID17 2015/05/20 ****
DATA: LW_DATAB TYPE CHAR10,
LW_DATBI TYPE CHAR10.

WRITE WRK-DATAB TO LW_DATAB.
WRITE WRK-DATBI TO LW_DATBI.
**** END ADD BY ISID17 2015/05/20 ****

*  Loop At TAB Into WRK .
PERFORM SET_BDC USING : 'SAPMV13A' '0100' 'X' ,
'BDC_OKCODE' '/00' '' ,
'BDC_CURSOR' 'RV13A-KOTABNR' '' ,
'RV130-KAPPL' 'M'  '' ,
'RV13A-KSCHL' WRK-KSCHL '' ,
'RV13A-KOTABNR' '017' '' ,
'SAPMV13A' '1017' 'X' ,
'BDC_CURSOR' 'RV13A-DATBI(01)' '' ,
'BDC_OKCODE' '/00' '' ,
'KOMG-LIFNR' WRK-LIFNR '' ,
'KOMG-MATNR' WRK-MATNR '' ,
'KOMG-EKORG' WRK-EKORG '' ,
'KOMG-WERKS' WRK-WERKS '' ,
'KONP-KBETR(01)' WRK-KBETR '' ,
'KONP-KONWA(01)' WRK-KONWA '' ,
'KONP-KPEIN(01)' WRK-KPEIN '' ,
*                            'KONP-KMEIN(01)' WRK-KMEIN '' ,
**** START ADD BY ISID17 2015/05/20 ****
*                          'RV13A-DATAB(01)' WRK-DATAB '' ,
*                          'RV13A-DATBI(01)' WRK-DATBI '' ,
'RV13A-DATAB(01)' LW_DATAB '' ,
'RV13A-DATBI(01)' LW_DATBI '' ,
**** END ADD BY ISID17 2015/05/20 ****
'KOMG-ESOKZ(01)' WRK-ESOKZ '' ,
'SAPMV13A' '1017'  'X' ,
'BDC_CURSOR' 'KOMG-ESOKZ(01)' '' ,
'BDC_OKCODE' '=SICH' '' .
**** START UPD 2014/09/09 ISID19 ****
*  MESSAGE S401 WITH : '仕入先' WRK-LIFNR ,
*                      '品目' WRK-MATNR ,
*                      'プラント' WRK-WERKS ,
*                      '単価' WRK-KBETR .
MESSAGE S401 WITH : TEXT-003 WRK-LIFNR ,
TEXT-004 WRK-MATNR ,
TEXT-005 WRK-WERKS ,
TEXT-006 WRK-KBETR .
**** END UPD 2014/09/09 ISID19 ****
WRITE AT :/01  WRK-LIFNR ,
13  WRK-MATNR ,
35  WRK-WERKS ,
42  WRK-KBETR ,
57  WRK-KONWA ,
63  WRK-KPEIN ,
72  WRK-DATAB ,
83  WRK-DATBI .


IF P_TEST NE 'X' .
PERFORM CALL_TRAN USING 'XK15' .
ENDIF .
CLEAR : WRK .
*  EndLoop .
ENDFORM .                    "BDC_GoGo

*&---------------------------------------------------------------------*
*&      Form  Write_List
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM WRITE_LIST .
ENDFORM .                    "Write_List

*&---------------------------------------------------------------------*
*&      Form  Set_BDC
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_DAT      text
*      -->P_VAL      text
*      -->P_FLG      text
*----------------------------------------------------------------------*
FORM SET_BDC USING P_DAT P_VAL P_FLG .
MOVE : P_FLG TO BDC_TAB-DYNBEGIN .
IF P_FLG EQ 'X' .
MOVE : P_DAT TO BDC_TAB-PROGRAM ,
P_VAL TO BDC_TAB-DYNPRO .
ELSE .
MOVE : P_DAT TO BDC_TAB-FNAM ,
P_VAL TO BDC_TAB-FVAL .
ENDIF .
APPEND : BDC_TAB .
CLEAR : BDC_TAB .
ENDFORM .                    "Set_BDC

*&---------------------------------------------------------------------*
*&      Form  Call_Tran
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_TRCD     text
*----------------------------------------------------------------------*
FORM CALL_TRAN USING P_TRCD .
DATA : W_MSG LIKE MESSAGE ,
W_MSGNO LIKE SY-MSGNO .
CALL TRANSACTION P_TRCD
USING   BDC_TAB
MODE    W_MODE
MESSAGES INTO    BDC_MSG

.
LOOP AT BDC_MSG .
MOVE : BDC_MSG-MSGNR TO W_MSGNO .
CALL FUNCTION 'WRITE_MESSAGE'
EXPORTING
MSGID = BDC_MSG-MSGID
MSGNO = W_MSGNO
MSGTY = BDC_MSG-MSGTYP
MSGV1 = BDC_MSG-MSGV1
MSGV2 = BDC_MSG-MSGV2
MSGV3 = BDC_MSG-MSGV3
MSGV4 = BDC_MSG-MSGV4
*       MSGV5 = BDC_MSG-MSGV5
IMPORTING
*       ERROR =
MESSG = W_MSG
*       MSGLN =
.
MESSAGE ID BDC_MSG-MSGID
TYPE 'S'
NUMBER W_MSGNO
WITH BDC_MSG-MSGV1
BDC_MSG-MSGV2
BDC_MSG-MSGV3
BDC_MSG-MSGV4
.
WRITE / W_MSG .
ENDLOOP .

REFRESH : BDC_TAB , BDC_MSG .

ENDFORM .                    "Call_Tran

*&---------------------------------------------------------------------*
*&      Form  matn_conv
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->VALUE      text
*----------------------------------------------------------------------*
FORM MATN_CONV USING VALUE .
CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
EXPORTING
INPUT        = VALUE
IMPORTING
OUTPUT       = VALUE
EXCEPTIONS
LENGTH_ERROR = 1
OTHERS       = 2.
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM .                    "matn_conv


*&---------------------------------------------------------------------*
*&      Form  alpha_conv
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->VALUE      text
*----------------------------------------------------------------------*
FORM ALPHA_CONV USING VALUE .

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT  = VALUE
IMPORTING
OUTPUT = VALUE.

ENDFORM .                    "alpha_conv

**** START ADD 2014/09/09 ISID19 ****
*&---------------------------------------------------------------------*
*&      Form  CHK_PRC
*&---------------------------------------------------------------------*
*       チェック
*----------------------------------------------------------------------*
FORM CHK_PRC .

* 会社コード存在チェック
SELECT SINGLE BUKRS
INTO P_BUKRS
FROM T001
WHERE BUKRS = P_BUKRS.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'P_BUKRS'.
MESSAGE E016(Z3) WITH P_BUKRS.
*会社コード & が存在しません。
ENDIF.

* 会社コード権限チェック
AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
ID 'BUKRS' FIELD P_BUKRS
ID 'ACTVT' FIELD '03'.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'P_BUKRS'.
MESSAGE E015(Z3) WITH P_BUKRS.
*    会社コード & では実行する権限がありません。
ENDIF.

ENDFORM.                    "CHK_PRC
" CHK_PRC
*&---------------------------------------------------------------------*
*&      Form  FRM_CHE_WERKS
*&---------------------------------------------------------------------*
*       プラントチェック
*----------------------------------------------------------------------*
*      -->P_WRK_WERKS  プラント
*      <--FLAG  プラグ
*----------------------------------------------------------------------*
FORM FRM_CHE_WERKS  USING    P_WRK_WERKS TYPE A017-WERKS
CHANGING P_FLAG      TYPE C.

DATA:
LW_LESSAGE TYPE STRING,
LW_WERKS TYPE WERKS.
LW_WERKS = P_WRK_WERKS.
CLEAR P_FLAG.

CALL FUNCTION 'ZEG_ZZ_WERKS_CHK'
EXPORTING
IMPBUKRS           = P_BUKRS
IMPWERKS           = LW_WERKS
EXCEPTIONS
WERKS_NOT_EXIST    = 1
WERKS_NO_AUTHORITY = 2
WERKS_BUKRS_ERROR  = 3
OTHERS             = 4.
IF SY-SUBRC <> 0.
P_FLAG = 'X'.
MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
INTO LW_LESSAGE.
WRITE: / LW_LESSAGE.
ENDIF.

ENDFORM.                    " FRM_CHE_WERKS
**** END ADD 2014/09/09 ISID19 ****
*Text symbol text・
*001:Pur Info
*002:Not logged in
*003:Supply
*004:Mat
*005:Plant
*006:Pri
*Selection text・
*IN_FILE:        Input file
*P_BUKRS:        Company Code
*P_KSCHL:        Condition
*P_TEST:        Check only
