*&---------------------------------------------------------------------*
*& Report  ZN012200
*&         照合クローズアップロード/ダウンロード
*&---------------------------------------------------------------------*
*&  機能     ： 照合クローズアップロード/ダウンロード
*&  作成日   ： 2014/08/29
*&  作成者   ： GSL
*&  変更履歴 ：
*&  変更内容 ：
*&           ：
*&---------------------------------------------------------------------*

REPORT  ZN012200 NO STANDARD PAGE HEADING.

*----------------------------------------------------------------------*
*  型定義
*----------------------------------------------------------------------*
TYPES:
* DL/UL ファイルレイアウト
BEGIN OF TYP_FILE,
BUKRS(10)     TYPE C,
KUNNR(22)     TYPE C,
EDATE(10)     TYPE C,
END   OF TYP_FILE,

* エラーログ
BEGIN OF TYP_ERRMSG,
MSGTXT    TYPE  STRING,
END   OF TYP_ERRMSG.

*----------------------------------------------------------------------*
*  内部テーブル・構造定義
*----------------------------------------------------------------------*
DATA:
* DL/UL ファイル
GT_FILE      TYPE STANDARD TABLE OF TYP_FILE,
* 照合期間（売上）
GT_ZN004     TYPE STANDARD TABLE OF ZN004,
* * エラーログ
GT_ERRMSG    TYPE STANDARD TABLE OF TYP_ERRMSG.

*----------------------------------------------------------------------*
*  変数定義
*----------------------------------------------------------------------*
DATA:
V_DOWNL(1)        TYPE C,       "ローカル限定F4ヘルプ処理用
V_UPL(1)          TYPE C.       "ローカル限定F4ヘルプ処理用

*----------------------------------------------------------------------*
*  定数定義
*----------------------------------------------------------------------*
CONSTANTS:
CNS_FLG_ON         TYPE C            VALUE 'X',
CNS_R_DL(4)        TYPE C            VALUE 'R_DL',     "ダウンロード
CNS_R_UL(4)        TYPE C            VALUE 'R_UL',     "アップロード
CNS_KUNNR_ALL      TYPE C            VALUE '+',        "全得意先コード
CNS_FILETYPE       TYPE CHAR10       VALUE 'DAT',      "タブ区切り
CNS_SJIS           TYPE STRING       VALUE 'shift_jis',"コードページ
CNS_MSGTYP_E       TYPE SYMSGTY      VALUE 'E',

BEGIN OF CNS_FILE_HEADER,
BUKRS(10)        TYPE C            VALUE '会社コード',
KUNNR(22)        TYPE C            VALUE '得意先コード(支払人)',
EDATE(10)        TYPE C            VALUE '照合終了日',
END   OF CNS_FILE_HEADER.

*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
SELECTION-SCREEN: BEGIN OF LINE, POSITION 1.
PARAMETERS:
R_DL        TYPE C  RADIOBUTTON GROUP  RG01.   " ダウンロード
SELECTION-SCREEN:
COMMENT 3(30)  FOR FIELD   R_DL. " ダウンロード
PARAMETERS:
R_UL        TYPE C  RADIOBUTTON GROUP  RG01.   " アップロード
SELECTION-SCREEN:
COMMENT 36(12)  FOR FIELD   R_UL, "アップロード
END OF LINE.

PARAMETERS:
P_FILE       TYPE STRING OBLIGATORY LOWER CASE . "DL/ULファイル

*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
*----------------------------------------------------------------------*
PERFORM CHECK_PATH.                "ファイルパス存在チェック

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
* ファイルパスの検索ヘルプ
PERFORM GET_F4_HELP.

*----------------------------------------------------------------------*
* INITIALIZATION.
*----------------------------------------------------------------------*

PERFORM INITIALIZE_DATA.

*----------------------------------------------------------------------*
* START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.

CASE CNS_FLG_ON.

WHEN R_DL.  "ダウンロード
PERFORM DOWNLOAD_ZN004.

WHEN R_UL.  "アップロード
PERFORM UPLOAD_ZN004.

ENDCASE.

*----------------------------------------------------------------------*
* END-OF-SELECTION
*----------------------------------------------------------------------*
END-OF-SELECTION.

PERFORM OUTPUT_RESULT.

*&---------------------------------------------------------------------*
*&      Form  INITIALIZE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM INITIALIZE_DATA .
CLEAR:
V_DOWNL,
V_UPL,

GT_ZN004,
GT_ERRMSG,
GT_FILE.

ENDFORM.                    " INITIALIZE_DATA

*&---------------------------------------------------------------------*
*&      Form  GET_F4_HELP
*&---------------------------------------------------------------------*
*       ファイルパスの検索ヘルプ
*----------------------------------------------------------------------*
FORM GET_F4_HELP.

* 選択画面に入力した値の取得
PERFORM DYNP_VALUE_READ.

CASE CNS_FLG_ON.

WHEN V_DOWNL. "ダウンロード
*     ファイルの保存ダイアログを表示
PERFORM FILE_SAVE_DIALOG CHANGING P_FILE.

WHEN V_UPL.   "アップロード
*     ファイルを開くダイアログを表示
PERFORM FILE_OPEN_DIALOG CHANGING P_FILE.

ENDCASE.
ENDFORM.                    " GET_F4_HELP
*&---------------------------------------------------------------------*
*&      Form  FILE_OPEN_DIALOG
*&---------------------------------------------------------------------*
*       ファイルを開くダイアログを表示
*----------------------------------------------------------------------*
*      <--P_P_FILE  text
*----------------------------------------------------------------------*
FORM FILE_OPEN_DIALOG  CHANGING P_O_FILE TYPE STRING.
DATA: L_IT_FILETAB  TYPE FILETABLE,
L_WA_FILETAB  TYPE FILE_TABLE,
L_RC          TYPE I.

CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
EXPORTING
*     WINDOW_TITLE            =
*     DEFAULT_EXTENSION       =
*     DEFAULT_FILENAME        =
FILE_FILTER             = CL_GUI_FRONTEND_SERVICES=>FILETYPE_ALL
*     WITH_ENCODING           =
*     INITIAL_DIRECTORY       =
*     MULTISELECTION          =
CHANGING
FILE_TABLE              = L_IT_FILETAB
RC                      = L_RC
*     USER_ACTION             =
*     FILE_ENCODING           =
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 1
CNTL_ERROR              = 2
ERROR_NO_GUI            = 3
NOT_SUPPORTED_BY_GUI    = 4
OTHERS                  = 5.
IF SY-SUBRC = 0.
READ TABLE L_IT_FILETAB INTO L_WA_FILETAB INDEX 1.
P_O_FILE = L_WA_FILETAB-FILENAME.
ENDIF.

ENDFORM.                    " FILE_OPEN_DIALOG
*&---------------------------------------------------------------------*
*&      Form  DYNP_VALUE_READ
*&---------------------------------------------------------------------*
*       選択画面最新値の取得
*----------------------------------------------------------------------*
FORM DYNP_VALUE_READ .

DATA :
LV_DYNAME  TYPE D020S-PROG,
LV_DYNUMB  TYPE D020S-DNUM,
LT_FIELD   TYPE STANDARD TABLE OF DYNPREAD,
LW_FIELD   TYPE DYNPREAD.

CLEAR:V_DOWNL,V_UPL.

LV_DYNAME = SY-REPID.
LV_DYNUMB = SY-DYNNR.

LW_FIELD-FIELDNAME = CNS_R_DL.
LW_FIELD-STEPL     = 0.
APPEND LW_FIELD TO LT_FIELD.

LW_FIELD-FIELDNAME = CNS_R_UL.
LW_FIELD-STEPL     = 0.
APPEND LW_FIELD TO LT_FIELD.

CALL FUNCTION 'DYNP_VALUES_READ'
EXPORTING
DYNAME                         = LV_DYNAME
DYNUMB                         = LV_DYNUMB
*     TRANSLATE_TO_UPPER             = ' '
*     REQUEST                        = ' '
*     PERFORM_CONVERSION_EXITS       = ' '
*     PERFORM_INPUT_CONVERSION       = ' '
*     DETERMINE_LOOP_INDEX           = ' '
*     START_SEARCH_IN_CURRENT_SCREEN = ' '
*     START_SEARCH_IN_MAIN_SCREEN    = ' '
*     START_SEARCH_IN_STACKED_SCREEN = ' '
*     START_SEARCH_ON_SCR_STACKPOS   = ' '
*     SEARCH_OWN_SUBSCREENS_FIRST    = ' '
*     SEARCHPATH_OF_SUBSCREEN_AREAS  = ' '
TABLES
DYNPFIELDS                     = LT_FIELD
EXCEPTIONS
INVALID_ABAPWORKAREA           = 1
INVALID_DYNPROFIELD            = 2
INVALID_DYNPRONAME             = 3
INVALID_DYNPRONUMMER           = 4
INVALID_REQUEST                = 5
NO_FIELDDESCRIPTION            = 6
INVALID_PARAMETER              = 7
UNDEFIND_ERROR                 = 8
DOUBLE_CONVERSION              = 9
STEPL_NOT_FOUND                = 10
OTHERS                         = 11.

IF SY-SUBRC = 0.
CLEAR LW_FIELD.
READ TABLE LT_FIELD INTO LW_FIELD
WITH KEY FIELDNAME = CNS_R_DL.
V_DOWNL = LW_FIELD-FIELDVALUE.

CLEAR LW_FIELD.
READ TABLE LT_FIELD INTO LW_FIELD
WITH KEY FIELDNAME = CNS_R_UL.
V_UPL = LW_FIELD-FIELDVALUE.

ENDIF.

ENDFORM.                    " DYNP_VALUE_READ
*&---------------------------------------------------------------------*
*&      Form  FILE_SAVE_DIALOG
*&---------------------------------------------------------------------*
*       ファイルの保存ダイアログを表示
*----------------------------------------------------------------------*
*      <--P_O_FILE  text
*----------------------------------------------------------------------*
FORM FILE_SAVE_DIALOG  CHANGING P_O_FILE TYPE STRING.

DATA : LV_FILENAME TYPE STRING,
LV_PATH     TYPE STRING,
LV_FULLPATH TYPE STRING.

CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG
EXPORTING
*     WINDOW_TITLE         =
*     DEFAULT_EXTENSION    =
*     DEFAULT_FILE_NAME    =
*     WITH_ENCODING        =
FILE_FILTER          = CL_GUI_FRONTEND_SERVICES=>FILETYPE_ALL
*     INITIAL_DIRECTORY    =
*     PROMPT_ON_OVERWRITE  = 'X'
CHANGING
FILENAME             = LV_FILENAME
PATH                 = LV_PATH
FULLPATH             = LV_FULLPATH
*     USER_ACTION          =
*     FILE_ENCODING        =
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4.
IF SY-SUBRC = 0.
P_O_FILE = LV_FULLPATH.
ENDIF.

ENDFORM.                    " FILE_SAVE_DIALOG

*&---------------------------------------------------------------------*
*&      Form  DOWNLOAD_ZN004
*&---------------------------------------------------------------------*
*       照合期間データダウンロード処理
*----------------------------------------------------------------------*
FORM DOWNLOAD_ZN004 .

* 照合期間データ取得
PERFORM SELECT_ZN004.

* ファイルダウンロード処理
PERFORM DOWNLOAD_FILE.

ENDFORM.                    " DOWNLOAD_ZN004

*&---------------------------------------------------------------------*
*&      Form  SELECT_ZN004
*&---------------------------------------------------------------------*
*       照合期間データ取得
*----------------------------------------------------------------------*
FORM SELECT_ZN004.

DATA LW_FILE  TYPE TYP_FILE.

FIELD-SYMBOLS:
<L_FS_ZN004>  TYPE ZN004.

SELECT *
FROM ZN004
INTO TABLE GT_ZN004
WHERE KUNNR <> CNS_KUNNR_ALL.

IF SY-SUBRC = 0.
APPEND CNS_FILE_HEADER TO GT_FILE.
LOOP AT GT_ZN004 ASSIGNING <L_FS_ZN004>.
MOVE-CORRESPONDING  <L_FS_ZN004> TO LW_FILE.
APPEND LW_FILE TO GT_FILE.
CLEAR LW_FILE.
ENDLOOP.
ELSE.
MESSAGE S762(YN01).
*   対象データがありません
LEAVE LIST-PROCESSING.
ENDIF.

ENDFORM.                    " SELECT_ZN004
*&---------------------------------------------------------------------*
*&      Form  DOWNLOAD_FILE
*&---------------------------------------------------------------------*
*       ファイルダウンロード処理
*----------------------------------------------------------------------*
FORM DOWNLOAD_FILE .

DATA:
LV_CODEPAGE        TYPE ABAP_ENCODING.

LV_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).

CALL METHOD CL_GUI_FRONTEND_SERVICES=>GUI_DOWNLOAD
EXPORTING
*      BIN_FILESIZE              =
FILENAME                  = P_FILE
FILETYPE                  = CNS_FILETYPE
*      APPEND                    = SPACE
*      WRITE_FIELD_SEPARATOR     = SPACE
*      HEADER                    = '00'
*      TRUNC_TRAILING_BLANKS     = SPACE
*      WRITE_LF                  = 'X'
*      COL_SELECT                = CNS_FLG_ON
*      COL_SELECT_MASK           = LV_COL_SELECT_MASK
DAT_MODE                  = CNS_FLG_ON
*      CONFIRM_OVERWRITE         = SPACE
*      NO_AUTH_CHECK             = SPACE
CODEPAGE                  = LV_CODEPAGE
*      IGNORE_CERR               = ABAP_TRUE
*      REPLACEMENT               = '#'
*      WRITE_BOM                 = SPACE
*      TRUNC_TRAILING_BLANKS_EOL = 'X'
*      WK1_N_FORMAT              = SPACE
*      WK1_N_SIZE                = SPACE
*      WK1_T_FORMAT              = SPACE
*      WK1_T_SIZE                = SPACE
*      SHOW_TRANSFER_STATUS      = 'X'
*      FIELDNAMES                =
*      WRITE_LF_AFTER_LAST_LINE  = 'X'
*    IMPORTING
*      FILELENGTH                =
CHANGING
DATA_TAB                  = GT_FILE
EXCEPTIONS
FILE_WRITE_ERROR          = 1
NO_BATCH                  = 2
GUI_REFUSE_FILETRANSFER   = 3
INVALID_TYPE              = 4
NO_AUTHORITY              = 5
UNKNOWN_ERROR             = 6
HEADER_NOT_ALLOWED        = 7
SEPARATOR_NOT_ALLOWED     = 8
FILESIZE_NOT_ALLOWED      = 9
HEADER_TOO_LONG           = 10
DP_ERROR_CREATE           = 11
DP_ERROR_SEND             = 12
DP_ERROR_WRITE            = 13
UNKNOWN_DP_ERROR          = 14
ACCESS_DENIED             = 15
DP_OUT_OF_MEMORY          = 16
DISK_FULL                 = 17
DP_TIMEOUT                = 18
FILE_NOT_FOUND            = 19
DATAPROVIDER_EXCEPTION    = 20
CONTROL_FLUSH_ERROR       = 21
NOT_SUPPORTED_BY_GUI      = 22
ERROR_NO_GUI              = 23
OTHERS                    = 24
.
IF SY-SUBRC <> 0.
MESSAGE S943(YN01) DISPLAY LIKE CNS_MSGTYP_E.
*   ファイルの出力に失敗しました
LEAVE LIST-PROCESSING.
ENDIF.

ENDFORM.                    " DOWNLOAD_FILE
*&---------------------------------------------------------------------*
*&      Form  UPLOAD_ZN004
*&---------------------------------------------------------------------*
*       照合期間データアップロード処理
*----------------------------------------------------------------------*
FORM UPLOAD_ZN004 .

* ファイルアップロード処理
PERFORM UPLOAD_FILE.

* アップロードファイルのチェック
PERFORM CHECK_FILE.

* 照合期間更新処理
PERFORM UPDATE_ZN004.

ENDFORM.                    " UPLOAD_ZN004

*&---------------------------------------------------------------------*
*&      Form  UPLOAD_FILE
*&---------------------------------------------------------------------*
*       ファイルアップロード処理
*----------------------------------------------------------------------*
FORM UPLOAD_FILE .

DATA LV_CODEPAGE TYPE ABAP_ENCODING.
LV_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).

CALL METHOD CL_GUI_FRONTEND_SERVICES=>GUI_UPLOAD
EXPORTING
FILENAME                = P_FILE
*      FILETYPE                = 'ASC'
HAS_FIELD_SEPARATOR     = CNS_FLG_ON
*      HEADER_LENGTH           = 0
*      READ_BY_LINE            = 'X'
*      DAT_MODE                = SPACE
CODEPAGE                = LV_CODEPAGE
*      IGNORE_CERR             = ABAP_TRUE
*      REPLACEMENT             = '#'
*      VIRUS_SCAN_PROFILE      =
*    IMPORTING
*      FILELENGTH              =
*      HEADER                  =
CHANGING
DATA_TAB                = GT_FILE
EXCEPTIONS
FILE_OPEN_ERROR         = 1
FILE_READ_ERROR         = 2
NO_BATCH                = 3
GUI_REFUSE_FILETRANSFER = 4
INVALID_TYPE            = 5
NO_AUTHORITY            = 6
UNKNOWN_ERROR           = 7
BAD_DATA_FORMAT         = 8
HEADER_NOT_ALLOWED      = 9
SEPARATOR_NOT_ALLOWED   = 10
HEADER_TOO_LONG         = 11
UNKNOWN_DP_ERROR        = 12
ACCESS_DENIED           = 13
DP_OUT_OF_MEMORY        = 14
DISK_FULL               = 15
DP_TIMEOUT              = 16
NOT_SUPPORTED_BY_GUI    = 17
ERROR_NO_GUI            = 18
OTHERS                  = 19
.
IF SY-SUBRC <> 0.
MESSAGE S011(YN01) WITH P_FILE DISPLAY LIKE CNS_MSGTYP_E.
*   ファイル読込エラー &
LEAVE LIST-PROCESSING.
ENDIF.

DELETE GT_FILE INDEX 1.

IF LINES( GT_FILE ) = 0.
MESSAGE S762(YN01).
*   対象データがありません
LEAVE LIST-PROCESSING.
ENDIF.
ENDFORM.                    " UPLOAD_FILE
*&---------------------------------------------------------------------*
*&      Form  CHECK_FILE
*&---------------------------------------------------------------------*
*       アップロードファイルのチェック
*----------------------------------------------------------------------*
FORM CHECK_FILE .

DATA:
LV_FLG_BREAK TYPE C,
LW_ZN004     TYPE ZN004,
LW_ERRMSG    TYPE TYP_ERRMSG.

FIELD-SYMBOLS:
<L_FS_FILE> TYPE TYP_FILE.

*
SORT GT_FILE BY BUKRS ASCENDING
KUNNR ASCENDING
EDATE ASCENDING.

LOOP AT GT_FILE ASSIGNING <L_FS_FILE>.

PERFORM CONVERSION_KUNNR_ALPHA_INPUT
CHANGING <L_FS_FILE>-KUNNR.

*   重複チェック
IF <L_FS_FILE>-BUKRS = LW_ZN004-BUKRS AND
<L_FS_FILE>-KUNNR  = LW_ZN004-KUNNR.
MESSAGE S000(YN01) WITH TEXT-M01 <L_FS_FILE>-BUKRS
<L_FS_FILE>-KUNNR
INTO LW_ERRMSG-MSGTXT.
*   レコードが重複しています。

*     エラー情報を内部テーブルに保存
APPEND LW_ERRMSG TO GT_ERRMSG.
CLEAR LW_ERRMSG.

ENDIF.

AT NEW BUKRS.
LV_FLG_BREAK = CNS_FLG_ON.
ENDAT.

IF LV_FLG_BREAK = CNS_FLG_ON.
PERFORM CHECK_BUKRS USING   <L_FS_FILE>-BUKRS
CHANGING LW_ERRMSG.

*     会社コード存在しない場合
IF LW_ERRMSG IS NOT INITIAL.
*       エラー情報を内部テーブルに保存
APPEND LW_ERRMSG TO GT_ERRMSG.
CLEAR LW_ERRMSG.
ENDIF.

CLEAR LV_FLG_BREAK.
ENDIF.

AT NEW KUNNR.
LV_FLG_BREAK = CNS_FLG_ON.
ENDAT.

IF LV_FLG_BREAK = CNS_FLG_ON.
PERFORM CHECK_KUNNR USING   <L_FS_FILE>
CHANGING LW_ERRMSG.

*     得意先コード存在しない場合
IF LW_ERRMSG IS NOT INITIAL.
*       エラー情報を内部テーブルに保存
APPEND LW_ERRMSG TO GT_ERRMSG.
CLEAR LW_ERRMSG.

ENDIF.

CLEAR LV_FLG_BREAK.
ENDIF.

* 日付形式チェック
PERFORM CHECK_DATE CHANGING <L_FS_FILE>-EDATE
LW_ERRMSG.

*     日付形式が不正な場合
IF LW_ERRMSG IS NOT INITIAL.
*       エラー情報を内部テーブルに保存
APPEND LW_ERRMSG TO GT_ERRMSG.
CLEAR LW_ERRMSG.

ENDIF.

MOVE-CORRESPONDING <L_FS_FILE> TO LW_ZN004.
LW_ZN004-MANDT = SY-MANDT.
APPEND LW_ZN004 TO GT_ZN004.

ENDLOOP.

ENDFORM.                    " CHECK_FILE
*&---------------------------------------------------------------------*
*&      Form  CHECK_BUKRS
*&---------------------------------------------------------------------*
*       会社コード存在チェック
*----------------------------------------------------------------------*
*      -->P_I_BUKRS  会社コード
*      <--P_O_ERRMSG エラーメッセージ
*----------------------------------------------------------------------*
FORM CHECK_BUKRS  USING    P_I_BUKRS  TYPE C
CHANGING P_O_ERRMSG TYPE TYP_ERRMSG.
DATA: LV_BUKRS  TYPE BUKRS,
LV_MSGV   TYPE STRING.

CLEAR P_O_ERRMSG.

SELECT SINGLE BUKRS
INTO LV_BUKRS
FROM T001
WHERE BUKRS = P_I_BUKRS.

IF SY-SUBRC <> 0.
CONCATENATE TEXT-M02 P_I_BUKRS TEXT-M13 INTO LV_MSGV.
MESSAGE S000(YN01) WITH LV_MSGV INTO P_O_ERRMSG-MSGTXT.
*   会社コードXXXXは存在しません。
ENDIF.

ENDFORM.                    " CHECK_BUKRS
*&---------------------------------------------------------------------*
*&      Form  CHECK_KUNNR
*&---------------------------------------------------------------------*
*       得意先コード存在チェック
*----------------------------------------------------------------------*
*      -->P_I_ZN004  照合期間（売上）の構造
*      <--P_O_ERRMSG エラーメッセージ
*----------------------------------------------------------------------*
FORM CHECK_KUNNR  USING    P_I_ZN004  TYPE TYP_FILE
CHANGING P_O_ERRMSG TYPE TYP_ERRMSG.
DATA:
LV_BUKRS  TYPE BUKRS,
LV_KUNNR  TYPE KUNNR,
LV_MSGV   TYPE STRING.

CLEAR P_O_ERRMSG.

SELECT SINGLE BUKRS KUNNR
INTO (LV_BUKRS, LV_KUNNR)
FROM KNB1
WHERE BUKRS = P_I_ZN004-BUKRS
AND KUNNR = P_I_ZN004-KUNNR.

IF SY-SUBRC <>  0.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = P_I_ZN004-KUNNR
IMPORTING
OUTPUT = LV_KUNNR.

CONCATENATE TEXT-M03 LV_KUNNR TEXT-M13 INTO LV_MSGV.
MESSAGE S000(YN01) WITH LV_MSGV INTO P_O_ERRMSG-MSGTXT.
*   得意先コードXXXXXXは存在しません。
ENDIF.

ENDFORM.                    " CHECK_KUNNR
*&---------------------------------------------------------------------*
*&      Form  CONVERSION_KUNNR_ALPHA_INPUT
*&---------------------------------------------------------------------*
*       得意先コード　ALPHA 変換 Exit: 外部->内部
*----------------------------------------------------------------------*
*      <--P_KUNNR  得意先コード
*----------------------------------------------------------------------*
FORM CONVERSION_KUNNR_ALPHA_INPUT
CHANGING P_KUNNR TYPE C.

DATA:
LV_KUNNR  TYPE KUNNR.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT  = P_KUNNR
IMPORTING
OUTPUT = LV_KUNNR.

P_KUNNR = LV_KUNNR.

ENDFORM.                    " CONVERSION_KUNNR_ALPHA_INPUT
*&---------------------------------------------------------------------*
*&      Form  CHECK_DATE
*&---------------------------------------------------------------------*
*       日付チェック
*----------------------------------------------------------------------*
*      <--P_O_DATE
*      <--P_O_ERRMSG エラーメッセージ
*----------------------------------------------------------------------*
FORM CHECK_DATE  CHANGING  P_O_DATE   TYPE  C
P_O_ERRMSG TYPE TYP_ERRMSG.

DATA LV_DATE  TYPE DATS.

CALL FUNCTION 'CONVERT_DATE_TO_INTERNAL'
EXPORTING
DATE_EXTERNAL            = P_O_DATE
*     ACCEPT_INITIAL_DATE      =
IMPORTING
DATE_INTERNAL            = LV_DATE
EXCEPTIONS
DATE_EXTERNAL_IS_INVALID = 1
OTHERS                   = 2.

IF SY-SUBRC = 0.
P_O_DATE = LV_DATE.
ELSE.
MESSAGE S000(YN01) WITH TEXT-M04  P_O_DATE INTO P_O_ERRMSG-MSGTXT.
*    日付の形式が不正です。
ENDIF.

ENDFORM.                    " CHECK_DATE
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZN004
*&---------------------------------------------------------------------*
*       照合期間更新処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM UPDATE_ZN004 .

DATA: LW_ERRMSG TYPE TYP_ERRMSG.

CHECK GT_ERRMSG IS INITIAL.

DELETE FROM ZN004 WHERE KUNNR <> CNS_KUNNR_ALL.

INSERT ZN004 FROM TABLE GT_ZN004.

IF SY-SUBRC = 0.
COMMIT WORK.
ELSE.
ROLLBACK WORK.
MESSAGE S000(YN01) WITH TEXT-M05 INTO LW_ERRMSG-MSGTXT.
APPEND LW_ERRMSG TO GT_ERRMSG.
ENDIF.
ENDFORM.                    " UPDATE_ZN004
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_RESULT
*&---------------------------------------------------------------------*
*       結果ログ出力処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM OUTPUT_RESULT .

DATA:
LV_TITLE   TYPE STRING,
L_CNT_DATA TYPE I.

FIELD-SYMBOLS: <L_FS_ERRMSG>  TYPE TYP_ERRMSG.

CASE CNS_FLG_ON.

WHEN R_DL.
LV_TITLE = TEXT-M06. "ダウンロード件数　：
L_CNT_DATA = LINES( GT_ZN004 ).

WHEN R_UL.
LV_TITLE = TEXT-M07. "アップロード件数　：

IF GT_ERRMSG IS INITIAL.
L_CNT_DATA = LINES( GT_ZN004 ).
ENDIF.

ENDCASE.

WRITE: /85(10) TEXT-M11, "実行日：
95(10) SY-DATUM,

/02(20) LV_TITLE,
23(06) L_CNT_DATA,
30(02) TEXT-M08. "件

SKIP.
WRITE: /02(10) TEXT-M09. "エラーログ

IF GT_ERRMSG IS INITIAL.
WRITE: /06(34) TEXT-M10. "エラーなし　正常に処理されました。
ENDIF.

LOOP AT GT_ERRMSG ASSIGNING <L_FS_ERRMSG>.
WRITE /06(100) <L_FS_ERRMSG>-MSGTXT.
ENDLOOP.

ENDFORM.                    " OUTPUT_RESULT
*&---------------------------------------------------------------------*
*&      Form  CHECK_PATH
*&---------------------------------------------------------------------*
*       ファイルパス存在チェック
*----------------------------------------------------------------------*
FORM CHECK_PATH.

DATA: L_RC(4) TYPE C.

DATA: L_FNAME LIKE RLGRAP-FILENAME,
L_FPATH LIKE RLGRAP-FILENAME.
DATA  L_FPATH2 TYPE STRING.

CLEAR:L_RC,L_FNAME,L_FPATH.

L_FNAME = P_FILE.

CALL FUNCTION 'SO_SPLIT_FILE_AND_PATH'
EXPORTING
FULL_NAME = L_FNAME
IMPORTING
FILE_PATH = L_FPATH
EXCEPTIONS
X_ERROR   = 1
OTHERS    = 2.

IF SY-SUBRC <> 0.

MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

L_FPATH2 = L_FPATH.
IF CL_GUI_FRONTEND_SERVICES=>DIRECTORY_EXIST( L_FPATH2 ) = ABAP_FALSE.
MESSAGE E000(YN01) WITH TEXT-M12.
ENDIF.

ENDFORM.                    " CHECK_PATH
