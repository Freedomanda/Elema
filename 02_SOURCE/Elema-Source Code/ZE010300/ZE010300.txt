************************************************************************
* [プログラム名]
*   ZE010300     EDI発注請更新＆モニタリスト
* [処理概要]
*      ・ 発注請データの発注書番号で購買発注伝票を更新。
*      ・ 発注請データをチェックし、エラーのデータは発注請モニタリスト
*         ヘ出力。
*      ・ 発注請データから発注受けモニタリストを作成。
*
* [改定履歴]
*　YYYY/MM/DD   Programar           Description
*  2002/01/31   PSD C.YAMAGUCHI     新規開発　
*  2002/02/21   PSD C.YAMAGUCHI     修正追加
*  2002/03/20   PSD T.SAITOH        ISOコードからR/3単位への変換
*  2002/04/17   PSD T.SAITOH        注文単価の価格変換設定
*  2002/04/17   PSD T.SAITOH        ブランク時のショートダンプ対応
*  2002/07/08   NDSC 発注送信対象絞込みロジック追加
*  2002/07/31   NDSC 取込ファイルクリア機能追加
*  2002/08/08   PSD T.SAITOH        出力不具合対応
*  2002/08/23   PSD T.SAITOH        出力不具合対応2
*  2002/08/26   PSD T.SAITOH        汎用Ｍ：エラー時修正
*  2002/08/26   PSD T.SAITOH        更新エラー修正
*  2002/11/18   add ndsc05(r.tomoeda)
*  2006/02/16   DMC R.Hata    バグ修正
*  2006/02/16   DMC R.Hata    単価エラー時でも更新対応
*  2006/03/02   DMC R.Hata    LB0516対応
*  2010/03/09   SOLFIS R.Hata     プラント標準プリンタ指定
*& 2012/08/22   ISID                ES-UP
************************************************************************
REPORT   ZE010300 NO STANDARD PAGE HEADING
LINE-SIZE 196.
************************************************************************
*   TYPES
************************************************************************
*--- ファイル編集項目
TYPES :  BEGIN OF FILE_DATA,
DATANO(5)           TYPE C,        " DATA処理NO
KUBUNCD(4)          TYPE C,        " 情報区分CD
DATADAY(6)          TYPE C,        " DATA作成日
H_CD(12)            TYPE C,        " 発注者CD
LIFNRCD(12)         TYPE C,        " 受注者CD
H_BUMON(8)          TYPE C,        " 発注部門CD
EBELN(23)           TYPE C,        " 注文番号
SEINO(19)           TYPE C,        " 製造番号
TEISEICD(1)         TYPE C,        " 訂正CD
COKKU(1)            TYPE C,        " コック区分
DAY01(6)            TYPE C,        " 注文年月日
MEINS(3)            TYPE C,        " 単位
TANKA(13)           TYPE C,        " 単価
TANKUBUN(1)         TYPE C,        " 単価区分
MENSE(12)           TYPE C,        " 注文数量
MONEY(10)           TYPE C,        " 注文金額
SIKYUU(1)           TYPE C,        " 支給区分
EKGRP(7)            TYPE C,        " 購買担当
ZAI(20)             TYPE C,        " 材質・企画・寸法
SIYOU(1)            TYPE C,        " 仕様書有無
HANSUU(3)           TYPE C,        " 版数
TXZ01(30)           TYPE C,        " 品名（品名仕様）
IDNLF(25)           TYPE C,        " 受注者品名CD
MATNR(25)           TYPE C,        " 発注者品名CD
ZUMEN(2)            TYPE C,        " 図面・仕様書枚数
NISUGATA(7)         TYPE C,        " 荷姿（包装単位）
CYOKU(1)            TYPE C,        " 直納区分
UKE(8)              TYPE C,        " 受渡場所
KENSA(3)            TYPE C,        " 検査区分
SIJI(1)             TYPE C,        " 納入指示有無区分
NOUKI(6)            TYPE C,        " 納期
SIJISU(12)          TYPE C,        " 納入指示数量
NOUNO(8)            TYPE C,        " 納入NO
BIKOU01(30)         TYPE C,        " 備考
SYOUHI(1)           TYPE C,        " 消費税区分
KAZEI(1)            TYPE C,        " 課税区分
SYOUMONEY(10)       TYPE C,        " 消費税額
GOU(10)             TYPE C,        " 合計額
KESSAI(1)           TYPE C,        " 決済条件区分
DAY02(6)            TYPE C,        " 注文請け発行日
CYUU01(1)           TYPE C,        " 注文請け対象区分
CYUU02(1)           TYPE C,        " 注文受託区分
ENDNAME(20)         TYPE C,        " エンドユーザ名
POST(8)             TYPE C,        " 納入先郵便番号
ADDRESS(100)        TYPE C,        " 納入先住所
ATESAKI(100)        TYPE C,        " 納入先宛先名
ENDTEXT(30)         TYPE C,        " エンドユーザ品名
ENDTEXTCD(25)       TYPE C,        " エンドユーザ品名CD
ENDNO(23)           TYPE C,        " エンドユーザ注文番号
MAKER(20)           TYPE C,        " 指定メーカー名
KEYNO(23)           TYPE C,        " 納品キー番号
UKENAME(20)         TYPE C,        " 受渡場所名
BERCD(23)           TYPE C,        " 発注者用バーCD情報
BIKOU02(50)         TYPE C,        " 発注者用備考
JYOUKEN(1)          TYPE C,        " 契約条件区分
KEITAI(2)           TYPE C,        " 発注形態区分
MOEBELN(23)         TYPE C,        " 親注文番号
KEIYAKU(1)          TYPE C,        " 数量契約区分
HENKOU(2)           TYPE C,        " 変更注文区分
KISYUCD(20)         TYPE C,        " 機種CD
SEKKEINO(12)        TYPE C,        " 設計変更番号
ZUMENNO(30)         TYPE C,        " 図面・仕様書番号
YOUDATA(1)          TYPE C,        " 要求書種類
YOUNO(2)            TYPE C,        " 要求書部数
YOUJA(1)            TYPE C,        " 要求書言語
BUSSI(1)            TYPE C,        " 戦略物資区分
SANCHICD(3)         TYPE C,        " 産地CD
TIME(4)             TYPE C,        " 納入時刻
IKKATUNO(10)        TYPE C,        " 一括納入番号
HINMOKU(120)        TYPE C,        " 発注品仕様
H_BUMONNAME(20)     TYPE C,        " 発注部門名
JYOU(12)            TYPE C,        " 条長
JYOUNO(4)           TYPE C,        " 条長個数
JYOUUNIT(3)         TYPE C,        " 条長単位
KOUJINO(40)         TYPE C,        " 工事件名
DATACD(2)           TYPE C,        " 主材料CD
DATABASE(13)        TYPE C,        " 主材料ベース
DATAUNIT(3)         TYPE C,        " 主材料単位
TEST01(1)           TYPE C,        " 試験成績書要否区分
TEST02(1)           TYPE C,        " 試験成績書検査区分
TEST03(1)           TYPE C,        " 試験成績書提出方法
CITYCD(7)           TYPE C,        " 市町村CD
CONTACT(18)         TYPE C,        " 納入時連絡先
J_CHARGE(14)        TYPE C,        " 購買担当（漢字）
J_KIKAKU(40)        TYPE C,        " 材料／企画／寸法（漢字）
J_TEXT(60)          TYPE C,        " 品名（品名仕様）（漢字）
J_BIKOU01(60)       TYPE C,        " 備考（漢字）
J_ENDNAME(40)       TYPE C,        " エンドユーザ名（漢字）
J_ADDRESS(100)      TYPE C,        " 納入先住所（漢字）
J_ATESAKI(100)      TYPE C,        " 納入宛先名（漢字）
J_ENDTEXTCD(60)     TYPE C,        " エンドユーザ品名（漢字）
J_MAKER(40)         TYPE C,        " 指定メーカー名（漢字）
J_UKENAME(40)       TYPE C,        " 受渡場所名（漢字）
J_BIKOU02(100)      TYPE C,        " 発注者用備考（漢字）
J_KISYUNAME(40)     TYPE C,        " 機種名（漢字）
J_HINMOKU(240)      TYPE C,        " 発注品使用（漢字）
J_BUMONNAME(40)     TYPE C,        " 発注者部門名（漢字）
J_KOUJI(80)         TYPE C,        " 工事件名（漢字）
MONEYCD(3)          TYPE C,        " 通貨CD
GAI_TANKA(16)       TYPE C,        " 単価（外貨）
GAI_MONEY(15)       TYPE C,        " 受注金額（外貨）
GAI_SYOUMONEY(15)   TYPE C,        " 消費税額（外貨）
GAI_GOU(15)         TYPE C,        " 合計額（外貨）
GAI_DATABASE(16)    TYPE C,        " 主材料ベース（外貨）
END OF FILE_DATA.
*--- 帳票出力項目
TYPES : BEGIN OF TYP_DATA,
EBELN1(10)       TYPE C,            " 発注番号
EBELP(5)         TYPE C,            " 明細番号
WERKS(4)         TYPE C,            " 部門
EBNAME(20)       TYPE C,            " 部門名
EKGRP(3)         TYPE C,            " 購買グループ
EKNAME(18)       TYPE C,            " 購買グループ名
LIFNR(10)        TYPE C,            " 手配先
LINAME(34)       TYPE C,            " 手配先名
DATUM(8)         TYPE C,            " 発注日
EBELN(15)        TYPE C,            " 発注番号
MATNR(18)        TYPE C,            " 品目CD
TXZ01(30)        TYPE C,            " 品名
IDNLF(25)        TYPE C,            " 仕入先品目CD
MENSE(13)        TYPE P DECIMALS 3, " 発注数
*---MODIFY START PSD T.SAITOH 2002/03/20 ---------------------------*
*        MEINS            TYPE EKPO-MEINS,   " 単位
MEINS(3)         TYPE C,            " 単位
*---MODIFY END   PSD T.SAITOH 2002/03/20 ---------------------------*
TANKA(14)        TYPE P DECIMALS 3, " 発注単価
LABNR(8)         TYPE C,            " 発注請書番号
UKE(8)           TYPE C,            " 納入先
DATADAY(8)       TYPE C,            " 手配日
KUBUN(1)         TYPE C,            " 受託区分
KUDATA(16)       TYPE C,            " 区分内容
EREBELN(17)      TYPE C,            " 発注番号エラー
ERMATNR(18)      TYPE C,            " 品目CDエラー
ERIDNLF(25)      TYPE C,            " 仕入先品目CDエラー
ERMENSE(15)      TYPE C,            " 発注数エラー
ERMEINS(3)       TYPE C,            " 単位エラー
ERTANKA(15)      TYPE C,            " 単価エラー
NOUKI(8)         TYPE C,            " 納期
END OF TYP_DATA.

*--- 比較項目取得
TYPES : BEGIN OF TYP_EKPO,
EBELN         TYPE EKPO-EBELN,     " 発注番号
EBENP         TYPE EKPO-EBELP,     " 明細
WERKS         TYPE EKPO-WERKS,     " プラント
MATNR         TYPE EKPO-MATNR,     " 品目CD
IDNLF         TYPE EKPO-IDNLF,     " 仕入先品目CD
MENGE         TYPE EKPO-MENGE,     " 発注数量
MEINS         TYPE EKPO-MEINS,     " 数量単位
*---MODIFY START PSD T.SAITOH 2002/04/17 価格変換対応---------------*
*        NETPR         TYPE EKPO-NETPR,     " 正味発注価格
NETPR         TYPE EKPO-NETWR,     " 正味発注価格
*---MODIFY END   PSD T.SAITOH 2002/04/17 ---------------------------*
PEINH         TYPE EKPO-PEINH,     " 価格単位
END OF   TYP_EKPO.
***********************************************************************
*    DATA
***********************************************************************
*--- ファイル項目内部TBL
DATA : GF_FILE TYPE FILE_DATA.
DATA : GT_FILE LIKE TABLE OF GF_FILE.

*--- 帳票出力内部TBL
DATA : GF_DATA TYPE TYP_DATA,
GT_DATA LIKE TABLE OF GF_DATA.

*--- バッチ用内部TBL
DATA:   GT_BDCDATA LIKE BDCDATA OCCURS 0 WITH HEADER LINE.
*--- バッチ用エラーメッセージ用内部TBL
DATA:   MESSTAB LIKE BDCMSGCOLL OCCURS 0 WITH HEADER LINE.

*--- 比較項目構造
DATA : GF_EKPO TYPE TYP_EKPO.

*--- DATA項目
* Del ES-UP 2012/10/25 -->
*DATA : READ_FILE(2291) TYPE C.             " READ用ファイル内部TBL
* Del ES-UP 2012/10/25 <--
DATA : G_LIFN2         TYPE WYT3-LIFN2.    " 他社仕入先の参照取得
DATA : G_NAME2         TYPE  LFA1-NAME2.   " 名称取得
DATA : R_TANKA(13)     TYPE P DECIMALS 3.  " 単価算出結果
DATA : FLG_SUB(1)      TYPE C.             " DATA取得結果フラグ
DATA : CHECK_ERR(1)    TYPE C.             " エラーCHECKフラグ
DATA : CHECK_ERR03(1)  TYPE C.             " チェック3フラグ
DATA : CHECK_WER(1)    TYPE C.             " プラントエラーCHECKフラグ
DATA : G_ADRNR         TYPE T001W-ADRNR.      " アドレス
DATA : G_PRINT         TYPE PRI_PARAMS-PDEST. "出力デバイス
DATA : FLG_WERKS(4)    TYPE C.                " フラグプラントCD
DATA : FLG_EKGRP(3)    TYPE C.                " フラグ購買GP
DATA : FLG_LIFNR(10)   TYPE C.                " フラグ仕入先CD
DATA : FLG_EBELN1(10)  TYPE C.                " フラグ発注伝票番号
DATA : FLG_LABNR(8)    TYPE C.                " フラグ発注請番号
DATA:LW_MEINS(3) TYPE C."作業用単位
* Add 2002.03.29 >>>>>>>
DATA : NAST_COUNT(2) TYPE N ,
GW_OBJKY      LIKE NAST-OBJKY ,
GW_ERROR(1)   TYPE C .
TABLES : NAST .
* Add 2002.03.29 <<<<<<<

*--- CONSTANT
CONSTANTS : CNS_P(1)       TYPE C     VALUE 'P',
CNS_X(1)       TYPE C     VALUE 'X',
CNS_0(1)       TYPE C     VALUE '0',
CNS_000(3)     TYPE C     VALUE '000',
CNS_1000(4)    TYPE C     VALUE '1000',
CNS_Z1(2)      TYPE C     VALUE 'Z1',
CNS_*17(17)    TYPE C     VALUE '*****************',
CNS_*18(18)    TYPE C     VALUE '******************',
CNS_*25(25)    TYPE C     VALUE '*************************',
CNS_*3(3)      TYPE C     VALUE '***',
CNS_*15(15)    TYPE C     VALUE '***************',
CNS_*10(10)    TYPE C     VALUE '**********',
CNS_WYT3(4)    TYPE C     VALUE 'WYT3',
CNS_EKPO(4)    TYPE C     VALUE 'EKPO',
CNS_LFA1(4)    TYPE C     VALUE 'LFA1',
CNS_T001W(5)   TYPE C     VALUE 'T001W',
CNS_T024(4)    TYPE C     VALUE 'T024',
CNS_ADR10(5)   TYPE C     VALUE 'ADR10'.
* Add ES-UP 2012/08/22 -->
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
* Add ES-UP 2012/08/22 <--
************************************************************************
*    選択画面
************************************************************************
*--- プラント
PARAMETER : P_WERKS(10) DEFAULT 'P360'.

*--- 入力ファイル
*PARAMETER : P_FILE(60) DEFAULT 'D:\WORK\EDITEST07.TXT' OBLIGATORY.
PARAMETER : P_FILE(60) OBLIGATORY.
***********************************************************************
*    AT SELECTION-SCREEN
***********************************************************************
AT SELECTION-SCREEN.

*----　プラントCHECK
PERFORM FRM_CHECK.

***********************************************************************
*    START-OF-SELECTION
***********************************************************************
START-OF-SELECTION.
*--- FILEOPEN → FILEREAD
PERFORM FRM_FILE.
LOOP AT GT_FILE INTO GF_FILE.
* ↓ 2002/03/31 APPEND.
*--- エラーフラグのクリア
PERFORM FRM_FLG_CLEAR.
* ↑ 2002/03/31 APPEND.
*--- 必要項目取得
PERFORM FRM_GF_DATA_GET.
*--- CHECK種類取得処理
PERFORM FRM_CHECK_GET.
***2002.11.18 add >>>
PERFORM FRM_GET01.                            " 存在CHECK
* Mod 2006.02.16 --->
*    IF FLG_SUB = 4.
IF FLG_SUB = 0.
* Mod 2006.02.16 <---
**プラントチェック
CASE G_NAME2+0(1).
WHEN 0.
WHEN 1.
IF GF_EKPO-WERKS <> GF_DATA-WERKS.        " プラントCHECK
CHECK_ERR = CNS_X.
CHECK_WER = CNS_X.
ENDIF.
WHEN 2.
GF_DATA-WERKS = GF_EKPO-WERKS.
ENDCASE.
**R/3品目コードチェック
CASE G_NAME2+1(1).
WHEN 0.
WHEN 1.
IF GF_EKPO-MATNR <> GF_DATA-MATNR.            " 品目CDCHECK
CHECK_ERR = CNS_X.
GF_DATA-ERMATNR = CNS_*18.
ENDIF.
WHEN 2.
GF_DATA-MATNR = GF_EKPO-MATNR.
ENDCASE.
**仕入先品目チェック
CASE G_NAME2+2(1).
WHEN 0.
WHEN 1.
IF GF_EKPO-IDNLF <> GF_DATA-IDNLF.      "仕入先品目CDCHECK
CHECK_ERR = CNS_X.
GF_DATA-ERIDNLF = CNS_*25.
ENDIF.
WHEN 2.
GF_DATA-IDNLF = GF_EKPO-IDNLF.
ENDCASE.
**数量チェック
CASE G_NAME2+3(1).
WHEN 0.
WHEN 1.
IF GF_EKPO-MENGE  <> GF_DATA-MENSE.      "発注数CHECK
CHECK_ERR = CNS_X.
GF_DATA-ERMENSE = CNS_*15.
ENDIF.
WHEN 2.
GF_DATA-MENSE = GF_EKPO-MENGE.
ENDCASE.
**単位チェック
CASE G_NAME2+4(1).
WHEN 0.
WHEN 1.
PERFORM FRM_UNIT_CONVERSION_FROM_ISO
USING    GF_DATA-MEINS
CHANGING LW_MEINS.
IF GF_EKPO-MEINS <> LW_MEINS.                  " 単位CHECK
CHECK_ERR = CNS_X.
GF_DATA-ERMEINS = CNS_*3.
ENDIF.
WHEN 2.
GF_DATA-MEINS = GF_EKPO-MEINS.
ENDCASE.
**単価チェック
CASE G_NAME2+5(1).
WHEN 0.
WHEN 1.
IF GF_FILE-TANKUBUN = '0'.
IF R_TANKA <> GF_DATA-TANKA.                  " 単価CHECK
* Del 2006/02/17 --->
*             CHECK_ERR = CNS_X.
* Del 2006/02/17 <---
GF_DATA-ERTANKA = CNS_*15.
ENDIF.
ELSEIF GF_FILE-TANKUBUN = '2' OR
GF_FILE-TANKUBUN = '9' OR
GF_FILE-TANKUBUN = 'A' OR
GF_FILE-TANKUBUN = 'B' .
IF R_TANKA <> GF_DATA-TANKA.                  " 単価CHECK
CHECK_ERR = CNS_X.
GF_DATA-ERTANKA = '仮単価'.
ENDIF.
ENDIF.
WHEN 2.
GF_DATA-TANKA = R_TANKA.
ENDCASE.
ENDIF.
***2002.11.18 ADD <<<
*--- エラーCHECK項目取得処理
*    CASE G_NAME2+0(1).
*      WHEN 1.
*        PERFORM FRM_GET01.                            " 存在CHECK
*        IF FLG_SUB = 0.
*          PERFORM FRM_CHEK01.                         " 項目CHECK
*        ENDIF.
*      WHEN 2.
*        PERFORM FRM_GET01.                            " 存在CHECK
*        IF FLG_SUB = 0.
*          PERFORM FRM_CHEK01.                         " 項目CHECK
*        ENDIF.
*      WHEN 3.
*        PERFORM FRM_GET02.                            " 存在CHECK
*      WHEN OTHERS.                                    " CHECKなし
*        CHECK_ERR = CNS_X.
*    ENDCASE.
* ↓2002/03/31 DELETE
**--- 更新処理（バッチインプット）
*    PERFORM FRM_BACHI.
* ↑
*--- 仕入先名称取得処理
PERFORM FRM_NAME.
*--- 受託区分・区分内容取得処理
PERFORM FRM_KUBUN.
*--- 帳票内部TBL作成
APPEND GF_DATA TO GT_DATA.
*--- クリア処理
CLEAR CHECK_ERR.                     " エラーCHECKフラグクリア
CLEAR CHECK_ERR03.                   " エラーCHECK3フラグ
CLEAR GF_DATA.                       " 帳票構造クリア
CLEAR CHECK_WER.                     " プラントCHECKフラグクリア
CLEAR G_LIFN2.
CLEAR G_NAME2.
ENDLOOP.
*--- SORT処理(部門→購買GP→手配先→発注日→発注番号）
SORT GT_DATA BY WERKS EKGRP LIFNR DATUM EBELN.
*---APPEND START PSD T.SAITOH 2002/08/23 ---------------------------*
* バッチ処理
IF SY-BATCH = 'X'.
*---APPEND END   PSD T.SAITOH 2002/08/23 ---------------------------*
*--- スプール処理
PERFORM FRM_PRINT.
*---APPEND START PSD T.SAITOH 2002/08/23 ---------------------------*
ELSE.
*---APPEND END   PSD T.SAITOH 2002/08/23 ---------------------------*
*--- レポート出力処理
PERFORM FRM_WRITE.
*---APPEND START PSD T.SAITOH 2002/08/23 ---------------------------*
ENDIF.
*---APPEND END   PSD T.SAITOH 2002/08/23 ---------------------------*
* Add 2002.07.31 >>>
DELETE DATASET P_FILE .
* Add 2002.07.31 <<<
***********************************************************************
*    TOP-OF-PAGE
***********************************************************************
TOP-OF-PAGE.

WRITE :  50(30)  TEXT-017,                          " 表題
85(8)   TEXT-018,                          " 作成日時
95(8)   SY-DATUM+2(6) USING EDIT MASK '__/__/__',
" 作成日付
105(5)  SY-UZEIT+0(4) USING EDIT MASK '__:__',
" 作成時間
/87(4)   TEXT-019,                          " 部門
93(4)   GF_DATA-WERKS,                     " プラントCD
99(20) GF_DATA-EBNAME,                     " プラント名
123(8)  TEXT-020,                          " 購買担当
133(3)  GF_DATA-EKGRP,                     " 購買GP
138(18) GF_DATA-EKNAME.                    " 購買GP名
ULINE AT /87(70).
WRITE : /0(8)    TEXT-021,                          " 発注日
10(15)  TEXT-022,                          " 発注番号
27(18)  TEXT-023,                          " 品目コード
47(30)  TEXT-024,                          " 品名
79(25)  TEXT-025,                          " 仕入先品目CD
*           106(15) TEXT-026,                          " 発注数
114(15) TEXT-026,                          " 発注数
123(4)  TEXT-027,                          " 単位
*           128(15) TEXT-028,                          " 発注単価
134(15) TEXT-028,                          " 発注単価
145(8)  TEXT-029,                          " 請書番号
155(8)  TEXT-030,                          " 納入先
165(8)  TEXT-031,                          " 手配日
175(4)  TEXT-032.                          " 区分
ULINE.

*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK
*&---------------------------------------------------------------------*
*       入力チェック
*----------------------------------------------------------------------*
FORM FRM_CHECK.
DATA : G_WERKS       TYPE  T001W-WERKS.
SELECT SINGLE WERKS FROM T001W
INTO G_WERKS
WHERE WERKS = P_WERKS.
CASE SY-SUBRC.
WHEN 0.
WHEN 4.                                   " POPUPエラーメッセージ
MESSAGE I021(Z1) WITH P_WERKS.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID CNS_T001W SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_CHECK
*&---------------------------------------------------------------------*
*&      Form  FRM_FILE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_FILE.
DATA : FILE_DATA      TYPE X.                             " 16進数
*--- 入力FILEOPEN
* Mod ES-UP 2012/08/22 -->
*  OPEN DATASET P_FILE FOR INPUT IN TEXT MODE.
DATA L_CODEPAGE TYPE ABAP_ENCODING.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).

OPEN DATASET P_FILE FOR INPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
* Mod ES-UP 2012/08/22 <--
CASE SY-SUBRC.
WHEN 0.
WHEN 4.                              " FILEOPEN出来なかった場合
MESSAGE I306(Z1) WITH TEXT-013 P_FILE.
CLOSE DATASET P_FILE.
STOP.
WHEN OTHERS.                         " システムエラーの場合
MESSAGE I306(Z1) WITH TEXT-013 P_FILE.
CLOSE DATASET P_FILE.
STOP.
ENDCASE.
DO.
*--- 入力FILE読み込み
* Mod ES-UP 2012/10/25 -->
*    READ DATASET P_FILE INTO READ_FILE.
READ DATASET P_FILE INTO GF_FILE.
* Mod ES-UP 2012/10/25 <--
CASE SY-SUBRC.
WHEN 0.                            " FILE 読み込みできた場合
* Del ES-UP 2012/10/25 -->
*        GF_FILE = READ_FILE.             " 内部テーブルに格納
* Del ES-UP 2012/10/25 <--
APPEND GF_FILE TO GT_FILE.
WHEN 4.                            " FILE 読み込みできない場合
* Del ES-UP 2012/10/25 -->
*        FILE_DATA = READ_FILE+0(1).
*        IF FILE_DATA <> '00'.
*          GF_FILE = READ_FILE.           " 内部テーブルに格納
*          APPEND GF_FILE TO GT_FILE.
*        ENDIF.
* Del ES-UP 2012/10/25 <--
CLOSE DATASET P_FILE.
EXIT.
ENDCASE.
ENDDO.
IF GT_FILE IS INITIAL.                 " FILEDATAが一つもなかった場合
MESSAGE I611(Z1).
STOP.
ENDIF.
ENDFORM.                    " FRM_FILE
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_GET
*&---------------------------------------------------------------------*
*       CHECK項目取得
*----------------------------------------------------------------------*
FORM FRM_CHECK_GET.
*--- 他社仕入先の参照取得
SELECT SINGLE LIFN2 FROM WYT3
INTO G_LIFN2
WHERE  LIFNR = GF_FILE-LIFNRCD
AND    EKORG = CNS_1000
AND    PARVW = CNS_Z1.
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
G_LIFN2 = ' '.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID CNS_WYT3 SY-SUBRC.
ENDCASE.
*--- 名称取得
SELECT SINGLE NAME2 FROM LFA1
INTO G_NAME2
WHERE  LIFNR  = G_LIFN2.
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
G_NAME2 = ' '.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID CNS_LFA1 SY-SUBRC.
ENDCASE.
ENDFORM.                    " FRM_CHECK_GET

*&---------------------------------------------------------------------*
*&      Form  FRM_GET
*&---------------------------------------------------------------------*
*       比較項目取得（発注番号・明細存在CHECK)
*----------------------------------------------------------------------*
FORM FRM_GET01.
*--- 比較項目取得（発注番号・明細存在CHECK）
*（発注番号・明細・プラント・品目CD・仕入先品目CD・発注数量・数量単位）
SELECT SINGLE * INTO CORRESPONDING FIELDS OF GF_EKPO
FROM EKPO
WHERE EBELN  =  GF_DATA-EBELN1
AND   EBELP  =  GF_DATA-EBELP.
FLG_SUB = SY-SUBRC.
CASE FLG_SUB.                            " 存在CHECK OK
WHEN 0.
*--- 発注単価チェック項目算出
IF GF_EKPO-PEINH = 0.
R_TANKA = 0.
ELSE.
*---MODIFY START PSD T.SAITOH 2002/04/17 価格変換対応--------------*
PERFORM FRM_AMOUNT_SAP_TO_DISP USING GF_DATA-EBELN1
CHANGING GF_EKPO-NETPR.
*---MODIFY END   PSD T.SAITOH 2002/04/17 単価チェック不具合---------*
R_TANKA = GF_EKPO-NETPR / GF_EKPO-PEINH.
ENDIF.
WHEN 4.                                " 存在CHECK NG
CHECK_ERR = CNS_X.
PERFORM FRM_ALL_CHEK.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID CNS_EKPO SY-SUBRC.
ENDCASE.
ENDFORM.                                                    " FRM_GET01
*&---------------------------------------------------------------------*
*&      Form  FRM_GET02
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*

FORM FRM_GET02.
*--- 発注番号・明細存在・プラント存在CHECK
SELECT SINGLE * INTO CORRESPONDING FIELDS OF GF_EKPO
FROM EKPO
WHERE EBELN  =  GF_DATA-EBELN1
AND   EBELP  =  GF_DATA-EBELP
AND   WERKS  =  GF_DATA-WERKS.

CASE SY-SUBRC.                           " 存在CHECK OK
WHEN 0.
CHECK_ERR03 = CNS_X.
WHEN 4.                                " 存在CHECK NG
CHECK_ERR = CNS_X.
PERFORM FRM_ALL_CHEK.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID CNS_EKPO SY-SUBRC.
ENDCASE.

ENDFORM.                                                    " FRM_GET02
*&---------------------------------------------------------------------*
*&      Form  FRM_CHEK01
*&---------------------------------------------------------------------*
*       項目CHECK( NAME2 = 1 )
*----------------------------------------------------------------------*
FORM FRM_CHEK01.
*---APPEND START PSD T.SAITOH 2002/03/20 ISOコード→R/3単位変換------*
DATA:LW_MEINS(3) TYPE C."作業用単位
*---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*

IF GF_EKPO-WERKS <> GF_DATA-WERKS.        " プラントCHECK
CHECK_ERR = CNS_X.
CHECK_WER = CNS_X.
ENDIF.
IF G_NAME2+0(1) <> 2.
IF   GF_EKPO-MATNR <> GF_DATA-MATNR.            " 品目CDCHECK
CHECK_ERR = CNS_X.
GF_DATA-ERMATNR = CNS_*18.
ENDIF.
ENDIF.
IF G_NAME2+0(1) <> 2.
IF  GF_EKPO-MENGE  <> GF_DATA-MENSE.            " 発注数CHECK
CHECK_ERR = CNS_X.
GF_DATA-ERMENSE = CNS_*15.
ENDIF.
ENDIF.
*---APPEND START PSD T.SAITOH 2002/03/20 ISOコード→R/3単位変換------*
PERFORM FRM_UNIT_CONVERSION_FROM_ISO USING    GF_DATA-MEINS
CHANGING LW_MEINS.
*---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*
*---MODIFY START PSD T.SAITOH 2002/03/20 ---------------------------*
*  IF   GF_EKPO-MEINS <> GF_DATA-MEINS.            " 単位CHECK
IF G_NAME2+0(1) <> 2.
IF   GF_EKPO-MEINS <> LW_MEINS.                  " 単位CHECK
*---MODIFY END   PSD T.SAITOH 2002/03/20 ---------------------------*
CHECK_ERR = CNS_X.
GF_DATA-ERMEINS = CNS_*3.
ENDIF.
***単価チェックが必要 2002.06.05 ADD>>>
IF GF_FILE-TANKUBUN = '0'.
IF   R_TANKA <> GF_DATA-TANKA.                  " 単価CHECK
CHECK_ERR = CNS_X.
GF_DATA-ERTANKA = CNS_*15.
ENDIF.
ELSEIF GF_FILE-TANKUBUN = '2' OR
GF_FILE-TANKUBUN = '9' OR
GF_FILE-TANKUBUN = 'A' OR
GF_FILE-TANKUBUN = 'B' .
IF   R_TANKA <> GF_DATA-TANKA.                  " 単価CHECK
CHECK_ERR = CNS_X.
GF_DATA-ERTANKA = '仮単価'.
ENDIF.
ENDIF.
ENDIF.
***単価決定区分 <<<<
*--- チェック2の時のみ仕入先品目CDチェック
IF G_NAME2+0(1) = 2.
IF   GF_EKPO-IDNLF <> GF_DATA-IDNLF.          " 仕入先品目CDCHECK
CHECK_ERR = CNS_X.
GF_DATA-ERIDNLF = CNS_*25.
ENDIF.
ENDIF.

ENDFORM.                    " FRM_CHEK01
*&---------------------------------------------------------------------*
*&      Form  FRM_NAME
*&---------------------------------------------------------------------*
*       仕入先・プラント・購買GPの名称取得
*----------------------------------------------------------------------*
FORM FRM_NAME.
*--- 手配先名取得
SELECT SINGLE NAME1 FROM LFA1
INTO GF_DATA-LINAME
WHERE LIFNR = GF_DATA-LIFNR.
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
GF_DATA-LINAME = CNS_*10.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID CNS_LFA1 SY-SUBRC.
ENDCASE.

*--- プラント名取得
IF CHECK_WER = CNS_X.
GF_DATA-WERKS = P_WERKS.
SELECT SINGLE NAME1 FROM T001W
INTO GF_DATA-EBNAME
WHERE  WERKS = P_WERKS.
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
GF_DATA-EBNAME = ' '.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID CNS_T001W SY-SUBRC.
ENDCASE.
ELSE.
SELECT SINGLE NAME1 FROM T001W
INTO GF_DATA-EBNAME
WHERE  WERKS = GF_DATA-WERKS.
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
GF_DATA-EBNAME = ' '.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID CNS_T001W SY-SUBRC.
ENDCASE.
ENDIF.
*--- 購買GP名取得
SELECT SINGLE EKNAM FROM T024
INTO GF_DATA-EKNAME
WHERE EKGRP = GF_DATA-EKGRP.
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
GF_DATA-EKNAME = ' '.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID CNS_T024 SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_NAME
*&---------------------------------------------------------------------*
*&      Form  FRM_KUBUN
*&---------------------------------------------------------------------*
*       受託区分・区分内容算出処理
*----------------------------------------------------------------------*

FORM FRM_KUBUN.
*--- 受託区分処理

* Add 2002.03.29 >>>>>>>
*  If GW_ERROR Is Initial .
* Add 2002.03.29 <<<<<<<
GF_DATA-KUBUN = GF_FILE-CYUU02.

*--- 区分内容処理
CASE GF_FILE-CYUU02.
WHEN SPACE.
IF GF_FILE-TANKUBUN = '0'.
GF_DATA-KUDATA = TEXT-034.
ELSEIF GF_FILE-TANKUBUN = '2' OR
GF_FILE-TANKUBUN = '9' OR
GF_FILE-TANKUBUN = 'A' OR
GF_FILE-TANKUBUN = 'B' .
GF_DATA-KUDATA = TEXT-034.
ENDIF.
WHEN 1.
GF_DATA-KUDATA = TEXT-004.               " 注文OK
* Add 2006.03.02 --->
**R/3品目コードチェック
If GF_DATA-ERMATNR = CNS_*18.
GF_DATA-KUDATA = '品目相違'.          "
EndIf .
**仕入先品目チェック
If GF_DATA-ERIDNLF = CNS_*25.
GF_DATA-KUDATA = '仕入先品目相違'.          "
EndIf .
**数量チェック
If GF_DATA-ERMENSE = CNS_*15.
GF_DATA-KUDATA = '発注数相違'.          "
EndIf .
**単位チェック
If GF_DATA-ERMEINS = CNS_*3.
GF_DATA-KUDATA = '単位相違'.          "
EndIf .
* Add 2006.03.02 <---
* Add 2006/02/17 --->
If GF_DATA-ERTANKA = CNS_*15.
GF_DATA-KUDATA = '単価相違'.          "
EndIf .
* Add 2006/02/17 <---

* ↓ 2002/03/31 APPEND
*--- 更新処理（バッチインプット）
PERFORM FRM_BACHI.
* ↑ 2002/03/31 APPEND
WHEN 2.
CASE GF_FILE-CYUU01.
WHEN 1.
GF_DATA-KUDATA = TEXT-005.           " 営業がNO
WHEN 7.
GF_DATA-KUDATA = TEXT-006.           " 注番重複
WHEN 8.
GF_DATA-KUDATA = TEXT-007.           " 先行手配
WHEN 9.
GF_DATA-KUDATA = TEXT-008.           " 誤データ
WHEN OTHERS.
ENDCASE.
WHEN ' '.
CASE GF_FILE-CYUU01.
WHEN 1.
GF_DATA-KUDATA = TEXT-009.           " 重要先未登録
WHEN 4.
GF_DATA-KUDATA = TEXT-010.           " 品名コード未登録
WHEN OTHERS.
ENDCASE.
WHEN 4.
CASE GF_FILE-CYUU01.                     " 需要先品名未登録
WHEN 1.
GF_DATA-KUDATA = TEXT-011.
WHEN OTHERS.
ENDCASE.
WHEN OTHERS.
ENDCASE.
*  Else .
* ↓ APPEND 2002/03/31
IF NOT GW_ERROR IS INITIAL .
* ↑
MOVE : '?' TO GF_DATA-KUBUN ,
'BDC_ERR' TO GF_DATA-KUDATA .
ENDIF.
* Add 2002.03.29 <<<<<<<
ENDFORM.                    " FRM_KUBUN
*&---------------------------------------------------------------------*
*&      Form  FRM_PRINT
*&---------------------------------------------------------------------*
*       スプール処理
*----------------------------------------------------------------------*
FORM FRM_PRINT.
DATA : R_PRANT(4)     TYPE C.
DATA : R_PRINT_NAME(50)   TYPE C.

LOOP AT GT_DATA INTO GF_DATA.

*--- 出力デバイス取得
PERFORM FRM_ADRNR.

IF NOT ( G_PRINT IS INITIAL ).         " 出力デバイスNGの場合出力NG

*--- プラント名が違ったらスプール処理
IF FLG_WERKS <> GF_DATA-WERKS.
CONCATENATE TEXT-012 TEXT-014 GF_DATA-EBNAME TEXT-015
INTO R_PRINT_NAME.
NEW-PAGE PRINT ON DESTINATION  G_PRINT
COVER TEXT   R_PRINT_NAME
IMMEDIATELY  CNS_X
KEEP IN SPOOL  CNS_X
LINE-COUNT 65
LINE-SIZE  255
LAYOUT 'X_65_255'
NEW-SECTION
NO DIALOG.

*        IF FLG_LIFNR = GF_DATA-LIFNR.
WRITE : /0(6)    TEXT-033,
8(10)    GF_DATA-LIFNR,            " 手配先CD
20(34)  GF_DATA-LINAME.            " 手配先CD名
* ↓ 2002/03/31 APPEND
FLG_LIFNR = GF_DATA-LIFNR.
* ↑
*        ENDIF.
*--- 購買担当が違ったら改行
ELSEIF FLG_EKGRP <> GF_DATA-EKGRP.
NEW-PAGE.
*        IF FLG_LIFNR = GF_DATA-LIFNR.
WRITE : /0(6)    TEXT-033,
8(10)   GF_DATA-LIFNR,             " 手配先CD
20(34)  GF_DATA-LINAME.            " 手配先CD名
* ↓ 2002/03/31 APPEND
FLG_LIFNR = GF_DATA-LIFNR.
* ↑
ENDIF.
*      ENDIF.
*---DELETE START PSD T.SAITOH 2002/08/23 ---------------------------*
**---APPEND START PSD T.SAITOH 2002/08/08 ---------------------------*
**     オンラインの時のみ設定する。
*      IF SY-BATCH <> 'X'.
**---APPEND END   PSD T.SAITOH 2002/08/08 ---------------------------*
*---DELETE END   PSD T.SAITOH 2002/08/23 ---------------------------*
*--- WRITE処理
IF FLG_LIFNR <> GF_DATA-LIFNR.
WRITE : /0(6)    TEXT-033,
8(10)   GF_DATA-LIFNR,               " 手配先CD
20(34)  GF_DATA-LINAME.              " 手配先CD名
ENDIF.
WRITE : /0(8)   GF_DATA-DATUM USING EDIT MASK '__/__/__',
" 発注日
" 発注日
10(15)  GF_DATA-EBELN,                 " 発注番号
27(18)  GF_DATA-MATNR,                 " 品目コード
47(30)  GF_DATA-TXZ01,                 " 品名
79(25)  GF_DATA-IDNLF,                 " 仕入先品目コード
106(15) GF_DATA-MENSE,                 " 発注数
123(3)  GF_DATA-MEINS,                 " 単位
128(15) GF_DATA-TANKA,                 " 発注単価
145(8)  GF_DATA-LABNR,                 " 請書番号
155(8)  GF_DATA-UKE,                   " 納入先
165(8)  GF_DATA-DATADAY,               " 手配日
175(1)  GF_DATA-KUBUN,                 " 区分
178(16) GF_DATA-KUDATA.                " 区分内容
IF NOT ( GF_DATA-EREBELN IS INITIAL )
OR  ( GF_DATA-ERMATNR IS INITIAL )
OR  ( GF_DATA-ERIDNLF IS INITIAL )
OR  ( GF_DATA-ERMENSE IS INITIAL )
OR  ( GF_DATA-ERMEINS IS INITIAL )
OR  ( GF_DATA-ERTANKA IS INITIAL )
.
WRITE : /10(15)  GF_DATA-EREBELN,          " 発注番号エラー
27(18)  GF_DATA-ERMATNR,          " 品目CDエラー
79(25)  GF_DATA-ERIDNLF,          " 仕入先品目CDエラー
106(15) GF_DATA-ERMENSE,          " 発注数エラー
123(3)  GF_DATA-ERMEINS,          " 単位エラー
128(15) GF_DATA-ERTANKA.          " 発注単価エラー
ENDIF.
*---DELETE START PSD T.SAITOH 2002/08/23 ---------------------------*
**---APPEND START PSD T.SAITOH 2002/08/08 ---------------------------*
*      ENDIF."オンラインの時のみ処理する
**---APPEND END   PSD T.SAITOH 2002/08/08 ---------------------------*
*---DELETE END   PSD T.SAITOH 2002/08/23 ---------------------------*
FLG_WERKS = GF_DATA-WERKS.                   " フラグプラントCD
FLG_EKGRP = GF_DATA-EKGRP.                   " フラグ購買GP
FLG_LIFNR = GF_DATA-LIFNR.                   " フラグ仕入先
*--- クリア処理
CLEAR GF_DATA.
ENDIF.
ENDLOOP.
*---DELETE START PSD T.SAITOH 2002/08/23 ---------------------------*
**---APPEND START PSD T.SAITOH 2002/08/08 ---------------------------*
** オンラインの時のみ設定する。
*  IF SY-BATCH <> 'X'.
**---APPEND END   PSD T.SAITOH 2002/08/08 ---------------------------*
*---DELETE END   PSD T.SAITOH 2002/08/23 ---------------------------*
NEW-PAGE PRINT OFF.
*---DELETE START PSD T.SAITOH 2002/08/23 ---------------------------*
**---APPEND START PSD T.SAITOH 2002/08/08 ---------------------------*
*  ENDIF."オンラインの時のみ処理する
**---APPEND END   PSD T.SAITOH 2002/08/08 ---------------------------*
*---DELETE END   PSD T.SAITOH 2002/08/23 ---------------------------*
ENDFORM.                    " FRM_PRINT
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE
*&---------------------------------------------------------------------*
*       帳票出力処理
*----------------------------------------------------------------------*

FORM FRM_WRITE.
* Add 2002.03.29 >>>
CLEAR : FLG_LIFNR .
* Add 2002.03.29 <<<

LOOP AT GT_DATA INTO GF_DATA.

*--- プラント名が違ったら改行
IF FLG_WERKS <> GF_DATA-WERKS.
NEW-PAGE.
*      IF FLG_LIFNR = GF_DATA-LIFNR.
WRITE : /0(6)    TEXT-033,                  " 手配先名
8(10)   GF_DATA-LIFNR,             " 手配先CD
20(34)  GF_DATA-LINAME.            " 手配先CD名
* ↓ 2002/03/31 APPEND
FLG_LIFNR = GF_DATA-LIFNR.
* ↑

*      ENDIF.
*--- 購買担当が違ったら改行
ELSEIF FLG_EKGRP <> GF_DATA-EKGRP.
NEW-PAGE.
*      IF FLG_LIFNR = GF_DATA-LIFNR.
WRITE : /0(6)     TEXT-033,                 " 手配先名
8(10)    GF_DATA-LIFNR,            " 手配先CD
20(34)   GF_DATA-LINAME.           " 手配先CD名
* ↓ 2002/03/31 APPEND
FLG_LIFNR = GF_DATA-LIFNR.
* ↑
*      ENDIF.
ENDIF.
*--- WRITE処理
IF FLG_LIFNR <> GF_DATA-LIFNR.
WRITE : /0(6)    TEXT-033,                    " 手配先名
8(10)   GF_DATA-LIFNR,               " 手配先CD
20(34)  GF_DATA-LINAME.              " 手配先CD名
ENDIF.
WRITE : /0(8)   GF_DATA-DATUM USING EDIT MASK '__/__/__',
" 発注日
" 発注日
10(15)  GF_DATA-EBELN,                 " 発注番号
27(18)  GF_DATA-MATNR,                 " 品目コード
47(30)  GF_DATA-TXZ01,                 " 品名
79(25)  GF_DATA-IDNLF,                 " 仕入先品目コード
106(15) GF_DATA-MENSE,                 " 発注数
123(3)  GF_DATA-MEINS,                 " 単位
128(15) GF_DATA-TANKA,                 " 発注単価
145(8)  GF_DATA-LABNR,                 " 請書番号
155(8)  GF_DATA-UKE,                   " 納入先
*              165(8)  GF_DATA-DATADAY,               " 手配日
165(8)  GF_DATA-NOUKI,                 " 納期
175(1)  GF_DATA-KUBUN,                 " 区分
178(16) GF_DATA-KUDATA.                " 区分内容
IF NOT ( GF_DATA-EREBELN IS INITIAL )
OR  ( GF_DATA-ERMATNR IS INITIAL )
OR  ( GF_DATA-ERIDNLF IS INITIAL )
OR  ( GF_DATA-ERMENSE IS INITIAL )
OR  ( GF_DATA-ERMEINS IS INITIAL )
OR  ( GF_DATA-ERTANKA IS INITIAL )
.
WRITE : /10(15)  GF_DATA-EREBELN,          " 発注番号エラー
27(18)  GF_DATA-ERMATNR,          " 品目CDエラー
79(25)  GF_DATA-ERIDNLF,          " 仕入先品目CDエラー
106(15) GF_DATA-ERMENSE,          " 発注数エラー
123(3)  GF_DATA-ERMEINS,          " 単位エラー
128(15) GF_DATA-ERTANKA.          " 発注単価エラー
ENDIF.
FLG_WERKS = GF_DATA-WERKS.                      " フラグプラントCD
FLG_EKGRP = GF_DATA-EKGRP.                      " フラグ購買GP
FLG_LIFNR = GF_DATA-LIFNR.                      " フラグ仕入先
*--- クリア処理
CLEAR GF_DATA.

ENDLOOP.
ENDFORM.                    " FRM_WRITE
*&---------------------------------------------------------------------*
*&      Form  FRM_ADRNR
*&---------------------------------------------------------------------*
*       出力先デバイス取得
*----------------------------------------------------------------------*
FORM FRM_ADRNR.

*--- アドレス名取得
SELECT SINGLE ADRNR FROM T001W
INTO  G_ADRNR
WHERE  WERKS = GF_DATA-WERKS.
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID CNS_T001W SY-SUBRC.
ENDCASE.

*--- 出力デバイス取得
SELECT SINGLE PRINT_DEST FROM ADR10
INTO G_PRINT
WHERE ADDRNUMBER = G_ADRNR
* Add 2010/03/09 --->
and   FLGDEFAULT = cns_x
* Add 2010/03/09 <---
.
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
G_PRINT = ' '.          " 出力先が見つからなかった場合
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID CNS_T001W SY-SUBRC.
ENDCASE.
ENDFORM.                    " FRM_ADRNR
*----------------------------------------------------------------------*
*        Start new screen( バッチ内部TBL DYNPROレコード作成 ）         *
*----------------------------------------------------------------------*
FORM BDC_DYNPRO USING PROGRAM DYNPRO.
CLEAR GT_BDCDATA.
GT_BDCDATA-PROGRAM  = PROGRAM.
GT_BDCDATA-DYNPRO   = DYNPRO.
GT_BDCDATA-DYNBEGIN = 'X'.
APPEND GT_BDCDATA.
ENDFORM.

*----------------------------------------------------------------------*
*        Insert field（ バッチ内部TBL 機能コードレコード作成 ）
*----------------------------------------------------------------------*
FORM BDC_FIELD USING FNAM FVAL.
CLEAR GT_BDCDATA.
GT_BDCDATA-FNAM = FNAM.
GT_BDCDATA-FVAL = FVAL.
APPEND GT_BDCDATA.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  BACHITBL_MAKE
*&---------------------------------------------------------------------*
*       バッチインプット用内部TBL
*----------------------------------------------------------------------*
FORM BACHITBL_MAKE.
* Add 2002.03.29 >>>>>>>
DATA : W_FNAM LIKE GT_BDCDATA-FNAM .
* Add 2002.03.29 <<<<<<<
*--- 第一画面
PERFORM BDC_DYNPRO      USING 'SAPMM06E' '0105'.
PERFORM BDC_FIELD       USING 'BDC_CURSOR'
'RM06E-BSTNR'.
PERFORM BDC_FIELD       USING 'RM06E-BSTNR'
GF_DATA-EBELN1.
PERFORM BDC_FIELD       USING 'BDC_OKCODE'
'/00'.
*--- 第二画面
PERFORM BDC_DYNPRO      USING 'SAPMM06E' '0120'.
PERFORM BDC_FIELD       USING 'BDC_CURSOR'
'RM06E-EBELP'.
PERFORM BDC_FIELD       USING 'RM06E-EBELP'
GF_DATA-EBELP.
PERFORM BDC_FIELD       USING 'BDC_OKCODE'
'/00'.
*--- 第三画面
PERFORM BDC_DYNPRO      USING 'SAPMM06E' '0120'.
PERFORM BDC_FIELD       USING 'BDC_CURSOR'
'RM06E-BSTPO(01)'.
PERFORM BDC_FIELD       USING 'RM06E-TCSELFLAG(01)'
'X'.
PERFORM BDC_FIELD       USING 'BDC_OKCODE'
'=DETA'.

*--- 第四画面
PERFORM BDC_DYNPRO      USING 'SAPMM06E' '0111'.
PERFORM BDC_FIELD       USING 'BDC_CURSOR'
'EKPO-MENGE'.
PERFORM BDC_FIELD       USING 'EKPO-LABNR'
GF_DATA-LABNR.
PERFORM BDC_FIELD       USING 'BDC_OKCODE'
'=BACK'.
*--- 第五画面
PERFORM BDC_DYNPRO      USING 'SAPMM06E' '0120'.
PERFORM BDC_FIELD       USING 'BDC_CURSOR'
'RM06E-BSTPO(01)'.
* Add 2002.03.29 >>>>>>>
PERFORM BDC_FIELD       USING 'BDC_OKCODE'
'=DR'.
*--- 第六画面
PERFORM BDC_DYNPRO      USING 'SAPDV70A' '0100'.
PERFORM BDC_FIELD       USING 'BDC_CURSOR'
'DV70A-BTEXT'.

MOVE GF_DATA-EBELN1 TO GW_OBJKY .
SELECT * FROM NAST
WHERE KAPPL EQ 'EF'
AND  KSCHL EQ 'ZM99'
AND  OBJKY EQ  GW_OBJKY
AND  VSTAT EQ  0
.
MOVE 'X' TO  : CHECK_ERR ,
GW_ERROR  .

ENDSELECT .
SELECT COUNT( * ) FROM NAST
INTO NAST_COUNT
WHERE KAPPL EQ 'EF'
AND  OBJKY EQ GW_OBJKY
.
ADD 1 TO NAST_COUNT .
CONCATENATE 'DNAST-KSCHL('
NAST_COUNT
')'
INTO W_FNAM
.
CLEAR : NAST_COUNT .
PERFORM BDC_FIELD       USING W_FNAM
'ZM99' .
PERFORM BDC_FIELD       USING 'BDC_OKCODE'
'/00'.
*--- 　第七画面
PERFORM BDC_DYNPRO      USING 'SAPDV70A' '0100'.
PERFORM BDC_FIELD       USING 'BDC_CURSOR'
'DV70A-BTEXT'.
PERFORM BDC_FIELD       USING 'BDC_OKCODE'
'=V70S'.
* Add 2002.03.29 <<<<<<<
*  PERFORM BDC_FIELD       USING 'BDC_OKCODE'
*                                '=BU'.

ENDFORM.                    " BACHITBL_MAKE

*&---------------------------------------------------------------------*
*&      Form  FRM_ALL_CHEK
*&---------------------------------------------------------------------*
*       項目全エラー
*----------------------------------------------------------------------*

FORM FRM_ALL_CHEK.
GF_DATA-EREBELN = CNS_*17.               " 発注番号エラー
GF_DATA-ERMATNR = CNS_*18.               " 品目CDエラー
GF_DATA-ERIDNLF = CNS_*25.               " 仕入先品目CDエラー
GF_DATA-ERMENSE = CNS_*15.               " 発注数エラー
GF_DATA-ERMEINS = CNS_*3.                " 単位エラー
GF_DATA-ERTANKA = CNS_*15.               " 単価エラー
ENDFORM.                    " FRM_ALL_CHEK
*&---------------------------------------------------------------------*
*&      Form  FRM_GF_DATA_GET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_GF_DATA_GET.
DATA : R_MENSE(13)  TYPE C,
R_TAN(14)    TYPE C.
*--- 必要項目取得
GF_DATA-WERKS+0(1) = CNS_P.
GF_DATA-WERKS+3(1) = CNS_0.
GF_DATA-WERKS+1(2) = GF_FILE-EBELN+0(2).    " プラント
GF_DATA-EBELN1 = GF_FILE-EBELN+3(10).       " 発注伝票番号
GF_DATA-EBELP+0(3) = CNS_000.
GF_DATA-EBELP+3(1) = GF_FILE-EBELN+14(1).
GF_DATA-EBELP+4(1) = CNS_0.                 " 明細番号
* ↓ 2002/03/31 MODIFY
*  GF_DATA-EKGRP = GF_FILE-EKGRP+4(3).         " 購買GP
*-- 購買グループの先頭スペースのカット
CONDENSE GF_FILE-EKGRP NO-GAPS.
GF_DATA-EKGRP = GF_FILE-EKGRP+0(3).        " 購買グループ
* ↑ 2002/03/31 MODIFY
GF_DATA-LIFNR = GF_FILE-LIFNRCD.            " 手配先CD
GF_DATA-DATUM = GF_FILE-DAY01.              " 発注日
GF_DATA-EBELN = GF_FILE-EBELN.              " 注文番号
GF_DATA-MATNR = GF_FILE-MATNR.              " 品目CD
GF_DATA-TXZ01 = GF_FILE-TXZ01.              " 品名
GF_DATA-IDNLF = GF_FILE-IDNLF.              " 仕入先品目CD
GF_DATA-MEINS = GF_FILE-MEINS.              " 単位

*---MODIFY START PSD T.SAITOH 2002/04/17 ショートダンプ対応---------*
* スペースを０に置換する
PERFORM FRM_REPLACE_SPACE_WITH_ZERO CHANGING GF_FILE-MENSE.
PERFORM FRM_REPLACE_SPACE_WITH_ZERO CHANGING GF_FILE-TANKA.
*---MODIFY END   PSD T.SAITOH 2002/04/17 ---------------------------*
*--- 2002/02/21 PSD C.YAMAGUCHI MOD ↓
R_MENSE(9) = GF_FILE-MENSE+0(9).              " 発注数
R_MENSE+9(1) = '.'.
R_MENSE+10(3) = GF_FILE-MENSE+9(3).
GF_DATA-MENSE = R_MENSE.
R_TAN(10) = GF_FILE-TANKA+0(10).               " 発注単価
R_TAN+10(1) = '.'.
R_TAN+11(3) = GF_FILE-TANKA+10(3).
GF_DATA-TANKA = R_TAN.
*--- 2002/02/21 PSD C.YAMAGUCHI MOD ↑
GF_DATA-LABNR = GF_FILE-NOUNO.              " 発注請書番号
GF_DATA-UKE   = GF_FILE-UKE.                " 納入先

*--- 手配日取得処理
GF_DATA-DATADAY+0(2) = GF_FILE-DAY02+0(2).
GF_DATA-DATADAY+2(1) = '/'.
GF_DATA-DATADAY+3(2) = GF_FILE-DAY02+2(2).
GF_DATA-DATADAY+5(1) = '/'.
GF_DATA-DATADAY+6(2) = GF_FILE-DAY02+4(2).  " 手配日
*--- 納期取得処理
GF_DATA-NOUKI+0(2) = GF_FILE-NOUKI+0(2).
GF_DATA-NOUKI+2(1) = '/'.
GF_DATA-NOUKI+3(2) = GF_FILE-NOUKI+2(2).
GF_DATA-NOUKI+5(1) = '/'.
GF_DATA-NOUKI+6(2) = GF_FILE-NOUKI+4(2).  " 手配日
ENDFORM.                    " FRM_GF_DATA_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_BACHI
*&---------------------------------------------------------------------*
*       更新処理（バッチインプット）
*----------------------------------------------------------------------*

FORM FRM_BACHI.
* Del 2006.03.02 --->
*  IF CHECK_ERR IS INITIAL.                        " CHECKOKの場合更新
* Del 2006.03.02 <---
IF CHECK_ERR03 = CNS_X.                       " 項目CHECK3の場合
IF FLG_EBELN1 <> GF_DATA-EBELN1.
FLG_LABNR = GF_DATA-LABNR.
ELSE.
IF FLG_LABNR IS INITIAL.
FLG_LABNR = GF_DATA-LABNR.
ENDIF.
GF_DATA-LABNR = FLG_LABNR.
ENDIF.
FLG_EBELN1 = GF_DATA-EBELN1.
ENDIF.

*--- バッチ内部TBL作成
PERFORM BACHITBL_MAKE.
* Add 2002.03.29 >>>>>>>
IF GW_ERROR IS INITIAL .
* Add 2002.03.29 <<<<<<<
CALL TRANSACTION 'ME22' USING GT_BDCDATA
MODE 'N'                " 画面表示NG
UPDATE 'S'
MESSAGES INTO MESSTAB.  " エラーメッセージ
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
WHEN OTHERS.
*---MODIFY START PSD T.SAITOH 2002/08/26 ---------------------------*
*          MESSAGE A311(Z1) WITH TEXT-016.
*          更新エラー：発注伝票No.&
MESSAGE S623(Z1) WITH GF_DATA-EBELN1.
*---MODIFY END   PSD T.SAITOH 2002/08/26 ---------------------------*
ENDCASE.
* Add 2002.03.29 >>>>>>>
ENDIF .
* Add 2002.03.29 <<<<<<<
REFRESH GT_BDCDATA.                          " バッチ内部TBLクリア
* Del 2006.03.02 --->
*  ENDIF.
* Del 2006.03.02 <---
ENDFORM.                    " FRM_BACHI

*---APPEND START PSD T.SAITOH 2002/03/20 ISOコード→R/3単位変換------*
*&---------------------------------------------------------------------*
*&      Form  FRM_UNIT_CONVERSION_FROM_ISO
*&---------------------------------------------------------------------*
*       ISOコード→R/3単位変換
*----------------------------------------------------------------------*
*      -->P_GF_DATA_MEINS  ISOコード
*      <--P_LW_MEINS       R/3基本数量単位
*----------------------------------------------------------------------*
FORM FRM_UNIT_CONVERSION_FROM_ISO USING    P_GF_DATA_MEINS
CHANGING P_LW_MEINS.

CALL FUNCTION 'Z_EUNIT_CONVERSION_FROM_ISO'
EXPORTING
ISOCODE = P_GF_DATA_MEINS
IMPORTING
MSEHI   = P_LW_MEINS
*            RESULT  =
EXCEPTIONS
DB_ERR  = 1
BLANK   = 2
OTHERS  = 3.
IF SY-SUBRC <> 0.
*---MODIFY START PSD T.SAITOH 2002/08/26 ---------------------------*
*   エラー時処理ショートダンプするため修正
*    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
MESSAGE S001(Z1) WITH 'Z_EUNIT_CONVERSION_FROM_ISO' SY-SUBRC.
*   汎用モジュールがエラーリターンしました(モジュール名 エラーコード)
*---MODIFY END   PSD T.SAITOH 2002/08/26 ---------------------------*
ENDIF.


ENDFORM.                    " FRM_UNIT_CONVERSION_FROM_ISO
*---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_FLG_CLEAR
*&---------------------------------------------------------------------*
*       エラーフラグのクリア
*----------------------------------------------------------------------*
FORM FRM_FLG_CLEAR.

CLEAR: CHECK_ERR ,
FLG_SUB   ,
LW_MEINS  ,
GW_ERROR  .

ENDFORM.                    " FRM_FLG_CLEAR
*---APPEND START PSD T.SAITOH 2002/04/17 価格変換対応------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*       金額変換処理
*----------------------------------------------------------------------*
*      -->P_TSUKACD  通貨コード
*      -->P_KINGAKU  変換前金額
*      <--P_HENKAN   変換後金額
*----------------------------------------------------------------------*
FORM FRM_KINGAKU_HENKAN USING    P_TSUKACD
P_KINGAKU
CHANGING P_HENKAN.
DATA : L_AMOUNT_DIS TYPE WMTO_S-AMOUNT,
L_AMOUNT_INT TYPE WMTO_S-AMOUNT.
L_AMOUNT_INT = P_KINGAKU.
*--- 汎用モジュール金額変換モジュール
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_DISPLAY'
EXPORTING
CURRENCY        = P_TSUKACD
AMOUNT_INTERNAL = L_AMOUNT_INT
IMPORTING
AMOUNT_DISPLAY  = L_AMOUNT_DIS
EXCEPTIONS
INTERNAL_ERROR  = 1
OTHERS          = 2.
IF SY-SUBRC <> 1.
P_HENKAN = L_AMOUNT_DIS.
ENDIF.

ENDFORM.                    " FRM_KINGAKU_HENKAN

*&---------------------------------------------------------------------*
*&      Form  FRM_AMOUNT_SAP_TO_DISP
*&---------------------------------------------------------------------*
*       通貨コードを取得して価格変換を行なう
*----------------------------------------------------------------------*
* --> 発注番号
* <-- 変換後金額
*----------------------------------------------------------------------*
FORM FRM_AMOUNT_SAP_TO_DISP USING    P_EBELN
CHANGING P_NETPR.

DATA: L_WAERS     TYPE EKKO-WAERS,  "通貨コード
L_NETPR(10) TYPE P DECIMALS 3."変換後金額

SELECT SINGLE WAERS
INTO (L_WAERS)
FROM EKKO
WHERE EBELN = P_EBELN.

IF NOT ( L_WAERS IS INITIAL ).
*   価格変換ロジック
PERFORM FRM_KINGAKU_HENKAN USING    L_WAERS
P_NETPR
CHANGING L_NETPR.

ENDIF.

P_NETPR = L_NETPR.

ENDFORM.                    " FRM_AMOUNT_SAP_TO_DISP
*&---------------------------------------------------------------------*
*&      Form  FRM_REPLACE_SPACE_WITH_ZERO
*&---------------------------------------------------------------------*
*       スペースを０に置き換える
*       (ブランク時のショートダンプ対応)
*----------------------------------------------------------------------*
*      <--P_GF_FILE_MENSE  数値文字列
*----------------------------------------------------------------------*
FORM FRM_REPLACE_SPACE_WITH_ZERO CHANGING P_MENSE.
*DATA: L_MENSE LIKE GF_FILE-MENSE.
DO.
REPLACE SPACE WITH '0' INTO P_MENSE.
IF SY-SUBRC <> 0.
EXIT.
ENDIF.
ENDDO.

ENDFORM.                    " FRM_REPLACE_SPACE_WITH_ZERO
*---APPEND END   PSD T.SAITOH 2002/04/17 ---------------------------*
