*&---------------------------------------------------------------------*
*&  Include           ZEGFIR0040_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  MAIN_PROCESS
*&---------------------------------------------------------------------*
*       メイン処理
*----------------------------------------------------------------------*
FORM MAIN_PROCESS .

DATA:
LW_FILENAME TYPE STRING,
LW_OUTPUT_CODEPAGE TYPE ZEOUTPUTCP,
LW_ERRFLG TYPE FLAG,
LST_T001_ADRC TYPE TY_T001_ADRC,
LST_T005X TYPE TY_T005X,
LTB_BKPF TYPE TY_T_BKPF,
LTB_BSEG TYPE TY_T_BSEG,
LTB_KNA1_ADRC TYPE TY_T_KNA1_ADRC,
LTB_FILE_OUT TYPE TY_T_FILE_OUT,
LTB_ZTEGZZT001 TYPE TY_T_ZTEGZZT001,
LTB_ZTEGFIT003 TYPE TY_T_ZTEGFIT003,
LTB_ZTEGFIT004 TYPE TY_T_ZTEGFIT004,
LTB_BUKRS TYPE STANDARD TABLE OF TY_BUKRS.

*  Customer Business Styleがブランク以外の場合、
*  「Document No.」が単一指定されているかをチェックし、単一ではない場合、エラーとする。
SELECT
BUKRS
FROM BKPF
INTO TABLE LTB_BUKRS
WHERE BUKRS = P_COMCD
AND BELNR IN S_DOCNO
AND GJAHR = P_YEAR.

W_COUNT = LINES( LTB_BUKRS ).

IF P_BUSSTY IS NOT INITIAL
AND W_COUNT > 1.
*    Specify only one Document No when Customer Business Style is setted.
MESSAGE S013
DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.

IF RB_PRINT = 'X' OR RB_DOWN = 'X'.
*    Print/Downの場合、データ取得
PERFORM GET_DATA CHANGING LST_T001_ADRC
LST_T005X
LTB_BKPF
LTB_BSEG
LTB_KNA1_ADRC.
*    Print/Downの場合、データ編集
PERFORM EDIT_DATA USING LST_T001_ADRC
LST_T005X
LTB_BKPF
LTB_BSEG
LTB_KNA1_ADRC
CHANGING LW_FILENAME
LW_OUTPUT_CODEPAGE
LTB_FILE_OUT
LTB_ZTEGZZT001
LTB_ZTEGFIT003
LTB_ZTEGFIT004.
ELSE.
*    RePrintの場合、データ取得、データ編集
PERFORM GET_EDIT_REPRINT CHANGING LW_FILENAME
LW_OUTPUT_CODEPAGE
LTB_FILE_OUT
LTB_ZTEGZZT001.
ENDIF.

W_OUTPUT_FN = LW_FILENAME.

*  ファイル出力
PERFORM OUTPUT_FILE USING LTB_FILE_OUT
LW_FILENAME
LW_OUTPUT_CODEPAGE
CHANGING LW_ERRFLG.

IF LW_ERRFLG IS INITIAL.
*    テーブル更新
PERFORM UPDATE_TABLE USING LTB_ZTEGZZT001
LTB_ZTEGFIT003
LTB_ZTEGFIT004.
ENDIF.

ENDFORM.                    " MAIN_PROCESS
*&---------------------------------------------------------------------*
*&      Form  GET_LOCAL_PATH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM GET_LOCAL_PATH .

DATA: LW_FILENAME    TYPE STRING,
LW_PATH        TYPE STRING,
LW_FULLPATH    TYPE STRING,
LW_USER_ACTION TYPE I.

CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG(
CHANGING
FILENAME             = LW_FILENAME
PATH                 = LW_PATH
FULLPATH             = LW_FULLPATH
USER_ACTION          = LW_USER_ACTION
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4 ).

IF SY-SUBRC = 0
AND LW_USER_ACTION = CL_GUI_FRONTEND_SERVICES=>ACTION_OK.
*  設定する
P_FPNAME = LW_FULLPATH.
ENDIF.

ENDFORM.                    " GET_LOCAL_PATH
*&---------------------------------------------------------------------*
*&      Form  GET_DEFAULT_PRINTER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_DEFAULT_PRINTER .

DATA:
LST_USER_DEFAULTS  TYPE USDEFAULTS.

CALL FUNCTION 'SUSR_USER_READ'
EXPORTING
USER_NAME            = SY-UNAME
IMPORTING
USER_DEFAULTS        = LST_USER_DEFAULTS
EXCEPTIONS
USER_NAME_NOT_EXISTS = 1
INTERNAL_ERROR       = 2
OTHERS               = 3.

IF SY-SUBRC = 0.

CALL FUNCTION 'CONVERSION_EXIT_SPDEV_OUTPUT'
EXPORTING
INPUT  = LST_USER_DEFAULTS-SPLD
IMPORTING
OUTPUT = P_PTRAY.

ENDIF.

ENDFORM.                    " GET_DEFAULT_PRINTER
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA
*&---------------------------------------------------------------------*
*       データ編集
*----------------------------------------------------------------------*
FORM EDIT_DATA USING VALUE(I_ST_T001_ADRC) TYPE TY_T001_ADRC
VALUE(I_ST_T005X) TYPE TY_T005X
VALUE(I_TB_BKPF) TYPE TY_T_BKPF
VALUE(I_TB_BSEG) TYPE TY_T_BSEG
VALUE(I_TB_KNA1_ADRC) TYPE TY_T_KNA1_ADRC
CHANGING O_FILENAME TYPE STRING
O_OUTPUT_CODEPAGE TYPE ZEOUTPUTCP
O_TB_FILE_OUT TYPE TY_T_FILE_OUT
O_TB_ZTEGZZT001 TYPE TY_T_ZTEGZZT001
O_TB_ZTEGFIT003 TYPE TY_T_ZTEGFIT003
O_TB_ZTEGFIT004 TYPE TY_T_ZTEGFIT004.

DATA:
LST_ZSEGFI0003 TYPE ZSEGFI0003,
LST_ZTEGFIT003 TYPE ZTEGFIT003,
LST_ZTEGFIT004 TYPE ZTEGFIT004,
LST_BKPF TYPE TY_BKPF,
LST_BSEG TYPE TY_BSEG,
LST_KNA1_ADRC TYPE TY_KNA1_ADRC,
LW_MODE TYPE ZEOUTPUTMODE,
LW_LOGNO TYPE ZEOUTPUTLOGNO,    " Output logno
LST_ZTEGZZT001 TYPE ZTEGZZT001.

CLEAR:
O_TB_ZTEGZZT001,
O_TB_FILE_OUT,
O_TB_ZTEGFIT003,
O_TB_ZTEGFIT004.

IF RB_PRINT = 'X' OR RB_REPNT = 'X'.
LW_MODE = C_OUTPUTMODE_P. "Print/Reprint
ELSE.
LW_MODE = C_OUTPUTMODE_D.  "Download
ENDIF.

*  ファイル名 & コードページ取得
PERFORM GET_FILE_NAME_CODEPAGE CHANGING O_FILENAME
O_OUTPUT_CODEPAGE.

LOOP AT I_TB_BSEG INTO LST_BSEG.

CLEAR:
LST_ZTEGZZT001,
LST_ZTEGFIT003,
LST_ZTEGFIT004,
LST_ZSEGFI0003,
LST_BKPF,
LST_KNA1_ADRC,
LW_LOGNO.

READ TABLE I_TB_BKPF INTO LST_BKPF
WITH KEY BELNR = LST_BSEG-BELNR.

READ TABLE I_TB_KNA1_ADRC INTO LST_KNA1_ADRC
WITH KEY KUNNR = LST_BSEG-KUNNR.

*  Get outputlog no
PERFORM GET_LOG_NO CHANGING LW_LOGNO.

********************
*  Output Log
********************
LST_ZTEGZZT001-MANDT = SY-MANDT.                  " Client
LST_ZTEGZZT001-Z_OUTPUT_LOG_NO = LW_LOGNO.         " Logno
LST_ZTEGZZT001-PROGNAME = SY-REPID.               " Program
LST_ZTEGZZT001-Z_REPORT_NAME = TEXT-034.   " Report name
LST_ZTEGZZT001-Z_OUTPUT_MODE = LW_MODE.    " Output mode
IF RB_PRINT = 'X' OR RB_REPNT = 'X'.
LST_ZTEGZZT001-LNAME = P_PTRAY.                    " Output device
ENDIF.
LST_ZTEGZZT001-Z_OUTPUT_PATH = O_FILENAME.       " Output file
LST_ZTEGZZT001-Z_OUTPUT_CP = O_OUTPUT_CODEPAGE.         " Codepage
LST_ZTEGZZT001-Z_KEY1_TYPE = 'BUKRS'.
LST_ZTEGZZT001-Z_KEY1_VALUE = LST_BKPF-BUKRS.       " Company code
LST_ZTEGZZT001-Z_KEY2_TYPE = 'BELNR'.
LST_ZTEGZZT001-Z_KEY2_VALUE = LST_BKPF-BELNR.       " Customer code
LST_ZTEGZZT001-Z_KEY3_TYPE = 'GJAHR'.
LST_ZTEGZZT001-Z_KEY3_VALUE = LST_BKPF-GJAHR.   " Fiscal Year
LST_ZTEGZZT001-Z_CRE_YMD = SY-DATUM.              " Created date
LST_ZTEGZZT001-Z_CRE_HMS = SY-UZEIT.              " Created time
LST_ZTEGZZT001-Z_CRE_USERID = SY-UNAME.           " User
APPEND LST_ZTEGZZT001 TO O_TB_ZTEGZZT001.

********************
*  Output Management(Official Receipt)
********************
LST_ZTEGFIT003-MANDT = SY-MANDT.
LST_ZTEGFIT003-Z_OUTPUT_MODE = LW_MODE.
LST_ZTEGFIT003-BUKRS = LST_BKPF-BUKRS.
LST_ZTEGFIT003-BELNR = LST_BKPF-BELNR.
LST_ZTEGFIT003-GJAHR = LST_BKPF-GJAHR.
LST_ZTEGFIT003-Z_CRE_YMD = SY-DATUM.
LST_ZTEGFIT003-Z_CRE_HMS = SY-UZEIT.
LST_ZTEGFIT003-Z_CRE_USERID = SY-UNAME.
APPEND LST_ZTEGFIT003 TO O_TB_ZTEGFIT003.

********************
*  Output Work(Official Receipt)
********************
LST_ZTEGFIT004-MANDT = SY-MANDT.
LST_ZTEGFIT004-Z_OUTPUT_MODE = LW_MODE.
LST_ZTEGFIT004-BUKRS = LST_BKPF-BUKRS.
LST_ZTEGFIT004-BELNR = LST_BKPF-BELNR.
LST_ZTEGFIT004-GJAHR = LST_BKPF-GJAHR.
LST_ZTEGFIT004-BUZEI = LST_BSEG-BUZEI.  "明細
LST_ZTEGFIT004-Z_CRE_YMD = SY-DATUM.
LST_ZTEGFIT004-Z_CRE_HMS = SY-UZEIT.
LST_ZTEGFIT004-Z_CRE_USERID = SY-UNAME.
IF RB_PRINT = 'X' OR RB_REPNT = 'X'.
LST_ZTEGFIT004-PRINTER_TRAY = P_PTRAY.
ENDIF.
LST_ZTEGFIT004-COMPANYCODE = P_COMCD.
LST_ZTEGFIT004-COMPANYNAME = P_CNAME.
IF LST_ZTEGFIT004-COMPANYNAME = SPACE.
LST_ZTEGFIT004-COMPANYNAME = I_ST_T001_ADRC-BUTXT.
ENDIF.
LST_ZTEGFIT004-COMPANYPOSTCODE = P_POSTCD.
IF LST_ZTEGFIT004-COMPANYPOSTCODE = SPACE.
LST_ZTEGFIT004-COMPANYPOSTCODE = I_ST_T001_ADRC-POST_CODE1.
ENDIF.
LST_ZTEGFIT004-COMPANYADDRESS1 = P_CADDR1.
IF LST_ZTEGFIT004-COMPANYADDRESS1 = SPACE.
LST_ZTEGFIT004-COMPANYADDRESS1 = I_ST_T001_ADRC-STREET.
ENDIF.
LST_ZTEGFIT004-COMPANYADDRESS2 = P_CADDR2.
IF LST_ZTEGFIT004-COMPANYADDRESS2 = SPACE.
LST_ZTEGFIT004-COMPANYADDRESS2 = I_ST_T001_ADRC-STR_SUPPL1.
ENDIF.
LST_ZTEGFIT004-COMPANYTEL = P_CTEL.
IF LST_ZTEGFIT004-COMPANYTEL = SPACE.
LST_ZTEGFIT004-COMPANYTEL = I_ST_T001_ADRC-TEL_NUMBER.
ENDIF.
LST_ZTEGFIT004-COMPANYFAX = P_CFAX.
IF LST_ZTEGFIT004-COMPANYFAX = SPACE.
LST_ZTEGFIT004-COMPANYFAX = I_ST_T001_ADRC-FAX_NUMBER.
ENDIF.
LST_ZTEGFIT004-COMPANYTIN = P_TIN.
*ブランク時はT001Z-PAVALを以下の条件で抽出
*会社コード：CompanyCode
*パラメータタイプ：SAPI14
IF LST_ZTEGFIT004-COMPANYTIN = SPACE.
LST_ZTEGFIT004-COMPANYTIN = I_ST_T001_ADRC-PAVAL.  "パラメータ値
ENDIF.
LST_ZTEGFIT004-COMPANYCOUNTRY = I_ST_T001_ADRC-COUNTRY.
LST_ZTEGFIT004-DOCUMENTNO = LST_BSEG-BELNR.  "DOCUMENTNO
LST_ZTEGFIT004-FISCALYEAR = P_YEAR.
LST_ZTEGFIT004-POSTINGDATE = LST_BKPF-BUDAT.  "POSTINGDATE
LST_ZTEGFIT004-POSTINGDATEYEAR = LST_BKPF-BUDAT+2(2).
LST_ZTEGFIT004-POSTINGMONTHNUM = LST_BKPF-BUDAT+4(2).
*    前ゼロ対応
IF LST_BKPF-BUDAT+0(1) = 0.
LST_ZTEGFIT004-POSTINGMONTHNUM = LST_BKPF-BUDAT+5(1).
ENDIF.
*    月の文字表記編集
PERFORM SET_MONTH_CHAR USING LST_ZTEGFIT004-POSTINGMONTHNUM
CHANGING LST_ZTEGFIT004-POSTINGMONTHCHAR.

LST_ZTEGFIT004-POSTINGDATEDAY = LST_BKPF-BUDAT+6(2).

*    CUSTOMERCODE
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT         = LST_BSEG-KUNNR
IMPORTING
OUTPUT        = LST_ZTEGFIT004-CUSTOMERCODE.

*   CUSTOMERNAME
CONCATENATE LST_KNA1_ADRC-NAME2
LST_KNA1_ADRC-NAME3
INTO LST_ZTEGFIT004-CUSTOMERNAME.

LST_ZTEGFIT004-CUSTOMERPOSTCODE = LST_KNA1_ADRC-POST_CODE1.
LST_ZTEGFIT004-CUSTOMERADDRESS1 = LST_KNA1_ADRC-CITY1.
LST_ZTEGFIT004-CUSTOMERADDRESS2 = LST_KNA1_ADRC-STREET.
LST_ZTEGFIT004-CUSTOMERADDRESS3 = LST_KNA1_ADRC-STR_SUPPL1.
LST_ZTEGFIT004-CUSTOMERADDRESS4 = LST_KNA1_ADRC-STR_SUPPL2.
LST_ZTEGFIT004-CUSTOMERTEL = LST_KNA1_ADRC-TEL_NUMBER.
LST_ZTEGFIT004-CUSTOMERFAX = LST_KNA1_ADRC-FAX_NUMBER.
LST_ZTEGFIT004-CUSTOMERCOUNTRY = LST_KNA1_ADRC-COUNTRY.

*    通貨コード変換
PERFORM CONVERT_CURRENCY USING LST_BKPF-WAERS
CHANGING LST_ZTEGFIT004-CURRENCY.

LST_ZTEGFIT004-AMOUNT = LST_BSEG-WRBTR.

LST_ZTEGFIT004-PAYMENT = P_INVNO.
*  選択画面-Customer Business Style
*   ブランク時は得意先コード：ADRC-NAME4
IF P_BUSSTY IS INITIAL.
LST_ZTEGFIT004-BUSINESSSTYLE = LST_KNA1_ADRC-NAME4.
ELSE.
LST_ZTEGFIT004-BUSINESSSTYLE = P_BUSSTY.
ENDIF.
LST_ZTEGFIT004-CUSTOMERTIN = LST_KNA1_ADRC-STCD1.
LST_ZTEGFIT004-INVOICENO = SPACE.
LST_ZTEGFIT004-INVOICEAMOUNT = SPACE.
LST_ZTEGFIT004-CACHAMOUNT = SPACE.
LST_ZTEGFIT004-CHECKAMOUNT = SPACE.
LST_ZTEGFIT004-APPROVAL = P_APP.
LST_ZTEGFIT004-CANCELRECEIPTNO = SPACE.
LST_ZTEGFIT004-DATAINPUTUSER = LST_BKPF-USNAM.
LST_ZTEGFIT004-OUTPUTUSER = SY-UNAME.
LST_ZTEGFIT004-DECPTFORMAT = P_XDEZP.
IF LST_ZTEGFIT004-DECPTFORMAT IS INITIAL.
LST_ZTEGFIT004-DECPTFORMAT = I_ST_T005X-XDEZP.
ENDIF.
LST_ZTEGFIT004-DATEFORMAT = P_DATFM.
IF LST_ZTEGFIT004-DATEFORMAT IS INITIAL.
LST_ZTEGFIT004-DECPTFORMAT = I_ST_T005X-DATFM.
ENDIF.
LST_ZTEGFIT004-REPORTFORMAT = C_REPORTFORMAT.  " 20：全項目出力フォーマット
LST_ZTEGFIT004-REPORTLANGUAGE = P_LANGU.
LST_ZTEGFIT004-REPORTTITLE = P_RT.
APPEND LST_ZTEGFIT004 TO O_TB_ZTEGFIT004.

********************
*  Outputファイル内部テーブルに設定する
********************
MOVE-CORRESPONDING LST_ZTEGFIT004 TO LST_ZSEGFI0003.
*    POSTINGDATEフォーマット変更
PERFORM CONVERT_DATE USING LST_ZTEGFIT004-POSTINGDATE
LST_ZTEGFIT004-DATEFORMAT
CHANGING LST_ZSEGFI0003-POSTINGDATE.

*    通貨額変換
PERFORM CONVERT_AMOUNT USING LST_ZTEGFIT004-CURRENCY
LST_ZTEGFIT004-AMOUNT
CHANGING LST_ZSEGFI0003-AMOUNT.

LST_ZSEGFI0003-POSTINGDATEMONTHNUM = LST_ZTEGFIT004-POSTINGMONTHNUM.
LST_ZSEGFI0003-POSTINGDATEMONTHCHAR = LST_ZTEGFIT004-POSTINGMONTHCHAR.
APPEND LST_ZSEGFI0003 TO O_TB_FILE_OUT.

ENDLOOP.

ENDFORM.                    " EDIT_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       データ取得
*----------------------------------------------------------------------*
FORM GET_DATA CHANGING O_ST_T001_ADRC TYPE TY_T001_ADRC
O_ST_T005X TYPE TY_T005X
O_TB_BKPF TYPE TY_T_BKPF
O_TB_BSEG TYPE TY_T_BSEG
O_TB_KNA1_ADRC TYPE TY_T_KNA1_ADRC.

DATA:
LTB_KUNNR TYPE TY_T_KUNNR,
LST_KUNNR TYPE TY_KUNNR,
LTB_BKPF_TMP TYPE TY_T_BKPF,
LST_BKPF_TMP TYPE TY_BKPF,
LTB_HKONT_BSEG TYPE TY_T_HKONT_BSEG,
LST_HKONT_BSEG TYPE TY_HKONT_BSEG,
LTB_BSEG TYPE TY_T_BSEG,
LST_BSEG TYPE TY_BSEG,
LW_CNT TYPE I,
LW_CNT_HKONT TYPE I.

CLEAR:
O_ST_T001_ADRC,
O_TB_BKPF,
O_TB_BSEG,
O_TB_KNA1_ADRC,
LTB_KUNNR,
LW_CNT.

*  借方の勘定コードが現預金勘定である伝票を対象とするため、
*  勘定コードと伝票番号の組み合わせチェック
SELECT
BUKRS
BELNR
GJAHR
BUDAT
USNAM
WAERS
INTO TABLE LTB_BKPF_TMP
FROM BKPF
WHERE BUKRS = P_COMCD  "Company　Code
AND BELNR IN S_DOCNO  "Document No.
AND GJAHR = P_YEAR  "Fiscal Year
AND BLART IN S_DOCTY  "Document Type
AND BUDAT IN S_POSTD   "Posting Date
AND CPUDT IN S_ENTRYD.  "Entry Date

IF LTB_BKPF_TMP IS NOT INITIAL.
*    会計伝票明細から取得する
SELECT
BUKRS
BELNR
GJAHR
BUZEI
HKONT
WRBTR
FROM BSEG
INTO TABLE LTB_HKONT_BSEG
FOR ALL ENTRIES IN LTB_BKPF_TMP
WHERE BUKRS = LTB_BKPF_TMP-BUKRS  "Company　Code
AND BELNR = LTB_BKPF_TMP-BELNR  "Document No.
AND GJAHR = LTB_BKPF_TMP-GJAHR  "Fiscal Year
AND HKONT IN S_HKONT  "G/L account:Cash/Check
AND SHKZG = C_SHKZG_S.  "借方
ENDIF.

LOOP AT LTB_HKONT_BSEG INTO LST_HKONT_BSEG.
READ TABLE LTB_BKPF_TMP INTO LST_BKPF_TMP
WITH KEY BUKRS = LST_HKONT_BSEG-BUKRS
BELNR = LST_HKONT_BSEG-BELNR
GJAHR = LST_HKONT_BSEG-GJAHR.

IF SY-SUBRC = 0.
APPEND LST_BKPF_TMP TO O_TB_BKPF.
ENDIF.
ENDLOOP.

IF O_TB_BKPF IS INITIAL.
*    対象データが存在しません。
MESSAGE S002 WITH 'BKPF & BSEG'
DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.

*  会計伝票明細から得意先コードを取得する
IF O_TB_BKPF IS NOT INITIAL.
SELECT
BUKRS
BELNR
GJAHR
BUZEI
KUNNR
WRBTR
FROM BSEG
INTO TABLE LTB_BSEG
FOR ALL ENTRIES IN O_TB_BKPF
WHERE BUKRS = O_TB_BKPF-BUKRS  "Company　Code
AND BELNR = O_TB_BKPF-BELNR  "Document No.
AND GJAHR = O_TB_BKPF-GJAHR  "Fiscal Year
AND KUNNR <> SPACE  "Customer
AND SHKZG = C_SHKZG_H."貸方
ENDIF.

*  得意先が特定できない場合（得意先明細がない、または、複数ある）、
*  Official Receiptは出力せず、エラーとする。
LOOP AT LTB_BSEG INTO LST_BSEG.
*    クリア
CLEAR:
LW_CNT,
LW_CNT_HKONT,
LST_KUNNR,
LST_HKONT_BSEG.

LOOP AT LTB_BSEG TRANSPORTING NO FIELDS
WHERE BUKRS = LST_BSEG-BUKRS
AND BELNR = LST_BSEG-BELNR
AND GJAHR = LST_BSEG-GJAHR.
*      カウント
LW_CNT = LW_CNT + 1.
ENDLOOP.

IF LW_CNT = 1.
*    現金勘定の金額を出力する
LOOP AT LTB_HKONT_BSEG INTO LST_HKONT_BSEG
WHERE BUKRS = LST_BSEG-BUKRS
AND BELNR = LST_BSEG-BELNR
AND GJAHR = LST_BSEG-GJAHR.

LW_CNT_HKONT = LW_CNT_HKONT + 1.
ENDLOOP.

IF LW_CNT_HKONT = 1.
*      得意先内部テーブルへ追加する
LST_KUNNR-KUNNR = LST_BSEG-KUNNR.
APPEND LST_KUNNR TO LTB_KUNNR.

LST_BSEG-WRBTR = LST_HKONT_BSEG-WRBTR.
APPEND LST_BSEG TO O_TB_BSEG.
ENDIF.
ENDIF.
ENDLOOP.

IF O_TB_BSEG IS INITIAL.
*    対象データが存在しません。
MESSAGE S002 WITH 'BKPF & BSEG'
DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.

*  出力対象外の会計伝票をメッセージで出力する
LOOP AT LTB_BKPF_TMP INTO LST_BKPF_TMP.
READ TABLE O_TB_BSEG TRANSPORTING NO FIELDS
WITH KEY BELNR = LST_BKPF_TMP-BELNR.

IF SY-SUBRC <> 0.
*      得意先コードが特定できないため、
*      出力対象外とします（会計伝票番号 = &1）。
MESSAGE S014
WITH LST_BKPF_TMP-BUKRS
LST_BKPF_TMP-BELNR
LST_BKPF_TMP-GJAHR
INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-024.
APPEND ST_MSG TO TB_MSG.
ENDIF.
ENDLOOP.

*  ソート
SORT O_TB_BSEG BY GJAHR ASCENDING
BELNR ASCENDING
BUZEI ASCENDING.

*  エラー件数
W_ERR = W_COUNT - LINES( O_TB_BSEG ).

*  ADRCから会社コードに紐付く情報を取得する
SELECT
T001~BUTXT
ADRC~POST_CODE1
ADRC~STREET
ADRC~STR_SUPPL1
ADRC~TEL_NUMBER
ADRC~FAX_NUMBER
ADRC~COUNTRY
UP TO 1 ROWS
INTO O_ST_T001_ADRC
FROM T001
INNER JOIN ADRC
ON T001~ADRNR = ADRC~ADDRNUMBER
WHERE T001~BUKRS = P_COMCD
AND ADRC~DATE_TO >= SY-DATUM.
**** 2016/1/27 ISID18 DEL START *****
*    AND ADRC~LANGU = P_LANGU.  "言語キー
**** 2016/1/27 ISID18 DEL END *****
ENDSELECT.

IF  SY-SUBRC <> 0.
*    対象データが存在しません。
MESSAGE S002 WITH 'T001 & ADRC'
DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.

*  会社コードの追加詳細テーブルからCompany TINを取得する
SELECT
PAVAL
UP TO 1 ROWS
INTO O_ST_T001_ADRC-PAVAL
FROM T001Z
WHERE BUKRS = P_COMCD
AND PARTY = C_SAPI14.
ENDSELECT.

IF  SY-SUBRC <> 0.
*    対象データが存在しません。
MESSAGE S002 WITH 'T001Z'
DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.

*  国コード - 小数点とデータ形式(SET COUNTRY)から取得する
SELECT
XDEZP
DATFM
FROM T005X
UP TO 1 ROWS
INTO O_ST_T005X
WHERE LAND = O_ST_T001_ADRC-COUNTRY.
ENDSELECT.

SORT LTB_KUNNR BY KUNNR.
DELETE ADJACENT DUPLICATES FROM LTB_KUNNR.

IF LTB_KUNNR IS NOT INITIAL.
*  ADRCから得意先コードに紐付く情報を取得する
SELECT
KNA1~KUNNR
KNA1~STCD1
ADRC~NAME2
ADRC~NAME3
ADRC~NAME4
ADRC~POST_CODE1
ADRC~CITY1
ADRC~STREET
ADRC~STR_SUPPL1
ADRC~STR_SUPPL2
ADRC~TEL_NUMBER
ADRC~FAX_NUMBER
ADRC~COUNTRY
INTO TABLE O_TB_KNA1_ADRC
FROM KNA1
INNER JOIN ADRC
ON KNA1~ADRNR = ADRC~ADDRNUMBER
FOR ALL ENTRIES IN LTB_KUNNR
WHERE KNA1~KUNNR = LTB_KUNNR-KUNNR
AND ADRC~DATE_TO >= SY-DATUM.
**** 2016/1/27 ISID18 DEL START *****
*      AND ADRC~LANGU = P_LANGU.  "言語キー
**** 2016/1/27 ISID18 DEL END *****
ENDIF.

IF  SY-SUBRC <> 0.
*    対象データが存在しません。
MESSAGE S002 WITH 'KNA1 & ADRC'
DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
RETURN.
ENDIF.

ENDFORM.                    " GET_DATA
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_FILE
*&---------------------------------------------------------------------*
*       データOutput
*----------------------------------------------------------------------*
FORM OUTPUT_FILE USING VALUE(I_FILE_OUT) TYPE TY_T_FILE_OUT
VALUE(I_FILENAME) TYPE STRING
VALUE(I_OUTPUT_CODEPAGE) TYPE C
CHANGING O_ERRFLG TYPE FLAG.

IF RB_DOWN IS INITIAL.
* サーバへファイルを出力する
PERFORM OUTPUT_FILE_SERVER USING I_FILE_OUT
I_FILENAME
I_OUTPUT_CODEPAGE
CHANGING O_ERRFLG.
ELSE.
*    ローカルへファイルを出力する
PERFORM OUTPUT_FILE_LOCAL USING I_FILE_OUT
I_FILENAME
I_OUTPUT_CODEPAGE
CHANGING O_ERRFLG.
ENDIF.

ENDFORM.                    " OUTPUT_FILE
*&---------------------------------------------------------------------*
*&      Form  GET_FILE_NAME_CODEPAGE
*&---------------------------------------------------------------------*
*       ファイル名 & コードページを取得する
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_FILE_NAME_CODEPAGE CHANGING O_FNAME TYPE STRING  "ファイル名
O_OUTPUT_CP TYPE ZEOUTPUTCP.  "コードページ

DATA:
LW_PATH(128) TYPE C,
LW_ENCODING TYPE ABAP_ENCODING,
LW_RC TYPE I,
LW_CODE TYPE TCP00-CPCODEPAGE,
LW_OUTPUT_FN TYPE ZEOUTPUTFN.

CLEAR:
O_FNAME,
O_OUTPUT_CP.

* 選択画面のラジオボタン「Download」が選択されている場合
IF RB_DOWN = 'X'.
O_FNAME = P_FPNAME.
*    コードページを取得する
CALL METHOD CL_GUI_FRONTEND_SERVICES=>GET_SAPLOGON_ENCODING
CHANGING
FILE_ENCODING          = LW_ENCODING
RC                            = LW_RC
EXCEPTIONS
CNTL_ERROR                    = 1
ERROR_NO_GUI                  = 2
NOT_SUPPORTED_BY_GUI          = 3
CANNOT_INITIALIZE_GLOBALSTATE = 4
OTHERS                        = 5.

IF SY-SUBRC = 0.
LW_CODE = LW_ENCODING.
*    コードページを取得する
CALL FUNCTION 'SCP_CODEPAGE_INFO'
EXPORTING
CODEPAGE  = LW_CODE
IMPORTING
HTTP_NAME = O_OUTPUT_CP.
ENDIF.
ENDIF.

* 選択画面のラジオボタン「Print」「Reprint」が選択されている場合
IF RB_PRINT = 'X'
OR RB_REPNT = 'X'.
*    ユーザパラメータに設定されている出力先を取得する
GET PARAMETER ID 'ZSVF' FIELD LW_PATH.

*    会社コードよりパラメータテーブルから取得する
SELECT
Z_OUTPUT_FN
Z_OUTPUT_CP
UP TO 1 ROWS
INTO (LW_OUTPUT_FN, O_OUTPUT_CP)
FROM ZTEGZZM001
WHERE PROGNAME = SY-REPID
AND BUKRS = P_COMCD.
ENDSELECT.

IF SY-SUBRC <> 0.
*   データが存在しない場合、メッセージを出力し処理を終了する
*   アドオン変数テーブルが取得できませんでした
*   (NAME = &1 / PGM = &2)
MESSAGE S051(ZMEGSD01) WITH 'ZTEGZZM001' SY-REPID
DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.

*    ファイル名を取得する
CONCATENATE LW_PATH
LW_OUTPUT_FN
SY-REPID
SY-UNAME
SY-UZEIT
C_EXTNAME  "csvファイル'
INTO O_FNAME.
ENDIF.

ENDFORM.                    " GET_FILE_NAME
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_RESULT
*&---------------------------------------------------------------------*
*       結果リスト出力
*----------------------------------------------------------------------*
FORM OUTPUT_RESULT.

DATA:
LW_MODE TYPE STRING,
LW_DOCNO TYPE STRING,
LW_HKONT TYPE STRING,
LW_DOCTY TYPE STRING,
LW_POSTD TYPE STRING,
LW_ENTRYD TYPE STRING,
LTB_DOCNO TYPE TY_T_RANGE,
LTB_HKONT TYPE TY_T_RANGE,
LTB_DOCTY TYPE TY_T_RANGE,
LTB_POSTD TYPE TY_T_RANGE,
LTB_ENTRYD TYPE TY_T_RANGE,
LST_RANGE TYPE TY_RANGE,
LST_DOCNO LIKE S_DOCNO,
LST_HKONT LIKE S_HKONT,
LST_DOCTY LIKE S_DOCTY,
LST_POSTD LIKE S_POSTD,
LST_ENTRYD LIKE S_ENTRYD.

IF RB_PRINT = 'X'.
LW_MODE = TEXT-019.  "Print
ELSEIF RB_REPNT = 'X'.
LW_MODE = TEXT-020.  "Reprint
ELSE.
LW_MODE = TEXT-021.  "Download
ENDIF.

IF RB_REPNT = 'X'.
W_ERR = W_COUNT - W_NORMAL.
ELSE.
W_NORMAL = W_COUNT - W_ERR.
ENDIF.

LOOP AT S_DOCNO INTO LST_DOCNO.
LST_RANGE-SIGN = LST_DOCNO-SIGN.
LST_RANGE-OPTION = LST_DOCNO-OPTION.
LST_RANGE-LOW = LST_DOCNO-LOW.
LST_RANGE-HIGH = LST_DOCNO-HIGH.
APPEND LST_RANGE TO LTB_DOCNO.
ENDLOOP.

LOOP AT S_HKONT INTO LST_HKONT.
LST_RANGE-SIGN = LST_HKONT-SIGN.
LST_RANGE-OPTION = LST_HKONT-OPTION.
LST_RANGE-LOW = LST_HKONT-LOW.
LST_RANGE-HIGH = LST_HKONT-HIGH.
APPEND LST_RANGE TO LTB_HKONT.
ENDLOOP.

LOOP AT S_DOCTY INTO LST_DOCTY.
LST_RANGE-SIGN = LST_DOCTY-SIGN.
LST_RANGE-OPTION = LST_DOCTY-OPTION.
LST_RANGE-LOW = LST_DOCTY-LOW.
LST_RANGE-HIGH = LST_DOCTY-HIGH.
APPEND LST_RANGE TO LTB_DOCTY.
ENDLOOP.

LOOP AT S_POSTD INTO LST_POSTD.
LST_RANGE-SIGN = LST_POSTD-SIGN.
LST_RANGE-OPTION = LST_POSTD-OPTION.
LST_RANGE-LOW = LST_POSTD-LOW.
LST_RANGE-HIGH = LST_POSTD-HIGH.
APPEND LST_RANGE TO LTB_POSTD.
ENDLOOP.

LOOP AT S_ENTRYD INTO LST_ENTRYD.
LST_RANGE-SIGN = LST_ENTRYD-SIGN.
LST_RANGE-OPTION = LST_ENTRYD-OPTION.
LST_RANGE-LOW = LST_ENTRYD-LOW.
LST_RANGE-HIGH = LST_ENTRYD-HIGH.
APPEND LST_RANGE TO LTB_ENTRYD.
ENDLOOP.


* Document No: SI:X OP:XX LO:XX HI:XX
PERFORM EDIT_SEL_OPTION USING LTB_DOCNO
CHANGING LW_DOCNO.

* G/L account:Cash/Check: SI:X OP:XX LO:XX HI:XX
PERFORM EDIT_SEL_OPTION USING LTB_HKONT
CHANGING LW_HKONT.

* Document Type: SI:X OP:XX LO:XX HI:XX
PERFORM EDIT_SEL_OPTION USING LTB_DOCTY
CHANGING LW_DOCTY.

* Posting Date: SI:X OP:XX LO:XX HI:XX
PERFORM EDIT_SEL_OPTION USING LTB_POSTD
CHANGING LW_POSTD.

* Entry Date: SI:X OP:XX LO:XX HI:XX
PERFORM EDIT_SEL_OPTION USING LTB_ENTRYD
CHANGING LW_ENTRYD.

* 結果出力
SKIP 1.
WRITE: /2 TEXT-002,  "<Parameters>
/4 TEXT-014, 29 ':', 31 LW_MODE, "Mode
/4 TEXT-004, 29 ':', 31 P_FPNAME, "File Path
/4 TEXT-005, 29 ':', 31 P_COMCD, "Company Code
/4 TEXT-006, 29 ':', 31 LW_DOCNO, "Document No
/4 TEXT-025, 29 ':', 31 P_YEAR, "Fiscal Year
/4 TEXT-007, 29 ':', 31 LW_HKONT, "G/L account:Cash/Check
/4 TEXT-008, 29 ':', 31 LW_DOCTY, "Document Type
/4 TEXT-009, 29 ':', 31 LW_POSTD, "Posting Date
/4 TEXT-035, 29 ':', 31 LW_ENTRYD, "Entry Date
/4 TEXT-036, 29 ':', 31 W_OUTPUT_FN. "File Name

SKIP 1.
WRITE: /2   TEXT-010,  "<Result>
/4   TEXT-011,  28 ':', 30  W_COUNT,
"Number of Transcations
/4   TEXT-012,  28 ':', 30  W_NORMAL,
"Number of Normal
/4   TEXT-013,  28 ':', 30  W_ERR.
"Number of Errors

SKIP 1.
WRITE: /2  TEXT-026.  "<Message>
LOOP AT TB_MSG INTO ST_MSG.
WRITE: /4  ST_MSG-TYPE,
25  ST_MSG-TEXT.
ENDLOOP.

ENDFORM.                    " OUTPUT_RESULT
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_FILE_SERVER
*&---------------------------------------------------------------------*
*       サーバへファイル出力
*----------------------------------------------------------------------*
*      <--P_LW_ERRFLG  text
*----------------------------------------------------------------------*
FORM OUTPUT_FILE_SERVER USING VALUE(I_TB_FILE_OUT) TYPE TY_T_FILE_OUT
VALUE(I_FILENAME) TYPE STRING
VALUE(I_OUTPUT_CODEPAGE) TYPE C
CHANGING O_ERRFLG TYPE FLAG.

DATA:
LW_CDUTF8 TYPE CPCODEPAGE,
LW_OUTPUT_CODEPAGE TYPE STRING,
LW_CODEPAGE TYPE CPCODEPAGE,
LW_SYSERROR   TYPE FLAG,
LW_SFILE TYPE STRING,
LST_FILE_OUT TYPE ZSEGFI0003.

CLEAR:
LW_CDUTF8,
LW_CODEPAGE,
LW_SYSERROR,
LW_SFILE,
LST_FILE_OUT,
O_ERRFLG.

* コードページ
LW_OUTPUT_CODEPAGE = I_OUTPUT_CODEPAGE.
LW_CDUTF8 = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( 'UTF-8' ).
LW_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( LW_OUTPUT_CODEPAGE ).

IF LW_CODEPAGE = LW_CDUTF8.
*   ファイルを開く
OPEN DATASET I_FILENAME FOR OUTPUT IN TEXT MODE
ENCODING UTF-8
IGNORING CONVERSION ERRORS.

ELSE.
TRY.
OPEN DATASET I_FILENAME FOR OUTPUT IN LEGACY TEXT MODE
CODE PAGE LW_CODEPAGE
IGNORING CONVERSION ERRORS.

CATCH CX_SY_CODEPAGE_CONVERTER_INIT.
LW_SYSERROR = 'X'.
ENDTRY.
ENDIF.

IF SY-SUBRC <> 0 OR LW_SYSERROR = 'X'.
*    エラーフラグ設定する
O_ERRFLG = 'X'.
*    エラー件数カウント
W_ERR = W_COUNT.

IF LW_SYSERROR = 'X'.
*     該当コードページ変換はサポートしておりません
MESSAGE S015 DISPLAY LIKE 'E'.
ELSE.
*      ファイルオープンエラー &1
MESSAGE E008 WITH I_FILENAME
INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-027.
APPEND ST_MSG TO TB_MSG.
ENDIF.

ELSE.
LOOP AT I_TB_FILE_OUT INTO LST_FILE_OUT.
CONCATENATE LST_FILE_OUT-PRINTER_TRAY
LST_FILE_OUT-COMPANYCODE
LST_FILE_OUT-COMPANYNAME
LST_FILE_OUT-COMPANYPOSTCODE
LST_FILE_OUT-COMPANYADDRESS1
LST_FILE_OUT-COMPANYADDRESS2
LST_FILE_OUT-COMPANYTEL
LST_FILE_OUT-COMPANYFAX
LST_FILE_OUT-COMPANYTIN
LST_FILE_OUT-COMPANYCOUNTRY
LST_FILE_OUT-DOCUMENTNO
LST_FILE_OUT-FISCALYEAR
LST_FILE_OUT-POSTINGDATE
LST_FILE_OUT-POSTINGDATEYEAR
LST_FILE_OUT-POSTINGDATEMONTHNUM
LST_FILE_OUT-POSTINGDATEMONTHCHAR
LST_FILE_OUT-POSTINGDATEDAY
LST_FILE_OUT-CUSTOMERCODE
LST_FILE_OUT-CUSTOMERNAME
LST_FILE_OUT-CUSTOMERPOSTCODE
LST_FILE_OUT-CUSTOMERADDRESS1
LST_FILE_OUT-CUSTOMERADDRESS2
LST_FILE_OUT-CUSTOMERADDRESS3
LST_FILE_OUT-CUSTOMERADDRESS4
LST_FILE_OUT-CUSTOMERTEL
LST_FILE_OUT-CUSTOMERFAX
LST_FILE_OUT-CUSTOMERCOUNTRY
LST_FILE_OUT-CURRENCY
LST_FILE_OUT-AMOUNT
LST_FILE_OUT-PAYMENT
LST_FILE_OUT-BUSINESSSTYLE
LST_FILE_OUT-CUSTOMERTIN
LST_FILE_OUT-INVOICENO
LST_FILE_OUT-INVOICEAMOUNT
LST_FILE_OUT-CACHAMOUNT
LST_FILE_OUT-CHECKAMOUNT
LST_FILE_OUT-APPROVAL
LST_FILE_OUT-CANCELRECEIPTNO
LST_FILE_OUT-DATAINPUTUSER
LST_FILE_OUT-OUTPUTUSER
LST_FILE_OUT-DECPTFORMAT
LST_FILE_OUT-DATEFORMAT
LST_FILE_OUT-REPORTFORMAT
LST_FILE_OUT-REPORTLANGUAGE
LST_FILE_OUT-REPORTTITLE
INTO LW_SFILE
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
TRANSFER LW_SFILE TO I_FILENAME.
ENDLOOP.
CLOSE DATASET I_FILENAME.
MESSAGE S010 INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-027.
APPEND ST_MSG TO TB_MSG.
ENDIF.

ENDFORM.                    " OUTPUT_FILE_SERVER
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_FILE_LOCAL
*&---------------------------------------------------------------------*
*       ローカルへファイル出力する
*----------------------------------------------------------------------*
*      <--P_LW_ERRFLG  text
*----------------------------------------------------------------------*
FORM OUTPUT_FILE_LOCAL USING VALUE(I_TB_FILE_OUT) TYPE TY_T_FILE_OUT
VALUE(I_FILENAME) TYPE STRING
VALUE(I_OUTPUT_CODEPAGE) TYPE C
CHANGING O_ERRFLG TYPE FLAG.

DATA:
LST_FILE_OUT TYPE ZSEGFI0003,
LTB_FILE_OUT TYPE TY_T_FILE_OUT,
LW_OUTPUT_CODEPAGE TYPE STRING,
LW_STR TYPE STRING,
LW_CODEPAGE TYPE ABAP_ENCODING.

CLEAR:
LW_STR,
LW_OUTPUT_CODEPAGE,
LST_FILE_OUT,
LTB_FILE_OUT,
LW_CODEPAGE,
O_ERRFLG.

*  パラメータ取得
LTB_FILE_OUT[] = I_TB_FILE_OUT[].

*  ヘッダ取得
CALL FUNCTION 'ZEG_ZZ_DD04T_GET'
EXPORTING
IMPTSNAME    = 'ZSEGFI0003'
IMPLANGU     = SY-LANGU
IMPORTING
EXPSCRTEXT_L = LW_STR.

*  ヘッダ行編集
SPLIT LW_STR AT CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
INTO LST_FILE_OUT-PRINTER_TRAY
LST_FILE_OUT-COMPANYCODE
LST_FILE_OUT-COMPANYNAME
LST_FILE_OUT-COMPANYPOSTCODE
LST_FILE_OUT-COMPANYADDRESS1
LST_FILE_OUT-COMPANYADDRESS2
LST_FILE_OUT-COMPANYTEL
LST_FILE_OUT-COMPANYFAX
LST_FILE_OUT-COMPANYTIN
LST_FILE_OUT-COMPANYCOUNTRY
LST_FILE_OUT-DOCUMENTNO
LST_FILE_OUT-FISCALYEAR
LST_FILE_OUT-POSTINGDATE
LST_FILE_OUT-POSTINGDATEYEAR
LST_FILE_OUT-POSTINGDATEMONTHNUM
LST_FILE_OUT-POSTINGDATEMONTHCHAR
LST_FILE_OUT-POSTINGDATEDAY
LST_FILE_OUT-CUSTOMERCODE
LST_FILE_OUT-CUSTOMERNAME
LST_FILE_OUT-CUSTOMERPOSTCODE
LST_FILE_OUT-CUSTOMERADDRESS1
LST_FILE_OUT-CUSTOMERADDRESS2
LST_FILE_OUT-CUSTOMERADDRESS3
LST_FILE_OUT-CUSTOMERADDRESS4
LST_FILE_OUT-CUSTOMERTEL
LST_FILE_OUT-CUSTOMERFAX
LST_FILE_OUT-CUSTOMERCOUNTRY
LST_FILE_OUT-CURRENCY
LST_FILE_OUT-AMOUNT
LST_FILE_OUT-PAYMENT
LST_FILE_OUT-BUSINESSSTYLE
LST_FILE_OUT-CUSTOMERTIN
LST_FILE_OUT-INVOICENO
LST_FILE_OUT-INVOICEAMOUNT
LST_FILE_OUT-CACHAMOUNT
LST_FILE_OUT-CHECKAMOUNT
LST_FILE_OUT-APPROVAL
LST_FILE_OUT-CANCELRECEIPTNO
LST_FILE_OUT-DATAINPUTUSER
LST_FILE_OUT-OUTPUTUSER
LST_FILE_OUT-DECPTFORMAT
LST_FILE_OUT-DATEFORMAT
LST_FILE_OUT-REPORTFORMAT
LST_FILE_OUT-REPORTLANGUAGE
LST_FILE_OUT-REPORTTITLE.

*  ヘッダ行をダウンロード用内部テーブルへ追加する
INSERT LST_FILE_OUT INTO LTB_FILE_OUT INDEX 1.

LW_OUTPUT_CODEPAGE = I_OUTPUT_CODEPAGE.
LW_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( LW_OUTPUT_CODEPAGE ).
CALL FUNCTION 'GUI_DOWNLOAD'
EXPORTING
FILENAME                = I_FILENAME
FILETYPE                = 'ASC'
WRITE_FIELD_SEPARATOR   = ABAP_TRUE
CODEPAGE                = LW_CODEPAGE
TABLES
DATA_TAB                = LTB_FILE_OUT
EXCEPTIONS
FILE_WRITE_ERROR        = 1
NO_BATCH                = 2
GUI_REFUSE_FILETRANSFER = 3
INVALID_TYPE            = 4
NO_AUTHORITY            = 5
UNKNOWN_ERROR           = 6
HEADER_NOT_ALLOWED      = 7
SEPARATOR_NOT_ALLOWED   = 8
FILESIZE_NOT_ALLOWED    = 9
HEADER_TOO_LONG         = 10
DP_ERROR_CREATE         = 11
DP_ERROR_SEND           = 12
DP_ERROR_WRITE          = 13
UNKNOWN_DP_ERROR        = 14
ACCESS_DENIED           = 15
DP_OUT_OF_MEMORY        = 16
DISK_FULL               = 17
DP_TIMEOUT              = 18
FILE_NOT_FOUND          = 19
DATAPROVIDER_EXCEPTION  = 20
CONTROL_FLUSH_ERROR     = 21
OTHERS                  = 22.

IF SY-SUBRC <> 0.
O_ERRFLG = 'X'.
*    エラー件数カウント
W_ERR = W_COUNT.
CLEAR ST_MSG.
MESSAGE E009 INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-024.
APPEND ST_MSG TO TB_MSG.
ELSE.
MESSAGE S010 INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-027.
APPEND ST_MSG TO TB_MSG.
ENDIF.
ENDFORM.                    " OUTPUT_FILE_LOCAL
*&---------------------------------------------------------------------*
*&      Form  EDIT_SEL_OPTION
*&---------------------------------------------------------------------*
*       SELECT-OPTIONのパラメータ値編集
*----------------------------------------------------------------------*
*      -->O_SEL_OPTION  text
*      <--O_INFO  text
*----------------------------------------------------------------------*
FORM EDIT_SEL_OPTION USING VALUE(O_SEL_OPTION) TYPE TY_T_RANGE
CHANGING O_INFO TYPE STRING.

DATA:
LW_SIGN     TYPE STRING,
LW_OPTION   TYPE STRING,
LW_LOW      TYPE STRING,
LW_HIGH     TYPE STRING,
LW_NO       TYPE I,
LW_INFO    TYPE STRING,
LST_SEL_OPTION TYPE TY_RANGE.

CLEAR:
LW_NO,
LW_INFO,
O_INFO.

LOOP AT O_SEL_OPTION INTO LST_SEL_OPTION.
CLEAR: LW_SIGN,
LW_OPTION,
LW_LOW,
LW_HIGH.
LW_NO = LW_NO + 1.
CONCATENATE 'SI:'
LST_SEL_OPTION-SIGN
INTO LW_SIGN.
CONCATENATE 'OP:'
LST_SEL_OPTION-OPTION
INTO LW_OPTION.
CONCATENATE 'LO:'
LST_SEL_OPTION-LOW
INTO LW_LOW.
CONCATENATE 'HI:'
LST_SEL_OPTION-HIGH
INTO LW_HIGH.
IF LW_NO = 1.
CONCATENATE LW_SIGN
LW_OPTION
LW_LOW
LW_HIGH
INTO LW_INFO
SEPARATED BY SPACE.
ELSEIF LW_NO > 1
AND LW_NO <= 3.
CONCATENATE LW_INFO
'/'
LW_SIGN
LW_OPTION
LW_LOW
LW_HIGH
INTO LW_INFO
SEPARATED BY SPACE.
ELSE.
CONCATENATE LW_INFO
'/...'
INTO LW_INFO
SEPARATED BY SPACE.
ENDIF.
ENDLOOP.

*  パラメータへ設定する
O_INFO = LW_INFO.

ENDFORM.                    " EDIT_SEL_OPTION
*&---------------------------------------------------------------------*
*&      Form  CHECK_INPUT
*&---------------------------------------------------------------------*
*       Validating at selection-screen
*----------------------------------------------------------------------*
FORM CHECK_INPUT .
DATA:
LW_ADRNR TYPE T001-ADRNR.

CLEAR:
LW_ADRNR.

* Company code validation
SELECT SINGLE ADRNR
INTO LW_ADRNR
FROM T001
WHERE BUKRS = P_COMCD.

IF SY-SUBRC <> 0.
SET CURSOR FIELD 'P_COMCD'.
MESSAGE E001 WITH P_COMCD.
ENDIF.

* Printer/Tray is blank when print or reprint
IF RB_PRINT = 'X' OR
RB_REPNT = 'X'.
IF P_PTRAY IS INITIAL.
SET CURSOR FIELD 'P_PTRAY'.
MESSAGE E005 WITH TEXT-022.
ENDIF.
ENDIF.

* File path is blank when download
IF RB_DOWN = 'X'.
IF P_FPNAME IS INITIAL.
SET CURSOR FIELD 'P_FPNAME'.
MESSAGE E005 WITH TEXT-023.
ENDIF.
ENDIF.

* Authorization check
AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
ID 'BUKRS' FIELD P_COMCD
ID 'ACTVT' FIELD '03'.

IF SY-SUBRC <> 0.
SET CURSOR FIELD 'P_COMCD'.
MESSAGE E000 WITH P_COMCD.
ENDIF.

**  Customer Business Styleがブランク以外の場合、
**  「Document No.」が単一指定されているかをチェックし、単一ではない場合、エラーとする。
*  SELECT
*    BUKRS
*    FROM BKPF
*    INTO TABLE LTB_BUKRS
*    WHERE BUKRS = P_COMCD
*    AND BELNR IN S_DOCNO
*    AND GJAHR = P_YEAR.
*
*  W_COUNT = LINES( LTB_BUKRS ).
*
*  IF P_BUSSTY IS NOT INITIAL
*    AND W_COUNT <> 1
*    AND W_COUNT <> 0.
**    Specify only one Document No when Customer Business Style is setted.
*      SET CURSOR FIELD 'S_DOCNO-LOW'.
*      MESSAGE E013.
*  ENDIF.

ENDFORM.                    " CHECK_INPUT
*&---------------------------------------------------------------------*
*&      Form  SET_MONTH_CHAR
*&---------------------------------------------------------------------*
*       月の文字表記編集
*----------------------------------------------------------------------*
*      <--O_MONTHCHAR  月の文字表記
*----------------------------------------------------------------------*
FORM SET_MONTH_CHAR USING I_MONTHNO TYPE ZENUM2
CHANGING O_MONTHCHAR TYPE ZECHAR3.

CASE I_MONTHNO.
WHEN 1.
O_MONTHCHAR = 'JAN'.
WHEN 2.
O_MONTHCHAR = 'FEB'.
WHEN 3.
O_MONTHCHAR = 'MAR'.
WHEN 4.
O_MONTHCHAR = 'APR'.
WHEN 5.
O_MONTHCHAR = 'MAY'.
WHEN 6.
O_MONTHCHAR = 'JUN'.
WHEN 7.
O_MONTHCHAR = 'JUL'.
WHEN 8.
O_MONTHCHAR = 'AUG'.
WHEN 9.
O_MONTHCHAR = 'SEP'.
WHEN 10.
O_MONTHCHAR = 'OCT'.
WHEN 11.
O_MONTHCHAR = 'NOV'.
WHEN 12.
O_MONTHCHAR = 'DEC'.
ENDCASE.

ENDFORM.                    " SET_MONTH_CHAR
*&---------------------------------------------------------------------*
*&      Form  UPDATE_TABLE
*&---------------------------------------------------------------------*
*         テーブル更新
*----------------------------------------------------------------------*
*      -->I_TB_ZTEGFIT003  text
*      -->I_TB_ZTEGFIT004  text
*      <--O_COUNT  text
*      <--O_NORMAL  text
*      <--O_ERR  text
*----------------------------------------------------------------------*
FORM UPDATE_TABLE USING VALUE(I_TB_ZTEGZZT001) TYPE TY_T_ZTEGZZT001
VALUE(I_TB_ZTEGFIT003) TYPE TY_T_ZTEGFIT003
VALUE(I_TB_ZTEGFIT004) TYPE TY_T_ZTEGFIT004.

DATA:
LW_ERRFLG TYPE FLAG,
LST_ZTEGFIT003 TYPE ZTEGFIT003,
LW_TEXT TYPE STRING.

*  メッセージ編集用
READ TABLE I_TB_ZTEGFIT003 INTO LST_ZTEGFIT003 INDEX 1.
*  変数編集
CONCATENATE LST_ZTEGFIT003-Z_OUTPUT_MODE
LST_ZTEGFIT003-BUKRS
LST_ZTEGFIT003-BELNR
LST_ZTEGFIT003-GJAHR
INTO LW_TEXT
SEPARATED BY SPACE.

*  テーブルロック
PERFORM LOCK_TABLE CHANGING LW_ERRFLG.
CHECK LW_ERRFLG IS INITIAL.

********************
*  Output Log(ZTEGZZT001) テーブル更新
********************
INSERT ZTEGZZT001 FROM TABLE I_TB_ZTEGZZT001 ACCEPTING DUPLICATE KEYS.

IF SY-SUBRC <> 0.
ROLLBACK WORK.
*    メッセージ
MESSAGE E003 WITH 'ZTEGZZT001'
LW_TEXT
INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-024.
APPEND ST_MSG TO TB_MSG.
RETURN.
ENDIF.

********************
*  Output Management(Official Receipt)(ZTEGFIT003) テーブル更新
*  Output Work(Official Receipt)(ZTEGFIT004) テーブル更新
********************
IF RB_PRINT = 'X' OR RB_DOWN = 'X'.
*    Print or Download の場合、アドオンテーブルへデータ登録する
********************
DELETE ZTEGFIT003 FROM TABLE I_TB_ZTEGFIT003.
IF SY-SUBRC <> 0 AND SY-SUBRC <> 4.
ROLLBACK WORK.
*    メッセージ
MESSAGE E007 WITH 'ZTEGFIT003'
LW_TEXT
INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-024.
APPEND ST_MSG TO TB_MSG.
*      テーブルアンロック
PERFORM RELEASE_TABLE.
*      リターン
RETURN.
ENDIF.
********************
INSERT ZTEGFIT003 FROM TABLE I_TB_ZTEGFIT003 ACCEPTING DUPLICATE KEYS.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
*    メッセージ
MESSAGE E003 WITH 'ZTEGFIT004'
LW_TEXT
INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-024.
APPEND ST_MSG TO TB_MSG.
*      テーブルアンロック
PERFORM RELEASE_TABLE.
*      リターン
RETURN.
ENDIF.
********************
DELETE ZTEGFIT004 FROM TABLE I_TB_ZTEGFIT004.
IF SY-SUBRC <> 0 AND SY-SUBRC <> 4.
ROLLBACK WORK.
*    メッセージ
MESSAGE E007 WITH 'ZTEGFIT004'
LW_TEXT
INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-024.
APPEND ST_MSG TO TB_MSG.
*      テーブルアンロック
PERFORM RELEASE_TABLE.
*      リターン
RETURN.
ENDIF.
********************
INSERT ZTEGFIT004 FROM TABLE I_TB_ZTEGFIT004 ACCEPTING DUPLICATE KEYS.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
*    メッセージ
MESSAGE E003 WITH 'ZTEGFIT004'
LW_TEXT
INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-024.
APPEND ST_MSG TO TB_MSG.
*      テーブルアンロック
PERFORM RELEASE_TABLE.
*      リターン
RETURN.
ELSE.
*      Data has been created.
*    メッセージ
MESSAGE S004 INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-027.
APPEND ST_MSG TO TB_MSG.
COMMIT WORK.
ENDIF.
ENDIF.

*  テーブルアンロック
PERFORM RELEASE_TABLE.

ENDFORM.                    " UPDATE_TABLE
*&---------------------------------------------------------------------*
*&      Form  LOCK_TABLE
*&---------------------------------------------------------------------*
*       テーブルロック
*----------------------------------------------------------------------*
*      <--O_ERRFLG  エラーフラグ
*----------------------------------------------------------------------*
FORM LOCK_TABLE  CHANGING O_ERRFLG TYPE FLAG.

* Lock ZTEGZZT001
CALL FUNCTION 'ENQUEUE_EZZTEGZZT001'
EXPORTING
MODE_ZTEGZZT001 = C_LOCK_MODE
EXCEPTIONS
FOREIGN_LOCK  = 1
SYSTEM_FAILURE = 2.

IF SY-SUBRC <> 0.
CLEAR ST_MSG.
MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-011.
APPEND ST_MSG TO TB_MSG.
O_ERRFLG = 'X'.
RETURN.
ENDIF.

* Lock ZTEGFIT003
CALL FUNCTION 'ENQUEUE_EZZTEGFIT003'
EXPORTING
MODE_ZTEGFIT003       = C_LOCK_MODE
EXCEPTIONS
FOREIGN_LOCK  = 1
SYSTEM_FAILURE = 2.

IF SY-SUBRC <> 0.
CLEAR ST_MSG.
MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-011.
APPEND ST_MSG TO TB_MSG.
O_ERRFLG = 'X'.

*   Release ZTEGZZT001
CALL FUNCTION 'DEQUEUE_EZZTEGZZT001'.
RETURN.
ENDIF.

* Lock ZTEGFIT004
CALL FUNCTION 'ENQUEUE_EZZTEGFIT004'
EXPORTING
MODE_ZTEGFIT004       = C_LOCK_MODE
EXCEPTIONS
FOREIGN_LOCK  = 1
SYSTEM_FAILURE = 2.

IF SY-SUBRC <> 0.
CLEAR ST_MSG.
MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
INTO ST_MSG-TEXT.
ST_MSG-TYPE = TEXT-011.
APPEND ST_MSG TO TB_MSG.
O_ERRFLG = 'X'.

*   Release ZTEGFIT003
CALL FUNCTION 'DEQUEUE_EZZTEGFIT003'.
*   Release ZTEGFIT004
CALL FUNCTION 'DEQUEUE_EZZTEGFIT004'.
RETURN.
ENDIF.

ENDFORM.                    " LOCK_TABLE
*&---------------------------------------------------------------------*
*&      Form  GET_LOG_NO
*&---------------------------------------------------------------------*
*       Get output log no
*----------------------------------------------------------------------*
*      <--P_LW_LOGNO  text
*----------------------------------------------------------------------*
FORM GET_LOG_NO CHANGING O_LOGNO TYPE ZEOUTPUTLOGNO.

CLEAR:
O_LOGNO.

CALL FUNCTION 'NUMBER_GET_NEXT'
EXPORTING
NR_RANGE_NR             = '01'
OBJECT                  = 'ZEGZZ0001'
IMPORTING
NUMBER                  = O_LOGNO
EXCEPTIONS
INTERVAL_NOT_FOUND      = 1
NUMBER_RANGE_NOT_INTERN = 2
OBJECT_NOT_FOUND        = 3
QUANTITY_IS_0           = 4
QUANTITY_IS_NOT_1       = 5
INTERVAL_OVERFLOW       = 6
BUFFER_OVERFLOW         = 7
OTHERS                  = 8.
IF SY-SUBRC <> 0.
CLEAR ST_MSG.
MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
INTO ST_MSG-TEXT.
*    ST_MSG-TYPE = TEXT-011.
APPEND ST_MSG TO TB_MSG.
ENDIF.

ENDFORM.                    " GET_LOG_NO
*&---------------------------------------------------------------------*
*&      Form  RELEASE_TABLE
*&---------------------------------------------------------------------*
*       テーブルアンロック
*----------------------------------------------------------------------*
FORM RELEASE_TABLE .

*   Release ZTEGZZT001
CALL FUNCTION 'DEQUEUE_EZZTEGZZT001'.
*   Release ZTEGFIT003
CALL FUNCTION 'DEQUEUE_EZZTEGFIT003'.
*   Release ZTEGFIT004
CALL FUNCTION 'DEQUEUE_EZZTEGFIT004'.

ENDFORM.                    " RELEASE_TABLE
*&---------------------------------------------------------------------*
*&      Form  INIT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM INIT_DATA .

CLEAR:
W_DOCNO,
W_HKONT,
W_DOCTY,
W_POSTD,
W_ENTRYD,
ST_MSG,
TB_MSG,
W_COUNT,
W_NORMAL,
W_ERR.

ENDFORM.                    " INIT_DATA
*&---------------------------------------------------------------------*
*&      Form  CONVERT_CURRENCY
*&---------------------------------------------------------------------*
*       通貨コード変換
*----------------------------------------------------------------------*
FORM CONVERT_CURRENCY  USING VALUE(I_WAERS) TYPE WAERS
CHANGING O_WAERS TYPE WAERS.

CLEAR O_WAERS.

SELECT SINGLE Z_WAERS
INTO O_WAERS
FROM ZTEGZZM002
WHERE WAERS = I_WAERS.

IF SY-SUBRC <> 0.
O_WAERS = I_WAERS.
ENDIF.

ENDFORM.                    " CONVERT_CURRENCY
*&---------------------------------------------------------------------*
*&      Form  CONVERT_AMOUNT
*&---------------------------------------------------------------------*
*       通貨額変換
*----------------------------------------------------------------------*
FORM CONVERT_AMOUNT  USING VALUE(I_CURRENCY) TYPE WAERS
VALUE(I_AMOUNT) TYPE WRBTR
CHANGING O_AMOUNT TYPE STRING.

DATA:
LW_EXTERNAL TYPE BAPICURX-BAPICURX,
LW_AMOUNT TYPE CHAR22.

CLEAR:
LW_EXTERNAL.

CALL FUNCTION 'BAPI_CURRENCY_CONV_TO_EXTERN_9'
EXPORTING
CURRENCY        = I_CURRENCY
AMOUNT_INTERNAL = I_AMOUNT
IMPORTING
AMOUNT_EXTERNAL = LW_EXTERNAL.

IF I_CURRENCY = 'JPY'.
WRITE LW_EXTERNAL TO LW_AMOUNT DECIMALS 0..
ELSE.
WRITE LW_EXTERNAL TO LW_AMOUNT DECIMALS 2.
ENDIF.

O_AMOUNT = LW_AMOUNT.

ENDFORM.                    " CONVERT_AMOUNT
*&---------------------------------------------------------------------*
*&      Form  GET_EDIT_REPRINT
*&---------------------------------------------------------------------*
*       Reprintの場合、データ取得＆データ編集
*----------------------------------------------------------------------*
FORM GET_EDIT_REPRINT CHANGING O_FILENAME TYPE STRING
O_OUTPUT_CODEPAGE TYPE ZEOUTPUTCP
O_TB_FILE_OUT TYPE TY_T_FILE_OUT
O_TB_ZTEGZZT001 TYPE TY_T_ZTEGZZT001.

DATA:
LW_LOGNO TYPE ZEOUTPUTLOGNO,
LST_FILE_OUT TYPE ZSEGFI0003,
LST_ZTEGZZT001 TYPE ZTEGZZT001,
LTB_ZTEGFIT004 TYPE TY_T_ZTEGFIT004,
LST_ZTEGFIT004 TYPE ZTEGFIT004.

*  Output Work(Official Receipt)から取得する
SELECT *
FROM ZTEGFIT004
INTO TABLE LTB_ZTEGFIT004
WHERE Z_OUTPUT_MODE = C_OUTPUTMODE_P
AND BUKRS = P_COMCD
AND BELNR IN S_DOCNO
AND GJAHR = P_YEAR.

IF SY-SUBRC <> 0.
*    対象データが存在しません。
MESSAGE S002 WITH 'ZTEGFIT004'
DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.

*  正常件数カウント
W_NORMAL = LINES( LTB_ZTEGFIT004 ).

*  ファイル名 & コードページ取得
PERFORM GET_FILE_NAME_CODEPAGE CHANGING O_FILENAME
O_OUTPUT_CODEPAGE.

LOOP AT LTB_ZTEGFIT004 INTO LST_ZTEGFIT004.

*  Get outputlog no
PERFORM GET_LOG_NO CHANGING LW_LOGNO.

********************
*  Output Log
********************
LST_ZTEGZZT001-MANDT = SY-MANDT.                  " Client
LST_ZTEGZZT001-Z_OUTPUT_LOG_NO = LW_LOGNO.         " Logno
LST_ZTEGZZT001-PROGNAME = SY-REPID.               " Program
LST_ZTEGZZT001-Z_REPORT_NAME = TEXT-034.   " Report name
LST_ZTEGZZT001-Z_OUTPUT_MODE = C_OUTPUTMODE_P." Output mode
LST_ZTEGZZT001-LNAME = P_PTRAY.                    " Output device
LST_ZTEGZZT001-Z_OUTPUT_PATH = O_FILENAME.       " Output file
LST_ZTEGZZT001-Z_OUTPUT_CP = O_OUTPUT_CODEPAGE.         " Codepage
LST_ZTEGZZT001-Z_KEY1_TYPE = 'BUKRS'.
LST_ZTEGZZT001-Z_KEY1_VALUE = LST_ZTEGFIT004-BUKRS.       " Company code
LST_ZTEGZZT001-Z_KEY2_TYPE = 'BELNR'.
LST_ZTEGZZT001-Z_KEY2_VALUE = LST_ZTEGFIT004-BELNR.       " Customer code
LST_ZTEGZZT001-Z_KEY3_TYPE = 'GJAHR'.
LST_ZTEGZZT001-Z_KEY3_VALUE = LST_ZTEGFIT004-GJAHR.   " Fiscal Year
LST_ZTEGZZT001-Z_CRE_YMD = SY-DATUM.              " Created date
LST_ZTEGZZT001-Z_CRE_HMS = SY-UZEIT.              " Created time
LST_ZTEGZZT001-Z_CRE_USERID = SY-UNAME.           " User
APPEND LST_ZTEGZZT001 TO O_TB_ZTEGZZT001.

********************
*  Outputファイル内部テーブルに設定する
********************
MOVE-CORRESPONDING LST_ZTEGFIT004 TO LST_FILE_OUT.
*    POSTINGDATEフォーマット変更
PERFORM CONVERT_DATE USING LST_ZTEGFIT004-POSTINGDATE
LST_ZTEGFIT004-DATEFORMAT
CHANGING LST_FILE_OUT-POSTINGDATE.

*    通貨額変換
PERFORM CONVERT_AMOUNT USING LST_ZTEGFIT004-CURRENCY
LST_ZTEGFIT004-AMOUNT
CHANGING LST_FILE_OUT-AMOUNT.

LST_FILE_OUT-POSTINGDATEMONTHNUM = LST_ZTEGFIT004-POSTINGMONTHNUM.
LST_FILE_OUT-POSTINGDATEMONTHCHAR = LST_ZTEGFIT004-POSTINGMONTHCHAR.
APPEND LST_FILE_OUT TO O_TB_FILE_OUT.
ENDLOOP.

ENDFORM.                    " GET_EDIT_REPRINT
*&---------------------------------------------------------------------*
*&      Form  HEADER_OUT
*&---------------------------------------------------------------------*
*       結果画面のヘッダ出力
*----------------------------------------------------------------------*
FORM HEADER_OUT .

* タイトル表題設定
SET TITLEBAR 'GUI_TITLE_2000'.

WRITE:  1 TEXT-028,         " Client
10 ':',
13 SY-MANDT,
130 TEXT-029,         " Date
136 ':',
139 SY-DATLO.
WRITE: /1 TEXT-030,         " Program
10 ':',
13 SY-REPID,
130 TEXT-031,         " Time
136 ':',
139 SY-TIMLO.
WRITE: /1 TEXT-032,         " User
10 ':',
13 SY-UNAME,
60 TEXT-033.        "<<<Official Receipt Report Output>>>

ENDFORM.                    " HEADER_OUT
*&---------------------------------------------------------------------*
*&      Form  CONVERT_DATE
*&---------------------------------------------------------------------*
*       日付フォーマット変更
*----------------------------------------------------------------------*
FORM CONVERT_DATE  USING VALUE(I_DATE) TYPE BUDAT
VALUE(I_DATEFORMAT) TYPE XUDATFM
CHANGING O_DATE TYPE STRING.

DATA:
LW_YEAR TYPE CHAR4,
LW_MONTH TYPE CHAR2,
LW_DAY TYPE CHAR2.

LW_YEAR = I_DATE+0(4).
LW_MONTH = I_DATE+4(2).
LW_DAY = I_DATE+6(2).

CASE I_DATEFORMAT.
WHEN '1'.
CONCATENATE LW_DAY LW_MONTH LW_YEAR
INTO O_DATE SEPARATED BY '.'.
WHEN '2'.
CONCATENATE LW_MONTH LW_DAY LW_YEAR
INTO O_DATE SEPARATED BY '/'.
WHEN '3'.
CONCATENATE LW_MONTH LW_DAY LW_YEAR
INTO O_DATE SEPARATED BY '-'.
WHEN '4'.
CONCATENATE LW_YEAR LW_MONTH LW_DAY
INTO O_DATE SEPARATED BY '.'.
WHEN '5'.
CONCATENATE LW_YEAR LW_MONTH LW_DAY
INTO O_DATE SEPARATED BY '/'.
WHEN '6'.
CONCATENATE LW_YEAR LW_MONTH LW_DAY
INTO O_DATE SEPARATED BY '-'.
WHEN OTHERS.
O_DATE = I_DATE.
ENDCASE.

ENDFORM.                    " CONVERT_DATE
