************************************************************************
* [プログラム名]
*   ZEGSDR0060        受注伝票一覧表
*                     Copy from ZS010100_NEW
* [処理概要]
*   受注情報の把握
*     ・当日受発注一覧表
*     ・内示一覧表
*     ・未引当一覧表
*     ・出荷ブロックリスト
*     ・出荷可能データリスト
*     ・ＥＤＩ重複データ一覧表(機能追加)
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2001/12/05   PSD H.Tanaka      新規開発
*  2002/01/09   PSD T.SAITOH      当日受注伝票一覧表　購買伝票なし時続行
*  2002/01/10   PSD H.Tanaka      ＡＬＶヘッダー表示
*  2002/01/11   PSD H.Tanaka      受注単価変更等
*  2002/01/15   PSD H.Tanaka      原価修正
*  2002/01/16   PSD H.Tanaka      原価修正
*  2002/01/21   PSD H.Tanaka      出荷ブロックリストデータ抽出条件変更
*  2002/01/30   PSD H.Tanaka      仕入先マスタの取得条件変更
*  2002/02/05   PSD H.Tanaka      ＥＤＩ重複データ一覧表対応
*  2002/03/14   PSD T.SAITOH      ALV一覧ステータス印刷拒否設定
*  2002/03/20   PSD T.SAITOH      出荷可能リストで出荷可能数０を対象外
*  2002/03/20   PSD T.SAITOH      在（在庫品）項目と設定処理追加
*  2002/03/20   PSD T.SAITOH      テーブル読込条件⑪、⑯の変更
*  2002/04/30   PSD K.Arai        テーブル読込条件⑯の変更
*  2002/05/02   PSD T.SAITOH      棚番の取得条件変更
*  2002/05/02   PSD K.Arai        出荷指示備考のセットデータ修正
*  2002/05/28   PSD K.ARAI        クレメモ・デビメモ時対応
*  2002/06/12   PSD T.SAITOH      見出し日付→受注日対応
*  2002/06/20   PSD T.SAITOH      再移送
*  2002/06/21   PSD T.SAITOH      得意先品目テキスト追加（出荷可能のみ）
*  2002/06/24   PSD T.SAITOH      納入区域が抜けているのでチェック
*  2002/07/15   PSD T.SAITOH      得意先発注番号３５桁対応、VBKDから取得
*  2002/07/15   PSD T.SAITOH      READ_TEXTエラーハンドリング修正
*  2002/07/17   PSD T.SAITOH      販売組織・流通ＣＨ・製品部門対応
*  2002/07/29   PSD T.SAITOH      受注在庫確認追加
*  2002/08/05   PSD T.SAITOH      出荷可能数の設定（MSKA-KALAB)
*  2002/08/06   PSD T.SAITOH      発注情報初期化ミス修正
*  2002/08/06   PSD T.SAITOH      発注価格単位考慮
*  2002/08/06   PSD T.SAITOH      ＡＬＶヘッダ対応（当日受注伝票）
*  2002/08/06   PSD T.SAITOH      発注金額円建て廃止
*  2002/08/08   カットオーバー ---------------------------------------*
*  2002/08/08   PSD T.SAITOH      ページ番号付加
*  2002/08/16   PSD T.SAITOH      当日受注伝票一覧・・・拒否理由追加
*  2002/08/21   PSD T.SAITOH      抽出条件（当日受注）修正
*  2002/09/20   PSD T.SAITOH      納品書種別の追加（出荷可能リスト）
*  2003/04/21   NDSC S.IWAKI      パフォーマンス対応
*  2003/05/27   NDSC R.TOMOEDA    パフォーマンス対応 Part.2
*  2004/01/14   DMC Y.Tsukahara   当日受発注一覧表原価項目表示対応
*  2004/04/02   DMC Y.Tsukahara   当日受発注一覧ジョブ異常終了対応
*  2004/04/21   NDSC A.MASUDA     出力項目新規追加
*  2004/09/29   DMC  A.MASUDA     出荷可能リスト：出荷可能数量不具合修正
*  2005/01/05   DMC  A.MASUDA     出荷可能リスト：出荷可能数量単位の修正
*  2006/05/31   DMC  S.SHIGEMITU  出荷可能リスト：輸送手段等項目追加修正
*  2006/11/16   DMC Y.OTA         出荷数量変換処理の修正
*  2007/06/15   DMC S.KURATA      出荷可能リスト：出荷数量変換処理の修正
*  2008/01/11   DMC S.KURATA      購買単価・受発注数量出力内容修正
*  2008/05/07   DMC
*  販売・購買価格をマスタより取得する際に数量スケールが
*  考慮されていないためスケールを考慮するように修正する
*  2008/07/03   DMC S.KURATA      仕入先名称出力不具合 修正
*  2009/05/29   NDSC S.KURATA     当日受発注一覧 未出力不具合対応
*  2011/05/23   SOLFIS M.Murata   購買グループを選択画面項目と出力
*                                 項目に追加
*                                 ※購買Grpは在庫発注のみを制御
*  2011/11/16   SOLFIS C.Maruta   DMW3580
*                                 当日受発注一覧表：輸送手段等項目追加
*  2012/09/06   ISID              ES-UP
*  2013/11/11   GSL T.HIGURASHI   当日受発注一覧表：表示条件、項目の変更
*  2013/12/11   GSL               仕様間違い対応
*                                 1.部屋番号→取得元項目の変更
*                                 2.支払条件→明細のみを対象とする
*  2014/02/03   GSL               当日受発注一覧表：表示条件、項目の追加
*                                 ・受注伝票-拒否理由
*                                 ・購買発注-削除フラグ
*  2014/02/17   GSL               伝票日付(ヘッダ項目)の取得元変更
*                                 変更前) 受注・発注伝票の伝票日付
*                                 変更後) 選択画面の伝票日付(新規)
*                     ※変更理由）抽出年月日単位で集約して表示させるため
*  2014/02/18   GSL               初期レイアウト変更
*                   変更前）/ZS010100_01 当日受発注一覧表（新）
*                   変更後) /ZS010100_02 当日受発注一覧表（新）-20140201
*  2014/09/02   ISID19            グローバル化対応
*  2014/10/23   ISID19            営業所改修
*  2015/01/05   ISID11            単価6桁対応
*  2015/01/22   ISID11            レポートの通貨コード表示対応
************************************************************************
REPORT  ZEGSDR0060.

*---------------------------------------------------------------------
* TYPES
*---------------------------------------------------------------------
TYPE-POOLS SLIS.
*--- 販売伝票データ型
TYPES: BEGIN OF TYP_INFO,
VBELN TYPE VBAK-VBELN,    " 販売伝票
AUDAT TYPE VBAK-AUDAT,    " 伝票日付
AUART TYPE VBAK-AUART,    " 販売伝票タイプ
VKGRP TYPE VBAK-VKGRP,    " 営業グループ
VKBUR TYPE VBAK-VKBUR,    " 営業所
VDATU TYPE VBAK-VDATU,    " 指定納入期日
*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
*        BSTNK TYPE VBAK-BSTNK,    " 得意先発注番号
BSTNK TYPE VBKD-BSTKD,    " 得意先発注番号
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*
KUNNR TYPE VBAK-KUNNR,    " 受注先
VBTYP TYPE VBAK-VBTYP,    " 販売管理伝票カテゴリ
ERNAM TYPE VBAK-ERNAM,    " ユーザＩＤ
POSNR TYPE VBUP-POSNR,    " 明細（ＳＤ）
BEZEIA TYPE TVKBT-BEZEI,  " 営業署名
BEZEIB TYPE TVGRT-BEZEI,  " 営業グループ名
TKNR   TYPE VBKD-BSTDK_E, " 得意先発注日付
* 2002/01/30 PSD H.Tanaka ADD ↓
STCUR  TYPE VBKD-KURSK,   " 換算レート
*2013/11/11 Add Start
ZTERM  TYPE VBKD-ZTERM,    " 支払条件キー
CHANG  TYPE CHAR1,         " 変更伝票区分
UPNAM  TYPE CDHDR-USERNAME," 変更ユーザID
UDATE  TYPE CDHDR-UDATE,   " 変更伝票の登録日付
UTIME  TYPE CDHDR-UTIME,   " 変更時刻
EBELU  TYPE EKKO-EBELN,    " 購買伝票番号
*2013/11/11 Add End
END   OF TYP_INFO.

*--- 販売明細データ型
TYPES: BEGIN OF TYP_VBAP,
VBELN  TYPE VBAP-VBELN,   " 販売伝票
POSNR  TYPE VBAP-POSNR,   " 販売伝票明細
MATNR  TYPE VBAP-MATNR,   " 品目コード
ARKTX  TYPE VBAP-ARKTX,   " 品目名
PSTYV  TYPE VBAP-PSTYV,   " 明細カテゴリ
KDMAT  TYPE VBAP-KDMAT,   " 得意先品目コード
NETWR  TYPE VBAP-NETWR,   " 正味額
WAERK  TYPE VBAP-WAERK,   " 伝票通貨
KWMENG TYPE VBAP-KWMENG,  " 受注数量
KBMENG TYPE VBAP-KBMENG,  " 累積確認済数量
* 2002/02/05 PSD H.Tanaka ADD ↓
VRKME  TYPE VBAP-VRKME,   " 販売単位
VSTEL  TYPE VBAP-VSTEL,   " 出荷ポイント／受領ポイント
* Mod 2003.12.08 ---->>
*         VNETPR TYPE VBAP-NETPR,   " 正味価格
VNETPR TYPE ZSNETPR111,   " 正味価格
* Mod 2003.12.08 <<----

* 2002/02/01 PSD H.Tanaka ADD ↓
KPEIN  TYPE VBAP-KPEIN,   " 価格条件単位
WAVWR  TYPE VBAP-WAVWR,   " 原価
* 2002/01/30 PSD H.Tanaka DEL ↓
*         STCUR  TYPE VBAP-STCUR,   " 統計用換算ルート
WERKS  TYPE VBAP-WERKS,   " プラント
LGORT  TYPE VBAP-LGORT,   " 保管場所
* 2002/02/12 PSD H.Tanaka ADD ↓
ABGRU  TYPE VBAP-ABGRU,   " 拒否理由
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*         VTEXT TYPE TVSTT-VTEXT,    " 出荷ポイントテキスト
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
* APPEND PSD K.ARAI 2002/05/28
ZMENG TYPE VBAP-ZMENG,     " 目標数量
* APPEND END
* 2007/11/05 D.YI ADD START↓
MWSBP TYPE VBAP-MWSBP,    " 税額
* 2007/11/05 D.YI ADD END↓
END   OF TYP_VBAP.

*--- 販売伝票納入日程行データ型
TYPES: BEGIN OF TYP_VBEP,
VBELN TYPE VBEP-VBELN,    " 販売伝票
POSNR TYPE VBEP-POSNR,    " 販売伝票明細
ETENR TYPE VBEP-ETENR,    " 納入日程行番号
EDATU TYPE VBEP-EDATU,    " 出荷日付
ETTYP TYPE VBEP-ETTYP,    " 納入日程カテゴリ
LIFSP TYPE VBEP-LIFSP,    " 出荷ブロック
BANFN TYPE VBEP-BANFN,    " 購買依頼
BNFPO TYPE VBEP-BNFPO,    " 購買依頼の明細
END   OF TYP_VBEP.

*--- 購買伝票明細データ型
TYPES: BEGIN OF TYP_EKPO,
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
BANFN  TYPE EKPO-BANFN,   " 購買依頼
BNFPO  TYPE EKPO-BNFPO,   " 明細
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
EBELN  TYPE EKPO-EBELN,   " 購買伝票
EBELP  TYPE EKPO-EBELP,   " 明細
ENETPR TYPE EKPO-NETPR,   " 正味発注価格
MENGE  TYPE EKPO-MENGE,   " 発注数量
WAERS  TYPE EKKO-WAERS,   " 通貨コード
WKURS  TYPE EKKO-WKURS,   " 換算レート
*         LLIEF  TYPE EKKO-LLIEF,   " 供給仕入先
LIFNR  TYPE EKKO-LIFNR,   " 仕入先勘定コード
WEMNG  TYPE EKET-WEMNG,   " 納入数量
EINDT  TYPE EKET-EINDT,   " 納入期日
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*         LNAME  TYPE LFA1-NAME1,   " 名称
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*---APPEND START PSD T.SAITOH 2002/08/06 ---------------------------*
PEINH  TYPE EKPO-PEINH,   " 価格単位
*---APPEND END   PSD T.SAITOH 2002/08/06 ---------------------------*
*---ADD BY DMC 2008/05/07 BEGIN
MEINS  TYPE EKPO-MEINS,    "発注単位
*---ADD BY DMC 2008/05/07 END
*2011/05/23 Add Start
EKGRP  TYPE EKKO-EKGRP,    "購買Grp
*2011/05/23 Add End
*2013/11/11 Add Start
MWSKZ  TYPE EKPO-MWSKZ,    "消費税コード
*2013/11/11 Add End
END   OF TYP_EKPO.

*--- 販売伝票フローデータ型
TYPES: BEGIN OF TYP_VBFA,
VBELV   TYPE VBFA-VBELV,   " 先行販売管理伝票
POSNV   TYPE VBFA-POSNV,   " 元明細
VBELN   TYPE VBFA-VBELN,   " 後続伝票
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*         POSNN   TYPE VBFA-POSNN,   " 現明細
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
VBTYP_N TYPE VBFA-VBTYP_N, " 後続伝票カテゴリ
*---APPEND START DMC A.MASUDA 2004/09/29 ----------------------------*
WBSTK   TYPE VBUK-WBSTK,
*---APPEND END   DMC A.MASUDA 2004/09/29 ----------------------------*
LFIMG   TYPE LIPS-LFIMG,   " 出荷数量
END   OF TYP_VBFA.

*--- 販売伝票取引先構造
TYPES: BEGIN OF TYP_VBPA,
VBELN  TYPE VBPA-VBELN,    " 販売管理伝票
POSNR  TYPE VBPA-POSNR,    " 明細（ＳＤ）
PARVW  TYPE VBPA-PARVW,    " 取引先機能
PERNR  TYPE VBPA-PERNR,    " 従業員番号
ADRNR  TYPE VBPA-ADRNR,    " 住所
LZONE  TYPE VBPA-LZONE,    " 納入区域
END   OF TYP_VBPA.
TYPES: BEGIN OF TYP_VBPA2,
VBELN  TYPE VBPA-VBELN,    " 販売管理伝票
POSNR  TYPE VBPA-POSNR,    " 明細（ＳＤ）
PARVW  TYPE VBPA-PARVW,    " 取引先機能
PERNR  TYPE VBPA-PERNR,    " 従業員番号
NACHN  TYPE PA0002-NACHN,  " 姓
END   OF TYP_VBPA2.
**---DELETE START NDSC A.MASUDA 2004/04/08 --------------------------*
*TYPES: BEGIN OF TYP_VBPA3,
*         VBELN  TYPE VBPA-VBELN,    " 販売管理伝票
*         POSNR  TYPE VBPA-POSNR,    " 明細（ＳＤ）
*         PARVW  TYPE VBPA-PARVW,    " 取引先機能
*         KUNNR  TYPE VBPA-KUNNR,    " 得意先コード
*         NAME1  TYPE ADRC-NAME1,    " 名称１
*         STREET TYPE ADRC-STREET,   " 都道府県
*       END   OF TYP_VBPA3.
**---DELETE END   NDSC A.MASUDA 2004/04/08 --------------------------*
*---APPEND START NDSC A.MASUDA 2004/04/21 --------------------------*
TYPES: BEGIN OF TYP_VBPA3,
VBELN  TYPE VBPA-VBELN,    " 販売管理伝票
POSNR  TYPE VBPA-POSNR,    " 明細（ＳＤ）
PARVW  TYPE VBPA-PARVW,    " 取引先機能
KUNNR  TYPE VBPA-KUNNR,    " 得意先コード
NAME2  TYPE ADRC-NAME2,    " 名称２
CITY1  TYPE ADRC-CITY1,    " 市区町村
STREET TYPE ADRC-STREET,   " 都道府県
BEZEI  TYPE T005U-BEZEI,   " 地域(名称)
END   OF TYP_VBPA3.
*---APPEND END   NDSC A.MASUDA 2004/04/21 --------------------------*

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
*--- 仕入先マスタデータ型
TYPES: BEGIN OF TYP_LFA1,
LIFNR  TYPE LFA1-LIFNR,    " 仕入先コード
NAME1  TYPE LFA1-NAME1,    " 名称１
*2013/12/11 Mod Start 1.部屋番号
*2013/11/11 Add Start
*         roomn  TYPE adrc-roomnumber, " 部屋/アパート番号
ROOMN  TYPE ADRC-HOUSE_NUM1, " 番地-号部（部屋/アパート番号）
*2013/11/11 Add End
*2013/12/11 Mod End
END   OF TYP_LFA1.
*--- 販売伝票: ビジネスデータ型
TYPES: BEGIN OF TYP_VBKD,
VBELN  TYPE VBKD-VBELN,    " 販売伝票
POSNR  TYPE VBKD-POSNR,    " 販売伝票明細
BSTKD  TYPE VBKD-BSTKD,    " 得意先発注番号
END   OF TYP_VBKD.
*---  組織単位: 出荷ポイント: テキストデータ型
TYPES: BEGIN OF TYP_TVSTT,
VSTEL  TYPE TVSTT-VSTEL,   " 出荷ポイント/受領ポイント
SPRAS  TYPE TVSTT-SPRAS,   " 言語キー
VTEXT  TYPE TVSTT-VTEXT,   " テキスト
END   OF TYP_TVSTT.
*---  品目の保管場所データ型
TYPES: BEGIN OF TYP_MARD,
MATNR  TYPE MARD-MATNR,    " 品目コード
WERKS  TYPE MARD-WERKS,    " プラント
LGPBE  TYPE MARD-LGPBE,    " 棚番
END   OF TYP_MARD.
*---  受注在庫データ型
TYPES: BEGIN OF TYP_MSKA,
MATNR  TYPE MSKA-MATNR,    " 品目コード
WERKS  TYPE MSKA-WERKS,    " プラント
VBELN  TYPE MSKA-VBELN,    " 販売伝票番号
POSNR  TYPE MSKA-POSNR,    " 明細番号
KALAB  TYPE MSKA-KALAB,    " 利用可能評価在庫
END   OF TYP_MSKA.

*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

* ADD 2004/02/12 Y.Tsukahara START
TYPES: BEGIN OF TYP_EINA,
UMREZ TYPE EINA-UMREZ,
UMREN TYPE EINA-UMREN,
* ADD 2004/03/29 Y.Tsukahara START
MEINS TYPE EINA-MEINS,  "発注単位
* ADD 2004/03/29 Y.Tsukahara END
END OF TYP_EINA.
* ADD 2004/02/12 Y.Tsukahara END

*---APPEND START  D.YI 2007/11/05 ---------------------------*
*--- 在庫発注用
TYPES: BEGIN OF TYP_EKPO1,
EBELN  TYPE EKPO-EBELN,   " 購買伝票番号
EBELP  TYPE EKPO-EBELP,   " 明細番号
MENGE  TYPE EKPO-MENGE,   " 在庫発注
NETPR  TYPE EKPO-NETPR,   " 発注単価
WAERS  TYPE EKKO-WAERS,   " 通貨コード
WKURS  TYPE EKKO-WKURS,   " 換算レート
LIFNR  TYPE EKKO-LIFNR,   " 仕入先勘定コード
WEMNG  TYPE EKET-WEMNG,   " 納入数量
EINDT  TYPE EKET-EINDT,   " 納入期日
MATNR  TYPE EKPO-MATNR,   " 品目コード
TXZ01  TYPE EKPO-TXZ01,   " 品名
ERNAM  TYPE EKKO-ERNAM,   " ユーザID
WERKS  TYPE EKPO-WERKS,   " プラント
EKGRP  TYPE EKKO-EKGRP,   " 営業グループ
AEDAT  TYPE EKKO-AEDAT,   " 伝票日付
*2008/01/15 ADD START
PEINH  TYPE EKPO-PEINH,   " 価格単位
*2008/01/15 ADD END
*---ADD BY DMC 2008/05/07 BEGIN
MEINS  TYPE EKPO-MEINS,    "発注単位
*---ADD BY DMC 2008/05/07 END
*2013/11/11 Add Start
MWSKZ  TYPE EKPO-MWSKZ,    " 消費税コード
CHANG  TYPE CHAR1,         " 変更伝票区分
UPNAM  TYPE CDHDR-USERNAME," 変更ユーザID
UDATE  TYPE CDHDR-UDATE,   " 変更伝票の登録日付
UTIME  TYPE CDHDR-UTIME,   " 変更時刻
*2013/11/11 Add End
END OF TYP_EKPO1.
*---APPEND END    D.YI 2007/11/05 ---------------------------*

*2013/11/11 Add Start
* 変更文書情報
TYPES: BEGIN OF TYP_CDHDR,
OBJECTCLAS TYPE CDHDR-OBJECTCLAS, "オブジェクトクラス
OBJECTID   TYPE CDHDR-OBJECTID,   "対象値
CHANGENR   TYPE CDHDR-CHANGENR,   "変更文書番号
USERNAME   TYPE CDHDR-USERNAME,   "変更伝票の責任者のユーザ名
UDATE      TYPE CDHDR-UDATE,      "変更伝票の登録日付
UTIME      TYPE CDHDR-UTIME,      "変更時刻
TABNAME    TYPE CDPOS-TABNAME,    "テーブル名
TABKEY     TYPE CDPOS-TABKEY,     "変更テーブルレコードキー
FNAME      TYPE CDPOS-FNAME,      "項目名
END   OF TYP_CDHDR.

* 購買伝票の取引先
TYPES: BEGIN OF TYP_ADRC,
EBELN  TYPE EKKO-EBELN,       "購買伝票番号
PARVW  TYPE EKPA-PARVW,       "取引先機能
LIFN2  TYPE EKPA-LIFN2,       "他の仕入先への参照
NAME1  TYPE ADRC-NAME1,       "名称１
END   OF TYP_ADRC.

TYPES: BEGIN OF TYP_VBELN,
VBELN TYPE VBAK-VBELN,        "販売伝票番号
END   OF TYP_VBELN,
BEGIN OF TYP_EBELN,
EBELN TYPE EKKO-EBELN,        "購買伝票番号
END   OF TYP_EBELN,
TYP_WERKS TYPE RANGE OF T001W-WERKS."プラント
*2013/11/11 Add End

*--- 選択画面用構造
DATA: G_SPMON LIKE S901-SPMON,      " 抽出年月
* 2002/02/05 PSD H.Tanaka ADD ↓
G_ABGRU LIKE VBAP-ABGRU.      " 拒否理由
* 2002/02/05 PSD H.Tanaka ADD ↑

*---------------------------------------------------------------------
* DATA
*---------------------------------------------------------------------
*--- 販売伝票内部テーブル
DATA: GF_INFO  TYPE          TYP_INFO,
GT_INFO  LIKE TABLE OF GF_INFO.

*--- 販売明細内部テーブル
DATA: GF_VBAP  TYPE          TYP_VBAP,
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*      GT_VBAP  LIKE TABLE OF GF_VBAP.
GT_VBAP  LIKE HASHED TABLE OF GF_VBAP
WITH UNIQUE KEY VBELN POSNR.
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)

*--- 販売伝票納入日程行内部テーブル
DATA: GF_VBEP  TYPE          TYP_VBEP,
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
GT_VBEP  LIKE TABLE OF GF_VBEP,
GT_VBEP2 LIKE TABLE OF GF_VBEP.
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)

*--- 購買伝票明細内部テーブル
DATA: GF_EKPO  TYPE          TYP_EKPO,
GT_EKPO  LIKE TABLE OF GF_EKPO.

*--- 購買伝票フロー内部テーブル
DATA: GF_VBFA  TYPE          TYP_VBFA,
GT_VBFA  LIKE TABLE OF GF_VBFA.

*--- 販売伝票取引先内部テーブル
DATA: GF_VBPA TYPE          TYP_VBPA.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
DATA: GT_VBPA  TYPE HASHED TABLE OF TYP_VBPA
WITH UNIQUE KEY VBELN POSNR PARVW.
DATA: GF_VBPA2 TYPE         TYP_VBPA2.
DATA: GT_VBPA2 TYPE HASHED TABLE OF TYP_VBPA2
WITH UNIQUE KEY VBELN POSNR PARVW.

*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
*--- 出荷先住所内部テーブル
DATA: GF_VBPA3 TYPE         TYP_VBPA3.
DATA: GT_VBPA3 TYPE HASHED TABLE OF TYP_VBPA3
WITH UNIQUE KEY VBELN POSNR PARVW.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

*--- アドレス管理内部テーブル
DATA: GT_SADR  TYPE HASHED TABLE OF SADR
WITH UNIQUE KEY ADRNR.

*--- 仕入先マスタ内部テーブル
DATA: GF_LFA1  TYPE          TYP_LFA1.
DATA: GT_LFA1  TYPE HASHED TABLE OF TYP_LFA1
WITH UNIQUE KEY LIFNR.

*--- 販売伝票: ビジネス内部テーブル
DATA: GF_VBKD  TYPE          TYP_VBKD.
DATA: GT_VBKD  TYPE HASHED TABLE OF TYP_VBKD
WITH UNIQUE KEY VBELN POSNR.

*---  組織単位: 出荷ポイント: テキスト内部テーブル
DATA: GF_TVSTT  TYPE          TYP_TVSTT.
DATA: GT_TVSTT  TYPE HASHED TABLE OF TYP_TVSTT
WITH UNIQUE KEY VSTEL SPRAS.
*---  品目の保管場所データ内部テーブル
DATA: GF_MARD  TYPE          TYP_MARD.
DATA: GT_MARD  TYPE HASHED TABLE OF TYP_MARD
WITH UNIQUE KEY MATNR WERKS.
*---  受注在庫内部テーブル
DATA: GF_MSKA  TYPE          TYP_MSKA.
DATA: GT_MSKA  TYPE HASHED TABLE OF TYP_MSKA
WITH UNIQUE KEY MATNR WERKS VBELN POSNR.

*-------2003/04/21 INSERT END   S.IWAKI(NDSC)



*---APPEND START  D.YI 2007/11/05 ---------------------------*
*--- 在庫発注用内部テーブル
DATA: GF_EKPO1  TYPE TYP_EKPO1,
GT_EKPO1  TYPE STANDARD TABLE OF TYP_EKPO1.
*---APPEND END    D.YI 2007/11/05 ---------------------------*

*2013/11/11 Add Start
DATA: GF_CDHDR TYPE TYP_CDHDR,         "変更文書情報
GT_CDHDV TYPE STANDARD TABLE OF TYP_CDHDR,
GT_CDHDE TYPE STANDARD TABLE OF TYP_CDHDR,
GT_VBAK  TYPE STANDARD TABLE OF TYP_INFO,
GF_ADRC  TYPE TYP_ADRC,          "購買伝票の取引先
GT_ADRC  TYPE STANDARD TABLE OF TYP_ADRC.

* 変更路歴からの検索
DATA: GT_VBELN TYPE STANDARD TABLE OF TYP_VBELN, "販売伝票番号
GF_VBELN TYPE TYP_VBELN,
GT_EBELN TYPE STANDARD TABLE OF TYP_EBELN. "購買伝票番号
*2013/11/11 Add End

*--- 帳票出力用内部テーブル
* Mod 2003.12.08 --->>
*DATA: GF_WRITE   TYPE          ZSLIST_V01,
*      GT_WRITE   LIKE TABLE OF ZSLIST_V01.
DATA:
**** START UPD 2015/01/05 ISID11 ****
*      GF_WRITE   TYPE          ZSLIST_V07_NEW,
*      GT_WRITE   LIKE TABLE OF ZSLIST_V07_NEW.
GF_WRITE   TYPE          ZSEGSD0023,
GT_WRITE   LIKE TABLE OF ZSEGSD0023.
**** END UPD 2015/01/05 ISID11 ****

*---DELETE START NDSC A.MASUDA 2004/04/08 --------------------------*
* Mod 2003.12.08 <<---
* 2002/01/10 PSD H.Tanaka ADD ↓
*DATA: GT_ALV     TYPE TABLE OF ZSLIST_V07
*                 WITH HEADER LINE.
* 2002/01/10 PSD H.Tanaka ADD ↑
*---DELETE END   NDSC A.MASUDA 2004/04/08 --------------------------*
DATA:
**** START UPD 2015/01/05 ISID11 ****
*      GT_ALV     TYPE TABLE OF ZSLIST_V07_NEW
GT_ALV     TYPE TABLE OF ZSEGSD0023
**** END UPD 2015/01/05 ISID11 ****
WITH HEADER LINE.

*---APPEND START PSD T.SAITOH 2002/08/05 ---------------------------*
* 出荷可能リスト専用：出荷可能数
DATA: G_KALAB TYPE MSKA-KALAB.
*---APPEND END   PSD T.SAITOH 2002/08/05 ---------------------------*

*--- REUSE_ALV_EVENTS_GET 用
DATA: GT_EVENT TYPE SLIS_T_EVENT.
DATA: GF_EVENT TYPE SLIS_ALV_EVENT.
DATA: GF_LAYOUT   TYPE SLIS_LAYOUT_ALV,     "レイアウト構造
GF_VARIANT   LIKE DISVARIANT,          "バリアント
G_TOP_OF_PAGE TYPE SLIS_FORMNAME VALUE 'TOP_OF_PAGE'.
*---
DATA: G_REPID        TYPE SY-REPID,        " プログラムＩＤ
G_DATA         TYPE SY-DATUM,        " システム日付
G_FLG_EXIT(1)  TYPE C VALUE '0',     " ＬＯＯＰ終了フラグ
*      G_NUMGF        TYPE ZSLIST_V01-NUMGF,
G_FDAT         TYPE ZSLIST_V01-FDAT,
G_TDAT         TYPE ZSLIST_V01-TDAT,
G_WAVWR        TYPE VBAP-NETWR,
G_NETPR        TYPE ZSLIST_V01-KBMENG.
*---APPEND START PSD T.SAITOH 2002/03/14 ALV一覧ステータス印刷拒否---*
DATA: GF_PRINT      TYPE SLIS_PRINT_ALV.
*---APPEND END   PSD T.SAITOH 2002/03/14 ---------------------------*
* APPEND 2004/01/07 START
DATA: G_WAVWR_Y      TYPE VBAP-NETWR.  "原価（円建て）用
* APPEND 2004/01/07 END

* ADD 2004/02/12 Y.Tsukahara START
DATA: WA_EINA TYPE TYP_EINA.
* ADD 2004/02/12 Y.Tsukahara END
* ADD 2004/03/29 Y.Tsukahara START
DATA: WA_MENGE TYPE EKPO-MENGE.  "変換後数量退避用
* ADD 2004/03/29 Y.Tsukahara END

*---APPEND START DMC A.MASUDA 2004/09/29 ----------------------------*
*--- 出庫済み数量換算用
DATA:
GW_KALAB  LIKE LIPS-LFIMG.
*---APPEND END   DMC A.MASUDA 2004/09/29 ----------------------------*

RANGES:R_VKBUR FOR VBAK-VKBUR.

**** START ADD 2014/09/02 ISID19 ****
DATA: G_WAERS TYPE T001-WAERS. "通貨コード
**** END ADD 2014/09/02 ISID19 ****

*---------------------------------------------------------------------
* 定数宣言
*---------------------------------------------------------------------
CONSTANTS: CNS_VBAK(4)    TYPE C VALUE 'VBAK',
CNS_VBPA(4)    TYPE C VALUE 'VBPA',
CNS_VBEP(4)    TYPE C VALUE 'VBEP',
CNS_VBBP(4)    TYPE C VALUE 'VBBP',
CNS_EKPO(4)    TYPE C VALUE 'EKPO',
CNS_VBAP(4)    TYPE C VALUE 'VBAP',
CNS_MARD(4)    TYPE C VALUE 'MARD',
CNS_VBFA(4)    TYPE C VALUE 'VBFA',
CNS_TVSTT(5)   TYPE C VALUE 'TVSTT',
CNS_LFA1(4)    TYPE C VALUE 'LFA1',
CNS_A(1)       TYPE C VALUE 'A',
CNS_H(1)       TYPE C VALUE 'H',
CNS_I(1)       TYPE C VALUE 'I',
CNS_K(1)       TYPE C VALUE 'K',
CNS_L(1)       TYPE C VALUE 'L',
CNS_C(1)       TYPE C VALUE 'C',
CNS_J(1)       TYPE C VALUE 'J',
CNS_X(1)       TYPE C VALUE 'X',
CNS_N(1)       TYPE C VALUE 'N',
CNS_O(1)       TYPE C VALUE 'O',
CNS_AG(2)      TYPE C VALUE 'AG',
CNS_KA(2)      TYPE C VALUE 'KA',
CNS_KB(2)      TYPE C VALUE 'KB',
CNS_KR(2)      TYPE C VALUE 'KR',
CNS_SP(2)      TYPE C VALUE 'SP',
CNS_PE(2)      TYPE C VALUE 'PE',
CNS_VE(2)      TYPE C VALUE 'VE',
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
CNS_WE(2)      TYPE C VALUE 'WE',
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*
CNS_ZERO(1)    TYPE C VALUE '0',
CNS_ZSEO(4)    TYPE C VALUE 'ZSEO',
CNS_ZSEK(4)    TYPE C VALUE 'ZSEK',
CNS_ONLI(4)    TYPE C VALUE 'ONLI',
CNS_0001(4)    TYPE C VALUE '0001',
CNS_*(1)       TYPE C VALUE '*'
.
*---APPEND START PSD T.SAITOH 2002/03/20 仕様変更：機能追加----------*
CONSTANTS: CNS_ZTAN(4)    TYPE C VALUE 'ZTAN',
CNS_TAN(3)     TYPE C VALUE 'TAN',
CNS_ZTMP(4)    TYPE C VALUE 'ZTMP'.
*---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*
* ADD 2004/01/07 Y.Tsukahara START
CONSTANTS: CNS_TAB(3)     TYPE C VALUE 'TAB',
CNS_ZTAB(4)    TYPE C VALUE 'ZTAB',
CNS_ZTMB(4)    TYPE C VALUE 'ZTMB',
CNS_JPY(3)     TYPE C VALUE 'JPY'.  "通貨単位（日本円）
* ADD 2004/01/07 Y.Tsukahara END
*---ADD BY DMC 2008/05/07 BEGIN
CONSTANTS: CNS_HANBAYI TYPE CHAR3 VALUE 'HAN',  "販売
CNS_KOUBAYI TYPE CHAR3 VALUE 'KOU',  "購買
CNS_ZAYIKO  TYPE CHAR3 VALUE 'ZAI'.  "在庫
*---ADD BY DMC 2008/05/07 END
*2013/11/11 Add Start
* 変更履歴.変更項目
CONSTANTS:CNS_VERK  TYPE CDHDR-OBJECTCLAS VALUE 'VERKBELEG',
CNS_EINK  TYPE CDHDR-OBJECTCLAS VALUE 'EINKBELEG',
CNS_VBKD  TYPE CDPOS-TABNAME    VALUE 'VBKD',
CNS_EKPA  TYPE CDPOS-TABNAME    VALUE 'EKPA',
CNS_EKET  TYPE CDPOS-TABNAME    VALUE 'EKET',
CNS_NETPR TYPE CDPOS-FNAME      VALUE 'NETPR',
CNS_WMENG TYPE CDPOS-FNAME      VALUE 'WMENG',
CNS_VDATU TYPE CDPOS-FNAME      VALUE 'VDATU',
CNS_PSTYV TYPE CDPOS-FNAME      VALUE 'PSTYV',
CNS_ZTERM TYPE CDPOS-FNAME      VALUE 'ZTERM',
CNS_MENGE TYPE CDPOS-FNAME      VALUE 'MENGE',
CNS_AEDAT TYPE CDPOS-FNAME      VALUE 'AEDAT',
CNS_SLFDT TYPE CDPOS-FNAME      VALUE 'SLFDT',
CNS_MWSKZ TYPE CDPOS-FNAME      VALUE 'MWSKZ',
CNS_LIFN2 TYPE CDPOS-FNAME      VALUE 'LIFN2',
*2014/02/03 Add Start 拒否理由、削除フラグ
CNS_ABGRU TYPE CDPOS-FNAME      VALUE 'ABGRU',
CNS_LOEKZ TYPE CDPOS-FNAME      VALUE 'LOEKZ',
*2014/02/03 Add End
* 購買発注.取引先
CNS_BA    TYPE EKPA-PARVW       VALUE 'BA',
CNS_LF    TYPE EKPA-PARVW       VALUE 'LF',
CNS_RS    TYPE EKPA-PARVW       VALUE 'RS',
CNS_Y1    TYPE EKPA-PARVW       VALUE 'Y1'.
*2013/11/11 Add End

*---------------------------------------------------------------------
* 選択画面定義
*---------------------------------------------------------------------

*---APPEND START PSD T.SAITOH 2002/06/21 ---------------------------*
SELECTION-SCREEN BEGIN OF BLOCK UNION
WITH FRAME TITLE TEXT-100.
**** START ADD 2014/09/02 ISID19 ****
PARAMETERS:PR_BUKRS TYPE T001-BUKRS OBLIGATORY."会社コード
**** END ADD 2014/09/02 ISID19 ****
PARAMETERS:PR_VKORG TYPE VBAK-VKORG MEMORY ID VKO,"販売組織
PR_VTWEG TYPE VBAK-VTWEG MEMORY ID VTW,"流通CH
PR_SPART TYPE VBAK-SPART MEMORY ID SPA."製品部門
SELECTION-SCREEN END   OF BLOCK UNION.
*---APPEND END   PSD T.SAITOH 2002/06/21 ---------------------------*

*--- 帳票選択
SELECTION-SCREEN BEGIN OF BLOCK KIGEN
WITH FRAME TITLE TEXT-006.
*--- 当日受発注一覧表
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: R_TODAY  RADIOBUTTON GROUP RB1.
SELECTION-SCREEN COMMENT 3(18) TEXT-008 FOR FIELD R_TODAY.
*SELECTION-SCREEN COMMENT 22(15) TEXT-051.
*SELECTION-SCREEN COMMENT 40(15) TEXT-052.
SELECTION-SCREEN COMMENT 26(15) TEXT-051.
SELECTION-SCREEN COMMENT 41(15) TEXT-052.
SELECTION-SCREEN END   OF LINE.
*--- 内示一覧表
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: R_NAIJI  RADIOBUTTON GROUP RB1.
SELECTION-SCREEN COMMENT 3(18) TEXT-009 FOR FIELD R_NAIJI.
*SELECTION-SCREEN COMMENT 22(15) TEXT-053.
*SELECTION-SCREEN COMMENT 40(15) TEXT-054.
SELECTION-SCREEN COMMENT 26(15) TEXT-053.
SELECTION-SCREEN COMMENT 41(15) TEXT-054.
SELECTION-SCREEN END   OF LINE.
*--- 未引当一覧表
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: R_MIHIKI RADIOBUTTON GROUP RB1.
SELECTION-SCREEN COMMENT 3(18) TEXT-010 FOR FIELD R_MIHIKI.
*SELECTION-SCREEN COMMENT 22(15) TEXT-055.
*SELECTION-SCREEN COMMENT 40(15) TEXT-054.
SELECTION-SCREEN COMMENT 26(15) TEXT-055.
SELECTION-SCREEN COMMENT 41(15) TEXT-054.
SELECTION-SCREEN END   OF LINE.
*--- 出荷ブロックリスト
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: R_BLOCK  RADIOBUTTON GROUP RB1.
SELECTION-SCREEN COMMENT 3(18) TEXT-011 FOR FIELD R_BLOCK.
*SELECTION-SCREEN COMMENT 22(15) TEXT-056.
SELECTION-SCREEN COMMENT 26(15) TEXT-056.
* 2002/01/21 PSD H.Tanaka MOD ↓
*SELECTION-SCREEN COMMENT 40(15) TEXT-057.
SELECTION-SCREEN COMMENT 41(15) TEXT-059.
SELECTION-SCREEN END   OF LINE.
*--- 出荷可能リスト
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: R_KANO   RADIOBUTTON GROUP RB1.
SELECTION-SCREEN COMMENT 3(18) TEXT-012 FOR FIELD R_KANO.
*SELECTION-SCREEN COMMENT 22(15) TEXT-058.
*SELECTION-SCREEN COMMENT 40(15) TEXT-059.
SELECTION-SCREEN COMMENT 26(15) TEXT-058.
SELECTION-SCREEN COMMENT 41(15) TEXT-059.
SELECTION-SCREEN END   OF LINE.
* 2002/02/05 PSD H.Tanaka ADD ↓
*SELECTION-SCREEN END   OF BLOCK KIGEN.
*--- ＥＤＩ重複データ一覧表
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: R_TYOFK   RADIOBUTTON GROUP RB1.
SELECTION-SCREEN COMMENT 3(20) TEXT-068 FOR FIELD R_TYOFK.
SELECTION-SCREEN COMMENT 26(15) TEXT-072.
SELECTION-SCREEN COMMENT 41(15) TEXT-059.
SELECTION-SCREEN END   OF LINE.
SELECTION-SCREEN END   OF BLOCK KIGEN.
* 2002/02/05 PSD H.Tanaka ADD ↑

*--- 条件指定
SELECTION-SCREEN BEGIN OF BLOCK JOKEN WITH FRAME TITLE TEXT-007.
*--- 抽出年月日
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  TEXT-043.
SELECTION-SCREEN COMMENT 7(21) TEXT-021.
SELECT-OPTIONS: PR_DATE  FOR GF_INFO-AUDAT.
SELECTION-SCREEN END   OF LINE.
*--- 抽出年月
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  TEXT-044.
SELECTION-SCREEN COMMENT 7(21) TEXT-022.
SELECT-OPTIONS: PR_YYMM    FOR G_SPMON.
SELECTION-SCREEN END   OF LINE.
*--- 営業所コード
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  TEXT-045.
SELECTION-SCREEN COMMENT 7(21) TEXT-023.
SELECT-OPTIONS: PR_VKBUR   FOR GF_INFO-VKBUR.
SELECTION-SCREEN END   OF LINE.
*--- 出荷ポイント
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  TEXT-046.
SELECTION-SCREEN COMMENT 7(21) TEXT-062.
SELECT-OPTIONS: PR_WERKS   FOR GF_VBAP-WERKS.
SELECTION-SCREEN END   OF LINE.

*--- 営業グループ
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  TEXT-047.
PARAMETERS: R_VKGRP RADIOBUTTON GROUP RB2.
SELECTION-SCREEN COMMENT 7(21) TEXT-063 FOR FIELD R_VKGRP.
SELECT-OPTIONS: PR_VKGRP   FOR GF_INFO-VKGRP.
SELECTION-SCREEN END   OF LINE.
*--- 営業員コード
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  TEXT-048.
PARAMETERS: R_PERNR RADIOBUTTON GROUP RB2.
SELECTION-SCREEN COMMENT 7(21) TEXT-064 FOR FIELD R_PERNR.
SELECT-OPTIONS: PR_PERNR   FOR GF_VBPA-PERNR.
SELECTION-SCREEN END   OF LINE.

*--- 出荷ブロック
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  TEXT-049.
SELECTION-SCREEN COMMENT 7(21) TEXT-019.
SELECT-OPTIONS: PR_LIFSP   FOR GF_VBEP-LIFSP.
SELECTION-SCREEN END   OF LINE.
*--- 得意先コード
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  TEXT-050.
SELECTION-SCREEN COMMENT 7(21) TEXT-025.
SELECT-OPTIONS: PR_KUNNR FOR GF_INFO-KUNNR.
SELECTION-SCREEN END   OF LINE.
* 2002/02/05 PSD H.Tanaka ADD ↓
*--- 拒否理由
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  TEXT-069.
SELECTION-SCREEN COMMENT 7(21) TEXT-070.
SELECT-OPTIONS: PR_ABGRU FOR G_ABGRU DEFAULT 'ZZ'.
SELECTION-SCREEN END   OF LINE.
* 2002/02/05 PSD H.Tanaka ADD ↑
*2011/05/23 Add Start
*--- 購買グループ
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(2)  TEXT-075.
SELECTION-SCREEN COMMENT 7(21) TEXT-076.
SELECT-OPTIONS: S_EKGRP FOR GF_EKPO1-EKGRP.
SELECTION-SCREEN END   OF LINE.
*2011/05/23 Add End
SELECTION-SCREEN END   OF BLOCK JOKEN.

*2014/02/17 Add Start 伝票日付項目追加
*--- 日次帳票出力用オプション
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF BLOCK BK1 WITH FRAME
TITLE TEXT-101.
PARAMETERS       PR_AUDAT TYPE VBAK-AUDAT.  "伝票日付(ALVヘッダ項目)
SELECTION-SCREEN END   OF BLOCK BK1.
*2014/02/17 Add End

**** START ADD 2014/09/02 ISID19 ****
************************************************************************
* INITIALIZATION
************************************************************************
INITIALIZATION .
GET PARAMETER ID 'BUK' FIELD PR_BUKRS.
**** END ADD 2014/09/02 ISID19 ****

*---------------------------------------------------------------------
* AT SELECTION-SCREEN
*---------------------------------------------------------------------
AT SELECTION-SCREEN.

**** START ADD 2014/09/02 ISID19 ****
* 会社コードと販売組織チェック処理
PERFORM FEM_CHECK_BUKRS.
**** END ADD 2014/09/02 ISID19 ****

*--- 入力チェック処理
IF R_TODAY      = CNS_X.  " 当日受発注一覧表
PERFORM FRM_CHECK_TODAY.
ELSEIF R_NAIJI  = CNS_X.  " 内示一覧表
PERFORM FRM_CHECK_NAIJI.
ELSEIF R_MIHIKI = CNS_X.  " 未引当一覧表
PERFORM FRM_CHECK_MIHIKI.
ELSEIF R_BLOCK  = CNS_X.  " 出荷ブロックリスト
PERFORM FRM_CHECK_BLOCK.
ELSEIF R_KANO   = CNS_X.  " 出荷可能リスト
PERFORM FRM_CHECK_KANO.
* 2002/02/05 PSD H.Tanaka ADD ↓
ELSEIF R_TYOFK  = CNS_X.  " ＥＤＩ重複データ一覧表
PERFORM FRM_CHECK_TYOFK.
* 2002/02/05 PSD H.Tanaka ADD ↑
ENDIF.

*---------------------------------------------------------------------
* START-OF-SELECTION
*---------------------------------------------------------------------
START-OF-SELECTION.
*--- 初期処理
PERFORM FRM_INIT.

*--- 帳票出力用内部テーブル設定処理
PERFORM FRM_MAKE_DATA.

*--- 帳票出力処理
PERFORM FRM_WRITE_DATA.

************************************************************************
* TOP-OF-PAGE
***********************************************************************
FORM FRM_TOP_OF_PAGE.

*--- ヘッダー出力処理

* 営業所名
PERFORM FRM_SELECT_TVKBT USING GT_ALV-BEZEIA.
* 営業グループ
PERFORM FRM_SELECT_TVGRT USING GT_ALV-BEZEIB.

*--- 当日受発注一覧表
IF R_TODAY = CNS_X.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WRITE:  42      TEXT-001,
*            /1      TEXT-013,GF_WRITE-AUDAT DD/MM/YY,          " 日付
*                    TEXT-014,GF_WRITE-VKBUR,TEXT-015,GF_WRITE-BEZEIA,
*                    TEXT-017,GF_WRITE-VKGRP,TEXT-015,GF_WRITE-BEZEIB.
WRITE:  42      TEXT-001,
/1      TEXT-013,GT_ALV-AUDAT DD/MM/YY,          " 日付
TEXT-014,GT_ALV-VKBUR,TEXT-015,GT_ALV-BEZEIA,
TEXT-017,GT_ALV-VKGRP,TEXT-015,GT_ALV-BEZEIB,
**** START ADD 2015/01/22 ISID11 ****
TEXT-102,G_WAERS.
**** END ADD 2015/01/22 ISID11 ****

* 2002/01/10 PSD H.Tanaka MOD ↑
*--- 内示一覧表
ELSEIF R_NAIJI  = CNS_X.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WRITE:  42      TEXT-002,
*            /1      TEXT-014,GF_WRITE-VKBUR,TEXT-015,GF_WRITE-BEZEIA,
*                    TEXT-017,GF_WRITE-VKGRP,TEXT-015,GF_WRITE-BEZEIB.
WRITE:  42      TEXT-002,
/1      TEXT-014,GT_ALV-VKBUR,TEXT-015,GT_ALV-BEZEIA,
TEXT-017,GT_ALV-VKGRP,TEXT-015,GT_ALV-BEZEIB,
**** START ADD 2015/01/22 ISID11 ****
TEXT-102,G_WAERS.
**** END ADD 2015/01/22 ISID11 ****
* 2002/01/10 PSD H.Tanaka MOD ↑
*--- 未引当一覧表
ELSEIF R_MIHIKI = CNS_X.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WRITE:  42      TEXT-003,
*            /1      TEXT-014,GF_WRITE-VKBUR,TEXT-015,GF_WRITE-BEZEIA,
*                    TEXT-017,GF_WRITE-VKGRP,TEXT-015,GF_WRITE-BEZEIB.
WRITE:  42      TEXT-003,
/1      TEXT-014,GT_ALV-VKBUR,TEXT-015,GT_ALV-BEZEIA,
TEXT-017,GT_ALV-VKGRP,TEXT-015,GT_ALV-BEZEIB.
* 2002/01/10 PSD H.Tanaka MOD ↑
*--- 出荷ブロックリスト
ELSEIF R_BLOCK  = CNS_X.
IF R_VKGRP = CNS_X.       " 営業所コードボタン押下時
* 2002/01/10 PSD H.Tanaka MOD ↓
*      WRITE:  42      TEXT-004,
*              /1      TEXT-018,GF_WRITE-VSTEL,TEXT-015,GF_WRITE-VTEXT,
*                      TEXT-017,GF_WRITE-VKGRP,TEXT-015,GF_WRITE-BEZEIB.
WRITE:  42      TEXT-004,
/1      TEXT-018,GT_ALV-VSTEL,TEXT-015,GT_ALV-VTEXT,
TEXT-017,GT_ALV-VKGRP,TEXT-015,GT_ALV-BEZEIB.
* 2002/01/10 PSD H.Tanaka MOD ↑
ELSEIF R_PERNR = CNS_X.   " 営業員ボタン押下時
* 2002/01/10 PSD H.Tanaka MOD ↓
*      WRITE:  42      TEXT-004,
*              /1      TEXT-018,GF_WRITE-VSTEL,TEXT-015,GF_WRITE-VTEXT,
*                      TEXT-020,GF_WRITE-PERNR,TEXT-015,GF_WRITE-NACHN.
WRITE:  42      TEXT-004,
/1      TEXT-018,GT_ALV-VSTEL,TEXT-015,GT_ALV-VTEXT,
TEXT-020,GT_ALV-PERNR,TEXT-015,GT_ALV-NACHN.
* 2002/01/10 PSD H.Tanaka MOD ↑
ENDIF.
*--- 出荷可能リスト
ELSEIF R_KANO   = CNS_X.
IF R_VKGRP = CNS_X.       " 営業所コードボタン押下時
* 2002/01/10 PSD H.Tanaka MOD ↓
*      WRITE:  42      TEXT-005,
*              /1      TEXT-018,GF_WRITE-VSTEL,TEXT-015,GF_WRITE-VTEXT,
*                      TEXT-017,GF_WRITE-VKGRP,TEXT-015,GF_WRITE-BEZEIB,
*                      TEXT-060,G_FDAT,        TEXT-061,G_TDAT.
WRITE:  42      TEXT-005,
/1      TEXT-018,GT_ALV-VSTEL,TEXT-015,GT_ALV-VTEXT,
TEXT-017,GT_ALV-VKGRP,TEXT-015,GT_ALV-BEZEIB,
TEXT-060,G_FDAT,        TEXT-061,G_TDAT.
* 2002/01/10 PSD H.Tanaka MOD ↑
ELSEIF R_PERNR = CNS_X.   " 営業員ボタン押下時
* 2002/01/10 PSD H.Tanaka MOD ↓
*      WRITE:  42      TEXT-005,
*              /1      TEXT-018,GF_WRITE-VSTEL,TEXT-015,GF_WRITE-VTEXT,
*                      TEXT-020,GF_WRITE-PERNR,TEXT-015,GF_WRITE-NACHN,
*                      TEXT-060,G_FDAT,        TEXT-061,G_TDAT.
WRITE:  42      TEXT-005,
/1      TEXT-018,GT_ALV-VSTEL,TEXT-015,GT_ALV-VTEXT,
TEXT-020,GT_ALV-PERNR,TEXT-015,GT_ALV-NACHN,
TEXT-060,G_FDAT,        TEXT-061,G_TDAT.
* 2002/01/10 PSD H.Tanaka MOD ↑
ENDIF.
* 2002/02/05 PSD H.Tanaka ADD ↓
*--- ＥＤＩ重複データ一覧表
ELSEIF R_TYOFK = CNS_X.
*---MODIFY START PSD T.SAITOH 2002/06/12 ---------------------------*
*    IF G_DATA+4(1) = 0.
IF GT_ALV-AUDAT+4(1) = 0.
*      WRITE:  25      G_DATA+5(1),TEXT-073.
WRITE:  25      GT_ALV-AUDAT+5(1),TEXT-073.
ELSE.
*      WRITE:  25      G_DATA+4(2),TEXT-073.
WRITE:  25      GT_ALV-AUDAT+4(2),TEXT-073.
ENDIF.
*    IF G_DATA+6(1) = 0.
IF GT_ALV-AUDAT+6(1) = 0.
*      WRITE:  31      G_DATA+7(1),TEXT-074.
WRITE:  31      GT_ALV-AUDAT+7(1),TEXT-074.
ELSE.
*      WRITE:  31      G_DATA+6(2),TEXT-074.
WRITE:  31      GT_ALV-AUDAT+6(2),TEXT-074.
ENDIF.
*---MODIFY END   PSD T.SAITOH 2002/06/12 ---------------------------*
WRITE:  42      TEXT-071.
IF R_VKGRP = CNS_X.       " 営業所コードボタン押下時
WRITE:  /1      TEXT-014,GT_ALV-VKBUR,TEXT-015,GT_ALV-BEZEIA,
TEXT-017,GT_ALV-VKGRP,TEXT-015,GT_ALV-BEZEIB.
ELSEIF R_PERNR = CNS_X.   " 営業員ボタン押下時
WRITE:  /1      TEXT-014,GT_ALV-VKBUR,TEXT-015,GT_ALV-BEZEIA,
TEXT-020,GT_ALV-PERNR,TEXT-015,GT_ALV-NACHN.
ENDIF.
* 2002/02/05 PSD H.Tanaka ADD ↑
ENDIF.

*---APPEND START PSD T.SAITOH 2002/08/08 ---------------------------*
*   ページ番号付加
WRITE: 145 'PAGE:',SY-PAGNO. "<<< 2002/08/15 修正
*---APPEND END   PSD T.SAITOH 2002/08/08 ---------------------------*

ENDFORM.                    "frm_top_of_page
************************************************************************
* ALV CALLER_EXIT（ 2002/01/10 PSD H.Tanaka ADD ）
***********************************************************************
FORM FRM_CALLER_EXIT USING RS_DATA TYPE SLIS_DATA_CALLER_EXIT.
RS_DATA-CALLBACK_HEADER_TRANSPORT = 'FILITEXTS_TEXT_TRANSPORT'.
ENDFORM.                    "frm_caller_exit
************************************************************************
* Form
***********************************************************************
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_TODAY
*&---------------------------------------------------------------------*
*       入力チェック処理（当日受発注一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_CHECK_TODAY.
*---入力パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓  2002.05.02 APPEND PSD K.Arai
IF SY-UCOMM+0(1) = '%'.
EXIT.
ENDIF.
*--- ↑

IF NOT ( PR_YYMM IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_YYMM,PR_WERKS,PR_PERNR,PR_LIFSP.
REFRESH: PR_YYMM,PR_WERKS,PR_PERNR,PR_LIFSP.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-008 TEXT-022.
ELSEIF NOT ( PR_WERKS IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_WERKS,PR_PERNR,PR_LIFSP.
REFRESH: PR_WERKS,PR_PERNR,PR_LIFSP.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-008 TEXT-062.
ELSEIF NOT ( PR_PERNR IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_PERNR,PR_LIFSP.
REFRESH: PR_PERNR,PR_LIFSP.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-008 TEXT-064.
ELSEIF NOT ( PR_LIFSP IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_LIFSP.
REFRESH: PR_LIFSP.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-008 TEXT-019.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
** 2002/02/06 PSD H.Tanaka MOD ↓
**  IF SY-UCOMM = CNS_ONLI.
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
** 2002/02/06 PSD H.Tanaka MOD ↑
*--- ↑
IF PR_DATE IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-021.
ELSEIF PR_VKBUR IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-023.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
* ENDIF.
*--- ↑
ENDFORM.                   " FRM_CHECK_TODAY
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_NAIJI
*&---------------------------------------------------------------------*
*       入力チェック処理（内示一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_CHECK_NAIJI.
*---入力必須パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓  2002.05.02 APPEND PSD K.Arai
IF SY-UCOMM+0(1) = '%'.
EXIT.
ENDIF.
*--- ↑
IF NOT ( PR_DATE IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_DATE,PR_WERKS,PR_PERNR,PR_LIFSP,PR_KUNNR.
REFRESH: PR_DATE,PR_WERKS,PR_PERNR,PR_LIFSP,PR_KUNNR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-009 TEXT-021.
ELSEIF NOT ( PR_WERKS IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_WERKS,PR_PERNR,PR_LIFSP,PR_KUNNR.
REFRESH: PR_WERKS,PR_PERNR,PR_LIFSP,PR_KUNNR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-009 TEXT-062.
ELSEIF NOT ( PR_PERNR IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_PERNR,PR_LIFSP,PR_KUNNR.
REFRESH: PR_PERNR,PR_LIFSP,PR_KUNNR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-009 TEXT-064.
ELSEIF NOT ( PR_LIFSP IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_LIFSP,PR_KUNNR.
REFRESH: PR_LIFSP,PR_KUNNR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-009 TEXT-019.
ELSEIF NOT ( PR_KUNNR IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_KUNNR.
REFRESH: PR_KUNNR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-009 TEXT-025.
ENDIF.

*--- ↓  2002.05.02 DELETE PSD K.Arai
** 2002/02/06 PSD H.Tanaka ADD ↓
**  IF SY-UCOMM = CNS_ONLI.
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
** 2002/02/06 PSD H.Tanaka ADD ↑
*--- ↑
IF PR_YYMM IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-022.
ELSEIF PR_VKBUR IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-023.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
*  ENDIF.
*--- ↑
ENDFORM.                   " FRM_CHECK_NAIJI
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_MIHIKI
*&---------------------------------------------------------------------*
*       入力チェック処理（未引当一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_CHECK_MIHIKI.
*---入力必須パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓  2002.05.02 APPEND PSD K.Arai
IF SY-UCOMM+0(1) = '%' .
EXIT.
ENDIF.
*--- ↑
IF NOT ( PR_DATE IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_DATE,PR_YYMM,PR_WERKS,PR_PERNR,PR_LIFSP,PR_KUNNR.
REFRESH: PR_DATE,PR_YYMM,PR_WERKS,PR_PERNR,PR_LIFSP,PR_KUNNR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-010 TEXT-021.
ELSEIF NOT ( PR_YYMM  IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_YYMM,PR_WERKS,PR_PERNR,PR_LIFSP,PR_KUNNR.
REFRESH: PR_YYMM,PR_WERKS,PR_PERNR,PR_LIFSP,PR_KUNNR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-010 TEXT-022.
ELSEIF NOT ( PR_WERKS IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_WERKS,PR_PERNR,PR_LIFSP,PR_KUNNR.
REFRESH: PR_WERKS,PR_PERNR,PR_LIFSP,PR_KUNNR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-010 TEXT-062.
ELSEIF NOT ( PR_PERNR IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_PERNR,PR_LIFSP,PR_KUNNR.
REFRESH: PR_PERNR,PR_LIFSP,PR_KUNNR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-010 TEXT-064.
ELSEIF NOT ( PR_LIFSP IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_LIFSP,PR_KUNNR.
REFRESH: PR_LIFSP,PR_KUNNR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-010 TEXT-019.
ELSEIF NOT ( PR_KUNNR IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_KUNNR.
REFRESH: PR_KUNNR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-010 TEXT-025.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
** 2002/02/06 PSD H.Tanaka ADD ↓
**  IF SY-UCOMM = CNS_ONLI.
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
** 2002/02/06 PSD H.Tanaka ADD ↑
*--- ↑
IF PR_VKBUR IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-023.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
*  ENDIF.
*--- ↑
ENDFORM.                   " FRM_CHECK_MIHIKI
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_BLOCK
*&---------------------------------------------------------------------*
*       入力チェック処理（出荷ブロックリスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_CHECK_BLOCK.
*---入力必須パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓  2002.05.02 APPEND PSD K.Arai
IF SY-UCOMM+0(1) = '%'.
EXIT.
ENDIF.
*--- ↑

IF NOT ( PR_DATE IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_DATE,PR_YYMM,PR_VKBUR.
REFRESH: PR_DATE,PR_YYMM,PR_VKBUR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-011 TEXT-021.
ELSEIF NOT ( PR_YYMM  IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_YYMM,PR_VKBUR.
REFRESH: PR_YYMM,PR_VKBUR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-011 TEXT-022.
ELSEIF NOT ( PR_VKBUR IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_VKBUR.
REFRESH: PR_VKBUR.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-011 TEXT-023.
ENDIF.

*--- ↓  2002.05.02 DELETE PSD K.Arai
** 2002/02/06 PSD H.Tanaka ADD ↓
**  IF SY-UCOMM = CNS_ONLI.
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
** 2002/02/06 PSD H.Tanaka ADD ↑
*--- ↑
IF PR_WERKS IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-062.
ELSEIF PR_LIFSP IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-019.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
*  ENDIF.
*--- ↑
ENDFORM.                   " FRM_CHECK_BLOCK
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_KANO
*&---------------------------------------------------------------------*
*       入力チェック処理（出荷可能リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_CHECK_KANO.
*---入力必須パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓ 2002.05.02 APPEND PSD K.Arai
IF SY-UCOMM+0(1) = '%'.
EXIT.
ENDIF.
*--- ↑

IF NOT ( PR_YYMM  IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_YYMM,PR_VKBUR,PR_LIFSP.
REFRESH: PR_YYMM,PR_VKBUR,PR_LIFSP.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-012 TEXT-022.
ELSEIF NOT ( PR_VKBUR IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_VKBUR,PR_LIFSP.
REFRESH: PR_VKBUR,PR_LIFSP.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-012 TEXT-023.
ELSEIF NOT ( PR_LIFSP IS INITIAL ).
* 2002/02/06 PSD H.Tanaka ADD ↓
CLEAR: PR_LIFSP.
REFRESH: PR_LIFSP.
* 2002/02/06 PSD H.Tanaka ADD ↑
MESSAGE E601(Z1) WITH TEXT-012 TEXT-019.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
** 2002/02/06 PSD H.Tanaka ADD ↓
**  IF SY-UCOMM = CNS_ONLI.
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
** 2002/02/06 PSD H.Tanaka ADD ↑
*--- ↑

IF PR_DATE IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-021.
ELSEIF PR_WERKS IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-062.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
*  ENDIF.
*--- ↑

ENDFORM.                   " FRM_CHECK_KANO
*&---------------------------------------------------------------------*
*&      Form  FRM_INIT
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_INIT.

G_REPID = SY-REPID.   " プログラムＩＤ取得
G_DATA  = SY-DATUM.   " システム日付取得

ENDFORM.                    " FRM_INIT
*&---------------------------------------------------------------------
*&      Form  FRM_MAKE_DATA
*&---------------------------------------------------------------------
*       帳票出力用内部テーブル設定処理
*----------------------------------------------------------------------
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------
FORM FRM_MAKE_DATA.
*--- 表示帳票判別処理
IF R_TODAY = CNS_X.      " 当日受発注一覧表
PERFORM FRM_DATA_TODAY.
ELSEIF R_NAIJI = CNS_X.  " 内示一覧表
PERFORM FRM_DATA_NAIJI.
ELSEIF R_MIHIKI = CNS_X. " 未引当一覧表
PERFORM FRM_DATA_MIHIKI.
ELSEIF R_BLOCK = CNS_X.  " 出荷ブロックリスト
PERFORM FRM_DATA_BLOCK.
ELSEIF R_KANO = CNS_X.   " 出荷可能リスト
PERFORM FRM_DATA_KANO.
* 2002/02/05 PSD H.Tanaka ADD ↓
ELSEIF R_TYOFK = CNS_X.  " ＥＤＩ重複データ一覧表
PERFORM FRM_DATA_TYOFK.
* 2002/02/05 PSD H.Tanaka ADD ↑
ENDIF.

ENDFORM.                    " FRM_MAKE_DATA
*&---------------------------------------------------------------------
*&      Form  FRM_DATA_SET
*&---------------------------------------------------------------------
*       共通項目設定処理
*----------------------------------------------------------------------
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------
FORM FRM_DATA_SET.
CLEAR: GF_WRITE,        " 帳票出力用構造クリア
G_FLG_EXIT.      " ＬＯＯＰ終了フラグクリア
*---APPEND START PSD T.SAITOH 2002/08/06 ---------------------------*
* 発注伝票初期化位置修正
CLEAR: GF_EKPO.
*---APPEND END   PSD T.SAITOH 2002/08/06 ---------------------------*

**** START ADD 2015/01/05 ISID11 ****
WRITE '0' TO GF_WRITE-VNETPR RIGHT-JUSTIFIED.  "受注単価_小数点6桁
WRITE '0' TO GF_WRITE-ENETPR RIGHT-JUSTIFIED.  "発注単価_小数点6桁
WRITE '0' TO GF_WRITE-GYEN1 RIGHT-JUSTIFIED.   "原価 ローカル
WRITE '0' TO GF_WRITE-WAVWR RIGHT-JUSTIFIED.   "原価.
WRITE '0' TO GF_WRITE-HCTNK RIGHT-JUSTIFIED.   "発注単価 ローカル
WRITE '0' TO GF_WRITE-JTNKYEN RIGHT-JUSTIFIED. "受注単価 ローカル
WRITE '0' TO GF_WRITE-KBETR1 RIGHT-JUSTIFIED.  "販売価格
WRITE '0' TO GF_WRITE-KBETR2 RIGHT-JUSTIFIED.  "購買価格
**** END ADD 2015/01/05 ISID11 ****

*--- 共通項目設定
MOVE-CORRESPONDING GF_INFO TO GF_WRITE.

*2014/02/17 Add Start 伝票日付
*選択画面の伝票日付が設定されている場合は、
*受注伝票の伝票日付ではなく、選択画面の伝票日付で上書きする。
IF PR_AUDAT IS NOT INITIAL.
GF_WRITE-AUDAT = PR_AUDAT.
ENDIF.
*2014/02/17 Add End

ENDFORM.                    " FRM_DATA_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_TODAY
*&---------------------------------------------------------------------*
*       テーブル読込条件①
*       販売伝票情報取得処理（当日受発注一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_INFO_TODAY.
CLEAR   GF_INFO.
REFRESH GT_INFO.

*2013/11/11 Add Start
TYPES:
BEGIN OF TYP_EKKN,
VBELN TYPE EKKN-VBELN,           "販売管理伝票番号
VBELP TYPE EKKN-VBELP,           "販売伝票明細
EBELN TYPE EKKN-EBELN,           "購買伝票番号
END   OF TYP_EKKN.
DATA:
LT_EKKN  TYPE STANDARD TABLE OF TYP_EKKN,
LF_EKKN  TYPE TYP_EKKN,
LF_CDHDR TYPE TYP_CDHDR.

* 変更文書情報取得
PERFORM FRM_GET_CDHDR.
*2013/11/11 Add End

*--- 販売伝票情報取得
SELECT A~VBELN A~AUDAT A~AUART A~VKGRP A~VKBUR
A~VDATU A~BSTNK A~KUNNR A~VBTYP A~ERNAM
C~POSNR
* 2002/01/30 PSD H.Tanaka MOD ↓
*         D~BEZEI E~BEZEI F~BSTDK_E
D~BEZEI E~BEZEI F~BSTDK_E F~KURSK
*2013/11/11 Add Start
F~ZTERM                       "支払条件
*2013/11/11 Add End
INTO TABLE GT_INFO
FROM ( ( ( ( ( VBAK AS A INNER JOIN VBUK AS B
ON         A~VBELN  = B~VBELN ) INNER JOIN VBUP  AS C
ON         A~VBELN  = C~VBELN ) INNER JOIN TVKBT AS D
ON         A~VKBUR  = D~VKBUR ) INNER JOIN TVGRT AS E
ON         A~VKGRP  = E~VKGRP ) INNER JOIN VBKD  AS F
ON         C~VBELN  = F~VBELN ) INNER JOIN VBAP
*---APPEND MODIFY START PSD T.SAITOH 2002/08/21 --------------------*
*      ON         A~VBELN  = VBAP~VBELN
* 条件修正：明細レベル結合忘れ・・・【明細レベル結合を追加】
ON         C~VBELN  = VBAP~VBELN
AND         C~POSNR  = VBAP~POSNR
*---APPEND MODIFY END   PSD T.SAITOH 2002/08/21 --------------------*
WHERE A~AUDAT IN PR_DATE
* Add 2008.03.07 --->
*   WHERE ( A~AUDAT IN PR_DATE
*      or  A~AEDAT IN PR_DATE )
* Add 2008.03.07 <---
AND   A~VKBUR IN PR_VKBUR
AND   A~VKGRP IN PR_VKGRP
AND   A~KUNNR IN PR_KUNNR
AND ( A~VBTYP =  CNS_C
OR   A~VBTYP =  CNS_H
OR   A~VBTYP =  CNS_I
OR   A~VBTYP =  CNS_K
OR   A~VBTYP =  CNS_L )
*---MODIFY START PSD T.SAITOH 2002/08/16 ---------------------------*
*     AND   B~ABSTK <> CNS_C
AND   VBAP~ABGRU <> 'ZZ' "拒否理由
*---MODIFY END   PSD T.SAITOH 2002/08/16 ---------------------------*
**** START UPD 2014/09/02 ISID19 ****
*     AND   D~SPRAS =  CNS_J
*     AND   E~SPRAS =  CNS_J
AND   D~SPRAS =  SY-LANGU
AND   E~SPRAS =  SY-LANGU
**** START UPD 2014/09/02 ISID19 ****
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
AND         A~VKORG = PR_VKORG
AND         A~VTWEG = PR_VTWEG
AND         A~SPART = PR_SPART
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
AND   F~POSNR =  '000000'.

*2013/11/11 Add Start
* 変更履歴のある販売伝票[VBAK,VBAP,etc]取得
IF LINES( GT_VBELN ) > 0.
PERFORM FRM_GET_VBAK.

*   変更ユーザIDに変更履歴.販売伝票の最終日時責任者のユーザ名をセット
LOOP AT GT_VBAK INTO GF_INFO.
AT NEW VBELN.
CLEAR GF_CDHDR.
READ TABLE GT_CDHDV INTO GF_CDHDR
WITH KEY OBJECTCLAS = CNS_VERK
OBJECTID   = GF_INFO-VBELN.

*       販売伝票単位でセット
GF_INFO-UPNAM = GF_CDHDR-USERNAME."変更ユーザID
GF_INFO-UDATE = GF_CDHDR-UDATE.   "変更伝票の登録日付
GF_INFO-UTIME = GF_CDHDR-UTIME.   "変更時刻
MODIFY GT_VBAK FROM GF_INFO TRANSPORTING UPNAM UDATE UTIME
WHERE VBELN = GF_INFO-VBELN.
ENDAT.
ENDLOOP.

*   販売情報内部テーブルに追加
APPEND LINES OF GT_VBAK TO GT_INFO.
ENDIF.

* 変更履歴のある発注データに紐づく販売伝票[VBAK,VBAP,etc]取得
IF LINES( GT_EBELN ) > 0.
*   購買伝票勘定設定[EKKN]取得
SELECT VBELN VBELP EBELN
INTO TABLE LT_EKKN
FROM EKKN
FOR ALL ENTRIES IN GT_EBELN
WHERE EBELN = GT_EBELN-EBELN.     "変更履歴.購買伝票番号

*   発注データに紐づく販売伝票番号
SORT LT_EKKN BY VBELN VBELP EBELN.
CLEAR GT_VBELN.
GT_VBELN = LT_EKKN.
DELETE ADJACENT DUPLICATES FROM GT_VBELN.

*   変更履歴のある販売伝票[VBAK,VBAP,etc]取得
IF LINES( GT_VBELN ) > 0.
PERFORM FRM_GET_VBAK.

*     変更ユーザIDに変更履歴.発注伝票の最終日時責任者のユーザ名をセット
LOOP AT GT_VBAK INTO GF_INFO.
AT NEW VBELN.
CLEAR LF_CDHDR.
*         販売伝票に紐づく発注伝票内で最終日時を検索
LOOP AT LT_EKKN INTO LF_EKKN
WHERE VBELN = GF_INFO-VBELN.
CLEAR GF_CDHDR.
READ TABLE GT_CDHDE INTO GF_CDHDR
WITH KEY OBJECTCLAS = CNS_EINK
OBJECTID   = LF_EKKN-EBELN.
IF  LF_CDHDR-UDATE <= GF_CDHDR-UDATE
AND LF_CDHDR-UTIME <  GF_CDHDR-UTIME.
LF_CDHDR = GF_CDHDR.
ENDIF.
ENDLOOP.

*         変更履歴.購買伝票と変更履歴.販売伝票の最終日時を比較
CLEAR GF_CDHDR.
READ TABLE GT_CDHDV INTO GF_CDHDR
WITH KEY OBJECTCLAS = CNS_VERK
OBJECTID   = LF_EKKN-VBELN.
IF  LF_CDHDR-UDATE <= GF_CDHDR-UDATE
AND LF_CDHDR-UTIME <  GF_CDHDR-UTIME.
LF_CDHDR = GF_CDHDR.
ENDIF.

*         販売伝票単位でセット
GF_INFO-UPNAM = LF_CDHDR-USERNAME."変更ユーザID
GF_INFO-UDATE = LF_CDHDR-UDATE.   "変更伝票の登録日付
GF_INFO-UTIME = LF_CDHDR-UTIME.   "変更時刻
MODIFY GT_VBAK FROM GF_INFO TRANSPORTING UPNAM UDATE UTIME
WHERE VBELN = GF_INFO-VBELN.
ENDAT.

*       購買伝票番号を保持
CLEAR LF_EKKN.
READ TABLE LT_EKKN INTO LF_EKKN
WITH KEY VBELN = GF_INFO-VBELN
VBELP = GF_INFO-POSNR.
GF_INFO-EBELU = LF_EKKN-EBELN.   "購買伝票番号
MODIFY GT_VBAK FROM GF_INFO TRANSPORTING EBELU.
ENDLOOP.

*     販売情報内部テーブルに追加
APPEND LINES OF GT_VBAK TO GT_INFO.
ENDIF.
ENDIF.

* 販売情報内部テーブルをSORT
SORT GT_INFO BY VBELN POSNR
CHANG DESCENDING UDATE DESCENDING UTIME DESCENDING
EBELU DESCENDING.    "購買伝票紐づき優先

* 販売情報内部テーブルの重複行を削除
DELETE ADJACENT DUPLICATES FROM GT_INFO COMPARING VBELN POSNR.

* 変更伝票区分の設定
LOOP AT GT_INFO INTO GF_INFO.
AT NEW VBELN.
READ TABLE GT_INFO INTO GF_INFO INDEX SY-TABIX.
*     販売伝票の登録日(伝票日付) = 変更履歴の最終の変更日付の場合
IF GF_INFO-AUDAT = GF_INFO-UDATE.
*       変更伝票区分をクリア
CLEAR GF_INFO-CHANG.
MODIFY GT_INFO FROM GF_INFO TRANSPORTING CHANG
WHERE VBELN = GF_INFO-VBELN.
ENDIF.
ENDAT.
ENDLOOP.

* 販売情報内部テーブルの1行目を読込
READ TABLE GT_INFO INTO GF_INFO INDEX 1.
*2013/11/11 Add End

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
* ADD 2010/05/11 --->
PERFORM FRM_SET_KOBAI .
IF NOT GT_WRITE[] IS INITIAL .
*--- 帳票出力処理
PERFORM FRM_WRITE_DATA.
STOP .
ENDIF .
* ADD 2010/05/11 <---
MESSAGE S600(Z1) WITH TEXT-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAK
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_INFO_TODAY
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_TODAY
*&---------------------------------------------------------------------*
*       当日受発注一覧表用内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATA_TODAY.
*--- 販売伝票情報設定
PERFORM FRM_INFO_TODAY.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM GET_DATA.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT GT_INFO INTO GF_INFO.
*--- 共通項目設定
PERFORM FRM_DATA_SET.
*--- 販売伝票取引先情報取得
PERFORM FRM_VBPA_GET1.
*--- 得意先名設定
IF SY-SUBRC = 0.
PERFORM FRM_KUNNR_GET USING    GF_VBPA-ADRNR
CHANGING GF_WRITE-KUNNR
GF_WRITE-KNAME.
ENDIF.
*---MODIFY START PSD T.SAITOH 2002/08/16 ---------------------------*
*--- 販売明細情報取得
*    PERFORM FRM_VBAP_GET1.
PERFORM FRM_VBAP_GET1_ABGRU. "拒否理由追加読込
*---MODIFY END   PSD T.SAITOH 2002/08/16 ---------------------------*
CHECK G_FLG_EXIT <> CNS_X.
*--- 販売明細情報設定
PERFORM FRM_VBAP_SET.
*--- 出荷指示備考設定
PERFORM FRM_READ_TEXT USING    GF_VBAP-VBELN
GF_VBAP-POSNR
CHANGING GF_WRITE-ETC.
*--- 販売伝票納入日程行情報取得
PERFORM FRM_VBEP_GET1.
* APPEND PSD K.ARAI 2002/05/28
IF NOT ( GF_INFO-VBTYP = CNS_K
OR  GF_INFO-VBTYP = CNS_L ).
* APPEND END
CHECK G_FLG_EXIT <> CNS_X.
* APPEND PSD K.ARAI 2002/05/28
ENDIF.
* APPEND END
*--- 購買伝票明細情報取得
* 2002/01/10 PSD H.Tanaka MOD ↓
IF GF_VBEP-BANFN <> SPACE AND
GF_VBEP-BNFPO <> 0.
PERFORM FRM_EKPO_GET.
* 2002/01/30 PSD H.Tanaka ADD ↓
*--- 仕入先名設定
PERFORM FRM_LFA1_GET.
ENDIF.
* 2002/01/10 PSD H.Tanaka MOD ↑
* 2002/01/30 PSD H.Tanaka DEL ↓
*--- 仕入先名設定
*    PERFORM FRM_LFA1_GET.
* 2002/01/16 PSD H.Tanaka ADD ↓
*--- 数量変換処理
PERFORM FRM_SURYO_HENKAN.
* 2002/01/16 PSD H.Tanaka ADD ↑
*--- 計算処理
PERFORM FRM_KEISAN_TODAY.
* APPEND PSD K.ARAI 2002/05/28
* クレメモ・デビメモは入庫数に目標数量を設定する
IF  ( GF_INFO-VBTYP = CNS_K
OR  GF_INFO-VBTYP = CNS_L ).
PERFORM FRM_GET_ZMENG CHANGING GF_WRITE-KWMENG.
ENDIF.
* APPEN END

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM FRM_SET_BSTKD_FROM_VBKD.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*---APPEND START D.YI 2007/11/05 ---------------------------*
* 販売価格を設定
PERFORM FRM_SET_KBETR1.
* 購買価格を設定
PERFORM FRM_SET_KBETR2 USING GF_EKPO-LIFNR
GF_WRITE-MATNR
GF_VBAP-WERKS
GF_WRITE-AUDAT
*---ADD BY DMC 2008/05/07 BEGIN
CNS_KOUBAYI.
*---ADD BY DMC 2008/05/07 END
* 消費税金額を設定
PERFORM FRM_SET_MWSBP.
*---APPEND END   D.YI 2007/11/05 ---------------------------*

*   insert 2011/11/16 C.MARUTA DMW3580{
* 輸送手段等テキスト取得処理
PERFORM FRM_READ_TEXT_YUSOUTOU USING GF_VBAP-VBELN
GF_VBAP-POSNR
CHANGING GF_WRITE-YUSOUTOU.
* } insert 2011/11/16 C.MARUTA DMW3580

*2013/11/11 Add Start
*   購買伝票番号の設定
IF GF_INFO-EBELU IS INITIAL.       "変更履歴->受注と発注が紐づき
GF_INFO-EBELU = GF_WRITE-EBELN.  "登録日付->受注と発注が紐づき
ENDIF.

*   購買伝票番号の設定ありの場合
IF NOT GF_INFO-EBELU IS INITIAL.
*     購買伝票の取引先[EKPA,LFA1,ADRC]取得
CLEAR GT_ADRC.
SELECT EKPA~EBELN EKPA~PARVW EKPA~LIFN2
ADRC~NAME1
INTO TABLE GT_ADRC
FROM EKPA INNER JOIN LFA1
ON EKPA~LIFN2 = LFA1~LIFNR
INNER JOIN ADRC
ON LFA1~ADRNR = ADRC~ADDRNUMBER
WHERE EKPA~EBELN = GF_INFO-EBELU. "購買伝票番号

*     購買伝票の取引先
CLEAR GF_ADRC.
READ TABLE GT_ADRC INTO GF_ADRC
WITH KEY EBELN = GF_INFO-EBELU
PARVW = CNS_BA.
GF_WRITE-LIFNR_BA = GF_ADRC-LIFN2. "発注_手配先
GF_WRITE-NAME1_BA = GF_ADRC-NAME1. "発注_手配先名称
CLEAR GF_ADRC.
READ TABLE GT_ADRC INTO GF_ADRC
WITH KEY EBELN = GF_INFO-EBELU
PARVW = CNS_LF.
GF_WRITE-LIFNR_LF = GF_ADRC-LIFN2. "発注_仕入先
GF_WRITE-NAME1_LF = GF_ADRC-NAME1. "発注_仕入先名称
CLEAR GF_ADRC.
READ TABLE GT_ADRC INTO GF_ADRC
WITH KEY EBELN = GF_INFO-EBELU
PARVW = CNS_RS.
GF_WRITE-LIFNR_RS = GF_ADRC-LIFN2. "発注_請求書発行者
GF_WRITE-NAME1_RS = GF_ADRC-NAME1. "発注_請求書発行者名称
CLEAR GF_ADRC.
READ TABLE GT_ADRC INTO GF_ADRC
WITH KEY EBELN = GF_INFO-EBELU
PARVW = CNS_Y1.
GF_WRITE-LIFNR_Y1 = GF_ADRC-LIFN2. "発注_支払先
GF_WRITE-NAME1_Y1 = GF_ADRC-NAME1. "発注_支払先名称
ENDIF.

GF_WRITE-CHANGKBN = GF_INFO-CHANG. "変更伝票区分
GF_WRITE-USERNAME = GF_INFO-UPNAM. "変更ユーザID
*2013/11/11 Add End
*2013/12/11 Add Start 2.支払条件
SELECT SINGLE ZTERM
FROM  VBKD
INTO  GF_WRITE-ZTERM
WHERE VBELN = GF_INFO-VBELN
AND   POSNR = '000010'.
*2013/12/11 Add End
*--- 更新処理
APPEND GF_WRITE TO GT_WRITE.
ENDLOOP.
*---APPEND START D.YI 2007/11/05 ---------------------------*
* 在庫発注を設定
PERFORM FRM_SET_KOBAI.
*---APPEND END   D.YI 2007/11/05 ---------------------------*

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: GT_VBAP,GT_VBEP,GT_VBEP2,GT_EKPO,
GT_VBPA,GT_SADR,GT_LFA1,GT_VBKD.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: GT_VBPA3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_TODAY
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_NAIJI
*&---------------------------------------------------------------------*
*       内示一覧表用内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATA_NAIJI.
*--- 販売伝票情報設定
PERFORM FRM_INFO_NAIJI.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM GET_DATA.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT GT_INFO INTO GF_INFO.
*--- 共通項目設定
PERFORM FRM_DATA_SET.
*--- 販売伝票取引先情報設定
PERFORM FRM_VBPA_GET1.
*--- 得意先名設定
IF SY-SUBRC = 0.
PERFORM FRM_KUNNR_GET USING    GF_VBPA-ADRNR
CHANGING GF_WRITE-KUNNR
GF_WRITE-KNAME.
ENDIF.
*--- 販売明細情報設定
PERFORM FRM_VBAP_GET1.
CHECK G_FLG_EXIT <> CNS_X.
*--- 販売明細情報設定
PERFORM FRM_VBAP_SET.
*--- 出荷指示備考設定
PERFORM FRM_READ_TEXT USING    GF_VBAP-VBELN
GF_VBAP-POSNR
CHANGING GF_WRITE-ETC.
*--- 販売伝票納入日程行情報設定
PERFORM FRM_VBEP_GET2.
* APPEND PSD K.ARAI 2002/05/28
IF NOT ( GF_INFO-VBTYP = CNS_K
OR  GF_INFO-VBTYP = CNS_L ).
* APPEND END
CHECK G_FLG_EXIT <> CNS_X.
* APPEND PSD K.ARAI 2002/05/28
ENDIF.
* APPEND END

*--- 販売伝票明細情報取得
* 2002/01/10 PSD H.Tanaka MOD ↓
*    PERFORM FRM_EKPO_GET.
IF GF_VBEP-BANFN <> SPACE AND
GF_VBEP-BNFPO <> 0.
PERFORM FRM_EKPO_GET.
ENDIF.
* 2002/01/10 PSD H.Tanaka MOD ↑
* 2002/01/16 PSD H.Tanaka ADD ↓
*--- 数量変換処理
PERFORM FRM_SURYO_HENKAN.
* 2002/01/16 PSD H.Tanaka ADD ↑
*--- 計算処理
PERFORM FRM_KEISAN_NAIJI.
* APPEND PSD K.ARAI 2002/05/28
* クレメモ・デビメモは入庫数に目標数量を設定する
IF  ( GF_INFO-VBTYP = CNS_K
OR  GF_INFO-VBTYP = CNS_L ).
PERFORM FRM_GET_ZMENG CHANGING GF_WRITE-KWMENG.
ENDIF.
* APPEN END

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM FRM_SET_BSTKD_FROM_VBKD.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*--- 更新処理
APPEND GF_WRITE TO GT_WRITE.
ENDLOOP.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: GT_VBAP,GT_VBEP,GT_VBEP2,GT_EKPO,
GT_VBPA,GT_SADR,GT_VBKD.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: GT_VBPA3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_NAIJI
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_MIHIKI
*&---------------------------------------------------------------------*
*       未引当一覧表内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATA_MIHIKI.
*--- 販売伝票情報設定
PERFORM FRM_INFO_MIHIKI.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM GET_DATA.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT GT_INFO INTO GF_INFO.
*--- 共通項目設定
PERFORM FRM_DATA_SET.
*--- 販売伝票取引先情報取得
PERFORM FRM_VBPA_GET1.
*--- 得意先名設定
IF SY-SUBRC = 0.
PERFORM FRM_KUNNR_GET USING    GF_VBPA-ADRNR
CHANGING GF_WRITE-KUNNR
GF_WRITE-KNAME.
ENDIF.
*--- 販売明細情報取得
PERFORM FRM_VBAP_GET1.
CHECK G_FLG_EXIT <> CNS_X.
IF GF_VBAP-KWMENG = GF_VBAP-KBMENG.
CONTINUE.
ENDIF.

*--- 販売明細情報設定
PERFORM FRM_VBAP_SET.
*--- 出荷指示備考設定
PERFORM FRM_READ_TEXT USING    GF_VBAP-VBELN
GF_VBAP-POSNR
CHANGING GF_WRITE-ETC.
*--- 販売伝票納入日程行情報設定
PERFORM FRM_VBEP_GET2.
CHECK G_FLG_EXIT <> CNS_X.
* 2002/01/16 PSD H.Tanaka ADD ↓
*--- 数量変換処理
PERFORM FRM_SURYO_HENKAN.
* 2002/01/16 PSD H.Tanaka ADD ↑
*--- 計算処理
PERFORM FRM_KEISAN_NAIJI.
*--- 未引当数設定
GF_WRITE-MHNUM = GF_WRITE-KWMENG - GF_VBAP-KBMENG.

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM FRM_SET_BSTKD_FROM_VBKD.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*--- 更新処理
APPEND GF_WRITE TO GT_WRITE.
ENDLOOP.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: GT_VBAP,GT_VBEP,GT_VBEP2,GT_EKPO,
GT_VBPA,GT_SADR,GT_VBKD.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: GT_VBPA3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_MIHIKI
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_BLOCK
*&---------------------------------------------------------------------*
*       出荷ブロックリスト用内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATA_BLOCK.
*--- 販売伝票情報設定
PERFORM FRM_INFO_BLOCK.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM GET_DATA.
PERFORM GET_DATA2.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT GT_INFO INTO GF_INFO.
*--- 共通項目設定
PERFORM FRM_DATA_SET.
*--- 販売伝票取引先情報設定
PERFORM FRM_VBPA_GET1.
*--- 得意先名設定
IF SY-SUBRC = 0.
PERFORM FRM_KUNNR_GET USING    GF_VBPA-ADRNR
CHANGING GF_WRITE-KUNNR
GF_WRITE-KNAME.
ENDIF.
*--- 販売明細情報設定
PERFORM FRM_VBAP_GET2.
CHECK G_FLG_EXIT <> CNS_X.
*--- 販売明細情報設定
PERFORM FRM_VBAP_SET.
*--- 出荷指示備考設定
PERFORM FRM_READ_TEXT USING    GF_VBAP-VBELN
GF_VBAP-POSNR
CHANGING GF_WRITE-ETC.
IF R_PERNR = CNS_X.    " 営業員コードボタン押下時
*--- 営業員名取得用販売伝票取引先情報設定
PERFORM FRM_VBPA_GET2.
ENDIF.
CHECK G_FLG_EXIT <> CNS_X.
*--- 出荷ポイント名設定
PERFORM FRM_TVSTT_GET.
*--- 品目保管場所情報設定
PERFORM FRM_MARD_GET.
*--- 販売伝票納入日程行情報設定
PERFORM FRM_VBEP_GET3.
CHECK G_FLG_EXIT <> CNS_X.
*--- 購買伝票明細情報取得
* 2002/01/11 PSD H.Tanaka MOD ↓
*    PERFORM FRM_EKPO_GET.
IF GF_VBEP-BANFN <> SPACE AND
GF_VBEP-BNFPO <> 0.
PERFORM FRM_EKPO_GET.
* 2002/01/30 PSD H.Tanaka ADD ↓
*--- 仕入先名設定
PERFORM FRM_LFA1_GET.
ENDIF.
* 2002/01/11 PSD H.Tanaka MOD ↑
* 2002/01/30 PSD H.Tanaka DEL ↓
*--- 仕入先名設定
*    PERFORM FRM_LFA1_GET.
*--- 販売伝票フロー情報取得
PERFORM FRM_VBFA_GET.
* 2002/01/16 PSD H.Tanaka ADD ↓
*--- 数量変換処理
PERFORM FRM_SURYO_HENKAN.
* 2002/01/16 PSD H.Tanaka ADD ↑
*--- 計算処理
PERFORM FRM_KEISAN_BLOCK.

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM FRM_SET_BSTKD_FROM_VBKD.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*--- 更新処理
APPEND GF_WRITE TO GT_WRITE.
ENDLOOP.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: GT_VBAP,GT_VBEP,GT_VBEP2,GT_EKPO,GT_VBFA,
GT_VBPA,GT_VBPA2,GT_SADR,GT_LFA1,GT_VBKD,GT_TVSTT,GT_MARD.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: GT_VBPA3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_BLOCK
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_KANO
*&---------------------------------------------------------------------*
*       出荷可能リスト用内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATA_KANO.
*--- 販売伝票情報設定
PERFORM FRM_INFO_KANO.
*--- 指定選択年月日処理
PERFORM FRM_DATE_SET.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM GET_DATA.
PERFORM GET_DATA2.
PERFORM GET_DATA3.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT GT_INFO INTO GF_INFO.
*--- 共通項目設定
PERFORM FRM_DATA_SET.
*--- 販売伝票取引先情報設定
PERFORM FRM_VBPA_GET1.
*---APPEND START PSD T.SAITOH 2002/06/24 ---------------------------*
*   納入区域
GF_WRITE-LZONE = GF_VBPA-LZONE.
*---APPEND END   PSD T.SAITOH 2002/06/24 ---------------------------*
*--- 得意先名設定
IF SY-SUBRC = 0.
PERFORM FRM_KUNNR_GET USING    GF_VBPA-ADRNR
CHANGING GF_WRITE-KUNNR
GF_WRITE-KNAME.
ENDIF.

*---APPEND START PSD T.SAITOH 2002/09/20 ---------------------------*
*   納品書種別
PERFORM FRM_READ_TEXT_KNB1 USING GF_WRITE-KUNNR
CHANGING GF_WRITE-ZS01.
*---APPEND END   PSD T.SAITOH 2002/09/20 ---------------------------*

*--- 販売明細情報設定
PERFORM FRM_VBAP_GET2.
CHECK G_FLG_EXIT <> CNS_X.

*---APPEND START PSD T.SAITOH 2002/07/29 ---------------------------*
* 明細カテゴリが TAB,ZTAB,ZTMB のとき受注在庫をチェックする
IF NOT ( GF_VBAP-PSTYV <> 'TAB'
AND   GF_VBAP-PSTYV <> 'ZTAB'
AND   GF_VBAP-PSTYV <> 'ZTMB' ).
*      受注在庫存在チェック
PERFORM FRM_CHECK_MSKA.
CHECK G_FLG_EXIT <> CNS_X."受注在庫が存在しない場合対象外
ENDIF.
*---APPEND END   PSD T.SAITOH 2002/07/29 ---------------------------*

*--- 販売明細情報設定
PERFORM FRM_VBAP_SET.
*--- 出荷指示備考設定
PERFORM FRM_READ_TEXT USING    GF_VBAP-VBELN
GF_VBAP-POSNR
CHANGING GF_WRITE-ETC.
IF R_PERNR = CNS_X.    " 営業員コードボタン押下時
*--- 営業員名取得用販売伝票取引先情報設定
PERFORM FRM_VBPA_GET2.
ENDIF.
CHECK G_FLG_EXIT <> CNS_X.
*--- 出荷ポイント名設定
PERFORM FRM_TVSTT_GET.
*--- 品目保管場所情報設定
PERFORM FRM_MARD_GET.
*--- 販売伝票納入日程行情報設定
PERFORM FRM_VBEP_GET4.
CHECK G_FLG_EXIT <> CNS_X.
*--- 購買伝票明細情報取得
* 2002/01/11 PSD H.Tanaka MOD ↓
*    PERFORM FRM_EKPO_GET.
IF GF_VBEP-BANFN <> SPACE AND
GF_VBEP-BNFPO <> 0.
PERFORM FRM_EKPO_GET.
* 2002/01/30 PSD H.Tanaka ADD ↓
*--- 仕入先名設定
PERFORM FRM_LFA1_GET.
ENDIF.
* 2002/01/11 PSD H.Tanaka MOD ↑
*--- 販売伝票フロー情報取得
PERFORM FRM_VBFA_GET.
* 2002/01/16 PSD H.Tanaka ADD ↓
*--- 数量変換処理
PERFORM FRM_SURYO_HENKAN.
* 2002/01/16 PSD H.Tanaka ADD ↑
*--- 計算処理
PERFORM FRM_KEISAN_BLOCK.

*---APPEND START PSD T.SAITOH 2002/08/05 ---------------------------*
* 出荷可能数を代入
* 明細カテゴリが TAB,ZTAB,ZTMB のとき受注在庫を設定する
IF NOT ( GF_VBAP-PSTYV <> 'TAB'
AND   GF_VBAP-PSTYV <> 'ZTAB'
AND   GF_VBAP-PSTYV <> 'ZTMB' ).

*---APPEND START DMC A.MASUDA 2004/09/29 ----------------------------*
READ TABLE GT_VBFA INTO GF_VBFA WITH KEY VBELV   = GF_VBAP-VBELN
POSNV   = GF_VBAP-POSNR
VBTYP_N = CNS_J
BINARY SEARCH.
LOOP AT GT_VBFA INTO GF_VBFA FROM SY-TABIX.
IF GF_VBFA-VBELV = GF_VBAP-VBELN AND
GF_VBFA-POSNV = GF_VBAP-POSNR AND
GF_VBFA-WBSTK <> 'C'.
GW_KALAB = GW_KALAB + GF_VBFA-LFIMG.
ENDIF.
ENDLOOP.
GF_WRITE-NUMSC = G_KALAB - GW_KALAB.
CLEAR:
G_KALAB,
GW_KALAB.
*---APPEND START DMC A.MASUDA 2005/01/05 --------------------------*
PERFORM CALL_MD_CONVERT_MATERIAL_UNIT USING GF_WRITE-NUMSC
GF_WRITE-NUMSJ.
*---APPEND END   DMC A.MASUDA 2005/01/05 --------------------------*

*      GF_WRITE-NUMSC = G_KALAB.
*---APPEND START DMC A.MASUDA 2004/09/29 ----------------------------*

ENDIF.
*---APPEND END   PSD T.SAITOH 2002/08/05 ---------------------------*

*---APPEND START PSD T.SAITOH 2002/03/20 仕様変更：出荷可能数０を除外-*
IF GF_WRITE-NUMSC = 0.
CONTINUE.
ENDIF.
*---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*

*---APPEND START PSD T.SAITOH 2002/06/21 ---------------------------*
*--- 得意先品目テキストの取得
PERFORM FRM_LTX01.
*---APPEND END   PSD T.SAITOH 2002/06/21 ---------------------------*

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM FRM_SET_BSTKD_FROM_VBKD.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
* 出荷先住所を設定
PERFORM FRM_VBPA_GET3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

*---APPEND START DMC  S.SHIGEMITU 2006/05/31 -----------------------*
* 輸送手段等テキスト取得処理
PERFORM FRM_READ_TEXT_YUSOUTOU USING GF_VBAP-VBELN
GF_VBAP-POSNR
CHANGING GF_WRITE-YUSOUTOU.
*---APPEND END   DMC  S.SHIGEMITU 2006/05/31 -----------------------*

*--- 更新処理
APPEND GF_WRITE TO GT_WRITE.
ENDLOOP.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: GT_VBAP,GT_VBEP,GT_VBEP2,GT_EKPO,GT_VBFA,GT_MSKA,
GT_VBPA,GT_VBPA2,GT_SADR,GT_LFA1,GT_VBKD,GT_TVSTT,GT_MARD.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: GT_VBPA3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_KANO
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_NAIJI
*&---------------------------------------------------------------------*
*       テーブル読込条件⑦
*       販売伝票情報取得処理（内示一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_INFO_NAIJI.
DATA: L_LOW  TYPE VBAK-AUDAT,
L_HIGH TYPE VBAK-AUDAT.
CLEAR   GF_INFO.
REFRESH GT_INFO.

*--- 抽出年月編集
CONCATENATE PR_YYMM-LOW  '01' INTO L_LOW.
IF PR_YYMM-HIGH IS INITIAL.
CONCATENATE PR_YYMM-LOW  '31' INTO L_HIGH.
ELSE.
CONCATENATE PR_YYMM-HIGH '31' INTO L_HIGH.
ENDIF.

*--- 販売伝票情報取得
SELECT A~VBELN A~AUDAT A~AUART A~VKGRP A~VKBUR
A~VDATU A~BSTNK A~KUNNR A~VBTYP A~ERNAM
C~POSNR
* 2002/01/30 PSD H.Tanaka MOD ↓
*         D~BEZEI E~BEZEI F~BSTDK_E
D~BEZEI E~BEZEI F~BSTDK_E F~KURSK
INTO TABLE GT_INFO
FROM ( ( ( ( VBAK AS A INNER JOIN VBUK AS B
ON         A~VBELN  = B~VBELN ) INNER JOIN VBUP  AS C
ON         A~VBELN  = C~VBELN ) INNER JOIN TVKBT AS D
ON         A~VKBUR  = D~VKBUR ) INNER JOIN TVGRT AS E
ON         A~VKGRP  = E~VKGRP ) INNER JOIN VBKD  AS F
ON         C~VBELN  = F~VBELN
WHERE       ( A~AUDAT >= L_LOW
AND         A~AUDAT =< L_HIGH )
AND         A~VKBUR IN PR_VKBUR
AND         A~VKGRP IN PR_VKGRP
AND         A~BSTNK LIKE '仮%'
AND ( NOT ( A~AUART =  CNS_KA
AND         A~VBTYP =  CNS_C )
AND   NOT ( A~AUART =  CNS_KB
AND         A~VBTYP =  CNS_C ) )
**** START UPD 2014/09/02 ISID19 ****
*     AND         D~SPRAS =  CNS_J
*     AND         E~SPRAS =  CNS_J
AND         D~SPRAS =  SY-LANGU
AND         E~SPRAS =  SY-LANGU
**** END UPD 2014/09/02 ISID19 ****

*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
AND         A~VKORG = PR_VKORG
AND         A~VTWEG = PR_VTWEG
AND         A~SPART = PR_SPART
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
AND         F~POSNR =  '000000'.

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE S600(Z1) WITH TEXT-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAK
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_INFO_NAIJI
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_MIHIKI
*&---------------------------------------------------------------------*
*       テーブル読込条件⑨
*       販売伝票情報取得処理（未引当一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_INFO_MIHIKI.
CLEAR   GF_INFO.
REFRESH GT_INFO.

*--- 販売伝票情報取得
SELECT A~VBELN A~AUDAT A~AUART A~VKGRP A~VKBUR
A~VDATU A~BSTNK A~KUNNR A~VBTYP A~ERNAM
C~POSNR
* 2002/01/30 PSD H.Tanaka MOD ↓
*         D~BEZEI E~BEZEI F~BSTDK_E
D~BEZEI E~BEZEI F~BSTDK_E F~KURSK
INTO TABLE GT_INFO
FROM ( ( ( ( VBAK AS A INNER JOIN VBUK AS B
ON         A~VBELN  = B~VBELN ) INNER JOIN VBUP  AS C
ON         A~VBELN  = C~VBELN ) INNER JOIN TVKBT AS D
ON         A~VKBUR  = D~VKBUR ) INNER JOIN TVGRT AS E
ON         A~VKGRP  = E~VKGRP ) INNER JOIN VBKD  AS F
ON         C~VBELN  = F~VBELN
WHERE     A~VKBUR IN PR_VKBUR
AND     A~VKGRP IN PR_VKGRP
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
AND         A~VKORG = PR_VKORG
AND         A~VTWEG = PR_VTWEG
AND         A~SPART = PR_SPART
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
* 2002/01/16 PSD H.Tanaka MOD ↓
*     AND (   A~VBTYP =  CNS_I
*      OR   ( A~VBTYP =  CNS_C
*     AND     A~AUART <> CNS_KA ) )
AND ( ( A~VBTYP =  CNS_I )
OR   ( A~VBTYP =  CNS_C
AND     A~AUART <> CNS_KA )
OR   ( A~AUART =  CNS_KR
AND     A~VBTYP =  CNS_H ) )
* 2002/01/16 PSD H.Tanaka MOD ↑
AND     B~ABSTK <> CNS_C
AND     B~BESTK =  CNS_A
AND     C~BESTA =  CNS_A
**** START UPD 2014/09/02 ISID19 ****
*     AND     D~SPRAS =  CNS_J
*     AND     E~SPRAS =  CNS_J
AND     D~SPRAS =  SY-LANGU
AND     E~SPRAS =  SY-LANGU
**** END UPD 2014/09/02 ISID19 ****
AND     F~POSNR =  '000000'.
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE S600(Z1) WITH TEXT-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAK
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_INFO_MIHIKI
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_BLOCK
*&---------------------------------------------------------------------*
*       テーブル読込条件⑩
*       販売伝票情報取得処理（出荷ブロックリスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_INFO_BLOCK.
CLEAR   GF_INFO.
REFRESH GT_INFO.

*--- 販売伝票情報取得
SELECT A~VBELN A~AUDAT A~AUART A~VKGRP A~VKBUR
A~VDATU A~BSTNK A~KUNNR A~VBTYP A~ERNAM
C~POSNR
* 2002/01/30 PSD H.Tanaka MOD ↓
*         D~BEZEI E~BEZEI F~BSTDK_E
D~BEZEI E~BEZEI F~BSTDK_E F~KURSK
INTO TABLE GT_INFO
FROM ( ( ( ( VBAK AS A INNER JOIN VBUK AS B
ON         A~VBELN  = B~VBELN ) INNER JOIN VBUP  AS C
ON         A~VBELN  = C~VBELN ) INNER JOIN TVKBT AS D
ON         A~VKBUR  = D~VKBUR ) INNER JOIN TVGRT AS E
ON         A~VKGRP  = E~VKGRP ) INNER JOIN VBKD  AS F
ON         C~VBELN  = F~VBELN
* 2002/01/21 PSD H.Tanaka MOD ↓
*   WHERE     A~VKBUR IN PR_VKBUR
*     AND     A~VKGRP IN PR_VKGRP
WHERE     A~VKGRP IN PR_VKGRP
AND     A~KUNNR IN PR_KUNNR
* 2002/01/16 PSD H.Tanaka MOD ↓
*     AND (   A~VBTYP =  CNS_I
*      OR   ( A~VBTYP =  CNS_C
*     AND     A~AUART <> CNS_KA ) )
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
AND         A~VKORG = PR_VKORG
AND         A~VTWEG = PR_VTWEG
AND         A~SPART = PR_SPART
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
AND ( ( A~VBTYP =  CNS_I )
OR   ( A~VBTYP =  CNS_C
AND     A~AUART <> CNS_KA )
OR   ( A~AUART =  CNS_KR
AND     A~VBTYP =  CNS_H ) )
* 2002/01/16 PSD H.Tanaka MOD ↑
AND     B~ABSTK <> CNS_C
AND     C~LSSTA <> SPACE
**** START UPD 2014/09/02 ISID19 ****
*     AND     D~SPRAS =  CNS_J
*     AND     E~SPRAS =  CNS_J
AND     D~SPRAS =  SY-LANGU
AND     E~SPRAS =  SY-LANGU
**** END UPD 2014/09/02 ISID19 ****
AND     F~POSNR =  '000000'.
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE S600(Z1) WITH TEXT-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAK
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_INFO_BLOCK
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_KANO
*&---------------------------------------------------------------------*
*       テーブル読込条件⑮
*       販売伝票情報取得処理（出荷可能リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_INFO_KANO.
CLEAR   GF_INFO.
REFRESH:GT_INFO,R_VKBUR.
CLEAR:R_VKBUR.
***2003.05.27 >>>
LOOP AT PR_WERKS.
MOVE-CORRESPONDING PR_WERKS TO R_VKBUR.
IF PR_WERKS-LOW <> SPACE.
**** START ADD 2014/10/23 ISID19 ****
IF PR_BUKRS = 'C001'.
**** END ADD 2014/10/23 ISID19 ****
R_VKBUR-LOW = '0000'.
R_VKBUR-LOW+0(3) = PR_WERKS-LOW+1(3).
**** START ADD 2014/10/23 ISID19 ****
ENDIF.
**** END ADD 2014/10/23 ISID19 ****
ENDIF.
IF PR_WERKS-HIGH <> SPACE.
**** START ADD 2014/10/23 ISID19 ****
IF PR_BUKRS = 'C001'.
**** END ADD 2014/10/23 ISID19 ****
R_VKBUR-HIGH = '0000'.
R_VKBUR-HIGH+0(3) = PR_WERKS-HIGH+1(3).
**** START ADD 2014/10/23 ISID19 ****
ENDIF.
**** END ADD 2014/10/23 ISID19 ****
ENDIF.
APPEND R_VKBUR.
CLEAR:R_VKBUR.
ENDLOOP.
***2003.05.27 <<<

*--- 販売伝票情報取得
SELECT A~VBELN A~AUDAT A~AUART A~VKGRP A~VKBUR
A~VDATU A~BSTNK A~KUNNR A~VBTYP A~ERNAM
C~POSNR
D~BEZEI E~BEZEI F~BSTDK_E F~KURSK
INTO TABLE GT_INFO
FROM ( ( ( ( VBAK AS A INNER JOIN VBUK AS B
ON         A~VBELN  = B~VBELN ) INNER JOIN VBUP  AS C
ON         A~VBELN  = C~VBELN ) INNER JOIN TVKBT AS D
ON         A~VKBUR  = D~VKBUR ) INNER JOIN TVGRT AS E
ON         A~VKGRP  = E~VKGRP ) INNER JOIN VBKD  AS F
ON         C~VBELN  = F~VBELN
WHERE     A~VKGRP IN PR_VKGRP
AND     A~KUNNR IN PR_KUNNR
AND     A~VKBUR IN R_VKBUR  "2003.05.27 ADD
AND     A~VKORG = PR_VKORG
AND     A~VTWEG = PR_VTWEG
AND     A~SPART = PR_SPART
AND ( ( A~VBTYP =  CNS_I )
OR   ( A~VBTYP =  CNS_C AND A~AUART <> CNS_KA )
OR   ( A~AUART =  CNS_KR AND A~VBTYP =  CNS_H ) )
AND     B~LFSTK <> CNS_C
AND     B~ABSTK <> CNS_C
AND     C~LFGSA <> CNS_C
AND     C~ABSTA <> CNS_C
AND     C~GBSTA <> CNS_C
**** START UPD 2014/09/02 ISID19 ****
*     AND     D~SPRAS =  CNS_J
*     AND     E~SPRAS =  CNS_J
AND     D~SPRAS =  SY-LANGU
AND     E~SPRAS =  SY-LANGU
**** END UPD 2014/09/02 ISID19 ****
AND     F~POSNR =  '000000'.
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE S600(Z1) WITH TEXT-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAK
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_INFO_KANO
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET1
*&---------------------------------------------------------------------*
*       テーブル読込条件②
*       販売伝票取引先構造取得処理（当日受発注一覧表
*                                   内示一覧表、未引当リスト）
* 2002/08/16 PSD T.SATIOH 当日受発注一覧表のみ読込条件を変更するため
*                         現サブルーチンは対象外とする
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBAP_GET1.
CLEAR   GF_VBAP.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR MATNR ARKTX  PSTYV
*                KDMAT NETWR WAERK KWMENG KBMENG
** 2002/02/05 PSD H.Tanaka MOD ↓
**                VSTEL NETPR WAVWR
*                VRKME VSTEL NETPR KPEIN WAVWR
** 2002/01/30 PSD H.Tanaka DEL ↓
**                STCUR
*                WERKS
*                LGORT
*    INTO GF_VBAP
*    FROM VBAP
*   WHERE VBELN = GF_INFO-VBELN
*     AND POSNR = GF_INFO-POSNR.
READ TABLE GT_VBAP INTO GF_VBAP
WITH TABLE KEY VBELN = GF_INFO-VBELN
POSNR = GF_INFO-POSNR.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
G_FLG_EXIT = CNS_X.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAP
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBAP_GET1
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET1_ABGRU
*&---------------------------------------------------------------------*
*       テーブル読込条件②-α
*       販売伝票取引先構造取得処理（当日受発注一覧表）
*       拒否理由追加・・・2002/08/16 PSD T.SAITOH
*----------------------------------------------------------------------*
FORM FRM_VBAP_GET1_ABGRU.
CLEAR   GF_VBAP.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR MATNR ARKTX  PSTYV
*                KDMAT NETWR WAERK KWMENG KBMENG
*                VRKME VSTEL NETPR KPEIN WAVWR
*                WERKS
*                LGORT
*                ABGRU
*    INTO GF_VBAP
*    FROM VBAP
*   WHERE VBELN = GF_INFO-VBELN
*     AND POSNR = GF_INFO-POSNR.
READ TABLE GT_VBAP INTO GF_VBAP
WITH TABLE KEY VBELN = GF_INFO-VBELN
POSNR = GF_INFO-POSNR.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
G_FLG_EXIT = CNS_X.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAP
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBAP_GET1_ABGRU

*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET1
*&---------------------------------------------------------------------*
*       テーブル読込条件⑥
*       得意先名取得用販売伝票取引先構造取得処理（全帳票対象）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBPA_GET1.
CLEAR GF_VBPA.

*--- 販売伝票情報取得
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE VBELN POSNR PARVW PERNR ADRNR LZONE
*    INTO GF_VBPA
*    FROM VBPA
*   WHERE VBELN = GF_INFO-VBELN
** 2002/01/11 PSD H.Tanaka MOD ↓
**     AND POSNR = GF_INFO-POSNR
*     AND POSNR = '000000'
** 2002/01/11 PSD H.Tanaka MOD ↑
*     AND PARVW = CNS_AG.
READ TABLE GT_VBPA INTO GF_VBPA
WITH TABLE KEY VBELN = GF_INFO-VBELN
POSNR = '000000'
PARVW = CNS_AG.
IF SY-SUBRC <> 0.
SELECT SINGLE VBELN POSNR PARVW PERNR ADRNR LZONE
INTO GF_VBPA
FROM VBPA
WHERE VBELN = GF_INFO-VBELN
AND POSNR = '000000'
AND PARVW = CNS_AG.
IF SY-SUBRC = 0.
INSERT GF_VBPA INTO TABLE GT_VBPA.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-038.
*      STOP.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBPA
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBPA_GET1
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET1
*&---------------------------------------------------------------------*
*       テーブル読込条件③
*       販売伝票納入日程行情報取得処理（当日受発注一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBEP_GET1.
CLEAR GF_VBEP.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR ETENR EDATU
*                ETTYP LIFSP BANFN BNFPO
*    INTO CORRESPONDING FIELDS OF GF_VBEP
*    FROM VBEP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR
**-DELETE START PSD.SAITOH 20010109 --------------------*
**     AND BANFN <> ''
**-DELETE END PSD.SAITOH 20010109   --------------------*
*     .
READ TABLE GT_VBEP INTO GF_VBEP
WITH KEY VBELN = GF_INFO-VBELN
POSNR = GF_INFO-POSNR
BINARY SEARCH.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
GF_WRITE-EDATU = GF_VBEP-EDATU.
GF_WRITE-LIFSP = GF_VBEP-LIFSP.
WHEN 4.         " 対象データなし
G_FLG_EXIT = CNS_X.
*      MESSAGE S600(Z1) WITH TEXT-036.
*      STOP.
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBEP
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_VBEP_GET1
*&---------------------------------------------------------------------*
*&      Form  FRM_EKPO_GET
*&---------------------------------------------------------------------*
*       テーブル読込条件④
*       購買伝票明細情報取得処理（当日受発注一覧表、出荷ブロックリスト、
*                                 出荷可能リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_EKPO_GET.

**** START ADD 2015/01/05 ISID11 ****
DATA:
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING.
**** END ADD 2015/01/05 ISID11 ****

CLEAR   GF_EKPO.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 購買伝票情報取得
*  SELECT SINGLE A~EBELN A~EBELP A~NETPR
*         A~MENGE
** 2002/01/30 PSD H.Tanaka MOD ↓
*         B~WAERS B~WKURS B~LLIEF
*         B~WAERS B~WKURS B~LIFNR
*         C~WEMNG C~EINDT
**---APPEND START PSD T.SAITOH 2002/08/06 ---------------------------*
**   価格単位考慮
*         A~PEINH "価格単位
**---APPEND END   PSD T.SAITOH 2002/08/06 ---------------------------*
**---MODIFY START PSD T.SAITOH 2002/08/06 ---------------------------*
*    INTO (GF_EKPO-EBELN,
*          GF_EKPO-EBELP,
*          GF_EKPO-ENETPR,
*          GF_EKPO-MENGE,
*          GF_EKPO-WAERS,
*          GF_EKPO-WKURS,
*          GF_EKPO-LIFNR,
*          GF_EKPO-WEMNG,
*          GF_EKPO-EINDT,
*          GF_EKPO-PEINH )
**---MODIFY END   PSD T.SAITOH 2002/08/06 ---------------------------*
*    FROM ( EKPO AS A INNER JOIN EKKO AS B
*      ON   A~EBELN  = B~EBELN ) INNER JOIN EKET  AS C
*      ON   A~EBELN  = C~EBELN
*     AND   A~EBELP  = C~EBELP
*   WHERE   A~LOEKZ = ''
*     AND   C~ETENR = CNS_0001
*     AND   C~BANFN = GF_VBEP-BANFN
*     AND   C~BNFPO = GF_VBEP-BNFPO.
READ TABLE GT_EKPO INTO GF_EKPO
WITH KEY BANFN = GF_VBEP-BANFN
BNFPO = GF_VBEP-BNFPO
BINARY SEARCH.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
MOVE-CORRESPONDING GF_EKPO TO GF_WRITE.

**** START ADD 2015/01/05 ISID11 ****
CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = GF_EKPO-ENETPR.
*     小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-ENETPR RIGHT-JUSTIFIED.
**** END ADD 2015/01/05 ISID11 ****

WHEN 4.         " 対象データなし
*-DELETE START PSD.SAITOH 20010109 --------------------*
*      MESSAGE S600(Z1) WITH TEXT-041.
*      STOP.
*-DELETE END PSD.SAITOH 20010109   --------------------*

WHEN OTHERS.    " システムエラー
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_EKPO
*                            SY-SUBRC.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_EKPO_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET2
*&---------------------------------------------------------------------*
*       テーブル読込条件⑭
*       販売伝票取引先構造取得処理（出荷ブロックリスト・出荷可能リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBAP_GET2.
CLEAR   GF_VBAP.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR MATNR ARKTX  PSTYV
*                KDMAT NETWR WAERK KWMENG KBMENG
** 2002/02/06 PSD H.Tanaka MOD ↓
**                VSTEL NETPR WAVWR
**                VSTEL NETPR KPEIN WAVWR
*                VRKME VSTEL NETPR KPEIN WAVWR
** 2002/01/30 PSD H.Tanaka DEL ↓
**                STCUR
*                WERKS
*                LGORT
*    INTO GF_VBAP
*    FROM VBAP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR
*     AND VSTEL IN PR_WERKS.
READ TABLE GT_VBAP INTO GF_VBAP
WITH TABLE KEY VBELN = GF_INFO-VBELN
POSNR = GF_INFO-POSNR.
IF SY-SUBRC = 0.
IF GF_VBAP-VSTEL IN PR_WERKS.
ELSE.
CLEAR GF_VBAP.
SY-SUBRC = 4.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
G_FLG_EXIT = CNS_X.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAP
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBAP_GET2
*&---------------------------------------------------------------------*
*&      Form  FRM_KUNNR_GET
*&---------------------------------------------------------------------*
*       得意先名取得処理
*----------------------------------------------------------------------*
*      -->P_ADRNR  住所
*      <--P_KUNNR  得意先
*      <--P_NAME2  得意先名
*----------------------------------------------------------------------*
FORM FRM_KUNNR_GET USING    P_ADRNR
CHANGING P_KUNNR
P_NAME2.
DATA L_ADDR1_SEL TYPE ADDR1_SEL.
DATA L_SADR      TYPE SADR.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  L_ADDR1_SEL-ADDRNUMBER = P_ADRNR.
**--- 汎用モジュール『ADDR_GET』
*  CALL FUNCTION 'ADDR_GET'
*       EXPORTING
*            ADDRESS_SELECTION = L_ADDR1_SEL
*       IMPORTING
*            SADR              = L_SADR
*       EXCEPTIONS
*            PARAMETER_ERROR   = 1
*            ADDRESS_NOT_EXIST = 2
*            VERSION_NOT_EXIST = 3
*            INTERNAL_ERROR    = 4
*            OTHERS            = 5.
L_ADDR1_SEL-ADDRNUMBER = P_ADRNR.
READ TABLE GT_SADR INTO L_SADR
WITH TABLE KEY ADRNR = L_ADDR1_SEL-ADDRNUMBER.
IF SY-SUBRC <> 0.
*--- 汎用モジュール『ADDR_GET』
CALL FUNCTION 'ADDR_GET'
EXPORTING
ADDRESS_SELECTION = L_ADDR1_SEL
IMPORTING
SADR              = L_SADR
EXCEPTIONS
PARAMETER_ERROR   = 1
ADDRESS_NOT_EXIST = 2
VERSION_NOT_EXIST = 3
INTERNAL_ERROR    = 4
OTHERS            = 5.
IF SY-SUBRC = 0.
INSERT L_SADR INTO TABLE GT_SADR.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
IF SY-SUBRC <> 0.
P_KUNNR = ''.
ELSE.
P_NAME2 = L_SADR-NAME1.
ENDIF.

ENDFORM.                    " FRM_KUNNR_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_SET
*&---------------------------------------------------------------------*
*       販売明細情報設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBAP_SET.

**** START ADD 2015/01/05 ISID11 ****
DATA:
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING.
**** END ADD 2015/01/05 ISID11 ****

*--- 共通項目設定
MOVE-CORRESPONDING GF_VBAP TO GF_WRITE.

**** START ADD 2015/01/05 ISID11 ****
CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = GF_VBAP-VNETPR.
* 小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-VNETPR RIGHT-JUSTIFIED.

CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = GF_VBAP-WAVWR.
* 小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-WAVWR RIGHT-JUSTIFIED.
**** END ADD 2015/01/05 ISID11 ****

*--- 区の設定
CASE GF_VBAP-PSTYV.
WHEN CNS_ZSEO.
GF_WRITE-KU = TEXT-039.
WHEN CNS_ZSEK.
GF_WRITE-KU = TEXT-040.
WHEN OTHERS.
ENDCASE.

*--- 在（在庫品）の設定
CLEAR GF_WRITE-ZAI.
IF   GF_VBAP-PSTYV = CNS_ZTAN  "標準明細子会社
OR GF_VBAP-PSTYV = CNS_TAN   "標準明細
OR GF_VBAP-PSTYV = CNS_ZSEK  "セット品子明細
OR GF_VBAP-PSTYV = CNS_ZTMP. "添付資料必須
GF_WRITE-ZAI = CNS_*.
ENDIF.
*---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*

ENDFORM.                    " FRM_VBAP_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT
*&---------------------------------------------------------------------*
*       出荷指示備考取得処理
*----------------------------------------------------------------------*
*      -->P_VBELN   販売伝票
*      -->P_POSNR   販売伝票明細
*      <--P_TDLINE  出荷指示備考
*----------------------------------------------------------------------*
FORM FRM_READ_TEXT USING    P_VBELN
P_POSNR
CHANGING P_TDLINE.
DATA: LT_TLINE    TYPE TABLE OF TLINE,
LF_TLINE    TYPE TLINE,
L_VBELN     LIKE THEAD-TDNAME.

CONCATENATE P_VBELN
P_POSNR
INTO L_VBELN.

*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID        = '9001'
**** START UPD 2014/09/02 ISID19 ****
*             LANGUAGE  = 'J'
LANGUAGE  = SY-LANGU
**** END UPD 2014/09/02 ISID19 ****
NAME      = L_VBELN
OBJECT    = 'VBBP'
TABLES
LINES     = LT_TLINE
EXCEPTIONS
NOT_FOUND = 4
*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
REFERENCE_CHECK = 5
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*
OTHERS    = 8.
CASE SY-SUBRC.
WHEN 0.
READ TABLE LT_TLINE INTO LF_TLINE INDEX 1.
*--- 2002.05.02 MODIFY PSD K.Arai
*出荷指示備考の先頭'*'削除
P_TDLINE = LF_TLINE-TDLINE+0(40).
*     P_TDLINE = LF_TLINE+0(40).
*---MODIFY END
WHEN 8.
MESSAGE E001(Z1) WITH TEXT-024
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_READ_TEXT
*&---------------------------------------------------------------------*
*&      Form  FRM_KEISAN_TODAY
*&---------------------------------------------------------------------*
*       計算処理（当日受発注一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_KEISAN_TODAY.
*--- 受注単価の変換
* 2002/01/23 PSD H.Tanaka ADD ↓
PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
*                                      GF_WRITE-VNETPR
GF_VBAP-VNETPR
*                             CHANGING GF_WRITE-JTNKYEN.
CHANGING G_NETPR.

*--- 受注金額（円建て）計算
PERFORM FRM_JYUKIN_SET.

* 2002/01/23 PSD H.Tanaka ADD ↓
*--- 発注単価（円建て）計算
PERFORM FRM_HATSUTAN_SET.

**** START DEL 2015/01/05 ISID11 ****
**--- 発注金額（円建て）計算
*  PERFORM FRM_HATSUKIN_SET.
**** END DEL 2015/01/05 ISID11 ****

* MOD 2004/01/07 当月受注一覧の原価表示対応 START
*--- 原価（円建て）計算
IF  ( GF_VBAP-PSTYV = CNS_TAB        "個別購買発注
OR GF_VBAP-PSTYV = CNS_ZTAB       "個別購買発注（子）
OR GF_VBAP-PSTYV = CNS_ZTMB ).    "添付資料個別
* 個別購買
PERFORM FRM_GENKA_SET_KOBETSU.
ELSEIF ( GF_VBAP-PSTYV = CNS_ZTAN    "標準明細子会社
OR GF_VBAP-PSTYV = CNS_TAN     "標準明細
OR GF_VBAP-PSTYV = CNS_ZSEK    "セット品子明細
OR GF_VBAP-PSTYV = CNS_ZTMP ). "添付資料必須
* 在庫
PERFORM FRM_GENKA_SET_ZAIKO.
ELSE.
* その他 上記条件以外は過去のまま
PERFORM FRM_GENKA_SET.
ENDIF.
* MOD 2004/01/07 当月受注一覧の原価表示対応 END
* 2002/01/22 PSD H.Tanaka DEL ↓
*--- 原価金額（円建て）計算
*  PERFORM FRM_GENKIN_SET.

*--- 粗利金額（円建て）計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*  GF_WRITE-ARAEYN = GF_WRITE-NETWR - GF_WRITE-GYEN2.
PERFORM FRM_ARAKIN_SET.

*--- 粗利率計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*    GF_WRITE-ARAPER = GF_WRITE-ARAEYN / G_NUMGF.
PERFORM FRM_ARARITSU_SET.

* 2002/01/23 PSD H.Tanaka DEL ↓
*--- 発注単価（円建て）計算
*  PERFORM FRM_HATSUTAN_SET.

*--- 受注単価（円建て）計算
PERFORM FRM_JYUTAN_SET.

ENDFORM.                    " FRM_KEISAN_TODAY
*&---------------------------------------------------------------------*
*&      Form  FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*       金額変換処理
*----------------------------------------------------------------------*
*      -->P_TSUKACD  通貨コード
*      -->P_KINGAKU  変換前金額
*      <--P_HENKAN   変換後金額
*----------------------------------------------------------------------*
FORM FRM_KINGAKU_HENKAN USING    P_TSUKACD
P_KINGAKU
CHANGING P_HENKAN.
DATA L_IDOC_AMOUNT(255) TYPE C.
*--- 汎用モジュール金額変換モジュール
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
EXPORTING
CURRENCY    = P_TSUKACD
SAP_AMOUNT  = P_KINGAKU
IMPORTING
IDOC_AMOUNT = L_IDOC_AMOUNT
EXCEPTIONS
OTHERS      = 1.
IF SY-SUBRC <> 1.
P_HENKAN = L_IDOC_AMOUNT.
ENDIF.

ENDFORM.                    " FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*&      Form  FRM_JYUKIN_SET
*&---------------------------------------------------------------------*
*       受注金額（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_JYUKIN_SET.
DATA:
**** START ADD 2015/01/05 ISID11 ****
L_VNETPR  TYPE P LENGTH 9 DECIMALS 6,
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING,
**** END ADD 2015/01/05 ISID11 ****
L_NETWR TYPE ZSLIST_V01-KBMENG.
* 2002/02/01 PSD H.Tanaka ADD ↓
*--- 受注単価計算
**** START UPD 2015/01/05 ISID11 ****
*  GF_WRITE-VNETPR = G_NETPR / GF_VBAP-KPEIN.
CLEAR:
L_VNETPR,
L_AMOUNT,
L_NOZERO.

L_VNETPR = G_NETPR / GF_VBAP-KPEIN.
L_AMOUNT = L_VNETPR.
* 小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-VNETPR RIGHT-JUSTIFIED.
**** END UPD 2015/01/05 ISID11 ****

*--- 受注金額（円建て）計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*  PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
*                                      GF_WRITE-NETWR
*                             CHANGING G_NUMGF.
*  GF_WRITE-NUMGF = G_NUMGF * GF_WRITE-STCUR.
PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
GF_VBAP-NETWR
*                             CHANGING GF_WRITE-NETWR.
CHANGING L_NETWR.
*  GF_WRITE-NETWR = GF_VBAP-NETWR.
*  GF_WRITE-NUMGF = GF_WRITE-NETWR * GF_WRITE-STCUR.
GF_WRITE-NETWR = L_NETWR.
GF_WRITE-NUMGF = L_NETWR * GF_WRITE-STCUR.
* 2002/01/11 PSD H.Tanaka MOD ↑

ENDFORM.                    " FRM_JYUKIN_SET
**** START DEL 2015/01/05 ISID11 ****
**&---------------------------------------------------------------------*
**&      Form  FRM_HATSUKIN_SET
**&---------------------------------------------------------------------*
**       発注金額（円建て）計算処理→円建て廃止 2002/08/06
**----------------------------------------------------------------------*
**  -->  p1        text
**  <--  p2        text
**----------------------------------------------------------------------*
*FORM FRM_HATSUKIN_SET.
** 2002/01/23 PSD H.Tanaka MOD ↓
**DATA L_HATSUKIN(16) TYPE P.
**--- 発注金額（円建て）計算
**  PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERS
**                                      GF_WRITE-ENETPR
**                             CHANGING L_HATSUKIN.
**  PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERS
**                                      GF_WRITE-ENETPR
**                             CHANGING GF_WRITE-ENETPR.
**  GF_WRITE-ENETPR = GF_WRITE-MENGE  * GF_WRITE-ENETPR.
**  GF_WRITE-MNYEN  = GF_WRITE-ENETPR * GF_WRITE-WKURS.
**  L_HATSUKIN = GF_WRITE-MENGE  * L_HATSUKIN.
**  GF_WRITE-MNYEN  = L_HATSUKIN * GF_WRITE-WKURS.
*
** ↓↓↓発注金額円建て廃止　発注換算レートを廃止する 2002/08/06 PSD T.S.
**  GF_WRITE-MNYEN = GF_WRITE-MENGE  * GF_WRITE-ENETPR. "* GF_WRITE-WKURS.
** 2002/01/23 PSD H.Tanaka MOD ↑
*
*ENDFORM.                    " FRM_HATSUKIN_SET
**** END DEL 2015/01/05 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  FRM_GENKA_SET
*&---------------------------------------------------------------------*
*       原価（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_GENKA_SET.

**** START ADD 2015/01/05 ISID11 ****
DATA:
L_WAVWR    TYPE P LENGTH 10 DECIMALS 6,
L_GYEN1    TYPE P LENGTH 9 DECIMALS 6,
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING.
**** END ADD 2015/01/05 ISID11 ****

*--- 原価（円建て）計算
* 2002/01/22 PSD H.Tanaka MOD ↓
PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
*                                      GF_WRITE-WAVWR
GF_VBAP-WAVWR
*                             CHANGING GF_WRITE-WAVWR.
CHANGING G_WAVWR.
IF GF_WRITE-KWMENG <> CNS_ZERO.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_WRITE-KWMENG.
**** START UPD 2015/01/05 ISID11 ****
*    GF_WRITE-WAVWR = G_WAVWR / GF_VBAP-KWMENG.
*    GF_WRITE-GYEN1 = ( G_WAVWR / GF_VBAP-KWMENG ) * GF_WRITE-STCUR.
CLEAR:
L_WAVWR,
L_AMOUNT,
L_NOZERO.

L_WAVWR = G_WAVWR / GF_VBAP-KWMENG.
L_AMOUNT = L_WAVWR.
*   小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-WAVWR RIGHT-JUSTIFIED.

CLEAR:
L_GYEN1,
L_AMOUNT,
L_NOZERO.

L_GYEN1 = ( G_WAVWR / GF_VBAP-KWMENG ) * GF_WRITE-STCUR.
L_AMOUNT = L_GYEN1.
*   小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-GYEN1 RIGHT-JUSTIFIED.
**** END UPD 2015/01/05 ISID11 ****

ENDIF.

*--- 原価金額（円建て）計算
PERFORM FRM_GENKIN_SET.

* 2002/01/22 PSD H.Tanaka MOD ↑

ENDFORM.                    " FRM_GENKA_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_GENKIN_SET
*&---------------------------------------------------------------------*
*       原価金額（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_GENKIN_SET.
*--- 原価金額（円建て）計算
* 2002/01/22 PSD H.Tanaka MOD ↓
*  GF_WRITE-GYEN2 = GF_WRITE-GYEN1 * GF_WRITE-KWMENG.
GF_WRITE-GYEN2 = G_WAVWR * GF_WRITE-STCUR.
IF GF_INFO-VBTYP = CNS_H OR
GF_INFO-VBTYP = CNS_K.
GF_WRITE-GYEN2 = GF_WRITE-GYEN2 * - 1.
ENDIF.
* 2002/01/22 PSD H.Tanaka MOD ↑

ENDFORM.                    " FRM_GENKIN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_ARAKIN_SET
*&---------------------------------------------------------------------*
*       粗利金額（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_ARAKIN_SET.
*--- 粗利金額（円建て）計算
*--- 2002/01/11 PSD H.Tanaka MOD ↓
*  GF_WRITE-ARAEYN = G_NUMGF - GF_WRITE-GYEN2.
*--- 2002/02/01 PSD H.Tanaka MOD ↓
*  GF_WRITE-ARAEYN = GF_WRITE-NETWR - GF_WRITE-GYEN2.
GF_WRITE-ARAEYN = GF_WRITE-NUMGF - GF_WRITE-GYEN2.
*--- 2002/01/11 PSD H.Tanaka MOD ↑
ENDFORM.                    " FRM_ARAKIN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_ARARITSU_SET
*&---------------------------------------------------------------------*
*       粗利率計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_ARARITSU_SET.
*--- 粗利率計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*  IF G_NUMGF <> CNS_ZERO.
*  IF GF_WRITE-NETWR <> CNS_ZERO.
*    GF_WRITE-ARAPER = GF_WRITE-ARAEYN / G_NUMGF.
* 2002/02/01 PSD H.Tanaka MOD ↓
IF GF_WRITE-NUMGF <> CNS_ZERO.
GF_WRITE-ARAPER = GF_WRITE-ARAEYN / GF_WRITE-NUMGF * 100.
ENDIF.
ENDFORM.                    " FRM_ARARITSU_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_HATSUTAN_SET
*&---------------------------------------------------------------------*
*       発注単価（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_HATSUTAN_SET.

**** START ADD 2015/01/05 ISID11 ****
DATA:
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING,
L_ENETPR   TYPE P LENGTH 9 DECIMALS 6.
**** END ADD 2015/01/05 ISID11 ****

*--- 発注単価（円建て）計算
* 2002/01/23 PSD H.Tanaka MOD ↓
PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERS
*                                      GF_WRITE-ENETPR
GF_EKPO-ENETPR
**** START UPD 2015/01/05 ISID11 ****
*                             CHANGING GF_WRITE-ENETPR.
CHANGING L_ENETPR.
**** END UPD 2015/01/05 ISID11 ****

*---APPEND START PSD T.SAITOH 2002/08/06 ---------------------------*
**** START UPD 2015/01/05 ISID11 ****
*  価格単位考慮
*  CASE GF_EKPO-PEINH.
*    WHEN 0.
*      GF_WRITE-ENETPR = GF_WRITE-ENETPR / 1.
*    WHEN OTHERS.
*      GF_WRITE-ENETPR = GF_WRITE-ENETPR / GF_EKPO-PEINH.
*  ENDCASE.
IF GF_EKPO-PEINH <> 0.

L_ENETPR = L_ENETPR / GF_EKPO-PEINH.

ENDIF.
**** END UPD 2015/01/05 ISID11 ****
*---APPEND END   PSD T.SAITOH 2002/08/06 ---------------------------*

**** START UPD 2015/01/05 ISID11 ****
*  GF_WRITE-HCTNK = GF_WRITE-ENETPR * GF_WRITE-WKURS.
CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = L_ENETPR.
* 小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-ENETPR RIGHT-JUSTIFIED.

CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = L_ENETPR * GF_WRITE-WKURS.
* 小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-HCTNK RIGHT-JUSTIFIED.

*--- 発注金額（円建て）計算
GF_WRITE-MNYEN = GF_WRITE-MENGE  * L_ENETPR. "* GF_WRITE-WKURS.
**** END UPD 2015/01/05 ISID11 ****
*  PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERS
*                                      GF_WRITE-ENETPR
*                             CHANGING GF_WRITE-HCTNK.
*  GF_WRITE-HCTNK = GF_WRITE-HCTNK * GF_WRITE-WKURS.
* 2002/01/23 PSD H.Tanaka MOD ↑
ENDFORM.                    " FRM_HATSUTAN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_JYUTAN_SET
*&---------------------------------------------------------------------*
*       受注単価（円建て）計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_JYUTAN_SET.

**** START ADD 2015/01/05 ISID11 ****
DATA:
L_JTNKYEN  TYPE P LENGTH 9 DECIMALS 6,
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING.
**** END ADD 2015/01/05 ISID11 ****
*--- 受注単価（円建て）計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*  GF_WRITE-JTNKYEN = G_NUMGF * GF_WRITE-STCUR.
* 2002/02/01 PSD H.Tanaka MOD ↓
*  GF_WRITE-JTNKYEN = GF_WRITE-VNETPR * GF_WRITE-STCUR.

**** START UPD 2015/01/05 ISID11 ****
*  GF_WRITE-JTNKYEN = ( G_NETPR / GF_VBAP-KPEIN )
*                                             * GF_WRITE-STCUR.
CLEAR:
L_JTNKYEN,
L_AMOUNT,
L_NOZERO.

L_JTNKYEN = ( G_NETPR / GF_VBAP-KPEIN ) * GF_WRITE-STCUR.
L_AMOUNT = L_JTNKYEN.
* 小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-JTNKYEN RIGHT-JUSTIFIED.
**** END UPD 2015/01/05 ISID11 ****

ENDFORM.                    " FRM_JYUTAN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_KEISAN_NAIJI
*&---------------------------------------------------------------------*
*       計算処理（内示一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_KEISAN_NAIJI.
* 2002/01/23 PSD H.Tanaka ADD ↓
*--- 受注単価の変換
PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
*                                      GF_WRITE-VNETPR
GF_VBAP-VNETPR
*                             CHANGING GF_WRITE-JTNKYEN.
* 2002/02/01 PSD H.Tanaka ADD ↓
*                             CHANGING GF_WRITE-VNETPR.
CHANGING G_NETPR.

*--- 受注金額（円建て）計算
PERFORM FRM_JYUKIN_SET.
*--- 原価（円建て）計算
PERFORM FRM_GENKA_SET.
* 2002/01/22 PSD H.Tanaka DEL ↓
*--- 原価金額（円建て）計算
*  PERFORM FRM_GENKIN_SET.

*--- 粗利金額（円建て）計算
PERFORM FRM_ARAKIN_SET.
*--- 粗利率計算
PERFORM FRM_ARARITSU_SET.
*--- 受注単価（円建て）計算
PERFORM FRM_JYUTAN_SET.

ENDFORM.                    " FRM_KEISAN_NAIJI
*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET2
*&---------------------------------------------------------------------*
*       テーブル読込条件⑤
*       営業員名取得用販売伝票取引先構造取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBPA_GET2.
*  CLEAR GF_VBPA.

*--- 販売伝票情報取得
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE B~PERNR B~NACHN
*    INTO (GF_WRITE-PERNR, GF_WRITE-NACHN)
*    FROM   VBPA AS A INNER JOIN PA0002 AS B
*      ON A~PERNR = B~PERNR
*   WHERE A~VBELN = GF_INFO-VBELN
** 2002/01/25 PSD H.Tanaka MOD ↓
**     AND A~POSNR = GF_INFO-POSNR
**     AND A~PARVW = CNS_PE
*     AND A~POSNR = '000000'
*     AND A~PARVW = CNS_VE
*     AND A~PERNR IN PR_PERNR.
READ TABLE GT_VBPA2 INTO GF_VBPA2
WITH TABLE KEY VBELN = GF_INFO-VBELN
POSNR = '000000'
PARVW = CNS_VE.
IF SY-SUBRC <> 0.
SELECT SINGLE A~VBELN A~POSNR A~PARVW B~PERNR B~NACHN
INTO GF_VBPA2
FROM   VBPA AS A INNER JOIN PA0002 AS B
ON A~PERNR = B~PERNR
WHERE A~VBELN = GF_INFO-VBELN
AND A~POSNR = '000000'
AND A~PARVW = CNS_VE.
IF SY-SUBRC = 0.
INSERT GF_VBPA2 INTO TABLE GT_VBPA2.
ENDIF.
ENDIF.
IF SY-SUBRC = 0.
IF GF_VBPA2-PERNR IN PR_PERNR.
ELSE.
CLEAR GF_VBPA2.
SY-SUBRC = 4.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
GF_WRITE-PERNR = GF_VBPA2-PERNR.
GF_WRITE-NACHN = GF_VBPA2-NACHN.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
WHEN 4.         " 対象データなし
G_FLG_EXIT = CNS_X.
*      MESSAGE S600(Z1) WITH TEXT-038.
*      STOP.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBPA
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBPA_GET2
*&---------------------------------------------------------------------*
*&      Form  FRM_MARD_GET
*&---------------------------------------------------------------------*
*       テーブル読込条件⑬
*       品目保管場所情報設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_MARD_GET.

*--- 品目保管場所情報取得
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
** 2002/01/15 PSD H.Tanaka MOD ↓
**  SELECT SINGLE LGORT
*  SELECT SINGLE LGPBE
** 2002/01/15 PSD H.Tanaka MOD ↑
*    INTO (GF_WRITE-LGPBE)
*    FROM MARD
*   WHERE MATNR = GF_VBAP-MATNR
** 2002/01/15 PSD H.Tanaka MOD ↓
**     AND WERKS = GF_VBAP-POSNR
*     AND WERKS = GF_VBAP-WERKS
** 2002/01/15 PSD H.Tanaka MOD ↑
**---DELETE START PSD T.SAITOH 2002/05/02 保管場所をはずす-----------*
**     AND LGORT = GF_VBAP-LGORT
**---DELETE END   PSD T.SAITOH 2002/05/02 ---------------------------*
*     .
READ TABLE GT_MARD INTO GF_MARD
WITH TABLE KEY MATNR = GF_VBAP-MATNR
WERKS = GF_VBAP-WERKS.
*       BINARY SEARCH.
IF SY-SUBRC <> 0.
SELECT SINGLE MATNR WERKS LGPBE
INTO GF_MARD
FROM MARD
WHERE MATNR = GF_VBAP-MATNR
AND WERKS = GF_VBAP-WERKS.
IF SY-SUBRC = 0.
INSERT GF_MARD INTO TABLE GT_MARD.
*      SORT GT_MARD BY MATNR WERKS.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
GF_WRITE-LGPBE = GF_MARD-LGPBE.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
WHEN 4.         " 対象データなし
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_MARD
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_MARD_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET2
*&---------------------------------------------------------------------*
*       テーブル読込条件⑧
*       販売伝票納入日程行情報取得処理（内示一覧表・未引当リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBEP_GET2.
CLEAR GF_VBEP.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR ETENR EDATU
*                ETTYP LIFSP BANFN BNFPO
*    INTO CORRESPONDING FIELDS OF GF_VBEP
*    FROM VBEP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR.
READ TABLE GT_VBEP INTO GF_VBEP
WITH KEY VBELN = GF_INFO-VBELN
POSNR = GF_INFO-POSNR
BINARY SEARCH.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
GF_WRITE-EDATU = GF_VBEP-EDATU.
GF_WRITE-LIFSP = GF_VBEP-LIFSP.
WHEN 4.         " 対象データなし
G_FLG_EXIT = CNS_X.
*      MESSAGE S600(Z1) WITH TEXT-036.
*      STOP.
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBEP
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_VBEP_GET2
*&---------------------------------------------------------------------*
*&      Form  FRM_VBFA_GET
*&---------------------------------------------------------------------*
*       テーブル読込条件⑫
*       販売伝票フロー情報取得処理（出荷ブロックリスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBFA_GET.
CLEAR GF_VBFA.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT A~VBELV A~POSNV A~VBELN A~VBTYP_N
*         C~LFIMG
*    INTO CORRESPONDING FIELDS OF TABLE GT_VBFA
*    FROM ( VBFA AS A INNER JOIN LIKP AS B
*      ON   A~VBELN    = B~VBELN ) INNER JOIN LIPS AS C
*      ON   A~VBELN    = C~VBELN
*     AND   A~POSNN    = C~POSNR
*     AND   B~VBELN    = C~VBELN
*   WHERE   A~VBELV    = GF_VBAP-VBELN
*     AND   A~POSNV    = GF_VBAP-POSNR
*     AND   A~VBTYP_N  = CNS_J.
READ TABLE GT_VBFA INTO GF_VBFA
WITH KEY VBELV = GF_VBAP-VBELN
POSNV = GF_VBAP-POSNR
VBTYP_N = CNS_J

BINARY SEARCH.
*-------2003/04/21 UPDATE END S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*      LOOP AT GT_VBFA INTO GF_VBFA.
*        GF_WRITE-LIFMG = GF_WRITE-LIFMG + GF_VBFA-LFIMG.
*      ENDLOOP.
LOOP AT GT_VBFA INTO GF_VBFA FROM SY-TABIX.
IF GF_VBFA-VBELV = GF_VBAP-VBELN AND
GF_VBFA-POSNV = GF_VBAP-POSNR.
GF_WRITE-LIFMG = GF_WRITE-LIFMG + GF_VBFA-LFIMG.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
WHEN 4.         " 対象データなし
* 2002/01/25 PSD H.Tanaka DEL ↓
*      MESSAGE S600(Z1) WITH TEXT-042.
*      STOP.
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBFA
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_VBFA_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_KEISAN_BLOCK
*&---------------------------------------------------------------------*
*       計算処理（出荷ブロックリスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_KEISAN_BLOCK.
* 2002/01/23 PSD H.Tanaka ADD ↓
*--- 受注単価の変換
PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
*                                      GF_WRITE-VNETPR
GF_VBAP-VNETPR
*                             CHANGING GF_WRITE-JTNKYEN.
*                             CHANGING GF_WRITE-VNETPR.
CHANGING G_NETPR.

*--- 受注金額（円建て）計算
PERFORM FRM_JYUKIN_SET.

* 2002/01/23 PSD H.Tanaka ADD ↓
*--- 発注単価（円建て）計算
PERFORM FRM_HATSUTAN_SET.

**** START DEL 2015/01/05 ISID11 ****
**--- 発注金額（円建て）計算
*  PERFORM FRM_HATSUKIN_SET.
**** END DEL 2015/01/05 ISID11 ****

*--- 原価（円建て）計算
PERFORM FRM_GENKA_SET.
* 2002/01/22 PSD H.Tanaka DEL ↓
*--- 原価金額（円建て）計算
*  PERFORM FRM_GENKIN_SET.

*--- 粗利金額（円建て）計算
PERFORM FRM_ARAKIN_SET.
*--- 粗利率計算
PERFORM FRM_ARARITSU_SET.

*--- 発注単価（円建て）計算
* 2002/01/23 PSD H.Tanaka DEL ↓
*  PERFORM FRM_HATSUTAN_SET.

*--- 受注単価（円建て）計算
PERFORM FRM_JYUTAN_SET.
*--- 未出荷数量・出荷可能数量・発注残数計算
PERFORM FRM_SYUKA_SET.

ENDFORM.                    " FRM_KEISAN_BLOCK
*&---------------------------------------------------------------------*
*&      Form  FRM_SYUKA_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_SYUKA_SET.
*--- 未出荷数量
GF_WRITE-NUMMS = GF_WRITE-KWMENG - GF_WRITE-LIFMG.

*--- 出荷可能数量
GF_WRITE-NUMSC = GF_WRITE-KBMENG - GF_WRITE-LIFMG.
* 出荷可能数量変換処理
*---APPEND START DMC A.MASUDA 2005/01/05 --------------------------*
PERFORM CALL_MD_CONVERT_MATERIAL_UNIT USING GF_WRITE-NUMSC
GF_WRITE-NUMSJ.
*---APPEND END   DMC A.MASUDA 2005/01/05 --------------------------*

*--- 発注残数
GF_WRITE-HZNUM = GF_WRITE-MENGE - GF_WRITE-WEMNG.

ENDFORM.                    " FRM_SYUKA_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET3
*&---------------------------------------------------------------------*
*       テーブル読込条件⑪
*       販売伝票納入日程行情報取得処理（出荷ブロックリスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBEP_GET3.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
DATA: W_HIT(1) TYPE C.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
CLEAR GF_VBEP.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票納入日程行情報取得
*  SELECT SINGLE VBELN POSNR ETENR EDATU
*                ETTYP LIFSP BANFN BNFPO
*    INTO CORRESPONDING FIELDS OF GF_VBEP
*    FROM VBEP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR
** 2002/01/25 PSD H.Tanaka DEL ↓
**     AND BANFN <> ''
**     AND LIFSP <> ''.
**---APPEND START PSD T.SAITOH 2002/03/20 出荷ブロック：スペースを除外-*
*     AND LIFSP <> SPACE
**---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*
*     AND LIFSP IN PR_LIFSP.
READ TABLE GT_VBEP INTO GF_VBEP
WITH KEY VBELN = GF_INFO-VBELN
POSNR = GF_INFO-POSNR
BINARY SEARCH.
IF SY-SUBRC = 0.
CLEAR W_HIT.
LOOP AT GT_VBEP INTO GF_VBEP FROM SY-TABIX.
IF GF_VBEP-VBELN = GF_INFO-VBELN AND
GF_VBEP-POSNR = GF_INFO-POSNR.
IF GF_VBEP-LIFSP <> SPACE AND GF_VBEP-LIFSP IN PR_LIFSP.
W_HIT = 'X'.
EXIT.
ENDIF.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
IF W_HIT IS INITIAL.
CLEAR GF_VBEP.
SY-SUBRC = 4.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
GF_WRITE-EDATU = GF_VBEP-EDATU.
GF_WRITE-LIFSP = GF_VBEP-LIFSP.
WHEN 4.         " 対象データなし
G_FLG_EXIT = CNS_X.
*      MESSAGE S600(Z1) WITH TEXT-036.
*      STOP.
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBEP
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_VBEP_GET3
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET4
*&---------------------------------------------------------------------*
*       テーブル読込条件⑯
*       販売伝票納入日程行情報取得処理（出荷可能リスト）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBEP_GET4.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
DATA: W_HIT(1) TYPE C.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
CLEAR GF_VBEP.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR ETENR EDATU
*                ETTYP LIFSP BANFN BNFPO
*    INTO CORRESPONDING FIELDS OF GF_VBEP
*    FROM VBEP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR
** ↓ MODIFY PSD K.Arai  2002/04/30 出荷ﾌﾞﾛｯｸされてないものを対象とする
*     AND LIFSP = SPACE
***---APPEND START PSD T.SAITOH 2002/03/20出荷ブロック：スペースを除外-*
**     AND LIFSP <> SPACE
***---APPEND END   PSD T.SAITOH 2002/03/20 ---------------------------*
** ↑
*
** 2002/01/25 PSD H.Tanaka DEL ↓
**     AND BANFN <> ''
*     AND EDATU IN PR_DATE.
READ TABLE GT_VBEP INTO GF_VBEP
WITH KEY VBELN = GF_INFO-VBELN
POSNR = GF_INFO-POSNR
BINARY SEARCH.
IF SY-SUBRC = 0.
CLEAR W_HIT.
LOOP AT GT_VBEP INTO GF_VBEP FROM SY-TABIX.
IF GF_VBEP-VBELN = GF_INFO-VBELN AND
GF_VBEP-POSNR = GF_INFO-POSNR.
IF GF_VBEP-LIFSP = SPACE AND GF_VBEP-EDATU IN PR_DATE.
W_HIT = 'X'.
EXIT.
ENDIF.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
IF W_HIT IS INITIAL.
CLEAR GF_VBEP.
SY-SUBRC = 4.
ENDIF.
ENDIF.


*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
GF_WRITE-EDATU = GF_VBEP-EDATU.
GF_WRITE-LIFSP = GF_VBEP-LIFSP.
WHEN 4.         " 対象データなし
G_FLG_EXIT = CNS_X.
*      MESSAGE S600(Z1) WITH TEXT-036.
*      STOP.
WHEN OTHERS.    " システムエラー
*-------2003/04/21 DELETE START S.IWAKI(NDSC)
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBEP
*                            SY-SUBRC.
*-------2003/04/21 DELETE END   S.IWAKI(NDSC)
ENDCASE.

ENDFORM.                    " FRM_VBEP_GET4
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_WRITE_DATA.
*--- 帳票設定処理
PERFORM FRM_WRITE_SET.

*---APPEND START PSD T.SAITOH 2002/07/30 ---------------------------*
* ALV印刷強制処理
*  PERFORM FRM_SET_PRINT_PARAMETERS.
*---APPEND END   PSD T.SAITOH 2002/07/30 ---------------------------*

*--- リストの出力
CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM             = G_REPID        "レポートID
* Del ES-UP 2012/09/06 -->
*    i_callback_top_of_page         = g_top_of_page  "TOP_OF_PAGE
* Del ES-UP 2012/09/06 <--
*    I_STRUCTURE_NAME               = 'ZSLIST_V07'   "構造
**** START UPD 2015/01/05 ISID11 ****
*    I_STRUCTURE_NAME               = 'ZSLIST_V07_NEW'   "構造
I_STRUCTURE_NAME               = 'ZSEGSD0023'   "構造
**** END UPD 2015/01/05 ISID11 ****
IS_LAYOUT                      = GF_LAYOUT      "レイアウト設定
I_SAVE                         = 'A'            "レイアウト保存
IS_VARIANT                     = GF_VARIANT
IT_EVENTS                      = GT_EVENT[]     "イベント設定
*---APPEND START PSD T.SAITOH 2002/03/14 ALV一覧ステータス印刷拒否設定*
IS_PRINT                       = GF_PRINT      "印刷設定
*---APPEND END   PSD T.SAITOH 2002/03/14 ---------------------------*
TABLES
* 2002/01/10 PSD H.Tanaka MOD ↓
*    T_OUTTAB                       = GT_WRITE  " 帳票出力用内部テーブル
T_OUTTAB                       = GT_ALV  " 帳票出力用内部テーブル
* 2002/01/10 PSD H.Tanaka MOD ↑
EXCEPTIONS
PROGRAM_ERROR                  = 1
OTHERS                         = 2
.
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                    " FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_DATE_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATE_SET.
IF PR_DATE-HIGH IS INITIAL.
G_FDAT = PR_DATE-LOW.
G_TDAT = PR_DATE-LOW.
ELSE.
G_FDAT = PR_DATE-LOW.
G_TDAT = PR_DATE-HIGH.
ENDIF.
ENDFORM.                    " FRM_DATE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_EVENT_GET
*&---------------------------------------------------------------------*
*       イベント取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_EVENT_GET.
*--- イベント取得
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
I_LIST_TYPE     = 0
IMPORTING
ET_EVENTS       = GT_EVENT
EXCEPTIONS
LIST_TYPE_WRONG = 1
OTHERS          = 2.
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

*--- 使用イベントに実行するサブルーチン名を設定
LOOP AT GT_EVENT INTO GF_EVENT.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WHERE NAME = 'TOP_OF_PAGE'.
*    GF_EVENT-FORM = 'FRM_TOP_OF_PAGE'.
*    MODIFY GT_EVENT FROM GF_EVENT.
CASE GF_EVENT-NAME.
WHEN 'TOP_OF_PAGE'.
GF_EVENT-FORM = 'FRM_TOP_OF_PAGE'.
MODIFY GT_EVENT FROM GF_EVENT.
WHEN 'CALLER_EXIT'.
GF_EVENT-FORM = 'FRM_CALLER_EXIT'.
MODIFY GT_EVENT FROM GF_EVENT.
ENDCASE.
* 2002/01/10 PSD H.Tanaka MOD ↑
ENDLOOP.

ENDFORM.                    " FRM_EVENT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_SET
*&---------------------------------------------------------------------*
*       帳票設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_WRITE_SET.
* 2002/02/06 PSD H.Tanaka ADD ↓
*--- 内部テーブル存在チェック
IF GT_WRITE IS INITIAL.
MESSAGE S204(Z1).
STOP.
ENDIF.
* 2002/02/06 PSD H.Tanaka ADD ↑

* 2002/01/10 PSD H.Tanaka ADD ↓
*--- 内部テーブル変換処理
GT_ALV[] = GT_WRITE[].
* 2002/01/10 PSD H.Tanaka ADD ↑

*--- イベント取得処理
PERFORM FRM_EVENT_GET.

*--- ページ切り替え設定
GF_LAYOUT-GROUP_CHANGE_EDIT = CNS_X.
*---APPEND START PSD T.SAITOH 2002/03/14 ALV一覧ステータス印刷拒否設定*
GF_PRINT-NO_PRINT_LISTINFOS = 'X'.
*---APPEND END   PSD T.SAITOH 2002/03/14 ---------------------------*

*--- バリアント保存設定
*--- 当日受発注一覧表
IF R_TODAY = CNS_X.
*2014/02/24 Mod Start 初期レイアウト変更
*    gf_variant-variant = '/ZS010100_01'.
GF_VARIANT-VARIANT = '/ZS010100_02'.
*2014/02/24 Mod End
*--- 内示一覧表
ELSEIF R_NAIJI  = CNS_X.
GF_VARIANT-VARIANT = '/ZS010100_02'.
*--- 未引当一覧表
ELSEIF R_MIHIKI = CNS_X.
GF_VARIANT-VARIANT = '/ZS010100_03'.
*--- 出荷ブロックリスト
ELSEIF R_BLOCK  = CNS_X.
IF R_VKGRP = CNS_X.      " 営業所コードボタン押下時
GF_VARIANT-VARIANT = '/ZS010100_04'.
ELSEIF R_PERNR = CNS_X.  " 営業員ボタン押下時
GF_VARIANT-VARIANT = '/ZS010100_05'.
ENDIF.
*--- 出荷可能リスト
ELSEIF R_KANO   = CNS_X.
IF R_VKGRP = CNS_X.      " 営業所コードボタン押下時
GF_VARIANT-VARIANT = '/ZS010100_06'.
ELSEIF R_PERNR = CNS_X.  " 営業員ボタン押下時
GF_VARIANT-VARIANT = '/ZS010100_07'.
ENDIF.
* 2002/02/05 PSD H.Tanaka ADD ↓
*--- ＥＤＩ重複データ一覧表
ELSEIF R_TYOFK  = CNS_X.
IF R_VKGRP = CNS_X.      " 営業所コードボタン押下時
GF_VARIANT-VARIANT = '/ZS010100_08'.
ELSEIF R_PERNR = CNS_X.  " 営業員ボタン押下時
GF_VARIANT-VARIANT = '/ZS010100_09'.
ENDIF.
* 2002/02/05 PSD H.Tanaka ADD ↑
ENDIF.

ENDFORM.                    " FRM_WRITE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_TVSTT_GET
*&---------------------------------------------------------------------*
*       出荷ポイント名設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_TVSTT_GET.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 出荷ポイント名設定
*  SELECT SINGLE VTEXT
*    INTO (GF_WRITE-VTEXT)
*    FROM TVSTT
*   WHERE VSTEL = GF_VBAP-VSTEL
*     AND SPRAS = CNS_J.
READ TABLE GT_TVSTT INTO GF_TVSTT
WITH TABLE KEY VSTEL = GF_VBAP-VSTEL
**** START UPD 2014/09/02 ISID19 ****
*                      SPRAS = CNS_J.
SPRAS = SY-LANGU.
**** END UPD 2014/09/02 ISID19 ****

IF SY-SUBRC <> 0.
SELECT SINGLE VSTEL SPRAS VTEXT
INTO GF_TVSTT
FROM TVSTT
WHERE VSTEL = GF_VBAP-VSTEL
**** START UPD 2014/09/02 ISID19 ****
*       AND SPRAS = CNS_J.
AND SPRAS = SY-LANGU.
**** END UPD 2014/09/02 ISID19 ****
IF SY-SUBRC = 0.
INSERT GF_TVSTT INTO TABLE GT_TVSTT.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
GF_WRITE-VTEXT = GF_TVSTT-VTEXT.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
WHEN 4.         " 対象データなし
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_TVSTT
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_TVSTT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_LFA1_GET
*&---------------------------------------------------------------------*
*       仕入先名設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_LFA1_GET.
*--- 仕入れ先名設定
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE NAME1
*    INTO (GF_WRITE-LNAME)
*    FROM LFA1
** 2002/01/30 PSD H.Tanaka MOD ↓
**   WHERE LIFNR = GF_EKPO-LLIEF."変更前
*  WHERE LIFNR = GF_EKPO-LIFNR.
READ TABLE GT_LFA1 INTO GF_LFA1
WITH TABLE KEY LIFNR = GF_EKPO-LIFNR.
IF SY-SUBRC <> 0.
*2013/11/11 Del Start
*    SELECT SINGLE lifnr name1
*      INTO gf_lfa1
*      FROM lfa1
*     WHERE lifnr = gf_ekpo-lifnr.
*2013/11/11 Del End
*2013/11/11 Add Start
*   仕入先マスタ情報[LFA1,ADRC]取得
SELECT SINGLE LFA1~LIFNR LFA1~NAME1
*2013/12/11 Mod Start 1.部屋番号
*           adrc~roomnumber
ADRC~HOUSE_NUM1
*2013/12/11 Mod End
INTO GF_LFA1
FROM LFA1 INNER JOIN ADRC
ON LFA1~ADRNR = ADRC~ADDRNUMBER
WHERE LIFNR = GF_EKPO-LIFNR.
*2013/11/11 Add End
IF SY-SUBRC = 0.
INSERT GF_LFA1 INTO TABLE GT_LFA1.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
GF_WRITE-LNAME = GF_LFA1-NAME1.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*2013/12/11 Mod Start 1.部屋番号
*2013/11/11 Add Start
*      gf_write-roomnumber = gf_lfa1-roomn. "部屋/アパート番号
GF_WRITE-HOUSE_NUM1 = GF_LFA1-ROOMN. "部屋/アパート番号
*2013/11/11 Add End
*2013/12/11 Mod End
WHEN 4.         " 対象データなし
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_LFA1
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_LFA1_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_SURYO_HENKAN
*&---------------------------------------------------------------------*
*       数量変換処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_SURYO_HENKAN.
IF GF_INFO-VBTYP = CNS_H OR
GF_INFO-VBTYP = CNS_K.
GF_WRITE-KWMENG = GF_WRITE-KWMENG * - 1.  " 受注数量
GF_WRITE-LIFMG  = GF_WRITE-LIFMG  * - 1.  " 出荷数量実績
* 2002/01/29 PSD H.Tanaka MOD ↓
*    GF_WRITE-NETWR  = GF_WRITE-NETWR  * - 1.  " 受注金額
GF_VBAP-NETWR   = GF_VBAP-NETWR  * - 1.  " 受注金額
GF_WRITE-KBMENG = GF_WRITE-KBMENG * - 1.  " 引当済数量
ENDIF.
ENDFORM.                    " FRM_SURYO_HENKAN
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_TYOFK
*&---------------------------------------------------------------------*
*       ＥＤＩ重複一覧表用内部テーブル設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_DATA_TYOFK.

**** START ADD 2015/01/05 ISID11 ****
DATA:
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING.
**** END ADD 2015/01/05 ISID11 ****

*--- 販売伝票情報設定
PERFORM FRM_INFO_TYOFK.

*-------2003/04/21 INSERT START S.IWAKI(NDSC)
PERFORM GET_DATA.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)

*--- 帳票出力用内部テーブル設定処理
LOOP AT GT_INFO INTO GF_INFO.
*--- 共通項目設定
PERFORM FRM_DATA_SET.
*--- 販売伝票取引先情報設定
PERFORM FRM_VBPA_GET1.
*--- 得意先名設定
IF SY-SUBRC = 0.
PERFORM FRM_KUNNR_GET USING    GF_VBPA-ADRNR
CHANGING GF_WRITE-KUNNR
GF_WRITE-KNAME.
ENDIF.
*--- 販売明細情報設定
PERFORM FRM_VBAP_GET3.
CHECK G_FLG_EXIT <> CNS_X.
*--- 販売明細情報設定(共通項目設定)
MOVE-CORRESPONDING GF_VBAP TO GF_WRITE.

**** START ADD 2015/01/05 ISID11 ****
CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = GF_VBAP-VNETPR.
*   小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-VNETPR RIGHT-JUSTIFIED.

CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = GF_VBAP-WAVWR.
*   小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-WAVWR RIGHT-JUSTIFIED.
**** END ADD 2015/01/05 ISID11 ****

*--- 出荷指示備考設定
PERFORM FRM_READ_TEXT USING    GF_VBAP-VBELN
GF_VBAP-POSNR
CHANGING GF_WRITE-ETC.
IF R_PERNR = CNS_X.    " 営業員コードボタン押下時
*--- 営業員名取得用販売伝票取引先情報設定
PERFORM FRM_VBPA_GET2.
ENDIF.
*--- 販売伝票納入日程行情報設定
PERFORM FRM_VBEP_GET2.
CHECK G_FLG_EXIT <> CNS_X.
*--- 数量変換処理
PERFORM FRM_SURYO_HENKAN.
*--- 計算処理
PERFORM FRM_KEISAN_NAIJI.

*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
* 得意先発注番号３５桁を設定
PERFORM FRM_SET_BSTKD_FROM_VBKD.
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*

*--- 更新処理
APPEND GF_WRITE TO GT_WRITE.
ENDLOOP.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
FREE: GT_VBAP,GT_VBEP,GT_VBEP2,GT_EKPO,
GT_VBPA,GT_VBPA2,GT_SADR,GT_VBKD.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
FREE: GT_VBPA3.
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*

ENDFORM.                    " FRM_DATA_TYOFK
*&---------------------------------------------------------------------*
*&      Form  FRM_INFO_TYOFK
*&---------------------------------------------------------------------*
*       テーブル読込条件⑦
*       販売伝票情報取得処理（ＥＤＩ重複一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_INFO_TYOFK.
CLEAR   GF_INFO.
REFRESH GT_INFO.

*--- 販売伝票情報取得
SELECT A~VBELN A~AUDAT A~AUART A~VKGRP A~VKBUR
A~VDATU A~BSTNK A~KUNNR A~VBTYP A~ERNAM
C~POSNR
D~BEZEI E~BEZEI F~BSTDK_E F~KURSK
INTO TABLE GT_INFO
FROM ( ( ( ( VBAK AS A INNER JOIN VBUK AS B
ON         A~VBELN  = B~VBELN ) INNER JOIN VBUP  AS C
ON         A~VBELN  = C~VBELN ) INNER JOIN TVKBT AS D
ON         A~VKBUR  = D~VKBUR ) INNER JOIN TVGRT AS E
ON         A~VKGRP  = E~VKGRP ) INNER JOIN VBKD  AS F
ON         C~VBELN  = F~VBELN
WHERE         A~AUDAT IN PR_DATE
AND         A~VKBUR IN PR_VKBUR
AND         A~VKGRP IN PR_VKGRP
AND         A~KUNNR IN PR_KUNNR
*---APPEND START PSD T.SAITOH 2002/07/17 ---------------------------*
AND         A~VKORG = PR_VKORG
AND         A~VTWEG = PR_VTWEG
AND         A~SPART = PR_SPART
*---APPEND END   PSD T.SAITOH 2002/07/17 ---------------------------*
AND ( NOT ( A~AUART =  CNS_KA
AND         A~VBTYP =  CNS_C )
AND   NOT ( A~AUART =  CNS_KB
AND         A~VBTYP =  CNS_C ) )
**** START UPD 2014/09/02 ISID19 ****
*     AND         D~SPRAS =  CNS_J
*     AND         E~SPRAS =  CNS_J
AND         D~SPRAS =  SY-LANGU
AND         E~SPRAS =  SY-LANGU
**** END UPD 2014/09/02 ISID19 ****
AND         F~POSNR =  '000000'.
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
MESSAGE S600(Z1) WITH TEXT-035.
STOP.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAK
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_INFO_TYOFK
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_TYOFK
*&---------------------------------------------------------------------*
*       入力チェック処理（ＥＤＩ重複データ一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_CHECK_TYOFK.
*---入力必須パラメータチェック
*---実行ボタン押下時入力必須パラメータチェック
*--- ↓  2002.05.02 MODIFY PSD K.Arai
IF SY-UCOMM+0(1) = '%'.
EXIT.
ENDIF.
*--- ↑

IF NOT ( PR_YYMM  IS INITIAL ).
CLEAR: PR_YYMM,PR_WERKS,PR_LIFSP.
REFRESH: PR_YYMM,PR_WERKS,PR_LIFSP.
MESSAGE E601(Z1) WITH TEXT-068 TEXT-022.
ELSEIF NOT ( PR_WERKS IS INITIAL ).
CLEAR: PR_WERKS,PR_LIFSP.
REFRESH: PR_WERKS,PR_LIFSP.
MESSAGE E601(Z1) WITH TEXT-068 TEXT-019.
ELSEIF NOT ( PR_LIFSP IS INITIAL ).
CLEAR: PR_LIFSP.
REFRESH: PR_LIFSP.
MESSAGE E601(Z1) WITH TEXT-068 TEXT-062.
ENDIF.

*--- ↓  2002.05.02 DELETE PSD K.Arai
*  IF SY-UCOMM <> '%042' AND
*     SY-UCOMM <> '%047' AND
*     SY-UCOMM <> '%052' AND
*     SY-UCOMM <> '%057' AND
*     SY-UCOMM <> '%063' AND
*     SY-UCOMM <> '%069' AND
*     SY-UCOMM <> '%074' AND
*     SY-UCOMM <> '%079' AND
*     SY-UCOMM <> '%084'.
*--- ↑
IF PR_DATE IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-021.
ELSEIF PR_VKBUR IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-023.
ELSEIF PR_ABGRU IS INITIAL.
MESSAGE E006(Z1) WITH TEXT-070.
ENDIF.
*--- ↓  2002.05.02 DELETE PSD K.Arai
*  ENDIF.
*--- ↑
ENDFORM.                    " FRM_CHECK_TYOFK
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET3
*&---------------------------------------------------------------------*
*       テーブル読込条件
*       販売伝票取引先構造取得処理（ＥＤＩ重複データ一覧表）
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBAP_GET3.
CLEAR   GF_VBAP.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*--- 販売伝票情報取得
*  SELECT SINGLE VBELN POSNR MATNR ARKTX  PSTYV
*                KDMAT NETWR WAERK KWMENG KBMENG
*                VRKME VSTEL NETPR KPEIN  WAVWR
*                WERKS LGORT
** 2002/02/12 PSD H.Tanaka ADD ↓
*                ABGRU
*    INTO GF_VBAP
*    FROM VBAP
*   WHERE VBELN =  GF_INFO-VBELN
*     AND POSNR =  GF_INFO-POSNR
*     AND ABGRU IN PR_ABGRU.
READ TABLE GT_VBAP INTO GF_VBAP
WITH TABLE KEY VBELN = GF_INFO-VBELN
POSNR = GF_INFO-POSNR.
IF SY-SUBRC = 0.
IF GF_VBAP-ABGRU IN PR_ABGRU.
ELSE.
CLEAR GF_VBAP.
SY-SUBRC = 4.
ENDIF.
ENDIF.

*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.         " 対象データなし
G_FLG_EXIT = CNS_X.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAP
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBAP_GET3
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_ZMENG
*&---------------------------------------------------------------------*
*       目標数量を取得
*----------------------------------------------------------------------*
*      <--P_GF_WRITE_WEMNG  text
*----------------------------------------------------------------------*
FORM FRM_GET_ZMENG CHANGING P_WEMNG.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE ZMENG
*           FROM VBAP
*           INTO P_WEMNG
*          WHERE VBELN = GF_VBAP-VBELN
*          AND   POSNR = GF_VBAP-POSNR.
*
*  CASE SY-SUBRC.
*    WHEN 0.
*    WHEN 4.
*    WHEN OTHERS.
*      MESSAGE A603(Z1) WITH G_REPID
*                            CNS_VBAP
*                            SY-SUBRC.
*  ENDCASE.
P_WEMNG = GF_VBAP-ZMENG.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
ENDFORM.                    " FRM_GET_ZMENG

*&---------------------------------------------------------------------*
*&      Form  FRM_LTX01
*&---------------------------------------------------------------------*
*       READ_TEXTで得意先品目情報テキストを取得する
*----------------------------------------------------------------------*
FORM FRM_LTX01.
*Del 2007.4.23--->
*  DATA: LT_TLINE    TYPE TABLE OF TLINE,
*        LF_TLINE    TYPE TLINE,
*        L_NAME      LIKE THEAD-TDNAME.
*
**---APPEND START PSD T.SAITOH 2002/06/21 ---------------------------*
*  CONCATENATE GF_WRITE-VBELN GF_WRITE-POSNR
*         INTO L_NAME.
**---APPEND END   PSD T.SAITOH 2002/06/21 ---------------------------*
**---MODIFY START PSD T.SAITOH 2002/06/21 ---------------------------*
**  L_NAME+0()   = PR_VKORG.       "販売組織
**  L_NAME+4(2)   = PR_VTWEG.       "流通チャネル
**  L_NAME+6(10)  = GF_WRITE-KUNNR. "得意先コード
**  L_NAME+16(18) = GF_WRITE-KDMAT. "品目コード
**     "READ_TEXT"汎用モジュール
*  CALL FUNCTION 'READ_TEXT'
*       EXPORTING
*            ID        = '0001'
*            LANGUAGE  = 'J'
*            NAME      = L_NAME
*            OBJECT    = 'VBBP'
*       TABLES
*            LINES     = LT_TLINE
*       EXCEPTIONS
*            NOT_FOUND = 4
**---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
** マスタ削除時の対応
*            REFERENCE_CHECK = 5 "マスタから削除された場合の対応
**---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*
*            OTHERS    = 8.
**---MODIFY END   PSD T.SAITOH 2002/06/21 ---------------------------*
*  CASE SY-SUBRC.
*    WHEN 0.
*      READ TABLE LT_TLINE INTO LF_TLINE INDEX 1.
*      GF_WRITE-LTX01 = LF_TLINE-TDLINE+0(20).        "得意先回答納期
**---MODIFY START PSD T.SAITOH 2002/07/15 ---------------------------*
** マスタ削除時の対応
**    WHEN 4."マスタから削除された場合取得できない時と同対応
*    WHEN 4 OR 5.
**---MODIFY END   PSD T.SAITOH 2002/07/15 ---------------------------*
*      GF_WRITE-LTX01 = ''.                   "ブランク設定
*    WHEN 8.
**---MODIFY START PSD T.SAITOH 2002/07/15 ---------------------------*
**      MESSAGE E001(Z1) WITH TEXT-016
*      MESSAGE E001(Z1) WITH 'READ_TEXT'
**---MODIFY END   PSD T.SAITOH 2002/07/15 ---------------------------*
*                            SY-SUBRC.
*  ENDCASE.
*Del 2007.04.23 <---
* Add 2006.06.07 --->
GF_WRITE-LTX01 = ''.
IF GF_WRITE-LTX01 EQ '' .

SELECT SINGLE POSTX FROM KNMT
INTO  GF_WRITE-LTX01
WHERE VKORG EQ PR_VKORG
AND  VTWEG EQ PR_VTWEG
AND  KUNNR EQ GF_WRITE-KUNNR
AND  MATNR EQ GF_WRITE-MATNR .
IF SY-SUBRC NE 0 OR GF_WRITE-LTX01 EQ '' .
SELECT SINGLE MAKTX FROM MAKT
INTO GF_WRITE-LTX01
WHERE MATNR EQ GF_WRITE-MATNR
AND SPRAS EQ SY-LANGU .
ENDIF .

ENDIF .
* Add 2006.06.07 <---
ENDFORM.                                                    " FRM_LTX01
*---APPEND START PSD T.SAITOH 2002/07/15 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_BSTKD_FROM_VBKD
*&---------------------------------------------------------------------*
*       VBKDから得意先発注番号３５桁を設定
*----------------------------------------------------------------------*
FORM FRM_SET_BSTKD_FROM_VBKD.

CLEAR: GF_WRITE-BSTNK.

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE BSTKD
*                INTO GF_WRITE-BSTNK
*                FROM VBKD
*               WHERE VBELN = GF_WRITE-VBELN
*                 AND POSNR = 0.
READ TABLE GT_VBKD INTO GF_VBKD
WITH TABLE KEY VBELN = GF_WRITE-VBELN
POSNR = 0.
IF SY-SUBRC <> 0.
SELECT SINGLE VBELN POSNR BSTKD
INTO GF_VBKD
FROM VBKD
WHERE VBELN = GF_WRITE-VBELN
AND POSNR = 0.
IF SY-SUBRC = 0.
INSERT GF_VBKD INTO TABLE GT_VBKD.
ENDIF.
ENDIF.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)

CASE SY-SUBRC.
WHEN 0.
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
GF_WRITE-BSTNK = GF_VBKD-BSTKD.
*-------2003/04/21 UPDATE END   S.IWAKI(NDSC)
WHEN 4.
WHEN OTHERS.
MESSAGE A603(Z1) WITH G_REPID
'VBKD'
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SET_BSTKD_FROM_VBKD
*---APPEND END   PSD T.SAITOH 2002/07/15 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_MSKA
*&---------------------------------------------------------------------*
*       受注在庫存在チェック
*----------------------------------------------------------------------*
FORM FRM_CHECK_MSKA.
*---MODIFY START PSD T.SAITOH 2002/08/05 ---------------------------*
*  DATA: L_KALAB TYPE MSKA-KALAB. "利用可能数量：ダミー

CLEAR G_KALAB."出荷可能数を初期化
*---MODIFY END   PSD T.SAITOH 2002/08/05 ---------------------------*

*-------2003/04/21 UPDATE START S.IWAKI(NDSC)
*  SELECT SINGLE KALAB
*                INTO G_KALAB
*                FROM MSKA
*               WHERE MATNR = GF_VBAP-MATNR
*                 AND WERKS = GF_VBAP-WERKS
*                 AND LGORT = 'H000'
*                 AND SOBKZ = 'E'
*                 AND VBELN = GF_VBAP-VBELN
*                 AND POSNR = GF_VBAP-POSNR
*                 AND KALAB <> 0.
READ TABLE GT_MSKA INTO GF_MSKA
WITH TABLE KEY MATNR = GF_VBAP-MATNR
WERKS = GF_VBAP-WERKS
VBELN = GF_VBAP-VBELN
POSNR = GF_VBAP-POSNR.
*-------2003/04/21 UPDATE START S.IWAKI(NDSC)

*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
*-------2003/04/21 INSERT START S.IWAKI(NDSC)
G_KALAB = GF_MSKA-KALAB.
*-------2003/04/21 INSERT END   S.IWAKI(NDSC)
WHEN 4.         " 対象データなし
G_FLG_EXIT = CNS_X.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBAP
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_CHECK_MSKA
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_PRINT_PARAMETERS
*&---------------------------------------------------------------------*
*       ALV印刷強制処理
*----------------------------------------------------------------------*
FORM FRM_SET_PRINT_PARAMETERS.

DATA:LF_PRI_PARAMS LIKE PRI_PARAMS.
TABLES USR01.

SELECT SINGLE * FROM USR01 WHERE BNAME = SY-UNAME.

* プリンタ設定
LF_PRI_PARAMS-PDEST = USR01-SPLD.
* 書式設定
LF_PRI_PARAMS-PAART = 'X_65_255'.

CALL FUNCTION 'SET_PRINT_PARAMETERS'
EXPORTING
DESTINATION = LF_PRI_PARAMS-PDEST
IMMEDIATELY = 'X'
LAYOUT      = LF_PRI_PARAMS-PAART
LINE_COUNT  = 65
LINE_SIZE   = 255
NEW_LIST_ID = 'X'
RELEASE     = USR01-SPDA.


ENDFORM.                    " FRM_SET_PRINT_PARAMETERS

*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_TVKBT
*&---------------------------------------------------------------------*
*       営業所
*----------------------------------------------------------------------*
*      <--P_L_VKBUR  営業所名
*----------------------------------------------------------------------*
FORM FRM_SELECT_TVKBT USING    P_L_VKBUR.

SELECT SINGLE BEZEI
INTO P_L_VKBUR
FROM TVKBT
WHERE VKBUR = GT_ALV-VKBUR
**** START UPD 2014/09/02 ISID19 ****
*             AND SPRAS = 'J'.
AND SPRAS = SY-LANGU.
**** END UPD 2014/09/02 ISID19 ****

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'TVKBT' SY-SUBRC.
ENDCASE.


ENDFORM.                    " FRM_SELECT_TVKBT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_TVGRT
*&---------------------------------------------------------------------*
*       営業グループ
*----------------------------------------------------------------------*
*      <--P_L_VKGRP  営業グループ
*----------------------------------------------------------------------*
FORM FRM_SELECT_TVGRT USING    P_L_VKGRP.

SELECT SINGLE BEZEI
INTO P_L_VKGRP
FROM TVGRT
WHERE VKGRP = GT_ALV-VKGRP
**** START UPD 2014/09/02 ISID19 ****
*             AND SPRAS = 'J'.
AND SPRAS = SY-LANGU.
**** END UPD 2014/09/02 ISID19 ****

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'TVGRT' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SELECT_TVGRT
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT_KNB1
*&---------------------------------------------------------------------*
*       納品書種別設定
*----------------------------------------------------------------------*
*      -->P_ZS01     ID
*      -->P_KUNNR    NAME
*      -->P_KNB1     OBJECT
*      <--P_TDLINE   納品書種別
*----------------------------------------------------------------------*
FORM FRM_READ_TEXT_KNB1 USING    P_KUNNR
CHANGING P_TDLINE.

DATA: LT_TLINE    TYPE TABLE OF TLINE,
LF_TLINE    TYPE TLINE,
L_KUNNR     LIKE THEAD-TDNAME.

**** START UPD 2015/01/05 ISID11 ****
*  CONCATENATE P_KUNNR
*              'C001'
*               INTO L_KUNNR.
L_KUNNR+0(10) = P_KUNNR.
L_KUNNR+10(4) = PR_BUKRS.
**** END UPD 2015/01/05 ISID11 ****

CALL FUNCTION 'READ_TEXT'
EXPORTING
CLIENT                        = SY-MANDT
ID                            = 'ZS01'
**** START UPD 2014/09/02 ISID19 ****
*      LANGUAGE                      = 'J'
LANGUAGE                      = SY-LANGU
**** END UPD 2014/09/02 ISID19 ****
NAME                          = L_KUNNR
OBJECT                        = 'KNB1'
*     ARCHIVE_HANDLE                = 0
*     LOCAL_CAT                     = ' '
*   IMPORTING
*     HEADER                        =
TABLES
LINES           = LT_TLINE
EXCEPTIONS
ID                            = 1
LANGUAGE                      = 2
NAME                          = 3
NOT_FOUND                     = 4
OBJECT                        = 5
REFERENCE_CHECK               = 6
WRONG_ACCESS_TO_ARCHIVE       = 7
OTHERS                        = 8.

CASE SY-SUBRC.
WHEN 0.
READ TABLE LT_TLINE INTO LF_TLINE INDEX 1.
P_TDLINE = LF_TLINE-TDLINE+0(2).
WHEN OTHERS.
P_TDLINE = SPACE.
ENDCASE.


ENDFORM.                    " FRM_READ_TEXT_KNB1
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       データ読み込み
*----------------------------------------------------------------------*
FORM GET_DATA.
*2014/02/03 Add Start 削除フラグ
TYPES TYP_LOEKZ TYPE RANGE OF EKPO-LOEKZ.
DATA: LR_LOEKZ  TYPE TYP_LOEKZ,
LF_LOEKZ  LIKE LINE OF LR_LOEKZ.

* 発注明細は、削除/ロックされていないものが対象
LF_LOEKZ-SIGN   = 'I'.
LF_LOEKZ-OPTION = 'EQ'.
APPEND LF_LOEKZ TO LR_LOEKZ.

* 当日受発注一覧の場合、削除/ロックも対象とする
IF R_TODAY = CNS_X.      " 当日受発注一覧表
REFRESH LR_LOEKZ.
ENDIF.
*2014/02/03 Add End
*--- 販売伝票情報取得
SELECT VBELN POSNR MATNR ARKTX  PSTYV
KDMAT NETWR WAERK KWMENG KBMENG
VRKME VSTEL NETPR KPEIN WAVWR
WERKS LGORT ABGRU ZMENG MWSBP
INTO TABLE GT_VBAP
FROM VBAP
FOR ALL ENTRIES IN GT_INFO
WHERE VBELN = GT_INFO-VBELN
AND POSNR = GT_INFO-POSNR.

SORT GT_VBAP BY VBELN POSNR.

*--- 販売伝票情報取得
SELECT VBELN POSNR ETENR EDATU
ETTYP LIFSP BANFN BNFPO
INTO TABLE GT_VBEP
FROM VBEP
FOR ALL ENTRIES IN GT_INFO
WHERE VBELN =  GT_INFO-VBELN
AND POSNR =  GT_INFO-POSNR.

SORT GT_VBEP BY VBELN POSNR ETENR.

GT_VBEP2[] = GT_VBEP.
DELETE GT_VBEP2 WHERE BANFN = SPACE
AND BNFPO = 0.
*2007/06/15 ADD START
IF GT_VBEP2 IS INITIAL.
EXIT.
ENDIF.
*2007/06/15 ADD END

*--- 購買伝票情報取得
SELECT C~BANFN C~BNFPO A~EBELN A~EBELP A~NETPR A~MENGE
B~WAERS B~WKURS B~LIFNR
C~WEMNG C~EINDT
A~PEINH
*---ADD BY DMC 2008/05/07 BEGIN
A~MEINS      "発注単位
*---ADD BY DMC 2008/05/07 END
*2011/05/23 Add Start
B~EKGRP      "購買Grp
*2011/05/23 Add End
*2013/11/11 Add Start
A~MWSKZ      "消費税コード
*2013/11/11 Add End
INTO TABLE GT_EKPO
FROM ( EKPO AS A INNER JOIN EKKO AS B
ON   A~EBELN  = B~EBELN ) INNER JOIN EKET  AS C
ON   A~EBELN  = C~EBELN
AND   A~EBELP  = C~EBELP
FOR ALL ENTRIES IN GT_VBEP2
*2014/02/03 Mod Start 削除フラグ
*   WHERE   a~loekz = ''
WHERE   A~LOEKZ IN LR_LOEKZ
*2014/02/03 Add End
AND   C~ETENR = CNS_0001
AND   C~BANFN = GT_VBEP2-BANFN
AND   C~BNFPO = GT_VBEP2-BNFPO.

SORT GT_EKPO BY BANFN BNFPO.

ENDFORM.                    " GET_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_DATA2
*&---------------------------------------------------------------------*
*       データ読み込み２
*----------------------------------------------------------------------*
FORM GET_DATA2.
SELECT A~VBELV A~POSNV A~VBELN A~VBTYP_N
*---APPEND START DMC A.MASUDA 2004/09/29 ------------------------------*
D~WBSTK
*---APPEND END   DMC A.MASUDA 2004/09/29 ------------------------------*
C~LFIMG
INTO TABLE GT_VBFA
FROM ( VBFA AS A INNER JOIN LIKP AS B
ON   A~VBELN    = B~VBELN ) INNER JOIN LIPS AS C
ON   A~VBELN    = C~VBELN
AND   A~POSNN    = C~POSNR
AND   B~VBELN    = C~VBELN
*---APPEND START DMC A.MASUDA 2004/09/29 ------------------------------*
INNER JOIN VBUK AS D
ON A~VBELN    = D~VBELN
*---APPEND END   DMC A.MASUDA 2004/09/29 ------------------------------*
FOR ALL ENTRIES IN GT_VBAP
WHERE   A~VBELV    = GT_VBAP-VBELN
AND   A~POSNV    = GT_VBAP-POSNR
AND   A~VBTYP_N  = CNS_J.
SORT GT_VBFA BY VBELV POSNV.

ENDFORM.                                                    " GET_DATA2
*&---------------------------------------------------------------------*
*&      Form  GET_DATA3
*&---------------------------------------------------------------------*
*       データ読み込み３
*----------------------------------------------------------------------*
FORM GET_DATA3.
SELECT MATNR WERKS VBELN POSNR KALAB
INTO TABLE GT_MSKA
FROM MSKA
FOR ALL ENTRIES IN GT_VBAP
WHERE MATNR = GT_VBAP-MATNR
AND WERKS = GT_VBAP-WERKS
AND LGORT = 'H000'
AND SOBKZ = 'E'
AND VBELN = GT_VBAP-VBELN
AND POSNR = GT_VBAP-POSNR
AND KALAB <> 0.

SORT GT_MSKA BY MATNR WERKS VBELN POSNR.

ENDFORM.                                                    " GET_DATA3
*&---------------------------------------------------------------------*
*&      Form  FRM_GENKA_SET_KOBETSU
*&---------------------------------------------------------------------*
* 個別購買原価設定
*----------------------------------------------------------------------*
FORM FRM_GENKA_SET_KOBETSU.

**** START ADD 2015/01/05 ISID11 ****
DATA:
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING.
**** END ADD 2015/01/05 ISID11 ****

* 原価項目設定
PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
GF_VBAP-WAVWR
CHANGING G_WAVWR.
IF GF_WRITE-KWMENG <> CNS_ZERO.

**** START UPD 2015/01/05 ISID11 ****
*    GF_WRITE-WAVWR = G_WAVWR / GF_VBAP-KWMENG.
CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = G_WAVWR / GF_VBAP-KWMENG.
*   小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-WAVWR RIGHT-JUSTIFIED.
**** END UPD 2015/01/05 ISID11 ****

ENDIF.
* 原価（円建て）項目設定
* ADD 2004/02/12 Y.Tsukahara START
CLEAR: G_WAVWR_Y.
* ADD 2004/02/12 Y.Tsukahara END
PERFORM FRM_KINGAKU_HENKAN USING    GF_EKPO-WAERS
GF_EKPO-ENETPR
CHANGING G_WAVWR_Y.
* ADD 基本数量単位と発注数量単位取得 2004/02/12 Y.Tsukahara START
CLEAR: WA_EINA.
*
* MOD 2004/03/29 Y.Tsukahara START
*  SELECT SINGLE UMREZ UMREN FROM EINA INTO WA_EINA
SELECT SINGLE UMREZ UMREN MEINS FROM EINA INTO WA_EINA
* MOD 2004/03/29 Y.Tsukahara END
WHERE LIFNR = GF_EKPO-LIFNR
AND   MATNR = GF_VBAP-MATNR.
* ADD 2004/02/12 Y.Tsukahara END

**** START UPD 2014/09/02 ISID19 ****
*   IF ( GF_VBAP-WAERK = CNS_JPY AND
*       GF_EKPO-WAERS = CNS_JPY ).
IF ( GF_VBAP-WAERK = G_WAERS AND
GF_EKPO-WAERS = G_WAERS ).
**** END UPD 2014/09/02 ISID19 ****

*1
* 受注通貨単位と発注通貨単位がともに”JPY”の場合
* MOD 2004/01/30 Y.Tsukahara START
*    GF_WRITE-GYEN1 = G_WAVWR_Y.
*  価格単位考慮

CASE GF_EKPO-PEINH.
WHEN 0.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara START
**** START UPD 2015/01/05 ISID11 ****
*        GF_WRITE-GYEN1 = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ ).
L_AMOUNT = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ ).
**** END UPD 2015/01/05 ISID11 ****

WHEN OTHERS.
**** START UPD 2015/01/05 ISID11 ****
*        GF_WRITE-GYEN1 = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ )
*                         / GF_EKPO-PEINH.
L_AMOUNT = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ )
/ GF_EKPO-PEINH.
**** END UPD 2015/01/05 ISID11 ****
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara END
ENDCASE.
* MOD 2004/01/30 Y.Tsukahara END

**** START ADD 2015/01/05 ISID11 ****
CLEAR:
L_NOZERO.

*   小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-GYEN1 RIGHT-JUSTIFIED.
**** END ADD 2015/01/05 ISID11 ****

* MOD 2004/02/12 Y.Tsukahara START
* ADD 2004/01/29 Y.Tsukahara START
*    G_WAVWR = GF_WRITE-GYEN1 * GF_VBAP-KWMENG.
*--- 原価金額（円建て）計算
*    PERFORM FRM_GENKIN_SET.
PERFORM FRM_GENKIN_SET2 USING G_WAVWR_Y.
* ADD 2004/01/29 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara END

**** START UPD 2014/09/02 ISID19 ****
*  ELSEIF ( GF_VBAP-WAERK <> CNS_JPY AND
*           GF_EKPO-WAERS <> CNS_JPY ).
ELSEIF ( GF_VBAP-WAERK <> G_WAERS AND
GF_EKPO-WAERS <> G_WAERS ).
**** END UPD 2014/09/02 ISID19 ****

*2
* 受注通貨単位と発注通貨単位がともに”JPY”以外の場合
* MOD 2004/01/30 Y.Tsukahara START
*    GF_WRITE-GYEN1 = G_WAVWR_Y.
*  価格単位考慮

CASE GF_EKPO-PEINH.
WHEN 0.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara START
**** START UPD 2015/01/05 ISID11 ****
*        GF_WRITE-GYEN1 = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ ).
L_AMOUNT = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ ).
**** END UPD 2015/01/05 ISID11 ****

WHEN OTHERS.
**** START UPD 2015/01/05 ISID11 ****
*        GF_WRITE-GYEN1 = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ )
*                         / GF_EKPO-PEINH.
L_AMOUNT = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ )
/ GF_EKPO-PEINH.
**** END UPD 2015/01/05 ISID11 ****
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara END
ENDCASE.
* MOD 2004/01/30 Y.Tsukahara END

**** START ADD 2015/01/05 ISID11 ****
CLEAR:
L_NOZERO.

*   小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-GYEN1 RIGHT-JUSTIFIED.
**** END ADD 2015/01/05 ISID11 ****

* MOD 2004/02/12 Y.Tsukahara START
* ADD 2004/01/29 Y.Tsukahara START
*    G_WAVWR = GF_WRITE-GYEN1 * GF_VBAP-KWMENG.
*--- 原価金額（円建て）計算
*    PERFORM FRM_GENKIN_SET.
PERFORM FRM_GENKIN_SET2 USING G_WAVWR_Y.
* ADD 2004/01/29 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara END

**** START UPD 2014/09/02 ISID19 ****
*   ELSEIF ( GF_VBAP-WAERK <> CNS_JPY AND
*           GF_EKPO-WAERS =  CNS_JPY ).
ELSEIF ( GF_VBAP-WAERK <> G_WAERS AND
GF_EKPO-WAERS =  G_WAERS ).
**** END UPD 2014/09/02 ISID19 ****

*3
* 受注通貨単位が”JPY”以外で、発注通貨単位が”JPY”の場合
* MOD 2004/01/30 Y.Tsukahara START
*    GF_WRITE-GYEN1 = G_WAVWR_Y / GF_WRITE-STCUR.
*  価格単位考慮

CASE GF_EKPO-PEINH.
WHEN 0.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara START
**** START UPD 2015/01/05 ISID11 ****
*        GF_WRITE-GYEN1 = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ )
*                         / GF_WRITE-STCUR.
L_AMOUNT = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ )
/ GF_WRITE-STCUR.
**** END UPD 2015/01/05 ISID11 ****

WHEN OTHERS.
**** START UPD 2015/01/05 ISID11 ****
*        GF_WRITE-GYEN1 = ( G_WAVWR_Y / GF_EKPO-PEINH )
*                         * ( WA_EINA-UMREN / WA_EINA-UMREZ )
*                         / GF_WRITE-STCUR.
L_AMOUNT = ( G_WAVWR_Y / GF_EKPO-PEINH )
* ( WA_EINA-UMREN / WA_EINA-UMREZ )
/ GF_WRITE-STCUR.
**** END UPD 2015/01/05 ISID11 ****
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara END
ENDCASE.
* MOD 2004/01/30 Y.Tsukahara END

**** START ADD 2015/01/05 ISID11 ****
CLEAR:
L_NOZERO.

*   小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-GYEN1 RIGHT-JUSTIFIED.
**** END ADD 2015/01/05 ISID11 ****

* MOD 2004/02/12 Y.Tsukahara START
* ADD 2004/01/29 Y.Tsukahara START
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara START
*    GF_WRITE-GYEN2 = ( G_WAVWR_Y / GF_EKPO-PEINH )
*                     * ( wa_eina-UMREN / wa_eina-UMREZ )
*                     * GF_VBAP-KWMENG.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara END
*    IF GF_INFO-VBTYP = CNS_H OR
*       GF_INFO-VBTYP = CNS_K.
*      GF_WRITE-GYEN2 = GF_WRITE-GYEN2 * - 1.
*    ENDIF.
PERFORM FRM_GENKIN_SET2 USING G_WAVWR_Y.
* ADD 2004/01/29 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara END

**** START UPD 2014/09/02 ISID19 ****
*  ELSEIF ( GF_VBAP-WAERK =  CNS_JPY AND
*           GF_EKPO-WAERS <> CNS_JPY ).
ELSEIF ( GF_VBAP-WAERK =  G_WAERS AND
GF_EKPO-WAERS <> G_WAERS ).
**** END UPD 2014/09/02 ISID19 ****
*4
* 受注通貨単位が”JPY”で、発注通貨単位が”JPY”以外の場合
* MOD 2004/01/30 Y.Tsukahara START
*    GF_WRITE-GYEN1 = G_WAVWR_Y * GF_EKPO-WKURS.
*  価格単位考慮

CASE GF_EKPO-PEINH.
WHEN 0.
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara START
**** START UPD 2015/01/05 ISID11 ****
*        GF_WRITE-GYEN1 = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ )
*                         * GF_EKPO-WKURS.
L_AMOUNT = G_WAVWR_Y * ( WA_EINA-UMREN / WA_EINA-UMREZ )
* GF_EKPO-WKURS.
**** END UPD 2015/01/05 ISID11 ****

WHEN OTHERS.
**** START UPD 2015/01/05 ISID11 ****
*        GF_WRITE-GYEN1 = ( G_WAVWR_Y / GF_EKPO-PEINH )
*                         * ( WA_EINA-UMREN / WA_EINA-UMREZ )
*                         * GF_EKPO-WKURS.
L_AMOUNT = ( G_WAVWR_Y / GF_EKPO-PEINH )
* ( WA_EINA-UMREN / WA_EINA-UMREZ )
* GF_EKPO-WKURS.
**** END UPD 2015/01/05 ISID11 ****
* MOD 2004/02/12 基本数量単位と発注数量単位考慮 Y.Tsukahara END
ENDCASE.
* MOD 2004/01/30 Y.Tsukahara END

**** START ADD 2015/01/05 ISID11 ****
CLEAR:
L_NOZERO.

*   小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-GYEN1 RIGHT-JUSTIFIED.
**** END ADD 2015/01/05 ISID11 ****

* MOD 2004/02/12 Y.Tsukahara START
* ADD 2004/01/29 Y.Tsukahara START
*    G_WAVWR = GF_WRITE-GYEN1 * GF_VBAP-KWMENG.
*--- 原価金額（円建て）計算
*    PERFORM FRM_GENKIN_SET.
PERFORM FRM_GENKIN_SET2 USING G_WAVWR_Y.
* ADD 2004/01/29 Y.Tsukahara END
* MOD 2004/02/12 Y.Tsukahara END
ENDIF.
ENDFORM.                    " FRM_GENKA_SET_KOBETSU
*&---------------------------------------------------------------------*
*&      Form  FRM_GENKA_SET_ZAIKO
*&---------------------------------------------------------------------*
* 在庫原価設定
*----------------------------------------------------------------------*
FORM FRM_GENKA_SET_ZAIKO.
DATA:
**** START ADD 2015/01/05 ISID11 ****
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING,
**** END ADD 2015/01/05 ISID11 ****
LO_VERPR TYPE MBEW-VERPR.
* 移動平均原価取得
SELECT SINGLE VERPR
INTO LO_VERPR
FROM MBEW
WHERE MATNR = GF_VBAP-MATNR
AND BWKEY = GF_VBAP-WERKS
AND BWTAR = ''.
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
WHEN 4.    " 対象データなし
*2009/05/29 DEL START
*      MESSAGE S600(Z1) WITH TEXT-015.
*      STOP.
*2009/05/29 DEL END
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
'MBEW'
SY-SUBRC.
ENDCASE.
* 原価項目設定
PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
GF_VBAP-WAVWR
CHANGING G_WAVWR.
IF GF_WRITE-KWMENG <> CNS_ZERO.

**** START UPD 2015/01/05 ISID11 ****
*    GF_WRITE-WAVWR = G_WAVWR / GF_VBAP-KWMENG.
CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = G_WAVWR / GF_VBAP-KWMENG.

*   小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-WAVWR RIGHT-JUSTIFIED.
**** END UPD 2015/01/05 ISID11 ****

ENDIF.
* 原価（円建て）項目設定
PERFORM FRM_KINGAKU_HENKAN USING    GF_VBAP-WAERK
LO_VERPR
CHANGING G_WAVWR_Y.

**** START UPD 2014/09/02 ISID19 ****
*  IF ( GF_VBAP-WAERK = CNS_JPY  ).
IF ( GF_VBAP-WAERK = G_WAERS  ).
**** END UPD 2014/09/02 ISID19 ****
*1
* 受注通貨単位が”JPY”の場合
**** START UPD 2015/01/05 ISID11 ****
*    GF_WRITE-GYEN1 = G_WAVWR_Y.
L_AMOUNT = G_WAVWR_Y.
**** END UPD 2015/01/05 ISID11 ****

ELSE.
*2
* 受注通貨単位が”JPY”以外の場合
**** START UPD 2015/01/05 ISID11 ****
*    GF_WRITE-GYEN1 = G_WAVWR_Y * GF_WRITE-STCUR.
L_AMOUNT = G_WAVWR_Y * GF_WRITE-STCUR.
**** END UPD 2015/01/05 ISID11 ****

ENDIF.

**** START ADD 2015/01/05 ISID11 ****
CLEAR:
L_NOZERO.

* 小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-GYEN1 RIGHT-JUSTIFIED.
**** END ADD 2015/01/05 ISID11 ****

*--- 原価金額（円建て）計算
PERFORM FRM_GENKIN_SET.
ENDFORM.                    " FRM_GENKA_SET_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  FRM_GENKIN_SET2
*&---------------------------------------------------------------------*
*       原価金額(円建て)計算処理
*----------------------------------------------------------------------*
*      -->P_G_WAVWR_Y  外部通貨変換済み発注正味価格
* ADD 2004.02.13 Y.Tsukahara
*----------------------------------------------------------------------*
FORM FRM_GENKIN_SET2 USING    P_G_WAVWR_Y.
*
* ADD 2004/03/29 Y.Tsukahara START
DATA: L_MSG(24) TYPE C VALUE 'MD_CONVERT_MATERIAL_UNIT'.

MOVE GF_VBAP-KWMENG TO WA_MENGE.
* 数量変換処理
CALL FUNCTION 'MD_CONVERT_MATERIAL_UNIT'
EXPORTING
I_MATNR              = GF_VBAP-MATNR
I_IN_ME              = GF_VBAP-VRKME
I_OUT_ME             = WA_EINA-MEINS
I_MENGE              = WA_MENGE
IMPORTING
E_MENGE              = WA_MENGE
EXCEPTIONS
ERROR_IN_APPLICATION = 1
ERROR                = 2
OTHERS               = 3.

* DEL 2004/04/02 Y.Tsukahara START
*  IF SY-SUBRC <> 0.
*    MESSAGE E001(Z1) WITH L_MSG SY-SUBRC.
*  ENDIF.
* DEL 2004/04/02 Y.Tsukahara END
* ADD 2004/03/29 Y.Tsukahara END
* MOD 2004/03/29 Y.Tsukahara START
*  GF_WRITE-GYEN2 = ( P_G_WAVWR_Y / GF_EKPO-PEINH )
*                   * ( WA_EINA-UMREN / WA_EINA-UMREZ )
*                   * GF_VBAP-KWMENG * GF_WRITE-WKURS.
GF_WRITE-GYEN2 = ( P_G_WAVWR_Y / GF_EKPO-PEINH )
*                  * ( WA_EINA-UMREN / WA_EINA-UMREZ )
* WA_MENGE * GF_WRITE-WKURS.
* MOD 2004/03/29 Y.Tsukahara END
IF GF_INFO-VBTYP = CNS_H OR
GF_INFO-VBTYP = CNS_K.
GF_WRITE-GYEN2 = GF_WRITE-GYEN2 * - 1.
ENDIF.
*
* ADD 2004/03/29 Y.Tsukahara START
CLEAR: WA_MENGE.
* ADD 2004/03/29 Y.Tsukahara END
ENDFORM.                    " FRM_GENKIN_SET2

*---APPEND START NDSC A.MASUDA 2004/04/08 --------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET3
*&---------------------------------------------------------------------*
*       出荷先住所取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_VBPA_GET3.

DATA:WA_ADDNAME LIKE ZSLIST_V07_NEW-ADDNAME.

*--- 出荷先住所取得
READ TABLE GT_VBPA3 INTO GF_VBPA3
WITH TABLE KEY VBELN = GF_INFO-VBELN
POSNR = '000000'
PARVW = CNS_WE.
*---DELETE START NDSC A.MASUDA 2004/04/21 --------------------------*
*  IF SY-SUBRC <> 0.
*    SELECT SINGLE A~VBELN A~POSNR A~PARVW A~KUNNR B~NAME1 B~STREET
*      INTO GF_VBPA3
*      FROM VBPA AS A INNER JOIN ADRC AS B
*        ON B~ADDRNUMBER = A~ADRNR
*     WHERE A~VBELN = GF_INFO-VBELN
*       AND A~POSNR = '000000'
*       AND A~PARVW = CNS_WE.
*    IF SY-SUBRC = 0.
*      INSERT GF_VBPA3 INTO TABLE GT_VBPA3.
*    ENDIF.
*  ENDIF.
*---DELETE END   NDSC A.MASUDA 2004/04/21 --------------------------*
*---APPEND START NDSC A.MASUDA 2004/04/21 --------------------------*
IF SY-SUBRC <> 0.
SELECT SINGLE A~VBELN A~POSNR A~PARVW A~KUNNR B~NAME2
B~CITY1 B~STREET C~BEZEI
INTO GF_VBPA3
FROM VBPA AS A
INNER JOIN ADRC AS B
ON B~ADDRNUMBER = A~ADRNR
INNER JOIN T005U AS C
ON C~BLAND = B~REGION
**** START ADD 2014/09/02 ISID19 ****
AND C~LAND1 = A~LAND1
**** END ADD 2014/09/02 ISID19 ****
WHERE A~VBELN = GF_INFO-VBELN
AND A~POSNR = '000000'
AND A~PARVW = CNS_WE.
**** START DEL 2014/09/02 ISID19 ****
*       AND C~SPRAS = 'J'
*       AND C~LAND1 = 'JP'.
**** END DELD 2014/09/02 ISID19 ****

IF SY-SUBRC = 0.
INSERT GF_VBPA3 INTO TABLE GT_VBPA3.
ENDIF.
ENDIF.
*---APPEND END   NDSC A.MASUDA 2004/04/21 --------------------------*
*--- エラー処理
CASE SY-SUBRC.
WHEN 0.
*---APPEND START NDSC A.MASUDA 2004/04/21 --------------------------*
GF_WRITE-KUNNR_WE = GF_VBPA3-KUNNR.
GF_WRITE-KNAME_WE = GF_VBPA3-NAME2.
CONCATENATE GF_VBPA3-CITY1 GF_VBPA3-STREET
INTO WA_ADDNAME.
GF_WRITE-ADDNAME  = WA_ADDNAME.
GF_WRITE-BEZEI    = GF_VBPA3-BEZEI.
*---APPEND END   NDSC A.MASUDA 2004/04/21 --------------------------*
*---DELETE START NDSC A.MASUDA 2004/04/21 --------------------------*
*      GF_WRITE-STREET   = GF_VBPA3-STREET.
*      GF_WRITE-KUNNR_WE = GF_VBPA3-KUNNR.
*      GF_WRITE-KNAME_WE = GF_VBPA3-NAME1.
*      GF_WRITE-STREET   = GF_VBPA3-STREET.
*---DELETE END   NDSC A.MASUDA 2004/04/21 --------------------------*
WHEN 4.         " 対象データなし
G_FLG_EXIT = CNS_X.
WHEN OTHERS.    " システムエラー
MESSAGE A603(Z1) WITH G_REPID
CNS_VBPA
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_VBPA_GET3
*---APPEND END   NDSC A.MASUDA 2004/04/08 --------------------------*
*---APPEND START DMC A.MASUDA 2005/01/05 --------------------------*
*&---------------------------------------------------------------------*
*&      FORM CALL_MD_CONVERT_MATERIAL_UNIT
*&---------------------------------------------------------------------*
*       出荷数量変換処理
*----------------------------------------------------------------------*
*   -->  PA_MENGE_B 出荷数量(変換前)
*   <--  PA_MENGE_A 出荷数量(変換後)
*----------------------------------------------------------------------*
FORM CALL_MD_CONVERT_MATERIAL_UNIT USING PA_MENGE_B
PA_MENGE_A.

DATA:
LW_MEINS LIKE MARA-MEINS.

* 品目マスタの販売単位を取得
*2007/06/15 MOD START S.KURAT
SELECT SINGLE VRKME
FROM MVKE
INTO LW_MEINS
WHERE MATNR = GF_VBAP-MATNR
AND VKORG = PR_VKORG
AND VTWEG = PR_VTWEG.
IF SY-SUBRC <> 0 OR
LW_MEINS IS INITIAL.
SELECT SINGLE MEINS
FROM MARA
INTO LW_MEINS
WHERE MATNR = GF_VBAP-MATNR.
ENDIF.
*  SELECT SINGLE MEINS
*    FROM MARA
*    INTO LW_MEINS
*   WHERE MATNR = GF_VBAP-MATNR.
*2007/06/15 MOD END S.KURATA

* 数量変換処理
CALL FUNCTION 'MD_CONVERT_MATERIAL_UNIT'
EXPORTING
I_MATNR              = GF_VBAP-MATNR
*2007/06/15 MOD START S.KURATA
I_IN_ME              = GF_VBAP-VRKME
I_OUT_ME             = LW_MEINS
**---APPEND START DMC Y.OTA 2006/11/16 -----------------------*
**            I_IN_ME              = GF_VBAP-VRKME
**            I_OUT_ME             = LW_MEINS
*             I_IN_ME              = LW_MEINS
*             I_OUT_ME             = GF_VBAP-VRKME
**---APPEND END   DMC Y.OTA 2006/11/16 -----------------------*
*2007/06/15 MOD END S.KURATA
I_MENGE              = PA_MENGE_B
IMPORTING
E_MENGE              = PA_MENGE_A
EXCEPTIONS
ERROR_IN_APPLICATION = 1
ERROR                = 2
OTHERS               = 3.

ENDFORM.                    "call_md_convert_material_unit
*---APPEND END   DMC A.MASUDA 2005/01/05 --------------------------*
*---APPEND START DMC S.SHIGEMITU 2006/05/31 -----------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT_YUSOUTOU
*&---------------------------------------------------------------------*
*       輸送手段等テキスト取得処理
*----------------------------------------------------------------------*
*      -->P_VBELN   販売伝票
*      -->P_POSNR   販売伝票明細
*      <--P_TDLINE  輸送手段等テキスト
*----------------------------------------------------------------------*
FORM FRM_READ_TEXT_YUSOUTOU USING    P_VBELN
P_POSNR
CHANGING P_TDLINE.
DATA: LT_TLINE    TYPE TABLE OF TLINE,
LF_TLINE    TYPE TLINE,
L_VBELN     LIKE THEAD-TDNAME.

CONCATENATE P_VBELN
P_POSNR
INTO L_VBELN.

*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID              = 'Z910'
**** START UPD 2014/09/02 ISID19 ****
*       LANGUAGE        = 'J'
LANGUAGE        = SY-LANGU
**** END UPD 2014/09/02 ISID19 ****
NAME            = L_VBELN
OBJECT          = 'VBBP'
TABLES
LINES           = LT_TLINE
EXCEPTIONS
NOT_FOUND       = 4
REFERENCE_CHECK = 5
OTHERS          = 8.
CASE SY-SUBRC.
WHEN 0.
READ TABLE LT_TLINE INTO LF_TLINE INDEX 1.
P_TDLINE = LF_TLINE-TDLINE.
WHEN 8.
MESSAGE E001(Z1) WITH TEXT-024
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_READ_TEXT_YUSOUTOU
*---APPEND END   DMC S.SHIGEMITU 2006/05/31 -----------------------*
*---APPEND START D.YI 2007/11/05 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_KBETR1
*&---------------------------------------------------------------------*
*       販売価格を設定
*----------------------------------------------------------------------*
FORM FRM_SET_KBETR1.

DATA: L_KNUMH TYPE A901-KNUMH,              "条件レコード番号
**** START UPD 2015/01/05 ISID11 ****
*        L_KBETR TYPE ZSLIST_V07_NEW-KBETR1,
L_KBETR TYPE P LENGTH 9 DECIMALS 6,
**** END UPD 2015/01/05 ISID11 ****
L_KONWA TYPE KONP-KONWA,
*---ADD BY DMC 2008/05/07 BEGIN
L_KOPOS TYPE KONP-KOPOS,              "条件連続番号
L_KMEIN TYPE KONP-KMEIN,              "数量単位
*---ADD BY DMC 2008/05/07 END
**** START ADD 2015/01/05 ISID11 ****
L_KBETR1 TYPE KONP-KBETR,
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING,
**** END ADD 2015/01/05 ISID11 ****
L_KPEIN TYPE KONP-KPEIN.

SELECT KNUMH
FROM A901
INTO L_KNUMH
UP TO 1 ROWS
WHERE KAPPL   = 'V'
AND KSCHL   = 'ZPR0'
AND VKORGAU = PR_VKORG
AND VTWEG   = PR_VTWEG
AND SPART   = PR_SPART
AND KUNNR   = GF_WRITE-KUNNR
AND ZZZKDMAT = GF_WRITE-KDMAT
AND DATBI >= GF_WRITE-AUDAT.
ENDSELECT.
SELECT KBETR
KONWA
KPEIN
*---ADD BY DMC 2008/05/07 BEGIN
KOPOS      "条件連続番号
KMEIN      "数量単位
*---ADD BY DMC 2008/05/07 END
FROM KONP
INTO
**** START UPD 2015/01/05 ISID11 ****
*    (GF_WRITE-KBETR1,
(L_KBETR1,
**** END UPD 2015/01/05 ISID11 ****
L_KONWA, L_KPEIN
*---ADD BY DMC 2008/05/07 BEGIN
,L_KOPOS, L_KMEIN
*---ADD BY DMC 2008/05/07 END
)
UP TO 1 ROWS
WHERE KNUMH   = L_KNUMH
*---ADD BY DMC 2008/05/07 BEGIN
AND LOEVM_KO <> 'X'.
*---ADD BY DMC 2008/05/07 END
ENDSELECT.
*---ADD BY DMC 2008/05/07 BEGIN
PERFORM FRM_GET_KONM USING    CNS_HANBAYI "データ処理区分
L_KNUMH     "KONPから:条件レコード番号
L_KOPOS     "KONPから:条件連続番号
L_KMEIN     "KONPから:数量単位
CHANGING
**** START UPD 2015/01/05 ISID11 ****
*                          GF_WRITE-KBETR1.
L_KBETR1.
**** END UPD 2015/01/05 ISID11 ****

*---ADD BY DMC 2008/05/07 END
PERFORM FRM_KINGAKU_HENKAN USING    L_KONWA
**** START UPD 2015/01/05 ISID11 ****
*                                      GF_WRITE-KBETR1
L_KBETR1
**** END UPD 2015/01/05 ISID11 ****
CHANGING L_KBETR.

**** START UPD 2015/01/05 ISID11 ****
*  GF_WRITE-KBETR1 = L_KBETR / L_KPEIN.
CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = L_KBETR / L_KPEIN.

* 小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-KBETR1 RIGHT-JUSTIFIED.
**** END UPD 2015/01/05 ISID11 ****

ENDFORM.                    " FRM_SET_KBETR1
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_KBETR2
*&---------------------------------------------------------------------*
*       購買価格を設定
*----------------------------------------------------------------------*
FORM FRM_SET_KBETR2 USING P_LIFNR
P_MATNR
P_WERKS
P_AEDAT
*---ADD BY DMC 2008/05/07 BEGIN
P_KBN  TYPE CHAR3.
*---ADD BY DMC 2008/05/07 END

DATA: L_KNUMH TYPE A017-KNUMH,              "条件レコード番号
**** START UPD 2015/01/05 ISID11 ****
*        L_KBETR TYPE ZSLIST_V07_NEW-KBETR2,
L_KBETR TYPE P LENGTH 9 DECIMALS 6,
**** END UPD 2015/01/05 ISID11 ****
L_KONWA TYPE KONP-KONWA,
*---ADD BY DMC 2008/05/07 BEGIN
L_KOPOS TYPE KONP-KOPOS,              "条件連続番号
L_KMEIN TYPE KONP-KMEIN,              "数量単位
*---ADD BY DMC 2008/05/07 END
**** START ADD 2015/01/05 ISID11 ****
L_KBETR2 TYPE KONP-KBETR,
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING,
**** END ADD 2015/01/05 ISID11 ****
L_KPEIN TYPE KONP-KPEIN.

SELECT KNUMH
FROM A017
INTO L_KNUMH
UP TO 1 ROWS
WHERE KAPPL = 'M'
AND KSCHL = 'ZPB1'
AND LIFNR = P_LIFNR
AND MATNR = P_MATNR
AND WERKS = P_WERKS
AND DATBI >= P_AEDAT.
ENDSELECT.

SELECT KBETR
KONWA
KPEIN
*---ADD BY DMC 2008/05/07 BEGIN
KOPOS      "条件連続番号
KMEIN      "数量単位
*---ADD BY DMC 2008/05/07 END
FROM KONP
INTO
**** START UPD 2015/01/05 ISID11 ****
*    (GF_WRITE-KBETR2,
(L_KBETR2,
**** END UPD 2015/01/05 ISID11 ****
L_KONWA, L_KPEIN
*---ADD BY DMC 2008/05/07 BEGIN
,L_KOPOS, L_KMEIN
*---ADD BY DMC 2008/05/07 END
)
UP TO 1 ROWS
WHERE KNUMH   = L_KNUMH
*---ADD BY DMC 2008/05/07 BEGIN
AND LOEVM_KO <> 'X'.
*---ADD BY DMC 2008/05/07 END
ENDSELECT.
*---ADD BY DMC 2008/05/07 BEGIN
PERFORM FRM_GET_KONM USING    P_KBN       "データ処理区分
L_KNUMH     "KONPから:条件レコード番号
L_KOPOS     "KONPから:条件連続番号
L_KMEIN     "KONPから:数量単位
CHANGING
**** START UPD 2015/01/05 ISID11 ****
*                         GF_WRITE-KBETR2.
L_KBETR2.
**** END UPD 2015/01/05 ISID11 ****

*---ADD BY DMC 2008/05/07 END
PERFORM FRM_KINGAKU_HENKAN USING    L_KONWA
**** START UPD 2015/01/05 ISID11 ****
*                                      GF_WRITE-KBETR2
L_KBETR2
**** END UPD 2015/01/05 ISID11 ****
CHANGING L_KBETR.

**** START UPD 2015/01/05 ISID11 ****
*  GF_WRITE-KBETR2 = L_KBETR / L_KPEIN.
CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = L_KBETR / L_KPEIN.

* 小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-KBETR2 RIGHT-JUSTIFIED.
**** END UPD 2015/01/05 ISID11 ****

ENDFORM.                    " FRM_SET_KBETR2
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_KOBAI
*&---------------------------------------------------------------------*
*       在庫発注を設定
*----------------------------------------------------------------------*
FORM FRM_SET_KOBAI.

DATA: LT_TVKBZ  TYPE STANDARD TABLE OF TVKBZ,
LT_TVKBZ2 TYPE STANDARD TABLE OF TVKBZ,
**** START ADD 2015/01/05 ISID11 ****
*        L_ENETPR  TYPE ZSLIST_V07_NEW-ENETPR,
L_ENETPR  TYPE P LENGTH 9 DECIMALS 6,
L_AMOUNT   TYPE ZEZAMOUNT,
L_NOZERO   TYPE STRING,
**** END ADD 2015/01/05 ISID11 ****
LF_TVKBZ  TYPE TVKBZ.
*2013/11/11 Add Start
DATA: LT_EKPO1 TYPE STANDARD TABLE OF TYP_EKPO1,
R_WERKS  TYPE TYP_WERKS,       "プラント
LF_WERKS LIKE LINE OF R_WERKS.

*2014/02/03 Add Start 削除フラグ
TYPES TYP_LOEKZ TYPE RANGE OF EKPO-LOEKZ.
DATA: LR_LOEKZ  TYPE TYP_LOEKZ,
LF_LOEKZ  LIKE LINE OF LR_LOEKZ.

* 発注明細は、削除/ロックされていないものが対象
LF_LOEKZ-SIGN   = 'I'.
LF_LOEKZ-OPTION = 'EQ'.
APPEND LF_LOEKZ TO LR_LOEKZ.

* 当日受発注一覧の場合、削除/ロックも対象とする
IF R_TODAY = CNS_X.      " 当日受発注一覧表
REFRESH LR_LOEKZ.
ENDIF.
*2014/02/03 Add End

* 'P' + 営業所(3) でプラントに変換
CLEAR R_WERKS.
LF_WERKS-SIGN   = 'I'.
LF_WERKS-OPTION = 'EQ'.
*2013/11/11 Add End

SELECT VKBUR
INTO CORRESPONDING FIELDS OF TABLE LT_TVKBZ
FROM TVKBZ
WHERE VKBUR IN PR_VKBUR.

LOOP AT LT_TVKBZ
INTO LF_TVKBZ.
SHIFT LF_TVKBZ-VKBUR BY 1 PLACES RIGHT.
LF_TVKBZ-VKBUR+0(1) = 'P'.
APPEND LF_TVKBZ TO LT_TVKBZ2.

*2013/11/11 Add Start
*   'P' + 営業所(3) でプラントに変換
LF_WERKS-LOW = LF_TVKBZ-VKBUR.
APPEND LF_WERKS TO R_WERKS.
*2013/11/11 Add End
ENDLOOP.

SELECT B~EBELN  " 購買伝票番号
B~EBELP  " 明細番号
B~MENGE  " 在庫発注
B~NETPR  " 発注単価
B~MATNR  " 品目コード
B~TXZ01  " 品名
B~WERKS  " プラント
*2008/01/15 ADD START
B~PEINH  " 価格単位
*2008/01/15 ADD END
A~WAERS  " 通貨コード
A~WKURS  " 換算レート
A~LIFNR  " 仕入先勘定コード
A~ERNAM  " ユーザID
A~EKGRP  " 営業グループ
A~AEDAT  " 伝票日付
C~WEMNG  " 納入数量
C~EINDT  " 納入期日
*---ADD BY DMC 2008/05/07 BEGIN
B~MEINS  "発注単位
*---ADD BY DMC 2008/05/07 END
*2013/11/11 Add Start
B~MWSKZ  " 消費税コード
*2013/11/11 Add End
INTO CORRESPONDING FIELDS OF TABLE GT_EKPO1
FROM ( EKKO AS A INNER JOIN EKPO AS B
ON   A~EBELN  = B~EBELN ) INNER JOIN EKET  AS C
ON   B~EBELN  = C~EBELN
AND   B~EBELP  = C~EBELP
FOR ALL ENTRIES IN LT_TVKBZ2
WHERE A~AEDAT IN PR_DATE
*2011/05/23 Add Start
AND A~EKGRP IN S_EKGRP        "購買グループ
*2011/05/23 Add End
AND B~KNTTP <> 'M'
*2014/02/03 Mod Start 削除フラグ
*     AND b~loekz = ''
AND B~LOEKZ IN LR_LOEKZ
*2014/02/03 Add End
AND B~WERKS = LT_TVKBZ2-VKBUR.

*2013/11/11 Add Start
* 変更履歴のある購買伝票[EKKO,EKPO,EKET]取得
IF LINES( GT_EBELN ) > 0.
SELECT EKPO~EBELN  "購買伝票番号
EKPO~EBELP  "明細番号
EKPO~MENGE  "在庫発注
EKPO~NETPR  "発注単価
EKPO~MATNR  "品目コード
EKPO~TXZ01  "品名
EKPO~WERKS  "プラント
EKPO~PEINH  "価格単位
EKKO~WAERS  "通貨コード
EKKO~WKURS  "換算レート
EKKO~LIFNR  "仕入先勘定コード
EKKO~ERNAM  "ユーザID
EKKO~EKGRP  "営業グループ
EKKO~AEDAT  "伝票日付
EKET~WEMNG  "納入数量
EKET~EINDT  "納入期日
EKPO~MEINS  "発注単位
EKPO~MWSKZ  "消費税コード
INTO CORRESPONDING FIELDS OF TABLE LT_EKPO1
FROM EKKO INNER JOIN EKPO
ON EKKO~EBELN = EKPO~EBELN
INNER JOIN EKET
ON EKPO~EBELN = EKET~EBELN
AND EKPO~EBELP = EKET~EBELP
FOR ALL ENTRIES IN GT_EBELN
WHERE EKKO~EBELN = GT_EBELN-EBELN "変更履歴.購買伝票番号
AND EKKO~EKGRP IN S_EKGRP       "購買グループ
AND EKPO~KNTTP <> 'M'           "勘定設定カテゴリ
*2014/02/03 Mod Start 削除フラグ
*       AND ekpo~loekz =  ''            "購買伝票の削除フラグ
AND EKPO~LOEKZ IN LR_LOEKZ        "購買伝票の削除フラグ
*2014/02/03 Add End
AND EKPO~WERKS IN R_WERKS       "プラント
AND EKET~ETENR =  CNS_0001.     "納入日程行

*   変更伝票区分に'X'をセット
GF_EKPO1-CHANG = 'X'.
MODIFY LT_EKPO1 FROM GF_EKPO1 TRANSPORTING CHANG
WHERE CHANG = SPACE.

SORT LT_EKPO1 BY EBELN EBELP.

*   変更ユーザIDに変更履歴.購買伝票の最終日時責任者のユーザ名をセット
LOOP AT LT_EKPO1 INTO GF_EKPO1.
AT NEW EBELN.
CLEAR GF_CDHDR.
READ TABLE GT_CDHDE INTO GF_CDHDR
WITH KEY OBJECTCLAS = CNS_EINK
OBJECTID   = GF_EKPO1-EBELN.

*       購買伝票単位でセット
GF_EKPO1-UPNAM = GF_CDHDR-USERNAME."変更ユーザID
GF_EKPO1-UDATE = GF_CDHDR-UDATE.   "変更伝票の登録日付
GF_EKPO1-UTIME = GF_CDHDR-UTIME.   "変更時刻
MODIFY LT_EKPO1 FROM GF_EKPO1 TRANSPORTING UPNAM UDATE UTIME
WHERE EBELN = GF_EKPO1-EBELN.
ENDAT.
ENDLOOP.

*   購買情報内部テーブルに追加
APPEND LINES OF LT_EKPO1 TO GT_EKPO1.

*   購買情報内部テーブルをSORT
SORT GT_EKPO1 BY EBELN EBELP
CHANG DESCENDING UDATE DESCENDING UTIME DESCENDING.

*   購買情報内部テーブルの重複行を削除
DELETE ADJACENT DUPLICATES FROM GT_EKPO1 COMPARING EBELN EBELP.

*   変更伝票区分の設定
LOOP AT GT_EKPO1 INTO GF_EKPO1.
AT NEW EBELN.
READ TABLE GT_EKPO1 INTO GF_EKPO1 INDEX SY-TABIX.
*       購買伝票の登録日(rec登録日) = 変更履歴の最終の変更日付の場合
IF GF_EKPO1-AEDAT = GF_EKPO1-UDATE.
*         変更伝票区分をクリア
CLEAR GF_EKPO1-CHANG.
MODIFY GT_EKPO1 FROM GF_EKPO1 TRANSPORTING CHANG
WHERE EBELN = GF_EKPO1-EBELN.
ENDIF.
ENDAT.
ENDLOOP.
ENDIF.

* 購買伝票の取引先[EKPA,LFA1,ADRC]取得
CLEAR GT_ADRC.
SELECT EKPA~EBELN EKPA~PARVW EKPA~LIFN2
ADRC~NAME1
INTO TABLE GT_ADRC
FROM EKPA INNER JOIN LFA1
ON EKPA~LIFN2 = LFA1~LIFNR
INNER JOIN ADRC
ON LFA1~ADRNR = ADRC~ADDRNUMBER
FOR ALL ENTRIES IN GT_EKPO1
WHERE EKPA~EBELN = GT_EKPO1-EBELN.  "購買伝票番号
*2013/11/11 Add End

CLEAR: GF_LFA1,
GT_LFA1[].
LOOP AT GT_EKPO1
INTO GF_EKPO1.

*2008/07/03 ADD START
CLEAR GF_LFA1.
*2008/07/03 ADD END
READ TABLE GT_LFA1 INTO GF_LFA1
WITH TABLE KEY LIFNR = GF_EKPO1-LIFNR.
IF SY-SUBRC <> 0.
*2013/11/11 Del Start
*      SELECT SINGLE lifnr name1
*        INTO gf_lfa1
*        FROM lfa1
*       WHERE lifnr = gf_ekpo1-lifnr.
*2013/11/11 Del End
*2013/11/11 Add Start
*     仕入先マスタ情報[LFA1,ADRC]取得
SELECT SINGLE LFA1~LIFNR LFA1~NAME1
*2013/12/11 Mod Start 1.部屋番号
*             adrc~roomnumber
ADRC~HOUSE_NUM1
*2013/12/11 Mod End
INTO GF_LFA1
FROM LFA1 INNER JOIN ADRC
ON LFA1~ADRNR = ADRC~ADDRNUMBER
WHERE LIFNR = GF_EKPO1-LIFNR.
*2013/11/11 Add End
IF SY-SUBRC = 0.
INSERT GF_LFA1 INTO TABLE GT_LFA1.
ENDIF.
ENDIF.

CLEAR: GF_WRITE.

**** START ADD 2015/01/05 ISID11 ****
WRITE '0' TO GF_WRITE-VNETPR RIGHT-JUSTIFIED.  "受注単価_小数点6桁
WRITE '0' TO GF_WRITE-ENETPR RIGHT-JUSTIFIED.  "発注単価_小数点6桁
WRITE '0' TO GF_WRITE-GYEN1 RIGHT-JUSTIFIED.   "原価 ローカル
WRITE '0' TO GF_WRITE-WAVWR RIGHT-JUSTIFIED.   "原価.
WRITE '0' TO GF_WRITE-HCTNK RIGHT-JUSTIFIED.   "発注単価 ローカル
WRITE '0' TO GF_WRITE-JTNKYEN RIGHT-JUSTIFIED. "受注単価 ローカル
WRITE '0' TO GF_WRITE-KBETR1 RIGHT-JUSTIFIED.  "販売価格
WRITE '0' TO GF_WRITE-KBETR2 RIGHT-JUSTIFIED.  "購買価格
**** END ADD 2015/01/05 ISID11 ****

GF_WRITE-EBELN  = GF_EKPO1-EBELN.
GF_WRITE-EBELP  = GF_EKPO1-EBELP.
GF_WRITE-MENGE  = GF_EKPO1-MENGE.
*2008/01/15 ADD START
GF_WRITE-KWMENG = GF_WRITE-MENGE.
*2008/01/15 ADD END

GF_WRITE-WAERS  = GF_EKPO1-WAERS.                     " 通貨コード
**** START DEL 2015/01/05 ISID11 ****
*    GF_WRITE-ENETPR = GF_EKPO1-NETPR.
**** START DEL 2015/01/05 ISID11 ****

PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERS
**** START UPD 2015/01/05 ISID11 ****
*                                        GF_WRITE-ENETPR
GF_EKPO1-NETPR
**** END UPD 2015/01/05 ISID11 ****
CHANGING L_ENETPR.

**** START DEL 2015/01/05 ISID11 ****
*    GF_WRITE-ENETPR = L_ENETPR.                           " 発注単価
**** END DEL 2015/01/05 ISID11 ****

*2008/01/15 ADD START
*    購買単価を価格単位で除算する
IF GF_EKPO1-PEINH NE 0.
DIVIDE
**** START UPD 2015/01/05 ISID11 ****
*      GF_WRITE-ENETPR
L_ENETPR
**** END UPD 2015/01/05 ISID11 ****
BY GF_EKPO1-PEINH.
ENDIF.
*2008/01/15 ADD END
**** START ADD 2015/01/05 ISID11 ****
*    GF_WRITE-ENETPR = L_ENETPR.                           " 発注単価
CLEAR:
L_AMOUNT,
L_NOZERO.

L_AMOUNT = L_ENETPR.
*   小数以下右端ゼロの削除
PERFORM FRM_DECIMALS_CALCU USING L_AMOUNT
CHANGING L_NOZERO.
CONDENSE L_NOZERO.
WRITE L_NOZERO TO GF_WRITE-ENETPR RIGHT-JUSTIFIED.
**** END ADD 2015/01/05 ISID11 ****
GF_WRITE-WKURS  = GF_EKPO1-WKURS.                     " 換算レート
GF_WRITE-EINDT = GF_EKPO1-EINDT.                      " 納入期日
GF_WRITE-WEMNG = GF_EKPO1-WEMNG.                      " 入庫数
GF_WRITE-HZNUM = GF_WRITE-MENGE - GF_WRITE-WEMNG.     " 発注残数
GF_WRITE-LNAME = GF_LFA1-NAME1.                       " 仕入先名
*2013/12/11 Mod Start 1.部屋番号
*2013/11/11 Add Start
*    gf_write-roomnumber = gf_lfa1-roomn. " 部屋/アパート番号
GF_WRITE-HOUSE_NUM1 = GF_LFA1-ROOMN. " 部屋/アパート番号
*2013/11/11 Add End
*2013/12/11 Mod End
GF_WRITE-MATNR = GF_EKPO1-MATNR.                      " 品目コード
GF_WRITE-ARKTX = GF_EKPO1-TXZ01.                      " 品名
GF_WRITE-MNYEN = GF_WRITE-MENGE
**** START UPD 2015/01/05 ISID11 ****
*                   * GF_WRITE-ENETPR.                     " 発注金額
* L_ENETPR.                     " 発注金額
**** END UPD 2015/01/05 ISID11 ****
GF_WRITE-ERNAM = GF_EKPO1-ERNAM.                      " ユーザID
GF_WRITE-VKBUR = GF_EKPO1-WERKS.
SHIFT GF_WRITE-VKBUR BY 1 PLACES LEFT.
GF_WRITE-VKBUR+3(1) = '0'.                           " 営業所

* Add 20071220 --->
GF_WRITE-GYEN2 = GF_WRITE-MNYEN .
* Add 20071220 <---

SELECT SINGLE  BEZEI
INTO GF_WRITE-BEZEIA                               " 営業所名
FROM TVKBT
WHERE VKBUR = GF_WRITE-VKBUR
**** START UPD 2014/09/02 ISID19 ****
*        AND SPRAS = 'J'.
AND SPRAS = SY-LANGU.
**** END UPD 2014/09/02 ISID19 ****

GF_WRITE-VKGRP = GF_EKPO1-EKGRP.                     " 営業グループ

SELECT SINGLE BEZEI
INTO GF_WRITE-BEZEIB                             "営業グループ名
FROM TVGRT
WHERE VKGRP = GF_WRITE-VKGRP
**** START UPD 2014/09/02 ISID19 ****
*        AND SPRAS = 'J'.
AND SPRAS = SY-LANGU.
**** END UPD 2014/09/02 ISID19 ****

GF_WRITE-AUDAT = GF_EKPO1-AEDAT.                     " 伝票日付
* 購買価格を設定
PERFORM FRM_SET_KBETR2 USING GF_EKPO1-LIFNR
GF_WRITE-MATNR
GF_EKPO1-WERKS
GF_WRITE-AUDAT
*---ADD BY DMC 2008/05/07 BEGIN
CNS_ZAYIKO.
*---ADD BY DMC 2008/05/07 END
*2011/05/23 Add Start
GF_WRITE-EKGRP = GF_EKPO1-EKGRP.
*2011/05/23 Add End

*2013/11/11 Add Start
GF_WRITE-MWSKZ = GF_EKPO1-MWSKZ.   "消費税コード

*   購買伝票の取引先
CLEAR GF_ADRC.
READ TABLE GT_ADRC INTO GF_ADRC
WITH KEY EBELN = GF_EKPO1-EBELN
PARVW = CNS_BA.
GF_WRITE-LIFNR_BA = GF_ADRC-LIFN2. "発注_手配先
GF_WRITE-NAME1_BA = GF_ADRC-NAME1. "発注_手配先名称
CLEAR GF_ADRC.
READ TABLE GT_ADRC INTO GF_ADRC
WITH KEY EBELN = GF_EKPO1-EBELN
PARVW = CNS_LF.
GF_WRITE-LIFNR_LF = GF_ADRC-LIFN2. "発注_仕入先
GF_WRITE-NAME1_LF = GF_ADRC-NAME1. "発注_仕入先名称
CLEAR GF_ADRC.
READ TABLE GT_ADRC INTO GF_ADRC
WITH KEY EBELN = GF_EKPO1-EBELN
PARVW = CNS_RS.
GF_WRITE-LIFNR_RS = GF_ADRC-LIFN2. "発注_請求書発行者
GF_WRITE-NAME1_RS = GF_ADRC-NAME1. "発注_請求書発行者名称
CLEAR GF_ADRC.
READ TABLE GT_ADRC INTO GF_ADRC
WITH KEY EBELN = GF_EKPO1-EBELN
PARVW = CNS_Y1.
GF_WRITE-LIFNR_Y1 = GF_ADRC-LIFN2. "発注_支払先
GF_WRITE-NAME1_Y1 = GF_ADRC-NAME1. "発注_支払先名称

GF_WRITE-CHANGKBN = GF_EKPO1-CHANG."変更伝票区分
GF_WRITE-USERNAME = GF_EKPO1-UPNAM."変更ユーザID
*2013/11/11 Add End

*2014/02/17 Add Start 伝票日付
*選択画面の伝票日付が設定されている場合は、
*発注伝票の伝票日付ではなく、選択画面の伝票日付で上書きする。
IF PR_AUDAT IS NOT INITIAL.
GF_WRITE-AUDAT = PR_AUDAT.
ENDIF.
*2014/02/17 Add End

APPEND GF_WRITE TO GT_WRITE.

ENDLOOP.

ENDFORM.                    " FRM_SET_KOBAI
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_MWSBP
*&---------------------------------------------------------------------*
*      消費税金額を設定
*----------------------------------------------------------------------*
FORM FRM_SET_MWSBP.

DATA: L_MWSBP TYPE ZSLIST_V07_NEW-MWSBP.

PERFORM FRM_KINGAKU_HENKAN USING    GF_WRITE-WAERK
GF_VBAP-MWSBP
CHANGING L_MWSBP.
GF_WRITE-MWSBP = L_MWSBP.

ENDFORM.                    " FRM_SET_MWSBP
*---APPEND END   D.YI 2007/11/05 ---------------------------*
*---ADD BY DMC 2008/05/07 BEGIN
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_KONM
*&---------------------------------------------------------------------*
*      スケール数量を取得
*----------------------------------------------------------------------*
*  -->  U_KBN       データ処理区分
*  -->  U_KNUMH     KONPから:条件レコード番号
*  -->  U_KOPOS     KONPから:条件連続番号
*  -->  U_KPEIN     KONPから:価格条件単位
*  <--  C_KBETR     スケール数量
*----------------------------------------------------------------------*
FORM FRM_GET_KONM USING    U_KBN    TYPE CHAR3
U_KNUMH  TYPE A901-KNUMH
U_KOPOS TYPE KONP-KOPOS
U_KMEIN  TYPE KONP-KMEIN
CHANGING C_KBETR.
DATA: L_MATNR      TYPE MARA-MATNR,
L_MEINS      TYPE MARA-MEINS,
L_O_MEINS    TYPE MARA-MEINS,
L_SURYOU     TYPE EKPO-MENGE,
L_KONM_KBETR TYPE ZSLIST_V07_NEW-KBETR1,
L_KONM_KSTBM TYPE KONM-KSTBM.

MOVE U_KMEIN TO L_O_MEINS.             "価格条件単位
* 販売価格の場合
IF U_KBN = CNS_HANBAYI.
MOVE GF_WRITE-MATNR  TO L_MATNR.     "品目コード
MOVE GF_WRITE-VRKME  TO L_MEINS.     "販売単位
MOVE GF_WRITE-KWMENG TO L_SURYOU.    "累積受注数量

* 購買価格の場合
ELSEIF U_KBN = CNS_KOUBAYI.
MOVE GF_WRITE-MATNR TO L_MATNR.      "品目コード
MOVE GF_EKPO-MEINS TO L_MEINS.       "発注単位
MOVE GF_EKPO-MENGE TO L_SURYOU.      "購買発注数量

* 在庫発注の場合
ELSEIF U_KBN = CNS_ZAYIKO.
MOVE GF_EKPO1-MATNR TO L_MATNR.      "品目コード
MOVE GF_EKPO1-MEINS TO L_MEINS.      "発注単位
MOVE GF_EKPO1-MENGE TO L_SURYOU.     "購買発注数量
ENDIF.

* 伝票単位が価格条件単位と違い場合
IF L_MEINS <> L_O_MEINS.
*   数量変換処理
CALL FUNCTION 'MD_CONVERT_MATERIAL_UNIT'
EXPORTING
I_MATNR              = L_MATNR
I_IN_ME              = L_MEINS
I_OUT_ME             = L_O_MEINS
I_MENGE              = L_SURYOU
IMPORTING
E_MENGE              = L_SURYOU
EXCEPTIONS
ERROR_IN_APPLICATION = 1
ERROR                = 2
OTHERS               = 3.
ENDIF.

* 数量スケールでの価格の取得
SELECT KBETR
KSTBM
FROM   KONM                    "条件 (一次元の数量スケール)
INTO   (L_KONM_KBETR, L_KONM_KSTBM)
UP TO 1 ROWS
WHERE  KNUMH = U_KNUMH AND     "条件レコード番号
KOPOS = U_KOPOS AND     "条件連続番号
KSTBM =< L_SURYOU       "条件スケール数量
ORDER BY KSTBM DESCENDING.
ENDSELECT.
* 存在した場合
IF SY-SUBRC = 0.
C_KBETR = L_KONM_KBETR.
ENDIF.
ENDFORM.                    " FRM_GET_KONM
*---ADD BY DMC 2008/05/07 END
*2013/11/11 Add Start
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_CDHDR
*&---------------------------------------------------------------------*
*       変更文書情報取得
*----------------------------------------------------------------------*
FORM FRM_GET_CDHDR.
TYPES:
BEGIN OF TYP_CDPOS,
TABNAME TYPE CDPOS-TABNAME,      "テーブル名
TABKEY  TYPE CDPOS-TABKEY,       "変更テーブルレコードキー
FNAME   TYPE CDPOS-FNAME,        "項目名
*2013/12/11 Add Start 2.支払条件
CHANGENR TYPE CDPOS-CHANGENR,    "変更文書番号
*2013/12/11 Add End
END   OF TYP_CDPOS,
BEGIN OF TYP_TVKBZ,
VKBUR TYPE TVKBZ-VKBUR,          "営業所
END   OF TYP_TVKBZ.
DATA:
LT_CDHDR TYPE STANDARD TABLE OF TYP_CDHDR,
LT_CDPOS TYPE STANDARD TABLE OF TYP_CDPOS,
LF_CDPOS TYPE TYP_CDPOS,
LT_TVKBZ TYPE STANDARD TABLE OF TYP_TVKBZ,
LF_TVKBZ TYPE TYP_TVKBZ,
LF_EBELN TYPE TYP_EBELN.

*
CLEAR:GT_CDHDV, GT_CDHDE, GT_VBELN.

* 変更文書情報[CDHDR]取得
SELECT OBJECTCLAS OBJECTID CHANGENR USERNAME UDATE UTIME
INTO TABLE LT_CDHDR
FROM CDHDR
WHERE OBJECTCLAS IN (CNS_VERK, CNS_EINK)
AND UDATE      IN PR_DATE.

* 変更文書情報[CDPOS]取得
LOOP AT LT_CDHDR INTO GF_CDHDR.
CLEAR LT_CDPOS.
SELECT TABNAME TABKEY FNAME
INTO TABLE LT_CDPOS
FROM CDPOS
WHERE OBJECTCLAS =  GF_CDHDR-OBJECTCLAS
AND OBJECTID   =  GF_CDHDR-OBJECTID
AND CHANGENR   =  GF_CDHDR-CHANGENR
*2013/12/11 Mod Start 2.支払条件
*       AND tabname    IN (cns_vbak, cns_vbap, cns_vbep, cns_vbkd,
AND TABNAME    IN (CNS_VBAK, CNS_VBAP, CNS_VBEP,
*2013/12/11 Mod End
CNS_EKPA, CNS_EKPO, CNS_EKET)
AND FNAME      IN (CNS_NETPR, CNS_WMENG, CNS_VDATU, CNS_PSTYV,
*2013/12/11 Mod Start 2.支払条件
*                          cns_zterm, cns_menge, cns_aedat, cns_slfdt,
CNS_MENGE, CNS_AEDAT, CNS_SLFDT,
*2013/12/11 Mod End
*2014/02/03 Add Start 拒否理由、削除フラグ
CNS_ABGRU, CNS_LOEKZ,
*2014/02/03 Add End
CNS_MWSKZ, CNS_LIFN2).

CHECK SY-SUBRC = 0.
LOOP AT LT_CDPOS INTO LF_CDPOS.
GF_CDHDR-TABNAME = LF_CDPOS-TABNAME.
GF_CDHDR-TABKEY  = LF_CDPOS-TABKEY.
GF_CDHDR-FNAME   = LF_CDPOS-FNAME.
APPEND GF_CDHDR TO GT_CDHDV.
ENDLOOP.
ENDLOOP.

*2013/12/11 Add Start 2.支払条件
* 変更文書情報[CDPOS]取得（支払条件のみ）
LOOP AT LT_CDHDR INTO GF_CDHDR.
CLEAR: LT_CDPOS.
SELECT TABNAME TABKEY FNAME CHANGENR
INTO TABLE LT_CDPOS
FROM CDPOS
WHERE OBJECTCLAS =  GF_CDHDR-OBJECTCLAS
AND OBJECTID   =  GF_CDHDR-OBJECTID
AND CHANGENR   =  GF_CDHDR-CHANGENR
AND TABNAME    =  CNS_VBKD
AND FNAME      =  CNS_ZTERM.

* 明細変更の確認
READ TABLE LT_CDPOS
WITH KEY TABKEY+13(6) = '000010'
TRANSPORTING NO FIELDS.
IF SY-SUBRC = 0.
* 明細変更時は、表示対象とする
LOOP AT LT_CDPOS INTO LF_CDPOS.
GF_CDHDR-TABNAME = LF_CDPOS-TABNAME.
GF_CDHDR-TABKEY  = LF_CDPOS-TABKEY.
GF_CDHDR-FNAME   = LF_CDPOS-FNAME.
APPEND GF_CDHDR TO GT_CDHDV.
ENDLOOP.
ELSE.
* ヘッダ変更時は、条件により表示対象とする
SELECT SINGLE VBELN
FROM   VBKD
INTO   GF_CDHDR-OBJECTID
WHERE  VBELN = GF_CDHDR-OBJECTID
AND    POSNR = '000010'.
IF SY-SUBRC <> 0.
* ヘッダ変更に伴い、明細も変更されるため、表示対象とする
LOOP AT LT_CDPOS INTO LF_CDPOS.
GF_CDHDR-TABNAME = LF_CDPOS-TABNAME.
GF_CDHDR-TABKEY  = LF_CDPOS-TABKEY.
GF_CDHDR-FNAME   = LF_CDPOS-FNAME.
APPEND GF_CDHDR TO GT_CDHDV.
ENDLOOP.
ENDIF.
ENDIF.
ENDLOOP.
*2013/12/11 Add End

* 変更販売伝票、変更購買伝票に分割
SORT GT_CDHDV BY OBJECTCLAS OBJECTID UDATE DESCENDING UTIME DESCENDING.
GT_CDHDE = GT_CDHDV.
DELETE GT_CDHDV
WHERE OBJECTCLAS = CNS_EINK.
DELETE GT_CDHDE
WHERE OBJECTCLAS = CNS_VERK.

* 変更履歴.販売伝票番号
LOOP AT GT_CDHDV INTO GF_CDHDR.
GF_VBELN-VBELN = GF_CDHDR-OBJECTID.
APPEND GF_VBELN TO GT_VBELN.
ENDLOOP.
DELETE ADJACENT DUPLICATES FROM GT_VBELN.

* 変更履歴.購買伝票番号
LOOP AT GT_CDHDE INTO GF_CDHDR.
LF_EBELN-EBELN = GF_CDHDR-OBJECTID.
APPEND LF_EBELN TO GT_EBELN.
ENDLOOP.
DELETE ADJACENT DUPLICATES FROM GT_EBELN.

ENDFORM.                    " FRM_GET_CDHDR
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_VBAK
*&---------------------------------------------------------------------*
*       変更履歴のある販売伝票[VBAK,VBAP,etc]取得
*----------------------------------------------------------------------*
FORM FRM_GET_VBAK.

CLEAR GT_VBAK.

* 変更履歴のある販売伝票[VBAK,VBAP,etc]取得
SELECT VBAK~VBELN VBAK~AUDAT VBAK~AUART VBAK~VKGRP VBAK~VKBUR
VBAK~VDATU VBAK~BSTNK VBAK~KUNNR VBAK~VBTYP VBAK~ERNAM
VBUP~POSNR
TVKBT~BEZEI
TVGRT~BEZEI
VBKD~BSTDK_E VBKD~KURSK VBKD~ZTERM
INTO TABLE GT_VBAK
FROM VBAK INNER JOIN VBUK
ON VBAK~VBELN = VBUK~VBELN
INNER JOIN VBUP
ON VBAK~VBELN = VBUP~VBELN
INNER JOIN TVKBT
ON VBAK~VKBUR = TVKBT~VKBUR
INNER JOIN TVGRT
ON VBAK~VKGRP = TVGRT~VKGRP
INNER JOIN VBKD
ON VBUP~VBELN = VBKD~VBELN
INNER JOIN VBAP
ON VBUP~VBELN = VBAP~VBELN
AND VBUP~POSNR = VBAP~POSNR
FOR ALL ENTRIES IN GT_VBELN
WHERE VBAK~VBELN  =  GT_VBELN-VBELN "変更履歴.販売伝票番号
AND VBAK~VKBUR  IN PR_VKBUR       "営業所
AND VBAK~VKGRP  IN PR_VKGRP       "営業グループ
AND VBAK~KUNNR  IN PR_KUNNR       "受注先
AND VBAK~VBTYP  IN (CNS_C, CNS_H, CNS_I, CNS_K, CNS_L)
*2014/02/03 Add Start 拒否理由
*     AND vbap~abgru  <> 'ZZ'           "拒否理由
*2014/02/03 Add End
**** START UPD 2014/09/02 ISID19 ****
*     AND TVKBT~SPRAS =  CNS_J          "言語
*     AND TVGRT~SPRAS =  CNS_J          "言語
AND TVKBT~SPRAS =  SY-LANGU        "言語
AND TVGRT~SPRAS =  SY-LANGU        "言語
**** END UPD 2014/09/02 ISID19 ****
AND VBAK~VKORG  =  PR_VKORG       "販売組織
AND VBAK~VTWEG  =  PR_VTWEG       "流通チャネル
AND VBAK~SPART  =  PR_SPART       "製品部門
AND VBKD~POSNR  =  '000000'.      "明細番号(販売管理伝票)
* 変更伝票区分に'X'をセット
GF_INFO-CHANG = 'X'.
MODIFY GT_VBAK FROM GF_INFO TRANSPORTING CHANG
WHERE CHANG = SPACE.

SORT GT_VBAK BY VBELN POSNR.

ENDFORM.                    " FRM_GET_VBAK
*2013/11/11 Add End

**** START ADD 2014/09/02 ISID19 ****
*&---------------------------------------------------------------------*
*&      Form  FEM_CHECK_BUKRS
*&---------------------------------------------------------------------*
*       会社コードと販売組織チェック処理
*----------------------------------------------------------------------*
FORM FEM_CHECK_BUKRS .
SELECT SINGLE WAERS             " 通貨コード
FROM T001
INTO G_WAERS
WHERE BUKRS = PR_BUKRS.         " 会社コード

IF SY-SUBRC <> 0.
MESSAGE E016(Z3) WITH PR_BUKRS.
*   会社コード & が存在しません。
ENDIF.

AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
ID 'BUKRS' FIELD PR_BUKRS
ID 'ACTVT' FIELD '03'.
IF SY-SUBRC <> 0.
MESSAGE E015(Z3) WITH PR_BUKRS.
*   会社コード & では実行する権限がありません。
ENDIF.

IF PR_VKORG IS INITIAL.
SELECT VKORG "販売組織
FROM TVKO
UP TO 1 ROWS
INTO PR_VKORG
WHERE BUKRS = PR_BUKRS.  "会社コード
ENDSELECT.
ELSE.
SELECT SINGLE VKORG "販売組織
FROM TVKO
INTO PR_VKORG
WHERE BUKRS = PR_BUKRS  "会社コード
AND VKORG = PR_VKORG. "販売組織

IF SY-SUBRC <> 0.
MESSAGE E077(Z3) WITH PR_BUKRS PR_VKORG.
*   会社コード&と販売組織&の組合せチェックが失敗しました。
ENDIF.
ENDIF.

ENDFORM.                    " FEM_CHECK_BUKRS
**** END ADD 2014/09/02 ISID19 ****
**** START ADD 2015/01/05 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  FRM_DECIMALS_CALCU
*&---------------------------------------------------------------------*
*       小数以下右端ゼロの削除
*----------------------------------------------------------------------*
*      -->I_AMOUNT  Input対象、小数以下桁数6桁
*      <--O_NOZERO  Output対象外部、小数以下ゼロなぜ対象
*----------------------------------------------------------------------*
FORM FRM_DECIMALS_CALCU USING I_AMOUNT   TYPE ZEZAMOUNT
CHANGING O_NOZERO   TYPE STRING.

CALL FUNCTION 'ZEG_ZZ_RIGHTZERO_DETELE'
EXPORTING
IMPORIGINAL  = I_AMOUNT
IMPORTING
EXPOUTNOZERO = O_NOZERO.

ENDFORM.                    " FRM_DECIMALS_CALCU
**** END ADD 2015/01/05 ISID11 ****
*Text symbol text・
*001:**Report of Daily Order**
*002:**Report of Unofficial Data**
*003:**Report of Non-mortgage**
*004:**List of Delivery Blocked**
*005:**List of Delivery Available**
*006:Report Selection
*007:Selection
*008:Report of Dai Ord
*009:Report of Unof Dat
*010:Report of Non-mortgage
*011:List of Delive Blocked
*012:List of Delive Available
*013:Doc Date:
*014:Sal Off:
*015:/
*016:Tm
*017:Sales Group:
*018:Ship Point:
*019:Delivery Blocked
*020:Sales Man:
*021:Selection Date
*022:Selection Month
*023:Sales Office
*024:READ_TEXT
*025:Customer Number
*026:Obl.:Selection Date,Sal Office
*027:Obl.:Selection Month,Sal Off
*028:Obl.:Sales Office
*029:Obl.:Shipping Point,Deli Blocked
*030:Obl.:Selection Date,Ship Point
*031:Opt.:Sales Group,Customer Number
*032:Opt.:Sales Group
*033:Opt.:Sales Group,Sales Man,
*034:Opt.:Sales Group,Sales Man,Customer Number
*035:Sal Doc
*036:Schedule Line
*037:Item
*038:Partner
*039:Pa
*040:Ch
*041:Pur Doc
*042:Purchasing Flo
*043:①
*044:②
*045:③
*046:④
*047:⑤
*048:⑥
*049:⑦
*050:⑧
*051:Obl.：① ③
*052:Opt.：⑤ ⑧ ⑩
*053:Obl.：② ③
*054:Opt.：⑤
*055:Obl.：③
*056:Obl.：④ ⑦
*057:Opt.：⑤ ⑥
*058:Obl.：① ④
*059:Opt.：⑤ ⑥ ⑧
*060:From:
*061:To:
*062:Shipping Point
*063:Sales Group
*064:Sales Man
*065:Sales related
*066:No Speci
*068:Duplica data of EDI
*069:⑨
*070:Reason for Rejection
*071:**Duplicate data of EDI**
*072:Obl.：① ③ ⑨
*073:M
*074:D
*075:⑩
*076:Pur Gro(Apply to Sto)
*100:Select Orgnization
*101:Day time account ticket output options
*102:Local Currency:
*Selection text・
*PR_ABGRU:        Reason for Rejection
*PR_AUDAT:        Document Date
*PR_BUKRS:        Company Code
*PR_DATE:D       .
*PR_KUNNR:D       .
*PR_LIFSP:D       .
*PR_PERNR:D       .
*PR_SPART:        Division
*PR_VKBUR:D       .
*PR_VKGRP:D       .
*PR_VKORG:        Sales Organization
*PR_VTWEG:        Distribution Channel
*PR_WERKS:D       .
*PR_YYMM:D       .
*R_BLOCK:        List of Delivery Blocked
*R_KANO:        List of Delivery Available
*R_MIHIKI:        Report of Non-mortgage
*R_NAIJI:        Report of Unofficial Data
*R_PERNR:        Personnel Number
*R_TODAY:        Report of Daily Order
*R_TYOFK:        Duplicate data of EDI
*R_VKGRP:        Sales Group
