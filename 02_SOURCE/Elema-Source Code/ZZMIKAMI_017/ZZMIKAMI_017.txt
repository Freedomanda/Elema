REPORT ZZMIKAMI_017 .

TABLES: BSIK, BSAK.

TYPES:BEGIN OF TYP_BSIK,
LIFNR    TYPE BSIK-LIFNR,      "仕入先
GJAHR    TYPE BSIK-GJAHR,      "年度
BELNR    TYPE BSIK-BELNR,      "伝票No.
BUDAT    TYPE BSIK-BUDAT,      "転記日付
WAERS    TYPE BSIK-WAERS,      "通貨コード
BLART    TYPE BSIK-BLART,      "伝票タイプ
SHKZG    TYPE BSIK-SHKZG,      "貸借フラグ
DMBTR    TYPE BSIK-DMBTR,      "国内通貨
WRBTR    TYPE BSIK-WRBTR,      "伝票通貨
HKONT    TYPE BSIK-HKONT,      "勘定コード
ZFBDT    TYPE BSIK-ZFBDT,      "支払基準日
END   OF TYP_BSIK.

DATA: GT_BSIK      TYPE TABLE OF TYP_BSIK.
DATA: GT_BSIK_1    TYPE TABLE OF TYP_BSIK.  "請求書照合の
DATA: GT_BSIK_2    TYPE TABLE OF TYP_BSIK.  "支払依頼の
DATA: GT_BSIK_3    TYPE TABLE OF TYP_BSIK.  "その他の
DATA: GT_BSIK_4    TYPE TABLE OF TYP_BSIK.  "未請求の
DATA: GT_BSIK_5    TYPE TABLE OF TYP_BSIK.  "未請求(部分)の




SELECT-OPTIONS: S_LIFNR   FOR BSIK-LIFNR.  "仕入先
PARAMETERS    : P_BUDAT   TYPE BSIK-BUDAT.  "評価期間(from)
PARAMETERS    : P_BUDAT2  TYPE BSIK-BUDAT.  "評価期間(to)
SELECT-OPTIONS: S_BLART1  FOR BSIK-BLART.  "伝票タイプ(ERS)
SELECT-OPTIONS: S_BLART2  FOR BSIK-BLART.  "伝票タイプ(支払依頼)
SELECT-OPTIONS: S_HKONT   FOR BSIK-HKONT.  "買掛勘定

INITIALIZATION.


START-OF-SELECTION.

PERFORM GET_DATA.

PERFORM CHECK_DATA.

PERFORM CALC_DATA.

END-OF-SELECTION.

*&---------------------------------------------------------------------*
*&      Form  get_data
*&---------------------------------------------------------------------*
*       処理対象データの一括取得
*----------------------------------------------------------------------*
FORM GET_DATA.

SELECT LIFNR      "仕入先
GJAHR      "年度
BELNR      "伝票No.
BUDAT      "転記日付
WAERS      "通貨コード
BLART      "伝票タイプ
SHKZG      "貸借フラグ
DMBTR      "国内通貨
WRBTR      "伝票通貨
HKONT      "勘定コード
ZFBDT      "支払基準日
FROM BSIK APPENDING TABLE GT_BSIK
WHERE BUKRS = 'C001'
AND LIFNR IN S_LIFNR
AND BUDAT <= P_BUDAT2
AND HKONT IN S_HKONT.

SELECT LIFNR      "仕入先
GJAHR      "年度
BELNR      "伝票No.
BUDAT      "転記日付
WAERS      "通貨コード
BLART      "伝票タイプ
SHKZG      "貸借フラグ
DMBTR      "国内通貨
WRBTR      "伝票通貨
HKONT      "勘定コード
ZFBDT      "支払基準日
FROM BSAK APPENDING TABLE GT_BSIK
WHERE BUKRS = 'C001'
AND LIFNR IN S_LIFNR
AND BUDAT <= P_BUDAT2
AND HKONT IN S_HKONT.

ENDFORM.                    " get_data
*&---------------------------------------------------------------------*
*&      Form  check_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CHECK_DATA.

DATA: LW_BSIK  TYPE TYP_BSIK.
DATA: LW_BKPF  TYPE BKPF.
DATA: LV_BREAK TYPE C.
DATA: LT_YK230    TYPE TABLE OF YK230.
DATA: LW_YK230    TYPE YK230.

LOOP AT GT_BSIK INTO LW_BSIK.
IF LW_BSIK-BLART IN S_BLART1.
SELECT SINGLE * FROM BKPF INTO LW_BKPF
WHERE BUKRS = 'C001'
AND BELNR = LW_BSIK-BELNR
AND GJAHR = LW_BSIK-GJAHR.
IF LW_BKPF-AWTYP = 'RMRP'.
APPEND LW_BSIK TO GT_BSIK_1.
IF LW_BSIK-BUDAT >= P_BUDAT.
REFRESH :LT_YK230.
SELECT * FROM YK230 INTO TABLE LT_YK230
WHERE BELNR = LW_BKPF-AWKEY(10).
IF SY-SUBRC <> 0.
APPEND LW_BSIK TO GT_BSIK_4.
ELSE.
LOOP AT LT_YK230 INTO LW_YK230 WHERE KEKKBN = '4'
OR KEKKBN = '5'.
EXIT.
ENDLOOP.
IF SY-SUBRC <> 0.
APPEND LW_BSIK TO GT_BSIK_4.
ELSE.
LOOP AT LT_YK230 INTO LW_YK230 WHERE KEKKBN <> '4'.
EXIT.
ENDLOOP.
IF SY-SUBRC = 0.
CLEAR: LW_BSIK-DMBTR.
LOOP AT LT_YK230 INTO LW_YK230 WHERE KEKKBN <> '4'.
IF LW_YK230-KEKKBN = '5'.
LW_BSIK-DMBTR = LW_BSIK-DMBTR
+ ( LW_YK230-KNETXAMT
- LW_YK230-PIDAMT
- LW_YK230-PIDTAX ).
ELSE.
LW_BSIK-DMBTR = LW_BSIK-DMBTR + LW_YK230-KNETXAMT.
ENDIF.
ENDLOOP.
APPEND LW_BSIK TO GT_BSIK_5.
ENDIF.
ENDIF.
ENDIF.
ENDIF.
ELSE.
APPEND LW_BSIK TO GT_BSIK_3.
ENDIF.
ELSEIF LW_BSIK-BLART IN S_BLART2.
APPEND LW_BSIK TO GT_BSIK_2.
ELSE.
APPEND LW_BSIK TO GT_BSIK_3.
ENDIF.
ENDLOOP.

ENDFORM.                    " check_data
*&---------------------------------------------------------------------*
*&      Form  CALC_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CALC_DATA.

DATA: LW_BSIK  TYPE TYP_BSIK.
DATA: LV_DMBTR  TYPE BSIK-DMBTR.
DATA: LV_DMBTR1 TYPE BSIK-DMBTR.
DATA: LV_DMBTR2 TYPE BSIK-DMBTR.
DATA: LV_DMBTR3 TYPE BSIK-DMBTR.
DATA: LV_DMBTR4 TYPE BSIK-DMBTR.
DATA: LV_DMBTR5 TYPE BSIK-DMBTR.
DATA: LV_DMBTR6 TYPE BSIK-DMBTR.

CLEAR: LW_BSIK, LV_DMBTR.
LOOP AT GT_BSIK_1 INTO LW_BSIK.
IF LW_BSIK-SHKZG = 'H'.
LV_DMBTR = LV_DMBTR - LW_BSIK-DMBTR.
ELSE.
LV_DMBTR = LV_DMBTR + LW_BSIK-DMBTR.
ENDIF.
ENDLOOP.
LV_DMBTR1 = LV_DMBTR.

CLEAR: LW_BSIK, LV_DMBTR.
LOOP AT GT_BSIK_2 INTO LW_BSIK.
IF LW_BSIK-SHKZG = 'H'.
LV_DMBTR = LV_DMBTR - LW_BSIK-DMBTR.
ELSE.
LV_DMBTR = LV_DMBTR + LW_BSIK-DMBTR.
ENDIF.
ENDLOOP.
LV_DMBTR2 = LV_DMBTR.

CLEAR: LW_BSIK, LV_DMBTR.
LOOP AT GT_BSIK_3 INTO LW_BSIK.
IF LW_BSIK-SHKZG = 'H'.
LV_DMBTR = LV_DMBTR - LW_BSIK-DMBTR.
ELSE.
LV_DMBTR = LV_DMBTR + LW_BSIK-DMBTR.
ENDIF.
ENDLOOP.
LV_DMBTR3 = LV_DMBTR.

CLEAR: LW_BSIK, LV_DMBTR.
LOOP AT GT_BSIK_4 INTO LW_BSIK.
IF LW_BSIK-SHKZG = 'H'.
LV_DMBTR = LV_DMBTR - LW_BSIK-DMBTR.
ELSE.
LV_DMBTR = LV_DMBTR + LW_BSIK-DMBTR.
ENDIF.
ENDLOOP.
LV_DMBTR4 = LV_DMBTR.

CLEAR: LW_BSIK, LV_DMBTR.
LOOP AT GT_BSIK_5 INTO LW_BSIK.
IF LW_BSIK-SHKZG = 'H'.
LV_DMBTR = LV_DMBTR - LW_BSIK-DMBTR.
ELSE.
LV_DMBTR = LV_DMBTR + LW_BSIK-DMBTR.
ENDIF.
ENDLOOP.
LV_DMBTR5 = LV_DMBTR.

LV_DMBTR6 = LV_DMBTR1 + LV_DMBTR2 + LV_DMBTR3 - LV_DMBTR4 - LV_DMBTR5.


WRITE: / LV_DMBTR1 CURRENCY 'JPY',  50 '← ERSからの金額(RE)'.
WRITE: / LV_DMBTR2 CURRENCY 'JPY',  50 '← 支払依頼の相手方(KY)'.
WRITE: / LV_DMBTR3 CURRENCY 'JPY',  50 '← 経理手入力分'.
WRITE: / LV_DMBTR4 CURRENCY 'JPY',  50 '← 完全に未請求'.
WRITE: / LV_DMBTR5 CURRENCY 'JPY',  50 '← 一部未請求'.
WRITE: / LV_DMBTR6 CURRENCY 'JPY',  50 '← 差額'.

ENDFORM.                    " CALC_DATA
