*&---------------------------------------------------------------------*
*& Report  ZTEST_ISID06_006
*&---------------------------------------------------------------------*
REPORT  ZTEST_ISID06_006.
TYPE-POOLS ABAP.
PARAMETERS:
P_TEXT(20) TYPE C OBLIGATORY, "文字列
P_LEN  TYPE I.      "表示幅(カラム数)
*
AT SELECTION-SCREEN.
IF P_LEN < -1.
MESSAGE '-1以上を指定してください' TYPE 'E'.
ENDIF.
*
initialization.
%_P_TEXT_%_app_%-text = '文字列'.
%_P_LEN_%_app_%-text = '表示幅(カラム数)'.
*
START-OF-SELECTION.
PERFORM MAIN.
*&---------------------------------------------------------------------*
FORM MAIN.
DATA W_TEXT TYPE STRING.
DATA W_LEN  TYPE I.
* 入力文字のテスト
W_LEN = STRLEN( P_TEXT ).
WRITE: / '[' NO-GAP, P_TEXT NO-GAP, '], ABAP内文字数=', W_LEN.
PERFORM DYNAMIC_OUTPUT USING P_TEXT P_LEN W_TEXT.
WRITE: / '[' NO-GAP, W_TEXT NO-GAP, ']'.
** 合字のテスト
*  DATA D1 TYPE C LENGTH 6.
*  D1 = 'ホ#ホ#ッポ'.
*  W_LEN = STRLEN( D1 ).
*  WRITE: / '[' NO-GAP, D1 NO-GAP, '], ABAP内文字数=', W_LEN.
*  PERFORM DYNAMIC_OUTPUT USING D1 3 W_TEXT.
*  WRITE: / '[' NO-GAP, W_TEXT NO-GAP, ']'.
** サロゲートペアのテスト
*  DATA D2 TYPE C LENGTH 5.
*  D2 = '#られて'.
*  W_LEN = STRLEN( D2 ).
*  WRITE: / '[' NO-GAP, D2 NO-GAP, '], ABAP内文字数=', W_LEN.
*  PERFORM DYNAMIC_OUTPUT USING D2 3 W_TEXT.
*  WRITE: / '[' NO-GAP, W_TEXT NO-GAP, ']'.
ENDFORM.                    "main
*&---------------------------------------------------------------------*
*&      Form  DYNAMIC_OUTPUT
*&---------------------------------------------------------------------*
FORM DYNAMIC_OUTPUT USING P_TEXT TYPE C
P_LEN  TYPE I
P_STR  TYPE STRING.
*>>> REPLACE_INTO_DISPLAY_LAYOUTは、
*    サロゲートペアや合字に対応していないため使用不可。
*    DYNAMIC_OUTPUT_LENGTHを使用する。
*  CL_ABAP_LIST_UTILITIES=>REPLACE_INTO_DISPLAY_LAYOUT(
*    EXPORTING FIELD          = P_TEXT
*              DISPLAY_OFFSET = 0
*              DISPLAY_LENGTH = P_LEN
*    CHANGING  DISPLAY_DATA   = W_TEXT ).
DATA: L_LENGTH TYPE I,
L_OFFSET TYPE I.
* strlenは文字数ではなく、16ﾋﾞｯﾄを1とした内部長を返す。
* (例1：サロゲートペアの場合、1文字で2を返す)
* (例2：合字の場合、1文字に重ねる文字分が加算される)
* (例3：上記以外のとき、文字数と同じ値を返す)
WHILE L_OFFSET < STRLEN( P_TEXT ).
L_LENGTH = L_OFFSET + CHARLEN( P_TEXT+L_OFFSET(*) ).
IF P_LEN < CL_ABAP_LIST_UTILITIES=>DYNAMIC_OUTPUT_LENGTH( P_TEXT(L_LENGTH) ).
EXIT.
ENDIF.
L_OFFSET = L_LENGTH.
ENDWHILE.
IF L_OFFSET = 0.
CLEAR P_STR.
ELSE.
P_STR = P_TEXT(L_OFFSET).
ENDIF.
*<<<
ENDFORM.                    "DYNAMIC_OUTPUT
