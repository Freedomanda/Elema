************************************************************************
* [プログラム名]
*   ZS013200        価格マスタ登録・更新一覧
*
* [処理概要]
*   価格登録・更新を行ったものを、プラント別に抽出・出力する。
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2008/01/11   DMC.KURATA        発注単価・受注単価の通貨変換処理 追加
*                                 出力対象の追加
*  2008/03/19   DMC.SHIGEMITU     対象データが０件の場合も出力する
*  2009/06/10   NDSC.KAJISA       パフォーマンス対応(購買)
*  2009/10/29   NDSC.KAJISA       パフォーマンス対応(販売)
*  2010/09/08   SOLFIS TSUKAHARA  DMW2298対応
*  2012/09/05   ISID              ES-UP
*  2014/03/19   GSL               消費税改正対応：購買情報税コード追加
************************************************************************
report zs013200_gsl20140319_01 .

*&---------------------------------------------------------------------*
*&   TYPES定義
*&---------------------------------------------------------------------*
type-pools slis.
types:
begin of typ_data_h,                         " 販売価格MAIN
kunnr     type a901-kunnr,      "得意先コード
name1     type kna1-name1,                            "名称 1
zzzkdmat  type a901-zzzkdmat,   "得意先品目コード
matnr     type knmt-matnr,      "品目コード
maktx     type makt-maktx,      "品目テキスト
kstbm     type konm-kstbm,      "条件スケール数量
kpein     type konp-kpein,      "価格条件単位
value_old(13) type c,           "変更前の項目内容
value_new(13) type c,           "変更後の項目内容
konwa     type konp-konwa,      "通貨
kmein     type konp-kmein,      "数量単位
datbi     type a901-datbi,      "条件マスタ有効終了日
datab     type a901-datab,      "条件マスタ有効開始日
vkorgau   type a901-vkorgau,    "販売組織
vtweg     type a901-vtweg,      "流通チャネル
tabkey    type cdpos-tabkey,    "変更テーブルレコードキー
objectid  type cdpos-objectid,  "対象値
changenr  type cdpos-changenr,  "変更文書番
vkbur     type knvv-vkbur ,    "営業所
end of typ_data_h,

begin of typ_data_k,                         " 購買価格MAIN
lifnr     type a017-lifnr,      "仕入先勘定コード
name1     type lfa1-name1,                            "名称 1
idnlf     type eina-idnlf,      "仕入先の品目コード
matnr     type a017-matnr,      "品目コード
maktx     type makt-maktx,      "品目テキスト
*---MODIFY START GSL 2014/03/19 ---------------------------------------*
ekorg     type a017-ekorg,      "購買組織コード
werks     type a017-werks,      "プラントコード
esokz     type a017-esokz,      "購買情報カテゴリ
mwskz     type eine-mwskz,      "消費税コード
*---MODIFY END   GSL 2014/03/19 ---------------------------------------*
kstbm     type konm-kstbm,      "条件スケール数量
kpein     type konp-kpein,      "価格条件単位
value_old(13) type c,           "変更前の項目内容
value_new(13) type c,           "変更後の項目内容
konwa     type konp-konwa,      "通貨
kmein     type konp-kmein,      "数量単位
datbi     type a017-datbi,      "条件マスタ有効終了日
datab     type a017-datab,      "条件マスタ有効開始日
tabkey    type cdpos-tabkey,    "変更テーブルレコードキー
objectid  type cdpos-objectid,  "対象値
changenr  type cdpos-changenr,  "変更文書番号

end of typ_data_k.
*2009/06/10 ADD START
types:begin of typ_cdhdr,
objectid type cdhdr-objectid,   " 対象値
changenr type cdhdr-changenr,   " 変更文書番号
end of typ_cdhdr.

types:begin of typ_cdpos,
chngind   type cdpos-chngind,
fname     type cdpos-fname,
tabkey    type cdpos-tabkey,
objectid  type cdpos-objectid,
changenr  type cdpos-changenr,
value_new type cdpos-value_new," 変更後の項目内容
value_old type cdpos-value_old," 変更前の項目内容
cuky_old  type cdpos-cuky_old," 変更前の参照通貨
cuky_new  type cdpos-cuky_new," 変更後の参照通貨
end of typ_cdpos.

types:begin of typ_a017,
knumh  type a017-knumh,
lifnr  type a017-lifnr,      "仕入先勘定コード
matnr  type a017-matnr,      "品目コード
*---MODIFY START GSL 2014/03/19 ---------------------------------------*
ekorg  type a017-ekorg,      "購買組織コード
werks  type a017-werks,      "プラントコード
esokz  type a017-esokz,      "購買情報カテゴリ
*---MODIFY END   GSL 2014/03/19 ---------------------------------------*
datbi  type a017-datbi,      "条件マスタ有効終了日
datab  type a017-datab,      "条件マスタ有効開始日
end of typ_a017.
*2009/06/10 ADD END

*&---------------------------------------------------------------------*
*&   DATA定義（内部テーブル、テーブルヘッダ）
*&---------------------------------------------------------------------*
data:
*2009/06/10 MOD START
*    IT_CDHDR     TYPE STANDARD TABLE OF CDHDR,     " 伝票ヘッダ変更
*    IT_CDPOS     TYPE STANDARD TABLE OF CDPOS,     " 伝票明細変更
*    IF_CDPOS     TYPE CDPOS,
it_cdhdr     type standard table of typ_cdhdr," 伝票ヘッダ変更
it_cdpos     type sorted   table of typ_cdpos  " 伝票明細変更
with non-unique key
chngind fname tabkey
objectid changenr,
if_cdpos     type typ_cdpos,
*2009/06/10 MOD END
it_data_h    type standard table of typ_data_h," 販売価格一覧
if_data_h    type typ_data_h,
it_data_k    type standard table of typ_data_k," 購買価格一覧
if_data_k    type typ_data_k,
gt_alv_h     type table of zslist_v22 with header line,
gf_alv_h     type zslist_v22,
gt_alv_k     type table of zslist_v23_l with header line,
gf_alv_k     type zslist_v23_l.

*&---------------------------------------------------------------------*
*&   DATA定義（グローバル変数）
*&---------------------------------------------------------------------*
data:    g_vkbur        type tvkbt-vkbur,         "営業所
g_bezei        type tvkbt-bezei,         "営業所名
g_name1        type t001w-name1,         "プラント名
gf_layout      type slis_layout_alv,     "レイアウト構造
gf_variant     type disvariant,          "バリアント
gf_print       type slis_print_alv,
gt_event       type slis_t_event,
gf_event       type slis_alv_event,
g_top_of_page  type slis_formname value 'TOP_OF_PAGE',
g_repid        type sy-repid,
l_count        type i .

*&---------------------------------------------------------------------*
*&   画面定義
*&---------------------------------------------------------------------*
parameters:     pr_werks type tvkwz-werks obligatory.     " プラント
select-options: pr_date  for sy-datum default sy-datum.   " 登録日付

parameters: pr_kb  radiobutton group rad1,                " 購買価格一覧
pr_hb  radiobutton group rad1.                " 販売価格一覧

*&---------------------------------------------------------------------*
*&   START-OF-SELECTION
*&---------------------------------------------------------------------*
start-of-selection.

g_repid = sy-repid.
g_vkbur = pr_werks.
shift g_vkbur by 1 places left.
g_vkbur+3(1) = '0'.                           " 営業所

* 変更文書の取得
perform frm_get_cdhdr.

* 変更文書明細の取得
perform frm_get_cdpos.

* ラジオボタン「販売価格マスタ登録・更新一覧表」がONの場合
if pr_hb = 'X'.
clear: gt_alv_h[].
* 販売価格一覧対象データの取得
perform frm_get_datah.

loop at it_data_h
into if_data_h.
clear: gf_alv_h.
* 得意先名の取得
perform frm_get_kna1 using if_data_h-kunnr
if_data_h-name1.
* 営業所の取得
perform frm_get__knvv using if_data_h-kunnr
if_data_h-vkbur .


* 品目コードの取得
perform frm_get_knmt using if_data_h.
* 品目名の取得
perform frm_get_makt using if_data_h-matnr
if_data_h-maktx.
* 通貨・単位・価格条件単位の取得
perform frm_get_konp using if_data_h-objectid
if_data_h-konwa
if_data_h-kmein
if_data_h-kpein.
* スケール数量の取得
perform frm_get_konm  using if_data_h-tabkey
if_data_h-objectid
if_data_h-changenr
if_data_h-kstbm.
* 受注単価（旧）の取得
perform frm_get_value_old using if_data_h-tabkey
if_data_h-objectid
if_data_h-changenr
if_data_h-value_old.
write if_data_h-value_old
to if_data_h-value_old right-justified.
move-corresponding if_data_h to gf_alv_h.
if g_vkbur eq if_data_h-vkbur .
append gf_alv_h to gt_alv_h.
endif .
endloop.
* 営業所名の取得
perform frm_get_tvkbt using g_vkbur
g_bezei.

describe table gt_alv_h lines l_count.
if l_count = 0.
* 2008/03/19 DELETE START
*      MESSAGE S614(Z1) WITH TEXT-M01.
*      STOP.
* 2008/03/19 DELETE END
endif.


*--- 「販売価格マスタ登録・更新一覧表」出力
perform frm_write_datah.
endif.
* ラジオボタン「購買価格マスタ登録・更新一覧表」がONの場合
if pr_kb = 'X'.
clear: gt_alv_k[].
* 購買価格一覧対象データの取得
perform frm_get_datak.

loop at it_data_k
into if_data_k.
clear: gf_alv_k.
* 仕入先名の取得
perform frm_get_lfa1 using if_data_k-lifnr
if_data_k-name1.
* 仕入先品目コードの取得
perform frm_get_eina using if_data_k-lifnr
if_data_k-matnr
if_data_k-idnlf.
*---APPEND START GSL 2014/03/19 ---------------------------------------*
* 購買情報マスタ税コードの取得
perform frm_get_eine using    if_data_k-lifnr "仕入先コード
if_data_k-matnr "品目コード
if_data_k-ekorg "購買組織コード
if_data_k-werks "プラント
if_data_k-esokz "購買情報区分
changing if_data_k-mwskz "消費税コード
.
*---APPEND END   GSL 2014/03/19 ---------------------------------------*

* 品目名の取得
perform frm_get_makt using if_data_k-matnr
if_data_k-maktx.
* 通貨・単位・価格条件単位の取得
perform frm_get_konp using if_data_k-objectid
if_data_k-konwa
if_data_k-kmein
if_data_k-kpein.
* スケール数量の取得
perform frm_get_konm using if_data_k-tabkey
if_data_k-objectid
if_data_k-changenr
if_data_k-kstbm.
* 購買単価（旧）の取得
perform frm_get_value_old using if_data_k-tabkey
if_data_k-objectid
if_data_k-changenr
if_data_k-value_old.
write if_data_k-value_old
to if_data_k-value_old right-justified.
move-corresponding if_data_k to gf_alv_k.
append gf_alv_k to gt_alv_k.
endloop.
* プラント名の取得
perform frm_get_t001w using pr_werks
g_name1.
*--- 「購買価格マスタ登録・更新一覧表」出力
perform frm_write_datak.
endif.


*&---------------------------------------------------------------------*
*&      Form  FRM_GET_CDHDR
*&---------------------------------------------------------------------*
*       変更文書の取得
*----------------------------------------------------------------------*
form frm_get_cdhdr.

select objectid                                " 対象値
changenr                                " 変更文書番号
into corresponding fields of table it_cdhdr
from cdhdr
where objectclas = 'COND_A'
and udate in pr_date.

endform.                    " FRM_GET_CDHDR
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_CDPOS
*&---------------------------------------------------------------------*
*       変更文書明細の取得
*----------------------------------------------------------------------*
form frm_get_cdpos.
* Add ES-UP 2012/11/16 -->
data l_cdpos type ref to typ_cdpos.
* Add ES-UP 2012/11/16 <--
if not it_cdhdr is initial.
*2009/06/10 MOD START
*    SELECT VALUE_NEW                           " 変更後の項目内容
*           VALUE_OLD                           " 変更前の項目内容
*           TABKEY                      " 変更テーブルレコードキー
*           OBJECTID                            " 対象値
*           CHNGIND                             " 変更タイプ
*           CHANGENR                            " 変更文書番号
*           FNAME
**2008/01/11 ADD START
*           CUKY_OLD                            " 変更前の参照通貨
*           CUKY_NEW                            " 変更後の参照通貨
**2008/01/11 ADD END
*      INTO CORRESPONDING FIELDS OF TABLE IT_CDPOS
select chngind
fname
tabkey
objectid
changenr
value_new
value_old
cuky_old
cuky_new
into table it_cdpos
*2009/06/10 MOD END
from cdpos
for all entries in it_cdhdr
where objectclas = 'COND_A'
and ( tabname = 'KONM'
or tabname = 'KONPAE' )                   " テーブル名
and ( fname = 'KBETR'
or fname = 'KSTBM'
or fname = 'KEY' )
and ( chngind = 'U'
or chngind = 'E'
or chngind = 'I' )                        " 変更タイプ
and objectid = it_cdhdr-objectid                " 対象値
and changenr = it_cdhdr-changenr.               " 変更文書番号
* Add ES-UP 2012/11/16 -->
loop at it_cdpos reference into l_cdpos
where fname = 'KBETR'
or fname = 'KSTBM'.
shift l_cdpos->value_new right deleting trailing space. "
"変更後の項目内容
shift l_cdpos->value_old right deleting trailing space. "
"変更前の項目内容
endloop.
* Add ES-UP 2012/11/16 <--
endif.

endform.                    " FRM_GET_CDPOS
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_DATAH
*&---------------------------------------------------------------------*
*      販売価格一覧対象データの取得
*----------------------------------------------------------------------*
form frm_get_datah.

data: l_lines type i.

* 2009/10/29 ADD START
*-- A901の読込を一括取得に変更
types:begin of l_ty_a901,
knumh    type a901-knumh,    "条件レコード番号
kunnr    type a901-kunnr,    "得意先コード
zzzkdmat type a901-zzzkdmat, "得意先品目コード
datbi    type a901-datbi,    "条件マスタ有効終了日
datab    type a901-datab,    "条件マスタ有効開始日
vkorgau  type a901-vkorgau,  "販売組織
vtweg    type a901-vtweg,    "流通チャネル
end of l_ty_a901.
data:l_it_a901 type sorted table of l_ty_a901
with non-unique key knumh,
l_wk_a901 type l_ty_a901.

refresh:l_it_a901.
clear:  l_wk_a901.

if it_cdpos[] is initial.
else.                                " CDPOSにデータがある場合のみ実行
select
a~knumh                                  "条件レコード番号
a~kunnr                                  "得意先コード
a~zzzkdmat                               "得意先品目コード
a~datbi                                  "条件マスタ有効終了日
a~datab                                  "条件マスタ有効開始日
a~vkorgau                                "販売組織	
a~vtweg                                  "流通チャネル
into table l_it_a901
from a901 as a inner join tvkwz as b
on a~vkorgau = b~vkorg
and a~vtweg   = b~vtweg
where b~werks = pr_werks.
endif.
* 2009/10/29 ADD END

loop at it_cdpos
into if_cdpos
*2008/01/11 MOD START
where ( chngind = 'U'        and
fname   = 'KBETR' )  or
( chngind = 'I'        and
fname   = 'KEY'   ).
*    WHERE CHNGIND = 'U'
*      AND FNAME = 'KBETR'.
*2008/01/11 MOD END

clear: if_data_h.
* 2009/10/29 DEL START
*-- A901の読込を一括取得に変更
*    SELECT SINGLE
*        A~KUNNR                                    "得意先コード
*        A~ZZZKDMAT                                 "得意先品目コード
*        A~DATBI
*"条件マスタ有効終了日
*        A~DATAB
*"条件マスタ有効開始日
*        A~VKORGAU                                  "販売組織	
*        A~VTWEG                                    "流通チャネル
*      INTO CORRESPONDING FIELDS OF IF_DATA_H
*      FROM A901 AS A INNER JOIN TVKWZ AS B
*            ON A~VKORGAU = B~VKORG
*           AND A~VTWEG   = B~VTWEG
*     WHERE A~KNUMH = IF_CDPOS-OBJECTID
*       AND B~WERKS = PR_WERKS.
* 2009/10/29 DEL END
* 2009/10/29 ADD START
*-- 一括取得済みのA901の読込
clear:  l_wk_a901.
read table l_it_a901 into l_wk_a901
with table key knumh = if_cdpos-objectid.
* 2009/10/29 START END
if sy-subrc = 0.
* 2009/10/29 ADD START
*-- 読込んだA901の反映
move-corresponding l_wk_a901 to if_data_h.
* 2009/10/29 START END
*2008/01/11 MOD START
*      変更タイプ：U
if if_cdpos-chngind = 'U'.
* Del ES-UP 2012/11/16 -->
*        if if_cdpos-cuky_new = 'JPY'.
*          if_data_h-value_new = if_cdpos-value_new+241(13). "変更後内容
*        else.
* Del ES-UP 2012/11/16 <--
*          JPY以外の場合は通貨変換
perform conv_amount
using    if_cdpos-value_new+241(13)
if_cdpos-cuky_new
changing if_data_h-value_new.       "変更後内容
* Del ES-UP 2012/11/16 -->
*        endif.
*        if if_cdpos-cuky_old = 'JPY'.
*          if_data_h-value_old = if_cdpos-value_old+241(13). "変更前内容
*        else.
* Del ES-UP 2012/11/16 <--
*          JPY以外の場合は通貨変換
perform conv_amount
using    if_cdpos-value_old+241(13)
if_cdpos-cuky_old
changing if_data_h-value_old.       "変更前内容
* Del ES-UP 2012/11/16 -->
*        endif.
* Del ES-UP 2012/11/16 <--
*      変更タイプ：I
else.
*         スケールを使用しない場合の条件金額/百分率の取得
perform frm_get_konp1 using if_cdpos-objectid
if_data_h-value_new
if_data_h-value_old.
*          PERFORM FRM_GET_KONP1 USING IF_CDPOS-OBJECTID
*                                      IF_DATA_H-VALUE_NEW.
*          IF_DATA_H-VALUE_OLD = '0'.
endif.
*      IF_DATA_H-VALUE_NEW = IF_CDPOS-VALUE_NEW+241(13).    "変更後内容
*      IF_DATA_H-VALUE_OLD = IF_CDPOS-VALUE_OLD+241(13).    "変更前内容
*2008/01/11 MOD END
if_data_h-tabkey   = if_cdpos-tabkey.    "変更テーブルレコードキー
if_data_h-objectid = if_cdpos-objectid.  "対象値
if_data_h-changenr = if_cdpos-changenr.  "変更文書番号
write if_data_h-value_new
to if_data_h-value_new right-justified.
write if_data_h-value_old
to if_data_h-value_old right-justified.
append if_data_h to it_data_h.
endif.
endloop.

* 2008/03/19 DELETE START
*  DESCRIBE TABLE IT_DATA_H LINES L_LINES.
*  IF L_LINES = 0.
*    MESSAGE S614(Z1) WITH TEXT-M01.
*    STOP.
*  ENDIF.
* 2008/03/19 DELETE END

endform.                    " FRM_GET_DATAH
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_KNA1
*&---------------------------------------------------------------------*
*       得意先名の取得
*----------------------------------------------------------------------*
*      -->P_KUNNR 得意先コード
*      <--P_NAME  得意先名
*----------------------------------------------------------------------*
form frm_get_kna1 using    p_kunnr
p_name.
select single
name1
into p_name
from kna1
where kunnr = p_kunnr.

endform.                    " FRM_GET_KNA1
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_KNMT
*&---------------------------------------------------------------------*
*       品目コードの取得
*----------------------------------------------------------------------*
form frm_get_knmt using    p_if_data_h type typ_data_h.

select single
matnr
into p_if_data_h-matnr
from knmt
where vkorg = p_if_data_h-vkorgau      "販売組織
and vtweg = p_if_data_h-vtweg        "流通チャネル
and kunnr = p_if_data_h-kunnr        "得意先コード
and kdmat = p_if_data_h-zzzkdmat.    "得意先品目コード

endform.                    " FRM_GET_KNMT
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_MAKT
*&---------------------------------------------------------------------*
*       品目名の取得
*----------------------------------------------------------------------*
*      -->P_MATNR  品目コード
*      <--P_MAKTX 品目名
*----------------------------------------------------------------------*
form frm_get_makt using    p_matnr
p_maktx.
select single
maktx
into p_maktx
from makt
where matnr = p_matnr.

endform.                    " FRM_GET_MAKT
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_KONM
*&---------------------------------------------------------------------*
*       スケール数量の取得
*----------------------------------------------------------------------*
*      -->P_TABKEY     変更テーブルレコードキー
*      -->P_OBJECTID   対象値
*      -->P_CHANGENR   変更文書番号
*      <--P_KSTBM     スケール数量
*----------------------------------------------------------------------*
form frm_get_konm using     p_tabkey
p_objectid
p_changenr
p_kstbm.
.
*2009/06/10 MOD START
*  DATA: LF_CDPOS TYPE CDPOS,
data: lf_cdpos type typ_cdpos,
*2009/06/10 MOD END
* 2010/09/08 MOD START DMW2298対応
* I型だとオーバーフローを起こす事例が発生したためP型に変更
*        L_TMP TYPE I.
l_tmp type p.
* 2010/09/08 MOD END DMW2298対応

read table it_cdpos into lf_cdpos
*2009/06/10 MOD START
*        WITH KEY TABKEY   = P_TABKEY
*                 OBJECTID = P_OBJECTID
*                 CHNGIND  = 'U'
*                 FNAME    = 'KSTBM'
*                 CHANGENR = P_CHANGENR.
with table key chngind  = 'U'
fname    = 'KSTBM'
tabkey   = p_tabkey
objectid = p_objectid
changenr = p_changenr.
*2009/06/10 MOD END
if sy-subrc = 0.
l_tmp = lf_cdpos-value_new+241(13).
* Mod ES-UP 2012/11/16 -->
*    p_kstbm = l_tmp / 1000.
p_kstbm = l_tmp.
* Mod ES-UP 2012/11/16 <--
endif.

endform.                    " FRM_GET_KONM
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_KONP
*&---------------------------------------------------------------------*
*       通貨・単位の取得
*----------------------------------------------------------------------*
*      -->P_OBJECTID  条件レコード番号
*      <--P_KONWA     通貨
*      <--P_KMEIN     数量単位
*      <--P_KPEIN     価格条件単位
*----------------------------------------------------------------------*
form frm_get_konp using    p_objectid
p_konwa
p_kmein
p_kpein.

select single
konwa           "通貨
kmein           "数量単位
kpein           "価格条件単位
into (p_konwa, p_kmein, p_kpein)
from konp
where knumh = p_objectid.

endform.                    " FRM_GET_KONP
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_KONP1
*&---------------------------------------------------------------------*
*       スケールを使用しない場合の条件金額/百分率の取得
*----------------------------------------------------------------------*
*      -->P_OBJECTID  条件レコード番号
*      <--P_KBETR_N   条件金額(新)
*      <--P_KBETR_O   条件金額(旧)
*----------------------------------------------------------------------*
form frm_get_konp1 using    p_objectid
*2008/01/11 MOD START
p_kbetr_n
p_kbetr_o.
*                           P_KBETR.
*2008/01/11 MOD END

data: l_kbetr type konp-kbetr,
l_konwa type konp-konwa,
l_idoc_amount(255) type c,
*2008/01/11 ADD START
l_decimals type tcurx-currdec,
l_zero(1)  type p value '0'.
*2008/01/11 ADD END

select single
kbetr           "条件金額
konwa           "通貨
into (l_kbetr, l_konwa)
from konp
where knumh = p_objectid.

*--- 汎用モジュール金額変換モジュール
call function 'CURRENCY_AMOUNT_SAP_TO_IDOC'
exporting
currency    = l_konwa
sap_amount  = l_kbetr
importing
idoc_amount = l_idoc_amount
exceptions
others      = 1.
if sy-subrc <> 1.
*2008/01/11 MOD START
p_kbetr_n = l_idoc_amount.
*    P_KBETR = L_IDOC_AMOUNT.
*2008/01/11 MOD END
endif.

*2008/01/11 ADD START
if l_konwa = 'JPY'.
p_kbetr_o = '0'.
else.
*   通貨コードの小数点以下桁数を取得
perform read_decimals using    l_konwa
changing l_decimals.
if l_decimals is initial.
p_kbetr_o = '0'.
else.
write l_zero to p_kbetr_o decimals l_decimals.
endif.
endif.
*2008/01/11 ADD END

endform.                    " FRM_GET_KONP1
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_VALUE_OLD
*&---------------------------------------------------------------------*
*       受注単価（旧）の取得
*----------------------------------------------------------------------*
*      -->P_TABKEY     変更テーブルレコードキー
*      -->P_OBJECTID   対象値
*      -->P_CHANGENR   変更文書番号
*      <--P_VALUE_OLD  受注単価（旧）
*----------------------------------------------------------------------*
form frm_get_value_old using    p_tabkey
p_objectid
p_changenr
p_value_old.


*2009/06/10 MOD START
*  DATA: LF_CDPOS TYPE CDPOS.
data: lf_cdpos type typ_cdpos.
*2009/06/10 MOD END

read table it_cdpos into lf_cdpos
*2009/06/10 MOD START
*        WITH KEY TABKEY   = P_TABKEY
*                 OBJECTID = P_OBJECTID
*                 CHNGIND  = 'E'
*                 FNAME    = 'KBETR'
*                 CHANGENR = P_CHANGENR.
with table key chngind  = 'E'
fname    = 'KBETR'
tabkey   = p_tabkey
objectid = p_objectid
changenr = p_changenr.
*2009/06/10 MOD END
if sy-subrc = 0.
*2008/01/11 MOD START
* Del ES-UP 2012/11/16 -->
*    if lf_cdpos-cuky_old = 'JPY'.
*      p_value_old = lf_cdpos-value_old+241(13).
*    else.
* Del ES-UP 2012/11/16 <--
*     通貨変換
perform conv_amount
using    lf_cdpos-value_old+241(13)
lf_cdpos-cuky_old
changing p_value_old.
* Del ES-UP 2012/11/16 -->
*    endif.
* Del ES-UP 2012/11/16 <--
*    P_VALUE_OLD = LF_CDPOS-VALUE_OLD+241(13).
*2008/01/11 MOD END
endif.

endform.                    " FRM_GET_VALUE_OLD
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_DATAK
*&---------------------------------------------------------------------*
*       購買価格一覧対象データの取得
*----------------------------------------------------------------------*
form frm_get_datak.

data: l_lines type i.
* 2009/06/10 ADD START
data:l_it_a017 type sorted table of typ_a017
with non-unique key knumh,
l_if_a017 type typ_a017.
refresh:l_it_a017.
clear:  l_if_a017.
select  knumh
lifnr                                    "仕入先勘定コード
matnr                                    "品目コード
*---MODIFY START GSL 2014/03/19 ---------------------------------------*
ekorg                                    "購買組織コード
werks                                    "プラントコード
esokz                                    "購買情報カテゴリ
*---MODIFY END   GSL 2014/03/19 ---------------------------------------*
datbi                                    "条件マスタ有効終了日
datab                                    "条件マスタ有効開始日
into table l_it_a017
from a017
where werks = pr_werks.
* 2009/06/10 ADD END

*2009/06/10 MOD START
*  LOOP AT IT_CDPOS
*     INTO IF_CDPOS.
*    IF ( IF_CDPOS-CHNGIND = 'U'
*      AND IF_CDPOS-FNAME = 'KBETR' )
*    OR ( IF_CDPOS-CHNGIND = 'I'
*      AND IF_CDPOS-FNAME = 'KEY' ).
*      CLEAR: IF_DATA_H.
*      SELECT SINGLE
*         LIFNR                                    "仕入先勘定コード
*         MATNR                                    "品目コード
*         DATBI                                    "条件マスタ有効終了日
*         DATAB                                    "条件マスタ有効開始日
*        INTO CORRESPONDING FIELDS OF IF_DATA_K
*        FROM A017
*       WHERE KNUMH = IF_CDPOS-OBJECTID
*         AND WERKS = PR_WERKS.
loop at it_cdpos into if_cdpos
where (     chngind = 'U'
and fname = 'KBETR' )
or (     chngind = 'I'
and fname = 'KEY' ).
clear:if_data_k,
l_if_a017.
read table l_it_a017 into l_if_a017
with table key knumh = if_cdpos-objectid.
*2009/06/10 MOD END
if sy-subrc = 0.
*2009/06/10 ADD START
move-corresponding  l_if_a017 to if_data_k.
*2009/06/10 ADD END.
if if_cdpos-chngind = 'U'.
*2008/01/11 MOD START
* Del ES-UP 2012/11/16 -->
*        if if_cdpos-cuky_new = 'JPY'.
*          if_data_k-value_new = if_cdpos-value_new+241(13)."変更後内容
*        else.
* Del ES-UP 2012/11/16 <--
*           JPY以外の場合は通貨変換
perform conv_amount
using    if_cdpos-value_new+241(13)
if_cdpos-cuky_new
changing if_data_k-value_new.      "変更後内容
* Del ES-UP 2012/11/16 -->
*        endif.
*        if if_cdpos-cuky_old = 'JPY'.
*          if_data_k-value_old = if_cdpos-value_old+241(13)."変更前内容
*        else.
* Del ES-UP 2012/11/16 <--
*           JPY以外の場合は通貨変換
perform conv_amount
using    if_cdpos-value_old+241(13)
if_cdpos-cuky_old
changing if_data_k-value_old.      "変更前内容
* Del ES-UP 2012/11/16 -->
*        endif.
* Del ES-UP 2012/11/16 <--
*          IF_DATA_K-VALUE_NEW = IF_CDPOS-VALUE_NEW+241(13). "変更後内容
*          IF_DATA_K-VALUE_OLD = IF_CDPOS-VALUE_OLD+241(13). "変更前内容
*2008/01/11 MOD END
else.
* スケールを使用しない場合の条件金額/百分率の取得
*2008/01/11 MOD START
perform frm_get_konp1 using if_cdpos-objectid
if_data_k-value_new
if_data_k-value_old.
*          PERFORM FRM_GET_KONP1 USING IF_CDPOS-OBJECTID
*                                      IF_DATA_K-VALUE_NEW.
*          IF_DATA_K-VALUE_OLD = '0'.
*2008/01/11 MOD END
endif.
if_data_k-tabkey   = if_cdpos-tabkey.  "変更テーブルレコードキー
if_data_k-objectid = if_cdpos-objectid.  "対象値
if_data_k-changenr = if_cdpos-changenr.  "変更文書番号
write if_data_k-value_new
to if_data_k-value_new right-justified.
write if_data_k-value_old
to if_data_k-value_old right-justified.
append if_data_k to it_data_k.
endif.
*2009/06/10 DEL START
*    ENDIF.
*2009/06/10 DEL END
endloop.

* 2008/03/19 DELETE START
*  DESCRIBE TABLE IT_DATA_K LINES L_LINES.
*  IF L_LINES = 0.
*    MESSAGE S614(Z1) WITH TEXT-M01.
*    STOP.
*  ENDIF.
* 2008/03/19 DELETE END

endform.                    " FRM_GET_DATAK
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_LFA1
*&---------------------------------------------------------------------*
*       仕入先名の取得
*----------------------------------------------------------------------*
*      -->P_LIFNR  仕入先コード
*      <--P_NAME1  仕入先名
*----------------------------------------------------------------------*
form frm_get_lfa1 using    p_lifnr
p_name1.

select single
name1
into p_name1
from lfa1
where lifnr = p_lifnr.

endform.                    " FRM_GET_LFA1
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_EINA
*&---------------------------------------------------------------------*
*       仕入先品目コードの取得
*----------------------------------------------------------------------*
*      -->P_LIFNR  仕入先コード
*      -->P_MATNR  品目コード
*      <--P_IDNLF  仕入先品目コード
*----------------------------------------------------------------------*
form frm_get_eina using    p_lifnr
p_matnr
p_idnlf.

select single
idnlf
into p_idnlf
from eina
where lifnr = p_lifnr
and matnr = p_matnr.

endform.                    " FRM_GET_EINA
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_TVKBT
*&---------------------------------------------------------------------*
*       営業所名の取得
*----------------------------------------------------------------------*
*      -->P_VKBUR  営業所
*      -->P_BEZEI  営業所名
*----------------------------------------------------------------------*
form frm_get_tvkbt using    p_vkbur
p_bezei.

select single
bezei
into p_bezei
from tvkbt
where spras = 'JA'                  "言語キー
and vkbur = p_vkbur.              "営業所

endform.                    " FRM_GET_TVKBT
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_T001W
*&---------------------------------------------------------------------*
*       プラント名の取得
*----------------------------------------------------------------------*
*      -->P_WERKS  プラント
*      <--P_NAME1  プラント名
*----------------------------------------------------------------------*
form frm_get_t001w using    p_werks
p_name1.

select single
name1
into p_name1
from t001w
where werks = p_werks .              "プラント

endform.                    " FRM_GET_T001W
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_DATAH
*&---------------------------------------------------------------------*
form frm_write_datah.

*--- イベント取得処理
perform frm_event_get.
gf_variant-variant = '/ZS013200_SD'.
*--- リストの出力
call function 'REUSE_ALV_LIST_DISPLAY'
exporting
i_callback_program     = g_repid  "レポートID
* Del ES-UP 2012/09/05 -->
*            I_CALLBACK_TOP_OF_PAGE = G_TOP_OF_PAGE  "TOP_OF_PAGE
* Del ES-UP 2012/09/05 <--
i_structure_name       = 'ZSLIST_V22'  "構造
is_layout              = gf_layout  "レイアウト設定
i_save                 = 'A'  "レイアウト保存
is_variant             = gf_variant
it_events              = gt_event[]  "イベント設定
is_print               = gf_print  "印刷設定
tables
t_outtab               = gt_alv_h  " 帳票出力用内部テーブル
exceptions
program_error          = 1
others                 = 2.
if sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
endif.

endform.                    " FRM_WRITE_DATAH
*&---------------------------------------------------------------------*
*&      Form  FRM_TOP_OF_PAGE
*&---------------------------------------------------------------------*
form frm_top_of_page.

if pr_hb = 'X'.
write:/60 text-006.
write:/ text-001, sy-datum.
write:/ text-002, g_vkbur, 30 text-003, g_bezei.
else.
write:/60 text-007.
write:/ text-001, sy-datum.
write:/ text-004, pr_werks, 30 text-005, g_name1.
endif.

endform.                    " FRM_TOP_OF_PAGE
*&---------------------------------------------------------------------*
*&      Form  FRM_EVENT_GET
*&---------------------------------------------------------------------*
*      イベント取得処理
*----------------------------------------------------------------------*
form frm_event_get.

*--- イベント取得
call function 'REUSE_ALV_EVENTS_GET'
exporting
i_list_type     = 0
importing
et_events       = gt_event
exceptions
list_type_wrong = 1
others          = 2.
if sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
endif.

*--- 使用イベントに実行するサブルーチン名を設定
loop at gt_event into gf_event.
case gf_event-name.
when 'TOP_OF_PAGE'.
gf_event-form = 'FRM_TOP_OF_PAGE'.
modify gt_event from gf_event.
endcase.
endloop.

endform.                    " FRM_EVENT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_DATAK
*&---------------------------------------------------------------------*
*       「購買価格マスタ登録・更新一覧表」出力
*----------------------------------------------------------------------*
form frm_write_datak.

*--- イベント取得処理
perform frm_event_get.
gf_variant-variant = '/ZS013200_MM'.

*2009/06/10 ADD START
sort gt_alv_k.
*2009/06/10 ADD END

*--- リストの出力
call function 'REUSE_ALV_LIST_DISPLAY'
exporting
i_callback_program     = g_repid  "レポートID
* Del ES-UP 2012/09/05 -->
*            I_CALLBACK_TOP_OF_PAGE = G_TOP_OF_PAGE  "TOP_OF_PAGE
* Del ES-UP 2012/09/05 <--
i_structure_name       = 'ZSLIST_V23_L'  "構造
is_layout              = gf_layout  "レイアウト設定
i_save                 = 'A'  "レイアウト保存
is_variant             = gf_variant
it_events              = gt_event[]  "イベント設定
is_print               = gf_print  "印刷設定
tables
t_outtab               = gt_alv_k  " 帳票出力用内部テーブル
exceptions
program_error          = 1
others                 = 2.
if sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
endif.

endform.                    " FRM_WRITE_DATAK
*&---------------------------------------------------------------------*
*&      Form  FRM_GET__KNVV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IF_DATA_H_KUNNR  text
*      -->P_IF_DATA_H_VKBUR  text
*----------------------------------------------------------------------*
form frm_get__knvv using    p_kunnr
p_vkbur.
select vkbur
from knvv
up to 1 rows
into p_vkbur
where kunnr eq p_kunnr .
exit .
endselect .

endform.                    " FRM_GET__KNVV
*&---------------------------------------------------------------------*
*&      Form  CONV_AMOUNT
*&---------------------------------------------------------------------*
*       金額／百分率の取得
*----------------------------------------------------------------------*
*      -->I_VALUE  変換前の値
*      -->I_CUKY   通貨コード
*      <--O_VALUE  変換後の値
*----------------------------------------------------------------------*
form conv_amount using    i_value
i_cuky
changing o_value.
* Mod ES-UP 2012/11/16 -->
*  data : lv_value(13) type p decimals 3,
*         lv_decimals  type tcurx-currdec.
*
** 通貨コードの小数点以下桁数を取得
*  perform read_decimals using    i_cuky
*                        changing lv_decimals.
*  if lv_decimals is initial.
*    o_value = i_value.
*    exit.
*  endif.
** 10のX乗で割る
*  lv_value = i_value / ( 10 ** lv_decimals ).
*  write lv_value to o_value decimals lv_decimals.
data dec_amount_int type p decimals 2.
dec_amount_int = i_value.
write dec_amount_int to o_value CURRENCY i_cuky.
* Mod ES-UP 2012/11/16 <--
endform.                    " CONV_AMOUNT
*&---------------------------------------------------------------------*
*&      Form  READ_DECIMALS
*&---------------------------------------------------------------------*
*       通貨コードの小数点以下桁数を取得
*----------------------------------------------------------------------*
*      -->I_CUKY      通貨コード
*      <--O_DECIMALS  小数点以下桁数
*----------------------------------------------------------------------*
form read_decimals using    i_cuky
changing o_decimals.

call function 'FWOS_CURRENCY_DECIMALS_READ'
exporting
i_currency         = i_cuky
importing
e_decimals         = o_decimals
exceptions
i_currency_initial = 1
others             = 2.

endform.                    " READ_DECIMALS
*---APPEND START GSL 2014/03/19 ---------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  frm_get_eine
*&---------------------------------------------------------------------*
*       購買情報マスタ消費税コードの取得
*----------------------------------------------------------------------*
*      -->i_lifnr     仕入先コード
*      -->i_matnr     品目コード
*      -->i_ekorg     購買組織コード
*      -->i_werks     プラントコード
*      -->i_esokz     購買情報区分
*      <--o_mwskz     消費税コード
*      <--O_DECIMALS  小数点以下桁数
*----------------------------------------------------------------------*
form frm_get_eine
using    value(i_lifnr) type typ_data_k-lifnr
value(i_matnr) type typ_data_k-matnr
value(i_ekorg) type typ_data_k-ekorg
value(i_werks) type typ_data_k-werks
value(i_esokz) type typ_data_k-esokz
changing o_mwskz type typ_data_k-mwskz
.

select single b~mwskz           "消費税コード
into o_mwskz
from eina as a
inner join eine as b
on a~infnr = b~infnr  "購買情報番号
where a~lifnr = i_lifnr
and a~matnr = i_matnr
and b~ekorg = i_ekorg
and b~werks = i_werks
and b~esokz = i_esokz
.

endform.                    " frm_get_eine
*---APPEND END   GSL 2014/03/19 ---------------------------------------*
