*----------------------------------------------------------------------*
*  売上照合マスタ管理                                                  *
*    機能：売上照合マスタの登録/変更/削除を行う                        *
*          会社コードでのデフォルト条件を管理する                      *
*          　照合マスタが登録されていない得意先は、会社コードでの      *
*            デフォルト設定が用いられる                                *
*    作成：2002/02/15 KURANO Sadayuki                                  *
*    変更：2003/01/07 KAJISA 得意先発注番号桁指定対応                  *
*    変更：2003/07/25 KAJISA 得意先発注番号桁指定対応(売 検 別化)      *
*----------------------------------------------------------------------*
REPORT yk011900 .

* 使用テーブル
TABLES yk150. "売上照合マスタ
TABLES t001. "会社コード
TABLES kna1. "得意先マスタ: 一般データ
TABLES knvv. "得意先マスタ: 販売データ
TABLES tvkot. "組織単位: 販売組織: テキスト
TABLES tvtwt. "組織単位: 流通チャネル: テキスト
TABLES tspat. "組織単位: 販売製品部門: テキスト

* 選択画面
PARAMETERS p_bukrs LIKE yk150-bukrs MEMORY ID buk "会社コード
OBLIGATORY.
PARAMETERS p_kunnr LIKE yk150-kunnr MEMORY ID kun. "得意先コード
PARAMETERS p_vkorg LIKE yk150-vkorg MEMORY ID vko. "販売組織
PARAMETERS p_vtweg LIKE yk150-vtweg MEMORY ID vtw. "流通チャネル
PARAMETERS p_spart LIKE yk150-spart MEMORY ID spa. "製品部門
PARAMETERS p_deflt AS CHECKBOX. "デフォルト設定の編集

***ADD 2002/06/20
data: wa_spart like yk140-spart. "製品部門 ADD 2002/06/20
***ADD END 2002/06/20
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
* 会社コード
SELECT SINGLE * FROM  t001
WHERE  bukrs  = p_bukrs.
IF sy-subrc <> 0.
MESSAGE e401(y1) WITH '会社コードがありません' p_bukrs.
ENDIF.
IF p_deflt IS INITIAL. "デフォルト設定ではチェックしない
* 得意先コード
SELECT SINGLE * FROM  kna1
WHERE  kunnr  = p_kunnr.
***ADD 2002/06/20
select single spaku into wa_spart from tvta
where vkorg = p_vkorg
and   vtweg = p_vtweg
and   spart = p_spart.

if sy-subrc <> 0.
wa_spart = p_spart.
endif.
***ADD END 2002/06/20
SELECT SINGLE * FROM  knvv
WHERE  kunnr  = p_kunnr
AND    vkorg  = p_vkorg
AND    vtweg  = p_vtweg
*          AND    spart  = p_spart.    DEL 2002/06/20
AND    spart  = wa_spart.   "ADD 2002/06/20
IF sy-subrc <> 0.
MESSAGE e401(y1) WITH '得意先コードがありません' p_kunnr.
ENDIF.
* 販売組織
SELECT SINGLE * FROM  tvkot
WHERE  spras  = sy-langu
AND    vkorg  = p_vkorg.
IF sy-subrc <> 0.
MESSAGE e401(y1) WITH '販売組織がありません' p_vkorg.
ENDIF.
* 流通チャネル
SELECT SINGLE * FROM  tvtwt
WHERE  spras  = sy-langu
AND    vtweg  = p_vtweg.
IF sy-subrc <> 0.
MESSAGE e401(y1) WITH '流通チャネルがありません' p_vtweg.
ENDIF.
* 製品部門
SELECT SINGLE * FROM  tspat
WHERE  spras  = sy-langu
AND    spart  = p_spart.
IF sy-subrc <> 0.
MESSAGE e401(y1) WITH '製品部門がありません' p_spart.
ENDIF.
ENDIF.

*----------------------------------------------------------------------*
START-OF-SELECTION.
* 売上照合マスタ検索
IF p_deflt IS INITIAL.
SELECT SINGLE * FROM  yk150
WHERE  bukrs  = p_bukrs
AND    kunnr  = p_kunnr
AND    vkorg  = p_vkorg
AND    vtweg  = p_vtweg
AND    spart  = p_spart.
IF sy-subrc <> 0.
SELECT SINGLE * FROM  yk150
WHERE  bukrs  = p_bukrs
AND    kunnr  = 'DEFAULT'.
IF t001-waers <> knvv-waers.
yk150-waers = knvv-waers.
CLEAR yk150-p_itx_al.
CLEAR yk150-p_tax_al.
CLEAR yk150-p_etx_al.
ENDIF.
ENDIF.
ELSE.
SELECT SINGLE * FROM  yk150
WHERE  bukrs  = p_bukrs
AND    kunnr  = 'DEFAULT'.
IF sy-subrc <> 0.
yk150-waers = t001-waers.
ENDIF.
kna1-kunnr = 'DEFAULT'.

ENDIF.
* 画面呼び出し
CALL SCREEN 2000.


*&---------------------------------------------------------------------*
*&      Module  exit_2000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit_2000 INPUT.
CASE sy-ucomm.           "プログラム終了機能
WHEN 'BACK'.
SET SCREEN 0.
WHEN 'EXIT'.
SET SCREEN 0.
WHEN 'CANC'.
ROLLBACK WORK.
SET SCREEN 0.
ENDCASE.
LEAVE SCREEN.
ENDMODULE.                 " exit_2000  INPUT
*&---------------------------------------------------------------------*
*&      Module  STATUS_2000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_2000 OUTPUT.
* ステータス設定
SET PF-STATUS 'S2000'.
SET TITLEBAR 'T01'.
* 画面項目設定
IF p_deflt = 'X'.
LOOP AT SCREEN.
IF screen-group1 = 'DEF'.
screen-input = 0.
MODIFY SCREEN.
ENDIF.
ENDLOOP.
ENDIF.
ENDMODULE.                 " STATUS_2000  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  check_bukrs  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_bukrs INPUT.
SELECT SINGLE * FROM  t001
WHERE  bukrs  = t001-bukrs.
IF sy-subrc <> 0.
MESSAGE e401(y1) WITH '会社コードがありません' t001-bukrs.
ENDIF.
ENDMODULE.                 " check_bukrs  INPUT
*&---------------------------------------------------------------------*
*&      Module  check_kunnr  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_kunnr INPUT.
IF p_deflt IS INITIAL.
SELECT SINGLE * FROM  kna1
WHERE  kunnr  = kna1-kunnr.
IF sy-subrc <> 0.
MESSAGE e401(y1) WITH '得意先コードがありません' kna1-kunnr.
ENDIF.
ENDIF.
ENDMODULE.                 " check_kunnr  INPUT
*&---------------------------------------------------------------------*
*&      Module  check_VKORG  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_vkorg INPUT.
IF p_deflt IS INITIAL.
SELECT SINGLE * FROM  tvkot
WHERE  spras  = sy-langu
AND    vkorg  = tvkot-vkorg.
IF sy-subrc <> 0.
MESSAGE e401(y1) WITH '販売組織がありません' tvkot-vkorg.
ENDIF.
ENDIF.
ENDMODULE.                 " check_VKORG  INPUT
*&---------------------------------------------------------------------*
*&      Module  check_vtweg  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_vtweg INPUT.
IF p_deflt IS INITIAL.
SELECT SINGLE * FROM  tvtwt
WHERE  spras  = sy-langu
AND    vtweg  = tvtwt-vtweg.
IF sy-subrc <> 0.
MESSAGE e401(y1) WITH '流通チャネルがありません' tvtwt-vtweg.
ENDIF.
ENDIF.
ENDMODULE.                 " check_vtweg  INPUT
*&---------------------------------------------------------------------*
*&      Module  check_spart  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_spart INPUT.
IF p_deflt IS INITIAL.
SELECT SINGLE * FROM  tspat
WHERE  spras  = sy-langu
AND    spart  = tspat-spart.
IF sy-subrc <> 0.
MESSAGE e401(y1) WITH '製品部門がありません' tspat-spart.
ENDIF.
ENDIF.
ENDMODULE.                 " check_spart  INPUT
*&---------------------------------------------------------------------*
*&      Module  user_command  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command INPUT.
* 処理
CASE sy-ucomm.
*** 保存
WHEN 'SAVE'.
PERFORM f_save.
*** 削除
WHEN 'DEL'.
PERFORM f_delete.
*** 登録
WHEN 'CRE'.
PERFORM f_insert.
ENDCASE.
ENDMODULE.                 " user_command  INPUT
*---------------------------------------------------------------------*
*       FORM f_save                                                   *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_save.
* ローカル変数
DATA w_insdat LIKE yk150-insdat.
DATA w_instim LIKE yk150-instim.
DATA w_insusr LIKE yk150-insusr.
* 既存のレコードをチェック
SELECT SINGLE insdat instim insusr
FROM   yk150
INTO   (w_insdat,w_instim,w_insusr)
WHERE  bukrs  = t001-bukrs
AND    kunnr  = kna1-kunnr
AND    vkorg  = tvkot-vkorg
AND    vtweg  = tvtwt-vtweg
AND    spart  = tspat-spart.
IF sy-subrc <> 0.
MESSAGE e400(y1) WITH '更新対象がありません'.
ELSE.
*** 項目を編集
yk150-bukrs = t001-bukrs.
yk150-kunnr = kna1-kunnr.
yk150-vkorg = tvkot-vkorg.
yk150-vtweg = tvtwt-vtweg.
yk150-spart = tspat-spart.
yk150-insdat = w_insdat.
yk150-instim = w_instim.
yk150-insusr = w_insusr.
yk150-upddat = sy-datum.
yk150-updtim = sy-uzeit.
yk150-updusr = sy-uname.
*** ロック
CALL FUNCTION 'ENQUEUE_EY_YK150'
EXPORTING
bukrs          = yk150-bukrs
kunnr          = yk150-kunnr
vkorg          = yk150-vkorg
vtweg          = yk150-vtweg
spart          = yk150-spart
EXCEPTIONS
foreign_lock   = 1
system_failure = 2
OTHERS         = 3.
IF sy-subrc <> 0.
MESSAGE e400(y1) WITH '他のユーザが使用中です'.
ELSE.
***** 保存
UPDATE yk150.
IF sy-subrc <> 0.
MESSAGE e400(y1) WITH '保存できませんでした'.
ELSE.
MESSAGE s400(y1) WITH '保存しました'.
ENDIF.
***** アンロック
CALL FUNCTION 'DEQUEUE_EY_YK150'
EXPORTING
bukrs = yk150-bukrs
kunnr = yk150-kunnr
vkorg = yk150-vkorg
vtweg = yk150-vtweg
spart = yk150-spart.
ENDIF.
ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_delete                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_delete.
* ローカル変数
DATA w_count LIKE sy-dbcnt.
* 既存のレコードをチェック
SELECT COUNT( * )
FROM   yk150
INTO   w_count
WHERE  bukrs  = t001-bukrs
AND    kunnr  = kna1-kunnr
AND    vkorg  = tvkot-vkorg
AND    vtweg  = tvtwt-vtweg
AND    spart  = tspat-spart.
IF sy-subrc <> 0.
MESSAGE e400(y1) WITH '削除対象がありません'.
ELSE.
*** ロック
CALL FUNCTION 'ENQUEUE_EY_YK150'
EXPORTING
bukrs          = t001-bukrs
kunnr          = kna1-kunnr
vkorg          = tvkot-vkorg
vtweg          = tvtwt-vtweg
spart          = tspat-spart
EXCEPTIONS
foreign_lock   = 1
system_failure = 2
OTHERS         = 3.
IF sy-subrc <> 0.
MESSAGE e400(y1) WITH '他のユーザが使用中です'.
ELSE.
***** 削除
DELETE FROM yk150
WHERE  bukrs  = t001-bukrs
AND    kunnr  = kna1-kunnr
AND    vkorg  = tvkot-vkorg
AND    vtweg  = tvtwt-vtweg
AND    spart  = tspat-spart.
IF sy-subrc <> 0.
MESSAGE e400(y1) WITH '削除できませんでした'.
ELSE.
MESSAGE s400(y1) WITH '削除しました'.
ENDIF.
***** アンロック
CALL FUNCTION 'DEQUEUE_EY_YK150'
EXPORTING
bukrs = t001-bukrs
kunnr = kna1-kunnr
vkorg = tvkot-vkorg
vtweg = tvtwt-vtweg
spart = tspat-spart.

ENDIF.
ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM f_insert                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_insert.
* ローカル変数
DATA w_count LIKE sy-dbcnt.
* 既存のレコードをチェック
SELECT COUNT( * )
FROM   yk150
INTO   w_count
WHERE  bukrs  = t001-bukrs
AND    kunnr  = kna1-kunnr
AND    vkorg  = tvkot-vkorg
AND    vtweg  = tvtwt-vtweg
AND    spart  = tspat-spart.
IF sy-subrc = 0.
MESSAGE e400(y1) WITH '既に登録されています'.
ELSE.
*** 項目を編集
yk150-bukrs = t001-bukrs.
yk150-kunnr = kna1-kunnr.
yk150-vkorg = tvkot-vkorg.
yk150-vtweg = tvtwt-vtweg.
yk150-spart = tspat-spart.
yk150-insdat = sy-datum.
yk150-instim = sy-uzeit.
yk150-insusr = sy-uname.
INSERT yk150.
IF sy-subrc <> 0.
MESSAGE e400(y1) WITH '登録できませんでした'.
ELSE.
MESSAGE s400(y1) WITH '登録しました'.
ENDIF.
ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  check_KETASU  INPUT
*&---------------------------------------------------------------------*
*       得意先発注番号有効桁数チェック
*----------------------------------------------------------------------*
MODULE check_KETASU INPUT.
IF YK150-P_ENDNO_U > 35.
MESSAGE e400(Y1) WITH '売上側終了桁が35桁を超えています'.
ENDIF.
IF YK150-P_ENDNO_K > 35.
MESSAGE e400(Y1) WITH '検収側終了桁が35桁を超えています'.
ENDIF.
IF  YK150-P_ENDNO_U <  YK150-P_STRNO_U.        "2003/07/25 MOD
MESSAGE e400(Y1) WITH '売上側開始桁が終了桁を超えています'.
ENDIF.
IF  YK150-P_ENDNO_K <  YK150-P_STRNO_k.        "2003/07/25 MOD
MESSAGE e400(Y1) WITH '検収側開始桁が終了桁を超えています'.
ENDIF.

ENDMODULE.                 " check_KETASU  INPUT
