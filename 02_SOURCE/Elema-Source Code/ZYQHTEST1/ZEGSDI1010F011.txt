*&---------------------------------------------------------------------*
*&  Include           ZEGSDI1010F011
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  CHECK_INPUT
*&---------------------------------------------------------------------*
*       入力チェック
*----------------------------------------------------------------------*
FORM CHECK_INPUT .
* プラントコード存在チェック
PERFORM CHECK_WERKS.

* 出荷ポイント存在チェック
PERFORM CHECK_VSTEL.

* プラントの権限チェック
PERFORM CHECK_WERKS_AUTH.

ENDFORM.                    " CHECK_INPUT
*&---------------------------------------------------------------------*
*&      Form  CHECK_WERKS
*&---------------------------------------------------------------------*
*       プラントコード存在チェック
*----------------------------------------------------------------------*
FORM CHECK_WERKS .

TYPES: BEGIN OF LTYP_WERKS,
WERKS TYPE T001W-WERKS,
END OF LTYP_WERKS.

DATA: LTD_WERKS   TYPE STANDARD TABLE OF LTYP_WERKS,
LST_WERKS   TYPE LTYP_WERKS,
LST_WERKS_R LIKE LINE OF RD_WERKS.

SELECT WERKS
INTO TABLE LTD_WERKS
FROM T001W
WHERE WERKS IN S_WERKS.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'S_WERKS-LOW'.
*   プラント ( &1 ) は存在しません
MESSAGE E004(ZMEGSD01) WITH S_WERKS-LOW.
ENDIF.

REFRESH RD_WERKS.
LOOP AT LTD_WERKS INTO LST_WERKS.
LST_WERKS_R-SIGN = 'I'.
LST_WERKS_R-OPTION = 'EQ'.
LST_WERKS_R-LOW = LST_WERKS-WERKS.
APPEND LST_WERKS_R TO RD_WERKS.
ENDLOOP.

ENDFORM.                    " CHECK_WERKS
*&---------------------------------------------------------------------*
*&      Form  CHECK_VSTEL
*&---------------------------------------------------------------------*
*       出荷ポイント存在チェック
*----------------------------------------------------------------------*
FORM CHECK_VSTEL .

TYPES: BEGIN OF LTYP_VSTEL,
VSTEL TYPE TVST-VSTEL,
END OF LTYP_VSTEL.

DATA: LTD_VSTEL   TYPE STANDARD TABLE OF LTYP_VSTEL,
LST_VSTEL   TYPE LTYP_VSTEL,
LST_VSTEL_R LIKE LINE OF RD_VSTEL.

SELECT VSTEL
INTO TABLE LTD_VSTEL
FROM TVST
WHERE VSTEL IN S_VSTEL.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'S_VSTEL-LOW'.
*   出荷ポイント ( &1 ) は存在しません
MESSAGE E005(ZMEGSD01) WITH S_VSTEL-LOW.
ENDIF.

REFRESH RD_VSTEL.
LOOP AT LTD_VSTEL INTO LST_VSTEL.
LST_VSTEL_R-SIGN = 'I'.
LST_VSTEL_R-OPTION = 'EQ'.
LST_VSTEL_R-LOW = LST_VSTEL-VSTEL.
APPEND LST_VSTEL_R TO RD_VSTEL.
ENDLOOP.

ENDFORM.                    " CHECK_VSTEL
*&---------------------------------------------------------------------*
*&      Form  CHECK_WERKS_AUTH
*&---------------------------------------------------------------------*
*       プラントの権限チェック
*----------------------------------------------------------------------*
FORM CHECK_WERKS_AUTH .

DATA: LST_WERKS LIKE LINE OF RD_WERKS.

LOOP AT RD_WERKS INTO LST_WERKS.

AUTHORITY-CHECK OBJECT 'M_MSEG_WMB'
ID 'WERKS' FIELD LST_WERKS-LOW
ID 'ACTVT' FIELD '01'.
IF SY-SUBRC <> 0.

SET CURSOR FIELD 'S_WERKS-LOW'.
*     プラントに対する実行権限がありません
MESSAGE E003(ZMEGSD01).

ENDIF.

ENDLOOP.

ENDFORM.                    " CHECK_WERKS_AUTH
*&---------------------------------------------------------------------*
*&      Form  F4_FOR_LAYOUT
*&---------------------------------------------------------------------*
*       選択画面のLAYOUTのヘルプ設定
*----------------------------------------------------------------------*
FORM F4_FOR_LAYOUT .

DATA: LST_VARIANT_I TYPE DISVARIANT,
LW_SAVE(1)    TYPE C,
LW_EXIT(1)    TYPE C,
LST_VARIANT_E TYPE DISVARIANT.

LW_SAVE = 'A'.                        "SAVE

LST_VARIANT_I-REPORT = SY-REPID.

CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
EXPORTING
IS_VARIANT          = LST_VARIANT_I
*     I_TABNAME_HEADER    =
*     I_TABNAME_ITEM      =
*     IT_DEFAULT_FIELDCAT =
I_SAVE              = LW_SAVE
*     I_DISPLAY_VIA_GRID  = ' '
IMPORTING
E_EXIT              = LW_EXIT
ES_VARIANT          = LST_VARIANT_E
EXCEPTIONS
NOT_FOUND           = 1
PROGRAM_ERROR       = 2
OTHERS              = 3.

IF SY-SUBRC <> 0.

SET CURSOR FIELD 'P_LAYOUT'.

MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.

ELSE.

IF LW_EXIT = SPACE.

P_LAYOUT = LST_VARIANT_E-VARIANT.

ENDIF.

ENDIF.

ENDFORM.                    " F4_FOR_LAYOUT
*&---------------------------------------------------------------------*
*&      Form  MAIN_PROCESS
*&---------------------------------------------------------------------*
*       主処理
*----------------------------------------------------------------------*
FORM MAIN_PROCESS .

* PackingListヘッダデータ取得
PERFORM GET_PKG_HEADER CHANGING TD_HEADER.

* 画面出力
PERFORM DISPLAY_ALV CHANGING TD_HEADER.

ENDFORM.                    " MAIN_PROCESS
*&---------------------------------------------------------------------*
*&      Form  GET_PKG_HEADER
*&---------------------------------------------------------------------*
*       PackingListヘッダデータ取得
*----------------------------------------------------------------------*
*      <--O_TD_HEADER  PackingListヘッダ
*----------------------------------------------------------------------*
FORM GET_PKG_HEADER  CHANGING O_TD_HEADER TYPE TYP_TD_HEADER.

DATA:
LTD_SHIPTO TYPE TYP_TD_KNA1,
LTD_SOLDTO TYPE TYP_TD_KNA1,
LTD_ZTEGSDT001 TYPE TYP_TD_ZTEGSDT001.

* Outbound Delivery」が選択されている場合
IF RB_01 IS NOT INITIAL.

*   Outbound Delivery
PERFORM GET_OUTBOUND CHANGING O_TD_HEADER
LTD_ZTEGSDT001.

* External Data」が選択されている場合
ELSE.

*   External Data
PERFORM GET_EXTERNAL CHANGING O_TD_HEADER
LTD_ZTEGSDT001.

ENDIF.

* テキスト取得
PERFORM GET_TEXT USING O_TD_HEADER
CHANGING LTD_SHIPTO
LTD_SOLDTO.

* データ編集
PERFORM EDIT_DATA USING LTD_SHIPTO
LTD_SOLDTO
LTD_ZTEGSDT001
CHANGING O_TD_HEADER.

ENDFORM.                    " GET_PKG_HEADER
*&---------------------------------------------------------------------*
*&      Form  GET_OUTBOUND
*&---------------------------------------------------------------------*
*       Outbound Delivery
*----------------------------------------------------------------------*
*      <--O_TD_HEADER      PackingListヘッダ
*      <--O_TD_ZTEGSDT001  TradeCommon
*----------------------------------------------------------------------*
FORM GET_OUTBOUND  CHANGING O_TD_HEADER TYPE TYP_TD_HEADER
O_TD_ZTEGSDT001 TYPE TYP_TD_ZTEGSDT001.

* 販売管理伝票: 出荷ヘッダデータ
SELECT  VSTEL                         "出荷ポイント
WADAT                         "出庫予定日付
KUNAG                         "受注先
KUNNR                         "出荷先
VBELN                         "出荷伝票
ERDAT                         "レコード登録日
ERNAM                         "登録者
INTO CORRESPONDING FIELDS OF TABLE O_TD_HEADER
FROM LIKP
WHERE VBELN         IN S_VBELN        "Outbound Delivery
AND WADAT         IN S_WADAT        "Planed GI
AND KUNNR         IN S_KUNNR        "Ship-to party
AND VSTEL         IN RD_VSTEL       "ShippingPt
AND KUNAG         IN S_KUNAG.       "Sold-to party

* データが存在しない場合、メッセージを出力し処理を終了する
IF SY-SUBRC <> 0.

MESSAGE S006(ZMEGSD01) WITH 'LIKP'.
*   対象データが存在しません。(TBL = &1)
LEAVE LIST-PROCESSING.

ENDIF.

SORT O_TD_HEADER BY VBELN ASCENDING
ERDAT ASCENDING.

* TradeCommon
SELECT VBELN                                "出荷伝票
ERDAT                                "レコード登録日
Z_INVOICE_NO                         "INVOICE No
Z_INVOICE_DATE                       "INVOICE Date
Z_STATUS_PACKING                     "Status
Z_CRE_YMD_PKG                        "Create Date(Packing)
Z_CRE_HMS_PKG                        "Create Time(Packing)
Z_CRE_USERID_PKG                     "Create User(Packing)
Z_MOD_YMD_PKG                        "Modify Date(Packing)
Z_MOD_HMS_PKG                        "Modify Time(Packing)
Z_MOD_USERID_PKG                     "Modify User(Packing)
INTO TABLE O_TD_ZTEGSDT001
FROM ZTEGSDT001
FOR ALL ENTRIES IN O_TD_HEADER
WHERE VBELN            = O_TD_HEADER-VBELN    "出荷伝票
AND ERDAT            = O_TD_HEADER-ERDAT    "レコード登録日
AND Z_INVOICE_NO     IN S_INVO           "Invoice No
AND Z_INVOICE_DATE   IN S_INDATE         "Invoice Date
AND Z_SOURCE_TYPE    = '1'               "ステータス（PackingList）
AND Z_STATUS_PACKING IN S_STATUS         "Status
AND Z_CRE_YMD_PKG    IN S_CREYMD         "Create Date
AND Z_CRE_HMS_PKG    IN S_CREHMS         "Create Time
AND Z_CRE_USERID_PKG IN S_CREID          "Create User
AND Z_MOD_YMD_PKG    IN S_MODYMD         "Modify Date
AND Z_MOD_HMS_PKG    IN S_MODHMS         "Modify Time
AND Z_MOD_USERID_PKG IN S_MODID.         "Modify User

SORT O_TD_ZTEGSDT001 BY VBELN ASCENDING
ERDAT ASCENDING.

ENDFORM.                    " GET_OUTBOUND
*&---------------------------------------------------------------------*
*&      Form  GET_EXTERNAL
*&---------------------------------------------------------------------*
*       External Data
*----------------------------------------------------------------------*
*      <--O_TD_HEADER      PackingListヘッダ
*      <--O_TD_ZTEGSDT001  TradeCommon
*----------------------------------------------------------------------*
FORM GET_EXTERNAL  CHANGING O_TD_HEADER TYPE TYP_TD_HEADER
O_TD_ZTEGSDT001 TYPE TYP_TD_ZTEGSDT001.

* Outbound Delivery(External)
SELECT VSTEL          "出荷ポイント
WADAT          "出庫予定日付
KUNNR          "出荷先
VBELN          "出荷伝票
ERDAT          "レコード登録日
ERNAM          "登録者
INTO CORRESPONDING FIELDS OF TABLE O_TD_HEADER
FROM ZTEGSDT010
WHERE VBELN         IN S_VBELN        "Outbound Delivery
AND VSTEL         IN RD_VSTEL       "ShippingPt
AND WADAT         IN S_WADAT        "Planed GI
AND KUNNR         IN S_KUNNR        "Ship-to party
AND KUNAG         IN S_KUNAG.       "Sold-to party

* データが存在しない場合、メッセージを出力し処理を終了する
IF SY-SUBRC <> 0.

MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDT010'.
*   対象データが存在しません。(TBL = &1)
LEAVE LIST-PROCESSING.

ENDIF.

SORT O_TD_HEADER BY VBELN ASCENDING
ERDAT ASCENDING.

DELETE ADJACENT DUPLICATES FROM O_TD_HEADER
COMPARING VBELN
ERDAT.

* PackingList（Header）
SELECT VBELN                                "出荷伝票
ERDAT                                "レコード登録日
Z_INVOICE_NO                         "INVOICE No
Z_INVOICE_DATE                       "INVOICE Date
Z_STATUS_PACKING                     "Status
Z_CRE_YMD_PKG                        "Create Date(Packing)
Z_CRE_HMS_PKG                        "Create Time(Packing)
Z_CRE_USERID_PKG                     "Create User(Packing)
Z_MOD_YMD_PKG                        "Modify Date(Packing)
Z_MOD_HMS_PKG                        "Modify Time(Packing)
Z_MOD_USERID_PKG                     "Modify User(Packing)
INTO TABLE O_TD_ZTEGSDT001
FROM ZTEGSDT001
FOR ALL ENTRIES IN O_TD_HEADER
WHERE VBELN            = O_TD_HEADER-VBELN    "出荷伝票
AND ERDAT            = O_TD_HEADER-ERDAT    "レコード登録日
AND Z_INVOICE_NO     IN S_INVO           "Invoice No
AND Z_INVOICE_DATE   IN S_INDATE         "Invoice Date
AND Z_SOURCE_TYPE    = '2'               "ステータス（PackingList）
AND Z_STATUS_PACKING IN S_STATUS         "Status
AND Z_CRE_YMD_PKG    IN S_CREYMD         "Create Date
AND Z_CRE_HMS_PKG    IN S_CREHMS         "Create Time
AND Z_CRE_USERID_PKG IN S_CREID          "Create User
AND Z_MOD_YMD_PKG    IN S_MODYMD         "Modify Date
AND Z_MOD_HMS_PKG    IN S_MODHMS         "Modify Time
AND Z_MOD_USERID_PKG IN S_MODID.         "Modify User

SORT O_TD_ZTEGSDT001 BY VBELN ASCENDING
ERDAT ASCENDING.

ENDFORM.                    " GET_EXTERNAL
*&---------------------------------------------------------------------*
*&      Form  GET_TEXT
*&---------------------------------------------------------------------*
*       テキスト取得
*----------------------------------------------------------------------*
*      <--I_TD_HEADER  PackingListヘッダ
*      <--O_TD_SHIPTO  ITAB:出荷先名称
*      <--O_TD_SOLDTO  ITAB:受注先名称
*----------------------------------------------------------------------*
FORM GET_TEXT USING I_TD_HEADER TYPE TYP_TD_HEADER
CHANGING O_TD_SHIPTO TYPE TYP_TD_KNA1
O_TD_SOLDTO TYPE TYP_TD_KNA1.

DATA:
LTD_HEADER TYPE TYP_TD_HEADER.

LTD_HEADER = I_TD_HEADER.

* 帳票出力項目：Ship-to party Name
SORT LTD_HEADER BY KUNNR ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_HEADER
COMPARING KUNNR.

SELECT KUNNR
NAME1
INTO TABLE O_TD_SHIPTO
FROM KNA1
FOR ALL ENTRIES IN LTD_HEADER
WHERE KUNNR = LTD_HEADER-KUNNR.

SORT O_TD_SHIPTO BY KUNNR.

* 帳票出力項目：Sold-to party Name
LTD_HEADER = I_TD_HEADER.
SORT LTD_HEADER BY KUNAG ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_HEADER
COMPARING KUNAG.

SELECT KUNNR
NAME1
INTO TABLE O_TD_SOLDTO
FROM KNA1
FOR ALL ENTRIES IN LTD_HEADER
WHERE KUNNR = LTD_HEADER-KUNAG.

SORT O_TD_SOLDTO BY KUNNR.

ENDFORM.                    " GET_TEXT
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA
*&---------------------------------------------------------------------*
*       データ編集
*----------------------------------------------------------------------*
*      -->I_TD_SHIPTO      ITAB:出荷先名称
*      -->I_TD_SOLDTO      ITAB:受注先名称
*      -->I_TD_ZTEGSDT001  TradeCommon
*      <--O_TD_HEADER      PackingListヘッダ
*----------------------------------------------------------------------*
FORM EDIT_DATA USING I_TD_SHIPTO TYPE TYP_TD_KNA1
I_TD_SOLDTO TYPE TYP_TD_KNA1
I_TD_ZTEGSDT001 TYPE TYP_TD_ZTEGSDT001
CHANGING O_TD_HEADER TYPE TYP_TD_HEADER.

DATA:
LST_ZTEGSDT001 TYPE TYP_ZTEGSDT001,
LST_KNA1       TYPE TYP_KNA1.

FIELD-SYMBOLS:
<LFS_HEADER>   TYPE ZSEGSD0014.

LOOP AT O_TD_HEADER ASSIGNING <LFS_HEADER>.

*   Outbound Delivery」が選択されている場合
IF RB_01 IS NOT INITIAL.

*     Outbound Delivery
<LFS_HEADER>-Z_SOURCE_TYPE = '1'.             "ソースタイプ
*   External Data」が選択されている場合
ELSE.

*     External Data
<LFS_HEADER>-Z_SOURCE_TYPE = '2'.             "ソースタイプ

ENDIF.

READ TABLE I_TD_ZTEGSDT001 INTO LST_ZTEGSDT001
WITH KEY VBELN = <LFS_HEADER>-VBELN    "出荷伝票
ERDAT = <LFS_HEADER>-ERDAT    "レコード登録日
BINARY SEARCH.

IF SY-SUBRC = 0.

<LFS_HEADER>-Z_INVOICE_NO     = LST_ZTEGSDT001-Z_INVOICE_NO.
<LFS_HEADER>-Z_INVOICE_DATE   = LST_ZTEGSDT001-Z_INVOICE_DATE.
<LFS_HEADER>-Z_STATUS_PACKING = LST_ZTEGSDT001-Z_STATUS_PACKING.
<LFS_HEADER>-Z_CRE_YMD        = LST_ZTEGSDT001-Z_CRE_YMD_PKG.
<LFS_HEADER>-Z_CRE_HMS        = LST_ZTEGSDT001-Z_CRE_HMS_PKG.
<LFS_HEADER>-Z_CRE_USERID     = LST_ZTEGSDT001-Z_CRE_USERID_PKG.
<LFS_HEADER>-Z_MOD_YMD        = LST_ZTEGSDT001-Z_MOD_YMD_PKG.
<LFS_HEADER>-Z_MOD_HMS        = LST_ZTEGSDT001-Z_MOD_HMS_PKG.
<LFS_HEADER>-Z_MOD_USERID     = LST_ZTEGSDT001-Z_MOD_USERID_PKG.

ENDIF.

CLEAR:
LST_KNA1.

*   出荷先
READ TABLE I_TD_SHIPTO INTO LST_KNA1
WITH KEY KUNNR = <LFS_HEADER>-KUNNR
BINARY SEARCH.

IF SY-SUBRC = 0.

<LFS_HEADER>-SHIPTONAME = LST_KNA1-NAME1.

ENDIF.

CLEAR:
LST_KNA1.

*   受注先
READ TABLE I_TD_SOLDTO INTO LST_KNA1
WITH KEY KUNNR = <LFS_HEADER>-KUNAG
BINARY SEARCH.

IF SY-SUBRC = 0.

<LFS_HEADER>-SOLDTONAME = LST_KNA1-NAME1.

ENDIF.

ENDLOOP.

* ソート
SORT O_TD_HEADER BY VSTEL ASCENDING      "ShippingPt
WADAT ASCENDING      "Planed GI
KUNNR ASCENDING      "Ship-to party
VBELN ASCENDING.     "Outbound Delivery

ENDFORM.                    " EDIT_DATA
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV
*&---------------------------------------------------------------------*
*       画面出力
*----------------------------------------------------------------------*
*      <--O_TD_HEADER  ITAB:ALVデータ
*----------------------------------------------------------------------*
FORM DISPLAY_ALV  CHANGING O_TD_HEADER TYPE TYP_TD_HEADER.

DATA:
LTD_FIELDCAT TYPE LVC_T_FCAT,     "ITAB:FIELDCAT
LST_LAYOUT   TYPE LVC_S_LAYO.     "ST:LAYOUT

FIELD-SYMBOLS:
<LFS_FIELDCAT> TYPE LVC_S_FCAT.

* FIELDCAT属性の設定
CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
EXPORTING
I_STRUCTURE_NAME       = 'ZSEGSD0014'
CHANGING
CT_FIELDCAT            = LTD_FIELDCAT
EXCEPTIONS
INCONSISTENT_INTERFACE = 1
PROGRAM_ERROR          = 2
OTHERS                 = 3.

IF SY-SUBRC <> 0.

MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
DISPLAY LIKE 'E'.

LEAVE LIST-PROCESSING.

ENDIF.

READ TABLE LTD_FIELDCAT ASSIGNING <LFS_FIELDCAT> INDEX 1.

IF SY-SUBRC = 0.
<LFS_FIELDCAT>-NO_OUT = 'X'.
ENDIF.

* レイアウト属性の設定
* ストライプ
LST_LAYOUT-ZEBRA = 'X'.

LST_LAYOUT-BOX_FNAME = 'SEL'.

LST_LAYOUT-SEL_MODE  = 'D'.

* ALV コントロール: 列幅の最適化
LST_LAYOUT-CWIDTH_OPT = 'X'.

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
EXPORTING
I_CALLBACK_PROGRAM       = SY-REPID
I_CALLBACK_PF_STATUS_SET = CNS_PF_STATUS_2000
I_CALLBACK_USER_COMMAND  = CNS_USER_CMD_2000
IS_LAYOUT_LVC            = LST_LAYOUT
IT_FIELDCAT_LVC          = LTD_FIELDCAT
I_SAVE                   = 'A'
TABLES
T_OUTTAB                 = O_TD_HEADER
EXCEPTIONS
PROGRAM_ERROR            = 1
OTHERS                   = 2.

IF SY-SUBRC <> 0.

MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
DISPLAY LIKE 'E'.

LEAVE LIST-PROCESSING.

ENDIF.

ENDFORM.                    " DISPLAY_ALV
*&---------------------------------------------------------------------*
*&      Form  SET_STATUS_2000
*&---------------------------------------------------------------------*
*       2000 ALV画面のステータスの設定
*----------------------------------------------------------------------*
FORM SET_STATUS_2000 USING UT_EXTAB TYPE SLIS_T_EXTAB.

REFRESH: UT_EXTAB.
SET TITLEBAR 'TTB_2000'.
SET PF-STATUS 'STT_2000' EXCLUDING UT_EXTAB.

ENDFORM.                    " SET_STATUS_2000
*&---------------------------------------------------------------------*
*&      Form  USER_COMMAND_2000
*&---------------------------------------------------------------------*
*       2000 ALV画面の事件
*----------------------------------------------------------------------*
FORM USER_COMMAND_2000 USING UCOMM    TYPE SY-UCOMM
SELFIELD TYPE SLIS_SELFIELD.

* ボタンイベント処理
CASE UCOMM.

*   「Item」ボタン押下時の処理
WHEN CNS_UCOMM_ITEM.

PERFORM EXCUTE_ITEM.

WHEN OTHERS.

ENDCASE.

ENDFORM.                    " USER_COMMAND_2000
*&---------------------------------------------------------------------*
*&      Form  SET_STATUS_3000
*&---------------------------------------------------------------------*
*       3000 ALV画面のステータスの設定
*----------------------------------------------------------------------*
FORM SET_STATUS_3000 USING UT_EXTAB TYPE SLIS_T_EXTAB.

REFRESH: UT_EXTAB.
SET TITLEBAR 'TTB_3000'.
SET PF-STATUS 'STT_3000' EXCLUDING UT_EXTAB.

ENDFORM.                    " SET_STATUS_3000
*&---------------------------------------------------------------------*
*&      Form  USER_COMMAND_3000
*&---------------------------------------------------------------------*
*       3000 ALV画面の事件
*----------------------------------------------------------------------*
FORM USER_COMMAND_3000 USING UCOMM    TYPE SY-UCOMM
SELFIELD TYPE SLIS_SELFIELD.

* ボタンイベント処理
CASE UCOMM.

**   「Item」ボタン押下時の処理
*    WHEN CNS_UCOMM_ITEM.
*
*      PERFORM EXCUTE_ITEM.
*
*    WHEN OTHERS.

ENDCASE.

ENDFORM.                    " USER_COMMAND_3000
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_ITEM
*&---------------------------------------------------------------------*
*       「Item」ボタン押下時の処理
*----------------------------------------------------------------------*
*      -->I_TD_HEADER  ITAB:ALVデータ
*----------------------------------------------------------------------*
FORM EXCUTE_ITEM  . "USING I_TD_HEADER TYPE TYP_TD_HEADER

* 行選択のチェック処理
PERFORM CHECK_ROW.

* 「PackingList Data Input（Item）」画面への画面遷移
* 選択行の下記パラメータを引き渡し、画面遷移する
"Source Type
"Outbound Delivery
"Created on
"ShippingPt
"Planed GI
"Sold-to party
"Sold-to party Name
"Ship-to party
"Ship-to party Name
PERFORM TRANSFER_ITEM.

ENDFORM.                    " EXCUTE_ITEM
*&---------------------------------------------------------------------*
*&      Form  CHECK_ROW
*&---------------------------------------------------------------------*
*       行選択のチェック処理
*----------------------------------------------------------------------*
FORM CHECK_ROW .

DATA:
LTD_HEADER   TYPE TYP_TD_HEADER.

LTD_HEADER = TD_HEADER.
* 行のチェックが複数選択されている場合はエラーとしメッセージを出力する
DELETE LTD_HEADER WHERE SEL IS INITIAL.

IF LINES( LTD_HEADER ) > 1.

MESSAGE E007(ZMEGSD01).
*   行が複数選択されています。

ENDIF.

LTD_HEADER = TD_HEADER.
* 行が選択されていない場合は、エラーとしメッセージを出力する
DELETE LTD_HEADER WHERE SEL IS NOT INITIAL.

IF SY-SUBRC <> 0.

MESSAGE E008(ZMEGSD01).
*   行が選択されていません。

ENDIF.

ENDFORM.                    " CHECK_ROW
*&---------------------------------------------------------------------*
*&      Form  TRANSFER_ITEM
*&---------------------------------------------------------------------*
*       ALV明細
*----------------------------------------------------------------------*
FORM TRANSFER_ITEM .

DATA:
LST_HEADER  TYPE ZSEGSD0014.

READ TABLE TD_HEADER INTO LST_HEADER
WITH KEY SEL = 'X'.

* PackingListデータ取得
PERFORM GET_PACKINGLIST USING LST_HEADER
CHANGING TD_ITEM
ST_HEADLINE.

* 画面出力
PERFORM DISPLAY_ALV_ITEM USING ST_HEADLINE
CHANGING TD_ITEM.

ENDFORM.                    " TRANSFER_ITEM
*&---------------------------------------------------------------------*
*&      Form  GET_PACKINGLIST
*&---------------------------------------------------------------------*
*       PackingListデータ取得
*----------------------------------------------------------------------*
*      -->I_ST_PARAMATER   前画面から引継いだパラメータ
*      <--O_TD_ITEM        PackingList明細
*      <--O_ST_HEADLINE    明細ヘッダ部
*----------------------------------------------------------------------*
FORM GET_PACKINGLIST USING I_ST_PARAMATER TYPE ZSEGSD0014
CHANGING O_TD_ITEM TYPE TYP_TD_ITEM
O_ST_HEADLINE TYPE TYP_HEADLINE.

DATA:
LTD_ZTEGSDT002   TYPE TYP_TD_ZTEGSDT002,
LTD_MAKT         TYPE TYP_TD_MAKT,        "ITAB:品目テキスト
LW_VTEXT         TYPE TVSTT-VTEXT,        "W:出荷ポイント名称
LW_DDTEXT        TYPE DD07T-DDTEXT.       "固定テキスト(短)

* Outbound Delivery」が選択されている場合
IF RB_01 IS NOT INITIAL.

*   Outbound Delivery Item
PERFORM GET_OUTBOUNDITEM USING I_ST_PARAMATER
CHANGING O_TD_ITEM
LTD_ZTEGSDT002.

* External Data」が選択されている場合
ELSE.

*   External Data Item
PERFORM GET_EXTERNALITEM USING I_ST_PARAMATER
CHANGING O_TD_ITEM
LTD_ZTEGSDT002.

ENDIF.

* テキスト取得
PERFORM GET_TEXT_ITEM USING I_ST_PARAMATER
O_TD_ITEM
CHANGING LTD_MAKT
LW_VTEXT
LW_DDTEXT.

* データ編集
PERFORM EDIT_ITEM USING I_ST_PARAMATER
LTD_MAKT
LW_VTEXT
LW_DDTEXT
LTD_ZTEGSDT002
CHANGING O_TD_ITEM
O_ST_HEADLINE.

ENDFORM.                    " GET_PACKINGLIST
*&---------------------------------------------------------------------*
*&      Form  GET_OUTBOUNDITEM
*&---------------------------------------------------------------------*
*       Outbound Delivery Item
*----------------------------------------------------------------------*
*      -->I_ST_PARAMATER   前画面から引継いだパラメータ
*      <--O_TD_ITEM        PackingList明細
*      <--O_ZTEGSDT002     PackingList
*----------------------------------------------------------------------*
FORM GET_OUTBOUNDITEM USING I_ST_PARAMATER TYPE ZSEGSD0014
CHANGING O_TD_ITEM TYPE TYP_TD_ITEM
O_ZTEGSDT002 TYPE TYP_TD_ZTEGSDT002.

* 出荷伝票
SELECT LIKP~VBELN              "帳票出力項目：Outbound Delivery
LIKP~ERDAT              "Created on
LIPS~POSNR              "帳票出力項目：Item
LIPS~MATNR              "帳票出力項目：Material
LIPS~LFIMG              "帳票出力項目：Deliv. Qty
LIPS~VRKME              "帳票出力項目：Unit
INTO CORRESPONDING FIELDS OF TABLE O_TD_ITEM
FROM LIKP
INNER JOIN LIPS
ON LIKP~VBELN = LIPS~VBELN
WHERE LIKP~VBELN = I_ST_PARAMATER-VBELN
AND LIKP~ERDAT = I_ST_PARAMATER-ERDAT.

* データが存在しない場合、メッセージを出力し処理を終了する
IF SY-SUBRC <> 0.

MESSAGE S006(ZMEGSD01) WITH 'LIKP'.
*   対象データが存在しません。(TBL = &1)
LEAVE LIST-PROCESSING.

ENDIF.

SORT O_TD_ITEM BY VBELN ASCENDING
ERDAT ASCENDING.

* PackingList
SELECT VBELN                       "出荷伝票
ERDAT                       "レコード登録日
POSNR                       "出荷伝票明細
Z_PKG_POSNR_SUB             "Packing枝番
Z_MEINS_PACK                "梱包単位
Z_CASENO_FROM               "CASE No(Fro
Z_CASENO_TO                 "CASE No(To)
Z_CASE_COUNT                "CASE Count
Z_CASE_MIX                  "Mix
Z_LFIMG_UNIT                "1梱包あたりの梱包数量
Z_LFIMG                     "梱包数量
Z_VRKME                     "梱包数量単位
Z_NETWEIGHT                 "正味重量
Z_GEWEI_NW                  "重量単位（正味重量）
Z_GRSWEIGHT                 "総重量
Z_GEWEI_GW                  "重量単位（総重量）
Z_DIMENSION                 "Dimension
Z_VOLUM                     "容積
Z_VOLEH                     "容積単位
Z_PKG_REMARKS               "Remarks
INTO TABLE O_ZTEGSDT002
FROM ZTEGSDT002
WHERE VBELN = I_ST_PARAMATER-VBELN
AND ERDAT = I_ST_PARAMATER-ERDAT.

SORT O_ZTEGSDT002 BY VBELN ASCENDING
ERDAT ASCENDING.

ENDFORM.                    " GET_OUTBOUNDITEM
*&---------------------------------------------------------------------*
*&      Form  GET_EXTERNALITEM
*&---------------------------------------------------------------------*
*       External Data Item
*----------------------------------------------------------------------*
*      -->I_ST_PARAMATER   前画面から引継いだパラメータ
*      <--O_TD_ITEM        PackingList明細
*      <--O_ZTEGSDT002     PackingList
*----------------------------------------------------------------------*
FORM GET_EXTERNALITEM USING I_ST_PARAMATER TYPE ZSEGSD0014
CHANGING O_TD_ITEM TYPE TYP_TD_ITEM
O_ZTEGSDT002 TYPE TYP_TD_ZTEGSDT002.

SELECT VBELN              "帳票出力項目：Outbound Delivery
ERDAT              "Created on
POSNR              "帳票出力項目：Item
MATNR              "帳票出力項目：Material
LFIMG              "帳票出力項目：Deliv. Qty
VRKME              "帳票出力項目：Unit
INTO CORRESPONDING FIELDS OF TABLE O_TD_ITEM
FROM ZTEGSDT010
WHERE VBELN = I_ST_PARAMATER-VBELN
AND ERDAT = I_ST_PARAMATER-ERDAT.

* データが存在しない場合、メッセージを出力し処理を終了する
IF SY-SUBRC <> 0.

MESSAGE S006(ZMEGSD01) WITH 'LIKP'.
*   対象データが存在しません。(TBL = &1)
LEAVE LIST-PROCESSING.

ENDIF.

SORT O_TD_ITEM BY VBELN ASCENDING
ERDAT ASCENDING.

* PackingList
SELECT VBELN                       "出荷伝票
ERDAT                       "レコード登録日
POSNR                       "出荷伝票明細
Z_PKG_POSNR_SUB             "Packing枝番
Z_MEINS_PACK                "梱包単位
Z_CASENO_FROM               "CASE No(Fro
Z_CASENO_TO                 "CASE No(To)
Z_CASE_COUNT                "CASE Count
Z_CASE_MIX                  "Mix
Z_LFIMG_UNIT                "1梱包あたりの梱包数量
Z_LFIMG                     "梱包数量
Z_VRKME                     "梱包数量単位
Z_NETWEIGHT                 "正味重量
Z_GEWEI_NW                  "重量単位（正味重量）
Z_GRSWEIGHT                 "総重量
Z_GEWEI_GW                  "重量単位（総重量）
Z_DIMENSION                 "Dimension
Z_VOLUM                     "容積
Z_VOLEH                     "容積単位
Z_PKG_REMARKS               "Remarks
INTO TABLE O_ZTEGSDT002
FROM ZTEGSDT002
WHERE VBELN = I_ST_PARAMATER-VBELN
AND ERDAT = I_ST_PARAMATER-ERDAT.

SORT O_ZTEGSDT002 BY VBELN ASCENDING
ERDAT ASCENDING.

ENDFORM.                    " GET_EXTERNALITEM
*&---------------------------------------------------------------------*
*&      Form  GET_TEXT_ITEM
*&---------------------------------------------------------------------*
*       テキスト取得
*----------------------------------------------------------------------*
*      -->I_ST_PARAMATER  前画面から引継いだパラメータ
*      -->I_TD_ITEM       PackingList明細
*      <--O_TD_MAKT       ITAB:品目テキスト
*      <--O_VTEXT         W:出荷ポイント名称
*      <--O_DDTEXT        固定テキスト(短)
*----------------------------------------------------------------------*
FORM GET_TEXT_ITEM USING I_ST_PARAMATER TYPE ZSEGSD0014
I_TD_ITEM TYPE TYP_TD_ITEM
CHANGING O_TD_MAKT TYPE TYP_TD_MAKT
VALUE(O_VTEXT)  TYPE TVSTT-VTEXT
VALUE(O_DDTEXT) TYPE DD07T-DDTEXT.

DATA:
LTD_MATNR  TYPE TYP_TD_ITEM.

* 品目テキスト取得
LTD_MATNR = I_TD_ITEM.
SORT LTD_MATNR BY MATNR ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_MATNR
COMPARING MATNR.

SELECT MATNR                 "品目コード
MAKTX                 "品目テキスト
INTO TABLE O_TD_MAKT
FROM MAKT
FOR ALL ENTRIES IN LTD_MATNR
WHERE MATNR = LTD_MATNR-MATNR
AND SPRAS = SY-LANGU.

SORT O_TD_MAKT BY MATNR ASCENDING.

* 出荷ポイント名称取得
SELECT SINGLE VTEXT          "テキスト
INTO O_VTEXT
FROM TVSTT
WHERE SPRAS = SY-LANGU
AND VSTEL = I_ST_PARAMATER-VSTEL.

* Source Type名称取得
SELECT DDTEXT
INTO O_DDTEXT
FROM DD07T
UP TO 1 ROWS
WHERE DOMNAME    = 'ZDSOURCETYPE'
AND DDLANGUAGE = SY-LANGU
AND VALPOS     = I_ST_PARAMATER-Z_SOURCE_TYPE.
ENDSELECT.

ENDFORM.                    " GET_TEXT_ITEM
*&---------------------------------------------------------------------*
*&      Form  EDIT_ITEM
*&---------------------------------------------------------------------*
*       データ編集
*----------------------------------------------------------------------*
*      -->I_ST_PARAMATER  前画面から引継いだパラメータ
*      -->I_TD_MAKT       品目テキスト
*      -->I_VTEXT         W:出荷ポイント名称
*      -->I_DDTEXT        固定テキスト(短)
*      -->I_TD_ZTEGSDT002 ITAB:出荷明細
*      <--O_TD_ITEM       ITAB:PackingListデータ
*      <--O_ST_HEADLINE   明細ヘッダ部
*----------------------------------------------------------------------*
FORM EDIT_ITEM USING I_ST_PARAMATER  TYPE ZSEGSD0014
I_TD_MAKT       TYPE TYP_TD_MAKT
VALUE(I_VTEXT)        TYPE TVSTT-VTEXT
VALUE(I_DDTEXT)       TYPE DD07T-DDTEXT
I_TD_ZTEGSDT002 TYPE TYP_TD_ZTEGSDT002
CHANGING O_TD_ITEM       TYPE TYP_TD_ITEM
O_ST_HEADLINE   TYPE TYP_HEADLINE.

DATA:
LST_ZTEGSDT002   TYPE TYP_ZTEGSDT002,
LST_MAKT         TYPE TYP_MAKT.

FIELD-SYMBOLS:
<LFS_ITEM>    TYPE ZSEGSD0015.

* ヘッダ部の編集

* Source Type
O_ST_HEADLINE-Z_SOURCE_TYPE = I_ST_PARAMATER-Z_SOURCE_TYPE.

* Source Type Name
O_ST_HEADLINE-DDTEXT        = I_DDTEXT.

* ShippingPt
O_ST_HEADLINE-VSTEL         = I_ST_PARAMATER-VSTEL.

* ShippingPt Name
O_ST_HEADLINE-VTEXT         = I_VTEXT.

* 変換 Exit ALPHA:  内部 -> 外部  Outbound Delivery
PERFORM CONVERT_ALPHA USING I_ST_PARAMATER-VBELN
CHANGING O_ST_HEADLINE-VBELN.

* Planed GI
O_ST_HEADLINE-WADAT         = I_ST_PARAMATER-WADAT.

* 変換 Exit ALPHA:  内部 -> 外部 Sold-to party
PERFORM CONVERT_ALPHA USING I_ST_PARAMATER-KUNAG
CHANGING O_ST_HEADLINE-KUNAG.

* Sold-to party Name
O_ST_HEADLINE-SOLDTONAME    = I_ST_PARAMATER-SOLDTONAME.

* 変換 Exit ALPHA:  内部 -> 外部 Ship-to party
PERFORM CONVERT_ALPHA USING I_ST_PARAMATER-KUNNR
CHANGING O_ST_HEADLINE-KUNNR.

* Ship-to party Name
O_ST_HEADLINE-SHIPTONAME    = I_ST_PARAMATER-SHIPTONAME.

* 明細部の編集
LOOP AT O_TD_ITEM ASSIGNING <LFS_ITEM>.

*   ITAB:出荷明細
READ TABLE I_TD_ZTEGSDT002 INTO LST_ZTEGSDT002
WITH KEY VBELN = <LFS_ITEM>-VBELN
ERDAT = <LFS_ITEM>-ERDAT
BINARY SEARCH.

IF SY-SUBRC = 0.

*     Packing枝番
<LFS_ITEM>-Z_PKG_POSNR_SUB = LST_ZTEGSDT002-Z_PKG_POSNR_SUB.
*     梱包単位
<LFS_ITEM>-Z_MEINS_PACK    = LST_ZTEGSDT002-Z_MEINS_PACK.
*     CASE No(From)
<LFS_ITEM>-Z_CASENO_FROM   = LST_ZTEGSDT002-Z_CASENO_FROM.
*     CASE No(To)
<LFS_ITEM>-Z_CASENO_TO     = LST_ZTEGSDT002-Z_CASENO_TO.
*     CASE Count
<LFS_ITEM>-Z_CASE_COUNT    = LST_ZTEGSDT002-Z_CASE_COUNT.
*     Mix
<LFS_ITEM>-Z_CASE_MIX      = LST_ZTEGSDT002-Z_CASE_MIX.
*     1梱包あたりの梱包数量
<LFS_ITEM>-Z_LFIMG_UNIT    = LST_ZTEGSDT002-Z_LFIMG_UNIT.
*     梱包数量
<LFS_ITEM>-Z_LFIMG         = LST_ZTEGSDT002-Z_LFIMG.
*     梱包数量単位
<LFS_ITEM>-Z_VRKME         = LST_ZTEGSDT002-Z_VRKME.
*     正味重量
<LFS_ITEM>-Z_NETWEIGHT     = LST_ZTEGSDT002-Z_NETWEIGHT.
*     重量単位（正味重量）
<LFS_ITEM>-Z_GEWEI_NW      = LST_ZTEGSDT002-Z_GEWEI_NW.
*     総重量
<LFS_ITEM>-Z_GRSWEIGHT     = LST_ZTEGSDT002-Z_GRSWEIGHT.
*     重量単位（総重量）
<LFS_ITEM>-Z_GEWEI_GW      = LST_ZTEGSDT002-Z_GEWEI_GW.
*     Dimension
<LFS_ITEM>-Z_DIMENSION     = LST_ZTEGSDT002-Z_DIMENSION.
*     容積
<LFS_ITEM>-Z_VOLUM         = LST_ZTEGSDT002-Z_VOLUM.
*     容積単位
<LFS_ITEM>-Z_VOLEH         = LST_ZTEGSDT002-Z_VOLEH.
*     Remarks
<LFS_ITEM>-Z_PKG_REMARKS   = LST_ZTEGSDT002-Z_PKG_REMARKS.

ENDIF.

*   ITAB:品目テキスト
READ TABLE I_TD_MAKT INTO LST_MAKT
WITH KEY MATNR = <LFS_ITEM>-MATNR
BINARY SEARCH.

IF SY-SUBRC = 0.

*     Description
<LFS_ITEM>-MAKTX = LST_MAKT-MAKTX.

ENDIF.

ENDLOOP.

SORT O_TD_ITEM BY VBELN           ASCENDING
POSNR           ASCENDING
Z_PKG_POSNR_SUB ASCENDING.

ENDFORM.                    " EDIT_ITEM
*&---------------------------------------------------------------------*
*&      Form  CONVERT_ALPHA
*&---------------------------------------------------------------------*
*       変換 Exit ALPHA:  内部 -> 外部
*----------------------------------------------------------------------*
*      -->I_INNER  内部
*      <--O_OUT    外部
*----------------------------------------------------------------------*
FORM CONVERT_ALPHA USING VALUE(I_INNER) TYPE CHAR10
CHANGING VALUE(O_OUT) TYPE CHAR10.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = I_INNER
IMPORTING
OUTPUT = O_OUT.

ENDFORM.                    " CONVERT_ALPHA
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_ITEM
*&---------------------------------------------------------------------*
*       画面出力
*----------------------------------------------------------------------*
*      -->I_LST_HEADLINE  明細ヘッダ部
*      <--O_TD_ITEM       ALV
*----------------------------------------------------------------------*
FORM DISPLAY_ALV_ITEM USING I_LST_HEADLINE TYPE TYP_HEADLINE
CHANGING O_TD_ITEM TYPE TYP_TD_ITEM.

DATA:
LTD_EVENT    TYPE SLIS_T_EVENT,
LST_EVENT    TYPE SLIS_ALV_EVENT,
LTD_FIELDCAT TYPE LVC_T_FCAT,        "ITAB:FIELDCAT
LST_LAYOUT   TYPE LVC_S_LAYO.        "ST:LAYOUT

FIELD-SYMBOLS:
<LFS_FIELDCAT> TYPE LVC_S_FCAT.

CONSTANTS:
SLIS_EV_TOP_OF_PAGE TYPE SLIS_FORMNAME VALUE 'TOP_OF_PAGE'.

*  CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
*   EXPORTING
*     I_LIST_TYPE           = 0
*   IMPORTING
*     ET_EVENTS             = LTD_EVENT
*   EXCEPTIONS
*     LIST_TYPE_WRONG       = 1
*     OTHERS                = 2.
*  IF SY-SUBRC <> 0.
*    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*          WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
*
** ヘッダーイベント編集
*  READ TABLE LTD_EVENT INTO LST_EVENT
*    WITH KEY NAME = 'TOP_OF_PAGE'.
*  IF SY-SUBRC = 0.
*    LST_EVENT-FORM = 'TOP_OF_PAGE'.
*    MODIFY LTD_EVENT FROM LST_EVENT INDEX SY-TABIX.
*  ELSE.
*    LST_EVENT-NAME = 'TOP_OF_PAGE'.
*    LST_EVENT-FORM = 'TOP_OF_PAGE'.
*    APPEND LST_EVENT TO LTD_EVENT .
*  ENDIF.

* FIELDCAT属性の設定
CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
EXPORTING
I_STRUCTURE_NAME       = 'ZSEGSD0015'
CHANGING
CT_FIELDCAT            = LTD_FIELDCAT
EXCEPTIONS
INCONSISTENT_INTERFACE = 1
PROGRAM_ERROR          = 2
OTHERS                 = 3.

IF SY-SUBRC <> 0.

MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.

ENDIF.

READ TABLE LTD_FIELDCAT ASSIGNING <LFS_FIELDCAT> INDEX 1.

IF SY-SUBRC = 0.
<LFS_FIELDCAT>-NO_OUT = 'X'.
ENDIF.

* レイアウト属性の設定
* ストライプ
LST_LAYOUT-ZEBRA = 'X'.

LST_LAYOUT-BOX_FNAME = 'SEL'.

LST_LAYOUT-SEL_MODE  = 'D'.

* ALV コントロール: 列幅の最適化
LST_LAYOUT-CWIDTH_OPT = 'X'.

CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
IMPORTING
ET_EVENTS = LTD_EVENT.

READ TABLE LTD_EVENT INTO LST_EVENT
WITH KEY NAME = SLIS_EV_TOP_OF_PAGE .

LST_EVENT-FORM = SLIS_EV_TOP_OF_PAGE .

MODIFY LTD_EVENT FROM LST_EVENT INDEX SY-TABIX .

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
EXPORTING
I_CALLBACK_PROGRAM       = SY-REPID
I_CALLBACK_PF_STATUS_SET = CNS_PF_STATUS_3000
I_CALLBACK_USER_COMMAND  = CNS_USER_CMD_3000
*     I_CALLBACK_TOP_OF_PAGE   = 'TOP_OF_PAGE'
IS_LAYOUT_LVC            = LST_LAYOUT
IT_FIELDCAT_LVC          = LTD_FIELDCAT
I_SAVE                   = 'A'
IT_EVENTS                = LTD_EVENT
*     I_HTML_HEIGHT_TOP        = 40
I_BUFFER_ACTIVE          = 'X'
TABLES
T_OUTTAB                 = O_TD_ITEM
EXCEPTIONS
PROGRAM_ERROR            = 1
OTHERS                   = 2.

IF SY-SUBRC <> 0.

MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.

ENDIF.



ENDFORM.                    " DISPLAY_ALV_ITEM
*&---------------------------------------------------------------------*
*&      Form  TOP_OF_PAGE
*&---------------------------------------------------------------------*
*       明細ヘッダ部
*----------------------------------------------------------------------*
FORM TOP_OF_PAGE.

*ULINE AT 1(45) .

"Format color for header background

*FORMAT COLOR 7 .

"This is where we manually create the header text,

"in this example I'm using 2 lines header, if you

"want to have 3 lines header or more, you can just

"add new write command.

WRITE: 'header'.

*  WRITE: / SY-VLINE , 02 'CARRID AND CONNID',
*
*  23 SY-VLINE, 25 'PLANE & SEATS MAX', 45 SY-VLINE.

*WRITE: / sy-vline , 02 'CARRID' ,12 sy-vline, 14 'CONNID',
*
*23 SY-VLINE, 25 'PLANE ', 34 SY-VLINE, 36 'SEATS MAX', 45 SY-VLINE.

** Source Type:
*  WRITE:    TEXT-H01,
*         19 ST_HEADLINE-Z_SOURCE_TYPE,
*         29 ST_HEADLINE-DDTEXT.
*
** ShippingPt:
*  WRITE:/ TEXT-H02,
*         19 ST_HEADLINE-VSTEL,
*         29 ST_HEADLINE-VTEXT.
*
** Outbound Delivery:
*  WRITE:/ TEXT-H03,
*         19 ST_HEADLINE-VBELN.



*  CLEAR:
*    lw_name,
*    LW_INFO.
*  lw_name = 'Outbound Delivery:'.
*  LW_INFO = ST_HEADLINE-VTEXT.
*  PERFORM set_header USING lw_name
*                           8
*                           LW_INFO.


*  CLEAR LST_LISTHEADER.
*
*  LST_LISTHEADER-TYP = 'S'.
*  LST_LISTHEADER-KEY = .
*  LST_LISTHEADER-INFO = ST_HEADLINE-VBELN.
*  APPEND LST_LISTHEADER TO LTD_LISTHEADER.
*
** Planed GI:
*  CLEAR LST_LISTHEADER.
*  LST_LISTHEADER-TYP = 'S'.
*  LST_LISTHEADER-KEY = 'Planed GI:'.
*  LST_LISTHEADER-INFO = ST_HEADLINE-WADAT.
*  APPEND LST_LISTHEADER TO LTD_LISTHEADER.
*
** Sold-to party:
*  CLEAR LST_LISTHEADER.
*  LST_LISTHEADER-TYP = 'S'.
*  LST_LISTHEADER-KEY = 'Sold-to party:'.
*  CLEAR LW_INFO.
*  LW_INFO+0(10) = ST_HEADLINE-KUNAG.
*  LW_INFO+15(45) = ST_HEADLINE-SOLDTONAME.
*  LST_LISTHEADER-INFO = LW_INFO.
*  APPEND LST_LISTHEADER TO LTD_LISTHEADER.
*
** Ship-to party:
*  CLEAR LST_LISTHEADER.
*  LST_LISTHEADER-TYP = 'S'.
*  LST_LISTHEADER-KEY = 'Ship-to party:'.
*  CLEAR LW_INFO.
*  LW_INFO+0(10) = ST_HEADLINE-KUNNR.
*  LW_INFO+15(45) = ST_HEADLINE-SHIPTONAME.
*  LST_LISTHEADER-INFO = LW_INFO.
*  APPEND LST_LISTHEADER TO LTD_LISTHEADER.
*
*  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
*    EXPORTING
*      IT_LIST_COMMENTARY = LTD_LISTHEADER
**     I_LOGO             =
**     I_END_OF_LIST_GRID =
**     I_ALV_FORM         =
*    .


ENDFORM.                    "HTML_TOP_OF_PAGE
