*&---------------------------------------------------------------------*
*& プログラムID : YTESTCNMMI15
*& 作成者       : 王蘇風
*& 作成日       : 2015/12/19
*& 処理概要     : 1.TB「在庫管理項目」を元に対象データを取得する
*&                2.対象データを変更してから、TB「在庫管理項目」に
*                   登録し、更新し、削除する
*&---------------------------------------------------------------------*
REPORT  YTEST02 MESSAGE-ID YTEST02 NO STANDARD PAGE HEADING.
*---------------------------------------------------------------------
*   宣言部
*---------------------------------------------------------------------
TYPES:

* 元データ
BEGIN OF TYP_OBJ,
WERKS       TYPE YTESTT04-WERKS,             "プラント
LGORT       TYPE YTESTT04-LGORT,             "保管場所
VTWEG       TYPE YTESTT04-VTWEG,             "流通チャネル
PRODH       TYPE YTESTT04-PRODH,             "P-CODE
STOQF       TYPE YTESTT04-STOQF,             "在庫区分
STOPF       TYPE YTESTT04-STOPF,             "在庫分配区分
RSTOPF      TYPE YTESTT04-RSTOPF,            "入出庫区分
STODATE     TYPE YTESTT04-STODATE,           "在庫日付
MENGE       TYPE YTESTT04-MENGE,             "在庫数量
COMMENTS    TYPE YTESTT04-COMMENTS,          "注釈
DATAS       TYPE YTESTT04-DATAS,             "生成日付
USERS       TYPE YTESTT04-USERS,             "作成者
CRNAM       TYPE YTESTT04-CRNAM,             "ユーザ
END   OF TYP_OBJ,

* 対象データ
BEGIN OF TYP_YTESTT04,
WERKS       TYPE YTESTT04-WERKS,             "プラント
LGORT       TYPE YTESTT04-LGORT,             "保管場所
VTWEG       TYPE YTESTT04-VTWEG,             "流通チャネル
PRODH       TYPE YTESTT04-PRODH,             "P-CODE
STOQF       TYPE YTESTT04-STOQF,             "在庫区分
STOPF       TYPE YTESTT04-STOPF,             "在庫分配区分
RSTOPF      TYPE YTESTT04-RSTOPF,            "入出庫区分
STODATE     TYPE YTESTT04-STODATE,           "在庫日付
MENGE       TYPE YTESTT04-MENGE,             "在庫数量
COMMENTS    TYPE YTESTT04-COMMENTS,          "注釈
DATAS       TYPE YTESTT04-DATAS,             "生成日付
USERS       TYPE YTESTT04-USERS,             "作成者
CRNAM       TYPE YTESTT04-CRNAM,             "ユーザ
BOX_FNAME   TYPE CHAR1,                      "CHECKBOX
STYLE       TYPE LVC_T_STYL,                 "スタイル
LIGHT       TYPE CHAR1,
END   OF TYP_YTESTT04,

* 保管場所
BEGIN OF TYP_T001L,
WERKS       TYPE T001W-WERKS,                "プラント
LGORT       TYPE T001L-LGORT,                "保管場所
END   OF TYP_T001L,

TYP_T_OBJ     TYPE STANDARD TABLE OF TYP_OBJ,     "元データ
TYP_T_MARA    TYPE STANDARD TABLE OF MARA-MATNR,  "P-Code
TYP_T_TVTW    TYPE STANDARD TABLE OF TVTW-VTWEG,  "流通チャネル
TYP_T_T001L   TYPE STANDARD TABLE OF TYP_T001L,   "保管場所
TYP_T_T001W   TYPE STANDARD TABLE OF T001W-WERKS, "プラント
TYP_T_INSERT  TYPE STANDARD TABLE OF YTESTT04.    "対象データ

DATA:
TD_DELETE     TYPE TABLE OF YTESTT04,          "削除用テーブル
TD_BAK_OBJ    TYPE TABLE OF TYP_YTESTT04,      "対象データ(BAK)
TD_YTESTT04   TYPE TABLE OF TYP_YTESTT04.      "対象データ
DATA:
W_GRID        TYPE REF TO CL_GUI_ALV_GRID,     "ALV List Viewer
W_WERKS       TYPE YTESTT04-WERKS,             "プラント
W_LGORT       TYPE T001L-LGORT,                "保管場所
W_VTWEG       TYPE TVTW-VTWEG,                 "流通チャネル
W_PRODH       TYPE MARA-MATNR,                 "P-CODE
W_STOQF       TYPE YTESTT04-STOQF,             "在庫区分
W_STOPF       TYPE YTESTT04-STOPF,             "在庫分配区分
W_RSTOPF      TYPE YTESTT04-RSTOPF,            "入出庫区分
W_DATE        TYPE YTESTT04-STODATE.           "在庫日付

CONSTANTS:
CNS_ONE       TYPE CHAR1           VALUE '1',
CNS_MSG_E     TYPE SY-MSGTY        VALUE 'E',  "タイプ
CNS_STOQF_A   TYPE YTESTT04-STOQF  VALUE 'A',  "在庫区分
CNS_STOQF_P   TYPE YTESTT04-STOQF  VALUE 'P',  "在庫区分
CNS_IN        TYPE YTESTT04-RSTOPF VALUE 'IN', "入出庫区分
CNS_OUT       TYPE YTESTT04-RSTOPF VALUE 'OUT',"入出庫区分
CNS_TOT       TYPE YTESTT04-RSTOPF VALUE 'TOT',"入出庫区分
CNS_STOPF_L   TYPE YTESTT04-STOPF  VALUE '11', "在庫分配区分
CNS_STOPF_B   TYPE YTESTT04-STOPF  VALUE '21', "在庫分配区分
CNS_STOPF_N   TYPE YTESTT04-STOPF  VALUE '31'. "在庫分配区分

SELECTION-SCREEN BEGIN OF BLOCK FUNCTION WITH FRAME TITLE TEXT-001.
PARAMETERS:
CB_UPDAT    TYPE CHAR1 AS CHECKBOX.          "更新処理
SELECTION-SCREEN END OF BLOCK FUNCTION.

SELECTION-SCREEN BEGIN OF BLOCK CONDITION WITH FRAME TITLE TEXT-002.
SELECT-OPTIONS:
S_WERKS     FOR W_WERKS,                     "プラント
S_LGORT     FOR W_LGORT,                     "保管場所
S_VTWEG     FOR W_VTWEG,                     "流通チャネル
S_PRODH     FOR W_PRODH,                     "P-CODE
S_STOQF     FOR W_STOQF,                     "在庫区分
S_STOPF     FOR W_STOPF,                     "在庫分配区分
S_RSTOPF    FOR W_RSTOPF,                    "入出庫区分
S_DATE      FOR W_DATE.                      "在庫日付
SELECTION-SCREEN END OF BLOCK CONDITION.
**********************************************************************
AT SELECTION-SCREEN.

* 画面入力値のチェック処理
PERFORM FRM_CHECK_SCREEN.
**********************************************************************
START-OF-SELECTION.

* 主処理
PERFORM FRM_PROC_MAIN.
*&---------------------------------------------------------------------*
*&      Form  FRM_PROC_INIT
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM FRM_PROC_INIT.

* 初期処理
CLEAR:
W_GRID,                                      "ALV List Viewer
TD_DELETE[],                                 "削除用テーブル
TD_BAK_OBJ[],                                "対象データ(BAK)
TD_YTESTT04[].                               "対象データ

ENDFORM.                    " FRM_PROC_INIT
*&---------------------------------------------------------------------*
*&      FORM  FRM_PROC_MAIN
*&---------------------------------------------------------------------*
*       主処理
*----------------------------------------------------------------------*
FORM FRM_PROC_MAIN.

* ローカル変数定義
DATA:
LTD_OBJ_DATA TYPE TABLE OF TYP_OBJ.          "元データ

* 初期処理
PERFORM FRM_PROC_INIT.

* 元データの取得
PERFORM FRM_GET_YTESTT04 CHANGING LTD_OBJ_DATA.

* 対象データの編集
PERFORM FRM_EDIT_DATA USING LTD_OBJ_DATA.

* 対象データのレイアウトと変更処理
PERFORM FRM_LAYOUT_DATA.

ENDFORM.                    " FRM_PROC_MAIN
*&---------------------------------------------------------------------*
*&      FORM  FRM_GET_YTESTT04
*&---------------------------------------------------------------------*
*       対象データの取得
*----------------------------------------------------------------------*
*  <--  T_OBJ_DATA        元データ
*----------------------------------------------------------------------*
FORM FRM_GET_YTESTT04 CHANGING T_OBJ_DATA TYPE TYP_T_OBJ.

* 対象データの取得
SELECT WERKS                                   "プラント
LGORT                                   "保管場所
VTWEG                                   "流通チャネル
PRODH                                   "P-CODE
STOQF                                   "在庫区分
STOPF                                   "在庫分配区分
RSTOPF                                  "入出庫区分
STODATE                                 "在庫日付
MENGE                                   "在庫数量
COMMENTS                                "注釈
DATAS                                   "生成日付
USERS                                   "作成者
CRNAM                                   "ユーザ
FROM YTESTT04
INTO TABLE T_OBJ_DATA
WHERE WERKS    IN S_WERKS                     "プラント
AND LGORT    IN S_LGORT                     "保管場所
AND VTWEG    IN S_VTWEG                     "流通チャネル
AND PRODH    IN S_PRODH                     "P-CODE
AND STOQF    IN S_STOQF                     "在庫区分
AND STOPF    IN S_STOPF                     "在庫分配区分
AND RSTOPF   IN S_RSTOPF                    "入出庫区分
AND STODATE  IN S_DATE.                     "在庫日付

* リターンコードの判定
IF SY-SUBRC <> 0.
*-  メッセージの出力
MESSAGE S006 DISPLAY LIKE CNS_MSG_E.
LEAVE LIST-PROCESSING.
ENDIF.

ENDFORM.                    " FRM_GET_YTESTT04
*&---------------------------------------------------------------------*
*&      FORM  FRM_LAYOUT_DATA
*&---------------------------------------------------------------------*
*       対象データのレイアウトと変更処理
*----------------------------------------------------------------------*
FORM FRM_LAYOUT_DATA.

* ローカル変数定義
DATA:
LST_LAYOUT  TYPE LVC_S_LAYO,                 "レイアウト
LTD_FIELD   TYPE LVC_T_FCAT.                 "カタログ

* 対象データのバックアップ
TD_BAK_OBJ[] = TD_YTESTT04[].

* カタログの編集
PERFORM FRM_EDIT_FIELDCAT CHANGING LTD_FIELD.  "カタログ

LST_LAYOUT-CWIDTH_OPT  = ABAP_ON.              "列幅の最適化
LST_LAYOUT-STYLEFNAME  = 'STYLE'.              "スタイル
LST_LAYOUT-BOX_FNAME   = 'BOX_FNAME'.          "チェックボックス
LST_LAYOUT-EXCP_FNAME = 'LIGHT'.
CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
EXPORTING
I_CALLBACK_PROGRAM        = SY-REPID
*     I_STRUCTURE_NAME              = 'SFLIGHT'
I_CALLBACK_PF_STATUS_SET  = 'FRM_STATUS_SET'
I_CALLBACK_USER_COMMAND   = 'FRM_USER_COMMAND'
IS_LAYOUT_LVC             = LST_LAYOUT      "レイアウト
IT_FIELDCAT_LVC           = LTD_FIELD       "カタログ
TABLES
T_OUTTAB                 = TD_YTESTT04     "対象データ
EXCEPTIONS
PROGRAM_ERROR            = 1
OTHERS                   = 2.

* リターンコードの判定
IF SY-SUBRC <> 0.
*-  システムメッセージの出力
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                    " FRM_LAYOUT_DATA
*&---------------------------------------------------------------------*
*&      FORM  FRM_USER_COMMAND
*&---------------------------------------------------------------------*
*       TEXT
*----------------------------------------------------------------------*
FORM FRM_USER_COMMAND USING UUCOMM    LIKE SY-UCOMM
USELFIELD TYPE KKBLO_SELFIELD.

* ローカル変数定義
DATA:
LW_FLAG      TYPE CHAR1,                     "処理続行
LTD_UPDATE   TYPE TABLE OF YTESTT04,         "更新用テーブル
LTD_INSERT   TYPE TABLE OF YTESTT04.         "登録用テーブル

* ALV GridControl 全画面
CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
IMPORTING
E_GRID       = W_GRID.                      "ALV List Viewer

* 画面の対象データを取得する
CALL METHOD W_GRID->CHECK_CHANGED_DATA.

* 画面のリフレッシュ
USELFIELD-REFRESH = ABAP_ON.

CASE SY-UCOMM.

*-  登録の場合
WHEN 'ADDON'.
*--   行の挿入
APPEND INITIAL LINE TO TD_YTESTT04.

*-  削除の場合
WHEN 'DELET'.

*--   削除する想定のデータを取得する
PERFORM FRM_GET_DELETE_DATA.

*-  保存の場合
WHEN 'SAVE'.

*--   対象データのチェック
PERFORM FRM_PROC_DATA CHANGING LTD_INSERT    "登録用テーブル
LTD_UPDATE.   "更新用テーブル

IF TD_DELETE IS INITIAL AND
LTD_INSERT IS INITIAL AND
LTD_UPDATE IS INITIAL.
RETURN.
ENDIF.

*--   ダイアログの出力
PERFORM FRM_PROC_DIALOG CHANGING LW_FLAG.    "処理続行

*--   処理続行の判断
IF LW_FLAG IS NOT INITIAL.
RETURN.
ENDIF.

*--   テーブルをロックする
PERFORM FRM_LOCK_ENQUEUE.

*--   削除処理
PERFORM FRM_DELETE_YTESTT04.

*--   登録処理
PERFORM FRM_LOGON_YTESTT04 USING LTD_INSERT. "登録用テーブル

*--   更新処理
PERFORM FRM_UPDATE_YTESTT04 USING LTD_UPDATE."更新用テーブル

*--   メッセージの出力
PERFORM FRM_LAYOUT_MESSAGE USING LTD_UPDATE  "更新用テーブル
LTD_INSERT. "登録用テーブル
*--   ロックを解除する
PERFORM FRM_LOCK_DEQUEUE.

ENDCASE.

ENDFORM.                    " FRM_USER_COMMAND
*&---------------------------------------------------------------------*
*&      FORM  FRM_STATUS_SET
*&---------------------------------------------------------------------*
*       ステータスの設定
*----------------------------------------------------------------------*
FORM FRM_STATUS_SET USING RT_EXTAB TYPE SLIS_T_EXTAB.

* タイトルの設定
SET TITLEBAR '100'.

IF CB_UPDAT IS INITIAL.
*-  ステータスの設定
SET PF-STATUS '1100'.
ELSE.
*-  ステータスの設定
SET PF-STATUS '1000'.
ENDIF.

ENDFORM.                    " FRM_STATUS_SET
*&---------------------------------------------------------------------*
*&      FORM  FRM_LOCK_ENQUEUE
*&---------------------------------------------------------------------*
*       テーブルをロックする
*----------------------------------------------------------------------*
FORM FRM_LOCK_ENQUEUE.

* テーブルをロックする
CALL FUNCTION 'ENQUEUE_EZYTESTT04'
EXPORTING
MODE_YTESTT04        = CNS_MSG_E
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.

* リターンコードの判定
IF SY-SUBRC <> 0.
*-  メッセージの出力
MESSAGE ID SY-MSGID TYPE CNS_MSG_E NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                    " FRM_LOCK_ENQUEUE
*&---------------------------------------------------------------------*
*&      FORM  FRM_LOCK_DEQUEUE
*&---------------------------------------------------------------------*
*       ロックを解除する
*----------------------------------------------------------------------*
FORM FRM_LOCK_DEQUEUE.

* ロックを解除する
CALL FUNCTION 'DEQUEUE_EZYTESTT04'.

ENDFORM.                    " FRM_LOCK_DEQUEUE
*&---------------------------------------------------------------------*
*&      Form  FRM_EDIT_FIELDCAT
*&---------------------------------------------------------------------*
*       カタログの編集
*----------------------------------------------------------------------*
*  <--  T_FIELDCAT        カタログ
*----------------------------------------------------------------------*
FORM FRM_EDIT_FIELDCAT CHANGING T_FIELDCAT TYPE LVC_T_FCAT.

* ローカル変数定義
DATA:
LTH_FIELD   TYPE LVC_S_FCAT.                 "カタログ

CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
EXPORTING
I_STRUCTURE_NAME       = 'YTESTT04'
CHANGING
CT_FIELDCAT            = T_FIELDCAT        "カタログ
EXCEPTIONS
INCONSISTENT_INTERFACE = 1
PROGRAM_ERROR          = 2
OTHERS                 = 3.

* リターンコードの判定
IF SY-SUBRC <> 0.
*-  メッセージの出力
MESSAGE ID SY-MSGID TYPE CNS_MSG_E NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

LOOP AT T_FIELDCAT INTO LTH_FIELD.
CASE LTH_FIELD-FIELDNAME.
WHEN 'WERKS'.
LTH_FIELD-EDIT      = ABAP_ON.           "入力可能
WHEN 'LGORT'.
LTH_FIELD-EDIT      = ABAP_ON.           "入力可能
WHEN 'VTWEG'.
LTH_FIELD-EDIT      = ABAP_ON.           "入力可能
WHEN 'PRODH'.
LTH_FIELD-EDIT      = ABAP_ON.           "入力可能
WHEN 'STOQF'.
LTH_FIELD-EDIT      = ABAP_ON.           "入力可能
WHEN 'STOPF'.
LTH_FIELD-EDIT      = ABAP_ON.           "入力可能
WHEN 'RSTOPF'.
LTH_FIELD-EDIT      = ABAP_ON.           "入力可能
WHEN 'STODATE'.
LTH_FIELD-EDIT      = ABAP_ON.           "入力可能
WHEN 'MENGE'.
LTH_FIELD-EDIT      = ABAP_ON.           "入力可能
WHEN 'TANI'.
LTH_FIELD-TECH      = ABAP_ON.           "レイアウト可能
WHEN 'COMMENTS'.
LTH_FIELD-EDIT      = ABAP_ON.           "入力可能
WHEN 'DATAS'.
LTH_FIELD-TECH      = ABAP_ON.           "レイアウト可能
WHEN 'USERS'.
LTH_FIELD-TECH      = ABAP_ON.           "レイアウト可能
WHEN 'UDATE'.
LTH_FIELD-TECH      = ABAP_ON.           "レイアウト可能
WHEN 'CRNAM'.
LTH_FIELD-TECH      = ABAP_ON.           "レイアウト可能COLTEXT
WHEN 'LIGHT'.
LTH_FIELD-COLTEXT      = 'ABAP_ON'.           "レイアウト可能
ENDCASE.
MODIFY T_FIELDCAT FROM LTH_FIELD.
ENDLOOP.

ENDFORM.                    " FRM_EDIT_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_SCREEN
*&---------------------------------------------------------------------*
*       画面入力値のチェック処理
*----------------------------------------------------------------------*
FORM FRM_CHECK_SCREEN.

* ローカル変数定義
DATA:
LW_MATNR    TYPE MARA-MATNR,                 "品目コード
LW_VTWEG    TYPE TVTW-VTWEG,                 "流通チャネル
LW_LGORT    TYPE T001L-LGORT,                "保管場所
LW_WERKS    TYPE T001W-WERKS.                "プラント

* プラント（WERKS）存在チェック
SELECT SINGLE WERKS                            "プラント
FROM T001W
INTO LW_WERKS
WHERE WERKS IN S_WERKS[].                     "プラント
* リターンコードの判定
IF SY-SUBRC <> 0.
*-  カーソルの設定
SET CURSOR FIELD 'S_WERKS-LOW'.
*-  メッセージの出力
MESSAGE E001 WITH TEXT-M01.
ENDIF.

* 保管場所(LGORT)存在チェック
SELECT SINGLE LGORT                            "保管場所
FROM T001L
INTO LW_LGORT
WHERE WERKS IN S_WERKS[]                      "プラント
AND LGORT IN S_LGORT[].                     "保管場所
* リターンコードの判定
IF SY-SUBRC <> 0.
*-  カーソルの設定
SET CURSOR FIELD 'S_LGORT-LOW'.
*-  メッセージの出力
MESSAGE E001 WITH TEXT-M02.
ENDIF.

* 流通チャネル(VTWEG)存在チェック
SELECT SINGLE VTWEG                            "流通チャネル
FROM TVTW
INTO LW_VTWEG
WHERE VTWEG IN S_VTWEG[].                     "流通チャネル
* リターンコードの判定
IF SY-SUBRC <> 0.
*-  カーソルの設定
SET CURSOR FIELD 'S_VTWEG-LOW'.
*-  メッセージの出力
MESSAGE E001 WITH TEXT-M03.
ENDIF.

* P-CODE(PRODH)存在チェック
SELECT SINGLE MATNR                            "品目コード
FROM MARA
INTO LW_MATNR
WHERE MATNR IN S_PRODH[].                     "品目コード
* リターンコードの判定
IF SY-SUBRC <> 0.
*-  カーソルの設定
SET CURSOR FIELD 'S_PRODH-LOW'.
*-  メッセージの出力
MESSAGE E001 WITH TEXT-M04.
ENDIF.

* P-在庫区分(STOQF)妥当性チェック
IF 'A' NOT IN S_STOQF[] AND
'P' NOT IN S_STOQF[].
*-  カーソルの設定
SET CURSOR FIELD 'S_STOQF-LOW'.
*-  メッセージの出力
MESSAGE E002.
ENDIF.

* 在庫分配区分(STOPF)妥当性チェック
IF '11' NOT IN S_STOPF[] AND
'21' NOT IN S_STOPF[] AND
'31' NOT IN S_STOPF[].
*-  カーソルの設定
SET CURSOR FIELD 'S_STOPF-LOW'.
*-  メッセージの出力
MESSAGE E003.
ENDIF.

* 入出庫区分(RSTOPF)妥当性チェック
IF 'IN' NOT IN S_RSTOPF[] AND
'OUT' NOT IN S_RSTOPF[] AND
'TOT' NOT IN S_RSTOPF[].
*-  カーソルの設定
SET CURSOR FIELD 'S_RSTOPF-LOW'.
*-  メッセージの出力
MESSAGE E004.
ENDIF.

ENDFORM.                    " FRM_CHECK_SCREEN
*&---------------------------------------------------------------------*
*&      Form  FRM_EDIT_DATA
*&---------------------------------------------------------------------*
*       対象データの編集
*----------------------------------------------------------------------*
*  --> T_OBJ_DATA     元データ
*----------------------------------------------------------------------*
FORM FRM_EDIT_DATA USING T_OBJ_DATA TYPE TYP_T_OBJ.

DATA:
LST_YTESTT04 TYPE TYP_YTESTT04,              "対象データ
LST_OBJ      TYPE TYP_OBJ.                   "元データ

* 対象データの作成
LOOP AT T_OBJ_DATA INTO LST_OBJ.

CLEAR LST_YTESTT04.

MOVE-CORRESPONDING LST_OBJ TO LST_YTESTT04.
IF LST_OBJ-MENGE > 1234567.
LST_YTESTT04-LIGHT = 1.
ENDIF.
APPEND LST_YTESTT04 TO TD_YTESTT04.

ENDLOOP.

IF CB_UPDAT IS NOT INITIAL.
*-  変更可能
PERFORM FRM_EDIT_UPDATE_DATA.
ELSE.
*-  変更不可
PERFORM FRM_EDIT_VIEW_DATA.
ENDIF.

ENDFORM.                    " FRM_EDIT_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_EDIT_UPDATE_DATA
*&---------------------------------------------------------------------*
*       変更可能
*----------------------------------------------------------------------*
FORM FRM_EDIT_UPDATE_DATA.

* ローカル変数定義
DATA:
LTH_YTESTT04 TYPE TYP_YTESTT04,              "対象データ
LST_STYLEROW TYPE LVC_S_STYL.                "ALV コントロール

LOOP AT TD_YTESTT04 INTO LTH_YTESTT04.

*-  プラント
LST_STYLEROW-FIELDNAME = 'WERKS'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  保管場所
LST_STYLEROW-FIELDNAME = 'LGORT'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  流通チャネル
LST_STYLEROW-FIELDNAME = 'VTWEG'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  P-CODE
LST_STYLEROW-FIELDNAME = 'PRODH'  .
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  在庫区分
LST_STYLEROW-FIELDNAME = 'STOQF'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  在庫分配区分
LST_STYLEROW-FIELDNAME = 'STOPF'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  入出庫区分
LST_STYLEROW-FIELDNAME = 'RSTOPF'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  在庫日付
LST_STYLEROW-FIELDNAME = 'STODATE'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

MODIFY TD_YTESTT04 FROM LTH_YTESTT04.

ENDLOOP.

ENDFORM.                    " FRM_EDIT_UPDATE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_EDIT_VIEW_DATA
*&---------------------------------------------------------------------*
*       変更不可
*----------------------------------------------------------------------*
FORM FRM_EDIT_VIEW_DATA.

* ローカル変数定義
DATA:
LTH_YTESTT04 TYPE TYP_YTESTT04,              "対象データ
LST_STYLEROW TYPE LVC_S_STYL.                "ALV コントロール

LOOP AT TD_YTESTT04 INTO LTH_YTESTT04.

*-  プラント
LST_STYLEROW-FIELDNAME = 'WERKS'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  保管場所
LST_STYLEROW-FIELDNAME = 'LGORT'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  流通チャネル
LST_STYLEROW-FIELDNAME = 'VTWEG'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  P-CODE
LST_STYLEROW-FIELDNAME = 'PRODH'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  在庫区分
LST_STYLEROW-FIELDNAME = 'STOQF'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  在庫分配区分
LST_STYLEROW-FIELDNAME = 'STOPF'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  入出庫区分
LST_STYLEROW-FIELDNAME = 'RSTOPF'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  在庫日付
LST_STYLEROW-FIELDNAME = 'STODATE'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  在庫数量
LST_STYLEROW-FIELDNAME = 'MENGE'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

*-  注釈
LST_STYLEROW-FIELDNAME = 'COMMENTS'.
LST_STYLEROW-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_DISABLED.
INSERT LST_STYLEROW INTO TABLE LTH_YTESTT04-STYLE.

MODIFY TD_YTESTT04 FROM LTH_YTESTT04.

ENDLOOP.

ENDFORM.                    " FRM_EDIT_VIEW_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_PROC_DATA
*&---------------------------------------------------------------------*
*       対象データのチェック
*----------------------------------------------------------------------*
*  <--  T_INSERT        登録用テーブル
*  <--  T_UPDATE        更新用テーブル
*----------------------------------------------------------------------*
FORM FRM_PROC_DATA CHANGING T_INSERT TYPE TYP_T_INSERT
T_UPDATE TYPE TYP_T_INSERT.

* ローカル変数定義
DATA:
LTH_BAK_OBJ  TYPE TYP_YTESTT04,              "対象データ(BAK)
LW_FIDNAME   TYPE STRING,                    "項目名
LW_TABIX     TYPE SY-TABIX,                  "索引
LTH_YTESTT04 TYPE TYP_YTESTT04,              "対象データ
LTD_MARA     TYPE TABLE OF MARA-MATNR,       "P-Code
LTD_TVTW     TYPE TABLE OF TVTW-VTWEG,       "流通チャネル
LTD_T001L    TYPE TABLE OF TYP_T001L,        "保管場所
LTD_T001W    TYPE TABLE OF T001W-WERKS,      "プラント
LW_NUM       TYPE I.                         "数字書式

* プラントの取得
PERFORM FRM_SELECT_T001W CHANGING LTD_T001W.

* 保管場所の取得
PERFORM FRM_SELECT_T001L CHANGING LTD_T001L.

* 流通チャネルの取得
PERFORM FRM_SELECT_TVTW CHANGING LTD_TVTW.

* P-Codeの取得
PERFORM FRM_SELECT_MARA CHANGING LTD_MARA.

* ソート処理
SORT TD_BAK_OBJ BY WERKS   ASCENDING           "プラント
LGORT   ASCENDING           "保管場所
VTWEG   ASCENDING           "流通チャネル
PRODH   ASCENDING           "P-CODE
STOQF   ASCENDING           "在庫区分
STOPF   ASCENDING           "在庫分配区分
RSTOPF  ASCENDING           "入出庫区分
STODATE ASCENDING.          "在庫日付

* 重複項目のチェック
PERFORM FRM_CHECK_ADJAENT.

LOOP AT TD_YTESTT04 INTO LTH_YTESTT04.

LW_TABIX = SY-TABIX.

*-  プラントのチェック
IF LTH_YTESTT04-WERKS IS INITIAL.
LW_FIDNAME = 'WERKS'.
*--   カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*--   メッセージの出力
MESSAGE E015 WITH TEXT-M01.
ELSE.
READ TABLE LTD_T001W TRANSPORTING NO FIELDS
WITH KEY TABLE_LINE = LTH_YTESTT04-WERKS   "プラント
BINARY SEARCH.
*--   リターンコードの判定
IF SY-SUBRC <> 0.
LW_FIDNAME = 'WERKS'.
*---    カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*---    メッセージの出力
MESSAGE E001 WITH TEXT-M01.
ENDIF.
ENDIF.

*-  保管場所のチェック
IF LTH_YTESTT04-LGORT IS INITIAL.
LW_FIDNAME = 'LGORT'.
*--   カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*--   メッセージの出力
MESSAGE E015 WITH TEXT-M02.
ELSE.
READ TABLE LTD_T001L TRANSPORTING NO FIELDS
WITH KEY WERKS = LTH_YTESTT04-WERKS            "プラント
LGORT = LTH_YTESTT04-LGORT            "保管場所
BINARY SEARCH.
*--   リターンコードの判定
IF SY-SUBRC <> 0.
LW_FIDNAME = 'LGORT'.
*---    カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*---    メッセージの出力
MESSAGE E001 WITH TEXT-M02.
ENDIF.
ENDIF.

*-  流通チャネルのチェック
IF LTH_YTESTT04-VTWEG IS INITIAL.
LW_FIDNAME = 'VTWEG'.
*--   カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*--   メッセージの出力
MESSAGE E015 WITH TEXT-M03.
ELSE.
READ TABLE LTD_TVTW TRANSPORTING NO FIELDS
WITH KEY TABLE_LINE = LTH_YTESTT04-VTWEG   "流通チャネル
BINARY SEARCH.
*--   リターンコードの判定
IF SY-SUBRC <> 0.
LW_FIDNAME = 'VTWEG'.
*---    カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*---    メッセージの出力
MESSAGE E001 WITH TEXT-M03.
ENDIF.
ENDIF.

*-  P-Codeのチェック
IF LTH_YTESTT04-PRODH IS INITIAL.
LW_FIDNAME = 'PRODH'.
*--   カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*--   メッセージの出力
MESSAGE E015 WITH TEXT-M04.
ELSE.
READ TABLE LTD_MARA TRANSPORTING NO FIELDS
WITH KEY TABLE_LINE = LTH_YTESTT04-PRODH   "品目コード
BINARY SEARCH.
*--   リターンコードの判定
IF SY-SUBRC <> 0.
LW_FIDNAME = 'PRODH'.
*---    カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*---    メッセージの出力
MESSAGE E001 WITH TEXT-M04.
ENDIF.
ENDIF.

*-  在庫区分のチェック
IF LTH_YTESTT04-STOQF IS INITIAL.
LW_FIDNAME = 'STOQF'.
*--   カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*--   メッセージの出力
MESSAGE E015 WITH TEXT-M05.
ELSE.
IF LTH_YTESTT04-STOQF <> CNS_STOQF_A AND
LTH_YTESTT04-STOQF <> CNS_STOQF_P.
LW_FIDNAME = 'STOQF'.
*---    カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*---    メッセージの出力
MESSAGE E002.
ENDIF.
ENDIF.

*-  在庫分配区分のチェック
IF LTH_YTESTT04-STOPF IS INITIAL.
LW_FIDNAME = 'STOPF'.
*--   カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*--   メッセージの出力
MESSAGE E015 WITH TEXT-M06.
ELSE.
IF LTH_YTESTT04-STOPF <> CNS_STOPF_L AND
LTH_YTESTT04-STOPF <> CNS_STOPF_B AND
LTH_YTESTT04-STOPF <> CNS_STOPF_N.
LW_FIDNAME = 'STOPF'.
*---    カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*---    メッセージの出力
MESSAGE E003.
ENDIF.
ENDIF.

*-  入出庫区分のチェック
IF LTH_YTESTT04-RSTOPF IS INITIAL.
LW_FIDNAME = 'RSTOPF'.
*--   カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*--   メッセージの出力
MESSAGE E015 WITH TEXT-M07.
ELSE.
IF LTH_YTESTT04-RSTOPF <> CNS_IN AND
LTH_YTESTT04-RSTOPF <> CNS_OUT AND
LTH_YTESTT04-RSTOPF <> CNS_TOT.
LW_FIDNAME = 'RSTOPF'.
*---    カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*---    メッセージの出力
MESSAGE E004.
ENDIF.
ENDIF.

*-  在庫日付のチェック
IF LTH_YTESTT04-STODATE IS INITIAL.
LW_FIDNAME = 'STODATE'.
*--   カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*--   メッセージの出力
MESSAGE E015 WITH TEXT-M09.
ENDIF.

*-  数量のチェック
IF LTH_YTESTT04-MENGE IS INITIAL.
LW_FIDNAME = 'MENGE'.
*--   カーソルの設定
PERFORM FRM_SET_CURSOR USING LW_TABIX
LW_FIDNAME.
*--   メッセージの出力
MESSAGE E015 WITH TEXT-M08.
ENDIF.

*-  対象データ(BAK)を検索する
READ TABLE TD_BAK_OBJ INTO LTH_BAK_OBJ
WITH KEY WERKS   = LTH_YTESTT04-WERKS   "プラント
LGORT   = LTH_YTESTT04-LGORT   "保管場所
VTWEG   = LTH_YTESTT04-VTWEG   "流通チャネル
PRODH   = LTH_YTESTT04-PRODH   "P-CODE
STOQF   = LTH_YTESTT04-STOQF   "在庫区分
STOPF   = LTH_YTESTT04-STOPF   "在庫分配区分
RSTOPF  = LTH_YTESTT04-RSTOPF  "入出庫区分
STODATE = LTH_YTESTT04-STODATE "在庫日付
BINARY SEARCH.
*-  リターンコードの判定
IF SY-SUBRC = 0.
*--   更新想定のデータを取得する
PERFORM FRM_GET_UPDATE_DATA USING LTH_YTESTT04
LTH_BAK_OBJ
CHANGING T_UPDATE.
ELSE.
*--   登録想定のデータを取得する
PERFORM FRM_GET_INSERT_DATA USING LTH_YTESTT04
CHANGING T_INSERT.
LTH_YTESTT04-CRNAM = SY-UNAME.
MODIFY TD_YTESTT04 FROM LTH_YTESTT04.
ENDIF.

ENDLOOP.

ENDFORM.                    " FRM_PROC_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_DELETE_YTESTT04
*&---------------------------------------------------------------------*
*       削除処理
*----------------------------------------------------------------------*
FORM FRM_DELETE_YTESTT04.

IF TD_DELETE IS NOT INITIAL.

*-  削除処理
DELETE YTESTT04 FROM TABLE TD_DELETE.

*-  リターンコードの判定
IF SY-SUBRC <> 0.
ROLLBACK WORK.
*--   ロックを解除する
PERFORM FRM_LOCK_DEQUEUE.
*--   メッセージの出力
MESSAGE E011.
ELSE.
TD_BAK_OBJ[] = TD_YTESTT04[].
ENDIF.

ENDIF.

ENDFORM.                    " FRM_DELETE_YTESTT04
*&---------------------------------------------------------------------*
*&      Form  FRM_LOGON_YTESTT04
*&---------------------------------------------------------------------*
*       登録処理
*----------------------------------------------------------------------*
*  -->  T_INSERT        登録用テーブル
*----------------------------------------------------------------------*
FORM FRM_LOGON_YTESTT04 USING T_INSERT TYPE TYP_T_INSERT.

IF T_INSERT IS NOT INITIAL.

*-  登録処理
INSERT YTESTT04 FROM TABLE T_INSERT ACCEPTING DUPLICATE KEYS.

*-  リターンコードの判定
IF SY-SUBRC = 0.

TD_BAK_OBJ[] = TD_YTESTT04[].
*--   変更可能
PERFORM FRM_EDIT_UPDATE_DATA.

ELSE.

ROLLBACK WORK.
*--   ロックを解除する
PERFORM FRM_LOCK_DEQUEUE.
*--   メッセージの出力
MESSAGE E009.

ENDIF.

ENDIF.

ENDFORM.                    " FRM_LOGON_YTESTT04
*&---------------------------------------------------------------------*
*&      Form  FRM_UPDATE_YTESTT04
*&---------------------------------------------------------------------*
*       更新処理
*----------------------------------------------------------------------*
*  -->  T_UPDATE        更新用テーブル
*----------------------------------------------------------------------*
FORM FRM_UPDATE_YTESTT04 USING T_UPDATE TYPE TYP_T_INSERT.

IF T_UPDATE IS NOT INITIAL.

*-  更新件数の算出
UPDATE YTESTT04 FROM TABLE T_UPDATE.

*-  リターンコードの判定
IF SY-SUBRC <> 0.
ROLLBACK WORK.
*--   ロックを解除する
PERFORM FRM_LOCK_DEQUEUE.
*--   メッセージの出力
MESSAGE E010.
ELSE.
TD_BAK_OBJ[] = TD_YTESTT04[].
ENDIF.

ENDIF.

ENDFORM.                    " FRM_UPDATE_YTESTT04
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_T001W
*&---------------------------------------------------------------------*
*       プラントの取得
*----------------------------------------------------------------------*
*  <--  T_T001W        プラント
*----------------------------------------------------------------------*
FORM FRM_SELECT_T001W CHANGING T_T001W TYPE TYP_T_T001W.

SELECT WERKS                                   "プラント
FROM T001W
INTO TABLE T_T001W.

* ソート処理
SORT T_T001W BY TABLE_LINE ASCENDING.          "プラント

ENDFORM.                    " FRM_SELECT_T001W
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_T001L
*&---------------------------------------------------------------------*
*       保管場所の取得
*----------------------------------------------------------------------*
*  <--  T_T001L        保管場所
*----------------------------------------------------------------------*
FORM FRM_SELECT_T001L CHANGING T_T001L TYPE TYP_T_T001L.

SELECT WERKS                                   "プラント
LGORT                                   "保管場所
FROM T001L
INTO TABLE T_T001L.

* ソート処理
SORT T_T001L BY WERKS ASCENDING                "プラント
LGORT ASCENDING.               "保管場所

ENDFORM.                    " FRM_SELECT_T001L
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_TVTW
*&---------------------------------------------------------------------*
*       流通チャネルの取得
*----------------------------------------------------------------------*
*   <-- T_TVTW  流通チャネル
*----------------------------------------------------------------------*
FORM FRM_SELECT_TVTW  CHANGING T_TVTW TYPE TYP_T_TVTW.

SELECT VTWEG                                   "流通チャネル
FROM TVTW
INTO TABLE T_TVTW.

* ソート処理
SORT T_TVTW BY TABLE_LINE ASCENDING.           "流通チャネル

ENDFORM.                    " FRM_SELECT_TVTW
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_MARA
*&---------------------------------------------------------------------*
*       P-Codeの取得
*----------------------------------------------------------------------*
*  <--  T_MARA        P-Code
*----------------------------------------------------------------------*
FORM FRM_SELECT_MARA CHANGING T_MARA TYPE TYP_T_MARA.

SELECT MATNR                                   "P-Code
FROM MARA
INTO TABLE T_MARA.

* ソート処理
SORT T_MARA BY TABLE_LINE ASCENDING.           "P-Code

ENDFORM.                    " FRM_SELECT_MARA
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_DELETE_DATA
*&---------------------------------------------------------------------*
*       削除想定のデータを取得する
*----------------------------------------------------------------------*
FORM FRM_GET_DELETE_DATA.

* ローカル変数定義
DATA:
LTD_BAK      TYPE TABLE OF TYP_YTESTT04,     "対象データ(BAK)
LTH_BAK_OBJ  TYPE TYP_YTESTT04,              "対象データ(BAK)
LTH_DELETE   TYPE YTESTT04,                  "削除用テーブル
LTH_YTESTT04 TYPE TYP_YTESTT04.              "対象データ

LTD_BAK[] = TD_BAK_OBJ[].

LOOP AT TD_YTESTT04 INTO LTH_YTESTT04 WHERE BOX_FNAME = ABAP_ON.

READ TABLE TD_BAK_OBJ INTO LTH_BAK_OBJ
WITH KEY WERKS    = LTH_YTESTT04-WERKS     "プラント
LGORT    = LTH_YTESTT04-LGORT     "保管場所
VTWEG    = LTH_YTESTT04-VTWEG     "流通チャネル
PRODH    = LTH_YTESTT04-PRODH     "P-CODE
STOQF    = LTH_YTESTT04-STOQF     "在庫区分
STOPF    = LTH_YTESTT04-STOPF     "在庫分配区分
RSTOPF   = LTH_YTESTT04-RSTOPF    "入出庫区分
STODATE  = LTH_YTESTT04-STODATE.  "在庫日付
*-- リターンコードの判定
IF SY-SUBRC = 0.
IF LTH_YTESTT04-CRNAM IS NOT INITIAL.
DELETE TABLE TD_BAK_OBJ FROM LTH_BAK_OBJ.
ENDIF.
ENDIF.

LTH_DELETE-WERKS    = LTH_YTESTT04-WERKS.    "プラント
LTH_DELETE-LGORT    = LTH_YTESTT04-LGORT.    "保管場所
LTH_DELETE-VTWEG    = LTH_YTESTT04-VTWEG.    "流通チャネル
LTH_DELETE-PRODH    = LTH_YTESTT04-PRODH.    "P-CODE
LTH_DELETE-STOQF    = LTH_YTESTT04-STOQF.    "在庫区分
LTH_DELETE-STOPF    = LTH_YTESTT04-STOPF.    "在庫分配区分
LTH_DELETE-RSTOPF   = LTH_YTESTT04-RSTOPF.   "入出庫区分
LTH_DELETE-STODATE  = LTH_YTESTT04-STODATE.  "在庫日付
LTH_DELETE-CRNAM  = LTH_YTESTT04-CRNAM.  "在庫日付
APPEND LTH_DELETE TO TD_DELETE.

DELETE TD_YTESTT04.

ENDLOOP.

* 登録したデータを削除する処理
LOOP AT TD_DELETE INTO LTH_DELETE.

READ TABLE LTD_BAK TRANSPORTING NO FIELDS
WITH KEY WERKS    = LTH_DELETE-WERKS       "プラント
LGORT    = LTH_DELETE-LGORT       "保管場所
VTWEG    = LTH_DELETE-VTWEG       "流通チャネル
PRODH    = LTH_DELETE-PRODH       "P-CODE
STOQF    = LTH_DELETE-STOQF       "在庫区分
STOPF    = LTH_DELETE-STOPF       "在庫分配区分
RSTOPF   = LTH_DELETE-RSTOPF      "入出庫区分
STODATE  = LTH_DELETE-STODATE.    "在庫日付
*-- リターンコードの判定
IF SY-SUBRC <> 0.
DELETE TD_DELETE.
ELSE.
IF LTH_DELETE-CRNAM IS INITIAL.
DELETE TD_DELETE.
ENDIF.
ENDIF.

ENDLOOP.

ENDFORM.                    " FRM_GET_DELETE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_UPDATE_DATA
*&---------------------------------------------------------------------*
*       更新想定のデータを取得する
*----------------------------------------------------------------------*
*  -->  I_YTESTT04        対象データ
*  -->  I_YTESTT04        対象データ(BAK)
*  <--   T_UPDATE         更新用テーブル
*----------------------------------------------------------------------*
FORM FRM_GET_UPDATE_DATA USING I_YTESTT04  TYPE TYP_YTESTT04
I_BAK_OBJ  TYPE TYP_YTESTT04
CHANGING T_UPDATE   TYPE TYP_T_INSERT.

* ローカル変数定義
DATA:
LTH_UPDATE   TYPE YTESTT04.                  "更新用テーブル

IF ( I_YTESTT04-MENGE <> I_BAK_OBJ-MENGE       OR
I_YTESTT04-COMMENTS <> I_BAK_OBJ-COMMENTS ).

CLEAR LTH_UPDATE.
MOVE-CORRESPONDING I_YTESTT04 TO LTH_UPDATE.
LTH_UPDATE-UDATE    = SY-DATUM.              "システム時間.
LTH_UPDATE-CRNAM    = SY-UNAME.              "ユーザ.
APPEND LTH_UPDATE TO T_UPDATE.

ENDIF.

ENDFORM.                    " FRM_GET_UPDATE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_LAYOUT_MESSAGE
*&---------------------------------------------------------------------*
*       メッセージの出力
*----------------------------------------------------------------------*
*  -->  T_UPDATE      更新用テーブル
*  -->  T_INSERT      登録用テーブル
*----------------------------------------------------------------------*
FORM FRM_LAYOUT_MESSAGE USING T_UPDATE TYPE TYP_T_INSERT
T_INSERT TYPE TYP_T_INSERT.

* ローカル変数定義
DATA:
LW_UPDATE   TYPE I,                          "更新件数
LW_INSERT   TYPE I,                          "登録件数
LW_DELETE   TYPE I.                          "削除件数

* 登録件数の算出
DESCRIBE TABLE T_INSERT LINES LW_INSERT.

* 更新件数の算出
DESCRIBE TABLE T_UPDATE LINES LW_UPDATE.

* 削除件数の算出
DESCRIBE TABLE TD_DELETE LINES LW_DELETE.

IF T_INSERT IS NOT INITIAL AND
LW_UPDATE <> SPACE AND
TD_DELETE IS NOT INITIAL.

*-  メッセージの出力
MESSAGE S016 WITH LW_INSERT                  "登録件数
LW_UPDATE                  "更新件数
LW_DELETE.                 "削除件数

ELSEIF T_INSERT IS NOT INITIAL AND
LW_UPDATE <> SPACE.

*-  メッセージの出力
MESSAGE S017 WITH LW_INSERT                  "登録件数
LW_UPDATE.                 "更新件数

ELSEIF LW_UPDATE <> SPACE AND
TD_DELETE IS NOT INITIAL.

*-  メッセージの出力
MESSAGE S018 WITH LW_UPDATE                  "更新件数
LW_DELETE.                 "削除件数

ELSEIF T_INSERT IS NOT INITIAL AND
TD_DELETE IS NOT INITIAL.

*-  メッセージの出力
MESSAGE S019 WITH LW_INSERT                  "登録件数
LW_DELETE.                 "削除件数

ELSEIF  T_INSERT IS NOT INITIAL.

*-  メッセージの出力
MESSAGE S012 WITH LW_INSERT.                 "登録件数

ELSEIF  LW_UPDATE <> SPACE.

*-  メッセージの出力
MESSAGE S013 WITH LW_UPDATE.                 "更新件数

ELSEIF  TD_DELETE IS NOT INITIAL.

*-  メッセージの出力
MESSAGE S014 WITH LW_DELETE.                 "削除件数

ENDIF.

* 削除用テーブルのクリア処理
CLEAR TD_DELETE[].

ENDFORM.                    " FRM_LAYOUT_MESSAGE
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_CURSOR
*&---------------------------------------------------------------------*
*       カーソルの設定
*----------------------------------------------------------------------*
*  -->  I_TABIX          行
*  -->  I_FIDNAME        項目名
*----------------------------------------------------------------------*
FORM FRM_SET_CURSOR USING I_TABIX   TYPE SY-TABIX
I_FIDNAME TYPE STRING.

* ローカル変数定義
DATA:
LES_ID       TYPE LVC_S_COL,
LES_ROW_NO   TYPE LVC_S_ROID.

LES_ID-FIELDNAME  = I_FIDNAME.                 "項目名
LES_ROW_NO-ROW_ID = I_TABIX.                   "行

CALL METHOD W_GRID->SET_CURRENT_CELL_VIA_ID
EXPORTING
IS_COLUMN_ID = LES_ID                      "項目名
IS_ROW_NO    = LES_ROW_NO.                 "行

ENDFORM.                    " FRM_SET_CURSOR
*&---------------------------------------------------------------------*
*&      Form  FRM_PROC_DIALOG
*&---------------------------------------------------------------------*
*       ダイアログの出力
*----------------------------------------------------------------------*
*  <--   O_FLAG         処理続行
*----------------------------------------------------------------------*
FORM FRM_PROC_DIALOG CHANGING O_FLAG TYPE C.

* ローカル変数定義
DATA:
LW_ANSWER   TYPE STRING.                     "リターンコード

CALL FUNCTION 'POPUP_TO_CONFIRM'
EXPORTING
TEXT_QUESTION   = TEXT-003
TEXT_BUTTON_1   = TEXT-004
TEXT_BUTTON_2   = TEXT-005
IMPORTING
ANSWER          = LW_ANSWER                 "リターンコード
EXCEPTIONS
TEXT_NOT_FOUND  = 1
OTHERS          = 2.

*  リターンコードの判定
IF LW_ANSWER <> CNS_ONE.
O_FLAG = ABAP_ON.
*-  クリア処理
CLEAR TD_DELETE[].
ENDIF.

ENDFORM.                    " FRM_PROC_DIALOG
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_INSERT_DATA
*&---------------------------------------------------------------------*
*       登録想定のデータを取得する
*----------------------------------------------------------------------*
*  -->  I_YTESTT04        対象データ
*  <--   T_INSERT         登録用テーブル
*----------------------------------------------------------------------*
FORM FRM_GET_INSERT_DATA USING I_YTESTT04 TYPE TYP_YTESTT04
CHANGING  T_INSERT  TYPE TYP_T_INSERT.

* ローカル変数定義
DATA:
LTH_INSERT   TYPE YTESTT04.                  "登録用テーブル

CLEAR LTH_INSERT.

MOVE-CORRESPONDING I_YTESTT04 TO LTH_INSERT.
LTH_INSERT-DATAS    = SPACE.                   "生成日付
LTH_INSERT-USERS    = SPACE.                   "作成者
LTH_INSERT-UDATE    = SY-DATUM.                "システム日付
LTH_INSERT-CRNAM    = SY-UNAME.                "ユーザ
APPEND LTH_INSERT TO T_INSERT.

ENDFORM.                    " FRM_GET_INSERT_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_ADJAENT
*&---------------------------------------------------------------------*
*       重複項目のチェック
*----------------------------------------------------------------------*
FORM FRM_CHECK_ADJAENT.

* ローカル変数定義
DATA:
LTD_YTESTT04 TYPE TABLE OF TYP_YTESTT04,     "対象データ
LW_BEFOR_NUM TYPE I,                         "削除前件数
LW_AGO_NUM   TYPE I.                         "削除後件数

LTD_YTESTT04[] = TD_YTESTT04[].

* 削除前件数の算出
DESCRIBE TABLE LTD_YTESTT04 LINES LW_BEFOR_NUM.

* ソート処理
SORT LTD_YTESTT04 BY WERKS   ASCENDING         "プラント
LGORT   ASCENDING         "保管場所
VTWEG   ASCENDING         "流通チャネル
PRODH   ASCENDING         "P-CODE
STOQF   ASCENDING         "在庫区分
STOPF   ASCENDING         "在庫分配区分
RSTOPF  ASCENDING         "入出庫区分
STODATE ASCENDING.        "在庫日付
* 重複項目の削除
DELETE ADJACENT DUPLICATES FROM LTD_YTESTT04
COMPARING WERKS          "プラント
LGORT          "保管場所
VTWEG          "流通チャネル
PRODH          "P-CODE
STOQF          "在庫区分
STOPF          "在庫分配区分
RSTOPF         "入出庫区分
STODATE.       "在庫日付
* 削除後件数の算出
DESCRIBE TABLE LTD_YTESTT04 LINES LW_AGO_NUM.

IF LW_BEFOR_NUM <> LW_AGO_NUM.
*- メッセージの出力
MESSAGE E007.
ENDIF.

ENDFORM.                    " FRM_CHECK_ADJAENT
