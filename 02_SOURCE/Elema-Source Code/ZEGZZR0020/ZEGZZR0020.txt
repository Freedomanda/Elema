*&---------------------------------------------------------------------*
*& ISID Co.,Ltd. 2015 All rights.reserved.
*&---------------------------------------------------------------------*
*& プログラム：ZEGZZR0020 ProfitCenterUploader
*& 作成者    ：ISID006
*& 作成日付  ：2015/02/19
*& 機能ID    ：DVZZ002
*&---------------------------------------------------------------------*
*& 更新履歴&
*& No.   更新日付    更新者    更新内容
*& 新規  2015/02/19  ISID006
*&---------------------------------------------------------------------*
REPORT ZEGZZR0020 NO STANDARD PAGE HEADING
LINE-SIZE  65
LINE-COUNT 80
MESSAGE-ID 00.

*&---------------------------------------------------------------------*
*&  内部テーブル定義
*&---------------------------------------------------------------------*
*-構造(TYPES)
TYPES:
BEGIN OF GTT_BDCDATA,                " バッチインプット用
PROGRAM   TYPE BDCDATA-PROGRAM,    " BDC モジュールプール
DYNPRO    TYPE BDCDATA-DYNPRO,     " BDC Dynpro 番号
DYNBEGIN  TYPE BDCDATA-DYNBEGIN,   " BDC Dynpro 開始
FNAM      TYPE BDCDATA-FNAM,       " 項目名
FVAL      TYPE BDCDATA-FVAL,       " BDC 項目値
END OF GTT_BDCDATA,

*******************
BEGIN OF GTT_REC,                    " タブ区切りファイルからのデータを格納
FLAG(01)  TYPE C,                  " 制御コード
KOKRS     TYPE CEPC-KOKRS,         " 管理領域
PRCTR     TYPE CEPC-PRCTR,         " 利益センタ
DATAB(8)  TYPE C,                  " 有効開始日
DATBI(8)  TYPE C,                  " 有効終了日
KTEXT     TYPE CEPCT-KTEXT,        " 名称
LTEXT     TYPE CEPCT-LTEXT,        " テキスト
VERAK     TYPE CEPC-VERAK,         " 責任者
ABTEI     TYPE CEPC-ABTEI,         " 部署
KHINR     TYPE CEPC-KHINR,         " 階層エリア(利益センタエリア)
ANRED     TYPE CEPC-ANRED,         " 敬称
NAME1     TYPE CEPC-NAME1,         " 名称１
NAME2     TYPE CEPC-NAME2,         " 名称２
STRAS     TYPE CEPC-STRAS,         " 都道府県名
ORT01     TYPE CEPC-ORT01,         " 地名
ORT02     TYPE CEPC-ORT02,         " 所在地
LAND1     TYPE CEPC-LAND1,         " 国コード
PSTLZ     TYPE CEPC-PSTLZ,         " 郵便番号
REGIO     TYPE CEPC-REGIO,         " 地域
*   SPRAS     TYPE CEPC-SPRAS,         " 言語選択
SPRAS(5)  TYPE C,                  " 言語選択
TELF1     TYPE CEPC-TELF1,         " 電話番号１
TELFX     TYPE CEPC-TELFX,         " ファックス番号
*    SEGMENT   TYPE CEPC-SEGMENT,       " セグメント
END OF GTT_REC.


DATA:
*-内部テーブル
* バッチインプット用内部テーブル
GDT_BDC    TYPE STANDARD TABLE OF GTT_BDCDATA,
* タブ区切りファイルからのデータを格納する内部テーブル
GDT_REC    TYPE STANDARD TABLE OF GTT_REC,
*-ヘッダ行
GDS_BDC       LIKE LINE OF GDT_BDC,
GDS_REC       LIKE LINE OF GDT_REC.
*&---------------------------------------------------------------------*
*&  項目定義
*&---------------------------------------------------------------------*
DATA:
*-変数
WA_SPLIT         TYPE C,                       " 区切りコード
*-フラグ
FLG_ERR(01)      TYPE C,                       " エラーフラグ
*-カウンタ
CNT_INDEX        TYPE I.                       " 処理件数
*-構造
*-定数
CONSTANTS:
GCF_CHK(01)      TYPE C VALUE 'X',             " チェック
GCF_SPC(01)      TYPE C VALUE ' ',             " スペース
GCF_TYPE(10)     TYPE C VALUE 'ASC',           " タブ区切りFILE
GCF_CTRU(01)     TYPE C VALUE 'U',             " 制御コード(Ｕ=変更)
GCF_CTRN(01)     TYPE C VALUE 'N',             " 制御コード(Ｎ=登録)
GCF_KE51(04)     TYPE C VALUE 'KE51',          " 利益センタ登録
GCF_KE52(04)     TYPE C VALUE 'KE52',          " 利益センタ変更
GCF_PGM(08)      TYPE C VALUE 'SAPLRKPM',      " プログラムID
GCF_PGM2(08)     TYPE C VALUE 'SAPLSPO4',      " プログラムID
GCF_0300(04)     TYPE C VALUE '0300',          " 画面番号(POPUP)
GCF_0200(04)     TYPE C VALUE '0200',          " 画面番号(第一画面)
GCF_0298(04)     TYPE C VALUE '0298',          " 画面番号(メイン画面)
GCF_ENTR(03)     TYPE C VALUE '/00',           " OKコード(ENTER)
GCF_FURT(05)     TYPE C VALUE '=FURT',         " OKコード(続行)
GCF_CC(15)       TYPE C VALUE '=PRCT_SCREEN_CC',  " OKコード(会社)
GCF_AD(15)       TYPE C VALUE '=PRCT_SCREEN_AD',  " OKコード(住所タブ)
GCF_CO(15)       TYPE C VALUE '=PRCT_SCREEN_CO',  " OKコード(通信タブ)
GCF_CH(15)       TYPE C VALUE '=PRCT_SCREEN_CH',  " OKコード(履歴タブ)
GCF_ACTI(12)     TYPE C VALUE '=MD_ACTIVATE',  " OKコード(有効化)

GCF_LA_J(01)     TYPE C VALUE 'J',             " 言語キー(日本語)
GCF_LA_1(01)     TYPE C VALUE '1',             " 言語キー(中国語)
GCF_LA_E(01)     TYPE C VALUE 'E',             " 言語キー(英語)

GCF_TITLE_1      TYPE SYTITLE                  " タイトル(中国語)
VALUE '利#中心数据上#',
GCF_TITLE_E      TYPE SYTITLE                  " タイトル(英語)
VALUE 'Upload the Profit Center records',

GCF_JTXT(36)     TYPE C VALUE 'ファイルの保存場所を選択してください',
GCF_CTXT(20)     TYPE C VALUE '###文件所在的位置',
GCF_ETXT(28)     TYPE C VALUE 'Select the location for file',

GCF_TXT1J(10)    TYPE C VALUE 'ファイル名',    " 選択テキスト
GCF_TXT1C(10)    TYPE C VALUE '文件名',        " 選択テキスト
GCF_TXT1E(10)    TYPE C VALUE 'File Name',     " 選択テキスト
GCF_TXT2J(06)    TYPE C VALUE 'サーバ',        " 選択テキスト
GCF_TXT2C(06)    TYPE C VALUE '服#器',        " 選択テキスト
GCF_TXT2E(06)    TYPE C VALUE 'Server',        " 選択テキスト
GCF_TXT3J(08)    TYPE C VALUE 'ローカル',      " 選択テキスト
GCF_TXT3C(08)    TYPE C VALUE '本地',          " 選択テキスト
GCF_TXT3E(08)    TYPE C VALUE 'Local',         " 選択テキスト

GCF_TXT4J(24)    TYPE C VALUE 'ファイルが存在しません。',
GCF_TXT4C(10)    TYPE C VALUE '文件不存在',
GCF_TXT4E(20)    TYPE C VALUE 'File does not exist.',
GCF_TXT5J(28)    TYPE C VALUE 'FILE OPEN 異常終了    例外：',
GCF_TXT5C(28)    TYPE C VALUE 'FILE OPEN #生##    代#：',
GCF_TXT5E(45)    TYPE C
VALUE 'Error during file open processing. Exception:',
GCF_TXT6J(40)    TYPE C
VALUE 'タブ区切りファイルにデータが存在しません',
GCF_TXT6C(25)    TYPE C VALUE 'TAB#隔文本文件中没有数据',
GCF_TXT6E(18)    TYPE C VALUE 'TAB file is empty.',
GCF_TXT7J(25)    TYPE C VALUE 'UPLOAD 異常終了    例外：',
GCF_TXT7C(25)    TYPE C VALUE 'UPLOAD #生##    代#：',
GCF_TXT7E(42)    TYPE C
VALUE 'Error during upload processing. Exception:',
GCF_TXT8J(25)    TYPE C VALUE 'BDC_OPEN 異常終了　例外：',
GCF_TXT8C(25)    TYPE C VALUE '函数 BDC_OPEN ##  代#：',
GCF_TXT8E(44)    TYPE C
VALUE 'Error during BDC_OPEN processing. Exception:',
GCF_TXT9J(27)    TYPE C VALUE 'BDC_INSERT 異常終了　例外：',
GCF_TXT9C(27)    TYPE C VALUE '函数 BDC_INSERT ##　代#：',
GCF_TXT9E(46)    TYPE C
VALUE 'Error during BDC_INSERT processing. Exception:',
GCF_TXT10J(26)   TYPE C VALUE 'BDC_CLOSE 異常終了　例外：',
GCF_TXT10C(26)   TYPE C VALUE '函数 BDC_CLOSE ##　代#：',
GCF_TXT10E(45)   TYPE C
VALUE 'Error during BDC_CLOSE processing. Exception:',
GCF_TXT11J(32)   TYPE C VALUE 'セッションログを確認してください',
GCF_TXT11C(24)   TYPE C VALUE '###批#入会##理##',
GCF_TXT11E(26)   TYPE C VALUE 'Check the logs of session.',

* 出力用共通メッセージ
GCF_CNTTXT_J(8)  TYPE C VALUE '処理件数',
GCF_CNTTXT_1(8)  TYPE C VALUE '#理件数',
GCF_CNTTXT_E(23) TYPE C VALUE 'The number of processes'.


*&---------------------------------------------------------------------*
*&  項目定義
*&---------------------------------------------------------------------*
DATA:
*-変数
WK_TCODE         TYPE SY-TCODE.          " トランザクションコード

*----------------------------------------------------------------------*
*&  入力パラメータ
*&---------------------------------------------------------------------*
* ファイル名
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(20) NAME_F FOR FIELD P_FILENM.
PARAMETERS: P_FILENM TYPE RLGRAP-FILENAME OBLIGATORY.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN SKIP 1.

* ファイルの保存場所を選択
SELECTION-SCREEN BEGIN OF BLOCK SAVE WITH FRAME TITLE TEXT_1.

* サーバ
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(10) NAME_S FOR FIELD P_SERVER.
SELECTION-SCREEN POSITION 20.
PARAMETERS:P_SERVER RADIOBUTTON GROUP SAVE.
SELECTION-SCREEN END OF LINE.

* ローカル
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(10) NAME_L FOR FIELD P_LOCAL.
SELECTION-SCREEN POSITION 20.
PARAMETERS: P_LOCAL RADIOBUTTON GROUP SAVE DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK SAVE.

*&---------------------------------------------------------------------*
*&  初期処理
*&---------------------------------------------------------------------*
INITIALIZATION.

* プログラム表題の設定
PERFORM FRM_SET_TITLE.

* 選択テキストの設定
PERFORM FRM_SET_TEXT.

*&---------------------------------------------------------------------*
*&  AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILENM.  " ファイル名の取得

PERFORM FRM_FILENAME_GET CHANGING P_FILENM.

*&---------------------------------------------------------------------*
*&  AT SELECTION-SCREEN
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN.       " ファイルの存在をチェック
PERFORM FRM_PATGDS_CHK USING P_FILENM.

*&---------------------------------------------------------------------*
*&  メイン処理
*&---------------------------------------------------------------------*
START-OF-SELECTION.

PERFORM: FRM_INIT_ALL,                      " 作業領域初期化
FRM_UPLOAD_DATA,                   " ファイルアップロード
FRM_CHECK_DATA,                    " 件数チェック
FRM_BDC_OPEN.                      " BDCセッションを開く

* ファイルのループ処理（対象は、N:新規 U:更新フラグを持つもののみ)
LOOP AT GDT_REC INTO GDS_REC WHERE FLAG = GCF_CTRN   " N
OR    FLAG = GCF_CTRU . " U

CLEAR:GDT_BDC,FLG_ERR.
PERFORM: FRM_SET_BDCDATA,        " BDCデータのセット
FRM_BDC_INSERT.         " データをBDCセッションに挿入

ENDLOOP.

PERFORM FRM_BDC_CLOSE.                     " セッションを閉じる
PERFORM FRM_CALL_RSBDCSUB.                 " セッションの自動処理


*&---------------------------------------------------------------------*
*&  終了処理
*&---------------------------------------------------------------------*
END-OF-SELECTION.

* PERFORM FRM_INITIAL_MESSAGE.               " 処理件数が０件のケース

* プログラム表題の設定
PERFORM FRM_SET_TITLE.

* プログラム処理件数表示
PERFORM FRM_WRITE_RESULT.

*&---------------------------------------------------------------------*
*&      Form  FRM_PATGDS_CHK
*&---------------------------------------------------------------------*
*       ファイルの存在をチェック
*----------------------------------------------------------------------*
*      -->P_IPATH   入力ファイル名
*----------------------------------------------------------------------*
FORM FRM_PATGDS_CHK USING    P_IPATH.
CHECK P_LOCAL = GCF_CHK.        " ローカルファイルのときのみ実行する
DATA:LDF_FILE       TYPE STRING,         " ファイル名
LDF_RESULT     TYPE C,              " 結果
LDF_MSGV1(50)  TYPE C.              " メッセージ変数１

LDF_FILE = P_IPATH.
CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_EXIST
EXPORTING
FILE                 = LDF_FILE
RECEIVING
RESULT               = LDF_RESULT
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
WRONG_PARAMETER      = 3
NOT_SUPPORTED_BY_GUI = 4
OTHERS               = 5.
CASE SY-SUBRC.
WHEN 0.
* ファイルが存在する＝X／存在しない＝スペース
IF LDF_RESULT = GCF_SPC.
*       メッセージ変数のセット
CASE SY-LANGU.
WHEN GCF_LA_J.                "日本語
LDF_MSGV1 = GCF_TXT4J.      "'ファイルが存在しません。'
WHEN GCF_LA_1.                "中国語
LDF_MSGV1 = GCF_TXT4C.      "'文件不存在'
WHEN GCF_LA_E.                "英語
LDF_MSGV1 = GCF_TXT4E.      "'File does not exist.'
ENDCASE.
MESSAGE E398 WITH LDF_MSGV1 SPACE SPACE SPACE.
ENDIF.
WHEN OTHERS.
ENDCASE.
ENDFORM.                    " FRM_PATGDS_CHK

*&---------------------------------------------------------------------*
*&      Form  FRM_FILENAME_GET
*&---------------------------------------------------------------------*
*       ファイル名の取得
*----------------------------------------------------------------------*
*      <--P_IOPATH  ファイル名
*----------------------------------------------------------------------*
FORM FRM_FILENAME_GET  CHANGING P_IOPATH.

DATA:LDF_FILE  TYPE FILETABLE,       " ファイル名一覧格納
LDF_HFILE LIKE LINE OF LDF_FILE," ヘッダ
LDF_RC    TYPE I,               " 結果
LDF_TITLE TYPE STRING.          " WINDOW TITLE

* WINDOW_TITLEの設定
CASE SY-LANGU.
WHEN GCF_LA_J.                     " 日本語
LDF_TITLE = GCF_TXT1J.           "'ファイル名'
WHEN GCF_LA_1.                     " 中国語
LDF_TITLE = GCF_TXT1C.           "'文件名'
WHEN GCF_LA_E.                     " 英語
LDF_TITLE = GCF_TXT1E.           "'File Name'
ENDCASE.

CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
EXPORTING
WINDOW_TITLE            = LDF_TITLE
CHANGING
FILE_TABLE              = LDF_FILE
RC                      = LDF_RC
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 1
CNTL_ERROR              = 2
ERROR_NO_GUI            = 3
NOT_SUPPORTED_BY_GUI    = 4
OTHERS                  = 5.
CASE SY-SUBRC.
WHEN 0.
IF LDF_RC < 0.
ELSE.
READ TABLE LDF_FILE INTO LDF_HFILE INDEX 1.
P_IOPATH = LDF_HFILE-FILENAME.
ENDIF.
WHEN OTHERS.
ENDCASE.

ENDFORM.                    " FRM_FILENAME_GET

*&---------------------------------------------------------------------*
*&      Form  FRM_INIT_ALL
*&---------------------------------------------------------------------*
*       作業領域初期化
*----------------------------------------------------------------------*
FORM FRM_INIT_ALL .

CLEAR: GDT_BDC,
GDS_BDC,
GDT_REC,
GDS_REC,
FLG_ERR,
CNT_INDEX.

ENDFORM.                    " FRM_INIT_ALL
*&---------------------------------------------------------------------*
*&      Form  FRM_UPLOAD_DATA
*&---------------------------------------------------------------------*
*       ファイルのアップロード
*----------------------------------------------------------------------*
FORM FRM_UPLOAD_DATA.

* ファイルの保存場所によってアップロード方法を変える
IF P_SERVER = GCF_CHK.

PERFORM: FRM_UPLOAD_SERVER_DATA.          " サーバからデータをUL

ELSEIF P_LOCAL = GCF_CHK.

PERFORM: FRM_UPLOAD_LOCAL_DATA.           " ローカルからデータをUL

ENDIF.

ENDFORM.                    " FRM_UPLOAD_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_UPLOAD_SERVER_DATA
*&---------------------------------------------------------------------*
*       入力ファイルデータをアップロードする(サーバ)
*----------------------------------------------------------------------*
FORM FRM_UPLOAD_SERVER_DATA .
DATA:LDF_CNT  TYPE I,                  " データ件数
LDF_DATA(120) TYPE C,
LDF_MSGV1(50) TYPE C.             " メッセージ変数

* 区切りコードにTABを設定
WA_SPLIT = CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.

* ファイルオープン(UNIX FILE)
OPEN DATASET P_FILENM FOR INPUT IN TEXT MODE ENCODING DEFAULT.  " ENT
CASE SY-SUBRC.
WHEN 0.
WHEN 8.

*     メッセージ変数のセット
CASE SY-LANGU.
WHEN GCF_LA_J.                                  " 日本語
LDF_MSGV1 = GCF_TXT5J.                        " 'FILE OPEN 異常終了    例外：'
WHEN GCF_LA_1.                                  " 中国語
LDF_MSGV1 = GCF_TXT5C.                        " 'FILE OPEN #生##    代#：'
WHEN GCF_LA_E.                                  " 英語
LDF_MSGV1 = GCF_TXT5E.                        " 'Error during file open processing. Exception:'
ENDCASE.
MESSAGE E398 WITH LDF_MSGV1 SY-SUBRC SPACE SPACE.
ENDCASE.

* 入力ファイル読込
DO.
CLEAR: GDS_REC,LDF_DATA.
READ DATASET P_FILENM INTO LDF_DATA.
IF SY-SUBRC <> 0.
EXIT.
ENDIF.
SPLIT LDF_DATA AT WA_SPLIT INTO

GDS_REC-FLAG
GDS_REC-KOKRS
GDS_REC-PRCTR
GDS_REC-DATAB
GDS_REC-DATBI
GDS_REC-KTEXT
GDS_REC-LTEXT
GDS_REC-VERAK
GDS_REC-ABTEI
GDS_REC-KHINR
GDS_REC-ANRED
GDS_REC-NAME1
GDS_REC-NAME2
GDS_REC-STRAS
GDS_REC-ORT01
GDS_REC-ORT02
GDS_REC-LAND1
GDS_REC-PSTLZ
GDS_REC-REGIO
*          GDS_REC-SPRAS
GDS_REC-TELF1
GDS_REC-TELFX.
*          GDS_REC-SEGMENT.

APPEND GDS_REC TO GDT_REC.
ENDDO.
* データ件数チェック
DESCRIBE TABLE GDT_REC LINES LDF_CNT.
IF LDF_CNT = 0  .

*   メッセージ変数のセット
CASE SY-LANGU.
WHEN GCF_LA_J.                                     " 日本語
LDF_MSGV1 = GCF_TXT6J.                           " 'タブ区切りファイルにデータが存在しません'
WHEN GCF_LA_1.                                     " 中国語
LDF_MSGV1 = GCF_TXT6C.                           " 'TAB#隔文本文件中没有数据'
WHEN GCF_LA_E.                                     " 英語
LDF_MSGV1 = GCF_TXT6E.                           " 'TAB file is empty.'
ENDCASE.
MESSAGE E398 WITH LDF_MSGV1 SPACE SPACE SPACE.
ENDIF.

*   ファイルクローズ(UNIX FILE)
CLOSE DATASET P_FILENM.
ENDFORM.                    " FRM_UPLOAD_SERVER_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_UPLOAD_LOCAL_DATA
*&---------------------------------------------------------------------*
*       入力ファイルデータをアップロードする(ローカル)
*----------------------------------------------------------------------*
FORM FRM_UPLOAD_LOCAL_DATA.
DATA:LDF_LENGTH TYPE I.              " ファイル長
DATA:LDF_FNAME TYPE STRING,          " ファイル名
LDF_MSGV1(50) TYPE C.           " メッセージ変数１

LDF_FNAME = P_FILENM.

CALL FUNCTION 'GUI_UPLOAD'
EXPORTING
FILENAME                = LDF_FNAME
FILETYPE                = GCF_TYPE
HAS_FIELD_SEPARATOR     = GCF_CHK
IMPORTING
FILELENGTH              = LDF_LENGTH
TABLES
DATA_TAB                = GDT_REC
EXCEPTIONS
FILE_OPEN_ERROR         = 1
FILE_READ_ERROR         = 2
NO_BATCH                = 3
GUI_REFUSE_FILETRANSFER = 4
INVALID_TYPE            = 5
NO_AUTHORITY            = 6
UNKNOWN_ERROR           = 7
BAD_DATA_FORMAT         = 8
HEADER_NOT_ALLOWED      = 9
SEPARATOR_NOT_ALLOWED   = 10
HEADER_TOO_LONG         = 11
UNKNOWN_DP_ERROR        = 12
ACCESS_DENIED           = 13
DP_OUT_OF_MEMORY        = 14
DISK_FULL               = 15
DP_TIMEOUT              = 16
OTHERS                  = 17.

CASE SY-SUBRC.
WHEN 0.
IF LDF_LENGTH <= 0.
*       メッセージ変数のセット
CASE SY-LANGU.
WHEN GCF_LA_J.                     " 日本語
LDF_MSGV1 = GCF_TXT6J.           "'タブ区切りファイルにデータが存在しません'
WHEN GCF_LA_1.                     " 中国語
LDF_MSGV1 = GCF_TXT6C.           "'TAB#隔文本文件中没有数据'
WHEN GCF_LA_E.                     " 英語
LDF_MSGV1 = GCF_TXT6E.           "'TAB file is empty.'
ENDCASE.
MESSAGE E398 WITH LDF_MSGV1 SPACE SPACE SPACE.
ENDIF.
WHEN OTHERS.
*     メッセージ変数のセット
CASE SY-LANGU.
WHEN GCF_LA_J.                       " 日本語
LDF_MSGV1 = GCF_TXT7J.             " 'FILE OPEN 異常終了    例外：'
WHEN GCF_LA_1.                       " 中国語
LDF_MSGV1 = GCF_TXT7C.             " 'FILE OPEN #生##    代#：'
WHEN GCF_LA_E.                       " 英語
LDF_MSGV1 = GCF_TXT7E.             " 'Error during file open processing. Exception:'
ENDCASE.
MESSAGE E398 WITH LDF_MSGV1 SY-SUBRC SPACE SPACE.
ENDCASE.
ENDFORM.                    " FRM_UPLOAD_LOCAL_DATA

*&---------------------------------------------------------------------*
*&      Form  FRM_SET_BDCDATA
*&---------------------------------------------------------------------*
*       BDCデータのセット
*----------------------------------------------------------------------*
FORM FRM_SET_BDCDATA.

* 処理件数のカウント
CNT_INDEX = CNT_INDEX + 1.

* 管理領域のセット
SET PARAMETER ID 'CAC' FIELD GDS_REC-KOKRS.

* 制御コードによって処理を分ける
IF     GDS_REC-FLAG = GCF_CTRN.  " 制御コードがN(新規登録)のとき
WK_TCODE = GCF_KE51.           " T-CD設定(登録)
ELSEIF GDS_REC-FLAG = GCF_CTRU.  " 制御コードがU(更新)のとき
WK_TCODE = GCF_KE52.           " T-CD設定(変更)
ENDIF.

* 登録用BDCデータセット
PERFORM: FRM_SET_KE51.

ENDFORM.                    " FRM_SET_BDCDATA
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_KE51
*&---------------------------------------------------------------------*
*       登録用BDCデータセット
*----------------------------------------------------------------------*
FORM FRM_SET_KE51 .

* 一回目の処理時のみ管理領域をセットする。
IF CNT_INDEX = 1.
PERFORM:FRM_SET_0300.                      " 初期画面
ENDIF.

PERFORM: FRM_SET_0200,                      " 第一画面
FRM_SET_0298BD,                    " 基本データ
FRM_SET_0298CC,                    " 会社コード
FRM_SET_0298AD,                    " 住所
FRM_SET_0298CO,                    " 通信
FRM_SET_0298CH.                    " 履歴

ENDFORM.                    " FRM_SET_KE51
*&---------------------------------------------------------------------*
*&      Form  FRM_BDCDATA_SET
*&---------------------------------------------------------------------*
*       BDCテーブルにデータをセット
*----------------------------------------------------------------------*
*      -->P_SPACE_CHECK
*      -->P_IDYNBGN  フラグ
*      -->P_INAME    プログラム名　or　項目名
*      -->P_IVALUE   DYNPRO番号　or　項目値
*----------------------------------------------------------------------*
FORM FRM_BDCDATA_SET USING    VALUE(P_IDYNBGN)
VALUE(P_INAME)
VALUE(P_IVALUE).
CLEAR GDS_BDC.
IF P_IDYNBGN = GCF_CHK.
GDS_BDC-PROGRAM  = P_INAME.          " プログラム番号
GDS_BDC-DYNPRO   = P_IVALUE.         " DYNPRO番号
GDS_BDC-DYNBEGIN = GCF_CHK.          " DYNPRO開始区分
ELSE.
GDS_BDC-FNAM = P_INAME.              " 項目名
GDS_BDC-FVAL = P_IVALUE.             " 項目値
ENDIF.
APPEND GDS_BDC TO GDT_BDC.
ENDFORM.                    " FRM_BDCDATA_SET

*&---------------------------------------------------------------------*
*&      Form  FRM_BDC_OPEN
*&---------------------------------------------------------------------*
*       バッチインプットセッションのオープン処理
*----------------------------------------------------------------------*
FORM FRM_BDC_OPEN.

DATA: LDF_MSGV1(50) TYPE C.           " メッセージ変数１
* セッションを開く
CALL FUNCTION 'BDC_OPEN_GROUP'
EXPORTING
CLIENT              = SY-MANDT  " クライアント
GROUP               = SY-UNAME  " セッション名称
KEEP                = GCF_CHK   " 保存
USER                = SY-UNAME  " 実行ユーザ名
EXCEPTIONS
CLIENT_INVALID      = 1
DESTINATION_INVALID = 2
GROUP_INVALID       = 3
GROUP_IS_LOCKED     = 4
HOLDDATE_INVALID    = 5
INTERNAL_ERROR      = 6
QUEUE_ERROR         = 7
RUNNING             = 8
SYSTEM_LOCK_ERROR   = 9
USER_INVALID        = 10
OTHERS              = 11.
CASE SY-SUBRC.
WHEN 0.
WHEN OTHERS.
*     メッセージ変数のセット
CASE SY-LANGU.
WHEN GCF_LA_J.                     " 日本語
LDF_MSGV1 = GCF_TXT8J.           "'BDC_OPEN 異常終了　例外：'
WHEN GCF_LA_1.                     " 中国語
LDF_MSGV1 = GCF_TXT8C.           "'函数 BDC_OPEN ##  代#：'
WHEN GCF_LA_E.                     " 英語
LDF_MSGV1 = GCF_TXT8E.           "'Error during BDC_OPEN processing. Exception:'
ENDCASE.
MESSAGE E398 WITH LDF_MSGV1 SY-SUBRC SPACE SPACE.
ENDCASE.
ENDFORM.                    " FRM_BDC_OPEN

*&---------------------------------------------------------------------*
*&      Form  FRM_BDC_INSERT
*&---------------------------------------------------------------------*
*       バッチインプットセッションへのトランザクション用データ挿入処理
*----------------------------------------------------------------------*
FORM FRM_BDC_INSERT.

DATA: LDF_MSGV1(50) TYPE C.          "メッセージ変数１
CHECK FLG_ERR = SPACE.
* BDCテーブルのデータをセッションにセット
CALL FUNCTION 'BDC_INSERT'
EXPORTING
TCODE            = WK_TCODE     " トランザクションコード
TABLES
DYNPROTAB        = GDT_BDC     " BDCテーブル
EXCEPTIONS
INTERNAL_ERROR   = 1
NOT_OPEN         = 2
QUEUE_ERROR      = 3
TCODE_INVALID    = 4
PRINTING_INVALID = 5
POSTING_INVALID  = 6
OTHERS           = 7.
CASE SY-SUBRC.
WHEN 0.
WHEN OTHERS.
*     メッセージ変数のセット
CASE SY-LANGU.
WHEN GCF_LA_J.                     " 日本語
LDF_MSGV1 = GCF_TXT9J.           "'BDC_INSERT 異常終了　例外：'
WHEN GCF_LA_1.                     " 中国語
LDF_MSGV1 = GCF_TXT9C.           "'函数 BDC_INSERT ##　代#：'
WHEN GCF_LA_E.                     " 英語
LDF_MSGV1 = GCF_TXT9E.           "'Error during BDC_INSERT processing. Exception:'
ENDCASE.
MESSAGE E398 WITH LDF_MSGV1 SY-SUBRC SPACE SPACE.
ENDCASE.
ENDFORM.                    " FRM_BDC_INSERT

*&---------------------------------------------------------------------*
*&      Form  FRM_BDC_CLOSE
*&---------------------------------------------------------------------*
*       バッチインプットセッションのクローズ処理
*----------------------------------------------------------------------*
FORM FRM_BDC_CLOSE.

DATA: LDF_MSGV1(50) TYPE C.        " メッセージ変数１
* セッションを閉じる
CALL FUNCTION 'BDC_CLOSE_GROUP'
EXCEPTIONS
NOT_OPEN    = 1
QUEUE_ERROR = 2
OTHERS      = 3.
CASE SY-SUBRC.
WHEN 0.
WHEN OTHERS.
*     メッセージ変数のセット
CASE SY-LANGU.
WHEN GCF_LA_J.                     " 日本語
LDF_MSGV1 = GCF_TXT10J.          "'BDC_CLOSE 異常終了　例外：'
WHEN GCF_LA_1.                     " 中国語
LDF_MSGV1 = GCF_TXT10C.          "'函数 BDC_CLOSE ##　代#：'
WHEN GCF_LA_E.                     " 英語
LDF_MSGV1 = GCF_TXT10E.          "'Error during BDC_CLOSE processing. Exception:'
ENDCASE.
MESSAGE E398 WITH LDF_MSGV1 SY-SUBRC SPACE SPACE.
ENDCASE.
ENDFORM.                    " FRM_BDC_CLOSE

*&---------------------------------------------------------------------*
*&      Form  FRM_CALL_RSBDCSUB
*&---------------------------------------------------------------------*
*       セッションの自動処理
*----------------------------------------------------------------------*
FORM FRM_CALL_RSBDCSUB.

* 処理件数のカウント
* CHECK CNT_INDEX > 0 .

DATA: LDF_MSGV1(50) TYPE C.        " メッセージ変数１
* セッションを処理
SUBMIT RSBDCSUB                 " バッチインプット: 全セッション処理
WITH MAPPE    = SY-UNAME           " セッション
WITH Z_VERARB = GCF_CHK            " 新規
WITH FEHLER   = ' '                " エラー
AND RETURN.

* メッセージ変数のセット
CASE SY-LANGU.
WHEN GCF_LA_J.                     " 日本語
LDF_MSGV1 = GCF_TXT11J.          "'セッションログを確認してください'
WHEN GCF_LA_1.                     " 中国語
LDF_MSGV1 = GCF_TXT11C.          "'###批#入会##理##'
WHEN GCF_LA_E.                     " 英語
LDF_MSGV1 = GCF_TXT11E.          "'Check the logs of session.'
ENDCASE.
MESSAGE I398 WITH SY-UNAME LDF_MSGV1 SPACE SPACE.
ENDFORM.                    " FRM_CALL_RSBDCSUB

*&---------------------------------------------------------------------*
*&      Form  FRM_SET_TITLE
*&---------------------------------------------------------------------*
*       プログラム表題の設定
*----------------------------------------------------------------------*
FORM FRM_SET_TITLE .

CASE SY-LANGU.
WHEN GCF_LA_J.                     " 日本語
*    初期値のまま
WHEN GCF_LA_1.                     " 中国語
SY-TITLE = GCF_TITLE_1.
WHEN GCF_LA_E.                     " 英語
SY-TITLE = GCF_TITLE_E.
ENDCASE.

ENDFORM.                    " FRM_SET_TITLE
*&---------------------------------------------------------------------*
*&      Form  FRM_ALPHA_INSERT
*&---------------------------------------------------------------------*
*       アルファ変換
*----------------------------------------------------------------------*
*      -->P_IDATA   変換前文字列
*      <--P_ODATA   変換後文字列
*----------------------------------------------------------------------*
FORM FRM_ALPHA_INSERT  USING    PRF_IDATA TYPE CEPC-PRCTR
CHANGING PRF_ODATA TYPE CEPC-PRCTR.
CLEAR PRF_ODATA.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT  = PRF_IDATA          " 変換前文字列
IMPORTING
OUTPUT = PRF_ODATA.         " 変換後文字列

ENDFORM.                    " FRM_ALPHA_INSERT
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_0300
*&---------------------------------------------------------------------*
*       初期画面にデータセット
*----------------------------------------------------------------------*
FORM FRM_SET_0300 .

* SAPメモリ上に管理領域をセット(CACは管理領域のID)
* SET PARAMETER ID 'CAC' FIELD GDS_REC-KOKRS.

* 初期画面のセット設定
PERFORM
FRM_BDCDATA_SET USING:
GCF_CHK  GCF_PGM2       GCF_0300,      " 画面設定
GCF_SPC 'BDC_OKCODE'    GCF_FURT,       " OKコード(ENTER)
GCF_SPC 'SVALD-VALUE(01)' GDS_REC-KOKRS. " 管理領域

ENDFORM.                    " FRM_SET_0300

*&---------------------------------------------------------------------*
*&      Form  FRM_SET_0200
*&---------------------------------------------------------------------*
*       第一画面にデータセット
*----------------------------------------------------------------------*
FORM FRM_SET_0200 .

* 利益センタの設定
PERFORM
FRM_BDCDATA_SET USING:
GCF_CHK  GCF_PGM       GCF_0200,      " 画面設定
GCF_SPC 'BDC_OKCODE'   GCF_ENTR,      " OKコード(ENTER)
GCF_SPC 'PRCT_V-PRCTR' GDS_REC-PRCTR.   " 利益センタ
ENDFORM.                    " FRM_SET_0200

*&---------------------------------------------------------------------*
*&      Form  FRM_SET_0298BD
*&---------------------------------------------------------------------*
*       基本データ画面にデータセット
*----------------------------------------------------------------------*
FORM FRM_SET_0298BD .
DATA:L_SEGMENT TYPE CEPC-SEGMENT,
L_PRCTR   TYPE CEPC-PRCTR.

PERFORM
FRM_BDCDATA_SET USING:
GCF_CHK GCF_PGM        GCF_0298,      " 画面設定
GCF_SPC 'BDC_OKCODE'   GCF_CC,        " OKコード(会社タブ)
GCF_SPC 'PRCT_V-KTEXT' GDS_REC-KTEXT,   " 名称
GCF_SPC 'PRCT_V-LTEXT' GDS_REC-LTEXT,   " テキスト
GCF_SPC 'PRCT_V-VERAK' GDS_REC-VERAK,   " 責任者
GCF_SPC 'PRCT_V-ABTEI' GDS_REC-ABTEI.   " 部署

IF GDS_REC-FLAG = GCF_CTRN.       " 制御コードがN(登録)のときのみ設定
PERFORM
FRM_BDCDATA_SET USING:
GCF_SPC 'PRCT_V-DATAB' GDS_REC-DATAB,      " 有効開始日
GCF_SPC 'PRCT_V-DATBI' GDS_REC-DATBI,      " 有効終了日
GCF_SPC 'PRCT_V-KHINR' GDS_REC-KHINR.      " 利益センタグループ
*       GCF_SPC 'PRCT_V-SEGMENT' GDS_REC-SEGMENT.  " セグメント
ELSE.

* U(更新)の時、セグメントがマスタ上初期値の場合、セグメントを設定する。
* 項目のアルファ変換
*    PERFORM:
*      FRM_ALPHA_INSERT USING    GDS_REC-PRCTR   " 利益センタコードの変換
*                       CHANGING L_PRCTR.
*
*    SELECT SINGLE  SEGMENT
*      INTO L_SEGMENT
*      FROM CEPC
*      WHERE PRCTR = L_PRCTR AND        " 利益センタ
*            DATBI = GDS_REC-DATBI AND  " 有効終了日
*            KOKRS = GDS_REC-KOKRS.     " 管理領域
*    IF L_SEGMENT IS INITIAL.
*      PERFORM FRM_BDCDATA_SET USING:
*           GCF_SPC 'PRCT_V-SEGMENT' GDS_REC-SEGMENT. " セグメント
*    ENDIF.

*   セグメントが入力済みの場合
*    IF GDS_REC-SEGMENT IS NOT INITIAL.
*      PERFORM FRM_BDCDATA_SET USING:
*           GCF_SPC 'PRCT_V-SEGMENT' GDS_REC-SEGMENT. " セグメント
*    ENDIF.
ENDIF.
ENDFORM.                    " FRM_SET_0298BD

*&---------------------------------------------------------------------*
*&      Form  FRM_SET_0298CC
*&---------------------------------------------------------------------*
*       会社コード画面にデータセット
*----------------------------------------------------------------------*
FORM FRM_SET_0298CC .
PERFORM
FRM_BDCDATA_SET USING:
GCF_CHK GCF_PGM      GCF_0298,        " 画面設定
GCF_SPC 'BDC_OKCODE' GCF_AD.          " OKコード(住所タブ)
ENDFORM.                    " FRM_SET_0298CC

*&---------------------------------------------------------------------*
*&      Form  FRM_SET_0298AD
*&---------------------------------------------------------------------*
*       住所画面にデータセット
*----------------------------------------------------------------------*
FORM FRM_SET_0298AD .
PERFORM
FRM_BDCDATA_SET USING:
GCF_CHK GCF_PGM        GCF_0298,      " 画面設定
GCF_SPC 'BDC_OKCODE'   GCF_CO,        " OKコード(通信タブ)
GCF_SPC 'PRCT_V-ANRED' GDS_REC-ANRED,   " 敬称
GCF_SPC 'PRCT_V-NAME1' GDS_REC-NAME1,   " 名称１
GCF_SPC 'PRCT_V-NAME2' GDS_REC-NAME2,   " 名称２
GCF_SPC 'PRCT_V-STRAS' GDS_REC-STRAS,   " 都道府県名(地名)
GCF_SPC 'PRCT_V-ORT01' GDS_REC-ORT01,   " 地名(市区町村名)
GCF_SPC 'PRCT_V-ORT02' GDS_REC-ORT02,   " 所在地(地区)
GCF_SPC 'PRCT_V-LAND1' GDS_REC-LAND1,   " 国コード
GCF_SPC 'PRCT_V-PSTLZ' GDS_REC-PSTLZ.   " 郵便番号
ENDFORM.                    " FRM_SET_0298AD

*&---------------------------------------------------------------------*
*&      Form  FRM_SET_0298CO
*&---------------------------------------------------------------------*
*       通信画面にデータセット
*----------------------------------------------------------------------*
FORM FRM_SET_0298CO .

DATA LDF_SPRAS TYPE CEPC-SPRAS.

* 言語キーの内部コンバージョン
PERFORM FRM_CONVERT_SPRAS USING    GDS_REC-SPRAS
CHANGING LDF_SPRAS.

PERFORM
FRM_BDCDATA_SET USING:
GCF_CHK GCF_PGM        GCF_0298,      " 画面設定
GCF_SPC 'BDC_OKCODE'   GCF_CH,        " OKコード(有効化)
*     GCF_SPC 'PRCT_V-SPRAS' GDS_REC-SPRAS, " 言語キー
GCF_SPC 'PRCT_V-SPRAS' LDF_SPRAS,     " 言語キー
GCF_SPC 'PRCT_V-TELF1' GDS_REC-TELF1, " 電話番号
GCF_SPC 'PRCT_V-TELFX' GDS_REC-TELFX. " FAX番号
ENDFORM.                    " FRM_SET_0298CO

*&---------------------------------------------------------------------*
*&      Form  FRM_SET_0298CH
*&---------------------------------------------------------------------*
*       履歴画面にデータセット
*----------------------------------------------------------------------*
FORM FRM_SET_0298CH .
PERFORM
FRM_BDCDATA_SET USING:
GCF_CHK GCF_PGM      GCF_0298,        " 画面設定
GCF_SPC 'BDC_OKCODE' GCF_ACTI.        " OKコード(有効化)
ENDFORM.                    " FRM_SET_0298CH

*&---------------------------------------------------------------------*
*&      Form  FRM_SET_TEXT
*&---------------------------------------------------------------------*
*       選択テキストの設定
*----------------------------------------------------------------------*
FORM FRM_SET_TEXT .

CASE SY-LANGU.

WHEN GCF_LA_J.                     " 日本語
TEXT_1 = GCF_JTXT.               "'ファイルの保存場所を選択してください'
NAME_F = GCF_TXT1J.              "'ファイル名'
NAME_S = GCF_TXT2J.              "'サーバ'
NAME_L = GCF_TXT3J.              "'ローカル'

WHEN GCF_LA_1.                     " 中国語
TEXT_1 = GCF_CTXT.               "'###文件所在的位置'
NAME_F = GCF_TXT1C.              "'文件名'
NAME_S = GCF_TXT2C.              "'服#器'
NAME_L = GCF_TXT3C.              "'本地'

WHEN GCF_LA_E.                     " 英語
TEXT_1 = GCF_ETXT.               "'Select the location for file'
NAME_F = GCF_TXT1E.              "'File Name'
NAME_S = GCF_TXT2E.              "'Server'
NAME_L = GCF_TXT3E.              "'Local'
ENDCASE.

ENDFORM.                    " FRM_SET_TEXT
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_RESULT
*&---------------------------------------------------------------------*
*       処理結果表示
*----------------------------------------------------------------------*
FORM FRM_WRITE_RESULT .

DATA LDF_CNTTXT(23) TYPE C.

DATA: LDF_LINE01(50) TYPE C.
DATA: LDF_LINE02(50) TYPE C.
DATA: LDF_INDEX(5)   TYPE C.

**--処理件数出力
CASE SY-LANGU.
WHEN GCF_LA_J.        " 日本語
LDF_CNTTXT = GCF_CNTTXT_J.
WHEN GCF_LA_1.        " 中国語
LDF_CNTTXT = GCF_CNTTXT_1.
WHEN GCF_LA_E.        " 英語
LDF_CNTTXT = GCF_CNTTXT_E.
ENDCASE.

LDF_INDEX = CNT_INDEX.

CONCATENATE '**************<' SY-TITLE '>**************' INTO LDF_LINE01 SEPARATED BY SPACE.
CONCATENATE '*   ' LDF_CNTTXT '      ='  LDF_INDEX       INTO LDF_LINE02 SEPARATED BY SPACE.

WRITE:
/ LDF_LINE01,
/ LDF_LINE02,
/ '**********************************************************'.

ENDFORM.                    " FRM_WRITE_RESULT
*&---------------------------------------------------------------------*
*&      Form  FRM_CONVERT_SPRAS
*&---------------------------------------------------------------------*
*       言語キーの内部コンバージョン
*----------------------------------------------------------------------*
FORM FRM_CONVERT_SPRAS  USING    PRF_IN_SPRAS TYPE C
CHANGING PRF_OT_SPRAS TYPE CEPC-SPRAS.

* 入力があるときのみ実施する。
CHECK PRF_IN_SPRAS IS NOT INITIAL.

* 言語キーの内部コンバージョン
CALL FUNCTION 'CONVERSION_EXIT_ISOLA_INPUT'
EXPORTING
INPUT            = PRF_IN_SPRAS
IMPORTING
OUTPUT           = PRF_OT_SPRAS
EXCEPTIONS
UNKNOWN_LANGUAGE = 1
OTHERS           = 2.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.


ENDFORM.                    " FRM_CONVERT_SPRAS
*&---------------------------------------------------------------------*
*&      Form  FRM_INITIAL_MESSAGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM FRM_INITIAL_MESSAGE .
DATA LDF_MSGV1(50) TYPE C.             " メッセージ変数

* 処理件数のカウント
CHECK CNT_INDEX = 0 .
*   メッセージ変数のセット
CASE SY-LANGU.
WHEN GCF_LA_J.                                     " 日本語
LDF_MSGV1 = GCF_TXT6J.                           " 'タブ区切りファイルにデータが存在しません'
WHEN GCF_LA_1.                                     " 中国語
LDF_MSGV1 = GCF_TXT6C.                           " 'TAB#隔文本文件中没有数据'
WHEN GCF_LA_E.                                     " 英語
LDF_MSGV1 = GCF_TXT6E.                           " 'TAB file is empty.'
ENDCASE.
MESSAGE E398 WITH LDF_MSGV1 SPACE SPACE SPACE.

ENDFORM.                    " FRM_INITIAL_MESSAGE
******************************************************************************
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FRM_CHECK_DATA .

DATA:LDF_MSGV1(50) TYPE C.           " メッセージ変数１

* ファイルのループ処理（対象は、N:新規 U:更新フラグを持つもののみ)
LOOP AT GDT_REC INTO GDS_REC WHERE FLAG = GCF_CTRN   " N
OR    FLAG = GCF_CTRU . " U
EXIT.

ENDLOOP.

* 処理件数のカウント
CHECK SY-SUBRC <> 0.

*   メッセージ変数のセット
CASE SY-LANGU.
WHEN GCF_LA_J.                                     " 日本語
LDF_MSGV1 = GCF_TXT6J.                           " 'タブ区切りファイルにデータが存在しません'
WHEN GCF_LA_1.                                     " 中国語
LDF_MSGV1 = GCF_TXT6C.                           " 'TAB#隔文本文件中没有数据'
WHEN GCF_LA_E.                                     " 英語
LDF_MSGV1 = GCF_TXT6E.                           " 'TAB file is empty.'
ENDCASE.
MESSAGE E398 WITH LDF_MSGV1 SPACE SPACE SPACE.

ENDFORM.                    " FRM_CHECK_DATA
