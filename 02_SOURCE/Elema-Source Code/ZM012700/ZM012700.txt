REPORT ZM012700 MESSAGE-ID Z1.
*=======================================================================
*
*  【プログラム名】品目関連マスタ情報抽出
*
*  【プログラムID】ZM012700
*
*  【機能概要】
*   画面入力された「品目コード」「プラント」「得意先コード」「販売組織」
*   「流通チャネル」をもとに各種マスタからデータを抽出し、タブ区切りテキ
*   ストファイルを作成する。
*
*  【備考・注意事項】
*
*  【対象テーブル】
*   テーブルID    内容説明                                        CRUD
*   --------------------------------------------------------------------
*   MARD          品目の保管場所データ                            _R__
*   MVKE          品目の販売データ                                _R__
*   MAKT          品目テキスト                                    _R__
*   MARA          一般品目データ                                  _R__
*   MLAN          品目の税分類                                    _R__
*   MARC          品目のプラントデータ                            _R__
*   MBEW          品目評価                                        _R__
*   EORD          購買元一覧                                      _R__
*   EINA          購買情報: 一般データ                            _R__
*   EINE          購買情報: 購買組織データ                        _R__
*   A017          品目購買情報 (プラント別)                       _R__
*   KONP          条件 (明細)                                     _R__
*   KONM          条件 (一次元の数量スケール)                     _R__
*   KNMT          得意先/品目情報レコードデータテーブル           _R__
*   A901          販組組織/ 流チ/製品部門/得意先/得意先品目       _R__
*   --------------------------------------------------------------------
*
*  【汎用モジュール】
*   モジュール名                  内容説明
*   --------------------------------------------------------------------
*   READ_TEXT                     SAPscript: テキスト読込
*   --------------------------------------------------------------------
*
*  【更新履歴】
*   日付        更新者      更新内容
*   --------------------------------------------------------------------
*   2006/12/08  池田　誠    新規作成
*   YYYY/MM/DD  ○○　○○  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*   --------------------------------------------------------------------
*
*=======================================================================
************************************************************************
* TYPES
************************************************************************
TYPES: BEGIN OF TYP_KONM1,
KONM1_KSTBM TYPE KONM-KSTBM,
KONM1_KBETR TYPE KONM-KBETR,
END OF TYP_KONM1.

TYPES: BEGIN OF TYP_KONM2,
KONM2_KSTBM TYPE KONM-KSTBM,
KONM2_KBETR TYPE KONM-KBETR,
END OF TYP_KONM2.

TYPES: BEGIN OF TYP_DATA,
MARD_LGPBE     TYPE MARD-LGPBE,     "棚番
MVKE_VKORG     TYPE MVKE-VKORG,     "販売組織
MVKE_VTWEG     TYPE MVKE-VTWEG,     "流通チャネル
MVKE_MVGR1     TYPE MVKE-MVGR1,     "商品グループ
MVKE_MVGR2     TYPE MVKE-MVGR2,     "最終製品
MVKE_MVGR3     TYPE MVKE-MVGR3,     "商品分類
MVKE_MVGR4     TYPE MVKE-MVGR4,     "開発部販売実績
MVKE_MVGR5     TYPE MVKE-MVGR5,     "品目グループ5
MVKE_VERSG     TYPE MVKE-VERSG,     "品目統計グループ
MVKE_VRKME     TYPE MVKE-VRKME,     "販売単位
MAKT_MAKTX     TYPE MAKT-MAKTX,     "品目テキスト
MARA_MATNR     TYPE MARA-MATNR,     "品目コード
MARA_MTART     TYPE MARA-MTART,     "品目タイプ
MARA_MBRSH     TYPE MARA-MBRSH,     "産業コード
MARA_MATKL     TYPE MARA-MATKL,     "品目グループ
MARA_MEINS     TYPE MARA-MEINS,     "基本数量単位
MARA_SPART     TYPE MARA-SPART,     "製品部門
MARA_PRDHA     TYPE MARA-PRDHA,     "品目階層
MARA_WRKST     TYPE MARA-WRKST,     "主構成物質
MARA_NORMT     TYPE MARA-NORMT,     "標準テキスト
"（ANSI、ISOなど）
MARA_GEWEI     TYPE MARA-GEWEI,     "質量単位
MARA_BSTME     TYPE MARA-BSTME,     "発注単位
T134T_MTBEZ    TYPE T134T-MTBEZ,    "品目タイプテキスト
T137T_MBBEZ    TYPE T137T-MBBEZ,    "産業コードテキスト
MLAN_TAXM1     TYPE MLAN-TAXM1,     "品目の税分類
MARC_WERKS     TYPE MARC-WERKS,     "プラント
MARC_EKGRP     TYPE MARC-EKGRP,     "購買グループ
MARC_WEBAZ     TYPE MARC-WEBAZ,     "入庫処理日数
MBEW_VERPR     TYPE MBEW-VERPR,     "移動平均原価/期間単位価格
MBEW_PEINH     TYPE MBEW-PEINH,     "価格単位
EORD_MATNR     TYPE EORD-MATNR,     "品目コード
EORD_WERKS     TYPE EORD-WERKS,     "プラント
EORD_VDATU     TYPE EORD-VDATU,     "供給元一覧の有効開始日
EORD_BDATU     TYPE EORD-BDATU,     "供給元一覧の供給終了日
EORD_LIFNR     TYPE EORD-LIFNR,     "仕入先勘定コード
EORD_FLIFN     TYPE EORD-FLIFN,     "区分：固定仕入先
EORD_EKORG     TYPE EORD-EKORG,     "購買組織
EINA_INFNR     TYPE EINA-INFNR,     "購買情報番号
EINA_LIFNR     TYPE EINA-LIFNR,     "仕入先勘定コード
EINA_IDNLF     TYPE EINA-IDNLF,     "仕入先の品目コード
EINA_LTSNR     TYPE EINA-LTSNR,     "仕入先部門
EINA_LTSSF     TYPE EINA-LTSSF,     "ソート番号
EINA_WGLIF     TYPE EINA-WGLIF,     "仕入先品目グループ
EINA_MEINS     TYPE EINA-MEINS,     "発注単位
EINA_UMREZ     TYPE EINA-UMREZ,     "発注単位から基本単位への
"換算式の分子
EINA_UMREN     TYPE EINA-UMREN,     "発注単位から基本単位への
"換算式の分母
EINA_VERKF     TYPE EINA-VERKF,     "仕入先営業担当者
EINA_TELF1     TYPE EINA-TELF1,     "仕入先電話番号
EINA_URZNR     TYPE EINA-URZNR,     "原産地証明書番号
EINA_URZDT     TYPE EINA-URZDT,     "原産地証明書有効終了日
EINA_URZLA     TYPE EINA-URZLA,     "原産国証明：発行国
EINA_URZTP     TYPE EINA-URZTP,     "証明書区分
EINE_ESOKZ     TYPE EINE-ESOKZ,     "購買情報区分
EINE_EKGRP     TYPE EINE-EKGRP,     "購買グループ
EINE_MINBM     TYPE EINE-MINBM,     "最小購買発注数量
EINE_NORBM     TYPE EINE-NORBM,     "標準購買発注数量
EINE_APLFZ     TYPE EINE-APLFZ,     "予定納入時間（単位：日）
EINE_NETPR     TYPE EINE-NETPR,     "購買情報の正味価格
EINE_PEINH     TYPE EINE-PEINH,     "価格単位
EINE_UNTTO     TYPE EINE-UNTTO,     "不足納入許容範囲リミット
EINE_MTXNO     TYPE EINE-MTXNO,     "品目マスタの
"購買発注テキストに関連なし
EINE_UEBTO     TYPE EINE-UEBTO,     "過剰納入許容範囲
EINE_KZABS     TYPE EINE-KZABS,     "購買発注請書依頼
EINE_UEBTK     TYPE EINE-UEBTK,     "区分：無制限過剰納入可能
EINE_BSTAE     TYPE EINE-BSTAE,     "確認管理キー
EINE_WEBRE     TYPE EINE-WEBRE,     "区分：入庫基準の請求書照合
EINE_MWSKZ     TYPE EINE-MWSKZ,     "税コード
EINE_MHDRZ     TYPE EINE-MHDRZ,     "最低有効期間残
EINE_XERSN     TYPE EINE-XERSN,     "ERS（自動入庫/請求決済）
"不可
EINE_EVERS     TYPE EINE-EVERS,     "出荷指示
EINE_EXPRF     TYPE EINE-EXPRF,     "輸出入手続−貿易
EINE_BSTMA     TYPE EINE-BSTMA,     "最大発注数量
EINE_RDPRF     TYPE EINE-RDPRF,     "丸めプロファイル
EINE_MEGRU     TYPE EINE-MEGRU,     "数量単位グループ
EINE_WAERS     TYPE EINE-WAERS,     "通貨コード
EINE_BPRME     TYPE EINE-BPRME,     "購買発注価格単位
"（購買管理）
EINE_BPUMN     TYPE EINE-BPUMN,     "購買価格単位から
"購買発注単位への変換分母
EINE_BPUMZ     TYPE EINE-BPUMZ,     "購買価格単位から
"購買発注単位への変換分子
EINE_EKKOL     TYPE EINE-EKKOL,     "仕入先条件グループ
EINE_MEPRF     TYPE EINE-MEPRF,     "価格設定日カテゴリ
"（価格設定日管理）
EINE_INCO1     TYPE EINE-INCO1,     "インコタームズ（1）
EINE_INCO2     TYPE EINE-INCO2,     "インコタームズ2
EINE_ANGNR     TYPE EINE-ANGNR,     "見積番号
EINE_ANGDT     TYPE EINE-ANGDT,     "見積有効の開始日付
A017_DATBI     TYPE A017-DATBI,     "条件マスタ有効終了日
A017_DATAB     TYPE A017-DATAB,     "条件マスタ有効開始日
KONP1_KSCHL    TYPE KONP-KSCHL,     "条件タイプ
KONP1_KBETR    TYPE KONP-KBETR,     "スケールを使用しない場合の
"条件金額/百分率
KONP1_KONWA    TYPE KONP-KONWA,     "価格単位（通貨、率）
KONP1_KPEIN    TYPE KONP-KPEIN,     "価格条件単位
KONP1_MXWRT    TYPE KONP-MXWRT,     "条件下限（金額/率）
KONP1_GKWRT    TYPE KONP-GKWRT,     "条件上限（金額/率）
KONP1_STFKZ    TYPE KONP-STFKZ,     "スケールタイプ
KONP1_KZNEP    TYPE KONP-KZNEP,     "条件除外区分
KONM1_KSTBM    TYPE KONM-KSTBM,     "条件スケール数量
KONM1_KBETR    TYPE KONM-KBETR,     "条件レート
"（条件金額/パーセント）
KNMT_KUNNR     TYPE KNMT-KUNNR,     "得意先コード
KNMT_MATNR     TYPE KNMT-MATNR,     "品目コード
KNMT_KDMAT     TYPE KNMT-KDMAT,     "得意先品目コード
KNMT_POSTX     TYPE KNMT-POSTX,     "得意先の品目テキスト
KNMT_VWPOS     TYPE KNMT-VWPOS,     "明細用途
A901_VKORGAU   TYPE A901-VKORGAU,   "受注伝票の販売組織
A901_VTWEG     TYPE A901-VTWEG,     "流通チャネル
A901_SPART     TYPE A901-SPART,     "製品部門
A901_KUNNR     TYPE A901-KUNNR,     "得意先コード
A901_ZZZKDMAT  TYPE A901-ZZZKDMAT,  "得意先品目コード
A901_DATBI     TYPE A901-DATBI,     "条件マスタの有効終了日
A901_DATAB     TYPE A901-DATAB,     "条件マスタの有効開始日
KONP2_KSCHL    TYPE KONP-KSCHL,     "条件タイプ
KONP2_KBETR    TYPE KONP-KBETR,     "スケールを使用しない場合の
"条件金額/百分率
KONP2_KONWA    TYPE KONP-KONWA,     "価格単位（通貨、率）
KONP2_KPEIN    TYPE KONP-KPEIN,     "価格条件単位
KONP2_KMEIN    TYPE KONP-KMEIN,     "条件単位
KONP2_KRECH    TYPE KONP-KRECH,     "条件計算タイプ
KONP2_KZBZG    TYPE KONP-KZBZG,     "スケール基準区分
KONP2_LOEVM_KO TYPE KONP-LOEVM_KO,  "条件明細の削除フラグ
KONP2_VALDT    TYPE KONP-VALDT,     "有効日日付
KONP2_VALTG    TYPE KONP-VALTG,     "有効日からの日数
KONM2_KSTBM    TYPE KONM-KSTBM,     "条件スケール数量
KONM2_KBETR    TYPE KONM-KBETR,     "条件レート
"（条件金額/パーセント）
READ_TEXT1     TYPE TLINE-TDLINE,   "得意先品目情報
"（出荷指示備考に表示）
READ_TEXT2     TYPE TLINE-TDLINE,   "納品書用備考
END OF TYP_DATA.

TYPES: BEGIN OF TYP_OUTPUT,
MARD_LGPBE(4)     TYPE C,  "棚番
MVKE_VKORG(4)     TYPE C,  "販売組織
MVKE_VTWEG(2)     TYPE C,  "流通チャネル
MVKE_MVGR1(3)     TYPE C,  "商品グループ
MVKE_MVGR2(3)     TYPE C,  "最終製品
MVKE_MVGR3(3)     TYPE C,  "商品分類
MVKE_MVGR4(3)     TYPE C,  "開発部販売実績
MVKE_MVGR5(3)     TYPE C,  "品目グループ5
MVKE_VERSG(1)     TYPE C,  "品目統計グループ
MVKE_VRKME(3)     TYPE C,  "販売単位
MAKT_MAKTX(40)    TYPE C,  "品目テキスト
MARA_MATNR(18)    TYPE C,  "品目コード
MARA_MTART(4)     TYPE C,  "品目タイプ
MARA_MBRSH(1)     TYPE C,  "産業コード
MARA_MATKL(9)     TYPE C,  "品目グループ
MARA_MEINS(3)     TYPE C,  "基本数量単位
MARA_SPART(2)     TYPE C,  "製品部門
MARA_PRDHA(18)    TYPE C,  "品目階層
MARA_WRKST(48)    TYPE C,  "主構成物質
MARA_NORMT(18)    TYPE C,  "標準テキスト（ANSI、ISOなど）
MARA_GEWEI(3)     TYPE C,  "質量単位
MARA_BSTME(3)     TYPE C,  "発注単位
T134T_MTBEZ(25)   TYPE C,  "品目タイプテキスト
T137T_MBBEZ(25)   TYPE C,  "産業コードテキスト
MLAN_TAXM1(1)     TYPE C,  "品目の税分類
MARC_WERKS(4)     TYPE C,  "プラント
MARC_EKGRP(3)     TYPE C,  "購買グループ
MARC_WEBAZ(3)     TYPE C,  "入庫処理日数
MBEW_VERPR(15)    TYPE C,  "移動平均原価/期間単位価格
MBEW_PEINH(6)     TYPE C,  "価格単位
EORD_MATNR(18)    TYPE C,  "品目コード
EORD_WERKS(4)     TYPE C,  "プラント
EORD_VDATU(10)    TYPE C,  "供給元一覧の有効開始日
EORD_BDATU(10)    TYPE C,  "供給元一覧の有効終了日
EORD_LIFNR(10)    TYPE C,  "仕入先勘定コード
EORD_FLIFN(1)     TYPE C,  "区分:固定仕入先
EORD_EKORG(4)     TYPE C,  "購買組織
EINA_INFNR(10)    TYPE C,  "購買情報番号
EINA_LIFNR(10)    TYPE C,  "仕入先勘定コード
EINA_IDNLF(35)    TYPE C,  "仕入先の品目コード
EINA_LTSNR(6)     TYPE C,  "仕入先部門
EINA_LTSSF(5)     TYPE C,  "ソート番号
EINA_WGLIF(18)    TYPE C,  "仕入先品目グループ
EINA_MEINS(3)     TYPE C,  "発注単位
EINA_UMREZ(6)     TYPE C,  "発注単位から基本単位への
"換算式の分子
EINA_UMREN(6)     TYPE C,  "発注単位から基本単位への
"換算式の分母
EINA_VERKF(30)    TYPE C,  "仕入先営業担当者
EINA_TELF1(16)    TYPE C,  "仕入先電話番号
EINA_URZNR(10)    TYPE C,  "原産地証明書番号
EINA_URZDT(10)    TYPE C,  "原産地証明有効終了日
EINA_URZLA(3)     TYPE C,  "原産国証明：発行国
EINA_URZTP(1)     TYPE C,  "証明書区分
EINE_ESOKZ(1)     TYPE C,  "購買情報区分
EINE_EKGRP(3)     TYPE C,  "購買グループ
EINE_MINBM(17)    TYPE C,  "最小購買発注数量
EINE_NORBM(17)    TYPE C,  "標準購買発注数量
EINE_APLFZ(3)     TYPE C,  "予定納入時間（単位：日）
EINE_NETPR(14)    TYPE C,  "購買情報の正味価格
EINE_PEINH(6)     TYPE C,  "価格単位
EINE_UNTTO(4)     TYPE C,  "不足納入許容範囲リミット
EINE_MTXNO(1)     TYPE C,  "品目マスタの
"購買発注テキストに関連なし
EINE_UEBTO(4)     TYPE C,  "過剰納入許容範囲
EINE_KZABS(1)     TYPE C,  "購買発注請書依頼
EINE_UEBTK(1)     TYPE C,  "区分：無制限過剰納入可能
EINE_BSTAE(4)     TYPE C,  "確認管理キー
EINE_WEBRE(1)     TYPE C,  "区分：入庫基準の請求書照合
EINE_MWSKZ(2)     TYPE C,  "税コード
EINE_MHDRZ(5)     TYPE C,  "最低有効期間残
EINE_XERSN(1)     TYPE C,  "ERS（自動入庫/請求決済）不可
EINE_EVERS(2)     TYPE C,  "出荷指示
EINE_EXPRF(8)     TYPE C,  "輸出入手続き−貿易
EINE_BSTMA(17)    TYPE C,  "確認管理キー
EINE_RDPRF(4)     TYPE C,  "丸めプロファイル
EINE_MEGRU(4)     TYPE C,  "数量単位グループ
EINE_WAERS(5)     TYPE C,  "通貨コード
EINE_BPRME(3)     TYPE C,  "購買発注価格単位（購買管理）
EINE_BPUMN(6)     TYPE C,  "購買価格単位から購買発注単への
"変換分母
EINE_BPUMZ(6)     TYPE C,  "購買価格単位から購買発注単位への
"変換分子
EINE_EKKOL(4)     TYPE C,  "仕入先条件グループ
EINE_MEPRF(1)     TYPE C,  "価格設定日カテゴリ
"（価格設定日管理）
EINE_INCO1(3)     TYPE C,  "インコタームズ（1）
EINE_INCO2(28)    TYPE C,  "インコタームズ2
EINE_ANGNR(10)    TYPE C,  "見積番号
EINE_ANGDT(10)    TYPE C,  "見積有効の開始日付
A017_DATBI(10)    TYPE C,  "条件マスタ有効終了日
A017_DATAB(10)    TYPE C,  "条件マスタ有効開始日
KONP1_KSCHL(4)    TYPE C,  "条件タイプ
KONP1_KBETR(16)   TYPE C,  "スケールを使用しない場合の
"条件金額/百分率
KONP1_KONWA(5)    TYPE C,  "価格単位（通貨、率）
KONP1_KPEIN(5)    TYPE C,  "価格条件単位
KONP1_MXWRT(16)   TYPE C,  "条件下限（金額/率）
KONP1_GKWRT(16)   TYPE C,  "条件上限（金額/率）
KONP1_STFKZ(1)    TYPE C,  "スケールタイプ
KONP1_KZNEP(1)    TYPE C,  "条件除外区分
KONM1_KSTBM(19)   TYPE C,  "条件スケール数量
KONM1_KBETR(16)   TYPE C,  "条件レート（条件金額/パーセント）
KNMT_KUNNR(10)    TYPE C,  "得意先コード
KNMT_MATNR(18)    TYPE C,  "品目コード
KNMT_KDMAT(35)    TYPE C,  "得意先品目コード
KNMT_POSTX(40)    TYPE C,  "得意先の品目テキスト
KNMT_VWPOS(4)     TYPE C,  "明細用途
A901_VKORGAU(4)   TYPE C,  "受注伝票の販売組織
A901_VTWEG(2)     TYPE C,  "流通チャネル
A901_SPART(2)     TYPE C,  "製品部門
A901_KUNNR(10)    TYPE C,  "得意先コード
A901_ZZZKDMAT(35) TYPE C,  "得意先品目コード
A901_DATBI(10)    TYPE C,  "条件マスタ有効終了日
A901_DATAB(10)    TYPE C,  "条件マスタ有効開始日
KONP2_KSCHL(4)    TYPE C,  "条件タイプ
KONP2_KBETR(16)   TYPE C,  "スケールを使用しない場合の
"条件金額/百分率
KONP2_KONWA(5)    TYPE C,  "価格単位（通貨、率）
KONP2_KPEIN(5)    TYPE C,  "価格条件単位
KONP2_KMEIN(3)    TYPE C,  "条件単位
KONP2_KRECH(1)    TYPE C,  "条件計算タイプ
KONP2_KZBZG(1)    TYPE C,  "スケール基準区分
KONP2_LOEVM_KO(1) TYPE C,  "条件明細の削除フラグ
KONP2_VALDT(10)   TYPE C,  "有効日日付
KONP2_VALTG(2)    TYPE C,  "有効日からの日数
KONM2_KSTBM(19)   TYPE C,  "条件スケール数量
KONM2_KBETR(16)   TYPE C,  "条件レート（条件金額/パーセント）
READ_TEXT1(132)   TYPE C,  "得意先品目情報
"（出荷指示備考に表示）
READ_TEXT2(132)   TYPE C,  "納品書用備考
END OF TYP_OUTPUT.

TYPES: BEGIN OF TYP_MAKE_FILE,
MAKE_FILE(100) TYPE C,
END OF TYP_MAKE_FILE.

TYPES: BEGIN OF TYP_HEADER,
HEADER(2000) TYPE C,
END OF TYP_HEADER.

TYPES: BEGIN OF TYP_RECORD,
RECORD(2000) TYPE C,
END OF TYP_RECORD.
************************************************************************
* DATA
************************************************************************
DATA: WA_DATA TYPE TYP_DATA,
WA_OUTPUT TYPE TYP_OUTPUT.

DATA: IT_KONM1 TYPE TABLE OF TYP_KONM1,
IT_KONM2 TYPE TABLE OF TYP_KONM2,
IT_OUTPUT TYPE TABLE OF TYP_OUTPUT.
************************************************************************
* CONSTANTS
************************************************************************
CONSTANTS: XCODE(1) TYPE X VALUE '09',
CNS_WAERS TYPE T001-WAERS VALUE 'JPY'.
************************************************************************
* 選択画面
************************************************************************
PARAMETERS PR_MATNR TYPE MARD-MATNR OBLIGATORY.
PARAMETERS PR_WERKS TYPE MARD-WERKS OBLIGATORY.
PARAMETERS PR_KUNNR TYPE KNMT-KUNNR OBLIGATORY.
PARAMETERS PR_VKORG TYPE KNMT-VKORG MEMORY ID VKO.
PARAMETERS PR_VTWEG TYPE KNMT-VTWEG MEMORY ID VTW.
************************************************************************
* START-OF-SELECTION.
************************************************************************
START-OF-SELECTION.
PERFORM INIT_WK.
PERFORM GET_DATA.
PERFORM EDIT_DATA.
PERFORM OUTPUT_DATA.
************************************************************************
* FORM INIT_WK
************************************************************************
FORM INIT_WK.

CLEAR: WA_DATA,
WA_OUTPUT.

CLEAR: IT_KONM1,
IT_KONM2,
IT_OUTPUT.

ENDFORM. "INIT_WK
************************************************************************
* FORM GET_DATA
************************************************************************
FORM GET_DATA.

PERFORM GET_HINMOKU.
PERFORM GET_KOUBAI.
PERFORM GET_HANBAI.

ENDFORM. "GET_DATA
************************************************************************
* FORM GET_HINMOKU
************************************************************************
FORM GET_HINMOKU.

* MARD
SELECT SINGLE
LGPBE
INTO WA_DATA-MARD_LGPBE
FROM MARD
WHERE MATNR = PR_MATNR
AND WERKS = PR_WERKS.

IF SY-SUBRC <> 0.
MESSAGE S400 WITH
'入力された品目コード、プラントのデータがありません'.
STOP.
ENDIF.

* MVKE
SELECT SINGLE
VKORG
VTWEG
MVGR1
MVGR2
MVGR3
MVGR4
MVGR5
VERSG
VRKME
INTO (WA_DATA-MVKE_VKORG,
WA_DATA-MVKE_VTWEG,
WA_DATA-MVKE_MVGR1,
WA_DATA-MVKE_MVGR2,
WA_DATA-MVKE_MVGR3,
WA_DATA-MVKE_MVGR4,
WA_DATA-MVKE_MVGR5,
WA_DATA-MVKE_VERSG,
WA_DATA-MVKE_VRKME)
FROM MVKE
WHERE MATNR = PR_MATNR
AND VKORG = PR_VKORG
AND VTWEG = PR_VTWEG.

* MAKT
SELECT SINGLE
MAKTX
INTO WA_DATA-MAKT_MAKTX
FROM MAKT
WHERE MATNR = PR_MATNR
AND SPRAS = 'JA'.

* MARA
SELECT SINGLE
MATNR
MTART
MBRSH
MATKL
MEINS
SPART
PRDHA
WRKST
NORMT
GEWEI
BSTME
INTO (WA_DATA-MARA_MATNR,
WA_DATA-MARA_MTART,
WA_DATA-MARA_MBRSH,
WA_DATA-MARA_MATKL,
WA_DATA-MARA_MEINS,
WA_DATA-MARA_SPART,
WA_DATA-MARA_PRDHA,
WA_DATA-MARA_WRKST,
WA_DATA-MARA_NORMT,
WA_DATA-MARA_GEWEI,
WA_DATA-MARA_BSTME)
FROM MARA
WHERE MATNR = PR_MATNR.

IF SY-SUBRC = 0.
SELECT SINGLE
MTBEZ
INTO WA_DATA-T134T_MTBEZ
FROM T134T
WHERE SPRAS = 'JA'
AND MTART = WA_DATA-MARA_MTART.

SELECT SINGLE
MBBEZ
INTO WA_DATA-T137T_MBBEZ
FROM T137T
WHERE SPRAS = 'JA'
AND MBRSH = WA_DATA-MARA_MBRSH.
ENDIF.

* MLAN
SELECT SINGLE
TAXM1
INTO WA_DATA-MLAN_TAXM1
FROM MLAN
WHERE MATNR = PR_MATNR
AND ALAND = 'JP'.

* MARC
SELECT SINGLE
WERKS
EKGRP
WEBAZ
INTO (WA_DATA-MARC_WERKS,
WA_DATA-MARC_EKGRP,
WA_DATA-MARC_WEBAZ)
FROM MARC
WHERE MATNR = PR_MATNR
AND WERKS = PR_WERKS.

* MBEW
SELECT SINGLE
VERPR
PEINH
INTO (WA_DATA-MBEW_VERPR,
WA_DATA-MBEW_PEINH)
FROM MBEW
WHERE MATNR = PR_MATNR
AND BWKEY = PR_WERKS
AND BWTAR = SPACE.

ENDFORM. "GET_HINMOKU
************************************************************************
* FORM GET_HINMOKU
************************************************************************
FORM GET_KOUBAI.

DATA: WK_A017_KNUMH TYPE KONP-KNUMH.

* EORD
SELECT SINGLE
MATNR
WERKS
VDATU
BDATU
LIFNR
FLIFN
EKORG
INTO (WA_DATA-EORD_MATNR,
WA_DATA-EORD_WERKS,
WA_DATA-EORD_VDATU,
WA_DATA-EORD_BDATU,
WA_DATA-EORD_LIFNR,
WA_DATA-EORD_FLIFN,
WA_DATA-EORD_EKORG)
FROM EORD
WHERE MATNR = PR_MATNR
AND WERKS = PR_WERKS
AND FLIFN = 'X'.

IF SY-SUBRC <> 0.
EXIT.
ENDIF.

* EINA
SELECT SINGLE
INFNR
LIFNR
IDNLF
LTSNR
LTSSF
WGLIF
MEINS
UMREZ
UMREN
VERKF
TELF1
URZNR
URZDT
URZLA
URZTP
INTO (WA_DATA-EINA_INFNR,
WA_DATA-EINA_LIFNR,
WA_DATA-EINA_IDNLF,
WA_DATA-EINA_LTSNR,
WA_DATA-EINA_LTSSF,
WA_DATA-EINA_WGLIF,
WA_DATA-EINA_MEINS,
WA_DATA-EINA_UMREZ,
WA_DATA-EINA_UMREN,
WA_DATA-EINA_VERKF,
WA_DATA-EINA_TELF1,
WA_DATA-EINA_URZNR,
WA_DATA-EINA_URZDT,
WA_DATA-EINA_URZLA,
WA_DATA-EINA_URZTP)
FROM EINA
WHERE MATNR = WA_DATA-EORD_MATNR
AND LIFNR = WA_DATA-EORD_LIFNR.

IF SY-SUBRC <> 0.
EXIT.
ENDIF.

* EINE
SELECT SINGLE
ESOKZ
EKGRP
MINBM
NORBM
APLFZ
NETPR
PEINH
UNTTO
MTXNO
UEBTO
KZABS
UEBTK
BSTAE
WEBRE
MWSKZ
MHDRZ
XERSN
EVERS
EXPRF
BSTMA
RDPRF
MEGRU
WAERS
BPRME
BPUMN
BPUMZ
EKKOL
MEPRF
INCO1
INCO2
ANGNR
ANGDT
INTO (WA_DATA-EINE_ESOKZ,
WA_DATA-EINE_EKGRP,
WA_DATA-EINE_MINBM,
WA_DATA-EINE_NORBM,
WA_DATA-EINE_APLFZ,
WA_DATA-EINE_NETPR,
WA_DATA-EINE_PEINH,
WA_DATA-EINE_UNTTO,
WA_DATA-EINE_MTXNO,
WA_DATA-EINE_UEBTO,
WA_DATA-EINE_KZABS,
WA_DATA-EINE_UEBTK,
WA_DATA-EINE_BSTAE,
WA_DATA-EINE_WEBRE,
WA_DATA-EINE_MWSKZ,
WA_DATA-EINE_MHDRZ,
WA_DATA-EINE_XERSN,
WA_DATA-EINE_EVERS,
WA_DATA-EINE_EXPRF,
WA_DATA-EINE_BSTMA,
WA_DATA-EINE_RDPRF,
WA_DATA-EINE_MEGRU,
WA_DATA-EINE_WAERS,
WA_DATA-EINE_BPRME,
WA_DATA-EINE_BPUMN,
WA_DATA-EINE_BPUMZ,
WA_DATA-EINE_EKKOL,
WA_DATA-EINE_MEPRF,
WA_DATA-EINE_INCO1,
WA_DATA-EINE_INCO2,
WA_DATA-EINE_ANGNR,
WA_DATA-EINE_ANGDT)
FROM EINE
WHERE INFNR = WA_DATA-EINA_INFNR
AND EKORG = WA_DATA-EORD_EKORG
AND WERKS = PR_WERKS.

IF SY-SUBRC <> 0.
EXIT.
ENDIF.

* A017
SELECT SINGLE
DATBI
DATAB
KNUMH
INTO (WA_DATA-A017_DATBI,
WA_DATA-A017_DATAB,
WK_A017_KNUMH)
FROM A017
WHERE KAPPL = 'M'
AND KSCHL = 'ZPB1'
AND LIFNR = WA_DATA-EINA_LIFNR
AND MATNR = PR_MATNR
AND EKORG = WA_DATA-EORD_EKORG
AND WERKS = PR_WERKS
AND ESOKZ = WA_DATA-EINE_ESOKZ
AND DATBI >= SY-DATUM
AND DATAB <= SY-DATUM.

IF SY-SUBRC <> 0.
EXIT.
ENDIF.

* KONP
SELECT SINGLE
KSCHL
KBETR
KONWA
KPEIN
MXWRT
GKWRT
STFKZ
KZNEP
INTO (WA_DATA-KONP1_KSCHL,
WA_DATA-KONP1_KBETR,
WA_DATA-KONP1_KONWA,
WA_DATA-KONP1_KPEIN,
WA_DATA-KONP1_MXWRT,
WA_DATA-KONP1_GKWRT,
WA_DATA-KONP1_STFKZ,
WA_DATA-KONP1_KZNEP)
FROM KONP
WHERE KNUMH = WK_A017_KNUMH
AND KOPOS = 1.

* KONM
SELECT KSTBM
KBETR
INTO TABLE IT_KONM1
FROM KONM
WHERE KNUMH = WK_A017_KNUMH
ORDER BY KSTBM.

ENDFORM. "GET_KOUBAI
************************************************************************
* FORM GET_HANBAI
************************************************************************
FORM GET_HANBAI.

DATA: WK_A901_KNUMH TYPE KONP-KNUMH .

* KNMT
SELECT SINGLE
KUNNR
MATNR
KDMAT
POSTX
VWPOS
INTO (WA_DATA-KNMT_KUNNR,
WA_DATA-KNMT_MATNR,
WA_DATA-KNMT_KDMAT,
WA_DATA-KNMT_POSTX,
WA_DATA-KNMT_VWPOS)
FROM KNMT
WHERE VKORG = PR_VKORG
AND VTWEG = PR_VTWEG
AND KUNNR = PR_KUNNR
AND MATNR = PR_MATNR.

IF SY-SUBRC <> 0.
EXIT.
ENDIF.

* A901
SELECT SINGLE
VKORGAU
VTWEG
SPART
KUNNR
ZZZKDMAT
DATBI
DATAB
KNUMH
INTO (WA_DATA-A901_VKORGAU,
WA_DATA-A901_VTWEG,
WA_DATA-A901_SPART,
WA_DATA-A901_KUNNR,
WA_DATA-A901_ZZZKDMAT,
WA_DATA-A901_DATBI,
WA_DATA-A901_DATAB,
WK_A901_KNUMH)
FROM A901
WHERE KAPPL = 'V'
AND KSCHL = 'ZPR0'
AND VKORGAU = PR_VKORG
AND VTWEG = PR_VTWEG
AND SPART = WA_DATA-MARA_SPART
AND KUNNR = WA_DATA-KNMT_KUNNR
AND ZZZKDMAT = WA_DATA-KNMT_KDMAT
AND KFRST = SPACE
AND DATBI >= SY-DATUM
AND DATAB <= SY-DATUM.

IF SY-SUBRC <> 0.
EXIT.
ENDIF.

* KONP
SELECT SINGLE
KSCHL
KBETR
KONWA
KPEIN
KMEIN
KRECH
KZBZG
LOEVM_KO
VALDT
VALTG
INTO (WA_DATA-KONP2_KSCHL,
WA_DATA-KONP2_KBETR,
WA_DATA-KONP2_KONWA,
WA_DATA-KONP2_KPEIN,
WA_DATA-KONP2_KMEIN,
WA_DATA-KONP2_KRECH,
WA_DATA-KONP2_KZBZG,
WA_DATA-KONP2_LOEVM_KO,
WA_DATA-KONP2_VALDT,
WA_DATA-KONP2_VALTG)
FROM KONP
WHERE KNUMH = WK_A901_KNUMH
AND KOPOS = 1.

* KONM
SELECT KSTBM
KBETR
INTO TABLE IT_KONM2
FROM KONM
WHERE KNUMH = WK_A901_KNUMH
ORDER BY KSTBM.

ENDFORM. "GET_HANBAI
***********************************************************************
* FORM EDIT_DATA
************************************************************************
FORM EDIT_DATA.

DATA: WK_INDEX TYPE I VALUE 1,
WK_KONM1_COUNT TYPE I,
WK_KONM2_COUNT TYPE I,
WK_MAX_COUNT TYPE I,
WK_CURRENCY TYPE TCURC-WAERS,
WK_AMOUNT_INTERNAL TYPE WMTO_S-AMOUNT,
WK_AMOUNT_DISPLAY TYPE WMTO_S-AMOUNT.
DATA: WA_NAME TYPE THEAD-TDNAME,
WA_LINES TYPE TLINE,
WA_KONM1 TYPE TYP_KONM1,
WA_KONM2 TYPE TYP_KONM2,
WA_BACKUP TYPE TYP_DATA.
DATA: IT_LINES TYPE TABLE OF TLINE,
IT_DATA TYPE TABLE OF TYP_DATA.

CONCATENATE PR_VKORG PR_VTWEG PR_KUNNR WA_DATA-KNMT_KDMAT
INTO WA_NAME.

CALL FUNCTION 'READ_TEXT'
EXPORTING
*     CLIENT                        = SY-MANDT
ID                            = '0001'
LANGUAGE                      = 'J'
NAME                          = WA_NAME
OBJECT                        = 'KNMT'
TABLES
LINES                         = IT_LINES
EXCEPTIONS
ID                            = 1
LANGUAGE                      = 2
NAME                          = 3
NOT_FOUND                     = 4
OBJECT                        = 5
REFERENCE_CHECK               = 6
WRONG_ACCESS_TO_ARCHIVE       = 7
OTHERS                        = 8
.
IF SY-SUBRC = 0.
READ TABLE IT_LINES INDEX 1 INTO WA_LINES.
IF SY-SUBRC = 0.
WA_DATA-READ_TEXT1 = WA_LINES-TDLINE.
ENDIF.
ENDIF.

CLEAR: WA_LINES,
IT_LINES.

CALL FUNCTION 'READ_TEXT'
EXPORTING
*     CLIENT                        = SY-MANDT
ID                            = '0002'
LANGUAGE                      = 'J'
NAME                          = WA_NAME
OBJECT                        = 'KNMT'
TABLES
LINES                         = IT_LINES
EXCEPTIONS
ID                            = 1
LANGUAGE                      = 2
NAME                          = 3
NOT_FOUND                     = 4
OBJECT                        = 5
REFERENCE_CHECK               = 6
WRONG_ACCESS_TO_ARCHIVE       = 7
OTHERS                        = 8
.
IF SY-SUBRC = 0.
READ TABLE IT_LINES INDEX 1 INTO WA_LINES.
IF SY-SUBRC = 0.
WA_DATA-READ_TEXT2 = WA_LINES-TDLINE.
ENDIF.
ENDIF.

DESCRIBE TABLE IT_KONM1 LINES WK_KONM1_COUNT.
DESCRIBE TABLE IT_KONM2 LINES WK_KONM2_COUNT.
IF WK_KONM1_COUNT >= WK_KONM2_COUNT.
MOVE WK_KONM1_COUNT TO WK_MAX_COUNT.
ELSE.
MOVE WK_KONM2_COUNT TO WK_MAX_COUNT.
ENDIF.

IF WK_MAX_COUNT = 0.
APPEND WA_DATA TO IT_DATA.
ELSE.
MOVE-CORRESPONDING WA_DATA TO WA_BACKUP.
WHILE WK_INDEX <= WK_MAX_COUNT.
READ TABLE IT_KONM1 INDEX WK_INDEX INTO WA_KONM1.
IF SY-SUBRC = 0.
MOVE-CORRESPONDING WA_KONM1 TO WA_DATA.
ENDIF.
READ TABLE IT_KONM2 INDEX WK_INDEX INTO WA_KONM2.
IF SY-SUBRC = 0.
MOVE-CORRESPONDING WA_KONM2 TO WA_DATA.
ENDIF.
APPEND WA_DATA TO IT_DATA.
WK_INDEX = WK_INDEX + 1.
CLEAR: WA_DATA.
MOVE-CORRESPONDING WA_BACKUP TO WA_DATA.
ENDWHILE.
ENDIF.

* 金額表示変換
LOOP AT IT_DATA INTO WA_DATA.
MOVE CNS_WAERS TO WK_CURRENCY.
*   MBEW_VERPR
MOVE WA_DATA-MBEW_VERPR TO WK_AMOUNT_INTERNAL.
CLEAR: WK_AMOUNT_DISPLAY.
PERFORM CURRENCY_CHANGE USING    WK_CURRENCY
WK_AMOUNT_INTERNAL
CHANGING WK_AMOUNT_DISPLAY.
MOVE WK_AMOUNT_DISPLAY TO WA_DATA-MBEW_VERPR.

MOVE WA_DATA-EINE_WAERS TO WK_CURRENCY.
*   EINE_NETPR
MOVE WA_DATA-EINE_NETPR TO WK_AMOUNT_INTERNAL.
CLEAR: WK_AMOUNT_DISPLAY.
PERFORM CURRENCY_CHANGE USING    WK_CURRENCY
WK_AMOUNT_INTERNAL
CHANGING WK_AMOUNT_DISPLAY.
MOVE WK_AMOUNT_DISPLAY TO WA_DATA-EINE_NETPR.

MOVE WA_DATA-KONP1_KONWA TO WK_CURRENCY.
*   KONP1_KBETR
MOVE WA_DATA-KONP1_KBETR TO WK_AMOUNT_INTERNAL.
CLEAR: WK_AMOUNT_DISPLAY.
PERFORM CURRENCY_CHANGE USING    WK_CURRENCY
WK_AMOUNT_INTERNAL
CHANGING WK_AMOUNT_DISPLAY.
MOVE WK_AMOUNT_DISPLAY TO WA_DATA-KONP1_KBETR.
*   KONP1_MXWRT
MOVE WA_DATA-KONP1_MXWRT TO WK_AMOUNT_INTERNAL.
CLEAR: WK_AMOUNT_DISPLAY.
PERFORM CURRENCY_CHANGE USING    WK_CURRENCY
WK_AMOUNT_INTERNAL
CHANGING WK_AMOUNT_DISPLAY.
MOVE WK_AMOUNT_DISPLAY TO WA_DATA-KONP1_MXWRT.
*   KONP1_GKWRT
MOVE WA_DATA-KONP1_GKWRT TO WK_AMOUNT_INTERNAL.
CLEAR: WK_AMOUNT_DISPLAY.
PERFORM CURRENCY_CHANGE USING    WK_CURRENCY
WK_AMOUNT_INTERNAL
CHANGING WK_AMOUNT_DISPLAY.
MOVE WK_AMOUNT_DISPLAY TO WA_DATA-KONP1_GKWRT.
*   KONM1_KBETR
MOVE WA_DATA-KONM1_KBETR TO WK_AMOUNT_INTERNAL.
CLEAR: WK_AMOUNT_DISPLAY.
PERFORM CURRENCY_CHANGE USING    WK_CURRENCY
WK_AMOUNT_INTERNAL
CHANGING WK_AMOUNT_DISPLAY.
MOVE WK_AMOUNT_DISPLAY TO WA_DATA-KONM1_KBETR.

MOVE WA_DATA-KONP2_KONWA TO WK_CURRENCY.
*   KONP2_KBETR
MOVE WA_DATA-KONP2_KBETR TO WK_AMOUNT_INTERNAL.
CLEAR: WK_AMOUNT_DISPLAY.
PERFORM CURRENCY_CHANGE USING    WK_CURRENCY
WK_AMOUNT_INTERNAL
CHANGING WK_AMOUNT_DISPLAY.
MOVE WK_AMOUNT_DISPLAY TO WA_DATA-KONP2_KBETR.
*   KONM2_KBETR
MOVE WA_DATA-KONM2_KBETR TO WK_AMOUNT_INTERNAL.
CLEAR: WK_AMOUNT_DISPLAY.
PERFORM CURRENCY_CHANGE USING    WK_CURRENCY
WK_AMOUNT_INTERNAL
CHANGING WK_AMOUNT_DISPLAY.
MOVE WK_AMOUNT_DISPLAY TO WA_DATA-KONM2_KBETR.

MODIFY IT_DATA FROM WA_DATA.
ENDLOOP.

LOOP AT IT_DATA INTO WA_DATA.
MOVE-CORRESPONDING WA_DATA TO WA_OUTPUT.
APPEND WA_OUTPUT TO IT_OUTPUT.
ENDLOOP.

ENDFORM. "EDIT_DATA
***********************************************************************
* FORM OUTPUT_DATA
***********************************************************************
FORM OUTPUT_DATA.

DATA: WA_MAKE_FILE TYPE TYP_MAKE_FILE,
WA_HEADER TYPE TYP_HEADER,
PR_FILEN TYPE RLGRAP-FILENAME,
WK_OUTPUT_COUNT TYPE I,
WA_RECORD TYPE TYP_RECORD.

GET PARAMETER ID 'ZSVF' FIELD PR_FILEN.
IF SY-SUBRC = 0.
CONCATENATE
PR_FILEN
SY-REPID      " プログラムID
SY-UNAME      " R/3ログインユーザID
SY-UZEIT      " タイムスタンプ
'.txt'        " 拡張子
INTO WA_MAKE_FILE.

OPEN DATASET WA_MAKE_FILE FOR OUTPUT IN TEXT MODE.
IF SY-SUBRC = 0.
*     ヘッダ行作成
CONCATENATE
TEXT-001 XCODE
TEXT-142 XCODE
TEXT-002 XCODE
TEXT-003 XCODE
TEXT-004 XCODE
TEXT-005 XCODE
TEXT-006 XCODE
TEXT-007 XCODE
TEXT-008 XCODE
TEXT-009 XCODE
TEXT-010 XCODE
TEXT-011 XCODE
TEXT-012 XCODE
TEXT-013 XCODE
TEXT-014 XCODE
TEXT-015 XCODE
TEXT-016 XCODE
TEXT-017 XCODE
TEXT-018 XCODE
TEXT-019 XCODE
TEXT-020 XCODE
TEXT-143 XCODE
TEXT-021 XCODE
TEXT-022 XCODE
TEXT-023 XCODE
TEXT-024 XCODE
TEXT-025 XCODE
TEXT-026 XCODE
TEXT-027 XCODE
TEXT-028 XCODE
TEXT-029 XCODE
TEXT-030 XCODE
TEXT-031 XCODE
TEXT-032 XCODE
TEXT-033 XCODE
TEXT-034 XCODE
TEXT-035 XCODE
TEXT-036 XCODE
TEXT-037 XCODE
TEXT-038 XCODE
TEXT-039 XCODE
TEXT-040 XCODE
TEXT-041 XCODE
TEXT-042 XCODE
TEXT-043 XCODE
TEXT-044 XCODE
TEXT-045 XCODE
TEXT-046 XCODE
TEXT-047 XCODE
TEXT-048 XCODE
TEXT-049 XCODE
TEXT-050 XCODE
TEXT-051 XCODE
TEXT-052 XCODE
TEXT-053 XCODE
TEXT-054 XCODE
TEXT-055 XCODE
TEXT-056 XCODE
TEXT-057 XCODE
TEXT-058 XCODE
TEXT-059 XCODE
TEXT-060 XCODE
TEXT-061 XCODE
TEXT-062 XCODE
TEXT-063 XCODE
TEXT-064 XCODE
TEXT-065 XCODE
TEXT-066 XCODE
TEXT-067 XCODE
TEXT-068 XCODE
TEXT-069 XCODE
TEXT-070 XCODE
TEXT-071 XCODE
TEXT-072 XCODE
TEXT-073 XCODE
TEXT-074 XCODE
TEXT-075 XCODE
TEXT-076 XCODE
TEXT-077 XCODE
TEXT-078 XCODE
TEXT-079 XCODE
TEXT-080 XCODE
TEXT-081 XCODE
TEXT-082 XCODE
TEXT-083 XCODE
TEXT-084 XCODE
TEXT-085 XCODE
TEXT-086 XCODE
TEXT-087 XCODE
TEXT-088 XCODE
TEXT-089 XCODE
TEXT-090 XCODE
TEXT-091 XCODE
TEXT-092 XCODE
TEXT-093 XCODE
TEXT-094 XCODE
TEXT-095 XCODE
TEXT-096 XCODE
TEXT-097 XCODE
TEXT-098 XCODE
TEXT-099 XCODE
TEXT-100 XCODE
TEXT-101 XCODE
TEXT-102 XCODE
TEXT-103 XCODE
TEXT-104 XCODE
TEXT-105 XCODE
TEXT-106 XCODE
TEXT-107 XCODE
TEXT-108 XCODE
TEXT-109 XCODE
TEXT-110 XCODE
TEXT-111 XCODE
TEXT-112 XCODE
TEXT-113 XCODE
TEXT-114 XCODE
TEXT-115 XCODE
TEXT-116 XCODE
TEXT-117 XCODE
TEXT-118 XCODE
TEXT-119 XCODE
TEXT-120 XCODE
TEXT-121 XCODE
TEXT-122 XCODE
TEXT-123 XCODE
TEXT-124 XCODE
TEXT-125 XCODE
TEXT-126 XCODE
TEXT-127 XCODE
TEXT-128 XCODE
TEXT-129 XCODE
TEXT-130 XCODE
TEXT-131 XCODE
TEXT-132 XCODE
TEXT-133 XCODE
TEXT-134 XCODE
TEXT-135 XCODE
TEXT-136 XCODE
TEXT-137 XCODE
TEXT-138 XCODE
TEXT-139 XCODE
TEXT-140 XCODE
TEXT-141
INTO WA_HEADER.

TRANSFER WA_HEADER TO WA_MAKE_FILE.

*     データ行作成
LOOP AT IT_OUTPUT INTO WA_OUTPUT.
CONCATENATE
WA_OUTPUT-MARA_MTART     XCODE
WA_OUTPUT-T134T_MTBEZ    XCODE
' '                      XCODE
WA_OUTPUT-MARA_MATNR     XCODE
WA_OUTPUT-MAKT_MAKTX     XCODE
WA_OUTPUT-MARC_WERKS     XCODE
WA_OUTPUT-MARA_MEINS     XCODE
WA_OUTPUT-MARA_PRDHA     XCODE
WA_OUTPUT-MARA_MATKL     XCODE
WA_OUTPUT-MARA_WRKST     XCODE
WA_OUTPUT-MARA_NORMT     XCODE
WA_OUTPUT-MLAN_TAXM1     XCODE
WA_OUTPUT-MVKE_MVGR1     XCODE
WA_OUTPUT-MVKE_MVGR2     XCODE
WA_OUTPUT-MVKE_MVGR3     XCODE
WA_OUTPUT-MVKE_MVGR4     XCODE
WA_OUTPUT-MVKE_MVGR5     XCODE
WA_OUTPUT-MARC_EKGRP     XCODE
WA_OUTPUT-MBEW_VERPR     XCODE
WA_OUTPUT-MBEW_PEINH     XCODE
WA_OUTPUT-MARA_MBRSH     XCODE
WA_OUTPUT-T137T_MBBEZ    XCODE
WA_OUTPUT-MVKE_VKORG     XCODE
WA_OUTPUT-MVKE_VTWEG     XCODE
WA_OUTPUT-MARA_SPART     XCODE
WA_OUTPUT-MARA_GEWEI     XCODE
WA_OUTPUT-MVKE_VERSG     XCODE
WA_OUTPUT-MVKE_VRKME     XCODE
WA_OUTPUT-MARA_BSTME     XCODE
WA_OUTPUT-MARC_WEBAZ     XCODE
WA_OUTPUT-MARD_LGPBE     XCODE
' '                      XCODE
WA_OUTPUT-EORD_LIFNR     XCODE
WA_OUTPUT-MARA_MATNR     XCODE
WA_OUTPUT-EORD_EKORG     XCODE
WA_OUTPUT-EORD_WERKS     XCODE
WA_OUTPUT-EINA_INFNR     XCODE
WA_OUTPUT-EINE_ESOKZ     XCODE
WA_OUTPUT-EINE_ESOKZ     XCODE
WA_OUTPUT-EINE_ESOKZ     XCODE
WA_OUTPUT-EINA_MEINS     XCODE
WA_OUTPUT-EINA_UMREZ     XCODE
WA_OUTPUT-EINA_UMREN     XCODE
WA_OUTPUT-EINA_IDNLF     XCODE
WA_OUTPUT-EINA_VERKF     XCODE
WA_OUTPUT-EINA_TELF1     XCODE
WA_OUTPUT-EINA_URZNR     XCODE
WA_OUTPUT-EINA_URZDT     XCODE
WA_OUTPUT-EINA_URZLA     XCODE
WA_OUTPUT-EINA_URZTP     XCODE
' '                      XCODE
' '                      XCODE
' '                      XCODE
WA_OUTPUT-EINA_LTSNR     XCODE
WA_OUTPUT-EINA_LTSSF     XCODE
WA_OUTPUT-EINA_WGLIF     XCODE
' '                      XCODE
' '                      XCODE
WA_OUTPUT-EINA_LIFNR     XCODE
WA_OUTPUT-EINE_APLFZ     XCODE
WA_OUTPUT-EINE_UNTTO     XCODE
WA_OUTPUT-EINE_MTXNO     XCODE
WA_OUTPUT-EINE_EKGRP     XCODE
WA_OUTPUT-EINE_UEBTO     XCODE
WA_OUTPUT-EINE_KZABS     XCODE
WA_OUTPUT-EINE_NORBM     XCODE
WA_OUTPUT-EINE_UEBTK     XCODE
WA_OUTPUT-EINE_BSTAE     XCODE
WA_OUTPUT-EINE_MINBM     XCODE
WA_OUTPUT-EINE_WEBRE     XCODE
WA_OUTPUT-EINE_MWSKZ     XCODE
WA_OUTPUT-EINE_MHDRZ     XCODE
WA_OUTPUT-EINE_XERSN     XCODE
WA_OUTPUT-EINE_EVERS     XCODE
WA_OUTPUT-EINE_EXPRF     XCODE
WA_OUTPUT-EINE_BSTMA     XCODE
WA_OUTPUT-EINE_RDPRF     XCODE
WA_OUTPUT-EINE_MEGRU     XCODE
WA_OUTPUT-EINE_NETPR     XCODE
WA_OUTPUT-EINE_WAERS     XCODE
WA_OUTPUT-EINE_PEINH     XCODE
WA_OUTPUT-EINE_BPRME     XCODE
WA_OUTPUT-EINE_BPUMN     XCODE
WA_OUTPUT-EINE_BPUMZ     XCODE
WA_OUTPUT-EINE_EKKOL     XCODE
WA_OUTPUT-EINE_MEPRF     XCODE
WA_OUTPUT-EINE_INCO1     XCODE
WA_OUTPUT-EINE_INCO2     XCODE
WA_OUTPUT-EINE_ANGNR     XCODE
WA_OUTPUT-EINE_ANGDT     XCODE
WA_OUTPUT-KONP1_KSCHL    XCODE
WA_OUTPUT-A017_DATAB     XCODE
WA_OUTPUT-A017_DATBI     XCODE
WA_OUTPUT-KONP1_KBETR    XCODE
WA_OUTPUT-KONP1_KONWA    XCODE
WA_OUTPUT-KONP1_KPEIN    XCODE
WA_OUTPUT-KONP1_MXWRT    XCODE
WA_OUTPUT-KONP1_GKWRT    XCODE
WA_OUTPUT-KONP1_STFKZ    XCODE
WA_OUTPUT-KONP1_KZNEP    XCODE
WA_OUTPUT-KONM1_KSTBM    XCODE
WA_OUTPUT-KONM1_KBETR    XCODE
WA_OUTPUT-EORD_MATNR     XCODE
WA_OUTPUT-EORD_WERKS     XCODE
WA_OUTPUT-EORD_VDATU     XCODE
WA_OUTPUT-EORD_BDATU     XCODE
WA_OUTPUT-EORD_LIFNR     XCODE
WA_OUTPUT-EORD_EKORG     XCODE
WA_OUTPUT-EORD_FLIFN     XCODE
WA_OUTPUT-KNMT_KUNNR     XCODE
WA_OUTPUT-KNMT_MATNR     XCODE
WA_OUTPUT-KNMT_KDMAT     XCODE
WA_OUTPUT-KNMT_POSTX     XCODE
WA_OUTPUT-KNMT_VWPOS     XCODE
WA_OUTPUT-READ_TEXT1     XCODE
WA_OUTPUT-READ_TEXT2     XCODE
WA_OUTPUT-KONP2_KSCHL    XCODE
WA_OUTPUT-A901_VKORGAU   XCODE
WA_OUTPUT-A901_VTWEG     XCODE
WA_OUTPUT-A901_KUNNR     XCODE
WA_OUTPUT-A901_ZZZKDMAT  XCODE
' '                      XCODE
WA_OUTPUT-KONP2_KBETR    XCODE
WA_OUTPUT-KONP2_KONWA    XCODE
WA_OUTPUT-KONP2_KPEIN    XCODE
WA_OUTPUT-KONP2_KMEIN    XCODE
WA_OUTPUT-KONP2_KRECH    XCODE
WA_OUTPUT-KONP2_KZBZG    XCODE
WA_OUTPUT-A901_DATAB     XCODE
WA_OUTPUT-A901_DATBI     XCODE
WA_OUTPUT-KONP2_LOEVM_KO XCODE
' '                      XCODE
' '                      XCODE
' '                      XCODE
WA_OUTPUT-KONP2_VALDT    XCODE
WA_OUTPUT-KONP2_VALTG    XCODE
WA_OUTPUT-KONM2_KSTBM    XCODE
WA_OUTPUT-KONP2_KMEIN    XCODE
WA_OUTPUT-KONM2_KBETR    XCODE
WA_OUTPUT-KONP2_KONWA    XCODE
WA_OUTPUT-KONP2_KPEIN    XCODE
WA_OUTPUT-KONP2_KMEIN    XCODE
WA_OUTPUT-A901_SPART
INTO WA_RECORD.
TRANSFER WA_RECORD TO WA_MAKE_FILE.
WK_OUTPUT_COUNT = WK_OUTPUT_COUNT + 1.
ENDLOOP.
MESSAGE S401(Y1) WITH WK_OUTPUT_COUNT '件出力されました'.
ENDIF.
ENDIF.

CLOSE DATASET WA_MAKE_FILE.

ENDFORM. "OUTPUT_DATA
***********************************************************************
* FORM CURRENCY_CHANGE
***********************************************************************
FORM CURRENCY_CHANGE USING    P_CURRENCY TYPE TCURC-WAERS
P_AMOUNT_INTERNAL TYPE WMTO_S-AMOUNT
CHANGING P_AMOUNT_DISPLAY TYPE WMTO_S-AMOUNT.

DATA: WK_AMOUNT_DISPLAY TYPE WMTO_S-AMOUNT.

CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_DISPLAY'
EXPORTING
CURRENCY        = P_CURRENCY
AMOUNT_INTERNAL = P_AMOUNT_INTERNAL
IMPORTING
AMOUNT_DISPLAY = WK_AMOUNT_DISPLAY.

IF SY-SUBRC = 0.
MOVE WK_AMOUNT_DISPLAY TO P_AMOUNT_DISPLAY.
ENDIF.

ENDFORM. "CURRENCY_CHANGE
