***INCLUDE YF01NUMC.
*-----------------------------------------------------------------------
*  出力値　編集サブルーチン   FORM YF01NUMC
*      種別 : INCLUDE SUBROUTINE
*      入力 : I_NUM パック型  ２９桁（小数点以下５桁）
*             I_U_KETA 整数型
*             I_D_KETA 整数型
*      出力 : O_NUM 文字列型  ３２桁
*      処理概要 : 渡された数値を整数部表示桁数(I_U_KETA)、小数部表示桁数
*                 (I_D_KETA)に従って編集を行い、文字列として出力する。
*                 整数部表示桁数にカンマを挿入する余裕が無い場合は、下位
*                 のカンマの表示を行わない。
*                 整数部のＭＡＸは１６桁（符号含）、小数部は５桁とする。
*      備考 : 1.呼出元ﾌﾟﾛｸﾞﾗﾑでは
*               'START-OF-SELECTION'を必ず定義する｡
*             2.当インクルードの指定は、'START-OF-SELECTION'の前に記述
*               する。
*-----------------------------------------------------------------------

DATA: I_NUM(15) TYPE P DECIMALS 5,
I_U_KETA TYPE I,
I_D_KETA TYPE I,
O_NUM(32) TYPE C.

DATA: BEGIN OF OUT,
FUGO(2) TYPE C,
S_KINGAKU(19) TYPE C,
PERIOD(1) TYPE C,
R_KINGAKU(10) TYPE C,
END OF OUT.

DATA: W_NUM(26),
W_NUM_L(26),
W_NUM0(15) TYPE P,
W_NUM1(15) TYPE P DECIMALS 1,
W_NUM2(15) TYPE P DECIMALS 2,
W_NUM3(15) TYPE P DECIMALS 3,
W_NUM4(15) TYPE P DECIMALS 4,
W_NUM5(15) TYPE P DECIMALS 5.

DATA: W_MOD TYPE I,
W_DIV TYPE I,
W_KETA1 TYPE I,
W_KETA2 TYPE I,
W_KETA3 TYPE I,
I_CNT TYPE I,
O_CNT TYPE I,
C_CNT TYPE I,
L_CNT TYPE I,
R_CNT TYPE I,
R_FLG.

FIELD-SYMBOLS: <C1>.
FIELD-SYMBOLS: <F1>.
FIELD-SYMBOLS: <F2>.

*---------------------------------------------------------------------*
*       FORM YF01NUMC                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  VALUE(I_NUM)                                                  *
*  -->  VALUE(I_U_KETA)                                               *
*  -->  VALUE(I_D_KETA)                                               *
*---------------------------------------------------------------------*
FORM YF01NUMC USING VALUE(I_NUM) VALUE(I_U_KETA) VALUE(I_D_KETA).

CLEAR: OUT,
O_NUM.
* マイナス時の編集
IF I_NUM < 0.
MOVE '-' TO OUT-FUGO.
I_NUM = I_NUM * -1.
I_U_KETA = I_U_KETA - 1.
ENDIF.
* 小数点以下桁数毎の編集
CASE I_D_KETA.
WHEN 0.
MOVE I_NUM TO W_NUM0.
MOVE W_NUM0 TO W_NUM.
MOVE '1' TO R_FLG.
WHEN 1.
MOVE I_NUM TO W_NUM1.
MOVE W_NUM1 TO W_NUM.
MOVE '0' TO R_FLG.
WHEN 2.
MOVE I_NUM TO W_NUM2.
MOVE W_NUM2 TO W_NUM.
MOVE '0' TO R_FLG.
WHEN 3.
MOVE I_NUM TO W_NUM3.
MOVE W_NUM3 TO W_NUM.
MOVE '0' TO R_FLG.
WHEN 4.
MOVE I_NUM TO W_NUM4.
MOVE W_NUM4 TO W_NUM.
MOVE '0' TO R_FLG.
WHEN 5.
MOVE I_NUM TO W_NUM5.
MOVE W_NUM5 TO W_NUM.
MOVE '0' TO R_FLG.
ENDCASE.
* 整数部桁数の取得
PERFORM KETASU_GET.

W_DIV = ( C_CNT - 1 ) DIV 3.         "カンマの数
W_KETA1 = C_CNT + W_DIV.             "カンマ込桁数
IF W_KETA1 <= I_U_KETA.
*   W_KETA3 = 3.                       "カンマ無で出力する桁数
W_KETA3 = I_U_KETA.                "カンマ無で出力する桁数
ELSE.
W_KETA2 = W_KETA1 - I_U_KETA.      "はみ出した桁数
IF W_KETA2 <= W_DIV.
*     W_KETA3 = 3 * W_KETA2 + 3.       "カンマ無で出力する桁数
W_KETA3 = 3 * ( W_DIV - W_KETA2 ) + 1. "カンマ無で出力する桁数
ELSE.
MOVE '***' TO O_NUM.
MOVE 9 TO SY-SUBRC.
EXIT.
ENDIF.
ENDIF.

MOVE: 24 TO I_CNT,
18 TO O_CNT,
9 TO R_CNT,
1 TO L_CNT.

ASSIGN W_NUM+I_CNT(1) TO <F1>.

WHILE <F1> <> ' ' AND I_CNT >= 0.
IF <F1> = '.'.
MOVE: '.' TO OUT-PERIOD,
'1' TO R_FLG.
I_CNT = I_CNT - 1.
ASSIGN W_NUM+I_CNT(1) TO <F1>.
CONTINUE.
ENDIF.

IF R_FLG = '0'.                    "小数部編集
PERFORM SHOSU_HENSHU.
ELSEIF R_FLG = '1'.                "整数部編集
PERFORM SEISU_HENSHU.
ENDIF.
ENDWHILE.

MOVE OUT TO O_NUM.
CONDENSE O_NUM NO-GAPS.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM KETASU_GET                                               *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM KETASU_GET.
MOVE W_NUM TO W_NUM_L.
CONDENSE W_NUM_L NO-GAPS.
MOVE 0 TO C_CNT.
ASSIGN W_NUM_L+C_CNT(1) TO <C1>.
WHILE <C1> <> '.' AND <C1> <> ' '.
C_CNT = C_CNT + 1.
ASSIGN W_NUM_L+C_CNT(1) TO <C1>.
ENDWHILE.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM SHOSU_HENSHU                                             *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM SHOSU_HENSHU.
ASSIGN OUT-R_KINGAKU+R_CNT(1) TO <F2>.
MOVE <F1> TO <F2>.

I_CNT = I_CNT - 1.
R_CNT = R_CNT - 1.
ASSIGN W_NUM+I_CNT(1) TO <F1>.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM SEISU_HENSHU                                             *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM SEISU_HENSHU.
* IF L_CNT > W_KETA3.
IF L_CNT <= W_KETA3 AND
L_CNT <> 1.
W_MOD = ( L_CNT - 1 ) MOD 3.
IF W_MOD = 0.
ASSIGN OUT-S_KINGAKU+O_CNT(1) TO <F2>.
MOVE ',' TO <F2>.
O_CNT = O_CNT - 1.
ENDIF.
ENDIF.
ASSIGN OUT-S_KINGAKU+O_CNT(1) TO <F2>.
MOVE <F1> TO <F2>.

I_CNT = I_CNT - 1.
O_CNT = O_CNT - 1.
L_CNT = L_CNT + 1.
ASSIGN W_NUM+I_CNT(1) TO <F1>.
ENDFORM.
