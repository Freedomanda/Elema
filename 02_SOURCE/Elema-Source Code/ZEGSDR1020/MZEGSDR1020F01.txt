*&---------------------------------------------------------------------*
*&  Include           MZEGSDR1020F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SCR2000
*&---------------------------------------------------------------------*
*       伝票データリストの表示
*----------------------------------------------------------------------*
FORM display_scr2000 .
REFRESH: td_tradecommon,
td_zsegsd0004.

* A-2．データ抽出編集処理
* A-2-1．TradeCommonデータ取得
IF rb_1 = cns_sel.
*   選択画面のラジオボタン「Outbounde Delivery」が選択されている場合
PERFORM get_outbound_del_data CHANGING td_tradecommon.

ELSE.
*   選択画面のラジオボタン「External Data」が選択されている場合
PERFORM get_external_data CHANGING td_tradecommon.

ENDIF.

* A-2-2．テキスト取得
PERFORM get_text USING    td_tradecommon
CHANGING td_zsegsd0004.

* A-2-3．データ編集
SORT td_zsegsd0004 BY vstel           ASCENDING
wadat           ASCENDING
z_ship_to_party ASCENDING
vbeln           ASCENDING.

* A-3．画面出力
* A-3-1．データの一覧出力
PERFORM display_alv USING td_zsegsd0004.

ENDFORM.                    " DISPLAY_SCR2000

*&---------------------------------------------------------------------*
*&      Form  INIT_PROCESS_1000
*&---------------------------------------------------------------------*
*       選択画面1000の初期処理
*----------------------------------------------------------------------*
FORM init_process_1000 .
DATA: lw_vstel   TYPE tvst-vstel,
lst_shippt LIKE LINE OF s_shippt,
lrd_werks  TYPE range_t_werks,
ltd_shippt TYPE RANGE OF likp-vstel.

**** START ADD 2015/01/30 ISID11 ****
IF sy-dynnr = 1000.

SET PF-STATUS 'STT_1000'.
SET TITLEBAR 'TTB_1000'.

ENDIF.
**** END ADD 2015/01/30 ISID11 ****

**** START ADD 2015/05/08 ISID17 ****
*  IF SY-DYNNR = 8000.
IF sy-dynnr = 1000.
**** END ADD 2015/05/08 ISID17 ****

lrd_werks = s_plant[].

*   A-1-1．入力チェック
*   A-1-1-1．プラントコード存在チェック
*   A-1-2-1．プラントの権限チェック
CALL FUNCTION 'ZEG_ZZ_RNGWERKS_CHK'
EXPORTING
*       IMPWERKS                 =
imprngwerks              = lrd_werks
*     IMPORTING
*       EXPWERKS                 =
*       EXPTABRET                =
EXCEPTIONS
werks_not_exist          = 1
werks_no_authority       = 2
OTHERS                   = 3
.

IF sy-subrc <> 0.

SET CURSOR FIELD cns_scr1000_plt.

MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.

ENDIF.

ENDIF.

**** START ADD 2015/05/08 ISID17 ****
*  IF SY-DYNNR = 8000.
IF sy-dynnr = 1000.
**** END ADD 2015/05/08 ISID17 ****

ltd_shippt = s_shippt[].

ELSEIF sy-dynnr = 3101.

ltd_shippt = s_shpptr[].

ENDIF.

* A-1-1-2．出荷ポイント存在チェック
SELECT vstel
UP TO 1 ROWS
INTO lw_vstel
FROM tvst
WHERE vstel IN ltd_shippt.
ENDSELECT.

IF sy-subrc <> 0.
READ TABLE ltd_shippt INTO lst_shippt INDEX 1.

**** START ADD 2015/05/08 ISID17 ****
*  IF SY-DYNNR = 8000.
IF sy-dynnr = 1000.
**** END ADD 2015/05/08 ISID17 ****

SET CURSOR FIELD cns_scr1000_sppt.

MESSAGE e005(zmegsd01) WITH lst_shippt-low.

ELSEIF sy-dynnr = 3101.

w_leave_flg = cns_sel.

MESSAGE i005(zmegsd01) WITH lst_shippt-low
DISPLAY LIKE cns_msgty_err.

RETURN.

ENDIF.

ENDIF.

ENDFORM.                    " INIT_PROCESS_1000

*&---------------------------------------------------------------------*
*&      Form  GET_OUTBOUND_DEL_DATA
*&---------------------------------------------------------------------*
*       選択画面のラジオボタン「Outbounde Delivery」が
*       選択されている場合、TradeCommonデータの取得
*----------------------------------------------------------------------*
*      <--O_TD_TRADECOMMON  ラジオボタン「Outbounde Delivery」
*                           のTradeCommonデータ内部テーブル
*----------------------------------------------------------------------*
FORM get_outbound_del_data CHANGING o_td_tradecommon
TYPE typ_td_tradecommon.
DATA:
lst_likp        TYPE typ_td_likp,
lst_ztegsdt001  TYPE typ_td_ztegsdt001,
lst_ztegsdt003  TYPE typ_td_ztegsdt003,
lst_ztegsdt004  TYPE typ_td_ztegsdt004,
lst_tradecommon TYPE typ_td_ztegsdt001,
ltd_likp        TYPE STANDARD TABLE OF typ_td_likp,   "ITAB:出荷伝票
*   ITAB:TradeCommonデータ
ltd_ztegsdt001  TYPE STANDARD TABLE OF typ_td_ztegsdt001,
*   ITAB:SI(Header)
ltd_ztegsdt003  TYPE STANDARD TABLE OF typ_td_ztegsdt003,
ltd_ztegsdt004  TYPE STANDARD TABLE OF typ_td_ztegsdt004.

***** 2016/04/27  ISID18 DEL START *****
*  SELECT vstel
*         wadat
*         kunag
*         kunnr
*         vbeln
*         erdat
*         ernam
*    FROM likp
*    INTO TABLE ltd_likp
*   WHERE vstel IN s_shippt
*     AND wadat IN s_planed
*     AND kunnr IN s_shipto
*     AND vbeln IN s_outbd
*     AND kunag IN s_soldto.
***** 2016/04/27  ISID18 DEL END *****
***** 2016/04/27  ISID18 ADD START *****
IF S_INVNO IS INITIAL.
SELECT vstel
wadat
kunag
kunnr
vbeln
erdat
ernam
FROM likp
INTO TABLE ltd_likp
WHERE vstel IN s_shippt
AND wadat IN s_planed
AND kunnr IN s_shipto
AND vbeln IN s_outbd
AND kunag IN s_soldto.
ELSE.
SELECT
A~VSTEL
A~WADAT
A~KUNAG
A~KUNNR
A~VBELN
A~ERDAT
A~ERNAM
FROM LIKP AS A
INNER JOIN ZTEGSDT001 AS B
ON A~VBELN = B~VBELN
INTO TABLE LTD_LIKP
WHERE A~VSTEL IN S_SHIPPT
AND A~WADAT IN S_PLANED
AND A~KUNNR IN S_SHIPTO
AND A~VBELN IN S_OUTBD
AND A~KUNAG IN S_SOLDTO
AND B~Z_INVOICE_NO IN S_INVNO.
ENDIF.
***** 2016/04/27  ISID18 ADD END *****

IF sy-subrc <> 0.
MESSAGE s006(zmegsd01) WITH cns_likp DISPLAY LIKE cns_msgty_err.
**** START UPD 2015/01/30 ISID11 ****
*    LEAVE SCREEN.
LEAVE LIST-PROCESSING.
**** END UPD 2015/01/30 ISID11 ****
ELSE.

SELECT vbeln
erdat
z_source_type
z_invoice_no
z_invoice_date
z_status_invoice
z_cust_bt
z_cust_name_bt
z_address1_bt
z_address2_bt
**** START ADD 2014/12/23 ISID11 ****
z_address3_bt
z_address4_bt
**** END ADD 2014/12/23 ISID11 ****
z_attn_bt
z_tel_bt
z_fax_bt
z_cust_st
z_cust_name_st
z_address1_st
z_address2_st
**** START ADD 2014/12/23 ISID11 ****
z_address3_st
z_address4_st
**** END ADD 2014/12/23 ISID11 ****
z_attn_st
z_tel_st
z_fax_st
z_shipped_per
z_on_or_about
z_trade_from
z_trade_to
z_trade_via
**** START UPD 2015/02/11 ISID11 ****
*           Z_TRADE_PAYMENT
zterm
**** END UPD 2015/02/11 ISID11 ****
z_trade_term
z_inv_remarks1
z_inv_remarks2
z_inv_remarks3
z_inv_remarks4
z_inv_remarks5
z_casemark1
z_casemark2
z_casemark3
z_casemark4
z_casemark5
**** START ADD 2015/08/11 ISID21 ****
z_casemark6
z_casemark7
z_casemark8
z_casemark9
z_casemark10
**** END ADD 2015/08/11 ISID21 ****
z_cre_ymd_inv
z_cre_hms_inv
z_cre_userid_inv
z_mod_ymd_inv
z_mod_hms_inv
z_mod_userid_inv
FROM ztegsdt001
INTO TABLE ltd_ztegsdt001
FOR ALL ENTRIES IN ltd_likp
WHERE vbeln            = ltd_likp-vbeln
AND erdat            = ltd_likp-erdat.
**** START DEL 2015/01/31 ISID11 ****
*       AND Z_SOURCE_TYPE    = CNS_SRC_TYPE_1
**** END DEL 2015/01/31 ISID11 ****
**** START DEL 2015/02/05 ISID11 ****
*       AND Z_STATUS_INVOICE IN S_STATUS
*       AND Z_INVOICE_NO     IN S_INVNO
*       AND Z_INVOICE_DATE   IN S_INVDT
*       AND Z_CUST_NAME_BT   IN S_BTC
*       AND Z_CUST_NAME_ST   IN S_STC
*       AND Z_SHIPPED_PER    IN S_SHPPER
*       AND Z_CRE_YMD_INV    IN S_CRTEDT
*       AND Z_CRE_HMS_INV    IN S_CRTETM
*       AND Z_CRE_USERID_INV IN S_CRTEUS
*       AND Z_MOD_YMD_INV    IN S_MDFDT
*       AND Z_MOD_HMS_INV    IN S_MDFTM
*       AND Z_MOD_USERID_INV IN S_MDFUSR.
**** END DEL 2015/02/05 ISID11 ****

IF ltd_ztegsdt001 IS NOT INITIAL.

SELECT z_invoice_no
z_si_no
FROM ztegsdt004
INTO TABLE ltd_ztegsdt004
FOR ALL ENTRIES IN ltd_ztegsdt001
WHERE z_invoice_no = ltd_ztegsdt001-z_invoice_no.

IF ltd_ztegsdt004 IS NOT INITIAL.

SELECT z_si_no
z_bl_date
FROM ztegsdt003
INTO TABLE ltd_ztegsdt003
WHERE z_si_no   IN s_sino
AND z_bl_date IN s_bldate.

ENDIF.

ENDIF.

*   A-2-3-1．【選択画面のラジオボタン「Outbounde Delivery」
*             が選択されている場合】
LOOP AT ltd_likp INTO lst_likp.

CLEAR: lst_ztegsdt001.

SORT ltd_ztegsdt001 BY vbeln ASCENDING
erdat ASCENDING.

READ TABLE ltd_ztegsdt001 INTO lst_ztegsdt001
WITH KEY vbeln = lst_likp-vbeln
erdat = lst_likp-erdat
BINARY SEARCH.

MOVE-CORRESPONDING lst_ztegsdt001 TO lst_tradecommon.

**** START ADD 2015/01/31 ISID11 ****
*     Source Type
IF lst_tradecommon-z_source_type IS INITIAL.

lst_tradecommon-z_source_type = cns_src_type_1.

ENDIF.
**** END ADD 2015/01/31 ISID11 ****

**** START ADD 2015/02/27 ISID11 ****
*     Outbound以外対象削除
IF lst_tradecommon-z_source_type <> cns_src_type_1.

CONTINUE.

ENDIF.
**** END ADD 2015/02/27 ISID11 ****

lst_tradecommon-vstel     = lst_likp-vstel.

lst_tradecommon-wadat     = lst_likp-wadat.

lst_tradecommon-kunag     = lst_likp-kunag.

lst_tradecommon-kunnr     = lst_likp-kunnr.

lst_tradecommon-vbeln     = lst_likp-vbeln.

lst_tradecommon-erdat     = lst_likp-erdat.

lst_tradecommon-ernam     = lst_likp-ernam.

CLEAR: lst_ztegsdt004.

SORT ltd_ztegsdt004 BY z_invoice_no ASCENDING.

READ TABLE ltd_ztegsdt004 INTO lst_ztegsdt004
WITH KEY z_invoice_no = lst_ztegsdt001-z_invoice_no
BINARY SEARCH.

CLEAR: lst_ztegsdt003.

SORT ltd_ztegsdt003 BY z_si_no ASCENDING.

READ TABLE ltd_ztegsdt003 INTO lst_ztegsdt003
WITH KEY z_si_no = lst_ztegsdt004-z_si_no
BINARY SEARCH.

**** START ADD 2015/02/05 ISID11 ****
IF ( s_sino IS NOT INITIAL OR
s_bldate IS NOT INITIAL ) AND
sy-subrc <> 0.

CONTINUE.

ENDIF.
**** END ADD 2015/02/05 ISID11 ****

lst_tradecommon-z_si_no   = lst_ztegsdt003-z_si_no.

lst_tradecommon-z_bl_date = lst_ztegsdt003-z_bl_date.

APPEND lst_tradecommon TO o_td_tradecommon.

CLEAR: lst_tradecommon.

ENDLOOP.

**** START ADD 2015/01/31 ISID11 ****
DELETE o_td_tradecommon
WHERE NOT
( z_status_invoice IN s_status
AND z_invoice_no     IN s_invno
AND z_invoice_date   IN s_invdt
AND z_cust_name_bt   IN s_btc
AND z_cust_name_st   IN s_stc
AND z_shipped_per    IN s_shpper
AND z_cre_ymd_inv    IN s_crtedt
AND z_cre_hms_inv    IN s_crtetm
AND z_cre_userid_inv IN s_crteus
AND z_mod_ymd_inv    IN s_mdfdt
AND z_mod_hms_inv    IN s_mdftm
AND z_mod_userid_inv IN s_mdfusr
AND z_si_no   IN s_sino
AND z_bl_date IN s_bldate ).

IF o_td_tradecommon IS INITIAL.
MESSAGE s006(zmegsd01) WITH cns_ztegsdt001
DISPLAY LIKE cns_msgty_err.
LEAVE LIST-PROCESSING.
ENDIF.
**** END ADD 2015/01/31 ISID11 ****

SORT o_td_tradecommon BY vbeln ASCENDING erdat ASCENDING.

*   出荷伝票、レコード登録日で重複エントリを除外する
DELETE ADJACENT DUPLICATES FROM o_td_tradecommon
COMPARING vbeln erdat.
ENDIF.

ENDFORM.                    " GET_OUTBOUND_DEL_DATA

*&---------------------------------------------------------------------*
*&      Form  GET_EXTERNAL_DATA
*&---------------------------------------------------------------------*
*       選択画面のラジオボタン「External Data」が選択されている場合、
*       TradeCommonデータの取得
*----------------------------------------------------------------------*
*      <--O_TD_TRADECOMMON  ラジオボタン「External Data」
*                           のTradeCommonデータ内部テーブル
*----------------------------------------------------------------------*
FORM get_external_data CHANGING o_td_tradecommon
TYPE typ_td_tradecommon.
DATA:
lst_tradecommon TYPE typ_td_ztegsdt001,
lst_ztegsdt001  TYPE typ_td_ztegsdt001,
lst_ztegsdt003  TYPE typ_td_ztegsdt003,
lst_ztegsdt004  TYPE typ_td_ztegsdt004,
lst_ztegsdt010  TYPE typ_td_ztegsdt001,
ltd_ztegsdt001  TYPE STANDARD TABLE OF typ_td_ztegsdt001,
ltd_ztegsdt003  TYPE STANDARD TABLE OF typ_td_ztegsdt003,
ltd_ztegsdt004  TYPE STANDARD TABLE OF typ_td_ztegsdt004,
ltd_ztegsdt010  TYPE STANDARD TABLE OF typ_td_ztegsdt001.

SELECT vbeln
erdat
vstel
wadat
kunnr
vbeln
kunag
ernam
FROM ztegsdt010
INTO CORRESPONDING FIELDS OF TABLE ltd_ztegsdt010
WHERE vstel IN s_shippt
AND wadat IN s_planed
AND kunnr IN s_shipto
AND vbeln IN s_outbd
AND kunag IN s_soldto.

IF sy-subrc <> 0.
MESSAGE s006(zmegsd01) WITH cns_ztegsdt010
DISPLAY LIKE cns_msgty_err.
**** START UPD 2015/01/30 ISID11 ****
*    LEAVE SCREEN.
LEAVE LIST-PROCESSING.
**** END UPD 2015/01/30 ISID11 ****
ELSE.

SELECT vbeln
erdat
z_source_type
z_status_invoice
z_invoice_no
z_invoice_date
z_cust_name_bt
z_cust_name_st
z_shipped_per
z_cre_ymd_inv
z_cre_hms_inv
z_cre_userid_inv
z_mod_ymd_inv
z_mod_hms_inv
z_mod_userid_inv
z_cust_bt
z_address1_bt
z_address2_bt
**** START ADD 2014/12/23 ISID11 ****
z_address3_bt
z_address4_bt
**** END ADD 2014/12/23 ISID11 ****
z_attn_bt
z_tel_bt
z_fax_bt
z_cust_st
z_address1_st
z_address2_st
**** START ADD 2014/12/23 ISID11 ****
z_address3_st
z_address4_st
**** END ADD 2014/12/23 ISID11 ****
z_attn_st
z_tel_st
z_fax_st
z_on_or_about
z_trade_from
z_trade_to
z_trade_via
**** START UPD 2015/02/11 ISID11 ****
*           Z_TRADE_PAYMENT
zterm
**** END UPD 2015/02/11 ISID11 ****
z_trade_term
z_inv_remarks1
z_inv_remarks2
z_inv_remarks3
z_inv_remarks4
z_inv_remarks5
z_casemark1
z_casemark2
z_casemark3
z_casemark4
z_casemark5
**** START ADD 2015/08/11 ISID21 ****
z_casemark6
z_casemark7
z_casemark8
z_casemark9
z_casemark10
**** END ADD 2015/08/11 ISID21 ****
FROM ztegsdt001
INTO CORRESPONDING FIELDS OF TABLE ltd_ztegsdt001
FOR ALL ENTRIES IN ltd_ztegsdt010
WHERE vbeln            = ltd_ztegsdt010-vbeln
AND erdat            = ltd_ztegsdt010-erdat.
**** START DEL 2015/01/31 ISID11 ****
*        AND Z_SOURCE_TYPE    = CNS_SRC_TYPE_2
**** END DEL 2015/01/31 ISID11 ****
**** START DEL 2015/02/05 ISID11 ****
*        AND Z_STATUS_INVOICE IN S_STATUS
*        AND Z_INVOICE_NO     IN S_INVNO
*        AND Z_INVOICE_DATE   IN S_INVDT
*        AND Z_CUST_NAME_BT   IN S_BTC
*        AND Z_CUST_NAME_ST   IN S_STC
*        AND Z_SHIPPED_PER    IN S_SHPPER
*        AND Z_CRE_YMD_INV    IN S_CRTEDT
*        AND Z_CRE_HMS_INV    IN S_CRTETM
*        AND Z_CRE_USERID_INV IN S_CRTEUS
*        AND Z_MOD_YMD_INV    IN S_MDFDT
*        AND Z_MOD_HMS_INV    IN S_MDFTM
*        AND Z_MOD_USERID_INV IN S_MDFUSR.
**** END DEL 2015/02/05 ISID11 ****

IF ltd_ztegsdt001 IS NOT INITIAL.

SELECT z_invoice_no
z_si_no
FROM ztegsdt004
INTO TABLE ltd_ztegsdt004
FOR ALL ENTRIES IN ltd_ztegsdt001
WHERE z_invoice_no = ltd_ztegsdt001-z_invoice_no.

IF ltd_ztegsdt004 IS NOT INITIAL.

SELECT z_si_no
z_bl_date
FROM ztegsdt003
INTO TABLE ltd_ztegsdt003
WHERE z_si_no   IN s_sino
AND z_bl_date IN s_bldate.

ENDIF.

ENDIF.

*   A-2-3-2．【選択画面のラジオボタン「External Data」
*             が選択されている場合】
LOOP AT ltd_ztegsdt010 INTO lst_ztegsdt010.

CLEAR: lst_ztegsdt001.

SORT ltd_ztegsdt001 BY vbeln ASCENDING
erdat ASCENDING.

READ TABLE ltd_ztegsdt001 INTO lst_ztegsdt001
WITH KEY vbeln = lst_ztegsdt010-vbeln
erdat = lst_ztegsdt010-erdat
BINARY SEARCH.

MOVE-CORRESPONDING lst_ztegsdt001 TO lst_tradecommon.

**** START ADD 2015/01/31 ISID11 ****
*   Source Type
IF lst_tradecommon-z_source_type IS INITIAL.

lst_tradecommon-z_source_type = cns_src_type_2.

ENDIF.
**** END ADD 2015/01/31 ISID11 ****

**** START ADD 2015/02/27 ISID11 ****
*     External以外対象削除
IF lst_tradecommon-z_source_type <> cns_src_type_2.

CONTINUE.

ENDIF.
**** END ADD 2015/02/27 ISID11 ****

lst_tradecommon-vbeln = lst_ztegsdt010-vbeln.

lst_tradecommon-erdat = lst_ztegsdt010-erdat.

lst_tradecommon-vstel = lst_ztegsdt010-vstel.

lst_tradecommon-wadat = lst_ztegsdt010-wadat.

lst_tradecommon-kunnr = lst_ztegsdt010-kunnr.

lst_tradecommon-kunag = lst_ztegsdt010-kunag.

lst_tradecommon-ernam = lst_ztegsdt010-ernam.

CLEAR: lst_ztegsdt004.

SORT ltd_ztegsdt004 BY z_invoice_no ASCENDING.

READ TABLE ltd_ztegsdt004 INTO lst_ztegsdt004
WITH KEY z_invoice_no = lst_ztegsdt001-z_invoice_no
BINARY SEARCH.

CLEAR: lst_ztegsdt003.

SORT ltd_ztegsdt003 BY z_si_no ASCENDING.

READ TABLE ltd_ztegsdt003 INTO lst_ztegsdt003
WITH KEY z_si_no = lst_ztegsdt004-z_si_no
BINARY SEARCH.

**** START ADD 2015/02/05 ISID11 ****
IF ( s_sino IS NOT INITIAL OR
s_bldate IS NOT INITIAL ) AND
sy-subrc <> 0.

CONTINUE.

ENDIF.
**** END ADD 2015/02/05 ISID11 ****

lst_tradecommon-z_si_no   = lst_ztegsdt003-z_si_no.

lst_tradecommon-z_bl_date = lst_ztegsdt003-z_bl_date.

APPEND lst_tradecommon TO o_td_tradecommon.

CLEAR: lst_tradecommon.

ENDLOOP.

**** START ADD 2015/01/31 ISID11 ****
DELETE o_td_tradecommon
WHERE NOT
( z_status_invoice IN s_status
AND z_invoice_no     IN s_invno
AND z_invoice_date   IN s_invdt
AND z_cust_name_bt   IN s_btc
AND z_cust_name_st   IN s_stc
AND z_shipped_per    IN s_shpper
AND z_cre_ymd_inv    IN s_crtedt
AND z_cre_hms_inv    IN s_crtetm
AND z_cre_userid_inv IN s_crteus
AND z_mod_ymd_inv    IN s_mdfdt
AND z_mod_hms_inv    IN s_mdftm
AND z_mod_userid_inv IN s_mdfusr
AND z_si_no   IN s_sino
AND z_bl_date IN s_bldate ).

IF o_td_tradecommon IS INITIAL.
MESSAGE s006(zmegsd01) WITH cns_ztegsdt001
DISPLAY LIKE cns_msgty_err.
LEAVE LIST-PROCESSING.
ENDIF.
**** END ADD 2015/01/31 ISID11 ****

SORT o_td_tradecommon BY vbeln ASCENDING erdat ASCENDING.

*   出荷伝票、レコード登録日で重複エントリを除外する
DELETE ADJACENT DUPLICATES FROM o_td_tradecommon
COMPARING vbeln erdat.

ENDIF.

ENDFORM.                    " GET_EXTERNAL_DATA

*&---------------------------------------------------------------------*
*&      Form  GET_TEXT
*&---------------------------------------------------------------------*
*       A-2-2．テキスト取得
*----------------------------------------------------------------------*
*      -->I_TD_TRADECOMMON     TradeCommonデータ
*      <--O_TD_ZSEGSD0004      ALV出力画面のデータ
*----------------------------------------------------------------------*
FORM get_text USING    i_td_tradecommon TYPE typ_td_tradecommon
CHANGING o_td_zsegsd0004  TYPE typ_td_zsegsd0004.

DATA:
*   Invoice Data Input ListのALV出力用内部テーブル
lst_zsegsd0004  TYPE zsegsd0004,
lst_tradecommon TYPE typ_td_ztegsdt001,
lst_kunnr       TYPE typ_td_kunnr,
ltd_kunnr       TYPE STANDARD TABLE OF typ_td_kunnr,
ltd_kunag       TYPE STANDARD TABLE OF typ_td_kunnr.

* A-2-2-1．出荷先名称取得
SELECT kunnr
name1
FROM kna1
INTO TABLE ltd_kunnr
FOR ALL ENTRIES IN i_td_tradecommon
WHERE kunnr = i_td_tradecommon-kunnr.

* A-2-2-2．受注先名称取得
SELECT kunnr
name1
FROM kna1
INTO TABLE ltd_kunag
FOR ALL ENTRIES IN i_td_tradecommon
WHERE kunnr = i_td_tradecommon-kunag.

LOOP AT i_td_tradecommon INTO lst_tradecommon.

MOVE-CORRESPONDING lst_tradecommon TO lst_zsegsd0004.

*   Sold-to party
lst_zsegsd0004-z_sold_to_party  = lst_tradecommon-kunag.

*   Ship-to party
lst_zsegsd0004-z_ship_to_party  = lst_tradecommon-kunnr.

*   Customer(Bill To)
lst_zsegsd0004-z_cust_billto    = lst_tradecommon-z_cust_bt.

*   Customer Name(Bill To)
lst_zsegsd0004-z_cust_name_bill = lst_tradecommon-z_cust_name_bt.

*   Address1(Bill To)
lst_zsegsd0004-z_address1_billt = lst_tradecommon-z_address1_bt.

*   Address2(Bill To)
lst_zsegsd0004-z_address2_billt = lst_tradecommon-z_address2_bt.

**** START ADD 2014/12/23 ISID11 ****
*   Address3(Bill To)
lst_zsegsd0004-z_address3_billt = lst_tradecommon-z_address3_bt.

*   Address4(Bill To)
lst_zsegsd0004-z_address4_billt = lst_tradecommon-z_address4_bt.
**** END ADD 2014/12/23 ISID11 ****

*   Attn(Bill To)
lst_zsegsd0004-z_attn_billto    = lst_tradecommon-z_attn_bt.

*   Tel(Bill To)
lst_zsegsd0004-z_tel_billto     = lst_tradecommon-z_tel_bt.

*   Fax(Bill To)
lst_zsegsd0004-z_fax_billto     = lst_tradecommon-z_fax_bt.

*   Customer(Ship To)
lst_zsegsd0004-z_cust_shipto    = lst_tradecommon-z_cust_st.

*   Customer Name(Ship To)
lst_zsegsd0004-z_cust_name_ship = lst_tradecommon-z_cust_name_st.

*   Address1(Ship To)
lst_zsegsd0004-z_address1_shipt = lst_tradecommon-z_address1_st.

*   Address2(Ship To)
lst_zsegsd0004-z_address2_shipt = lst_tradecommon-z_address2_st.

**** START ADD 2014/12/23 ISID11 ****
*   Address3(Ship To)
lst_zsegsd0004-z_address3_shipt = lst_tradecommon-z_address3_st.

*   Address4(Ship To)
lst_zsegsd0004-z_address4_shipt = lst_tradecommon-z_address4_st.
**** END ADD 2014/12/23 ISID11 ****

*   Attn(Ship To)
lst_zsegsd0004-z_attn_shipto    = lst_tradecommon-z_attn_st.

*   Tel(Ship To)
lst_zsegsd0004-z_tel_shipto     = lst_tradecommon-z_tel_st.

*   Fax(Ship To)
lst_zsegsd0004-z_fax_shipto     = lst_tradecommon-z_fax_st.

*   Remarks (1)
lst_zsegsd0004-z_inv_remark1    = lst_tradecommon-z_inv_remarks1.

*   Remarks (2)
lst_zsegsd0004-z_inv_remark2    = lst_tradecommon-z_inv_remarks2.

*   Remarks (3)
lst_zsegsd0004-z_inv_remark3    = lst_tradecommon-z_inv_remarks3.

*   Remarks (4)
lst_zsegsd0004-z_inv_remark4    = lst_tradecommon-z_inv_remarks4.

*   Remarks (5)
lst_zsegsd0004-z_inv_remark5    = lst_tradecommon-z_inv_remarks5.

*   Create Date
lst_zsegsd0004-z_cre_ymd_invoic = lst_tradecommon-z_cre_ymd_inv.

*   Create Time
lst_zsegsd0004-z_cre_hms_invoic = lst_tradecommon-z_cre_hms_inv.

*   Modify Date
lst_zsegsd0004-z_mod_ymd_invoic = lst_tradecommon-z_mod_ymd_inv.

*   Modify Time
lst_zsegsd0004-z_mod_hms_invoic = lst_tradecommon-z_mod_hms_inv.

CLEAR: lst_kunnr.

SORT ltd_kunnr BY kunnr ASCENDING.

READ TABLE ltd_kunnr INTO lst_kunnr
WITH KEY kunnr = lst_tradecommon-kunnr
BINARY SEARCH.

*   Ship-to party Name
lst_zsegsd0004-z_ship_to_name = lst_kunnr-name1.

CLEAR: lst_kunnr.

SORT ltd_kunag BY kunnr ASCENDING.

READ TABLE ltd_kunag INTO lst_kunnr
WITH KEY kunnr = lst_tradecommon-kunag
BINARY SEARCH.

*   Sold-to party Name
lst_zsegsd0004-z_sold_to_name = lst_kunnr-name1.

APPEND lst_zsegsd0004 TO o_td_zsegsd0004.

CLEAR: lst_zsegsd0004.

ENDLOOP.

* ShippingPt、Planed GI、Ship-to partyとOutbound Deliveryの
* 昇順でソートする
SORT o_td_zsegsd0004 BY vstel           ASCENDING
wadat           ASCENDING
z_ship_to_party ASCENDING
vbeln           ASCENDING.

ENDFORM.                    " GET_TEXT

*&---------------------------------------------------------------------*
*&      Form  SET_STATUS
*&---------------------------------------------------------------------*
*       Invoice Data Input（List）ALV画面のステータスの設定
*----------------------------------------------------------------------*
*      -->I_TD_EXTAB     EXCLUDING テーブル
*----------------------------------------------------------------------*
FORM set_status USING i_td_extab TYPE slis_t_extab.

REFRESH: i_td_extab.

SET PF-STATUS 'STT_2000' EXCLUDING i_td_extab.
SET TITLEBAR 'TTB_2000'.

ENDFORM.                    " SET_STATUS

*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV
*&---------------------------------------------------------------------*
*       A-3-1．データの一覧出力
*----------------------------------------------------------------------*
*      -->I_TD_ZSEGSD0004     ALV出力用テーブル
*----------------------------------------------------------------------*
FORM display_alv USING i_td_zsegsd0004 TYPE typ_td_zsegsd0004.

* fielcat 属性の設定
DATA: lst_fieldcat TYPE lvc_s_fcat,
lst_layout   TYPE lvc_s_layo,     "slis_layout_alv
ltd_fieldcat TYPE lvc_t_fcat,     "ALV fieldcat 属性の設定
lw_idx       TYPE sy-tabix,
lst_vari     TYPE disvariant,
lw_save(1)   TYPE c.

CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
EXPORTING
*     I_BUFFER_ACTIVE        =
i_structure_name       = cns_alv_str
*     I_CLIENT_NEVER_DISPLAY = 'X'
*     I_BYPASSING_BUFFER     =
*     I_INTERNAL_TABNAME     =
CHANGING
ct_fieldcat            = ltd_fieldcat
EXCEPTIONS
inconsistent_interface = 1
program_error          = 2
OTHERS                 = 3.

IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE cns_msgty_nor NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
DISPLAY LIKE cns_msgty_err.

**** START UPD 2015/01/30 ISID11 ****
*    LEAVE SCREEN.
LEAVE LIST-PROCESSING.
**** END UPD 2015/01/30 ISID11 ****

ENDIF.

* チェックボックスの設定
LOOP AT ltd_fieldcat INTO lst_fieldcat.

lw_idx = sy-tabix.

IF lw_idx = 1.
lst_fieldcat-checkbox = cns_sel.
lst_fieldcat-no_out   = cns_sel.
ENDIF.

lst_fieldcat-coltext = lst_fieldcat-scrtext_l.

**** START UPD 2015/02/11 ISID11 ****
*    IF LW_IDX = 14.
*      LST_FIELDCAT-COLTEXT = LST_FIELDCAT-SCRTEXT_S.
*    ENDIF.
CASE lst_fieldcat-fieldname.
WHEN 'TRADEDOCTYPE'.

lst_fieldcat-no_out = 'X'.

WHEN 'Z_STATUS_INVOICE'.

lst_fieldcat-coltext = lst_fieldcat-scrtext_s.

WHEN OTHERS.

ENDCASE.
**** END UPD 2015/02/11 ISID11 ****

MODIFY ltd_fieldcat FROM lst_fieldcat INDEX lw_idx.

ENDLOOP.

* LAYOUT の設定
lst_layout-cwidth_opt = cns_sel.
lst_layout-zebra      = cns_sel.
lst_layout-box_fname  = cns_chkbx.

* バリアントなど の設定
lw_save          = cns_save_a.
lst_vari-variant = p_layout.
lst_vari-report  = sy-repid.

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
EXPORTING
*     I_INTERFACE_CHECK                 = ' '
*     I_BYPASSING_BUFFER                =
*     I_BUFFER_ACTIVE                   =
i_callback_program                = sy-repid
i_callback_pf_status_set          = cns_pf_st_2000
i_callback_user_command           = cns_user_cmd_2000
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*      i_structure_name                  = cns_alv_str
*     I_BACKGROUND_ID                   = ' '
*     I_GRID_TITLE                      =
*     I_GRID_SETTINGS                   =
is_layout_lvc                     = lst_layout
it_fieldcat_lvc                   = ltd_fieldcat
*     IT_EXCLUDING                      =
*     IT_SPECIAL_GROUPS_LVC             =
*     IT_SORT_LVC                       =
*     it_filter_lvc                     =
*     IT_HYPERLINK                      =
*     IS_SEL_HIDE                       =
*     I_DEFAULT                         = 'X'
i_save                            = lw_save
is_variant                        = lst_vari
*     IT_EVENTS                         =
*     IT_EVENT_EXIT                     =
*     IS_PRINT_LVC                      =
*     IS_REPREP_ID_LVC                  =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE                 = 0
*     I_HTML_HEIGHT_TOP                 =
*     I_HTML_HEIGHT_END                 =
*     IT_ALV_GRAPHICS                   =
*     IT_EXCEPT_QINFO_LVC               =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
TABLES
t_outtab                          = i_td_zsegsd0004
EXCEPTIONS
program_error                     = 1
OTHERS                            = 2
.

IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE cns_msgty_nor NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
DISPLAY LIKE cns_msgty_err.

**** START UPD 2015/01/30 ISID11 ****
*    LEAVE SCREEN.
LEAVE LIST-PROCESSING.
**** END UPD 2015/01/30 ISID11 ****

ENDIF.

ENDFORM.                    " DISPLAY_ALV

*&---------------------------------------------------------------------*
*&      Form  USER_COMMAND
*&---------------------------------------------------------------------*
*       Invoice Data Input（List）ALV画面の事件
*----------------------------------------------------------------------*
*      -->I_W_UCOMM         機能コード
*      -->I_ST_SELFIELD     ALV項目情報
*----------------------------------------------------------------------*
FORM user_command USING i_w_ucomm     TYPE sy-ucomm
i_st_selfield TYPE slis_selfield.

CASE i_w_ucomm.
WHEN cns_ucom_header.

CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
IMPORTING
e_grid = wo_guid.

*     A-4-1．「Header」ボタン押下時の処理
PERFORM check_input_2000.

*     B-2．データ抽出編集処理
PERFORM get_data_scr3000.

*     B-3-1．データの単票出力
CALL SCREEN 3000.

WHEN cns_scr2000_all.
i_st_selfield-refresh = 'X'.

PERFORM sel_all_2000 USING cns_sel.

WHEN cns_scr2000_sal.
i_st_selfield-refresh = 'X'.

PERFORM sel_all_2000 USING space.

WHEN cns_ucom_bak2000 OR cns_ucom_ext2000 OR cns_ucom_cal2000.
w_save_ok = i_w_ucomm.

LEAVE TO SCREEN 0.

WHEN OTHERS.
ENDCASE.

ENDFORM.                    " SET_STATUS

*&---------------------------------------------------------------------*
*&      Form  CHECK_INPUT_2000
*&---------------------------------------------------------------------*
*       Invoice Data Input（List）ALV画面のチェック処理
*----------------------------------------------------------------------*
FORM check_input_2000 .
DATA: lw_cnt          TYPE i,
lst_zsegsd0004  TYPE zsegsd0004,
ltd_zsegsd0004  TYPE STANDARD TABLE OF zsegsd0004.
*        LO_GUID         TYPE REF TO CL_GUI_ALV_GRID.

* A-4-1-1．行選択のチェック処理
CALL METHOD wo_guid->check_changed_data.

ltd_zsegsd0004 = td_zsegsd0004.

DELETE ltd_zsegsd0004 WHERE z_chk <> cns_sel.

DESCRIBE TABLE ltd_zsegsd0004 LINES lw_cnt.

IF lw_cnt = 0.
*   行が選択されていない場合
MESSAGE e008(zmegsd01).
ELSEIF lw_cnt > 1.
*   行のチェックが複数選択されている場合
MESSAGE e007(zmegsd01).
ENDIF.

CLEAR: st_zsegsd0004,
lst_zsegsd0004.

REFRESH: ltd_zsegsd0004.

ltd_zsegsd0004 = td_zsegsd0004.

SORT ltd_zsegsd0004 BY z_chk ASCENDING.

READ TABLE ltd_zsegsd0004 INTO lst_zsegsd0004 WITH KEY z_chk = cns_sel
BINARY SEARCH.

**** START ADD 2015/02/11 ISID11 ****
CALL FUNCTION 'ENQUEUE_EZZTEGSDT001'
EXPORTING
mode_ztegsdt001 = cns_enqmode_e
vbeln           = lst_zsegsd0004-vbeln
erdat           = lst_zsegsd0004-erdat
EXCEPTIONS
foreign_lock    = 1
system_failure  = 2
OTHERS          = 3.
IF sy-subrc <> 0.

MESSAGE e080(zmegsd01) WITH sy-msgv1.
*   対象の伝票は、別のユーザが編集中です。（USER = &1）

ENDIF.
**** END ADD 2015/02/11 ISID11 ****

* A-4-1-2．「Invoice Data Input（Header）」画面への画面遷移
*           引渡しパラメータ

* Source Type
st_zsegsd0004-z_source_type    = lst_zsegsd0004-z_source_type.

* Outbound Delivery
st_zsegsd0004-vbeln            = lst_zsegsd0004-vbeln.

* Created on
st_zsegsd0004-erdat            = lst_zsegsd0004-erdat.

* ShippingPt
st_zsegsd0004-vstel            = lst_zsegsd0004-vstel.

* Planed GI
st_zsegsd0004-wadat            = lst_zsegsd0004-wadat.

* Sold-to party
st_zsegsd0004-z_sold_to_party  = lst_zsegsd0004-z_sold_to_party.

* Sold-to party Name
st_zsegsd0004-z_sold_to_name   = lst_zsegsd0004-z_sold_to_name.

* Ship-to party
st_zsegsd0004-z_ship_to_party  = lst_zsegsd0004-z_ship_to_party.

* Ship-to party Name
st_zsegsd0004-z_ship_to_name   = lst_zsegsd0004-z_ship_to_name.

* そのた項目の引継ぐ
* Check Box
st_zsegsd0004-z_chk            = lst_zsegsd0004-z_chk.

* Creat By
st_zsegsd0004-ernam            = lst_zsegsd0004-ernam.

* Status
st_zsegsd0004-z_status_invoice = lst_zsegsd0004-z_status_invoice.

* システム日付（SY-DATUM）
st_zsegsd0004-z_cre_ymd_invoic = lst_zsegsd0004-z_cre_ymd_invoic.

* システム時刻（SY-UZEIT）
st_zsegsd0004-z_cre_hms_invoic = lst_zsegsd0004-z_cre_hms_invoic.

* システムユーザ（SY-UNAME）
st_zsegsd0004-z_cre_userid_inv = lst_zsegsd0004-z_cre_userid_inv.

* システム日付（SY-DATUM）
st_zsegsd0004-z_mod_ymd_invoic = lst_zsegsd0004-z_mod_ymd_invoic.

* システム時刻（SY-UZEIT）
st_zsegsd0004-z_mod_hms_invoic = lst_zsegsd0004-z_mod_hms_invoic.

* システムユーザ（SY-UNAME）
st_zsegsd0004-z_mod_userid_inv = lst_zsegsd0004-z_mod_userid_inv.

ENDFORM.                    " CHECK_INPUT_2000

*&---------------------------------------------------------------------*
*&      Form  GET_DATA_SCR3000
*&---------------------------------------------------------------------*
*       B-2．データ抽出編集処理
*----------------------------------------------------------------------*
FORM get_data_scr3000 .
DATA: lst_scr3000       TYPE typ_td_scr3000,
lw_source_type(1) TYPE c.

CLEAR: w_upd_ins_flg,
**** START ADD 2015/02/11 ISID11 ****
w_invoice_flg,
**** END ADD 2015/02/11 ISID11 ****
st_zsegsd0004_ini.

IF rb_1 = cns_sel.

lw_source_type = cns_src_type_1.

ELSEIF rb_2 = cns_sel.

lw_source_type = cns_src_type_2.

ENDIF.

* B-2-1．Invoiceデータ取得
SELECT SINGLE z_invoice_no
z_invoice_date
z_cust_bt
z_cust_name_bt
z_address1_bt
z_address2_bt
**** START ADD 2014/12/23 ISID11 ****
z_address3_bt
z_address4_bt
**** END ADD 2014/12/23 ISID11 ****
z_attn_bt
z_tel_bt
z_fax_bt
z_cust_st
z_cust_name_st
z_address1_st
z_address2_st
**** START ADD 2014/12/23 ISID11 ****
z_address3_st
z_address4_st
**** END ADD 2014/12/23 ISID11 ****
z_attn_st
z_tel_st
z_fax_st
z_shipped_per
z_on_or_about
z_trade_from
z_trade_to
z_trade_via
**** START UPD 2015/02/11 ISID11 ****
*                Z_TRADE_PAYMENT
zterm
**** END UPD 2015/02/11 ISID11 ****
z_trade_term
z_inv_remarks1
z_inv_remarks2
z_inv_remarks3
z_inv_remarks4
z_inv_remarks5
z_casemark1
z_casemark2
z_casemark3
z_casemark4
z_casemark5
**** START ADD 2015/08/11 ISID21 ****
z_casemark6
z_casemark7
z_casemark8
z_casemark9
z_casemark10
**** END ADD 2015/08/11 ISID21 ****
**** START ADD BY ISID REN 2015/06/04 ****
z_cre_ymd_inv     "登録年月日（INVOICE）
z_cre_hms_inv     "登録時分秒（INVOICE）
z_cre_userid_inv  "登録ユーザ（INVOICE）
**** END ADD BY ISID REN 2015/06/04 ****
FROM ztegsdt001
INTO lst_scr3000
WHERE vbeln         = st_zsegsd0004-vbeln
AND erdat         = st_zsegsd0004-erdat.

IF sy-subrc <> 0.

w_upd_ins_flg = cns_sel.

**** START ADD 2015/02/11 ISID11 ****
w_invoice_flg = cns_sel.
**** END ADD 2015/02/11 ISID11 ****

ELSE.
*   画面3000で保存ボタン押下したあと、テーブル「ZTEGSDT001」には、
*   データを更新した場合、Source Type必ず値があり、

IF rb_1 = cns_sel.

st_zsegsd0004-z_source_type = cns_src_type_1.

ELSEIF rb_2 = cns_sel.

st_zsegsd0004-z_source_type = cns_src_type_2.

ENDIF.
**** START ADD 2015/02/11 ISID11 ****
IF lst_scr3000-z_invoice_no IS INITIAL.

w_invoice_flg = cns_sel.

ENDIF.
**** END ADD 2015/02/11 ISID11 ****
ENDIF.

* INVOICE No
st_zsegsd0004-z_invoice_no     = lst_scr3000-z_invoice_no.

* INVOICE Date
st_zsegsd0004-z_invoice_date   = lst_scr3000-z_invoice_date.

* Cutomer(Bill To)
st_zsegsd0004-z_cust_billto    = lst_scr3000-z_cust_bt.

* Cutomer Name(Bill To)
st_zsegsd0004-z_cust_name_bill = lst_scr3000-z_cust_name_bt.

* Address1(Bill To)
st_zsegsd0004-z_address1_billt = lst_scr3000-z_address1_bt.

* Address2(Bill To)
st_zsegsd0004-z_address2_billt = lst_scr3000-z_address2_bt.

**** START ADD 2014/12/23 ISID11 ****
* Address3(Bill To)
st_zsegsd0004-z_address3_billt = lst_scr3000-z_address3_bt.

* Address4(Bill To)
st_zsegsd0004-z_address4_billt = lst_scr3000-z_address4_bt.
**** END ADD 2014/12/23 ISID11 ****

* Attn(Bill To)
st_zsegsd0004-z_attn_billto    = lst_scr3000-z_attn_bt.

* Tel(Bill To)
st_zsegsd0004-z_tel_billto     = lst_scr3000-z_tel_bt.

* Fax(Bill To)
st_zsegsd0004-z_fax_billto     = lst_scr3000-z_fax_bt.

* Cutomer(Ship To)
st_zsegsd0004-z_cust_shipto    = lst_scr3000-z_cust_st.

* Cutomer Name(Ship To)
st_zsegsd0004-z_cust_name_ship = lst_scr3000-z_cust_name_st.

* Address1(Ship To)
st_zsegsd0004-z_address1_shipt = lst_scr3000-z_address1_st.

* Address2(Ship To)
st_zsegsd0004-z_address2_shipt = lst_scr3000-z_address2_st.

**** START ADD 2014/12/23 ISID11 ****
* Address3(Bill To)
st_zsegsd0004-z_address3_shipt = lst_scr3000-z_address3_st.

* Address4(Bill To)
st_zsegsd0004-z_address4_shipt = lst_scr3000-z_address4_st.
**** END ADD 2014/12/23 ISID11 ****

* Attn(Ship To)
st_zsegsd0004-z_attn_shipto    = lst_scr3000-z_attn_st.

* Tel(Ship To)
st_zsegsd0004-z_tel_shipto     = lst_scr3000-z_tel_st.

* Fax(Ship To)
st_zsegsd0004-z_fax_shipto     = lst_scr3000-z_fax_st.

* Shipped Per
st_zsegsd0004-z_shipped_per    = lst_scr3000-z_shipped_per.

* On or About
st_zsegsd0004-z_on_or_about    = lst_scr3000-z_on_or_about.

* From
st_zsegsd0004-z_trade_from     = lst_scr3000-z_trade_from.

* To
st_zsegsd0004-z_trade_to       = lst_scr3000-z_trade_to.

* Via
st_zsegsd0004-z_trade_via      = lst_scr3000-z_trade_via.

* Payment
**** START UPD 2015/02/11 ISID11 ****
*  ST_ZSEGSD0004-Z_TRADE_PAYMENT  = LST_SCR3000-Z_TRADE_PAYMENT.
st_zsegsd0004-zterm            = lst_scr3000-zterm.
**** END UPD 2015/02/11 ISID11 ****

* Trade Term
st_zsegsd0004-z_trade_term     = lst_scr3000-z_trade_term.

* Remarks (1)
st_zsegsd0004-z_inv_remark1    = lst_scr3000-z_inv_remarks1.

* Remarks (2)
st_zsegsd0004-z_inv_remark2    = lst_scr3000-z_inv_remarks2.

* Remarks (3)
st_zsegsd0004-z_inv_remark3    = lst_scr3000-z_inv_remarks3.

* Remarks (4)
st_zsegsd0004-z_inv_remark4    = lst_scr3000-z_inv_remarks4.

* Remarks (5)
st_zsegsd0004-z_inv_remark5    = lst_scr3000-z_inv_remarks5.

* Case Mark (1)
st_zsegsd0004-z_casemark1      = lst_scr3000-z_casemark1.

* Case Mark (2)
st_zsegsd0004-z_casemark2      = lst_scr3000-z_casemark2.

* Case Mark (3)
st_zsegsd0004-z_casemark3      = lst_scr3000-z_casemark3.

* Case Mark (4)
st_zsegsd0004-z_casemark4      = lst_scr3000-z_casemark4.

* Case Mark (5)
st_zsegsd0004-z_casemark5      = lst_scr3000-z_casemark5.
**** START ADD 2015/08/11 ISID21 ****
* Case Mark (6)
st_zsegsd0004-z_casemark6      = lst_scr3000-z_casemark6.

* Case Mark (7)
st_zsegsd0004-z_casemark7      = lst_scr3000-z_casemark7.

* Case Mark (8)
st_zsegsd0004-z_casemark8      = lst_scr3000-z_casemark8.

* Case Mark (9)
st_zsegsd0004-z_casemark9      = lst_scr3000-z_casemark9.

* Case Mark (10)
st_zsegsd0004-z_casemark10     = lst_scr3000-z_casemark10.
**** END ADD 2015/08/11 ISID21 ****

* 新規登録の場合
IF w_upd_ins_flg = cns_sel.

*   （３）−１．Customer情報の設定
*   前画面から引継いだパラメータのSold-to party  ->  Cutomer(Bill To)
st_zsegsd0004-z_cust_billto = st_zsegsd0004-z_sold_to_party.

*   前画面から引継いだパラメータのShip-to party  ->  Cutomer(Ship To)
st_zsegsd0004-z_cust_shipto = st_zsegsd0004-z_ship_to_party.

*   処理「B-4-2」「B-4-3」を実行し、Customer Name、Address1、
*   Address2、Tel、Faxの値を取得する

*   B-4-2-1．得意先名称の取得(帳票出力項目：Cutomer Name(Bill To))
CLEAR: w_adrnr.

**** START UPD 2015/02/11 ISID11 ****
*    PERFORM GET_CUST_NM USING ST_ZSEGSD0004-Z_CUST_BILLTO
*                     CHANGING ST_ZSEGSD0004-Z_CUST_NAME_BILL
*                              W_ADRNR.

*   情報を出荷伝票の取引先機能（VBPA）から取得する
PERFORM get_cust_adrnr USING st_zsegsd0004-vbeln
'SP'                 "取引先機能
CHANGING w_adrnr.
**** END UPD 2015/02/11 ISID11 ****

**** START ADD 2015/03/11 ISID11 ****
*   取引先機能（VBPA）から取得できない場合、
*   得意先マスタ: 一般データ（KNA1）から取得する
IF w_adrnr IS INITIAL.

PERFORM get_cust_nm USING st_zsegsd0004-z_cust_billto
CHANGING w_adrnr.

ENDIF.
**** END ADD 2015/03/11 ISID11 ****

*   B-4-2-2．得意先住所、得意先電話番号、得意先FAXの取得
*            (Cutomer(Bill To))
PERFORM get_cust_atf USING w_adrnr
CHANGING
**** START ADD 2015/02/11 ISID11 ****
st_zsegsd0004-z_cust_name_bill
**** END ADD 2015/02/11 ISID11 ****
st_zsegsd0004-z_address1_billt
st_zsegsd0004-z_address2_billt
**** START ADD 2014/12/23 ISID11 ****
st_zsegsd0004-z_address3_billt
st_zsegsd0004-z_address4_billt
**** END ADD 2014/12/23 ISID11 ****
st_zsegsd0004-z_tel_billto
st_zsegsd0004-z_fax_billto.

**** START ADD 2015/08/21 ISID21 ****
PERFORM get_cust_attn USING st_zsegsd0004-z_cust_billto
CHANGING st_zsegsd0004-z_attn_billto.
**** END ADD 2015/08/21 ISID21 ****

**** START DEL 2015/02/27 ISID11 ****
**   B-4-2-3．Paymentの取得(Cutomer(Bill To))
*    PERFORM GET_CUST_PAYMENT USING
***** START UPD 2015/02/27 ISID11 ****
**                                   ST_ZSEGSD0004-Z_CUST_BILLTO
*                                   ST_ZSEGSD0004-VBELN
***** END UPD 2015/02/27 ISID11 ****
*                          CHANGING
***** START UPD 2015/02/11 ISID11 ****
**                                   ST_ZSEGSD0004-Z_TRADE_PAYMENT.
*                                   ST_ZSEGSD0004-ZTERM.
***** END UPD 2015/02/11 ISID11 ****
**** END DEL 2015/02/27 ISID11 ****

*   B-4-3-1．得意先名称の取得(Cutomer(Ship To))
CLEAR: w_adrnr.

**** START UPD 2015/02/11 ISID11 ***
*    PERFORM GET_CUST_NM USING ST_ZSEGSD0004-Z_CUST_SHIPTO
*                     CHANGING ST_ZSEGSD0004-Z_CUST_NAME_SHIP
*                              W_ADRNR.

*   情報を出荷伝票の取引先機能（VBPA）から取得する
PERFORM get_cust_adrnr USING st_zsegsd0004-vbeln
'SH'                 "取引先機能
CHANGING w_adrnr.
**** END UPD 2015/02/11 ISID11 ****

**** START ADD 2015/03/11 ISID11 ****
*   取引先機能（VBPA）から取得できない場合、
*   得意先マスタ: 一般データ（KNA1）から取得する
IF w_adrnr IS INITIAL.

PERFORM get_cust_nm USING st_zsegsd0004-z_cust_shipto
CHANGING w_adrnr.

ENDIF.
**** END ADD 2015/03/11 ISID11 ****

*   B-4-3-2．得意先住所、得意先電話番号、得意先FAXの取得
*            (Cutomer(Ship To))
PERFORM get_cust_atf USING w_adrnr
CHANGING
**** START ADD 2015/02/11 ISID11 ****
st_zsegsd0004-z_cust_name_ship
**** END ADD 2015/02/11 ISID11 ****
st_zsegsd0004-z_address1_shipt
st_zsegsd0004-z_address2_shipt
**** START ADD 2014/12/23 ISID11 ****
st_zsegsd0004-z_address3_shipt
st_zsegsd0004-z_address4_shipt
**** END ADD 2014/12/23 ISID11 ****
st_zsegsd0004-z_tel_shipto
st_zsegsd0004-z_fax_shipto.

**** START ADD 2015/08/21 ISID21 ****
PERFORM get_cust_attn USING st_zsegsd0004-z_cust_shipto
CHANGING st_zsegsd0004-z_attn_shipto.
**** END ADD 2015/08/21 ISID21 ****

**** START DEL 2015/02/11 ISID11 ****
**   （３）−２．Invoice Noの設定
*    PERFORM GET_INVOICE_NO USING ST_ZSEGSD0004-Z_CUST_BILLTO
*                                 ST_ZSEGSD0004-VBELN
*                        CHANGING ST_ZSEGSD0004-Z_INVOICE_NO.
***** END DEL 2015/02/11 ISID11 ****

*   （３）−３．Invoice Dateの設定
*   Invoice Dateに「ローカル日付（SY-DATLO）」を設定する。
st_zsegsd0004-z_invoice_date = sy-datlo.

**** START ADD BY ISID REN 2015/06/04 ****
ELSE.
st_zsegsd0004-z_cre_ymd_invoic
= lst_scr3000-z_cre_ymd_inv.     "登録年月日（INVOICE）
st_zsegsd0004-z_cre_hms_invoic
= lst_scr3000-z_cre_hms_inv.     "登録時分秒（INVOICE）
st_zsegsd0004-z_cre_userid_inv
= lst_scr3000-z_cre_userid_inv.  "登録ユーザ（INVOICE）
**** END ADD BY ISID REN 2015/06/04 ****
ENDIF.

* B-2-2．テキスト取得
* B-2-2-1．出荷ポイント名称取得
CLEAR: w_vtext_3000.

SELECT SINGLE vtext
FROM tvstt
INTO w_vtext_3000
WHERE vstel = st_zsegsd0004-vstel
AND spras = sy-langu.

* B-2-2-2．Source Type名称取得
CLEAR: w_src_typ_nm_3000.

SELECT ddtext
UP TO 1 ROWS
FROM dd07t
INTO w_src_typ_nm_3000
WHERE domname    = cns_domname
AND ddlanguage = sy-langu
AND domvalue_l = st_zsegsd0004-z_source_type.
ENDSELECT.

**** START ADD 2015/03/02 ISID11 ****
* B-4-2-3．Paymentの取得
* Paymentの値が未設定の場合のみ、以下の処理を実行する
IF st_zsegsd0004-zterm IS INITIAL.

PERFORM get_cust_payment USING st_zsegsd0004-vbeln
CHANGING st_zsegsd0004-zterm.

ENDIF.
**** END ADD 2015/03/02 ISID11 ****

* 画面3000初期表示時、初期値の保存
st_zsegsd0004_ini = st_zsegsd0004.

**** START ADD 2014/12/23 ISID11 ****
st_zsegsd0004_befo = st_zsegsd0004.
**** END ADD 2014/12/23 ISID11 ****

ENDFORM.                    " GET_DATA_SCR3000

*&---------------------------------------------------------------------*
*&      Form  GET_CUST_NM
*&---------------------------------------------------------------------*
*       B-4-2-1．得意先名称の取得(帳票出力項目：Cutomer Name(Bill To))
*----------------------------------------------------------------------*
*      -->I_W_CUST_BILLTO     得意先コード
*      <--O_W_ADRNR           アドレス番号
*----------------------------------------------------------------------*
FORM get_cust_nm
USING i_w_cust_billto    TYPE kna1-kunnr
CHANGING
**** START DEL 2015/02/11 ISID11 ****
*                   O_W_CUST_NAME_BILL TYPE ZSEGSD0004-Z_CUST_NAME_BILL
**** END DEL 2015/02/11 ISID11 ****
o_w_adrnr          TYPE kna1-adrnr.

DATA:
**** START DEL 2015/02/11 ISID11 ****
*         LW_NAME  TYPE KNA1-NAME1,
**** END DEL 2015/02/11 ISID11 ****
lw_adrnr TYPE kna1-adrnr.

SELECT SINGLE
**** START DEL 2015/02/11 ISID11 ****
*                NAME1
**** END DEL 2015/02/11 ISID11 ****
adrnr
FROM kna1
INTO
**** START DEL 2015/02/11 ISID11 ****
*                 (LW_NAME,
**** END DEL 2015/02/11 ISID11 ****
lw_adrnr
**** START DEL 2015/02/11 ISID11 ****
*                  )
**** END DEL 2015/02/11 ISID11 ****
WHERE kunnr = i_w_cust_billto.

**** START DEL 2015/02/11 ISID11 ****
*  O_W_CUST_NAME_BILL = LW_NAME.
**** END DEL 2015/02/11 ISID11 ****

o_w_adrnr          = lw_adrnr.

ENDFORM.                    " GET_CUST_NM

*&---------------------------------------------------------------------*
*&      Form  GET_CUST_ATF
*&---------------------------------------------------------------------*
*       B-4-2-2．得意先住所、得意先電話番号、得意先FAXの取得
*----------------------------------------------------------------------*
*      -->I_W_ADRNR           アドレス番号
*      <--O_W_ADDRESS1_BILLT  帳票出力項目：Address1(Bill To)
*      <--O_W_ADDRESS2_BILLT  帳票出力項目：Address2(Bill To)
*      <--O_W_ADDRESS3_BILLT  帳票出力項目：Address3(Bill To)
*      <--O_W_ADDRESS4_BILLT  帳票出力項目：Address4(Bill To)
*      <--O_W_TEL_BILLTO      帳票出力項目：Tel(Bill To)
*      <--O_W_FAX_BILLTO      帳票出力項目：Fax(Bill To)
*----------------------------------------------------------------------*
FORM get_cust_atf  USING    i_w_adrnr          TYPE kna1-adrnr
CHANGING
**** START ADD 2015/02/11 ISID11 ****
o_w_cust_name_bill TYPE zsegsd0004-z_cust_name_bill
**** END ADD 2015/02/11 ISID11 ****
o_w_address1_billt TYPE zeaddress1billto
o_w_address2_billt TYPE zeaddress2billto
**** START ADD 2014/12/23 ISID11 ****
o_w_address3_billt TYPE zeaddress3bt
o_w_address4_billt TYPE zeaddress4bt
**** END ADD 2014/12/23 ISID11 ****
o_w_tel_billto     TYPE zetelbillto
o_w_fax_billto     TYPE zefaxbillto.
**** START UPD 2014/12/26 ISID11 ****
*  DATA: LW_STREET     TYPE ADRC-STREET,
*        LW_CITY1      TYPE ADRC-CITY1,
***** START ADD 2014/12/23 ISID11 ****
*        LW_STR_SUPPL1 TYPE ADRC-STR_SUPPL1,
*        LW_STR_SUPPL2 TYPE ADRC-STR_SUPPL2,
***** END ADD 2014/12/23 ISID11 ****
*        LW_TEL_NUMBER TYPE ADRC-TEL_NUMBER,
*        LW_FAX_NUMBER TYPE ADRC-FAX_NUMBER.
*
*  SELECT STREET
*         CITY1
***** START ADD 2014/12/23 ISID11 ****
*         STR_SUPPL1
*         STR_SUPPL2
***** END ADD 2014/12/23 ISID11 ****
*         TEL_NUMBER
*         FAX_NUMBER
*
*    UP TO 1 ROWS
*    FROM ADRC
*    INTO (LW_STREET, LW_CITY1,
***** START ADD 2014/12/23 ISID11 ****
*     LW_STR_SUPPL1,LW_STR_SUPPL2,
***** END ADD 2014/12/23 ISID11 ****
*
*     LW_TEL_NUMBER, LW_FAX_NUMBER)
*   WHERE ADDRNUMBER = I_W_ADRNR.
*  ENDSELECT.
*
*  O_W_ADDRESS1_BILLT = LW_STREET.
*
*  O_W_ADDRESS2_BILLT = LW_CITY1.
*
***** START ADD 2014/12/23 ISID11 ****
*  O_W_ADDRESS3_BILLT = LW_STR_SUPPL1.
*  O_W_ADDRESS4_BILLT = LW_STR_SUPPL2.
***** END ADD 2014/12/23 ISID11 ****
*
*  O_W_TEL_BILLTO     = LW_TEL_NUMBER.
*
*  O_W_FAX_BILLTO     = LW_FAX_NUMBER.

DATA:
lst_adrc   TYPE zsegzz0002,
lw_subrc   TYPE sy-subrc.

CALL FUNCTION 'ZEG_ZZ_ADRC_GET'
EXPORTING
impmultitflg  = '1'
impaddrnumber = i_w_adrnr
IMPORTING
expadrc       = lst_adrc
expsubrc      = lw_subrc.

IF lw_subrc = 0.

**** START ADD 2015/02/11 ISID11 ****
o_w_cust_name_bill = lst_adrc-z_name.
**** END ADD 2015/02/11 ISID11 ****
o_w_address1_billt = lst_adrc-z_address1.
o_w_address2_billt = lst_adrc-z_address2.
o_w_address3_billt = lst_adrc-z_address3.
o_w_address4_billt = lst_adrc-z_address4.
o_w_tel_billto     = lst_adrc-tel_number.
o_w_fax_billto     = lst_adrc-fax_number.

ELSE.

CLEAR:
**** START ADD 2015/02/11 ISID11 ****
o_w_cust_name_bill,
**** END ADD 2015/02/11 ISID11 ****
o_w_address1_billt,
o_w_address2_billt,
o_w_address3_billt,
o_w_address4_billt,
o_w_tel_billto,
o_w_fax_billto.

ENDIF.
**** END UPD 2014/12/26 ISID11 ****

ENDFORM.                    " GET_CUST_ATF

*&---------------------------------------------------------------------*
*&      Form  GET_CUST_PAYMENT
*&---------------------------------------------------------------------*
*       B-4-2-3．Paymentの取得
*----------------------------------------------------------------------*
*      -->I_W_VBELN    受注伝票
*      <--O_W_ZTERM    帳票出力項目：Payment
*----------------------------------------------------------------------*
FORM get_cust_payment  USING
**** START UPD 2015/02/11 ISID11 ****
*                                I_W_CUST_BILLTO   TYPE KUNNR
i_w_vbeln   TYPE vbkd-vbeln
**** END UPD 2015/02/11 ISID11 ****
CHANGING
**** START UPD 2015/02/11 ISID11 ****
*                                O_W_TRADE_PAYMENT TYPE ZETRADEPAYMENT.
o_w_zterm   TYPE vbkd-zterm.
**** END UPD 2015/02/11 ISID11 ****

**** START UPD 2015/02/11 ISID11 ****
*  DATA: LW_PAYMENT TYPE ZTEGSDM010-Z_TRADE_PAYMENT.
*
*  SELECT SINGLE Z_TRADE_PAYMENT
*           FROM ZTEGSDM010
*           INTO LW_PAYMENT
*          WHERE KUNNR = I_W_CUST_BILLTO.
*
*  O_W_TRADE_PAYMENT = LW_PAYMENT.

**** START ADD 2015/02/27 ISID11 ****
DATA:
lw_vgbel   TYPE lips-vgbel.

SELECT vgbel
INTO lw_vgbel
FROM lips
UP TO 1 ROWS
WHERE vbeln = i_w_vbeln.
ENDSELECT.

IF sy-subrc = 0.
**** END ADD 2015/02/27 ISID11 ****
SELECT SINGLE zterm
INTO o_w_zterm
FROM vbkd
**** START UPD 2015/02/27 ISID11 ****
*   WHERE VBELN = I_W_VBELN
WHERE vbeln = lw_vgbel
**** END UPD 2015/02/27 ISID11 ****
AND posnr = space.

IF sy-subrc <> 0.

CLEAR:
o_w_zterm.

ENDIF.
**** START ADD 2015/02/27 ISID11 ****
ENDIF.
**** END ADD 2015/02/27 ISID11 ****
**** END UPD 2015/02/11 ISID11 ****

ENDFORM.                    " GET_CUST_PAYMENT

*&---------------------------------------------------------------------*
*&      Form  GET_INVOICE_NO
*&---------------------------------------------------------------------*
*       （３）−２．Invoice Noの設定
*----------------------------------------------------------------------*
*      -->I_W_VBELN         出荷伝票番号
*      <--O_W_INVOICE_NO    INVOICE_NO
*----------------------------------------------------------------------*
FORM get_invoice_no  USING
**** START UPD 2015/02/11 ISID11 ****
*                              I_W_CUST_BILLTO TYPE ZECUSTBILLTO
*                              I_W_VBELN       TYPE ZEVBELN
*                     CHANGING O_W_INVOICE_NO  TYPE ZEINVOICENO.
*
*  DATA: LW_CST_INV_ID TYPE ZECUSTINVID.
*
*  SELECT SINGLE Z_CUST_INV_ID
*           FROM ZTEGSDM010
*           INTO LW_CST_INV_ID
*          WHERE KUNNR = I_W_CUST_BILLTO.
*
*  IF LW_CST_INV_ID IS INITIAL.
**   アドオンマスタを取得できないケース、レコードを取得したが値が
**   ブランクの場合は、「デフォルト値（ZZZZZ）＋　出荷伝票番号」を設定
*    CONCATENATE CNS_INV_ID_Z I_W_VBELN INTO O_W_INVOICE_NO.
*
*  ELSE.
*
*    CONCATENATE LW_CST_INV_ID I_W_VBELN INTO O_W_INVOICE_NO.
*
*  ENDIF.
i_w_vbeln       TYPE zsegsd0004-vbeln
CHANGING o_w_invoice_no  TYPE zsegsd0004-z_invoice_no.

DATA:
lw_vkorg  TYPE likp-vkorg,    "販売組織
lw_bukrs  TYPE tvko-bukrs,    "会社コード
lw_numc   TYPE numc7,
lw_msg    TYPE sy-msgv1,
lw_datlo  TYPE inri-toyear.


* Invoice Noの自動採番ロジック
* Invoice No = 伝票識別子(1桁) + 会社ｺｰﾄﾞ(4桁)
*              + "-"(1桁) + 年度(短)(2桁) + 連番(7桁)

* 会社コードの取得
**** START ADD 2015/03/09 ISID11 ****
IF rb_1 = cns_sel.
**** END ADD 2015/03/09 ISID11 ****
*   販売管理伝票: 出荷ヘッダデータ（LIKP）より、販売組織を取得する
SELECT SINGLE vkorg
INTO lw_vkorg
FROM likp
WHERE vbeln = i_w_vbeln.

**** START ADD 2015/03/09 ISID11 ****
ELSE.
*   OutboundDelivery(External)
SELECT vkorg
INTO lw_vkorg
FROM ztegsdt010
UP TO 1 ROWS
WHERE vbeln = i_w_vbeln.
ENDSELECT.

ENDIF.
**** END ADD 2015/03/09 ISID11 ****

IF sy-subrc = 0.

*   組織単位: 販売組織（TVKO）より、会社コードを取得する
SELECT SINGLE bukrs
INTO lw_bukrs
FROM tvko
WHERE vkorg = lw_vkorg.

ENDIF.

* 年度4桁
lw_datlo = sy-datlo+0(4).

* 連番は、会社コード別・年度別に定義するものとする
CALL FUNCTION 'NUMBER_GET_NEXT'
EXPORTING
nr_range_nr             = '10'
object                  = 'ZEGSD0002'
quantity                = '1'
subobject               = lw_bukrs
toyear                  = lw_datlo
ignore_buffer           = space
IMPORTING
number                  = lw_numc
EXCEPTIONS
interval_not_found      = 1
number_range_not_intern = 2
object_not_found        = 3
quantity_is_0           = 4
quantity_is_not_1       = 5
interval_overflow       = 6
buffer_overflow         = 7
OTHERS                  = 8.
IF sy-subrc <> 0.

MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
INTO lw_msg.
CONCATENATE sy-msgid
sy-msgno
lw_msg
INTO lw_msg
SEPARATED BY space.
MESSAGE s032(zmegsd01) WITH 'NUMBER_GET_NEXT' lw_msg
DISPLAY LIKE cns_msgty_err.
*   汎用モジュールにて想定外のエラーが発生しました。
*   （FM = &1 / MSG = &2）
LEAVE SCREEN.

ENDIF.


CONCATENATE st_zsegsd0004-tradedoctype   "伝票識別子（1桁）
lw_bukrs                     "会社コード（4桁）
'-'                          "”-”（1桁）
lw_datlo+2(2)                "年度（短）（2桁）
lw_numc                      "連番（7桁）
INTO o_w_invoice_no.              "Invoice No

**** END UPD 2015/02/11 ISID11 ****

ENDFORM.                    " GET_INVOICE_NO

*&---------------------------------------------------------------------*
*&      Form  SAVE_PROCESS_3000
*&---------------------------------------------------------------------*
*       B-4-4．「Save」ボタン押下時の処理
*----------------------------------------------------------------------*
FORM save_process_3000 .
DATA: lst_ztegsdt001    TYPE ztegsdt001,
lst_zsegsd0004    TYPE zsegsd0004,
ltd_ztegsdt001    TYPE STANDARD TABLE OF ztegsdt001.

**** START DEL 2015/02/11 ISID11 ****
** B-4-4-1．テーブルロック
*  CALL FUNCTION 'ENQUEUE_EZZTEGSDT001'
*    EXPORTING
*      MODE_ZTEGSDT001 = CNS_ENQMODE_E
**     MANDT           = SY-MANDT
*      VBELN           = ST_ZSEGSD0004-VBELN
*      ERDAT           = ST_ZSEGSD0004-ERDAT
**     X_VBELN         = ' '
**     X_ERDAT         = ' '
**     _SCOPE          = '2'
**     _WAIT           = ' '
**     _COLLECT        = ' '
*    EXCEPTIONS
*      FOREIGN_LOCK    = 1
*      SYSTEM_FAILURE  = 2
*      OTHERS          = 3.
*  IF SY-SUBRC <> 0.
*    MESSAGE ID SY-MSGID TYPE CNS_MSGTY_NOR NUMBER SY-MSGNO
*          WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
*          DISPLAY LIKE CNS_MSGTY_ERR.
*
*    LEAVE SCREEN.
*  ENDIF.
**** END DEL 2015/02/11 ISID11 ****

* B-4-4-2．INSERT/UPDATE処理

IF w_upd_ins_flg = cns_sel.
*   新規の場合
*   画面出力項目：Outbound Delivery
lst_ztegsdt001-vbeln            = st_zsegsd0004-vbeln.

*   前画面から引き継いだパラメータのCreated On
lst_ztegsdt001-erdat            = st_zsegsd0004-erdat.

*   帳票出力項目：Invoice No
**** START UPD 2015/02/11 ISID11 ****
*    LST_ZTEGSDT001-Z_INVOICE_NO     = ST_ZSEGSD0004-Z_INVOICE_NO.

*   Invoice Noの発番
PERFORM get_invoice_no USING st_zsegsd0004-vbeln
CHANGING lst_ztegsdt001-z_invoice_no.
**** END UPD 2015/02/11 ISID11 ****

*   帳票出力項目：Invoice Date
*   ブランクの場合、ローカル日付（SY-DATLO）をセット
lst_ztegsdt001-z_invoice_date   = st_zsegsd0004-z_invoice_date.

*   画面出力項目：Source Type

IF rb_1 = cns_sel.

lst_ztegsdt001-z_source_type  = cns_src_type_1.

st_zsegsd0004-z_source_type   = cns_src_type_1.

ELSEIF rb_2 = cns_sel.

lst_ztegsdt001-z_source_type  = cns_src_type_2.

st_zsegsd0004-z_source_type   = cns_src_type_2.

ENDIF.

*   "X"固定
lst_ztegsdt001-z_status_invoice = cns_sel.

*   帳票出力項目：Cutomer(Bill To)
lst_ztegsdt001-z_cust_bt        = st_zsegsd0004-z_cust_billto.

*   帳票出力項目：Cutomer Name(Bill To)
lst_ztegsdt001-z_cust_name_bt   = st_zsegsd0004-z_cust_name_bill.

*   帳票出力項目：Address1(Bill To)
lst_ztegsdt001-z_address1_bt    = st_zsegsd0004-z_address1_billt.

*   帳票出力項目：Address2(Bill To)
lst_ztegsdt001-z_address2_bt    = st_zsegsd0004-z_address2_billt.

**** START ADD 2014/12/23 ISID11 ****
*   帳票出力項目：Address3(Bill To)
lst_ztegsdt001-z_address3_bt    = st_zsegsd0004-z_address3_billt.

*   帳票出力項目：Address4(Bill To)
lst_ztegsdt001-z_address4_bt    = st_zsegsd0004-z_address4_billt.
**** END ADD 2014/12/23 ISID11 ****

*   帳票出力項目：Attn(Bill To)
lst_ztegsdt001-z_attn_bt        = st_zsegsd0004-z_attn_billto.

*   帳票出力項目：Tel(Bill To)
lst_ztegsdt001-z_tel_bt         = st_zsegsd0004-z_tel_billto.

*   帳票出力項目：Fax(Bill To)
lst_ztegsdt001-z_fax_bt         = st_zsegsd0004-z_fax_billto.

*   帳票出力項目：Cutomer(Ship To)
lst_ztegsdt001-z_cust_st        = st_zsegsd0004-z_cust_shipto.

*   帳票出力項目：Cutomer Name(Ship To)
lst_ztegsdt001-z_cust_name_st   = st_zsegsd0004-z_cust_name_ship.

*   帳票出力項目：Address1(Ship To)
lst_ztegsdt001-z_address1_st    = st_zsegsd0004-z_address1_shipt.

*   帳票出力項目：Address2(Ship To)
lst_ztegsdt001-z_address2_st    = st_zsegsd0004-z_address2_shipt.

**** START ADD 2014/12/23 ISID11 ****
*   帳票出力項目：Address3(Bill To)
lst_ztegsdt001-z_address3_st    = st_zsegsd0004-z_address3_shipt.

*   帳票出力項目：Address4(Bill To)
lst_ztegsdt001-z_address4_st    = st_zsegsd0004-z_address4_shipt.
**** END ADD 2014/12/23 ISID11 ****

*   帳票出力項目：Attn(Ship To)
lst_ztegsdt001-z_attn_st        = st_zsegsd0004-z_attn_shipto.

*   帳票出力項目：Tel(Ship To)
lst_ztegsdt001-z_tel_st         = st_zsegsd0004-z_tel_shipto.

*   帳票出力項目：Fax(Ship To)
lst_ztegsdt001-z_fax_st         = st_zsegsd0004-z_fax_shipto.

*   帳票出力項目：Shipped Per
lst_ztegsdt001-z_shipped_per    = st_zsegsd0004-z_shipped_per.

*   帳票出力項目：On or About
lst_ztegsdt001-z_on_or_about    = st_zsegsd0004-z_on_or_about.

*   帳票出力項目：From
lst_ztegsdt001-z_trade_from     = st_zsegsd0004-z_trade_from.

*   帳票出力項目：To
lst_ztegsdt001-z_trade_to       = st_zsegsd0004-z_trade_to.

*   帳票出力項目：Via
lst_ztegsdt001-z_trade_via      = st_zsegsd0004-z_trade_via.

*   帳票出力項目：Payment
**** START UPD 2015/02/11 ISID11 ****
*    LST_ZTEGSDT001-Z_TRADE_PAYMENT  = ST_ZSEGSD0004-Z_TRADE_PAYMENT.
lst_ztegsdt001-zterm            = st_zsegsd0004-zterm.
**** END UPD 2015/02/11 ISID11 ****

*   帳票出力項目：Trade Term
lst_ztegsdt001-z_trade_term     = st_zsegsd0004-z_trade_term.

*   画面出力項目：Remarks (1)
lst_ztegsdt001-z_inv_remarks1   = st_zsegsd0004-z_inv_remark1.

*   画面出力項目：Remarks (2)
lst_ztegsdt001-z_inv_remarks2   = st_zsegsd0004-z_inv_remark2.

*   画面出力項目：Remarks (3)
lst_ztegsdt001-z_inv_remarks3   = st_zsegsd0004-z_inv_remark3.

*   画面出力項目：Remarks (4)
lst_ztegsdt001-z_inv_remarks4   = st_zsegsd0004-z_inv_remark4.

*   画面出力項目：Remarks (5)
lst_ztegsdt001-z_inv_remarks5   = st_zsegsd0004-z_inv_remark5.

*   画面出力項目：Case Mark (1)
lst_ztegsdt001-z_casemark1      = st_zsegsd0004-z_casemark1.

*   画面出力項目：Case Mark (2)
lst_ztegsdt001-z_casemark2      = st_zsegsd0004-z_casemark2.

*   画面出力項目：Case Mark (3)
lst_ztegsdt001-z_casemark3      = st_zsegsd0004-z_casemark3.

*   画面出力項目：Case Mark (4)
lst_ztegsdt001-z_casemark4      = st_zsegsd0004-z_casemark4.

*   画面出力項目：Case Mark (5)
lst_ztegsdt001-z_casemark5      = st_zsegsd0004-z_casemark5.
**** START ADD 2015/08/11 ISID21 ****
*   画面出力項目：Case Mark (6)
lst_ztegsdt001-z_casemark6      = st_zsegsd0004-z_casemark6.

*   画面出力項目：Case Mark (7)
lst_ztegsdt001-z_casemark7      = st_zsegsd0004-z_casemark7.

*   画面出力項目：Case Mark (8)
lst_ztegsdt001-z_casemark8      = st_zsegsd0004-z_casemark8.

*   画面出力項目：Case Mark (9)
lst_ztegsdt001-z_casemark9      = st_zsegsd0004-z_casemark9.

*   画面出力項目：Case Mark (10)
lst_ztegsdt001-z_casemark10     = st_zsegsd0004-z_casemark10.
**** END ADD 2015/08/11 ISID21 ****

*   システム日付（SY-DATUM）
lst_ztegsdt001-z_cre_ymd_inv    = sy-datum.

*   システム時刻（SY-UZEIT）
lst_ztegsdt001-z_cre_hms_inv    = sy-uzeit.

*   システムユーザ（SY-UNAME）
lst_ztegsdt001-z_cre_userid_inv = sy-uname.

*   システム日付（SY-DATUM）
lst_ztegsdt001-z_cre_ymd        = sy-datum.

*   システム時刻（SY-UZEIT）
lst_ztegsdt001-z_cre_hms        = sy-uzeit.

*   システムユーザ（SY-UNAME）
lst_ztegsdt001-z_cre_userid     = sy-uname.

APPEND lst_ztegsdt001 TO ltd_ztegsdt001.

INSERT ztegsdt001 FROM TABLE ltd_ztegsdt001
ACCEPTING DUPLICATE KEYS.

IF sy-subrc <> 0.

*     B-4-4-3．テーブルリリース
CALL FUNCTION 'DEQUEUE_EZZTEGSDT001'
EXPORTING
mode_ztegsdt001 = cns_enqmode_e
*         MANDT           = SY-MANDT
vbeln           = st_zsegsd0004-vbeln
erdat           = st_zsegsd0004-erdat
*         X_VBELN         = ' '
*         X_ERDAT         = ' '
*         _SCOPE          = '3'
*         _SYNCHRON       = ' '
*         _COLLECT        = ' '
.

MESSAGE s012(zmegsd01) WITH cns_ztegsdt001
**** START UPD 2015/02/05 ISID11 ****
*                                                 CNS_MSGNO_12
'ZMEGSD01 012'
**** END UPD 2015/02/05 ISID11 ****
DISPLAY LIKE cns_msgty_err.

ROLLBACK WORK.

LEAVE SCREEN.

ELSE.
**** START UPD 2015/02/11 ISID11 ****
st_zsegsd0004-z_invoice_no = lst_ztegsdt001-z_invoice_no.
**** END UPD 2015/02/11 ISID11 ****
*     Status
st_zsegsd0004-z_status_invoice = cns_sel.

*     システム日付（SY-DATUM）
st_zsegsd0004-z_cre_ymd_invoic = sy-datum.

*     システム時刻（SY-UZEIT）
st_zsegsd0004-z_cre_hms_invoic = sy-uzeit.

*     システムユーザ（SY-UNAME）
st_zsegsd0004-z_cre_userid_inv = sy-uname.

ENDIF.

ELSE.
*   変更の場合

**** START ADD 2015/02/11 ISID11 ****
IF w_invoice_flg IS NOT INITIAL.
*     Invoice Noの発番
PERFORM get_invoice_no USING st_zsegsd0004-vbeln
CHANGING st_zsegsd0004-z_invoice_no.
ENDIF.
**** END ADD 2015/02/11 ISID11 ****

IF st_zsegsd0004-z_source_type IS INITIAL.

IF rb_1 = cns_sel.

st_zsegsd0004-z_source_type  = cns_src_type_1.

ELSEIF rb_2 = cns_sel.

st_zsegsd0004-z_source_type  = cns_src_type_2.

ENDIF.

ENDIF.

**** START ADD BY ISID REN 2015/06/04 ****
*   更新時にブランクの場合
IF st_zsegsd0004-z_cre_ymd_invoic IS INITIAL.
*     システム日付（SY-DATUM）
st_zsegsd0004-z_cre_ymd_invoic = sy-datum.
ENDIF.

IF st_zsegsd0004-z_cre_hms_invoic IS INITIAL.
*     システム時刻（SY-UZEIT）
st_zsegsd0004-z_cre_hms_invoic = sy-uzeit.
ENDIF.

IF st_zsegsd0004-z_cre_userid_inv IS INITIAL.
*     システムユーザ（SY-UNAME）
st_zsegsd0004-z_cre_userid_inv = sy-uname.
ENDIF.
**** START ADD BY ISID REN 2015/06/04 ****

UPDATE ztegsdt001
SET
**** START ADD 2015/02/11 ISID11 ****
z_invoice_no     = st_zsegsd0004-z_invoice_no
**** END ADD 2015/02/11 ISID11 ****
z_invoice_date   = st_zsegsd0004-z_invoice_date
z_source_type    = st_zsegsd0004-z_source_type
z_status_invoice = cns_sel
z_cust_bt        = st_zsegsd0004-z_cust_billto
z_cust_name_bt   = st_zsegsd0004-z_cust_name_bill
z_address1_bt    = st_zsegsd0004-z_address1_billt
z_address2_bt    = st_zsegsd0004-z_address2_billt
**** START ADD 2014/12/23 ISID11 ****
z_address3_bt    = st_zsegsd0004-z_address3_billt
z_address4_bt    = st_zsegsd0004-z_address4_billt
**** END ADD 2014/12/23 ISID11 ****
z_attn_bt        = st_zsegsd0004-z_attn_billto
z_tel_bt         = st_zsegsd0004-z_tel_billto
z_fax_bt         = st_zsegsd0004-z_fax_billto
z_cust_st        = st_zsegsd0004-z_cust_shipto
z_cust_name_st   = st_zsegsd0004-z_cust_name_ship
z_address1_st    = st_zsegsd0004-z_address1_shipt
z_address2_st    = st_zsegsd0004-z_address2_shipt
**** START ADD 2014/12/23 ISID11 ****
z_address3_st    = st_zsegsd0004-z_address3_shipt
z_address4_st    = st_zsegsd0004-z_address4_shipt
**** END ADD 2014/12/23 ISID11 ****
z_attn_st        = st_zsegsd0004-z_attn_shipto
z_tel_st         = st_zsegsd0004-z_tel_shipto
z_fax_st         = st_zsegsd0004-z_fax_shipto
z_shipped_per    = st_zsegsd0004-z_shipped_per
z_on_or_about    = st_zsegsd0004-z_on_or_about
z_trade_from     = st_zsegsd0004-z_trade_from
z_trade_to       = st_zsegsd0004-z_trade_to
z_trade_via      = st_zsegsd0004-z_trade_via
**** START UPD 2015/02/11 ISID11 ****
*           Z_TRADE_PAYMENT  = ST_ZSEGSD0004-Z_TRADE_PAYMENT
zterm            = st_zsegsd0004-zterm
**** END UPD 2015/02/11 ISID11 ****
z_trade_term     = st_zsegsd0004-z_trade_term
z_inv_remarks1   = st_zsegsd0004-z_inv_remark1
z_inv_remarks2   = st_zsegsd0004-z_inv_remark2
z_inv_remarks3   = st_zsegsd0004-z_inv_remark3
z_inv_remarks4   = st_zsegsd0004-z_inv_remark4
z_inv_remarks5   = st_zsegsd0004-z_inv_remark5
z_casemark1      = st_zsegsd0004-z_casemark1
z_casemark2      = st_zsegsd0004-z_casemark2
z_casemark3      = st_zsegsd0004-z_casemark3
z_casemark4      = st_zsegsd0004-z_casemark4
z_casemark5      = st_zsegsd0004-z_casemark5
**** START ADD 2015/08/11 ISID21 ****
z_casemark6      = st_zsegsd0004-z_casemark6
z_casemark7      = st_zsegsd0004-z_casemark7
z_casemark8      = st_zsegsd0004-z_casemark8
z_casemark9      = st_zsegsd0004-z_casemark9
z_casemark10     = st_zsegsd0004-z_casemark10
**** END ADD 2015/08/11 ISID21 ****
**** START ADD BY ISID REN 2015/06/04 ****
z_cre_ymd_inv
= st_zsegsd0004-z_cre_ymd_invoic "登録年月日（INVOICE）
z_cre_hms_inv
= st_zsegsd0004-z_cre_hms_invoic "登録時分秒（INVOICE）
z_cre_userid_inv
= st_zsegsd0004-z_cre_userid_inv "登録ユーザ（INVOICE）
**** END ADD BY ISID REN 2015/06/04 ****
z_mod_ymd_inv    = sy-datum
z_mod_hms_inv    = sy-uzeit
z_mod_userid_inv = sy-uname
z_mod_ymd        = sy-datum
z_mod_hms        = sy-uzeit
z_mod_userid     = sy-uname
WHERE vbeln  = st_zsegsd0004-vbeln
AND erdat  = st_zsegsd0004-erdat.

IF sy-subrc <> 0.

*     B-4-4-3．テーブルリリース
CALL FUNCTION 'DEQUEUE_EZZTEGSDT001'
EXPORTING
mode_ztegsdt001 = cns_enqmode_e
*         MANDT           = SY-MANDT
vbeln           = st_zsegsd0004-vbeln
erdat           = st_zsegsd0004-erdat
*         X_VBELN         = ' '
*         X_ERDAT         = ' '
*         _SCOPE          = '3'
*         _SYNCHRON       = ' '
*         _COLLECT        = ' '
.

ROLLBACK WORK.

MESSAGE s012(zmegsd01) WITH cns_ztegsdt001
**** START UPD 2015/02/05 ISID11 ****
*                                                 CNS_MSGNO_12
'ZMEGSD01 012'
**** END UPD 2015/02/05 ISID11 ****
DISPLAY LIKE cns_msgty_err.

LEAVE SCREEN.

ELSE.

*     Status
st_zsegsd0004-z_status_invoice = cns_sel.

*     システム日付（SY-DATUM）
st_zsegsd0004-z_mod_ymd_invoic = sy-datum.

*     システム時刻（SY-UZEIT）
st_zsegsd0004-z_mod_hms_invoic = sy-uzeit.

*     システムユーザ（SY-UNAME）
st_zsegsd0004-z_mod_userid_inv = sy-uname.

ENDIF.

ENDIF.

* B-4-4-3．テーブルリリース
CALL FUNCTION 'DEQUEUE_EZZTEGSDT001'
EXPORTING
mode_ztegsdt001 = cns_enqmode_e
*     MANDT           = SY-MANDT
vbeln           = st_zsegsd0004-vbeln
erdat           = st_zsegsd0004-erdat
*     X_VBELN         = ' '
*     X_ERDAT         = ' '
*     _SCOPE          = '3'
*     _SYNCHRON       = ' '
*     _COLLECT        = ' '
.

COMMIT WORK AND WAIT.

CLEAR: st_zsegsd0004_ini.

st_zsegsd0004_ini = st_zsegsd0004.

* 画面3000データの変更が画面2000へ反映する
LOOP AT td_zsegsd0004 INTO lst_zsegsd0004 WHERE z_chk = cns_sel.

MODIFY td_zsegsd0004 INDEX sy-tabix FROM st_zsegsd0004.

ENDLOOP.

* B-2-2-2．Source Type名称取得
CLEAR: w_src_typ_nm_3000.

SELECT ddtext
UP TO 1 ROWS
FROM dd07t
INTO w_src_typ_nm_3000
WHERE domname    = cns_domname
AND ddlanguage = sy-langu
AND domvalue_l = st_zsegsd0004-z_source_type.
ENDSELECT.

* 保存したあと、DBの更新がUPDATEモード
CLEAR: w_upd_ins_flg.

* データ登録/更新に成功した場合
MESSAGE s013(zmegsd01).
**** START ADD 2015/02/11 ISID11 ****
CLEAR:
w_invoice_flg,
w_upd_ins_flg.

PERFORM refresh_scr2000.
**** END ADD 2015/02/11 ISID11 ****

ENDFORM.                    " SAVE_PROCESS_3000

*&---------------------------------------------------------------------*
*&      Form  CALL_SCR3200
*&---------------------------------------------------------------------*
*       画面3200の呼出
*----------------------------------------------------------------------*
FORM call_scr3200 .
REFRESH: td_tradecommon_ref,
td_zsegsd0004_ref.

* C-2．データ抽出編集処理
* C-2-1．Invoiceデータ取得
IF rb_10 = cns_sel.
*   選択画面のラジオボタン「Outbounde Delivery」が選択されている場合
PERFORM get_outbound_del_ref_data CHANGING td_tradecommon_ref.

ELSEIF rb_20 = cns_sel.
*   選択画面のラジオボタン「External Data」が選択されている場合
PERFORM get_external_ref_data CHANGING td_tradecommon_ref.

ENDIF.

* C-2-2．テキスト取得
PERFORM get_text USING    td_tradecommon_ref
CHANGING td_zsegsd0004_ref.

SORT td_zsegsd0004_ref BY vstel           ASCENDING
wadat           ASCENDING
z_ship_to_party ASCENDING
vbeln           ASCENDING.

* C-3．画面3200の出力
CALL SCREEN 3200 STARTING AT 11  1.
*                   ENDING   AT 150 45.

ENDFORM.                    " CALL_SCR3200

*&---------------------------------------------------------------------*
*&      Form  GET_OUTBOUND_DEL_REF_DATA
*&---------------------------------------------------------------------*
*       選択画面のラジオボタン「Outbounde Delivery」が選択されている場合
*----------------------------------------------------------------------*
*      <--O_TD_TDC_REF  ラジオボタン「Outbounde Delivery」
*                       のTradeCommonデータ内部テーブル
*----------------------------------------------------------------------*
FORM get_outbound_del_ref_data  CHANGING o_td_tdc_ref
TYPE typ_td_tradecommon.
DATA:
lst_likp        TYPE typ_td_likp,
lst_ztegsdt001  TYPE typ_td_ztegsdt001,
lst_ztegsdt003  TYPE typ_td_ztegsdt003,
lst_ztegsdt004  TYPE typ_td_ztegsdt004,
lst_tradecommon TYPE typ_td_ztegsdt001,
ltd_likp        TYPE STANDARD TABLE OF typ_td_likp,   "ITAB:出荷伝票
*   ITAB:TradeCommonデータ
ltd_ztegsdt001  TYPE STANDARD TABLE OF typ_td_ztegsdt001,
*   ITAB:SI(Header)
ltd_ztegsdt003  TYPE STANDARD TABLE OF typ_td_ztegsdt003,
ltd_ztegsdt004  TYPE STANDARD TABLE OF typ_td_ztegsdt004.

SELECT vstel
wadat
kunag
kunnr
vbeln
erdat
ernam
FROM likp
INTO TABLE ltd_likp
WHERE vstel IN s_shpptr
AND wadat IN s_plnedr
AND kunnr IN s_shiptr
AND vbeln IN s_outbdr
AND kunag IN s_soldtr.

IF sy-subrc <> 0.
MESSAGE i006(zmegsd01) WITH cns_likp DISPLAY LIKE cns_msgty_err.

LEAVE SCREEN.
ELSE.

SELECT vbeln
erdat
z_source_type
z_invoice_no
z_invoice_date
z_status_invoice
z_cust_bt
z_cust_name_bt
z_address1_bt
z_address2_bt
**** START ADD 2014/12/23 ISID11 ****
z_address3_bt
z_address4_bt
**** END ADD 2014/12/23 ISID11 ****
z_attn_bt
z_tel_bt
z_fax_bt
z_cust_st
z_cust_name_st
z_address1_st
z_address2_st
**** START ADD 2014/12/23 ISID11 ****
z_address3_st
z_address4_st
**** END ADD 2014/12/23 ISID11 ****
z_attn_st
z_tel_st
z_fax_st
z_shipped_per
z_on_or_about
z_trade_from
z_trade_to
z_trade_via
**** START UPD 2015/02/11 ISID11 ****
*           Z_TRADE_PAYMENT
zterm
**** END UPD 2015/02/11 ISID11 ****
z_trade_term
z_inv_remarks1
z_inv_remarks2
z_inv_remarks3
z_inv_remarks4
z_inv_remarks5
z_casemark1
z_casemark2
z_casemark3
z_casemark4
z_casemark5
**** START ADD 2015/08/11 ISID21 ****
z_casemark6
z_casemark7
z_casemark8
z_casemark9
z_casemark10
**** END ADD 2015/08/11 ISID21 ****
z_cre_ymd_inv
z_cre_hms_inv
z_cre_userid_inv
z_mod_ymd_inv
z_mod_hms_inv
z_mod_userid_inv
FROM ztegsdt001
INTO TABLE ltd_ztegsdt001
FOR ALL ENTRIES IN ltd_likp
WHERE vbeln            = ltd_likp-vbeln
AND erdat            = ltd_likp-erdat
AND z_source_type    = cns_src_type_1
AND z_invoice_no     IN s_invnor
AND z_invoice_date   IN s_invdtr
AND z_cust_name_bt   IN s_btcr
AND z_cust_name_st   IN s_stc_r
AND z_shipped_per    IN s_shperr
AND z_cre_ymd_inv    IN s_crttr
AND z_cre_hms_inv    IN s_crtmr
AND z_cre_userid_inv IN s_crtusr
AND z_mod_ymd_inv    IN s_mdfdtr
AND z_mod_hms_inv    IN s_mdftmr
AND z_mod_userid_inv IN s_mdusr.

IF sy-subrc <> 0.

MESSAGE i006(zmegsd01) WITH cns_ztegsdt001
DISPLAY LIKE cns_msgty_err.

LEAVE SCREEN.
ELSE.

SELECT z_invoice_no
z_si_no
FROM ztegsdt004
INTO TABLE ltd_ztegsdt004
FOR ALL ENTRIES IN ltd_ztegsdt001
WHERE z_invoice_no = ltd_ztegsdt001-z_invoice_no.

IF ltd_ztegsdt004 IS NOT INITIAL.

SELECT z_si_no
z_bl_date
FROM ztegsdt003
INTO TABLE ltd_ztegsdt003
WHERE z_si_no   IN s_sino
AND z_bl_date IN s_bldate.

ENDIF.

ENDIF.

*   A-2-3-1．【選択画面のラジオボタン「Outbounde Delivery」
*             が選択されている場合】
SORT ltd_likp BY vbeln ASCENDING
erdat ASCENDING.

SORT ltd_ztegsdt004 BY z_invoice_no ASCENDING.

SORT ltd_ztegsdt003 BY z_si_no ASCENDING.

LOOP AT ltd_ztegsdt001 INTO lst_ztegsdt001.

MOVE-CORRESPONDING lst_ztegsdt001 TO lst_tradecommon.

CLEAR: lst_likp.

READ TABLE ltd_likp INTO lst_likp
WITH KEY vbeln = lst_ztegsdt001-vbeln
erdat = lst_ztegsdt001-erdat
BINARY SEARCH.

lst_tradecommon-vstel = lst_likp-vstel.

lst_tradecommon-wadat = lst_likp-wadat.

lst_tradecommon-kunag = lst_likp-kunag.

lst_tradecommon-kunnr = lst_likp-kunnr.

lst_tradecommon-vbeln = lst_likp-vbeln.

lst_tradecommon-erdat = lst_likp-erdat.

lst_tradecommon-ernam = lst_likp-ernam.

CLEAR: lst_ztegsdt004.

READ TABLE ltd_ztegsdt004 INTO lst_ztegsdt004
WITH KEY z_invoice_no = lst_ztegsdt001-z_invoice_no
BINARY SEARCH.

CLEAR: lst_ztegsdt003.

READ TABLE ltd_ztegsdt003 INTO lst_ztegsdt003
WITH KEY z_si_no = lst_ztegsdt004-z_si_no
BINARY SEARCH.

lst_tradecommon-z_si_no    = lst_ztegsdt003-z_si_no.

lst_tradecommon-z_bl_date  = lst_ztegsdt003-z_bl_date.

APPEND lst_tradecommon TO o_td_tdc_ref.

CLEAR: lst_tradecommon.

ENDLOOP.

SORT o_td_tdc_ref BY vbeln ASCENDING erdat ASCENDING.

*   出荷伝票、レコード登録日で重複エントリを除外する
DELETE ADJACENT DUPLICATES FROM o_td_tdc_ref
COMPARING vbeln erdat.

ENDIF.

ENDFORM.                    " GET_OUTBOUND_DEL_REF_DATA

*&---------------------------------------------------------------------*
*&      Form  GET_EXTERNAL_REF_DATA
*&---------------------------------------------------------------------*
*       選択画面のラジオボタン「External Data」が選択されている場合
*----------------------------------------------------------------------*
*      <--O_TD_TDC_REF  ラジオボタン「External Data」
*                       のTradeCommonデータ内部テーブル
*----------------------------------------------------------------------*
FORM get_external_ref_data  CHANGING o_td_tdec_ref
TYPE typ_td_tradecommon.
DATA:
lst_tradecommon TYPE typ_td_ztegsdt001,
lst_ztegsdt001  TYPE typ_td_ztegsdt001,
lst_ztegsdt003  TYPE typ_td_ztegsdt003,
lst_ztegsdt004  TYPE typ_td_ztegsdt004,
lst_ztegsdt010  TYPE typ_td_ztegsdt001,
ltd_ztegsdt001  TYPE STANDARD TABLE OF typ_td_ztegsdt001,
ltd_ztegsdt003  TYPE STANDARD TABLE OF typ_td_ztegsdt003,
ltd_ztegsdt004  TYPE STANDARD TABLE OF typ_td_ztegsdt004,
ltd_ztegsdt010  TYPE STANDARD TABLE OF typ_td_ztegsdt001.

SELECT vbeln
erdat
vstel
wadat
kunnr
vbeln
kunag
ernam
FROM ztegsdt010
INTO CORRESPONDING FIELDS OF TABLE ltd_ztegsdt010
WHERE vstel IN s_shpptr
AND wadat IN s_plnedr
AND kunnr IN s_shiptr
AND vbeln IN s_outbdr
AND kunag IN s_soldtr.

IF sy-subrc <> 0.
MESSAGE i006(zmegsd01) WITH cns_ztegsdt010
DISPLAY LIKE cns_msgty_err.

LEAVE SCREEN.
ELSE.

SELECT vbeln
erdat
z_source_type
z_status_invoice
z_invoice_no
z_invoice_date
z_cust_name_bt
z_cust_name_st
z_shipped_per
z_cre_ymd_inv
z_cre_hms_inv
z_cre_userid_inv
z_mod_ymd_inv
z_mod_hms_inv
z_mod_userid_inv
z_cust_bt
z_address1_bt
z_address2_bt
**** START ADD 2014/12/23 ISID11 ****
z_address3_bt
z_address4_bt
**** END ADD 2014/12/23 ISID11 ****
z_attn_bt
z_tel_bt
z_fax_bt
z_cust_st
z_address1_st
z_address2_st
**** START ADD 2014/12/23 ISID11 ****
z_address3_st
z_address4_st
**** END ADD 2014/12/23 ISID11 ****
z_attn_st
z_tel_st
z_fax_st
z_on_or_about
z_trade_from
z_trade_to
z_trade_via
**** START UPD 2015/02/11 ISID11 ****
*           Z_TRADE_PAYMENT
zterm
**** END UPD 2015/02/11 ISID11 ****
z_trade_term
z_inv_remarks1
z_inv_remarks2
z_inv_remarks3
z_inv_remarks4
z_inv_remarks5
z_casemark1
z_casemark2
z_casemark3
z_casemark4
z_casemark5
**** START ADD 2015/08/11 ISID21 ****
z_casemark6
z_casemark7
z_casemark8
z_casemark9
z_casemark10
**** END ADD 2015/08/11 ISID21 ****
FROM ztegsdt001
INTO CORRESPONDING FIELDS OF TABLE ltd_ztegsdt001
FOR ALL ENTRIES IN ltd_ztegsdt010
WHERE vbeln            = ltd_ztegsdt010-vbeln
AND erdat            = ltd_ztegsdt010-erdat
AND z_source_type    = cns_src_type_2
AND z_invoice_no     IN s_invnor
AND z_invoice_date   IN s_invdtr
AND z_cust_name_bt   IN s_btcr
AND z_cust_name_st   IN s_stc_r
AND z_shipped_per    IN s_shperr
AND z_cre_ymd_inv    IN s_crttr
AND z_cre_hms_inv    IN s_crtmr
AND z_cre_userid_inv IN s_crtusr
AND z_mod_ymd_inv    IN s_mdfdtr
AND z_mod_hms_inv    IN s_mdftmr
AND z_mod_userid_inv IN s_mdusr.

IF sy-subrc <> 0.

MESSAGE i006(zmegsd01) WITH cns_ztegsdt001
DISPLAY LIKE cns_msgty_err.

LEAVE SCREEN.

ELSE.

SELECT z_invoice_no
z_si_no
FROM ztegsdt004
INTO TABLE ltd_ztegsdt004
FOR ALL ENTRIES IN ltd_ztegsdt001
WHERE z_invoice_no = ltd_ztegsdt001-z_invoice_no.

IF ltd_ztegsdt004 IS NOT INITIAL.

SELECT z_si_no
z_bl_date
FROM ztegsdt003
INTO TABLE ltd_ztegsdt003
WHERE z_si_no   IN s_sino
AND z_bl_date IN s_bldate.

ENDIF.

ENDIF.

*   A-2-3-2．【選択画面のラジオボタン「External Data」
*             が選択されている場合】
SORT ltd_ztegsdt010 BY vbeln ASCENDING
erdat ASCENDING.

SORT ltd_ztegsdt004 BY z_invoice_no ASCENDING.

SORT ltd_ztegsdt003 BY z_si_no ASCENDING.

LOOP AT ltd_ztegsdt001 INTO lst_ztegsdt001.

MOVE-CORRESPONDING lst_ztegsdt001 TO lst_tradecommon.

READ TABLE ltd_ztegsdt010 INTO lst_ztegsdt010
WITH KEY vbeln = lst_ztegsdt001-vbeln
erdat = lst_ztegsdt001-erdat
BINARY SEARCH.

lst_tradecommon-vbeln = lst_ztegsdt010-vbeln.

lst_tradecommon-erdat = lst_ztegsdt010-erdat.

lst_tradecommon-vstel = lst_ztegsdt010-vstel.

lst_tradecommon-wadat = lst_ztegsdt010-wadat.

lst_tradecommon-kunnr = lst_ztegsdt010-kunnr.

lst_tradecommon-kunag = lst_ztegsdt010-kunag.

lst_tradecommon-ernam = lst_ztegsdt010-ernam.

CLEAR: lst_ztegsdt004.

READ TABLE ltd_ztegsdt004 INTO lst_ztegsdt004
WITH KEY z_invoice_no = lst_ztegsdt001-z_invoice_no
BINARY SEARCH.

CLEAR: lst_ztegsdt003.

READ TABLE ltd_ztegsdt003 INTO lst_ztegsdt003
WITH KEY z_si_no = lst_ztegsdt004-z_si_no
BINARY SEARCH.

lst_tradecommon-z_si_no   = lst_ztegsdt003-z_si_no.

lst_tradecommon-z_bl_date = lst_ztegsdt003-z_bl_date.

APPEND lst_tradecommon TO o_td_tdec_ref.

CLEAR: lst_tradecommon.

ENDLOOP.

SORT o_td_tdec_ref BY vbeln ASCENDING erdat ASCENDING.

*   出荷伝票、レコード登録日で重複エントリを除外する
DELETE ADJACENT DUPLICATES FROM o_td_tdec_ref
COMPARING vbeln erdat.

ENDIF.

ENDFORM.                    " GET_EXTERNAL_REF_DATA

*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_DIALOG
*&---------------------------------------------------------------------*
*       C-3．画面3200の出力
*----------------------------------------------------------------------*
*      -->I_TD_ZSEGSD0004_REF  ALV出力データ内部テーブル
*----------------------------------------------------------------------*
FORM display_alv_dialog  USING i_td_zsegsd0004_ref
TYPE typ_td_zsegsd0004.

DATA: lst_layout   TYPE lvc_s_layo,
lst_fieldcat TYPE lvc_s_fcat,
ltd_fieldcat TYPE lvc_t_fcat,     "ALV fieldcat 属性の設定
lw_idx       TYPE sy-tabix,
**** START ADD 2015/02/05 ISID11 ****
ltd_exclude  TYPE ui_functions.
**** END ADD 2015/02/05 ISID11 ****

* FIELDCATALOGの設定
CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
EXPORTING
*     I_BUFFER_ACTIVE        =
i_structure_name       = cns_alv_str
*     I_CLIENT_NEVER_DISPLAY = 'X'
*     I_BYPASSING_BUFFER     =
*     I_INTERNAL_TABNAME     =
CHANGING
ct_fieldcat            = ltd_fieldcat
EXCEPTIONS
inconsistent_interface = 1
program_error          = 2
OTHERS                 = 3.

IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE cns_msgty_inf NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
DISPLAY LIKE cns_msgty_err.

LEAVE TO SCREEN 0.
ENDIF.

* チェックボックスの設定
LOOP AT ltd_fieldcat INTO lst_fieldcat.

lw_idx = sy-tabix.

IF lw_idx = 1.

lst_fieldcat-no_out    = cns_sel.
**** START DEL 2015/02/05 ISID11 ****
*      LST_FIELDCAT-CHECKBOX  = CNS_SEL.
*      LST_FIELDCAT-EDIT      = CNS_SEL.
**** END DEL 2015/02/05 ISID11 ****

ENDIF.

lst_fieldcat-coltext = lst_fieldcat-scrtext_l.

**** START UPD 2015/02/11 ISID11 ****
*    IF LW_IDX = 14.
*      LST_FIELDCAT-COLTEXT = LST_FIELDCAT-SCRTEXT_S.
*    ENDIF.
CASE lst_fieldcat-fieldname.
WHEN 'TRADEDOCTYPE'.

lst_fieldcat-no_out = 'X'.

WHEN 'Z_STATUS_INVOICE'.

lst_fieldcat-coltext = lst_fieldcat-scrtext_s.

WHEN OTHERS.

ENDCASE.
**** END UPD 2015/02/11 ISID11 ****

MODIFY ltd_fieldcat FROM lst_fieldcat INDEX lw_idx.

ENDLOOP.

* LAYOUTの設定
lst_layout-cwidth_opt = cns_sel.
lst_layout-zebra      = cns_sel.
lst_layout-box_fname  = cns_chkbx.

**** START ADD 2015/02/05 ISID11 ****
* ユーザ事件を除く
PERFORM exclude_tb_functions CHANGING ltd_exclude.
**** END ADD 2015/02/05 ISID11 ****

IF ci_ccontainer IS INITIAL.
* コントロールの創建
CREATE OBJECT ci_ccontainer
EXPORTING
container_name              = ci_custom_control_name
EXCEPTIONS
cntl_error                  = 1
cntl_system_error           = 2
create_error                = 3
lifetime_error              = 4
lifetime_dynpro_dynpro_link = 5
OTHERS                      = 6.

IF sy-subrc = 0.
*     ALVインスタント
CREATE OBJECT ci_alv
EXPORTING
i_parent          = ci_ccontainer
EXCEPTIONS
error_cntl_create = 1
error_cntl_init   = 2
error_cntl_link   = 3
error_dp_create   = 4
OTHERS            = 5.

ELSE.
MESSAGE ID sy-msgid TYPE cns_msgty_inf NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
DISPLAY LIKE cns_msgty_err.

LEAVE TO SCREEN 0.
ENDIF.

CALL METHOD ci_alv->set_table_for_first_display
EXPORTING
*       i_structure_name              = cns_alv_str
is_layout                     = lst_layout
it_toolbar_excluding          = ltd_exclude
CHANGING
it_outtab                     = i_td_zsegsd0004_ref
it_fieldcatalog               = ltd_fieldcat
EXCEPTIONS
invalid_parameter_combination = 1
program_error                 = 2
too_many_lines                = 3
OTHERS                        = 4.

IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE cns_msgty_inf NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
DISPLAY LIKE cns_msgty_err.

LEAVE TO SCREEN 0.
ENDIF.

ELSE.

*   リフレッシュ
CALL METHOD ci_alv->refresh_table_display
*      EXPORTING
*        IS_STABLE      =
*       I_SOFT_REFRESH =
EXCEPTIONS
finished       = 1
OTHERS         = 2.

IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE cns_msgty_inf NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
DISPLAY LIKE cns_msgty_err.

LEAVE TO SCREEN 0.
ENDIF.

ENDIF.

ENDFORM.                    " DISPLAY_ALV_DIALOG

*&---------------------------------------------------------------------*
*&      Form  CALL_SCR3300
*&---------------------------------------------------------------------*
*       画面3300の呼出
*----------------------------------------------------------------------*
FORM call_scr3300 .
DATA: lw_cnt            TYPE i,
lsd_zsegsd0004    TYPE zsegsd0004,
ltd_et_index_rows TYPE lvc_t_row,
lsd_et_index_rows TYPE lvc_s_row.

* C-4-3．一覧画面の「OK」ボタン押下時の処理
* C-4-3-1．行選択のチェック処理
CALL METHOD ci_alv->get_selected_rows
IMPORTING
et_index_rows = ltd_et_index_rows
*     ET_ROW_NO     =
.

DESCRIBE TABLE ltd_et_index_rows LINES lw_cnt.

IF lw_cnt = 0.
*   行が選択されていない場合
MESSAGE e008(zmegsd01).
ELSEIF lw_cnt > 1.
*   行のチェックが複数選択されている場合
MESSAGE e007(zmegsd01).
ENDIF.

READ TABLE ltd_et_index_rows INTO lsd_et_index_rows INDEX 1.

lsd_zsegsd0004-z_chk = cns_sel.

CLEAR: lw_cnt.

lw_cnt = lsd_et_index_rows-index.

MODIFY td_zsegsd0004_ref INDEX lw_cnt FROM lsd_zsegsd0004
TRANSPORTING z_chk.

CALL SCREEN 3300 STARTING AT 11  1
**** START UPD 2014/12/23 ISID11 ****
*                   ENDING   AT 75 16.
**** START UPD 2015/08/11 ISID21 ****
*                   ENDING   AT 102 11.
ENDING   AT 122 11.
**** END UPD 2015/08/11 ISID21 ****
**** END UPD 2014/12/23 ISID11 ****

ENDFORM.                    " CALL_SCR3300

*&---------------------------------------------------------------------*
*&      Form  EXEC_SCR3300
*&---------------------------------------------------------------------*
*       C-4-5．単票画面の「実行」ボタン押下時の処理
*----------------------------------------------------------------------*
FORM exec_scr3300 .
DATA: lst_ref            TYPE zsegsd0004,
ltd_zsegsd0004_ref TYPE STANDARD TABLE OF zsegsd0004.

* C-4-5-1．チェックボックス選択のチェック処理
* チェックボックスが1つも選択されていない場合は、
* エラーとしメッセージを出力する。（シート「DV110メッセージ定義」-No.13）
IF w_chk1  <> cns_sel AND
w_chk2  <> cns_sel AND
w_chk3  <> cns_sel AND
w_chk4  <> cns_sel AND
w_chk5  <> cns_sel AND
w_chk6  <> cns_sel AND
w_chk7  <> cns_sel AND
w_chk8  <> cns_sel AND
w_chk9  <> cns_sel AND
w_chk10 <> cns_sel AND
w_chk11 <> cns_sel AND
w_chk12 <> cns_sel AND
w_chk13 <> cns_sel AND
w_chk14 <> cns_sel AND
w_chk15 <> cns_sel AND
w_chk16 <> cns_sel AND
w_chk17 <> cns_sel AND
w_chk18 <> cns_sel AND
w_chk19 <> cns_sel AND
w_chk20 <> cns_sel AND
w_chk21 <> cns_sel AND
w_chk22 <> cns_sel AND
w_chk23 <> cns_sel AND
w_chk24 <> cns_sel AND
w_chk25 <> cns_sel AND
w_chk26 <> cns_sel AND
w_chk27 <> cns_sel AND
w_chk28 <> cns_sel AND
w_chk29 <> cns_sel AND
w_chk30 <> cns_sel AND
w_chk31 <> cns_sel AND
**** START ADD 2014/12/23 ISID11 ****
w_chk32 <> cns_sel AND           "画面3300のAddress3(Bill To)
w_chk33 <> cns_sel AND           "画面3300のAddress4(Bill To)
w_chk34 <> cns_sel AND           "画面3300のAddress3(Ship To)
w_chk35 <> cns_sel AND           "画面3300のAddress4(Ship To)
**** END ADD 2014/12/23 ISID11 ****
**** START ADD 2015/08/11 ISID21 ****
w_chk36 <> cns_sel AND           "画面3300のCase Mark (6)
w_chk37 <> cns_sel AND           "画面3300のCase Mark (7)
w_chk38 <> cns_sel AND           "画面3300のCase Mark (8)
w_chk39 <> cns_sel AND           "画面3300のCase Mark (9)
w_chk40 <> cns_sel.              "画面3300のCase Mark (10)
**** END ADD 2015/08/11 ISID21 ****

MESSAGE i014(zmegsd01) DISPLAY LIKE cns_msgty_err.
LEAVE SCREEN.

ELSE.
*   C-4-5-2．選択行の値取得処理
ltd_zsegsd0004_ref = td_zsegsd0004_ref.

SORT ltd_zsegsd0004_ref BY z_chk ASCENDING.

READ TABLE ltd_zsegsd0004_ref INTO lst_ref
WITH KEY z_chk = cns_sel BINARY SEARCH.

IF w_chk1  = cns_sel.
st_zsegsd0004-z_cust_billto    = lst_ref-z_cust_billto.
ENDIF.

IF w_chk2  = cns_sel.
st_zsegsd0004-z_cust_name_bill = lst_ref-z_cust_name_bill.
ENDIF.

IF w_chk3  = cns_sel.
st_zsegsd0004-z_address1_billt = lst_ref-z_address1_billt.
ENDIF.

IF w_chk4  = cns_sel.
st_zsegsd0004-z_address2_billt = lst_ref-z_address2_billt.
ENDIF.

**** START ADD 2014/12/23 ISID11 ****
IF w_chk32 = cns_sel.   "画面3300のAddress3(Bill To)
st_zsegsd0004-z_address3_billt = lst_ref-z_address3_billt.
ENDIF.

IF w_chk33 = cns_sel.   "画面3300のAddress4(Bill To)
st_zsegsd0004-z_address4_billt = lst_ref-z_address4_billt.
ENDIF.
**** END ADD 2014/12/23 ISID11 ****

IF w_chk5  = cns_sel.
st_zsegsd0004-z_attn_billto    = lst_ref-z_attn_billto.
ENDIF.

IF w_chk6  = cns_sel.
st_zsegsd0004-z_tel_billto     = lst_ref-z_tel_billto.
ENDIF.

IF w_chk7  = cns_sel.
st_zsegsd0004-z_fax_billto     = lst_ref-z_fax_billto.
ENDIF.

IF w_chk8  = cns_sel.
st_zsegsd0004-z_cust_shipto    = lst_ref-z_cust_shipto.
ENDIF.

IF w_chk9  = cns_sel.
st_zsegsd0004-z_cust_name_ship = lst_ref-z_cust_name_ship.
ENDIF.

IF w_chk10 = cns_sel.
st_zsegsd0004-z_address1_shipt = lst_ref-z_address1_shipt.
ENDIF.

IF w_chk11 = cns_sel.
st_zsegsd0004-z_address2_shipt = lst_ref-z_address2_shipt.
ENDIF.

**** START ADD 2014/12/23 ISID11 ****
IF w_chk34 = cns_sel.   "画面3300のAddress3(Ship To)
st_zsegsd0004-z_address3_shipt = lst_ref-z_address3_shipt.
ENDIF.

IF w_chk35 = cns_sel.   "画面3300のAddress4(Ship To)
st_zsegsd0004-z_address4_shipt = lst_ref-z_address4_shipt.
ENDIF.
**** END ADD 2014/12/23 ISID11 ****

IF w_chk12 = cns_sel.
st_zsegsd0004-z_attn_shipto    = lst_ref-z_attn_shipto.
ENDIF.

IF w_chk13 = cns_sel.
st_zsegsd0004-z_tel_shipto     = lst_ref-z_tel_shipto.
ENDIF.

IF w_chk14 = cns_sel.
st_zsegsd0004-z_fax_shipto     = lst_ref-z_fax_shipto.
ENDIF.

IF w_chk15 = cns_sel.
st_zsegsd0004-z_shipped_per    = lst_ref-z_shipped_per.
ENDIF.

IF w_chk16 = cns_sel.
st_zsegsd0004-z_on_or_about    = lst_ref-z_on_or_about.
ENDIF.

IF w_chk17 = cns_sel.
st_zsegsd0004-z_trade_from     = lst_ref-z_trade_from.
ENDIF.

IF w_chk18 = cns_sel.
st_zsegsd0004-z_trade_to       = lst_ref-z_trade_to.
ENDIF.

IF w_chk19 = cns_sel.
st_zsegsd0004-z_trade_via      = lst_ref-z_trade_via.
ENDIF.

IF w_chk20 = cns_sel.
**** START UPD 2015/02/11 ISID11 ****
*      ST_ZSEGSD0004-Z_TRADE_PAYMENT  = LST_REF-Z_TRADE_PAYMENT.
st_zsegsd0004-zterm            = lst_ref-zterm.
**** END UPD 2015/02/11 ISID11 ****
ENDIF.

IF w_chk21 = cns_sel.
st_zsegsd0004-z_trade_term     = lst_ref-z_trade_term.
ENDIF.

IF w_chk22 = cns_sel.
st_zsegsd0004-z_inv_remark1    = lst_ref-z_inv_remark1.
ENDIF.

IF w_chk23 = cns_sel.
st_zsegsd0004-z_inv_remark2    = lst_ref-z_inv_remark2.
ENDIF.

IF w_chk24 = cns_sel.
st_zsegsd0004-z_inv_remark3    = lst_ref-z_inv_remark3.
ENDIF.

IF w_chk25 = cns_sel.
st_zsegsd0004-z_inv_remark4    = lst_ref-z_inv_remark4.
ENDIF.

IF w_chk26 = cns_sel.
st_zsegsd0004-z_inv_remark5    = lst_ref-z_inv_remark5.
ENDIF.

IF w_chk27 = cns_sel.
st_zsegsd0004-z_casemark1      = lst_ref-z_casemark1.
ENDIF.

IF w_chk28 = cns_sel.
st_zsegsd0004-z_casemark2      = lst_ref-z_casemark2.
ENDIF.

IF w_chk29 = cns_sel.
st_zsegsd0004-z_casemark3      = lst_ref-z_casemark3.
ENDIF.

IF w_chk30 = cns_sel.
st_zsegsd0004-z_casemark4      = lst_ref-z_casemark4.
ENDIF.

IF w_chk31 = cns_sel.
st_zsegsd0004-z_casemark5      = lst_ref-z_casemark5.
ENDIF.

**** START ADD 2015/08/11 ISID21 ****
IF w_chk36 = cns_sel.
st_zsegsd0004-z_casemark6      = lst_ref-z_casemark6.
ENDIF.

IF w_chk37 = cns_sel.
st_zsegsd0004-z_casemark7      = lst_ref-z_casemark7.
ENDIF.

IF w_chk38 = cns_sel.
st_zsegsd0004-z_casemark8      = lst_ref-z_casemark8.
ENDIF.

IF w_chk39 = cns_sel.
st_zsegsd0004-z_casemark9      = lst_ref-z_casemark9.
ENDIF.

IF w_chk40 = cns_sel.
st_zsegsd0004-z_casemark10      = lst_ref-z_casemark10.
ENDIF.
**** END ADD 2015/08/11 ISID21 ****

ENDIF.

ENDFORM.                    " EXEC_SCR3300

*&---------------------------------------------------------------------*
*&      Form  SEL_ALL_3300
*&---------------------------------------------------------------------*
*       C-4-7．単票画面の「全選択」ボタン押下時の処理
*----------------------------------------------------------------------*
FORM sel_all_3300 .
w_chk1  = cns_sel.
w_chk2  = cns_sel.
w_chk3  = cns_sel.
w_chk4  = cns_sel.
w_chk5  = cns_sel.
w_chk6  = cns_sel.
w_chk7  = cns_sel.
w_chk8  = cns_sel.
w_chk9  = cns_sel.
w_chk10 = cns_sel.
w_chk11 = cns_sel.
w_chk12 = cns_sel.
w_chk13 = cns_sel.
w_chk14 = cns_sel.
w_chk15 = cns_sel.
w_chk16 = cns_sel.
w_chk17 = cns_sel.
w_chk18 = cns_sel.
w_chk19 = cns_sel.
w_chk20 = cns_sel.
w_chk21 = cns_sel.
w_chk22 = cns_sel.
w_chk23 = cns_sel.
w_chk24 = cns_sel.
w_chk25 = cns_sel.
w_chk26 = cns_sel.
w_chk27 = cns_sel.
w_chk28 = cns_sel.
w_chk29 = cns_sel.
w_chk30 = cns_sel.
w_chk31 = cns_sel.
**** START ADD 2014/12/23 ISID11 ****
w_chk32 = cns_sel.            "画面3300のAddress3(Bill To)
w_chk33 = cns_sel.            "画面3300のAddress4(Bill To)
w_chk34 = cns_sel.            "画面3300のAddress3(Ship To)
w_chk35 = cns_sel.            "画面3300のAddress4(Ship To)
**** END ADD 2014/12/23 ISID11 ****
**** START ADD 2015/08/11 ISID21 ****
w_chk36 = cns_sel.            "画面3300のCase Mark (6)
w_chk37 = cns_sel.            "画面3300のCase Mark (7)
w_chk38 = cns_sel.            "画面3300のCase Mark (8)
w_chk39 = cns_sel.            "画面3300のCase Mark (9)
w_chk40 = cns_sel.            "画面3300のCase Mark (10)
**** END ADD 2015/08/11 ISID21 ****

ENDFORM.                    " SEL_ALL_3300

*&---------------------------------------------------------------------*
*&      Form  DESEL_ALL_3300
*&---------------------------------------------------------------------*
*       C-4-8．単票画面の「全選択解除」ボタン押下時の処理
*----------------------------------------------------------------------*
FORM desel_all_3300 .
CLEAR: w_chk1,
w_chk2,
w_chk3,
w_chk4,
w_chk5,
w_chk6,
w_chk7,
w_chk8,
w_chk9,
w_chk10,
w_chk11,
w_chk12,
w_chk13,
w_chk14,
w_chk15,
w_chk16,
w_chk17,
w_chk18,
w_chk19,
w_chk20,
w_chk21,
w_chk22,
w_chk23,
w_chk24,
w_chk25,
w_chk26,
w_chk27,
w_chk28,
w_chk29,
w_chk30,
w_chk31,
**** START ADD 2014/12/23 ISID11 ****
w_chk32,            "画面3300のAddress3(Bill To)
w_chk33,            "画面3300のAddress4(Bill To)
w_chk34,            "画面3300のAddress3(Ship To)
w_chk35,            "画面3300のAddress4(Ship To)
**** END ADD 2014/12/23 ISID11 ****
**** START ADD 2015/08/11 ISID21 ****
w_chk36,            "画面3300のCase Mark (6)
w_chk37,            "画面3300のCase Mark (7)
w_chk38,            "画面3300のCase Mark (8)
w_chk39,            "画面3300のCase Mark (9)
w_chk40.            "画面3300のCase Mark (10)
**** END ADD 2015/08/11 ISID21 ****

ENDFORM.                    " DESEL_ALL_3300

*&---------------------------------------------------------------------*
*&      Form  SEL_ALL_2000
*&---------------------------------------------------------------------*
*       画面2000の全選択ボタン
*----------------------------------------------------------------------*
*       --> I_W_FLAL 全選択、全選択解除フラグ
*----------------------------------------------------------------------*
FORM sel_all_2000 USING i_w_flal TYPE char1.

DATA: lst_zsegsd0004  TYPE zsegsd0004.

lst_zsegsd0004-z_chk = i_w_flal.

MODIFY td_zsegsd0004 FROM lst_zsegsd0004 TRANSPORTING z_chk
WHERE z_chk <> i_w_flal.

ENDFORM.                    " SEL_ALL_2000

*&---------------------------------------------------------------------*
*&      Form  INIT_SCR3100
*&---------------------------------------------------------------------*
*       画面3100表示時、画面項目値の初期化
*----------------------------------------------------------------------*
FORM init_scr3100 .
CLEAR:rb_10,
rb_20,
w_leave_flg.

REFRESH:
s_shpptr[],
s_plnedr[],
s_soldtr[],
s_shiptr[],
s_outbdr[],
s_invnor[],
s_invdtr[],
s_btcr[],
s_stc_r[],
s_shperr[],
s_crttr[],
s_crtmr[],
s_crtusr[],
s_mdfdtr[],
s_mdftmr[],
s_mdusr[].

ENDFORM.                    " INIT_SCR3100

*&---------------------------------------------------------------------*
*&      Form  F4_FOR_LAYOUT
*&---------------------------------------------------------------------*
*       選択画面のF4の検索ヘルプの設定
*----------------------------------------------------------------------*
FORM f4_for_layout .

DATA: lst_variant_i TYPE disvariant,
lw_save(1)    TYPE c,
lw_exit(1)    TYPE c,
lst_variant_e TYPE disvariant.

lw_save = cns_save_a.

lst_variant_i-report = sy-repid.

CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
EXPORTING
is_variant          = lst_variant_i
*     I_TABNAME_HEADER    =
*     I_TABNAME_ITEM      =
*     IT_DEFAULT_FIELDCAT =
i_save              = lw_save
*     I_DISPLAY_VIA_GRID  = ' '
IMPORTING
e_exit              = lw_exit
es_variant          = lst_variant_e
EXCEPTIONS
not_found           = 1
program_error       = 2
OTHERS              = 3.

IF sy-subrc <> 0.

MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.

ELSE.

IF lw_exit = space.

p_layout = lst_variant_e-variant.

ENDIF.

ENDIF.

ENDFORM.                    " F4_FOR_LAYOUT

*&---------------------------------------------------------------------*
*&      Form  FM_POPUP_CONFIRM
*&---------------------------------------------------------------------*
*       終了確認
*----------------------------------------------------------------------*
FORM fm_popup_confirm .

CLEAR: w_flg_change.

* 画面3000の項目値が変更かどうかの判定
IF st_zsegsd0004_ini-z_invoice_date <> st_zsegsd0004-z_invoice_date.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_cust_billto <> st_zsegsd0004-z_cust_billto.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_cust_name_bill
<> st_zsegsd0004-z_cust_name_bill.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_address1_billt
<> st_zsegsd0004-z_address1_billt.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_address2_billt
<> st_zsegsd0004-z_address2_billt.
w_flg_change = cns_sel.
ENDIF.

**** START ADD 2014/12/23 ISID11 ****
IF st_zsegsd0004_ini-z_address3_billt
<> st_zsegsd0004-z_address3_billt.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_address4_billt
<> st_zsegsd0004-z_address4_billt.
w_flg_change = cns_sel.
ENDIF.
**** END ADD 2014/12/23 ISID11 ****

IF st_zsegsd0004_ini-z_attn_billto <> st_zsegsd0004-z_attn_billto.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_tel_billto  <> st_zsegsd0004-z_tel_billto.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_fax_billto  <> st_zsegsd0004-z_fax_billto.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_cust_shipto <> st_zsegsd0004-z_cust_shipto.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_cust_name_ship
<> st_zsegsd0004-z_cust_name_ship.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_address1_shipt
<> st_zsegsd0004-z_address1_shipt.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_address2_shipt
<> st_zsegsd0004-z_address2_shipt.
w_flg_change = cns_sel.
ENDIF.

**** START ADD 2014/12/23 ISID11 ****
IF st_zsegsd0004_ini-z_address3_shipt
<> st_zsegsd0004-z_address3_shipt.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_address4_shipt
<> st_zsegsd0004-z_address4_shipt.
w_flg_change = cns_sel.
ENDIF.
**** END ADD 2014/12/23 ISID11 ****

IF st_zsegsd0004_ini-z_attn_shipto <> st_zsegsd0004-z_attn_shipto.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_tel_shipto  <> st_zsegsd0004-z_tel_shipto.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_fax_shipto  <> st_zsegsd0004-z_fax_shipto.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_shipped_per <> st_zsegsd0004-z_shipped_per.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_on_or_about <> st_zsegsd0004-z_on_or_about.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_trade_from  <> st_zsegsd0004-z_trade_from.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_trade_to    <> st_zsegsd0004-z_trade_to.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_trade_via   <> st_zsegsd0004-z_trade_via.
w_flg_change = cns_sel.
ENDIF.

**** START UPD 2015/02/11 ISID11 ****
*  IF ST_ZSEGSD0004_INI-Z_TRADE_PAYMENT
*                                     <> ST_ZSEGSD0004-Z_TRADE_PAYMENT.
IF st_zsegsd0004_ini-zterm         <> st_zsegsd0004-zterm.
**** END UPD 2015/02/11 ISID11 ****
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_trade_term  <> st_zsegsd0004-z_trade_term.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_inv_remark1 <> st_zsegsd0004-z_inv_remark1.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_inv_remark2 <> st_zsegsd0004-z_inv_remark2.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_inv_remark3 <> st_zsegsd0004-z_inv_remark3.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_inv_remark4 <> st_zsegsd0004-z_inv_remark4.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_inv_remark5 <> st_zsegsd0004-z_inv_remark5.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_casemark1   <> st_zsegsd0004-z_casemark1.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_casemark2   <> st_zsegsd0004-z_casemark2.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_casemark3   <> st_zsegsd0004-z_casemark3.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_casemark4   <> st_zsegsd0004-z_casemark4.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_casemark5   <> st_zsegsd0004-z_casemark5.
w_flg_change = cns_sel.
ENDIF.

**** START ADD 2015/08/11 ISID21 ****
IF st_zsegsd0004_ini-z_casemark6   <> st_zsegsd0004-z_casemark6.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_casemark7   <> st_zsegsd0004-z_casemark7.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_casemark8   <> st_zsegsd0004-z_casemark8.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_casemark9   <> st_zsegsd0004-z_casemark9.
w_flg_change = cns_sel.
ENDIF.

IF st_zsegsd0004_ini-z_casemark10   <> st_zsegsd0004-z_casemark10.
w_flg_change = cns_sel.
ENDIF.
**** END ADD 2015/08/11 ISID21 ****

* 画面3000の変更あり
IF w_flg_change = cns_sel.

CLEAR: w_ans.

CALL FUNCTION 'POPUP_TO_CONFIRM'
EXPORTING
titlebar                    = text-006
*     DIAGNOSE_OBJECT             = ' '
text_question               = text-007
text_button_1               = text-008
*     ICON_BUTTON_1               = ' '
text_button_2               = text-009
*     ICON_BUTTON_2               = ' '
*     DEFAULT_BUTTON              = '1'
display_cancel_button       = space
*     USERDEFINED_F1_HELP         = ' '
*     START_COLUMN                = 25
*     START_ROW                   = 6
*     POPUP_TYPE                  =
*     IV_QUICKINFO_BUTTON_1       = ' '
*     IV_QUICKINFO_BUTTON_2       = ' '
IMPORTING
answer                      = w_ans
*   TABLES
*     PARAMETER                   =
EXCEPTIONS
text_not_found              = 1
OTHERS                      = 2
.
IF sy-subrc <> 0.

MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.

ENDIF.

ENDIF.

ENDFORM.                    " FM_POPUP_CONFIRM

*&---------------------------------------------------------------------*
*&      Form  REFRESH_SCR2000
*&---------------------------------------------------------------------*
*       画面2000のリフレッシュ
*----------------------------------------------------------------------*
FORM refresh_scr2000 .

CALL METHOD wo_guid->check_changed_data.

* リフレッシュ
CALL METHOD wo_guid->refresh_table_display
*    EXPORTING
*      IS_STABLE      =
*     I_SOFT_REFRESH =
EXCEPTIONS
finished       = 1
OTHERS         = 2.

ENDFORM.                    " REFRESH_SCR2000

*&---------------------------------------------------------------------*
*&      Form  INPUT_CHECK
*&---------------------------------------------------------------------*
*       画面3000の入力存在チェック
*----------------------------------------------------------------------*
FORM input_check .
DATA: lw_flg_check(1) TYPE c.

**** START ADD 2015/02/11 ISID11 ****
IF st_zsegsd0004-tradedoctype IS INITIAL
AND w_invoice_flg IS NOT INITIAL.

MESSAGE s055(00) DISPLAY LIKE cns_msgty_err.
w_cur_fld = 'ST_ZSEGSD0004-TRADEDOCTYPE'.
LEAVE SCREEN.

ENDIF.
**** END ADD 2015/02/11 ISID11 ****

* Customer(Bill To)
IF st_zsegsd0004-z_cust_billto IS NOT INITIAL.

PERFORM check_cust USING st_zsegsd0004-z_cust_billto
CHANGING lw_flg_check.

IF lw_flg_check = cns_sel.

MESSAGE s006(zmegsd01) WITH 'KNA1' DISPLAY LIKE cns_msgty_err.

w_cur_fld = 'ST_ZSEGSD0004-Z_CUST_BILLTO'.

LEAVE SCREEN.

ENDIF.

ENDIF.

* Customer(Ship To)
IF st_zsegsd0004-z_cust_shipto IS NOT INITIAL.

CLEAR: lw_flg_check.

PERFORM check_cust USING st_zsegsd0004-z_cust_shipto
CHANGING lw_flg_check.

IF lw_flg_check = cns_sel.

MESSAGE s006(zmegsd01) WITH 'KNA1' DISPLAY LIKE cns_msgty_err.

w_cur_fld = 'ST_ZSEGSD0004-Z_CUST_SHIPTO'.

LEAVE SCREEN.

ENDIF.

ENDIF.

**** START DEL 2015/01/31 ISID11 ****
** Shipped Per
*  IF ST_ZSEGSD0004-Z_SHIPPED_PER IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_TRADER USING ST_ZSEGSD0004-Z_SHIPPED_PER
*                      CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM002'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_SHIPPED_PER'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.

** From
*  IF ST_ZSEGSD0004-Z_TRADE_FROM IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_FROM_TO_VIA USING ST_ZSEGSD0004-Z_TRADE_FROM
*                           CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM002'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_TRADE_FROM'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.

** To
*  IF ST_ZSEGSD0004-Z_TRADE_TO IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_FROM_TO_VIA USING ST_ZSEGSD0004-Z_TRADE_TO
*                           CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM002'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_TRADE_TO'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.

** Via
*  IF ST_ZSEGSD0004-Z_TRADE_VIA IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_FROM_TO_VIA USING ST_ZSEGSD0004-Z_TRADE_VIA
*                           CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM002'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_TRADE_VIA'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.

** Payment
*  IF ST_ZSEGSD0004-Z_TRADE_PAYMENT IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_PAYMENT USING ST_ZSEGSD0004-Z_TRADE_PAYMENT
*                       CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM003'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_TRADE_PAYMENT'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.

** Trade Term
*  IF ST_ZSEGSD0004-Z_TRADE_TERM IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_TRADE_TERM USING ST_ZSEGSD0004-Z_TRADE_TERM
*                          CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM004'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_TRADE_TERM'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.

** Remarks
*  IF ST_ZSEGSD0004-Z_INV_REMARK1 IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_REMARK USING ST_ZSEGSD0004-Z_INV_REMARK1
*                      CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM005'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_INV_REMARK1'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.
*
*  IF ST_ZSEGSD0004-Z_INV_REMARK2 IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_REMARK USING ST_ZSEGSD0004-Z_INV_REMARK2
*                      CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM005'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_INV_REMARK2'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.
*
*  IF ST_ZSEGSD0004-Z_INV_REMARK3 IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_REMARK USING ST_ZSEGSD0004-Z_INV_REMARK3
*                      CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM005'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_INV_REMARK3'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.
*
*  IF ST_ZSEGSD0004-Z_INV_REMARK4 IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_REMARK USING ST_ZSEGSD0004-Z_INV_REMARK4
*                      CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM005'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_INV_REMARK4'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.
*
*  IF ST_ZSEGSD0004-Z_INV_REMARK5 IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_REMARK USING ST_ZSEGSD0004-Z_INV_REMARK5
*                      CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM005'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_INV_REMARK5'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.

** Case Mark
*  IF ST_ZSEGSD0004-Z_CASEMARK1 IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_CASEMARK USING ST_ZSEGSD0004-Z_CASEMARK1
*                        CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM001'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_CASEMARK1'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.
*
*  IF ST_ZSEGSD0004-Z_CASEMARK2 IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_CASEMARK USING ST_ZSEGSD0004-Z_CASEMARK2
*                        CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM001'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_CASEMARK2'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.
*
*  IF ST_ZSEGSD0004-Z_CASEMARK3 IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_CASEMARK USING ST_ZSEGSD0004-Z_CASEMARK3
*                        CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM001'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_CASEMARK3'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.
*
*  IF ST_ZSEGSD0004-Z_CASEMARK4 IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_CASEMARK USING ST_ZSEGSD0004-Z_CASEMARK4
*                        CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM001'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_CASEMARK4'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.
*
*  IF ST_ZSEGSD0004-Z_CASEMARK5 IS NOT INITIAL.
*
*    CLEAR: LW_FLG_CHECK.
*
*    PERFORM CHECK_CASEMARK USING ST_ZSEGSD0004-Z_CASEMARK5
*                        CHANGING LW_FLG_CHECK.
*
*    IF LW_FLG_CHECK = CNS_SEL.
*
*      MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDM001'
*                     DISPLAY LIKE CNS_MSGTY_ERR.
*
*      W_CUR_FLD = 'ST_ZSEGSD0004-Z_CASEMARK5'.
*
*      LEAVE SCREEN.
*
*    ENDIF.
*
*  ENDIF.
**** END DEL 2015/01/31 ISID11 ****

ENDFORM.                    " INPUT_CHECK

*&---------------------------------------------------------------------*
*&      Form  CHECK_CUST
*&---------------------------------------------------------------------*
*       Customer Code の存在チェック
*----------------------------------------------------------------------*
*      -->I_CUST Customer Code
*      <--O_FLG  存在チェクフラグ
*----------------------------------------------------------------------*
FORM check_cust  USING    i_cust TYPE zecustbillto
CHANGING o_flg  TYPE char1.

DATA: lw_kunnr TYPE kunnr.

SELECT SINGLE kunnr
FROM kna1
INTO lw_kunnr
WHERE kunnr = i_cust.

IF sy-subrc <> 0.
o_flg = cns_sel.
ENDIF.

ENDFORM.                    " CHECK_CUST

**** START DEL 2015/01/31 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  CHECK_TRADER
*&---------------------------------------------------------------------*
*       Trader の存在チェック
*----------------------------------------------------------------------*
*      -->I_TRADER  Trader 項目
*      <--O_FLG     存在チェクフラグ
*----------------------------------------------------------------------*
*FORM CHECK_TRADER  USING    I_TRADER TYPE CHAR35
*                   CHANGING O_FLG    TYPE CHAR1.
*
*  DATA: LW_IN_TRADER(40) TYPE C,
*        LW_Z_FROM_TO_VIA TYPE ZEFROMTOVIA.
*
*  LW_IN_TRADER = I_TRADER.
*
*  SELECT Z_FROM_TO_VIA
*    FROM ZTEGSDM002
*    UP TO 1 ROWS
*    INTO LW_Z_FROM_TO_VIA
*   WHERE Z_FROM_TO_VIA = LW_IN_TRADER.
*  ENDSELECT.
*
*  IF SY-SUBRC <> 0.
*    O_FLG = CNS_SEL.
*  ENDIF.
*
*ENDFORM.                    " CHECK_TRADER

*&---------------------------------------------------------------------*
*&      Form  CHECK_FROM_TO_VIA
*&---------------------------------------------------------------------*
*       From To Via の存在チェック
*----------------------------------------------------------------------*
*      -->I_FROM_TO_VIA  FromToVia
*      <--O_FLG          存在チェクフラグ
*----------------------------------------------------------------------*
*FORM CHECK_FROM_TO_VIA  USING    I_FROM_TO_VIA TYPE ZEFROMTOVIA
*                        CHANGING O_FLG         TYPE CHAR1.
*
*  DATA: LW_Z_FROM_TO_VIA TYPE ZEFROMTOVIA.
*
*  SELECT Z_FROM_TO_VIA
*    FROM ZTEGSDM002
*    UP TO 1 ROWS
*    INTO LW_Z_FROM_TO_VIA
*   WHERE Z_FROM_TO_VIA = I_FROM_TO_VIA.
*  ENDSELECT.
*
*  IF SY-SUBRC <> 0.
*    O_FLG = CNS_SEL.
*  ENDIF.
*
*ENDFORM.                    " CHECK_FROM_TO_VIA

*&---------------------------------------------------------------------*
*&      Form  CHECK_PAYMENT
*&---------------------------------------------------------------------*
*       Paymentの存在チェック
*----------------------------------------------------------------------*
*      -->I_TRADE_PAYMENT  Payment
*      <--O_FLG            存在チェクフラグ
*----------------------------------------------------------------------*
*FORM CHECK_PAYMENT  USING    I_TRADE_PAYMENT TYPE ZETRADEPAYMENT
*                    CHANGING O_FLG           TYPE CHAR1.
*
*  DATA: LW_Z_TRADE_PAYMENT TYPE ZETRADEPAYMENT.
*
*  SELECT Z_TRADE_PAYMENT
*    FROM ZTEGSDM003
*    UP TO 1 ROWS
*    INTO LW_Z_TRADE_PAYMENT
*   WHERE Z_TRADE_PAYMENT = I_TRADE_PAYMENT.
*  ENDSELECT.
*
*  IF SY-SUBRC <> 0.
*    O_FLG = CNS_SEL.
*  ENDIF.
*
*ENDFORM.                    " CHECK_PAYMENT

*&---------------------------------------------------------------------*
*&      Form  CHECK_TRADE_TERM
*&---------------------------------------------------------------------*
*       Trade Termの存在チェック
*----------------------------------------------------------------------*
*      -->I_TRADE_TERM  TRADE_TERM
*      <--O_FLG         存在チェクフラグ
*----------------------------------------------------------------------*
*FORM CHECK_TRADE_TERM  USING    I_TRADE_TERM TYPE ZETRADETERM
*                       CHANGING O_FLG        TYPE CHAR1.
*
*  DATA: LW_Z_TRADE_TERM TYPE ZETRADETERM.
*
*  SELECT Z_TRADE_TERM
*    FROM ZTEGSDM004
*    UP TO 1 ROWS
*    INTO LW_Z_TRADE_TERM
*   WHERE Z_TRADE_TERM = I_TRADE_TERM.
*  ENDSELECT.
*
*  IF SY-SUBRC <> 0.
*    O_FLG = CNS_SEL.
*  ENDIF.
*
*ENDFORM.                    " CHECK_TRADE_TERM

*&---------------------------------------------------------------------*
*&      Form  CHECK_REMARK
*&---------------------------------------------------------------------*
*       Remarks の存在チェック
*----------------------------------------------------------------------*
*      -->I_REMARK  REMARK
*      <--O_FLG     存在チェクフラグ
*----------------------------------------------------------------------*
*FORM CHECK_REMARK  USING    I_REMARK TYPE ZEREMARKS
*                   CHANGING O_FLG    TYPE CHAR1.
*
*  DATA: LW_Z_REMARKS TYPE ZEREMARKS.
*
*  SELECT Z_REMARKS
*    FROM ZTEGSDM005
*    UP TO 1 ROWS
*    INTO LW_Z_REMARKS
*   WHERE Z_REMARKS = I_REMARK.
*  ENDSELECT.
*
*  IF SY-SUBRC <> 0.
*    O_FLG = CNS_SEL.
*  ENDIF.
*
*ENDFORM.                    " CHECK_REMARK

*&---------------------------------------------------------------------*
*&      Form  CHECK_CASEMARK
*&---------------------------------------------------------------------*
*       CASEMARK の存在チェック
*----------------------------------------------------------------------*
*      -->I_CASEMARK text
*      <--O_FLG      存在チェクフラグ
*----------------------------------------------------------------------*
*FORM CHECK_CASEMARK  USING    I_CASEMARK  TYPE ZECASEMARK
*                     CHANGING O_FLG       TYPE CHAR1.
*
*  DATA: LW_Z_CASEMARK TYPE ZECASEMARK.
*
*  SELECT Z_CASEMARK
*    FROM ZTEGSDM001
*    UP TO 1 ROWS
*    INTO LW_Z_CASEMARK
*   WHERE Z_CASEMARK = I_CASEMARK.
*  ENDSELECT.
*
*  IF SY-SUBRC <> 0.
*    O_FLG = CNS_SEL.
*  ENDIF.
*
*ENDFORM.                    " CHECK_CASEMARK
**** START ADD 2015/01/30 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  INIT_DATA
*&---------------------------------------------------------------------*
*       初期化設定
*----------------------------------------------------------------------*
FORM init_data .

CLEAR: ok_code,
w_src_typ_nm_3000,
w_vtext_3000,
w_adrnr,
w_upd_ins_flg,
**** START ADD 2015/02/11 ISID11 ****
w_invoice_flg,
**** END ADD 2015/02/11 ISID11 ****
w_leave_flg,
w_chk1,
w_chk2,
w_chk3,
w_chk4,
w_chk5,
w_chk6,
w_chk7,
w_chk8,
w_chk9,
w_chk10,
w_chk11,
w_chk12,
w_chk13,
w_chk14,
w_chk15,
w_chk16,
w_chk17,
w_chk18,
w_chk19,
w_chk20,
w_chk21,
w_chk22,
w_chk23,
w_chk24,
w_chk25,
w_chk26,
w_chk27,
w_chk28,
w_chk29,
w_chk30,
w_chk31,
**** START ADD 2014/12/23 ISID11 ****
w_chk32,
w_chk33,
w_chk34,
w_chk35,
st_zsegsd0004_befo,
**** END ADD 2014/12/23 ISID11 ****
**** START ADD 2015/08/11 ISID21 ****
w_chk36,
w_chk37,
w_chk38,
w_chk39,
w_chk40,
**** END ADD 2015/08/11 ISID21 ****
w_ans,
w_flg_change,
wo_guid,
st_zsegsd0004,
st_zsegsd0004_old,
st_zsegsd0004_ini,
w_cur_fld.

REFRESH:
td_tradecommon,
td_tradecommon_ref,
td_zsegsd0004,
td_zsegsd0004_ref,
td_zsegsd0004_sort.

ENDFORM.                    " INIT_DATA
*&---------------------------------------------------------------------*
*&      Form  MAIN_PROCESS
*&---------------------------------------------------------------------*
*       主処理
*----------------------------------------------------------------------*
FORM main_process .

REFRESH: td_tradecommon,
td_zsegsd0004.

* A-2．データ抽出編集処理
* A-2-1．TradeCommonデータ取得
IF rb_1 = cns_sel.
*   選択画面のラジオボタン「Outbounde Delivery」が選択されている場合
PERFORM get_outbound_del_data CHANGING td_tradecommon.

ELSE.
*   選択画面のラジオボタン「External Data」が選択されている場合
PERFORM get_external_data CHANGING td_tradecommon.

ENDIF.

* A-2-2．テキスト取得
PERFORM get_text USING    td_tradecommon
CHANGING td_zsegsd0004.

* A-2-3．データ編集
SORT td_zsegsd0004 BY vstel           ASCENDING
wadat           ASCENDING
z_ship_to_party ASCENDING
vbeln           ASCENDING.

* A-3．画面出力
* A-3-1．データの一覧出力
PERFORM display_alv USING td_zsegsd0004.

ENDFORM.                    " MAIN_PROCESS
**** END ADD 2015/01/30 ISID11 ****
**** START ADD 2015/02/05 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  EXCLUDE_TB_FUNCTIONS
*&---------------------------------------------------------------------*
*       ユーザ事件を除く
*----------------------------------------------------------------------*
*      <--O_TD_EXCLUDE     ITAB:SCREEN9000ALVユーザ事件
*----------------------------------------------------------------------*
FORM exclude_tb_functions CHANGING o_td_exclude TYPE ui_functions.
DATA:
lst_exclude TYPE ui_func.

lst_exclude = cl_gui_alv_grid=>mc_fc_loc_delete_row.
APPEND lst_exclude TO o_td_exclude.
CLEAR lst_exclude.

lst_exclude = cl_gui_alv_grid=>mc_fc_loc_insert_row.
APPEND lst_exclude TO o_td_exclude.
CLEAR lst_exclude.

lst_exclude = cl_gui_alv_grid=>mc_fc_loc_append_row.
APPEND lst_exclude TO o_td_exclude.
CLEAR lst_exclude.

lst_exclude = cl_gui_alv_grid=>mc_fc_loc_copy_row.
APPEND lst_exclude TO o_td_exclude.
CLEAR lst_exclude.

lst_exclude = cl_gui_alv_grid=>mc_fc_loc_undo.
APPEND lst_exclude TO o_td_exclude.
CLEAR lst_exclude.

lst_exclude = cl_gui_alv_grid=>mc_fc_refresh.
APPEND lst_exclude TO o_td_exclude.
CLEAR lst_exclude.

lst_exclude = cl_gui_alv_grid=>mc_fc_check.
APPEND lst_exclude TO o_td_exclude.
CLEAR lst_exclude.

lst_exclude = cl_gui_alv_grid=>mc_fc_loc_cut.
APPEND lst_exclude TO o_td_exclude.
CLEAR lst_exclude.

lst_exclude = cl_gui_alv_grid=>mc_fc_loc_copy.
APPEND lst_exclude TO o_td_exclude.
CLEAR lst_exclude.

lst_exclude = cl_gui_alv_grid=>mc_mb_paste.
APPEND lst_exclude TO o_td_exclude.
CLEAR lst_exclude.

ENDFORM.                    " EXCLUDE_TB_FUNCTIONS
**** END ADD 2015/02/05 ISID11 ****
**** START ADD 2015/02/11 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  GET_CUST_ADRNR
*&---------------------------------------------------------------------*
*       情報を出荷伝票の取引先機能（VBPA）から取得する
*----------------------------------------------------------------------*
*      -->I_VBELN 前画面から引継いだパラメータのOutbound Delivery
*      -->I_PARVW 取引先機能
*      -->O_ADRNR アドレス
*----------------------------------------------------------------------*
FORM get_cust_adrnr USING value(i_vbeln) TYPE zsegsd0004-vbeln
value(i_parvw) TYPE vbpa-parvw
CHANGING value(o_adrnr) TYPE vbpa-adrnr.

DATA:
lw_parvw TYPE vbpa-parvw.

CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
EXPORTING
input  = i_parvw
IMPORTING
output = lw_parvw.

* 販売伝票: 取引先
SELECT adrnr
INTO o_adrnr
FROM vbpa
UP TO 1 ROWS
WHERE vbeln = i_vbeln
AND parvw = lw_parvw.
ENDSELECT.

ENDFORM.                    " GET_CUST_ADRNR
*&---------------------------------------------------------------------*
*&      Form  RELEASE_ZTEGSDT001
*&---------------------------------------------------------------------*
*       テーブルリリース
*----------------------------------------------------------------------*
FORM release_ztegsdt001 .

CALL FUNCTION 'DEQUEUE_EZZTEGSDT001'
EXPORTING
mode_ztegsdt001 = cns_enqmode_e
vbeln           = st_zsegsd0004-vbeln
erdat           = st_zsegsd0004-erdat.

ENDFORM.                    " RELEASE_ZTEGSDT001
**** END ADD 2015/02/11 ISID11 ****
**** START ADD 2015/08/21 ISID21 ****
*&---------------------------------------------------------------------*
*&      Form  GET_CUST_ATTN
*&---------------------------------------------------------------------*
*       得意先担当者を取得する
*----------------------------------------------------------------------*
*      -->i_z_cust_billto  得意先コード
*      <--o_z_attn_billto  得意先担当者
*----------------------------------------------------------------------*
FORM get_cust_attn  USING    i_z_cust TYPE ZECUSTBILLTO
CHANGING o_z_attn TYPE ZEATTNBILLTO.

DATA:
lw_zsabe TYPE knb1-zsabe.

SELECT SINGLE zsabe
FROM knb1
INTO lw_zsabe
WHERE kunnr = i_z_cust.

IF sy-subrc = 0.
o_z_attn = lw_zsabe.
ENDIF.

ENDFORM.                    " GET_CUST_ATTN
**** END ADD 2015/08/21 ISID21 ****
