*&---------------------------------------------------------------------*
*&  REPORT ZN030400                                                    *
*&         買掛金明細（不足分）【移行】                                *
*&---------------------------------------------------------------------*
*&  機能     : 移行した自社データのうち、会計データが未設定のものに対し
*&             会計伝票を作成し、自社データを更新する
*&
*&  作成日   : 2012/03/22
*&  作成者   : S.TAKIKAWA(SOLFIS)
*&---------------------------------------------------------------------*
*&  変更履歴 :
*&  変更内容 :
*&---------------------------------------------------------------------*
REPORT ZN030400
NO STANDARD PAGE HEADING
LINE-SIZE   170
LINE-COUNT  58
MESSAGE-ID  YN01.
*----------------------------------------------------------------------*
*   テーブル
*----------------------------------------------------------------------*
TABLES:YN220.
*----------------------------------------------------------------------*
*   型定義
*----------------------------------------------------------------------*
TYPES:T_TYP_YN220 TYPE STANDARD TABLE OF YN220.
TYPES:BEGIN OF TYP_ERR,
GJAHR    TYPE YNDOCGJAHR, "伝票会計年度
SLPDOC   TYPE YNSLPDOC,   "伝票番号
DTLDOC   TYPE YNDTLDOC,   "伝票明細番号
VRFCTON  TYPE YNLIFNR,    "仕入先
BUKRS    TYPE BUKRS,      "会社コード
MESSAGE  TYPE CHAR255,    "エラー内容
END   OF TYP_ERR,
T_TYP_ERR TYPE STANDARD TABLE OF TYP_ERR.
TYPES:BEGIN OF TYP_AWKEY,
AWKEY    TYPE AWKEY,
END   OF TYP_AWKEY,
T_TYP_AWKEY TYPE STANDARD TABLE OF TYP_AWKEY.
TYPES:BEGIN OF TYP_BKPF,
AWKEY    TYPE AWKEY,      "オブジェクトキー
GJAHR    TYPE GJAHR,      "会計年度
BELNR    TYPE BELNR_D,    "会計伝票番号
END   OF TYP_BKPF,
T_TYP_BKPF  TYPE STANDARD TABLE OF TYP_BKPF.
TYPES:BEGIN OF TYP_BSAK,
GJAHR    TYPE GJAHR,      "会計年度
BELNR    TYPE BELNR_D,    "会計伝票番号
BUZEI    TYPE BUZEI,      "会計伝票内の明細番号
ZFBDT    TYPE DZFBDT,     "期日計算の支払基準日
ZTERM    TYPE DZTERM,     "支払条件キー
END   OF TYP_BSAK,
T_TYP_BSAK  TYPE STANDARD TABLE OF TYP_BSAK.
TYPES:T_TYP_BDC TYPE STANDARD TABLE OF BDCDATA.
*----------------------------------------------------------------------*
*   内部テーブル定義
*----------------------------------------------------------------------*
DATA:T_YN220 TYPE T_TYP_YN220,
T_BKPF  TYPE T_TYP_BKPF,
T_BSAK  TYPE T_TYP_BSAK,
T_ERR   TYPE T_TYP_ERR.
*----------------------------------------------------------------------*
*   変数定義
*----------------------------------------------------------------------*
CONSTANTS:
C_ON         TYPE C     VALUE 'X'.
*----------------------------------------------------------------------*
*   定数定義
*----------------------------------------------------------------------*
DATA:G_CNT_YN220   TYPE I,
G_CNT_UPDATE  TYPE I,
G_CNT_ERR     TYPE I.
*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
SELECTION-SCREEN:BEGIN OF BLOCK BL01 WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS:P_GJAHR    FOR YN220-GJAHR.
SELECT-OPTIONS:P_SLPDOC   FOR YN220-SLPDOC.
SELECT-OPTIONS:P_DTLDOC   FOR YN220-DTLDOC.
SELECT-OPTIONS:P_VRFCTO   FOR YN220-VRFCTON.
SELECT-OPTIONS:P_BUKRS    FOR YN220-BUKRS.
SELECTION-SCREEN:END   OF BLOCK BL01.
SELECTION-SCREEN:BEGIN OF BLOCK BL02 WITH FRAME TITLE TEXT-002.
PARAMETERS:P_BUDAT TYPE D.
SELECTION-SCREEN:END   OF BLOCK BL02.

*----------------------------------------------------------------------*
*  START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.

* 対象データ取得
PERFORM GET_YN220.
CHECK NOT T_YN220[] IS INITIAL.
* BDC実行とデータ更新
PERFORM CALL_TRAN.
* 処理結果出力
PERFORM WRITE_PROC.
*&---------------------------------------------------------------------*
*&      Form  GET_YN220
*&---------------------------------------------------------------------*
*       対象データ取得
*----------------------------------------------------------------------*
FORM GET_YN220.
DATA:LW_YN220   TYPE YN220,
LT_AWKEY   TYPE T_TYP_AWKEY,
LW_AWKEY   TYPE TYP_AWKEY.

SELECT *
INTO TABLE T_YN220
FROM YN220
WHERE GJAHR   IN P_GJAHR
AND SLPDOC  IN P_SLPDOC
AND DTLDOC  IN P_DTLDOC
AND VRFCTON IN P_VRFCTO
AND BUKRS   IN P_BUKRS
AND YNGJAHR =  SPACE
AND BELNR   =  SPACE.

IF SY-SUBRC = 0.
DESCRIBE TABLE T_YN220 LINES G_CNT_YN220.
SORT T_YN220.
LOOP AT T_YN220 INTO LW_YN220.
LW_AWKEY-AWKEY+0(10) = LW_YN220-SLPDOC.
LW_AWKEY-AWKEY+10(4) = LW_YN220-GJAHR.
APPEND LW_AWKEY TO LT_AWKEY.
ENDLOOP.
ELSE.
MESSAGE S762(YN01).
EXIT.
ENDIF.

* BKPF取得
SELECT AWKEY
GJAHR
BELNR
INTO TABLE T_BKPF
FROM BKPF
FOR ALL ENTRIES IN LT_AWKEY
WHERE
AWTYP = 'RMRP'
AND AWKEY = LT_AWKEY-AWKEY.
IF SY-SUBRC = 0.
SORT T_BKPF.
ELSE.
EXIT.
ENDIF.

* BSAK取得
SELECT GJAHR
BELNR
BUZEI
ZFBDT
ZTERM
INTO TABLE T_BSAK
FROM BSAK
FOR ALL ENTRIES IN T_BKPF
WHERE GJAHR = T_BKPF-GJAHR
AND BELNR = T_BKPF-BELNR.

IF SY-SUBRC = 0.
SORT T_BSAK.
ENDIF.

ENDFORM.                    " GET_YN220
*&---------------------------------------------------------------------*
*&      Form  CALL_TRAN
*&---------------------------------------------------------------------*
*       ＢＤＣ実行
*----------------------------------------------------------------------*
FORM CALL_TRAN.
DATA:LW_YN220    TYPE YN220,
LW_BKPF     TYPE TYP_BKPF,
LW_BSAK     TYPE TYP_BSAK,
LW_ERR      TYPE TYP_ERR,
LW_AWKEY    TYPE AWKEY,
LT_BDC      TYPE T_TYP_BDC,
LW_NEWBS_1  TYPE CHAR2,
LW_NEWBS_2  TYPE CHAR2,
LW_ZUONR    TYPE DZUONR,
LW_FVAL     TYPE BDC_FVAL,
LW_OPTION   TYPE CTU_PARAMS,
LT_RETURN   TYPE STANDARD TABLE OF BDCMSGCOLL,
LW_RETURN   TYPE BDCMSGCOLL.

LOOP AT T_YN220 INTO LW_YN220.
CLEAR:LW_BKPF, LW_BSAK, LT_BDC, LW_ZUONR, LT_RETURN.
LW_AWKEY+0(10) = LW_YN220-SLPDOC.
LW_AWKEY+10(4) = LW_YN220-GJAHR.
*   BKPF検索
READ TABLE T_BKPF INTO LW_BKPF
WITH KEY AWKEY = LW_AWKEY
BINARY SEARCH.
IF SY-SUBRC = 0.
*     BSAK検索
READ TABLE T_BSAK INTO LW_BSAK
WITH KEY GJAHR = LW_BKPF-GJAHR
BELNR = LW_BKPF-BELNR
BINARY SEARCH.
ENDIF.
*   取得できない場合のデフォルト値を設定
IF SY-SUBRC <> 0.
LW_BSAK-ZTERM = '0001'.
LW_BSAK-ZFBDT = SY-DATUM.
ENDIF.
*   BDC用編集
IF LW_YN220-KNETXAMT > 0.
LW_NEWBS_1 = '31'.
LW_NEWBS_2 = '21'.
WRITE LW_YN220-KNETXAMT TO LW_FVAL CURRENCY LW_YN220-WAERS.
CONDENSE LW_FVAL NO-GAPS.
ELSE.
LW_NEWBS_1 = '21'.
LW_NEWBS_2 = '31'.
LW_YN220-KNETXAMT = LW_YN220-KNETXAMT * -1.
WRITE LW_YN220-KNETXAMT TO LW_FVAL CURRENCY LW_YN220-WAERS.
CONDENSE LW_FVAL NO-GAPS.
ENDIF.
IF LW_BSAK IS INITIAL.
CONCATENATE LW_BSAK-GJAHR LW_BSAK-BELNR LW_BSAK-BUZEI
INTO LW_ZUONR.
ENDIF.
*----- BDCレコード作成
*   第一画面
PERFORM BDC_RECORD     USING C_ON
'SAPMF05A'
'0100'
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE          "OKCODE
'BDC_OKCODE'
'/00'
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE         "伝票タイプ
'BKPF-BLART'
'RE'
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE         "会社コード
'BKPF-BUKRS'
'C001'
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE         "伝票日付
'BKPF-BLDAT'
SY-DATUM
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE         "転記日付
'BKPF-BUDAT'
*                                 SY-DATUM
P_BUDAT
CHANGING LT_BDC.
IF LW_YN220-WAERS <> 'JPY'.
PERFORM BDC_RECORD     USING SPACE         "換算日付
'BKPF-WWERT'
LW_YN220-ZFBDT
CHANGING LT_BDC.
ENDIF.
PERFORM BDC_RECORD     USING SPACE         "通貨コード
'BKPF-WAERS'
LW_YN220-WAERS
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE         "ヘッダText
'BKPF-BKTXT'
'検収照合/自社移行'
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE         "転記キー
'RF05A-NEWBS'
LW_NEWBS_1
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE         "勘定(請求先)
'RF05A-NEWKO'
LW_YN220-VRFCTON
CHANGING LT_BDC.
*   第二画面
PERFORM BDC_RECORD     USING C_ON
'SAPMF05A'
'0302'
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE          "OKCODE
'BDC_OKCODE'
'/00'
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE          "金額
'BSEG-WRBTR'
LW_FVAL
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE          "支払方法
'BSEG-ZTERM'
LW_BSAK-ZTERM
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE          "支払基準日
'BSEG-ZFBDT'
LW_BSAK-ZFBDT
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE          "ソートキー
'BSEG-ZUONR'
LW_ZUONR
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE          "明細テキスト
'BSEG-SGTXT'
'新検収照合/自社移行'
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE         "転記キー
'RF05A-NEWBS'
LW_NEWBS_2
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE         "勘定(請求先)
'RF05A-NEWKO'
LW_YN220-VRFCTON
CHANGING LT_BDC.
*   第三画面
PERFORM BDC_RECORD     USING C_ON
'SAPMF05A'
'0302'
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE          "OKCODE
'BDC_OKCODE'
'=BU'
CHANGING LT_BDC.
PERFORM BDC_RECORD     USING SPACE          "金額
'BSEG-WRBTR'
LW_FVAL
CHANGING LT_BDC.

*   FB01実行
LW_OPTION-DISMODE = 'N'.
LW_OPTION-UPDMODE = 'S'.
*   実行
CALL TRANSACTION 'FB01'  USING LT_BDC
OPTIONS FROM LW_OPTION
MESSAGES INTO LT_RETURN.
*   正常終了メッセージを検索
CLEAR:LW_RETURN.
READ TABLE LT_RETURN INTO LW_RETURN
WITH KEY MSGTYP = 'S'
MSGID  = 'F5'
MSGNR  = '312'.
IF SY-SUBRC = 0.
CALL FUNCTION 'FI_PERIOD_DETERMINE'
EXPORTING
I_BUDAT              = SY-DATUM
I_BUKRS              = 'C001'
IMPORTING
E_GJAHR              = LW_YN220-YNGJAHR
EXCEPTIONS
FISCAL_YEAR          = 1
PERIOD               = 2
PERIOD_VERSION       = 3
POSTING_PERIOD       = 4
SPECIAL_PERIOD       = 5
VERSION              = 6
POSTING_DATE         = 7
OTHERS               = 8.
IF SY-SUBRC <> 0.
LW_ERR-GJAHR   = LW_YN220-GJAHR.
LW_ERR-SLPDOC  = LW_YN220-SLPDOC.
LW_ERR-DTLDOC  = LW_YN220-DTLDOC.
LW_ERR-VRFCTON = LW_YN220-VRFCTON.
LW_ERR-BUKRS   = LW_YN220-BUKRS.
LW_ERR-MESSAGE =
'会計伝票の会計期間取得汎用モジュールにてエラー'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.

LW_YN220-BELNR = LW_RETURN-MSGV1.     "会計伝票番号
LW_YN220-BUZEI = 1.                   "会計伝票明細番号
*-----会計伝票情報の更新
UPDATE YN220   SET YNGJAHR = LW_YN220-YNGJAHR
BELNR   = LW_YN220-BELNR
BUZEI   = LW_YN220-BUZEI
WHERE GJAHR   = LW_YN220-GJAHR
AND SLPDOC  = LW_YN220-SLPDOC
AND DTLDOC  = LW_YN220-DTLDOC
AND VRFCTON = LW_YN220-VRFCTON
AND BUKRS   = LW_YN220-BUKRS.
IF SY-SUBRC = 0.
COMMIT WORK AND WAIT.
G_CNT_UPDATE = G_CNT_UPDATE + 1.
ELSE.
ROLLBACK WORK.
LW_ERR-GJAHR   = LW_YN220-GJAHR.
LW_ERR-SLPDOC  = LW_YN220-SLPDOC.
LW_ERR-DTLDOC  = LW_YN220-DTLDOC.
LW_ERR-VRFCTON = LW_YN220-VRFCTON.
LW_ERR-BUKRS   = LW_YN220-BUKRS.
CONCATENATE 'YN220更新時エラー。会計伝票は'
LW_YN220-BELNR
'で登録されています'
INTO LW_ERR-MESSAGE.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.

*   ＢＤＣエラーの場合
ELSE.
READ TABLE LT_RETURN INTO LW_RETURN
WITH KEY MSGTYP = 'A'.
IF SY-SUBRC <> 0.
READ TABLE LT_RETURN INTO LW_RETURN
WITH KEY MSGTYP = 'E'.
ENDIF.
IF LW_RETURN-MSGID IS INITIAL.
LW_ERR-GJAHR   = LW_YN220-GJAHR.
LW_ERR-SLPDOC  = LW_YN220-SLPDOC.
LW_ERR-DTLDOC  = LW_YN220-DTLDOC.
LW_ERR-VRFCTON = LW_YN220-VRFCTON.
LW_ERR-BUKRS   = LW_YN220-BUKRS.
LW_ERR-MESSAGE = 'FB01にてエラーが発生しました'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
ELSE.
LW_ERR-GJAHR   = LW_YN220-GJAHR.
LW_ERR-SLPDOC  = LW_YN220-SLPDOC.
LW_ERR-DTLDOC  = LW_YN220-DTLDOC.
LW_ERR-VRFCTON = LW_YN220-VRFCTON.
LW_ERR-BUKRS   = LW_YN220-BUKRS.
MESSAGE     ID LW_RETURN-MSGID
TYPE 'E'
NUMBER LW_RETURN-MSGNR
WITH LW_RETURN-MSGV1
LW_RETURN-MSGV2
LW_RETURN-MSGV3
LW_RETURN-MSGV4
INTO LW_ERR-MESSAGE.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
ENDIF.
ENDIF.
ENDLOOP.

ENDFORM.                    " CALL_TRAN
*&---------------------------------------------------------------------*
*&      Form  BDC_RECORD
*&---------------------------------------------------------------------*
*       BDCレコードの作製
*----------------------------------------------------------------------*
*      -->P_SCREEN      'X'=画面/SPACE=項目値
*      -->P_VALUE1      PGID/項目名
*      -->P_VALUE2      SCREEN番号/項目値
*      <--P_T_BDC       BDCレコードテーブル
*----------------------------------------------------------------------*
FORM BDC_RECORD USING    P_SCREEN    TYPE CHAR1
P_VALUE1    TYPE ANY
P_VALUE2    TYPE ANY
CHANGING P_T_BDC     TYPE T_TYP_BDC.
DATA:LW_BDC    TYPE BDCDATA.

* 画面定義の場合
IF P_SCREEN = C_ON.
LW_BDC-PROGRAM  = P_VALUE1.
LW_BDC-DYNPRO   = P_VALUE2.
LW_BDC-DYNBEGIN = C_ON.
* 項目定義の場合
ELSE.
LW_BDC-FNAM = P_VALUE1.
LW_BDC-FVAL = P_VALUE2.
ENDIF.

* 内部テーブルに格納
APPEND LW_BDC TO P_T_BDC.

ENDFORM.                    " BDC_RECORD
*&---------------------------------------------------------------------*
*&      Form  WRITE_PROC
*&---------------------------------------------------------------------*
*       処理結果出力
*----------------------------------------------------------------------*
FORM WRITE_PROC.
DATA:LW_CNT(10)  TYPE C,
LW_ERR      TYPE TYP_ERR.

WRITE G_CNT_YN220 TO LW_CNT.
WRITE: /001 '<移行不足分処理>',
/003 '自社データ(YN220)対象件数：',
040 LW_CNT,
050 '件'.
WRITE G_CNT_UPDATE TO LW_CNT.
WRITE: /003 '正常処理件数：',
040 LW_CNT,
050 '件'.
WRITE G_CNT_ERR TO LW_CNT.
WRITE: /003 'エラー件数：',
040 LW_CNT,
050 '件'.
CHECK NOT T_ERR[] IS INITIAL.
SKIP 1.
WRITE: /003 '伝票会計年度',
016 '伝票番号',
027 '伝票明細番号',
040 '仕入先コード(請求先)',
061 '会社コード',
072 'エラー内容'.
ULINE.
LOOP AT T_ERR INTO LW_ERR.
WRITE: /003 LW_ERR-GJAHR,
016 LW_ERR-SLPDOC,
027 LW_ERR-DTLDOC,
040 LW_ERR-VRFCTON,
061 LW_ERR-BUKRS,
072 LW_ERR-MESSAGE.
ENDLOOP.

ENDFORM.                    " WRITE_PROC
