*&---------------------------------------------------------------------*
*& Report  Y_IWK_ACCESS_SERVER                                         *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  zzco_tool_001 NO STANDARD PAGE HEADING LINE-SIZE 1023.

INCLUDE ole2incl.

DEFINE s-screen1.
selection-screen comment 1(79) &1.
selection-screen skip 1.
END-OF-DEFINITION.

DATA: BEGIN OF hd_list,
text(1010),
END   OF hd_list.

DATA  it_list LIKE STANDARD TABLE OF hd_list.

DATA: wk_ofs   TYPE ole2_object,
wk_ows   TYPE ole2_object,
wk_ans   TYPE char1,
wk_cmnd  TYPE char128,
wk_tmpnm TYPE char128,
ct_line  TYPE i.

DATA: v_fname  TYPE dxfields-longpath,
it_dread TYPE STANDARD TABLE OF dynpread,
wa_dread LIKE LINE OF it_dread.
DATA L_CODEPAGE TYPE CPCODEPAGE.
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.

SELECTION-SCREEN BEGIN OF BLOCK blk01 WITH FRAME.
s-screen1 text-c01.
s-screen1 text-c02.
s-screen1 text-c03.
s-screen1 text-c04.
s-screen1 text-c05.
s-screen1 text-c10.
SELECTION-SCREEN COMMENT 1(79) text-c06.
SELECTION-SCREEN END   OF BLOCK blk01.

SELECTION-SCREEN SKIP 1.

SELECTION-SCREEN BEGIN OF BLOCK blk02 WITH FRAME TITLE text-f01.
PARAMETERS pa_fname LIKE rlgrap-filename OBLIGATORY default 'I:\開発_work\'.

SELECTION-SCREEN SKIP 1.

SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS pr_chk01 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (48) text-c07 FOR FIELD pr_chk01.
SELECTION-SCREEN END   OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS pr_chk02 AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN COMMENT (56) text-c08 FOR FIELD pr_chk02.
SELECTION-SCREEN END   OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS pr_chk03 AS CHECKBOX.
SELECTION-SCREEN COMMENT (56) text-c09 FOR FIELD pr_chk03.
SELECTION-SCREEN END   OF LINE.

SELECTION-SCREEN END   OF BLOCK blk02.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR pa_fname.

CLEAR: it_dread, wa_dread.

wa_dread-fieldname = 'PA_FNAME'.
APPEND wa_dread TO it_dread.

CALL FUNCTION 'DYNP_VALUES_READ'
EXPORTING
dyname                         = sy-cprog
dynumb                         = sy-dynnr
*     TRANSLATE_TO_UPPER             = ' '
*     REQUEST                        = ' '
*     PERFORM_CONVERSION_EXITS       = ' '
*     PERFORM_INPUT_CONVERSION       = ' '
*     DETERMINE_LOOP_INDEX           = ' '
TABLES
dynpfields                     = it_dread
EXCEPTIONS
invalid_abapworkarea           = 1
invalid_dynprofield            = 2
invalid_dynproname             = 3
invalid_dynpronummer           = 4
invalid_request                = 5
no_fielddescription            = 6
invalid_parameter              = 7
undefind_error                 = 8
double_conversion              = 9
stepl_not_found                = 10
OTHERS                         = 11.

IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.

READ TABLE it_dread INTO wa_dread WITH KEY fieldname = 'PA_FNAME'.
v_fname = wa_dread-fieldvalue.

IF v_fname IS INITIAL.
v_fname = text-001.
ENDIF.

CALL FUNCTION 'F4_DXFILENAME_TOPRECURSION'
EXPORTING
i_location_flag       = 'A'
i_server              = ''
i_path                = v_fname
*     FILEMASK              = '*.*'
*     FILEOPERATION         = 'R'
IMPORTING
*     O_LOCATION_FLAG       =
*     O_SERVER              =
o_path                = v_fname
*     ABEND_FLAG            =
EXCEPTIONS
rfc_error             = 1
OTHERS                = 2.

IF sy-subrc <> 0.
MESSAGE e001(00)
WITH '異常終了：' 'Return Code = ' sy-subrc space.
ENDIF.

pa_fname = v_fname.

AT SELECTION-SCREEN.
REFRESH it_list.

L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).

OPEN DATASET pa_fname FOR INPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.

*  OPEN DATASET pa_fname FOR INPUT IN TEXT MODE ENCODING DEFAULT.

IF sy-subrc = 0.

IF  pr_chk03 IS NOT INITIAL.
CALL FUNCTION 'POPUP_TO_CONFIRM'
EXPORTING
*         TITLEBAR                    = ' '
*         DIAGNOSE_OBJECT             = ' '
text_question               = '削除するけど本当に後悔しない？'
*         TEXT_BUTTON_1               = 'Ja'(001)
*         ICON_BUTTON_1               = ' '
*         TEXT_BUTTON_2               = 'Nein'(002)
*         ICON_BUTTON_2               = ' '
default_button              = '2'
display_cancel_button       = ''
*         USERDEFINED_F1_HELP         = ' '
*         START_COLUMN                = 25
*         START_ROW                   = 6
*         POPUP_TYPE                  =
*         IV_QUICKINFO_BUTTON_1       = ' '
*         IV_QUICKINFO_BUTTON_2       = ' '
IMPORTING
answer                      = wk_ans
*       TABLES
*         PARAMETER                   =
EXCEPTIONS
text_not_found              = 1
OTHERS                      = 2.

IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ELSE.
IF wk_ans  =  '1'.
DELETE DATASET pa_fname.
IF sy-subrc <> 0.
MESSAGE  e001(00)  WITH  'ファイル削除エラー'.
ELSE.
MESSAGE  s001(00)  WITH  'ファイルパス'
pa_fname  'が削除されました。' space.
LEAVE LIST-PROCESSING.
ENDIF.
ELSE.
LEAVE LIST-PROCESSING.
ENDIF.
ENDIF.

ELSE.

DO.
READ DATASET pa_fname INTO hd_list.

IF sy-subrc <> 0.
EXIT.
ENDIF.

APPEND hd_list TO it_list.
CLEAR  hd_list.
ENDDO.

CLOSE DATASET pa_fname.

DESCRIBE TABLE it_list LINES ct_line.

IF ct_line = 0 AND pr_chk01 = 'X'.
MESSAGE e001(00) WITH 'データの存在が確認できませんでした。'
space space space.
ENDIF.

ENDIF.

ELSE.
IF pr_chk02 = 'X'.
MESSAGE e001(00) WITH 'ファイルの存在が確認できませんでした。'
space space space.
ENDIF.
ENDIF.

AT SELECTION-SCREEN OUTPUT.
LOOP AT SCREEN.
CASE screen-name.
WHEN '%CC05009_1000'.
screen-intensified = 1.
WHEN '%CC06011_1000'.
screen-intensified = 1.
WHEN OTHERS.
ENDCASE.

MODIFY SCREEN.
ENDLOOP.

START-OF-SELECTION.
IF pr_chk01 <> 'X'.
CONCATENATE 'C:\' sy-uzeit '.tmp' INTO wk_tmpnm.

CALL FUNCTION 'WS_DOWNLOAD'
EXPORTING
*       BIN_FILESIZE                  = ' '
*       CODEPAGE                      = ' '
filename                      = wk_tmpnm
*       FILETYPE                      = 'ASC'
*       MODE                          = ' '
*       WK1_N_FORMAT                  = ' '
*       WK1_N_SIZE                    = ' '
*       WK1_T_FORMAT                  = ' '
*       WK1_T_SIZE                    = ' '
*       COL_SELECT                    = ' '
*       COL_SELECTMASK                = ' '
*       NO_AUTH_CHECK                 = ' '
*     IMPORTING
*       FILELENGTH                    =
TABLES
data_tab                      = it_list
*       FIELDNAMES                    =
EXCEPTIONS
file_open_error               = 1
file_write_error              = 2
invalid_filesize              = 3
invalid_type                  = 4
no_batch                      = 5
unknown_error                 = 6
invalid_table_width           = 7
gui_refuse_filetransfer       = 8
customer_error                = 9
OTHERS                        = 10.

IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.

CREATE OBJECT wk_ows 'WSCRIPT.SHELL'.
*    CONCATENATE 'EXCEL.EXE'
*                wk_tmpnm INTO wk_cmnd SEPARATED BY space.
CONCATENATE 'NOTEPAD.EXE' wk_tmpnm INTO wk_cmnd
SEPARATED BY space.
CALL METHOD OF wk_ows 'RUN'
EXPORTING
#1 = wk_cmnd
#2 = 1
#3 = 1.
FREE OBJECT wk_ows.

CALL FUNCTION 'WS_UPLOAD'
EXPORTING
*       CODEPAGE                      = ' '
filename                      = wk_tmpnm
*       FILETYPE                      = 'ASC'
*       HEADLEN                       = ' '
*       LINE_EXIT                     = ' '
*       TRUNCLEN                      = ' '
*       USER_FORM                     = ' '
*       USER_PROG                     = ' '
*       DAT_D_FORMAT                  = ' '
*     IMPORTING
*       FILELENGTH                    =
TABLES
data_tab                      = it_list
EXCEPTIONS
conversion_error              = 1
file_open_error               = 2
file_read_error               = 3
invalid_type                  = 4
no_batch                      = 5
unknown_error                 = 6
invalid_table_width           = 7
gui_refuse_filetransfer       = 8
customer_error                = 9
OTHERS                        = 10.

IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.

CREATE OBJECT wk_ofs 'SCRIPTING.FILESYSTEMOBJECT'.
CALL METHOD OF wk_ofs 'DELETEFILE'
EXPORTING
#1 = wk_tmpnm.
FREE OBJECT wk_ofs.

*    OPEN DATASET pa_fname FOR OUTPUT IN TEXT MODE ENCODING DEFAULT.
OPEN DATASET pa_fname FOR OUTPUT IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.

IF sy-subrc = 0.
LOOP AT it_list INTO hd_list.
TRANSFER hd_list TO pa_fname.
ENDLOOP.
ENDIF.

CLOSE DATASET pa_fname.
ENDIF.

PERFORM frm_display_list.

TOP-OF-PAGE.
DATA: lw_line1(4),
lw_line2(10),
lw_text(4),
lw_cnt1(4) TYPE n,
lw_cnt2    TYPE n,
lc_post    TYPE i,
lc_pmin    TYPE i VALUE 10,
lc_pmax    TYPE i VALUE 1023,
lw_fdir    TYPE localfile,
lw_fnam    TYPE localfile.

CALL FUNCTION 'SO_SPLIT_FILE_AND_PATH'
EXPORTING
full_name     = pa_fname
IMPORTING
stripped_name = lw_fnam
file_path     = lw_fdir
EXCEPTIONS
x_error       = 1
OTHERS        = 2.

IF sy-subrc <> 0.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
ENDIF.

WRITE:/001 'DIRECTORY:',
lw_fdir,
/001 'FILENAME :',
lw_fnam.

SKIP 1.

lc_post = lc_pmin.

DO.
IF lc_post >= lc_pmax.
EXIT.
ENDIF.

lw_cnt1 = lc_post / 100.
MULTIPLY lw_cnt1 BY 100.
WRITE lw_cnt1 TO lw_line1 NO-ZERO.
CONDENSE lw_line1 NO-GAPS.

WRITE AT lc_post lw_line1.

ADD 100 TO lc_post.
ENDDO.

lc_post = lc_pmin.
SKIP.

DO.
IF lc_post >= lc_pmax.
EXIT.
ENDIF.

lw_cnt2 = ( lc_post / 10 ) MOD 10.

CONCATENATE '----+----' lw_cnt2 INTO lw_line2.

WRITE AT lc_post lw_line2.

ADD 10 TO lc_post.
ENDDO.

*&---------------------------------------------------------------------*
*&      Form  FRM_DISPLAY_LIST
*&---------------------------------------------------------------------*
*  リスト出力(変更後)
*----------------------------------------------------------------------*
FORM frm_display_list.
DATA: lc_line(6) TYPE n,
lc_chlen   TYPE i,
lc_offst   TYPE i,
lc_strln   TYPE i,
lc_wtpos   TYPE i.

LOOP AT it_list INTO hd_list.
ADD 1 TO lc_line.

*    WRITE:/001(9) LC_LINE NO-ZERO RIGHT-JUSTIFIED COLOR COL_KEY,
*           010    HD_LIST-TEXT.

WRITE:/001(9) lc_line NO-ZERO RIGHT-JUSTIFIED COLOR COL_KEY.

lc_strln = STRLEN( hd_list-text ).
lc_offst = 0.
lc_wtpos = 10.

CHECK lc_strln IS NOT INITIAL.

DO.
lc_chlen = CHARLEN( hd_list-text+lc_offst ).
WRITE AT lc_wtpos hd_list-text+lc_offst(lc_chlen).

ADD lc_chlen TO: lc_wtpos,
lc_offst.

IF lc_offst >= lc_strln.
EXIT.
ENDIF.
ENDDO.
ENDLOOP.
ENDFORM.                    " FRM_DISPLAY_LIST
