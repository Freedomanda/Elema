***---------------------------------------------------------------------
** (c) Copyright 1998 OptiSystems Solutions LTD. All Rights Reserved  **
***---------------------------------------------------------------------
*----------------------------------------------------------------------*
* Forms
*----------------------------------------------------------------------*
*&-------------------------------
*------------------------------------*
*&      Form  YSQ_DB22_ADD_PROG_NAME
*
* process DB2 SQLs
*
*&---------------------------------
*------------------------------------*
FORM YSQ_DB22_ADD_PROG_NAME TABLES SQL_LIST STRUCTURE YSQ_SQL
SQL_TEXT_LIST STRUCTURE YSQ_SQL_TX
USING I_SERVER I_DATE I_CYCLE.
*
DATA: L_W2 LIKE TB_TEXT,
L_W3 LIKE TB_TEXT,
L_TABIX LIKE SY-TABIX,
L_1 LIKE TB_THREADS-WPNUMBER,
L_2 LIKE TB_THREADS-WPID.
* get wp list
PERFORM YSQ_DB22_GET_THREADS.
* fill unchangable fields
SQL_LIST-Y_SERVER = I_SERVER.
SQL_LIST-Y_DATE = I_DATE.
SQL_LIST-Y_NO_CYCLE = I_CYCLE.
SQL_LIST-Y_TIME = SY-UZEIT.
*
SQL_TEXT_LIST-Y_SERVER = I_SERVER.
SQL_TEXT_LIST-Y_DATE = I_DATE.
SQL_TEXT_LIST-Y_NO_CYCLE = I_CYCLE.
*
* create main list
LOOP AT TB_THREADS WHERE THDSTAT = 'In DB2'.
* get SQL text
PERFORM YSQ_DB22_GET_TEXT.
IF SY-SUBRC <> 0. CONTINUE. ENDIF.
* get wp record
L_1 = TB_THREADS-WPNUMBER.
SHIFT L_1 LEFT DELETING LEADING '0'.
L_2 = TB_THREADS-WPID.
SHIFT L_2 LEFT DELETING LEADING '0'.
READ TABLE TB_WP_TABL WITH KEY WP_NO = L_1
WP_PID = L_2.
IF SY-SUBRC <> 0. CONTINUE. ENDIF.
IF TB_WP_TABL-WP_TABLE CO SPACE. CONTINUE. ENDIF.
IF TB_WP_TABL-WP_REPORT IS INITIAL. CONTINUE. ENDIF.
IF TB_WP_TABL-WP_REPORT = SY-REPID. CONTINUE. ENDIF.
IF TB_WP_TABL-WP_REPORT = 'YSQCO000'. CONTINUE. ENDIF.
* create unique SQL address
PERFORM YSQ_DB22_CREATE_UNIQUE_SQL_ID.
* fill ysq_sql record
MOVE-CORRESPONDING TB_WP_TABL TO SQL_LIST.
SQL_LIST-Y_PROGRAM = TB_WP_TABL-WP_REPORT.
SQL_LIST-Y_ADDRESS = G_ADDR.
SQL_LIST-Y_WP_NO = SQL_LIST-WP_NO.
* fill transaction, if any
SQL_LIST-Y_TRAN = TB_WP_TABL-WP_RESTART.    " used for tcode !!
* fill ysq_sql_tx
SQL_TEXT_LIST-Y_ADDRESS = G_ADDR.
LOOP AT TB_TEXT.
L_TABIX = SY-TABIX.
IF SY-TABIX = 1.
L_W2 = TB_TEXT.
SHIFT L_W2 LEFT DELETING LEADING SPACE.
SPLIT L_W2 AT SPACE INTO L_W2 L_W3.
IF L_W2 <> 'SELECT'.
EXIT.
ELSE.
APPEND SQL_LIST.
ENDIF.
ENDIF.
SQL_TEXT_LIST-Y_NUMBER = L_TABIX - 1.
CLEAR SQL_TEXT_LIST-Y_TEXT.
SQL_TEXT_LIST-Y_TEXT = TB_TEXT.
APPEND SQL_TEXT_LIST.
ENDLOOP.
ENDLOOP.
SORT SQL_LIST BY Y_SERVER Y_DATE Y_NO_CYCLE Y_PROGRAM Y_ADDRESS
Y_WP_NO.
SORT SQL_TEXT_LIST BY Y_SERVER Y_DATE Y_NO_CYCLE Y_ADDRESS Y_NUMBER.
ENDFORM.                    " YSQ_DB22_ADD_PROG_NAME
*&---------------------------------
*------------------------------------*
*&      Form  YSQ_DB22_GET_THREADS
*
* get thread list for DB2
*
*&---------------------------------
*------------------------------------*
FORM YSQ_DB22_GET_THREADS.
*
DATA: L_DATATYPE LIKE SY-SUBRC.
*
REFRESH TB_THREADS.
CLEAR: TB_THREADS, L_DATATYPE.
CALL FUNCTION 'STU3_GET_THREAD_LIST'
EXPORTING
FB_DATATYPE             = L_DATATYPE
TABLES
FB_THREADLIST           = TB_THREADS
EXCEPTIONS
RS_AUTH_FAILURE         = 1
RS_START_TRACE          = 2
RS_INTERNAL_ERROR       = 3
RS_NO_LOCKCONFS_SYSWIDE = 4
RS_NO_SQLSTMT_THREAD    = 5
RS_NO_LOCKS_HELD_THREAD = 6
RS_INVALID_ACE_THREAD   = 7
RS_NO_LOCKCONFS_THREAD  = 8
RS_NO_BUFFERS_THREAD    = 9
RS_NO_LOCKING_THREAD    = 10
RS_NO_SQLCOUNTER_THREAD = 11
OTHERS                  = 12.
IF SY-SUBRC <> 0.
YMA_LOG-RDATE = SY-DATUM.
YMA_LOG-RTIME = SY-UZEIT.
YMA_LOG-MESS_CLASS = 'Y+'.
YMA_LOG-MESS_ID = '008'.
YMA_LOG-TEXT1 = SY-SUBRC.
YMA_LOG-TEXT2 = ' '.
YMA_LOG-TEXT3 = ' '.
INSERT YMA_LOG.
ENDIF.
ENDFORM.                    " YSQ_DB22_GET_THREADS
*&---------------------------------
*------------------------------------*
*&      Form  YSQ_DB22_GET_TEXT
*
* get thread text for DB2
*
*&---------------------------------
*------------------------------------*
FORM YSQ_DB22_GET_TEXT.
*
DATA: L_DATATYPE LIKE SY-SUBRC VALUE 0,
L_USER LIKE SY-SUBRC VALUE 1,
L_DB2RDI LIKE DB2RDI.
*
CLEAR TB_TEXT.
REFRESH TB_TEXT.
CLEAR L_DB2RDI.
CALL FUNCTION 'STU3_GET_SQL_CALL'
EXPORTING
FB_MY_USER              = L_USER
FB_DATATYPE             = L_DATATYPE
FB_DB2THREADS           = TB_THREADS
IMPORTING
FB_DB2RDI               = L_DB2RDI
TABLES
FB_STATEMENT_TAB        = TB_TEXT
EXCEPTIONS
RS_AUTH_FAILURE         = 1
RS_START_TRACE          = 2
RS_INTERNAL_ERROR       = 3
RS_NO_LOCKCONFS_SYSWIDE = 4
RS_NO_SQLSTMT_THREAD    = 5
RS_NO_LOCKS_HELD_THREAD = 6
RS_INVALID_ACE_THREAD   = 7
RS_NO_LOCKCONFS_THREAD  = 8
RS_NO_BUFFERS_THREAD    = 9
RS_NO_LOCKING_THREAD    = 10
RS_NO_SQLCOUNTER_THREAD = 11
OTHERS                  = 12.
ENDFORM.                    " YSQ_DB22_GET_TEXT
*&---------------------------------
*------------------------------------*
*&      Form  YSQ_DB22_CREATE_UNIQUE_SQL_ID
*
* create unique SQL identifier for DB2
*
*&---------------------------------
*------------------------------------*
FORM YSQ_DB22_CREATE_UNIQUE_SQL_ID.
*
DATA: L_TB_TEXT(72) OCCURS 0 WITH HEADER LINE,
BEGIN OF L_TB_TEXT1 OCCURS 0,
TEXT(72),
END OF L_TB_TEXT1,
L_LEN TYPE I,
L_OFFSET TYPE I,
L_OFFSET_ADDR TYPE I,
L_1 TYPE I,
L_W(360),
L_LINE TYPE I.
*
CLEAR G_ADDR.
REFRESH: L_TB_TEXT, L_TB_TEXT1.
* one line <= 16
DESCRIBE TABLE TB_TEXT LINES L_LINE.
IF L_LINE = 1.
READ TABLE TB_TEXT INDEX 1.
L_LEN = STRLEN( TB_TEXT ).
IF L_LEN <= 16.
G_ADDR = TB_TEXT.
EXIT.
ENDIF.
ENDIF.
* more than 16
LOOP AT TB_TEXT.
SPLIT TB_TEXT AT SPACE INTO TABLE L_TB_TEXT1.
LOOP AT L_TB_TEXT1 WHERE TEXT CS '"'.
SHIFT L_TB_TEXT1-TEXT LEFT DELETING LEADING '"'.
SHIFT L_TB_TEXT1-TEXT RIGHT DELETING TRAILING '"'.
MODIFY L_TB_TEXT1.
ENDLOOP.
APPEND LINES OF L_TB_TEXT1 TO L_TB_TEXT.
ENDLOOP.
* delete SELECT
DELETE L_TB_TEXT INDEX 1.
* delete 'FOR FETCH ONLY WITH UR'
DESCRIBE TABLE L_TB_TEXT LINES L_LINE.
L_1 = L_LINE - 4.
CLEAR L_W.
LOOP AT L_TB_TEXT FROM L_1.
CONCATENATE L_W L_TB_TEXT INTO L_W SEPARATED BY SPACE.
ENDLOOP.
IF L_W = ' FOR FETCH ONLY WITH UR'.
DO 5 TIMES.
READ TABLE L_TB_TEXT INDEX L_LINE.
DELETE L_TB_TEXT INDEX L_LINE.
L_LINE = L_LINE - 1.
ENDDO.
ENDIF.
* create id
CLEAR: L_OFFSET, L_OFFSET_ADDR.
DO.
LOOP AT L_TB_TEXT.
G_ADDR+L_OFFSET_ADDR(1) = L_TB_TEXT+L_OFFSET(1).
L_OFFSET_ADDR = L_OFFSET_ADDR + 1.
IF L_OFFSET_ADDR > 15. EXIT. ENDIF.
ENDLOOP.
IF L_OFFSET_ADDR > 15 OR L_OFFSET_ADDR IS INITIAL. EXIT. ENDIF.
L_OFFSET = L_OFFSET + 1.
ENDDO.
ENDFORM.                    " YSQ_DB22_CREATE_UNIQUE_SQL_ID
*&---------------------------------------------------------------------*
*&      Form  YSQ_MAIN
*&---------------------------------------------------------------------*
FORM YSQ_MAIN.
IMPORT SQL_LIST SQL_TEXT_LIST TB_WP_TABL FROM MEMORY ID 'YSQL_LST'.
PERFORM YSQ_DB22_ADD_PROG_NAME TABLES SQL_LIST SQL_TEXT_LIST
USING SERVER DATE CYCLE.
EXPORT SQL_LIST SQL_TEXT_LIST TB_WP_TABL TO MEMORY ID 'YSQL_LST'.
ENDFORM.                    " YSQ_MAIN
