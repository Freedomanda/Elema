*&---------------------------------------------------------------------*
*&  REPORT ZN011700                                                    *
*&         入金予定一覧（売上）                                        *
*&---------------------------------------------------------------------*
*&  機能     : ZN005より、入金予定データを取得し、ALV表示する
*&
*&  作成日   : 2012/02/10
*&  作成者   : S.TAKIKAWA(solfis)
*&  変更履歴 : 2012/03/05(K.KAJISA)
*&  変更内容 : QA対応(182〜185)
*&---------------------------------------------------------------------*
REPORT ZN011700
NO STANDARD PAGE HEADING
LINE-SIZE  170
LINE-COUNT 58
MESSAGE-ID YN01.
*----------------------------------------------------------------------*
*   構造/テーブル定義
*----------------------------------------------------------------------*
* 入金予定データ取得用
TYPES:T_TYP_ZN005   TYPE STANDARD TABLE OF ZN005.
* 得意先マスタデータ取得用
TYPES:BEGIN OF TYP_KNA1,
KUNNR     TYPE KUNNR,      "得意先コード
NAME1     TYPE NAME1_GP,   "名称１
ZTERM     TYPE DZTERM,     "支払条件キー
VKBUR     TYPE VKBUR,      "営業所
VKGRP     TYPE VKGRP,      "営業Ｇ
KUNN2     TYPE KUNNR,      "取引先機能
END   OF TYP_KNA1,
T_TYP_KNA1   TYPE STANDARD TABLE OF TYP_KNA1.
* ALV一覧用
TYPES:BEGIN OF TYP_OUTPUT,
KUNNR      TYPE KUNNR,      "得意先
NAME1      TYPE NAME1_GP,   "得意先名称
CZFBDT     TYPE ZNECZFBDT,  "照合締日
IZFBDT     TYPE ZNEIZFBDT,  "入金予定日
WAERS      TYPE WAERS,      "通貨
IWRBTR     TYPE ZNEIWRBTR,  "金額
SOU_FLG    TYPE CHAR2,      "相殺
ILIFNR     TYPE ZNEILIFNR,  "仕入先
LIFNR_NAME TYPE NAME1_GP,  "仕入先名称
NYUKIN     TYPE CHAR2,      "入金
IBELNER    TYPE ZNEIBELNER, "会計伝票
IGJAHR     TYPE ZNEIGJAHR,  "会計年度
IBUDAT     TYPE ZNEIBUDAT,  "消込日
ZTERM      TYPE DZTERM,     "条件(ﾏｽﾀ)
KITEI      TYPE CHAR1,      "規定外条件
KUNN2      TYPE KUNN2,      "入金先
SOUSAI     TYPE CHAR10,     "相殺先
VKBUR      TYPE VKBUR,      "営業所
VKBUR_NAME TYPE BEZEI20,    "営業所名
VKGRP      TYPE VKGRP,      "営業Ｇ
VKGRP_NAME TYPE BEZEI20,    "営業Ｇ名
PERNR      TYPE PERNR_D,    "担当者
PERNR_NAME TYPE CHAR40,     "担当者名
END   OF TYP_OUTPUT,
T_TYP_OUTPUT  TYPE STANDARD TABLE OF TYP_OUTPUT.
* 取引先機能データ取得用
TYPES:BEGIN OF TYP_KNVP,
KUNNR     TYPE KUNNR,       "得意先コード
PARVW     TYPE PARVW,       "取引先機能
KUNN2     TYPE KUNN2,       "取引先の得意先コード
PERNR     TYPE PERNR_D,     "従業員番号
END   OF TYP_KNVP,
T_TYP_KNVP  TYPE STANDARD TABLE OF TYP_KNVP.
* 営業所名称取得
TYPES:BEGIN OF TYP_VKBUR,
VKBUR      TYPE VKBUR,      "営業所
BEZEI      TYPE BEZEI20,    "営業所名
END   OF TYP_VKBUR,
T_TYP_VKBUR   TYPE STANDARD TABLE OF TYP_VKBUR.
* 営業Ｇ名称取得
TYPES:BEGIN OF TYP_VKGRP,
VKGRP      TYPE VKGRP,      "営業Ｇ
BEZEI      TYPE BEZEI20,    "営業Ｇ名
END   OF TYP_VKGRP,
T_TYP_VKGRP   TYPE STANDARD TABLE OF TYP_VKGRP.
* 担当者名称取得
TYPES:BEGIN OF TYP_PERNR,
PERNR      TYPE PERSNO,     "従業員
NACHN      TYPE PAD_NACHN,  "姓
VORNA      TYPE PAD_VORNA,  "名
END   OF TYP_PERNR,
T_TYP_PERNR   TYPE STANDARD TABLE OF TYP_PERNR.
* 仕入先名称取得
TYPES:BEGIN OF TYP_LIFNR,
LIFNR      TYPE LIFNR,      "仕入先
NAME1      TYPE NAME1_GP,   "名称１
END   OF TYP_LIFNR,
T_TYP_LIFNR   TYPE STANDARD TABLE OF TYP_LIFNR.
*----------------------------------------------------------------------*
*   内部テーブル定義
*----------------------------------------------------------------------*
DATA: T_ZN005   TYPE T_TYP_ZN005,     "入金予定（売上）データ取得用
T_KNA1    TYPE T_TYP_KNA1,      "得意先マスタデータ取得用KN1,KNVV
T_KNVP    TYPE T_TYP_KNVP,      "得意先マスタデータ取得用KNVP
T_OUTPUT  TYPE T_TYP_OUTPUT,    "ALV一覧データ
W_OUTPUT  TYPE TYP_OUTPUT,
T_VKBUR   TYPE T_TYP_VKBUR,     "営業所名称
T_VKGRP   TYPE T_TYP_VKGRP,     "営業Ｇ名称
T_PERNR   TYPE T_TYP_PERNR,     "担当者名称
T_LIFNR   TYPE T_TYP_LIFNR.     "仕入先名称
* PGID退避用
DATA: G_PGID     TYPE SYCPROG.
* ALV出力用
TYPE-POOLS SLIS.
DATA: W_LAYOUT      TYPE SLIS_LAYOUT_ALV,     "ALV出力レイアウト
W_FIELDCAT    TYPE SLIS_FIELDCAT_ALV,   "ALV出力項目設定
T_FIELDCAT    TYPE SLIS_T_FIELDCAT_ALV, "ALV出力項目設定
W_REPID       TYPE SY-REPID,            "ALV出力用：プログラムID
W_EDISVARIANT TYPE DISVARIANT,          "ALV出力バリアント
T_EVENT       TYPE SLIS_T_EVENT,        "イベント
W_EVENT       LIKE LINE OF T_EVENT,
T_HEAD        TYPE SLIS_T_LISTHEADER,   "ヘッダ
W_HEAD        LIKE LINE OF T_HEAD,
W_PRINT       TYPE SLIS_PRINT_ALV.
* 下請法検索ヘルプ用
DATA: BEGIN OF TBL_HELP OCCURS 0,
FLAG    TYPE CHAR01,
TEXT    TYPE TEXT20,
END OF TBL_HELP.
*----------------------------------------------------------------------*
*   定数定義
*----------------------------------------------------------------------*
CONSTANTS:
* 2012/03/05 ADD START
C_SAVE(1)   TYPE C          VALUE 'A',    " SAVE機能ON
* 2012/03/05 ADD END
C_ON         TYPE C     VALUE 'X',
C_SIGN       TYPE CHAR1 VALUE 'I',
C_OPTION     TYPE CHAR2 VALUE 'EQ'.
* 2012/03/05 DEL START
* 取引先機能ー担当者
*  C_TANTOUSYA  TYPE PARVW VALUE 'VE'.
* 2012/03/05 DEL END
*----------------------------------------------------------------------*
*   テーブル定義(選択画面用)
*----------------------------------------------------------------------*
TABLES:ZN005, KNVV, KNVP.
*----------------------------------------------------------------------*
*   選択画面
*----------------------------------------------------------------------*
* データ選択
SELECTION-SCREEN:BEGIN OF BLOCK BL1 WITH FRAME TITLE TEXT-001.
PARAMETERS    :P_BUK    TYPE BUKRS OBLIGATORY   "会社コード
MEMORY ID BUK.
SELECT-OPTIONS:P_CZFBDT FOR ZN005-CZFBDT.       "締日
SELECT-OPTIONS:P_IZFBDT FOR ZN005-IZFBDT.       "入金予定日
SELECT-OPTIONS:P_KUNNR  FOR KNVV-KUNNR.         "得意先(支払人)
* 2012/03/05 ADD START
*-- 入金先廃止
*  SELECT-OPTIONS:P_KUNN2  FOR KNVV-KUNNR.         "得意先(入金先)
* 2012/03/05 ADD END
SELECT-OPTIONS:P_VKBUR  FOR KNVV-VKBUR          "営業所
NO INTERVALS.
SELECT-OPTIONS:P_WAERS  FOR ZN005-WAERS         "通貨コード
NO INTERVALS.
SELECTION-SCREEN:BEGIN OF LINE,
COMMENT 1(10) TEXT-002 FOR FIELD P_MI,
POSITION 25.
PARAMETERS    :P_MI     AS CHECKBOX.
SELECTION-SCREEN:END   OF LINE.
SELECTION-SCREEN:END   OF BLOCK BL1.

* 処理オプション
SELECTION-SCREEN:BEGIN OF BLOCK BL2 WITH FRAME TITLE TEXT-003.
* ALVバリアント項目
PARAMETERS    :P_VARI   TYPE SLIS_VARI.
SELECTION-SCREEN:END   OF BLOCK BL2.

* システム項目
SELECTION-SCREEN:BEGIN OF BLOCK BL3 WITH FRAME TITLE TEXT-004.
PARAMETERS    :P_VKORG TYPE VKORG       OBLIGATORY.  "販売組織
PARAMETERS    :P_VTWEG TYPE VTWEG       OBLIGATORY.  "流通チャネル
PARAMETERS    :P_SPART TYPE SPART       OBLIGATORY.  "製品部門
PARAMETERS    :P_PARVW TYPE KNVP-PARVW  OBLIGATORY.  "取引先機能
SELECTION-SCREEN:END   OF BLOCK BL3.

TYPE-POOLS:SSCR.

*----------------------------------------------------------------------*
*  INITIALIZATION
*----------------------------------------------------------------------*
INITIALIZATION.
*---選択画面の複数入力ボタン制御
PERFORM BUTTON_CONTROL.
*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
PERFORM F_DATA_CHECK.
*----------------------------------------------------------------------*
*    バリアント検索ヘルプ
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VARI.
PERFORM VARIANT_F4_HELP  CHANGING P_VARI.
*----------------------------------------------------------------------*
*    ALVヘッダをつける場合
*----------------------------------------------------------------------*
TOP-OF-PAGE.
PERFORM HEADER_WRITE.
*----------------------------------------------------------------------*
* START-OF-SELECTION.
*----------------------------------------------------------------------*
START-OF-SELECTION.

* 初期化処理
PERFORM INIT_SYORI.
* ZN002データ取得
PERFORM GET_DATA_ZN005.
CHECK NOT T_ZN005 IS INITIAL.
* 得意先マスタ情報取得
PERFORM GET_DATA_KUNNR.
* データ編集
PERFORM EDIT_ALV.
CHECK NOT T_OUTPUT IS INITIAL.
* ALVリスト出力
PERFORM OUTPUT_ALV.
*&---------------------------------------------------------------------*
*&      Form  BUTTON_CONTROL
*&---------------------------------------------------------------------*
*       選択画面の複数ボタン制御
*----------------------------------------------------------------------*
FORM BUTTON_CONTROL.
DATA:L_WA_RES        TYPE SSCR_RESTRICT,
L_WA_OPT_LIST   TYPE SSCR_OPT_LIST,
L_WA_ASS        TYPE SSCR_ASS.
DATA:OPTL TYPE SSCR_OPT_LIST.

* 単一指定のみ可能
L_WA_OPT_LIST-NAME       = 'JUST_EQ'.
L_WA_OPT_LIST-OPTIONS-EQ = 'X'.
APPEND L_WA_OPT_LIST TO L_WA_RES-OPT_LIST_TAB.

L_WA_ASS-KIND    = 'S'.
L_WA_ASS-SG_MAIN = 'I'.
L_WA_ASS-OP_MAIN = 'JUST_EQ'.

* 営業所
L_WA_ASS-NAME    = 'P_VKBUR'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.
* 通貨コード
L_WA_ASS-NAME    = 'P_WAERS'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.

L_WA_OPT_LIST-NAME       = 'JUST_EQ2'.
L_WA_OPT_LIST-OPTIONS-EQ = 'X'.
L_WA_OPT_LIST-OPTIONS-BT = 'X'.
APPEND L_WA_OPT_LIST TO L_WA_RES-OPT_LIST_TAB.

* 単一入力と範囲入力は可能(not eqは使用不可)
L_WA_ASS-KIND    = 'S'.
L_WA_ASS-SG_MAIN = 'I'.
L_WA_ASS-OP_MAIN = 'JUST_EQ2'.
* 締日
L_WA_ASS-NAME    = 'P_CZFBDT'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.
* 入金予定日
L_WA_ASS-NAME    = 'P_IZFBDT'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.


* 実行
CALL FUNCTION 'SELECT_OPTIONS_RESTRICT'
EXPORTING
RESTRICTION = L_WA_RES.

ENDFORM.                    " BUTTON_CONTROL
*&---------------------------------------------------------------------*
*&      Form  F_DATA_CHECK
*&---------------------------------------------------------------------*
*       選択画面入力チェック
*----------------------------------------------------------------------*
FORM F_DATA_CHECK.
DATA:LW_BUKRS  TYPE BUKRS.

* 複数選択ボタン押下時はチェックしない
IF SY-UCOMM+0(1) <> '%'.
*   会社コード存在チェック
SELECT SINGLE BUKRS
INTO LW_BUKRS
FROM T001
WHERE BUKRS = P_BUK.
IF SY-SUBRC <> 0.
MESSAGE E750 WITH P_BUK.
ENDIF.

*   締日/支払日入力チェック
IF  P_CZFBDT[] IS INITIAL
AND P_IZFBDT[] IS INITIAL.
MESSAGE E901 WITH TEXT-E01.
ENDIF.

ENDIF.
ENDFORM.                    " F_DATA_CHECK
*&---------------------------------------------------------------------*
*&      Form  VARIANT_F4_HELP
*&---------------------------------------------------------------------*
*       バリアント検索ヘルプ
*----------------------------------------------------------------------*
*      <--P_P_VARI  検索ヘルプで選択されたバリアント名
*----------------------------------------------------------------------*
FORM VARIANT_F4_HELP CHANGING P_P_VARI.
* 2012/03/05 DEL START
*-- レイアウト検索ヘルプ乗せ代え
*  DATA:LW_VARI   TYPE SLIS_VARI.  "属性変換用
*
*  G_PGID = SY-REPID.
** ALVバリアントの検索ヘルプ
*  CALL FUNCTION 'HR_F4_FOR_ALV_VARIANT'
*    EXPORTING
*      CURRENT_REPORT       = G_PGID
*    IMPORTING
*      VARIANT              = LW_VARI.
*
** ヘルプ画面より選択されたバリアント名を画面項目に設定
*  IF NOT LW_VARI IS INITIAL.
*    P_P_VARI = LW_VARI.
*  ENDIF.
* 2012/03/05 DEL START

* 2012/03/05 ADD START
*-- レイアウト検索ヘルプ乗せ代え
DATA:
LW_DISVARIANT TYPE DISVARIANT.

CLEAR:
LW_DISVARIANT,
P_P_VARI.

LW_DISVARIANT-REPORT = SY-REPID.

CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
EXPORTING
IS_VARIANT         = LW_DISVARIANT
I_SAVE             = C_SAVE
I_DISPLAY_VIA_GRID = C_ON
IMPORTING
ES_VARIANT         = LW_DISVARIANT
EXCEPTIONS
NOT_FOUND          = 1
PROGRAM_ERROR      = 2
OTHERS             = 3.

IF SY-SUBRC = 0.
P_P_VARI = LW_DISVARIANT-VARIANT.
ENDIF.

* 2012/03/05 ADD START
ENDFORM.                    " VARIANT_F4_HELP
*&---------------------------------------------------------------------*
*&      Form  HEADER_WRITE
*&---------------------------------------------------------------------*
*       ALVヘッダ編集
*----------------------------------------------------------------------*
FORM HEADER_WRITE.
DATA:LW_WORK   TYPE CHAR100,
LW_PAGNO(4) TYPE C.
*--- タイトル
PERFORM SET_HEADER USING 'H' '入金予定一覧（売上）' SPACE.

*--- ページ
CLEAR: LW_WORK,LW_PAGNO.
LW_PAGNO = SY-PAGNO.
CONDENSE LW_PAGNO.
CONCATENATE 'ページ　：'
LW_PAGNO
INTO LW_WORK.
PERFORM SET_HEADER USING 'S' SPACE LW_WORK.

*--- 処理日付
CLEAR LW_WORK.
CONCATENATE '処理日付：'
SY-DATUM+0(4) '/'
SY-DATUM+4(2) '/'
SY-DATUM+6(2)
INTO LW_WORK.
PERFORM SET_HEADER USING 'S' SPACE LW_WORK.

*--- 処理時刻
CLEAR LW_WORK.
CONCATENATE '処理時刻：'
SY-UZEIT+0(2) ':'
SY-UZEIT+2(2) ':'
SY-UZEIT+4(2)
INTO LW_WORK.
PERFORM SET_HEADER USING 'S' SPACE LW_WORK.

*--- ユーザID
CLEAR LW_WORK.
CONCATENATE 'ユーザID：' SY-UNAME INTO LW_WORK.
PERFORM SET_HEADER USING 'S' SPACE LW_WORK.



*--- 締日(選択画面の画面表示されているデータをヘッダに出力)
READ TABLE P_CZFBDT INDEX 1.
PERFORM EDIT_HEADER_DATE    USING P_CZFBDT-LOW
P_CZFBDT-HIGH
TEXT-007
CHANGING LW_WORK.
PERFORM SET_HEADER USING 'S' LW_WORK '<<実行条件>>'.
CLEAR:LW_WORK.

*--- 入金予定日(選択画面の画面表示されているデータをヘッダに出力)
READ TABLE P_IZFBDT INDEX 1.
PERFORM EDIT_HEADER_DATE    USING P_IZFBDT-LOW
P_IZFBDT-HIGH
TEXT-008
CHANGING LW_WORK.
PERFORM SET_HEADER USING 'S' LW_WORK SPACE.
CLEAR:LW_WORK.

* ヘッダ出力
CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
EXPORTING
IT_LIST_COMMENTARY       = T_HEAD.

CLEAR:T_HEAD.

ENDFORM.                    " HEADER_WRITE
*&---------------------------------------------------------------------*
*&      Form  EDIT_HEADER_DATE
*&---------------------------------------------------------------------*
*       画面出力用文言の編集
*----------------------------------------------------------------------*
*      -->P_LW_FROM    レンジテーブルFROM値
*      -->P_LW_TO      レンジテーブルTO値
*      <--P_LW_WORK    編集した文言
*----------------------------------------------------------------------*
FORM EDIT_HEADER_DATE USING    P_LW_FROM
P_LW_TO
P_TEXT
CHANGING P_LW_WORK.
DATA:LW_FROM_D TYPE DATUM,        "FROM値 日付属性
LW_TO_D   TYPE DATUM,        "TO値 日付属性
LW_FROM   TYPE CHAR10,       "FROM YYYY/MM/DD出力用
LW_TO     TYPE CHAR10.       "TO YYYY/MM/DD出力用

* 日付属性に設定しなおす
LW_FROM_D = P_LW_FROM.
LW_TO_D   = P_LW_TO.
* FROM値
IF NOT LW_FROM_D IS INITIAL.
WRITE LW_FROM_D TO LW_FROM.
ENDIF.
* TO値
IF NOT LW_TO_D IS INITIAL.
WRITE LW_TO_D TO LW_TO.
ENDIF.

* YYYY/MM/DD 〜 YYYY/MM/DD
IF  NOT LW_FROM IS INITIAL
AND NOT LW_TO   IS INITIAL.
CONCATENATE P_TEXT LW_FROM TEXT-009 LW_TO
INTO P_LW_WORK.
ENDIF.
* YYYY/MM/DDのみ
IF  NOT LW_FROM IS INITIAL
AND     LW_TO   IS INITIAL.
CONCATENATE P_TEXT LW_FROM
INTO P_LW_WORK.
ENDIF.
* 〜 YYYY/MM/DD
IF      LW_FROM IS INITIAL
AND NOT LW_TO   IS INITIAL.
CONCATENATE P_TEXT TEXT-009 LW_TO
INTO P_LW_WORK.
ENDIF.
* 初期値
IF   LW_FROM IS INITIAL
AND  LW_TO   IS INITIAL.
P_LW_WORK = P_TEXT.
ENDIF.

ENDFORM.                    " EDIT_HEADER_DATE
*&---------------------------------------------------------------------*
*&      Form  SET_HEADER
*&---------------------------------------------------------------------*
*       ヘッダ編集
*----------------------------------------------------------------------*
*      -->L_TYP    タイプ
*      -->L_INFO   編集内容2
*      -->L_KEY    編集内容1
*----------------------------------------------------------------------*
FORM SET_HEADER  USING     L_TYP
L_INFO
L_KEY.
CLEAR W_HEAD.
W_HEAD-TYP  = L_TYP.
W_HEAD-KEY = L_KEY.
W_HEAD-INFO = L_INFO.
APPEND W_HEAD TO T_HEAD.

ENDFORM.                    " SET_HEADER
*&---------------------------------------------------------------------*
*&      Form  INIT_SYORI
*&---------------------------------------------------------------------*
*       初期化処理
*----------------------------------------------------------------------*
FORM INIT_SYORI.

* 内部テーブルのクリア
CLEAR:T_ZN005, T_KNA1, T_KNVP, T_OUTPUT, T_VKBUR, T_VKGRP, T_PERNR.

ENDFORM.                    " INIT_SYORI
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_ZN005
*&---------------------------------------------------------------------*
*       ZN005データ取得
*----------------------------------------------------------------------*
FORM GET_DATA_ZN005.
DATA:T_AUFLG   TYPE RANGE OF ZNEAUFLG,
LW_AUFLG  LIKE LINE OF T_AUFLG.

* [未払のみ]のチェックボックスがONの場合は'X'のみ抽出
* チェックボックスがOFFの場合は'X'もSPACEも抽出
IF P_MI = C_ON.
LW_AUFLG-SIGN   = C_SIGN.
LW_AUFLG-OPTION = C_OPTION.
LW_AUFLG-LOW    = SPACE.
APPEND LW_AUFLG TO T_AUFLG.  "レンジテーブル作成
ENDIF.

SELECT *
INTO TABLE T_ZN005
FROM ZN005
WHERE BUKRS = P_BUK
AND KUNNR IN P_KUNNR
AND CZFBDT IN P_CZFBDT
AND IZFBDT IN P_IZFBDT
AND WAERS  IN P_WAERS
AND AUFLG IN T_AUFLG.
* 取得できた場合はソートしておく
IF SY-SUBRC = 0.
*   ALV一覧出力用ソート順
SORT T_ZN005 BY KUNNR CZFBDT IZFBDT.
ELSE.
* 2012/03/05 MOD START
*    MESSAGE I762.
MESSAGE S762.
* 2012/03/05 MOD END
ENDIF.

ENDFORM.                    " GET_DATA_ZN005
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_KUNNR
*&---------------------------------------------------------------------*
*       得意先マスタ情報取得
*----------------------------------------------------------------------*
FORM GET_DATA_KUNNR.
DATA:LT_ZN005   TYPE T_TYP_ZN005.

* 会社コード/仕入先の重複を削除
LT_ZN005[] = T_ZN005[].
SORT LT_ZN005 BY BUKRS KUNNR.
DELETE ADJACENT DUPLICATES FROM LT_ZN005
COMPARING BUKRS KUNNR.

* 得意先マスタKNA1,KNVV取得
SELECT KNA1~KUNNR
KNA1~NAME1
KNVV~ZTERM
KNVV~VKBUR
KNVV~VKGRP
INTO TABLE T_KNA1
FROM KNA1 INNER JOIN KNVV
ON KNA1~KUNNR = KNVV~KUNNR
FOR ALL ENTRIES IN LT_ZN005
WHERE KNA1~KUNNR = LT_ZN005-KUNNR
AND KNVV~VKORG = P_VKORG
AND KNVV~VTWEG = P_VTWEG
AND KNVV~SPART = P_SPART.
IF SY-SUBRC = 0.
SORT T_KNA1 BY KUNNR.
ENDIF.

* 得意先マスタKNVP取得
SELECT KUNNR     "得意先コード
PARVW     "取引先機能
KUNN2     "取引先の得意先コード
PERNR     "従業員番号
INTO TABLE T_KNVP
FROM KNVP
FOR ALL ENTRIES IN LT_ZN005
WHERE KUNNR = LT_ZN005-KUNNR
AND VKORG = P_VKORG
AND VTWEG = P_VTWEG
AND SPART = P_SPART
* 2012/03/05 MOD START
*     AND ( PARVW = P_PARVW
*       OR  PARVW = C_TANTOUSYA ).
AND PARVW = P_PARVW.
* 2012/03/05 MOD END
IF SY-SUBRC = 0.
SORT T_KNVP BY KUNNR PARVW.
ENDIF.

ENDFORM.                    " GET_DATA_KUNNR
*&---------------------------------------------------------------------*
*&      Form  EDIT_ALV
*&---------------------------------------------------------------------*
*       データ編集
*----------------------------------------------------------------------*
FORM EDIT_ALV.

* 営業所名称の取得
PERFORM GET_VKBUR_NAME.
* 営業グループ名称の取得
PERFORM GET_VKGRP_NAME.
* 従業員名称の取得
PERFORM GET_PERNR_NAME.
* 仕入先名称の取得
PERFORM GET_LIFNR_NAME.
* ALVデータ編集
PERFORM MAKE_OUTPUT_DATA.

ENDFORM.                    " EDIT_ALV
*&---------------------------------------------------------------------*
*&      Form  GET_VKBUR_NAME
*&---------------------------------------------------------------------*
*       営業所名称の取得
*----------------------------------------------------------------------*
FORM GET_VKBUR_NAME.
DATA:LT_VKBUR   TYPE T_TYP_VKBUR.

LT_VKBUR[] = T_VKBUR[].
SORT LT_VKBUR.
DELETE ADJACENT DUPLICATES FROM LT_VKBUR
COMPARING VKBUR.

SELECT VKBUR          "営業所
BEZEI          "内容説明
INTO TABLE T_VKBUR
FROM TVKBT
FOR ALL ENTRIES IN LT_VKBUR
WHERE SPRAS = SY-LANGU
AND VKBUR = LT_VKBUR-VKBUR.

* 取得した場合はソートしておく
IF SY-SUBRC = 0.
SORT T_VKBUR.
ENDIF.

ENDFORM.                    " GET_VKBUR_NAME
*&---------------------------------------------------------------------*
*&      Form  GET_VKGRP_NAME
*&---------------------------------------------------------------------*
*       営業Ｇの名称取得
*----------------------------------------------------------------------*
FORM GET_VKGRP_NAME.
DATA:LT_VKGRP   TYPE T_TYP_VKGRP.

LT_VKGRP[] = T_VKGRP[].
SORT LT_VKGRP.
DELETE ADJACENT DUPLICATES FROM LT_VKGRP
COMPARING VKGRP.

SELECT VKGRP          "営業グループ
BEZEI          "内容説明
INTO TABLE T_VKGRP
FROM TVGRT
FOR ALL ENTRIES IN LT_VKGRP
WHERE SPRAS = SY-LANGU
AND VKGRP = LT_VKGRP-VKGRP.

* 取得した場合はソートしておく
IF SY-SUBRC = 0.
SORT T_VKGRP.
ENDIF.


ENDFORM.                    " GET_VKGRP_NAME
*&---------------------------------------------------------------------*
*&      Form  GET_PERNR_NAME
*&---------------------------------------------------------------------*
*       従業員名称の取得
*----------------------------------------------------------------------*
FORM GET_PERNR_NAME.
DATA:LT_KNVP   TYPE T_TYP_KNVP.

LT_KNVP[] = T_KNVP[].
SORT LT_KNVP.
DELETE LT_KNVP WHERE PERNR = SPACE.       "初期値は削除
DELETE ADJACENT DUPLICATES FROM LT_KNVP   "重複削除
COMPARING PERNR.

SELECT PERNR        "従業員番号
NACHN        "姓
VORNA        "名
INTO TABLE T_PERNR
FROM PA0002
FOR ALL ENTRIES IN LT_KNVP
WHERE PERNR = LT_KNVP-PERNR.

* 取得した場合はソートしておく
IF SY-SUBRC = 0.
SORT T_PERNR.
ENDIF.

ENDFORM.                    " GET_PERNR_NAME
*&---------------------------------------------------------------------*
*&      Form  GET_LIFNR_NAME
*&---------------------------------------------------------------------*
*       仕入先名称の取得
*----------------------------------------------------------------------*
FORM GET_LIFNR_NAME.
DATA:LT_ZN005   TYPE T_TYP_ZN005.

LT_ZN005[] = T_ZN005[].
SORT LT_ZN005 BY ILIFNR.
DELETE LT_ZN005 WHERE ILIFNR = SPACE.       "初期値は削除
DELETE ADJACENT DUPLICATES FROM LT_ZN005    "重複削除
COMPARING ILIFNR.

* 取得した場合はソートしておく
SELECT LIFNR
NAME1
INTO TABLE T_LIFNR
FROM LFA1
FOR ALL ENTRIES IN LT_ZN005
WHERE LIFNR = LT_ZN005-ILIFNR.

IF SY-SUBRC = 0.
SORT T_LIFNR.
ENDIF.

ENDFORM.                    " GET_LIFNR_NAME
*&---------------------------------------------------------------------*
*&      Form  MAKE_OUTPUT_DATA
*&---------------------------------------------------------------------*
*       ALVデータ編集
*----------------------------------------------------------------------*
FORM MAKE_OUTPUT_DATA.
DATA:LW_ZN005   TYPE ZN005,            "入金予定データ構造
LW_KNA1    TYPE TYP_KNA1,         "得意先マスタKNA1,KNVV構造
LW_KNVP    TYPE TYP_KNVP,         "得意先マスタKNVP構造
LW_KNVP_PE TYPE TYP_KNVP,         "得意先マスタKNVP構造
LW_VKBUR   TYPE TYP_VKBUR,        "営業所名称構造
LW_VKGRP   TYPE TYP_VKGRP,        "営業Ｇ名称構造
LW_PERNR   TYPE TYP_PERNR,        "従業員名称構造
LW_LIFNR   TYPE TYP_LIFNR,        "仕入先名称構造
LW_FLG_OK  TYPE CHAR1.            "出力対象

LOOP AT T_ZN005 INTO LW_ZN005.
CLEAR:LW_KNA1, LW_KNVP, LW_KNVP_PE, LW_VKBUR,
LW_VKGRP, LW_PERNR, LW_LIFNR, W_OUTPUT, LW_FLG_OK.
*----- 得意先マスタ情報読込
READ TABLE T_KNA1 INTO LW_KNA1
WITH KEY KUNNR = LW_ZN005-KUNNR
BINARY SEARCH.
* 2012/03/05 DEL START
*    READ TABLE T_KNVP INTO LW_KNVP
*         WITH KEY KUNNR = LW_ZN005-KUNNR
*                  PARVW = P_PARVW          "選択画面の取引先機能
*         BINARY SEARCH.
*    IF SY-SUBRC <> 0.
*      LW_KNVP-KUNN2 = LW_ZN005-KUNNR.
*    ENDIF.
* 2012/03/05 DEL END
*----- 入力判定
*   営業所の入力判定
IF LW_KNA1-VKBUR IN P_VKBUR.
* 2012/03/05 DEL START
**     得意先コード(入金先)の入力判定
*      IF LW_KNVP-KUNN2 IN P_KUNN2.
* 2012/03/05 DEL END
LW_FLG_OK = C_ON.
* 2012/03/05 DEL START
*      ENDIF.
* 2012/03/05 DEL END
ENDIF.

*   出力対象の場合以下の処理を行う
CHECK LW_FLG_OK = C_ON.
*----- 名称読込
*   営業所名称取得
READ TABLE T_VKBUR INTO LW_VKBUR
WITH KEY VKBUR = LW_KNA1-VKBUR
BINARY SEARCH.
*   営業Ｇ名称取得
READ TABLE T_VKGRP INTO LW_VKGRP
WITH KEY VKGRP = LW_KNA1-VKGRP
BINARY SEARCH.
*   担当者取得
READ TABLE T_KNVP INTO LW_KNVP_PE
WITH KEY KUNNR = LW_ZN005-KUNNR
* 2012/03/05 MOD START
*                  PARVW = C_TANTOUSYA
PARVW = P_PARVW
* 2012/03/05 MOD END
BINARY SEARCH.
*   担当者名称取得
READ TABLE T_PERNR INTO LW_PERNR
WITH KEY PERNR = LW_KNVP_PE-PERNR
BINARY SEARCH.
*   仕入先名称取得
IF NOT LW_ZN005-ILIFNR IS INITIAL.
READ TABLE T_LIFNR INTO LW_LIFNR
WITH KEY LIFNR = LW_ZN005-ILIFNR
BINARY SEARCH.
ENDIF.
*----- ALV一覧編集
W_OUTPUT-KUNNR = LW_ZN005-KUNNR.      "得意先
W_OUTPUT-NAME1 = LW_KNA1-NAME1.       "得意先名称
W_OUTPUT-CZFBDT = LW_ZN005-CZFBDT.    "照合締日
W_OUTPUT-IZFBDT = LW_ZN005-IZFBDT.    "入金予定日
W_OUTPUT-WAERS  = LW_ZN005-WAERS.     "通貨
W_OUTPUT-IWRBTR = LW_ZN005-IWRBTR.    "金額
IF LW_ZN005-IZLSCH = 'S'.             "相殺
W_OUTPUT-SOU_FLG = C_ON.
ELSE.
W_OUTPUT-SOU_FLG = SPACE.
ENDIF.
W_OUTPUT-ILIFNR = LW_ZN005-ILIFNR.    "仕入先
W_OUTPUT-LIFNR_NAME = LW_LIFNR-NAME1. "仕入先名称
IF LW_ZN005-AUFLG = C_ON.             "入金
W_OUTPUT-NYUKIN = TEXT-005.         "[済]
ELSE.
W_OUTPUT-NYUKIN = TEXT-006.         "[未]
ENDIF.
W_OUTPUT-IBELNER = LW_ZN005-IBELNER.  "会計伝票
W_OUTPUT-IGJAHR  = LW_ZN005-IGJAHR.   "会計年度
W_OUTPUT-IBUDAT  = LW_ZN005-IBUDAT.   "消込日
W_OUTPUT-ZTERM   = LW_KNA1-ZTERM.     "条件(ﾏｽﾀ)
*    W_OUTPUT-                            "規定外条件
W_OUTPUT-KUNN2   = LW_KNVP-KUNN2.     "入金先
*    W_OUTPUT-                            "相殺先
W_OUTPUT-VKBUR   = LW_KNA1-VKBUR.     "営業所
W_OUTPUT-VKBUR_NAME = LW_VKBUR-BEZEI. "営業所名称
W_OUTPUT-VKGRP   = LW_KNA1-VKGRP.     "営業Ｇ
W_OUTPUT-VKGRP_NAME = LW_VKGRP-BEZEI. "営業Ｇ名称
W_OUTPUT-PERNR   = LW_KNVP_PE-PERNR.  "担当者
CONCATENATE LW_PERNR-NACHN LW_PERNR-VORNA
INTO W_OUTPUT-PERNR_NAME
SEPARATED BY SPACE.            "担当者名称
APPEND W_OUTPUT TO T_OUTPUT.
ENDLOOP.

* 出力対象データのチェック
IF T_OUTPUT[] IS INITIAL.
* 2012/03/05 MOD START.
*   MESSAGE I762.
MESSAGE S762.
* 2012/03/05 MOD END.
ENDIF.

ENDFORM.                    " MAKE_OUTPUT_DATA
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_ALV
*&---------------------------------------------------------------------*
*       ALVリスト出力
*----------------------------------------------------------------------*
FORM OUTPUT_ALV.

* 項目属性編集
PERFORM ALV_SET_FIELDCAT.
* その他編集
PERFORM ALV_LAYOUT.
* ALV一覧出力
PERFORM ALV_CALL.

ENDFORM.                    " OUTPUT_ALV
*&---------------------------------------------------------------------*
*&      Form  ALV_SET_FIELDCAT
*&---------------------------------------------------------------------*
*       項目属性編集
*----------------------------------------------------------------------*
FORM ALV_SET_FIELDCAT.
*** 2012/02/29 ALV INSERT START ***
DATA:L_COL   TYPE I.             "カラム位置
*** 2012/02/29 ALV INSERT END ***

* PGID退避
G_PGID = SY-REPID.

*** 2012/02/29 ALV INSERT START ***
* カラム位置初期化
L_COL = 0.

* 項目名を編集する
PERFORM SET_FIELDCAT USING 'KUNNR'          "項目ID
TEXT-F01         "項目テキスト(短)
TEXT-F01         "項目テキスト(中)
TEXT-F01         "項目テキスト(長)
10               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
10               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'NAME1'          "項目ID
TEXT-F02         "項目テキスト(短)
TEXT-F02         "項目テキスト(中)
TEXT-F02         "項目テキスト(長)
35               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
35               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'CZFBDT'        "項目ID
TEXT-F03         "項目テキスト(短)
TEXT-F03         "項目テキスト(中)
TEXT-F03         "項目テキスト(長)
10               "出力データ長
'DATS'           "データ型
SPACE            "数値データ型
8                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'IZFBDT'        "項目ID
TEXT-F04         "項目テキスト(短)
TEXT-F04         "項目テキスト(中)
TEXT-F04         "項目テキスト(長)
10               "出力データ長
'DATS'           "データ型
SPACE            "数値データ型
8                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'WAERS'        "項目ID
TEXT-F05         "項目テキスト(短)
TEXT-F05         "項目テキスト(中)
TEXT-F05         "項目テキスト(長)
5                "出力データ長
'CUKY'           "データ型
SPACE            "数値データ型
5                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'IWRBTR'        "項目ID
TEXT-F06         "項目テキスト(短)
TEXT-F06         "項目テキスト(中)
TEXT-F06         "項目テキスト(長)
18               "出力データ長
'CURR'           "データ型
'P'              "数値データ型
15               "数値データ長
'WAERS'          "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'SOU_FLG'       "項目ID
TEXT-F07         "項目テキスト(短)
TEXT-F07         "項目テキスト(中)
TEXT-F07         "項目テキスト(長)
2                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
2                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'ILIFNR'        "項目ID
TEXT-F08         "項目テキスト(短)
TEXT-F08         "項目テキスト(中)
TEXT-F08         "項目テキスト(長)
10               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
10               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'LIFNR_NAME'    "項目ID
TEXT-F09         "項目テキスト(短)
TEXT-F09         "項目テキスト(中)
TEXT-F09         "項目テキスト(長)
35               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
35               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'NYUKIN'        "項目ID
TEXT-F10         "項目テキスト(短)
TEXT-F10         "項目テキスト(中)
TEXT-F10         "項目テキスト(長)
2                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
2                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'IBELNER'       "項目ID
TEXT-F11         "項目テキスト(短)
TEXT-F11         "項目テキスト(中)
TEXT-F11         "項目テキスト(長)
10               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
10               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'IGJAHR'        "項目ID
TEXT-F12         "項目テキスト(短)
TEXT-F12         "項目テキスト(中)
TEXT-F12         "項目テキスト(長)
4                "出力データ長
'NUMC'           "データ型
SPACE            "数値データ型
4                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'IBUDAT'        "項目ID
TEXT-F13         "項目テキスト(短)
TEXT-F13         "項目テキスト(中)
TEXT-F13         "項目テキスト(長)
10               "出力データ長
'DATS'           "データ型
SPACE            "数値データ型
8                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'ZTERM'         "項目ID
TEXT-F14         "項目テキスト(短)
TEXT-F14         "項目テキスト(中)
TEXT-F14         "項目テキスト(長)
4                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
4                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'KITEI'         "項目ID
TEXT-F15         "項目テキスト(短)
TEXT-F15         "項目テキスト(中)
TEXT-F15         "項目テキスト(長)
1                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
1                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
* 2012/03/05 DEL START
*   PERFORM SET_FIELDCAT USING 'KUNN2'         "項目ID
*                             TEXT-F16         "項目テキスト(短)
*                             TEXT-F16         "項目テキスト(中)
*                             TEXT-F16         "項目テキスト(長)
*                             10               "出力データ長
*                             'CHAR'           "データ型
*                             SPACE            "数値データ型
*                             10               "数値データ長
*                             SPACE            "通貨参照項目
*                    CHANGING L_COL.
* 2012/03/05 DEL END
PERFORM SET_FIELDCAT USING 'SOUSAI'        "項目ID
TEXT-F17         "項目テキスト(短)
TEXT-F17         "項目テキスト(中)
TEXT-F17         "項目テキスト(長)
10               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
10               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'VKBUR'         "項目ID
TEXT-F18         "項目テキスト(短)
TEXT-F18         "項目テキスト(中)
TEXT-F18         "項目テキスト(長)
4                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
4                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'VKBUR_NAME'    "項目ID
TEXT-F19         "項目テキスト(短)
TEXT-F19         "項目テキスト(中)
TEXT-F19         "項目テキスト(長)
20               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
20               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'VKGRP'         "項目ID
TEXT-F20         "項目テキスト(短)
TEXT-F20         "項目テキスト(中)
TEXT-F20         "項目テキスト(長)
3                "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
3                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'VKGRP_NAME'    "項目ID
TEXT-F21         "項目テキスト(短)
TEXT-F21         "項目テキスト(中)
TEXT-F21         "項目テキスト(長)
20               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
20               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'PERNR'         "項目ID
TEXT-F22         "項目テキスト(短)
TEXT-F22         "項目テキスト(中)
TEXT-F22         "項目テキスト(長)
8                "出力データ長
'NUMC'           "データ型
SPACE            "数値データ型
8                "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
PERFORM SET_FIELDCAT USING 'PERNR_NAME'    "項目ID
TEXT-F23         "項目テキスト(短)
TEXT-F23         "項目テキスト(中)
TEXT-F23         "項目テキスト(長)
40               "出力データ長
'CHAR'           "データ型
SPACE            "数値データ型
40               "数値データ長
SPACE            "通貨参照項目
CHANGING L_COL.
*** 2012/02/29 ALV INSERT END ***
ENDFORM.                    " ALV_SET_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  SET_FIELDCAT
*&---------------------------------------------------------------------*
*       FIELD CATALOGの編集
*----------------------------------------------------------------------*
*      -->P_FIELDNAME     項目ID　　　　　　　　　　　　　　　　　必須　
*      -->P_SELLDTEXT_S   項目テキスト(短)　　　　　　　　　　　　必須
*      -->P_SELLDTEXT_S   項目テキスト(中)　　　　　　　　　　　　必須
*      -->P_SELLDTEXT_S   項目テキスト(長)　　　　　　　　　　　　必須
*      -->P_OUTPUTLEN     出力データ長(カンマ、小数点、符号含む)　必須
*      -->P_DATATYPE      データ型    　　　　　　　　　　　　　　必須
*      -->P_INTTYPE       数値データ型 　　　　　　　　　　　 金額のみ
*      -->P_INTLEN        数値データ長                            必須
*      -->P_CFIELD        金額項目の場合参照する通貨項目名    金額のみ
*      -->P_COL　　　　　 カラム位置　　　　　　　　　　　　　　　必須
*----------------------------------------------------------------------*
FORM SET_FIELDCAT USING P_FIELDNAME   TYPE SLIS_FIELDCAT_ALV-FIELDNAME
P_SELTEXT_S   TYPE ANY
P_SELTEXT_M   TYPE ANY
P_SELTEXT_L   TYPE ANY
P_OUTPUTLEN   TYPE SLIS_FIELDCAT_ALV-OUTPUTLEN
P_DATATYPE    TYPE SLIS_FIELDCAT_ALV-DATATYPE
P_INTTYPE     TYPE SLIS_FIELDCAT_ALV-INTTYPE
P_INTLEN      TYPE SLIS_FIELDCAT_ALV-INTLEN
P_CFIELDNAME  TYPE SLIS_FIELDCAT_ALV-CFIELDNAME
CHANGING P_COL         TYPE I.

DATA:W_FIELDCAT TYPE SLIS_FIELDCAT_ALV.


* カラム位置設定
P_COL = P_COL + 1.

* 見出し設定
W_FIELDCAT-COL_POS    = P_COL.             "カラム位置
W_FIELDCAT-FIELDNAME  = P_FIELDNAME.       "項目ID
W_FIELDCAT-SELTEXT_S  = P_SELTEXT_S.       "項目テキスト(短)
W_FIELDCAT-SELTEXT_M  = P_SELTEXT_M.       "項目テキスト(中)
W_FIELDCAT-SELTEXT_L  = P_SELTEXT_L.       "項目テキスト(長)
W_FIELDCAT-OUTPUTLEN  = P_OUTPUTLEN.       "出力データ長
W_FIELDCAT-DATATYPE   = P_DATATYPE.        "データ型
W_FIELDCAT-INTTYPE    = P_INTTYPE.         "数値のデータ型
W_FIELDCAT-INTLEN     = P_INTLEN.          "データ長
W_FIELDCAT-CFIELDNAME = P_CFIELDNAME.      "参照通貨


APPEND W_FIELDCAT TO T_FIELDCAT.

ENDFORM.                    " SET_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  ALV_LAYOUT
*&---------------------------------------------------------------------*
*       その他編集
*----------------------------------------------------------------------*
FORM ALV_LAYOUT.

* プログラムID取得
W_REPID = SY-REPID.
* レイアウト設定
W_LAYOUT-COLWIDTH_OPTIMIZE    = 'X'.  "ALV コントロール: 列幅の最適化
W_LAYOUT-DETAIL_INITIAL_LINES = 'X'.
W_LAYOUT-ZEBRA                = 'X'.
W_LAYOUT-GROUP_CHANGE_EDIT = 'X'.

* バリアント
IF NOT P_VARI IS INITIAL.
W_EDISVARIANT-REPORT  = G_PGID.
W_EDISVARIANT-VARIANT = P_VARI.
ENDIF.

* ALV印刷時用 設定項目
W_PRINT-NO_PRINT_LISTINFOS = 'X'.


* 処理イベントの取得
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
I_LIST_TYPE           = 0
IMPORTING
ET_EVENTS             = T_EVENT.

* イベント時にコールされるFORM名を設定
CLEAR W_EVENT.
READ TABLE T_EVENT INTO W_EVENT WITH KEY NAME = 'TOP_OF_PAGE'.
IF SY-SUBRC = 0.
W_EVENT-FORM = 'HEADER_WRITE'.
MODIFY T_EVENT INDEX SY-TABIX FROM W_EVENT.
ENDIF.
* イベント時にコールされるFORM名を設定
CLEAR W_EVENT.
READ TABLE T_EVENT INTO W_EVENT WITH KEY NAME = 'USER_COMMAND'.
IF SY-SUBRC = 0.
W_EVENT-FORM = 'USER_COMMAND'.
MODIFY T_EVENT INDEX SY-TABIX FROM W_EVENT.
ENDIF.

ENDFORM.                    " ALV_LAYOUT
*&---------------------------------------------------------------------*
*&      Form  ALV_CALL
*&---------------------------------------------------------------------*
*       ALV一覧出力
*----------------------------------------------------------------------*
FORM ALV_CALL.

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM      = W_REPID     "プログラム名
IS_LAYOUT               = W_LAYOUT    "レイアウト定義
IS_PRINT                = W_PRINT
IT_FIELDCAT             = T_FIELDCAT  "構造定義
I_DEFAULT               = 'X'
I_SAVE                  = 'A'
IS_VARIANT              = W_EDISVARIANT
IT_EVENTS               = T_EVENT
TABLES
T_OUTTAB                = T_OUTPUT     "出力データ
EXCEPTIONS
PROGRAM_ERROR           = 1
OTHERS                  = 2.

IF SY-SUBRC <> 0.
*-- ALV出力エラー
*** 2012/02/29 MOD START ***
*    MESSAGE I789 WITH TEXT-E01.
*    STOP.
MESSAGE S000 WITH 'システムエラーが発生しました'.
LEAVE LIST-PROCESSING.
*** 2012/02/29 MOD END ***
ENDIF.

ENDFORM.                    " ALV_CALL
*&---------------------------------------------------------------------*
*&      Form  USER_COMMAND
*&---------------------------------------------------------------------*
*       ユーザコマンド
*----------------------------------------------------------------------*
FORM USER_COMMAND USING P_UCOMM  TYPE SYUCOMM
P_INFO   TYPE SLIS_SELFIELD.
DATA:LW_OUTPUT   TYPE TYP_OUTPUT.
DATA:T_BDC   TYPE TABLE OF BDCDATA,
W_BDC   TYPE BDCDATA.

READ TABLE T_OUTPUT INTO LW_OUTPUT
INDEX P_INFO-TABINDEX.
CASE P_UCOMM.
*   ダブルクリックの場合
WHEN '&IC1'.
IF NOT LW_OUTPUT-IBELNER IS INITIAL.
SET PARAMETER ID 'BLN' FIELD LW_OUTPUT-IBELNER.
SET PARAMETER ID 'GJR' FIELD LW_OUTPUT-IGJAHR.
CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.
ENDIF.
WHEN OTHERS.
ENDCASE.

ENDFORM.
