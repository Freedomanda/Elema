*&---------------------------------------------------------------------*
*&  プログラムＩＤ ： ZNEN0015
*&  プログラム名称 ：【在庫年齢表】在庫データ設定
*&  処　理　概　要 ：
*&
*&  作　  成  　者 ： MIS
*&  作　  成  　日 ： 2009.4.2
*&---------------------------------------------------------------------*
*& 【変更履歴】
*&  更新日     管理番号     更新者               更新内容
*& ----------  --------  ---------------  -----------------------------*
*
*&---------------------------------------------------------------------*
REPORT ZNEN0015_20150526 NO STANDARD PAGE HEADING
LINE-SIZE 250.
*----------------------------------------------------------------------*
* TABLES 定義
*----------------------------------------------------------------------*
TABLES:
ZNEN002,    "在庫内訳テーブル
EKPO,       "購買伝票明細
MSEG.       "伝票セグメント: 品目
*----------------------------------------------------------------------*
* Types 定義
*----------------------------------------------------------------------*
* 伝票フロー情報取得型
TYPES:
BEGIN OF TYP_ZYUTYU_FLOW,
VBELN TYPE VBFA-VBELV,        "先行販売管理伝票
POSNV TYPE VBFA-POSNV,        "販売管理伝票前明細
VBTYP_V TYPE VBFA-VBTYP_V,    "先行販売管理伝票カテゴリ
END OF TYP_ZYUTYU_FLOW.

*----------------------------------------------------------------------*
* DATA 定義
*----------------------------------------------------------------------*
DATA:
*-- 在庫内訳内部テーブル
ST_ZNEN002 LIKE ZNEN002,
I_ZNEN002  LIKE TABLE OF ST_ZNEN002,

*-- 前月残在庫内部テーブル
ST_ZEN_STOCK LIKE ZNEN002,
I_ZEN_STOCK  LIKE TABLE OF ST_ZEN_STOCK.

*-- 当月在庫残内部テーブル
DATA:
BEGIN OF ST_CUR_STOCK,
MATNR  LIKE MSEG-MATNR,     "品目コード
WERKS  LIKE MSEG-WERKS,     "プラント
EBELN  LIKE MSEG-EBELN,     "入出庫用購買発注伝票番号
EBELP  LIKE MSEG-EBELP,     "入出庫用購買発注伝票明細
KUNNR  LIKE VBAK-KUNNR,     "得意先コード
PERNR  LIKE ZNEN002-PERNR,  "従業員番号(担当コード)
VKBUR  LIKE VBAK-VKBUR,     "営業所(部)
MBLNR  LIKE MKPF-MBLNR,     "入出庫伝票番号
ZEILE  LIKE MSEG-ZEILE,     "入出庫伝票明細
KDAUF  LIKE MSEG-KDAUF,     "入出庫用受注伝票番号
KDPOS  LIKE MSEG-KDPOS,     "入出庫用受注伝票明細
MENGE  LIKE MSEG-MENGE,     "数量(入庫数量)
BUDAT  LIKE MKPF-BUDAT,     "転記日付（入庫年月）
BWART  LIKE MSEG-BWART,     "移動タイプ
UMWRK  LIKE MSEG-UMWRK,     "移動元プラント
VERKF  LIKE EKKO-VERKF,     "営業担当者
BSART  LIKE EKKO-BSART,     "発注伝票タイプ
EKGRP  LIKE EKKO-EKGRP,     "購買グループ
IDNLF  LIKE EKPO-IDNLF,     "仕入先品目
SOBKZ  LIKE MSEG-SOBKZ,     "特殊在庫区分
NETPR  LIKE EKPO-NETPR,     "購買伝票正味価格(伝票通貨)
DMBTR  LIKE MSEG-DMBTR,     "国内通貨額
UMSOK  LIKE MSEG-UMSOK,     "在庫転送の特殊在庫区分
XBLNR  LIKE MKPF-XBLNR,     "参照伝票番号
UMMAT  LIKE MSEG-UMMAT,     "入庫/出庫品目
PSTYP  TYPE EKPO-PSTYP,     "明細カテゴリ
LBKUM  TYPE MSEG-LBKUM,     "転記前の評価在庫合計
SALK3  TYPE MSEG-SALK3,     "転記前の評価在庫合計金額
WAERS  TYPE MSEG-WAERS,     "通貨コード
KZBEW  TYPE MSEG-KZBEW,     "移動区分
KZZUG  TYPE MSEG-KZZUG,     "入庫区分
KZVBR  TYPE MSEG-KZVBR,     "消費
VKGRP  LIKE ZNEN002-VKGRP,  "営業グループ(課)
ZZNO   LIKE ZNEN002-ZZNO,   "発注番号
ZZPOS  LIKE ZNEN002-ZZPOS,  "発注明細番号
MATKL  LIKE ZNEN002-MATKL,  "品目グループ
ZPOCO  LIKE ZNEN002-ZPOCO,  "POCOキー
ZANDT  LIKE ZNEN002-ZANDT,  "勘定日付
ZCOUNT LIKE ZNEN002-ZCOUNT, "カウンタ
END OF ST_CUR_STOCK.
DATA:
I_CUR_STOCK LIKE TABLE OF ST_CUR_STOCK.

*-- 当月入庫内部テーブル
DATA:
ST_CUR_INSTOCK LIKE ST_CUR_STOCK,
I_CUR_INSTOCK  LIKE TABLE OF ST_CUR_INSTOCK.

*-- 当月出庫内部テーブル
DATA:
ST_CUR_OUTSTOCK LIKE ST_CUR_STOCK,
I_CUR_OUTSTOCK  LIKE TABLE OF ST_CUR_OUTSTOCK.

*-- 在庫転送用内部テーブル
DATA:
ST_SEND_STOCK LIKE ST_CUR_STOCK,
I_SEND_STOCK  LIKE TABLE OF ST_SEND_STOCK.

*-- 在庫分割用内部テーブル
DATA:
ST_PART_STOCK LIKE ST_CUR_STOCK,
I_PART_STOCK  LIKE TABLE OF ST_PART_STOCK.

*-- バックアップ用入庫残内部テーブル
DATA:
ST_BACK_STOCK LIKE ST_CUR_STOCK,
I_BACK_STOCK  LIKE TABLE OF ST_BACK_STOCK.

*-- 販売伝票フロー内部テーブル
DATA:
BEGIN OF ST_ZYUTYU_FLOW,
VBELV   LIKE VBFA-VBELV,     "先行販売管理伝票
POSNV   LIKE VBFA-POSNV,     "販売管理伝票前明細
VBTYP_V LIKE VBFA-VBTYP_V,   "先行販売管理伝票カテゴリ
END OF ST_ZYUTYU_FLOW.
DATA:
I_ZYUTYU_FLOW LIKE TABLE OF ST_ZYUTYU_FLOW.

*-- 受注伝票用内部テーブル
DATA:
BEGIN OF ST_ZYUTYU,
VBELN LIKE VBAK-VBELN,     "販売伝票番号
POSNR LIKE VBAP-POSNR,     "販売伝票明細
BSTKD LIKE VBAK-BSTNK,     "得意先発注番号
KUNNR LIKE VBAK-KUNNR,     "得意先コード
VKBUR LIKE VBAK-VKBUR,     "営業所
VKGRP LIKE ZNEN002-VKGRP,  "営業グループ
PERNR LIKE ZNEN002-PERNR,  "担当コード
PSTYV LIKE VBAP-PSTYV,     "明細カテゴリ
END OF ST_ZYUTYU.

*-- エラー出力用内部テーブル
DATA:
BEGIN OF ST_ERR,
MATNR     LIKE ZNEN002-MATNR,  "品目コード
WERKS     LIKE ZNEN002-WERKS,  "プラント
VBELV     LIKE VBFA-VBELV,     "先行販売管理伝票
OUTSU(18) TYPE C,              "出荷数量
INSU(18)  TYPE C,              "入庫数量
END OF ST_ERR.
DATA:
I_ERR LIKE TABLE OF ST_ERR.

*-- カウンタ設定用内部テーブル
DATA:
ST_ZNEN009 LIKE ZNEN009.

DATA:
*-- 販売伝票フロー受注検索用構造
ST_FLOW_SEL LIKE ST_ZYUTYU,
*-- 販売伝票フロー組織取得用構造
ST_FLOW_STR LIKE ST_ZYUTYU.

*-- キー設定用内部テーブル
DATA:
BEGIN OF ST_KEY,
MATNR LIKE ST_CUR_STOCK-MATNR,  "品目コード
WERKS LIKE ST_CUR_STOCK-WERKS,  "プラント
ZZNO  LIKE ST_CUR_STOCK-ZZNO,   "DLINK,購買発注番号
ZZPOS LIKE ST_CUR_STOCK-ZZPOS,  "発注明細
END OF ST_KEY.

*----------------------------------------------------------------------*
*  定数(CONSTANTS)定義
*----------------------------------------------------------------------*
CONSTANTS:
A1F_CNS_PSTYP  TYPE EKPO-PSTYP VALUE '5'.      " 仕入先直送

CONSTANTS:
CNS_PID      TYPE USR05-PARID  VALUE 'BUK'.   "会社コードパラメータID

* 汎用モジュール名
CONSTANTS:
CNS_DATE_TO_PERIOD_CONVERT
TYPE TFDIR-FUNCNAME VALUE 'DATE_TO_PERIOD_CONVERT',
CNS_GETPERIODLIMITS
TYPE TFDIR-FUNCNAME VALUE 'BAPI_COAREA_GETPERIODLIMITS',
CNS_READ_TEXT_INLINE
TYPE TFDIR-FUNCNAME VALUE 'READ_TEXT_INLINE'.

* 不要在庫データ
CONSTANTS:
CNS_351 TYPE MSEG-BWART VALUE '351',
CNS_352 TYPE MSEG-BWART VALUE '352',
CNS_Z   TYPE MSEG-KZZUG VALUE 'Z',
CNS_X   TYPE MSEG-KZZUG VALUE 'X'.


CONSTANTS:
CNS_S(1)        TYPE C              VALUE 'S',    "借方
CNS_H(1)        TYPE C              VALUE 'H',    "貸方
CNS_TYPJ        TYPE VBFA-VBTYP_N   VALUE 'J',    "出荷伝票（フロー）
CNS_TYPR        TYPE VBFA-VBTYP_N   VALUE 'R',    "在庫移動（フロー）
CNS_TYPC        TYPE VBFA-VBTYP_V   VALUE 'C',    "受注（フロー）
CNS_TYPH        TYPE VBFA-VBTYP_V   VALUE 'H',    "返品
CNS_TYPT        TYPE VBFA-VBTYP_N   VALUE 'T',    "受注返品
CNS_VE          TYPE VBPA-PARVW     VALUE 'VE',   "取引先機能
CNS_TAB         TYPE VBAP-PSTYV     VALUE 'TAB'.  "標準明細カテゴリ

* テキスト行からDLINK用発注番号取得
CONSTANTS:
CNS_ID     LIKE THEAD-TDID     VALUE '0002',
CNS_LANG   LIKE THEAD-TDSPRAS  VALUE 'J',
CNS_OBJECT LIKE THEAD-TDOBJECT VALUE 'VBBP',
CNS_INLINE TYPE C              VALUE '9'.

* エラーメッセージ
CONSTANTS:
CNS_00    TYPE SY-MSGID VALUE '00',
CNS_NO    TYPE SY-MSGNO VALUE '208'.

*&---------------------------------------------------------------------*
*& 変数定義
*&---------------------------------------------------------------------*
DATA:
DAT_FIR_DAY    TYPE MKPF-BUDAT,     "入出庫対象期間（月初）
DAT_END_DAY    TYPE MKPF-BUDAT,     "入出庫対象期間（月末）
DAT_ZEN_DAY    TYPE D,              "前月勘定日付（月末）
DAT_CUR_INDEX  TYPE I,              "現在の行数
DAT_DLNUM      LIKE ZNEN002-ZZNO,   "DLINK用発注番号
DAT_KEEP_ZAIKO LIKE ZNEN002-MENGE.  "保存用在庫数

*----------------------------------------------------------------------*
* PARAMETER 定義
*----------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK BLK02 WITH FRAME TITLE TEXT-B02.
* 勘定日付
PARAMETERS KANJYO TYPE SY-DATUM
OBLIGATORY.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN SKIP 1.
* 戻入品対象移動ﾀｲﾌﾟ
SELECT-OPTIONS S_BWART FOR ST_CUR_STOCK-BWART NO INTERVALS.
SELECTION-SCREEN SKIP 1.
SELECT-OPTIONS  :   MATNR  FOR  ZNEN002-MATNR,
WERKS  FOR  ZNEN002-WERKS.
SELECTION-SCREEN END   OF BLOCK BLK02.

* 明細カテゴリ
PARAMETERS P_PSTYP TYPE EKPO-PSTYP DEFAULT A1F_CNS_PSTYP.

* 在庫移動データ判別条件1
SELECTION-SCREEN BEGIN OF BLOCK BLK21 WITH FRAME
TITLE TEXT-B21
NO INTERVALS.
SELECT-OPTIONS: S_IDIT1 FOR MSEG-BWART NO-EXTENSION,
S_IDIK1 FOR MSEG-KZBEW NO-EXTENSION,
S_IDSK1 FOR MSEG-KZVBR NO-EXTENSION,
S_IDNK1 FOR MSEG-KZZUG NO-EXTENSION,
S_IDTK1 FOR MSEG-SOBKZ NO-EXTENSION.
SELECTION-SCREEN END OF BLOCK BLK21.
* 在庫移動データ判別条件2
SELECTION-SCREEN BEGIN OF BLOCK BLK22 WITH FRAME
TITLE TEXT-B22
NO INTERVALS.
SELECT-OPTIONS: S_IDIT2 FOR MSEG-BWART NO-EXTENSION,
S_IDIK2 FOR MSEG-KZBEW NO-EXTENSION,
S_IDSK2 FOR MSEG-KZVBR NO-EXTENSION,
S_IDNK2 FOR MSEG-KZZUG NO-EXTENSION,
S_IDTK2 FOR MSEG-SOBKZ NO-EXTENSION.
SELECTION-SCREEN END OF BLOCK BLK22.

* 対象除外条件
* 入庫データ除外条件
SELECTION-SCREEN BEGIN OF BLOCK BLK03 WITH FRAME
TITLE TEXT-B03
NO INTERVALS.
SELECT-OPTIONS: S_INIT1 FOR MSEG-BWART NO-EXTENSION,
S_INIK1 FOR MSEG-KZBEW NO-EXTENSION,
S_INSK1 FOR MSEG-KZVBR NO-EXTENSION,
S_INNK1 FOR MSEG-KZZUG NO-EXTENSION,
S_INTK1 FOR MSEG-SOBKZ NO-EXTENSION.
SELECTION-SCREEN END OF BLOCK BLK03.

SELECTION-SCREEN BEGIN OF BLOCK BLK04 WITH FRAME
TITLE TEXT-B04
NO INTERVALS.
SELECT-OPTIONS: S_INIT2 FOR MSEG-BWART NO-EXTENSION,
S_INIK2 FOR MSEG-KZBEW NO-EXTENSION,
S_INSK2 FOR MSEG-KZVBR NO-EXTENSION,
S_INNK2 FOR MSEG-KZZUG NO-EXTENSION,
S_INTK2 FOR MSEG-SOBKZ NO-EXTENSION.
SELECTION-SCREEN END OF BLOCK BLK04.

SELECTION-SCREEN BEGIN OF BLOCK BLK05 WITH FRAME
TITLE TEXT-B05
NO INTERVALS.
SELECT-OPTIONS: S_INIT3 FOR MSEG-BWART NO-EXTENSION,
S_INIK3 FOR MSEG-KZBEW NO-EXTENSION,
S_INSK3 FOR MSEG-KZVBR NO-EXTENSION,
S_INNK3 FOR MSEG-KZZUG NO-EXTENSION,
S_INTK3 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK05.

SELECTION-SCREEN BEGIN OF BLOCK BLK06 WITH FRAME
TITLE TEXT-B06
NO INTERVALS.
SELECT-OPTIONS: S_INIT4 FOR MSEG-BWART NO-EXTENSION,
S_INIK4 FOR MSEG-KZBEW NO-EXTENSION,
S_INSK4 FOR MSEG-KZVBR NO-EXTENSION,
S_INNK4 FOR MSEG-KZZUG NO-EXTENSION,
S_INTK4 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK06.

SELECTION-SCREEN BEGIN OF BLOCK BLK07 WITH FRAME
TITLE TEXT-B07
NO INTERVALS.
SELECT-OPTIONS: S_INIT5 FOR MSEG-BWART NO-EXTENSION,
S_INIK5 FOR MSEG-KZBEW NO-EXTENSION,
S_INSK5 FOR MSEG-KZVBR NO-EXTENSION,
S_INNK5 FOR MSEG-KZZUG NO-EXTENSION,
S_INTK5 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK07.

SELECTION-SCREEN BEGIN OF BLOCK BLK08 WITH FRAME
TITLE TEXT-B08
NO INTERVALS.
SELECT-OPTIONS: S_INIT6 FOR MSEG-BWART NO-EXTENSION,
S_INIK6 FOR MSEG-KZBEW NO-EXTENSION,
S_INSK6 FOR MSEG-KZVBR NO-EXTENSION,
S_INNK6 FOR MSEG-KZZUG NO-EXTENSION,
S_INTK6 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK08.

SELECTION-SCREEN BEGIN OF BLOCK BLK09 WITH FRAME
TITLE TEXT-B09
NO INTERVALS.
SELECT-OPTIONS: S_INIT7 FOR MSEG-BWART NO-EXTENSION,
S_INIK7 FOR MSEG-KZBEW NO-EXTENSION,
S_INSK7 FOR MSEG-KZVBR NO-EXTENSION,
S_INNK7 FOR MSEG-KZZUG NO-EXTENSION,
S_INTK7 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK09.

SELECTION-SCREEN BEGIN OF BLOCK BLK10 WITH FRAME
TITLE TEXT-B10
NO INTERVALS.
SELECT-OPTIONS: S_INIT8 FOR MSEG-BWART NO-EXTENSION,
S_INIK8 FOR MSEG-KZBEW NO-EXTENSION,
S_INSK8 FOR MSEG-KZVBR NO-EXTENSION,
S_INNK8 FOR MSEG-KZZUG NO-EXTENSION,
S_INTK8 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK10.

SELECTION-SCREEN BEGIN OF BLOCK BLK11 WITH FRAME
TITLE TEXT-B11
NO INTERVALS.
SELECT-OPTIONS: S_INIT9 FOR MSEG-BWART NO-EXTENSION,
S_INIK9 FOR MSEG-KZBEW NO-EXTENSION,
S_INSK9 FOR MSEG-KZVBR NO-EXTENSION,
S_INNK9 FOR MSEG-KZZUG NO-EXTENSION,
S_INTK9 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK11.

* 出庫データ除外条件
SELECTION-SCREEN BEGIN OF BLOCK BLK12 WITH FRAME
TITLE TEXT-B12
NO INTERVALS.
SELECT-OPTIONS: S_OUTIT1 FOR MSEG-BWART NO-EXTENSION,
S_OUTIK1 FOR MSEG-KZBEW NO-EXTENSION,
S_OUTSK1 FOR MSEG-KZVBR NO-EXTENSION,
S_OUTNK1 FOR MSEG-KZZUG NO-EXTENSION,
S_OUTTK1 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK12.

SELECTION-SCREEN BEGIN OF BLOCK BLK13 WITH FRAME
TITLE TEXT-B13
NO INTERVALS.
SELECT-OPTIONS: S_OUTIT2 FOR MSEG-BWART NO-EXTENSION,
S_OUTIK2 FOR MSEG-KZBEW NO-EXTENSION,
S_OUTSK2 FOR MSEG-KZVBR NO-EXTENSION,
S_OUTNK2 FOR MSEG-KZZUG NO-EXTENSION,
S_OUTTK2 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK13.

SELECTION-SCREEN BEGIN OF BLOCK BLK14 WITH FRAME
TITLE TEXT-B14
NO INTERVALS.
SELECT-OPTIONS: S_OUTIT3 FOR MSEG-BWART NO-EXTENSION,
S_OUTIK3 FOR MSEG-KZBEW NO-EXTENSION,
S_OUTSK3 FOR MSEG-KZVBR NO-EXTENSION,
S_OUTNK3 FOR MSEG-KZZUG NO-EXTENSION,
S_OUTTK3 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK14.

SELECTION-SCREEN BEGIN OF BLOCK BLK15 WITH FRAME
TITLE TEXT-B15
NO INTERVALS.
SELECT-OPTIONS: S_OUTIT4 FOR MSEG-BWART NO-EXTENSION,
S_OUTIK4 FOR MSEG-KZBEW NO-EXTENSION,
S_OUTSK4 FOR MSEG-KZVBR NO-EXTENSION,
S_OUTNK4 FOR MSEG-KZZUG NO-EXTENSION,
S_OUTTK4 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK15.

SELECTION-SCREEN BEGIN OF BLOCK BLK16 WITH FRAME
TITLE TEXT-B16
NO INTERVALS.
SELECT-OPTIONS: S_OUTIT5 FOR MSEG-BWART NO-EXTENSION,
S_OUTIK5 FOR MSEG-KZBEW NO-EXTENSION,
S_OUTSK5 FOR MSEG-KZVBR NO-EXTENSION,
S_OUTNK5 FOR MSEG-KZZUG NO-EXTENSION,
S_OUTTK5 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK16.

SELECTION-SCREEN BEGIN OF BLOCK BLK17 WITH FRAME
TITLE TEXT-B17
NO INTERVALS.
SELECT-OPTIONS: S_OUTIT6 FOR MSEG-BWART NO-EXTENSION,
S_OUTIK6 FOR MSEG-KZBEW NO-EXTENSION,
S_OUTSK6 FOR MSEG-KZVBR NO-EXTENSION,
S_OUTNK6 FOR MSEG-KZZUG NO-EXTENSION,
S_OUTTK6 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK17.

SELECTION-SCREEN BEGIN OF BLOCK BLK18 WITH FRAME
TITLE TEXT-B18
NO INTERVALS.
SELECT-OPTIONS: S_OUTIT7 FOR MSEG-BWART NO-EXTENSION,
S_OUTIK7 FOR MSEG-KZBEW NO-EXTENSION,
S_OUTSK7 FOR MSEG-KZVBR NO-EXTENSION,
S_OUTNK7 FOR MSEG-KZZUG NO-EXTENSION,
S_OUTTK7 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK18.

SELECTION-SCREEN BEGIN OF BLOCK BLK19 WITH FRAME
TITLE TEXT-B19
NO INTERVALS.
SELECT-OPTIONS: S_OUTIT8 FOR MSEG-BWART NO-EXTENSION,
S_OUTIK8 FOR MSEG-KZBEW NO-EXTENSION,
S_OUTSK8 FOR MSEG-KZVBR NO-EXTENSION,
S_OUTNK8 FOR MSEG-KZZUG NO-EXTENSION,
S_OUTTK8 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK19.

SELECTION-SCREEN BEGIN OF BLOCK BLK20 WITH FRAME
TITLE TEXT-B20
NO INTERVALS.
SELECT-OPTIONS: S_OUTIT9 FOR MSEG-BWART NO-EXTENSION,
S_OUTIK9 FOR MSEG-KZBEW NO-EXTENSION,
S_OUTSK9 FOR MSEG-KZVBR NO-EXTENSION,
S_OUTNK9 FOR MSEG-KZZUG NO-EXTENSION,
S_OUTTK9 FOR MSEG-SOBKZ NO-EXTENSION.

SELECTION-SCREEN END OF BLOCK BLK20.

*----------------------------------------------------------------------*
* Initialization
*----------------------------------------------------------------------*
INITIALIZATION.


*----------------------------------------------------------------------*
* Start Of Selection
*----------------------------------------------------------------------*
START-OF-SELECTION.

* 処理対象期間取得
PERFORM INPUT_CHK.

* 在庫算出処理
PERFORM GET_ZAIKO.
* データ設定
PERFORM SET_OUTPUT.
* テーブル更新処理
PERFORM SET_TABLE.

*----------------------------------------------------------------------*
* End Of Selection
*----------------------------------------------------------------------*
END-OF-SELECTION.

*&---------------------------------------------------------------------*
*&      Form  INPUT_CHK
*&---------------------------------------------------------------------*
*       処理対象期間取得
*----------------------------------------------------------------------*
FORM INPUT_CHK.
* ローカルデータ宣言
DATA:
LW_BUKRS TYPE T001-BUKRS,
LW_KOKRS TYPE TKA02-KOKRS,
LW_PERIV TYPE T001-PERIV,
LW_GJAHR TYPE T009B-BDATJ,
LW_POPER TYPE BAPI0002_4-FISCAL_PERIOD.

* 会社コードの取得
GET PARAMETER ID CNS_PID FIELD LW_BUKRS.

* 会計年度バリアントの取得
PERFORM GET_PERIV USING    LW_BUKRS
CHANGING LW_PERIV.


* 管理領域取得
PERFORM GET_KOKRS USING    LW_BUKRS
CHANGING LW_KOKRS.


* 会計年度、会計期間の取得
PERFORM GET_PERIOD USING    LW_PERIV
CHANGING LW_GJAHR
LW_POPER.

* 対象期間の取得
PERFORM GET_DAY USING LW_KOKRS
LW_POPER
LW_GJAHR.

* 前月末日取得
DAT_ZEN_DAY = DAT_FIR_DAY - 1.

ENDFORM.                    " INPUT_CHK
*&---------------------------------------------------------------------*
*&      Form  GET_PERIV
*&---------------------------------------------------------------------*
*       会計年度バリアントの取得
*----------------------------------------------------------------------*
*      -->I_BUKRS  会社コード
*      <--O_PERIV  会計年度バリアント
*----------------------------------------------------------------------*
FORM GET_PERIV USING    I_BUKRS TYPE T001-BUKRS
CHANGING O_PERIV TYPE T001-PERIV.

SELECT SINGLE PERIV
INTO   (O_PERIV)
FROM   T001
WHERE BUKRS = I_BUKRS.

ENDFORM.                    " GET_PERIV
*&---------------------------------------------------------------------*
*&      Form  GET_KOKRS
*&---------------------------------------------------------------------*
*       管理領域の取得
*----------------------------------------------------------------------*
*      -->I_BUKRS  会社コード
*      <--O_KOKRS  管理領域
*----------------------------------------------------------------------*
FORM GET_KOKRS USING    I_BUKRS TYPE T001-BUKRS
CHANGING O_KOKRS TYPE TKA02-KOKRS.

SELECT SINGLE KOKRS
INTO (O_KOKRS)
FROM TKA02
WHERE BUKRS = I_BUKRS
AND GSBER = SPACE.

ENDFORM.                    " GET_KOKRS
*&---------------------------------------------------------------------*
*&      Form  GET_GJAHR_MONAT
*&---------------------------------------------------------------------*
*       会計年度、期間の取得
*----------------------------------------------------------------------*
*      -->I_PERIV  会計年度バリアント
*      <--O_GJAHR  会計年度
*      <--O_POPER  会計期間
*----------------------------------------------------------------------*
FORM GET_PERIOD USING    I_PERIV TYPE T001-PERIV
CHANGING O_GJAHR TYPE T009B-BDATJ
O_POPER TYPE BAPI0002_4-FISCAL_PERIOD.

* ローカルデータ宣言
DATA:LW_BUPER TYPE T009B-POPER.

CALL FUNCTION CNS_DATE_TO_PERIOD_CONVERT
EXPORTING
I_DATE               = KANJYO      "勘定日付
*   I_MONMIT             = 00
I_PERIV              = I_PERIV
IMPORTING
E_BUPER              = LW_BUPER
E_GJAHR              = O_GJAHR.

IF SY-SUBRC = 0.
O_POPER = LW_BUPER.
ENDIF.

ENDFORM.                    " GET_GJAHR_MONAT
*&---------------------------------------------------------------------*
*&      Form  GET_DAY
*&---------------------------------------------------------------------*
*       月初月末日取得
*----------------------------------------------------------------------*
*      -->I_KOKRS  管理領域
*      -->I_POPER  会計期間
*      -->I_GJAHR  会計年度
*----------------------------------------------------------------------*
FORM GET_DAY USING    I_KOKRS TYPE TKA02-KOKRS
I_POPER TYPE BAPI0002_4-FISCAL_PERIOD
I_GJAHR TYPE T009B-BDATJ.

CALL FUNCTION CNS_GETPERIODLIMITS
EXPORTING
CONTROLLINGAREAID         = I_KOKRS
FISCAL_PERIOD             = I_POPER
FISCAL_YEAR               = I_GJAHR
IMPORTING
FIRST_DAY_OF_PERIOD       = DAT_FIR_DAY       "月初日付
LAST_DAY_OF_PERIOD        = DAT_END_DAY       "月末日付
*   LAST_NORMAL_PERIOD        =
*   RETURN                    =
.

ENDFORM.                    " GET_DAY
*&---------------------------------------------------------------------*
*&      Form  GET_ZAIKO
*&---------------------------------------------------------------------*
*       在庫算出処理
*----------------------------------------------------------------------*
FORM GET_ZAIKO.

* 当月入庫残算出処理
PERFORM GET_CUR_NYUKO.
* 当月出庫算出処理
PERFORM GET_CUR_SYUKKO.
* 当月在庫算出処理
PERFORM GET_CUR_ZAIKO.

ENDFORM.                    " GET_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  GET_CUR_NYUKO
*&---------------------------------------------------------------------*
*       当月入庫残算出処理
*----------------------------------------------------------------------*
FORM GET_CUR_NYUKO.

*-- 当月入庫一時格納用内部テーブル
DATA:
I_DUMMY_INSTOCK LIKE TABLE OF ST_CUR_STOCK.

*-- 前月残入庫の検索
PERFORM GET_ZNEN002.

*-- 当月入庫の検索
PERFORM GET_CUR_INSTOCK.

* 在庫・入庫以外データの削除
IF P_PSTYP <> SPACE.
*   指定した明細カテゴリの削除
DELETE I_CUR_INSTOCK WHERE PSTYP = P_PSTYP.  " 明細カテゴリ
ENDIF.


* 非在庫、在庫の論理的増減データなどの削除
DO 9 TIMES.
PERFORM DEL_DATA USING CNS_S
SY-INDEX.
ENDDO.

* 紐付け判定処理（入庫）
PERFORM INCONNECT_CHK.
* 在庫転送設定処理
PERFORM GET_SEND_STOCK.

*-- 前月残在庫内部テーブル→当月入庫残内部テーブル設定
PERFORM SET_ZENDATA.

* キー項目ごとに在庫数量を合算
PERFORM SUM_ZAIKO TABLES I_DUMMY_INSTOCK.

*-- 当月入庫一時格納内部テーブルのデータを当月入庫残内部テーブルに格納
APPEND LINES OF I_DUMMY_INSTOCK TO I_CUR_STOCK.
*-- 当月入庫内部テーブルのソート
SORT I_CUR_STOCK BY MATNR WERKS KUNNR VKBUR VKGRP
PERNR ZZNO ZZPOS BUDAT.
*-- 前月在庫残内部テーブル及び当月入庫内部テーブルの削除
REFRESH:
I_ZEN_STOCK,
I_CUR_INSTOCK.

ENDFORM.                    " GET_CUR_NYUKO
*&---------------------------------------------------------------------*
*&      Form  GET_ZNEN002
*&---------------------------------------------------------------------*
*       前月在庫データの取得
*----------------------------------------------------------------------*
FORM GET_ZNEN002.
REFRESH:
I_ZEN_STOCK.

SELECT *
INTO TABLE I_ZEN_STOCK
FROM ZNEN002
WHERE ZANDT = DAT_ZEN_DAY
AND MATNR IN MATNR
AND WERKS IN WERKS
AND MENGE <> 0
.
*-- 前月残内部テーブルのソート
SORT I_ZEN_STOCK BY MATNR WERKS KUNNR VKBUR VKGRP
PERNR ZZNO ZZPOS NYUKO_DAT.

ENDFORM.                    " GET_ZNEN002
*&---------------------------------------------------------------------*
*&      Form  GET_CUR_INSTOCK
*&---------------------------------------------------------------------*
*       当月入庫ーデータの取得
*----------------------------------------------------------------------*
FORM GET_CUR_INSTOCK.

REFRESH:
I_CUR_INSTOCK.

SELECT MSEG~MATNR      "品目コード
MSEG~WERKS      "プラント
MKPF~MBLNR      "入出庫伝票番号
MSEG~ZEILE      "入出庫伝票明細番号
MSEG~KDAUF      "受注伝票番号
MSEG~KDPOS      "受注明細番号
MSEG~EBELN      "購買発注番号
MSEG~EBELP      "購買伝票明細番号
MSEG~MENGE      "数量
MKPF~BUDAT      "転記日付
MSEG~BWART      "移動タイプ
MSEG~UMWRK      "入庫/出庫プラント
EKKO~VERKF      "仕入先営業担当者
EKKO~BSART      "購買伝票タイプ
EKKO~EKGRP      "購買グループ
EKPO~IDNLF      "仕入先の品目コード
MSEG~SOBKZ      "特殊在庫区分
EKPO~NETPR      "購買伝票における正味価格 (伝票通貨)
EKPO~PEINH      "価格単位
MSEG~DMBTR      "国内通貨額
MSEG~UMSOK      "在庫転送の特殊在庫区分
MKPF~XBLNR      "参照伝票番号
MSEG~UMMAT      "入庫/出庫品目
EKPO~PSTYP      " 明細カテゴリ
MSEG~LBKUM      " 転記前の評価在庫合計
MSEG~SALK3      " 転記前の評価在庫合計金額
MSEG~WAERS      " 通貨コード
MSEG~KZBEW      "移動区分
MSEG~KZZUG      "入庫区分
MSEG~KZVBR      "消費
INTO CORRESPONDING FIELDS OF TABLE I_CUR_INSTOCK
FROM MKPF
INNER JOIN MSEG
ON MKPF~MBLNR = MSEG~MBLNR
LEFT JOIN EKKO
ON MSEG~EBELN = EKKO~EBELN
LEFT JOIN EKPO
ON MSEG~EBELN = EKPO~EBELN AND
MSEG~EBELP = EKPO~EBELP
WHERE MKPF~BUDAT BETWEEN DAT_FIR_DAY AND DAT_END_DAY AND
MSEG~SHKZG = CNS_S
AND MSEG~MATNR IN MATNR
AND MSEG~WERKS IN WERKS.

ENDFORM.                    " GET_CUR_INSTOCK
*&---------------------------------------------------------------------*
*       非在庫・論理的増減データ削除処理
*----------------------------------------------------------------------*
*      -->I_TYPE   データ判別フラグ　S：入庫/H：出庫
*      -->I_INDEX  削除条件番号
*----------------------------------------------------------------------*
FORM DEL_DATA USING I_TYPE  TYPE C
I_INDEX TYPE SY-INDEX.

CASE I_TYPE.
* 入庫データ
WHEN CNS_S.
CASE I_INDEX.
WHEN 1.
* 入庫除外対象条件1
IF NOT ( S_INIT1 IS INITIAL AND
S_INIK1 IS INITIAL AND
S_INSK1 IS INITIAL AND
S_INNK1 IS INITIAL AND
S_INTK1 IS INITIAL ).
DELETE I_CUR_INSTOCK
WHERE BWART IN S_INIT1 AND
KZBEW IN S_INIK1 AND
KZVBR IN S_INSK1 AND
KZZUG IN S_INNK1 AND
SOBKZ IN S_INTK1.
ENDIF.

WHEN 2.
* 入庫除外対象条件2
IF NOT ( S_INIT2 IS INITIAL AND
S_INIK2 IS INITIAL AND
S_INSK2 IS INITIAL AND
S_INNK2 IS INITIAL AND
S_INTK2 IS INITIAL ).
DELETE I_CUR_INSTOCK
WHERE BWART IN S_INIT2 AND
KZBEW IN S_INIK2 AND
KZVBR IN S_INSK2 AND
KZZUG IN S_INNK2 AND
SOBKZ IN S_INTK2.
ENDIF.

WHEN 3.
* 入庫除外対象条件3
IF NOT ( S_INIT3 IS INITIAL AND
S_INIK3 IS INITIAL AND
S_INSK3 IS INITIAL AND
S_INNK3 IS INITIAL AND
S_INTK3 IS INITIAL ).
DELETE I_CUR_INSTOCK
WHERE BWART IN S_INIT3 AND
KZBEW IN S_INIK3 AND
KZVBR IN S_INSK3 AND
KZZUG IN S_INNK3 AND
SOBKZ IN S_INTK3.
ENDIF.

WHEN 4.
* 入庫除外対象条件4
IF NOT ( S_INIT4 IS INITIAL AND
S_INIK4 IS INITIAL AND
S_INSK4 IS INITIAL AND
S_INNK4 IS INITIAL AND
S_INTK4 IS INITIAL ).
DELETE I_CUR_INSTOCK
WHERE BWART IN S_INIT4 AND
KZBEW IN S_INIK4 AND
KZVBR IN S_INSK4 AND
KZZUG IN S_INNK4 AND
SOBKZ IN S_INTK4.
ENDIF.
WHEN 5.
* 入庫除外対象条件5
IF NOT ( S_INIT5 IS INITIAL AND
S_INIK5 IS INITIAL AND
S_INSK5 IS INITIAL AND
S_INNK5 IS INITIAL AND
S_INTK5 IS INITIAL ).
DELETE I_CUR_INSTOCK
WHERE BWART IN S_INIT5 AND
KZBEW IN S_INIK5 AND
KZVBR IN S_INSK5 AND
KZZUG IN S_INNK5 AND
SOBKZ IN S_INTK5.
ENDIF.
WHEN 6.
* 入庫除外対象条件6
IF NOT ( S_INIT6 IS INITIAL AND
S_INIK6 IS INITIAL AND
S_INSK6 IS INITIAL AND
S_INNK6 IS INITIAL AND
S_INTK6 IS INITIAL ).
DELETE I_CUR_INSTOCK
WHERE BWART IN S_INIT6 AND
KZBEW IN S_INIK6 AND
KZVBR IN S_INSK6 AND
KZZUG IN S_INNK6 AND
SOBKZ IN S_INTK6.
ENDIF.
WHEN 7.
* 入庫除外対象条件7
IF NOT ( S_INIT7 IS INITIAL AND
S_INIK7 IS INITIAL AND
S_INSK7 IS INITIAL AND
S_INNK7 IS INITIAL AND
S_INTK7 IS INITIAL ).
DELETE I_CUR_INSTOCK
WHERE BWART IN S_INIT7 AND
KZBEW IN S_INIK7 AND
KZVBR IN S_INSK7 AND
KZZUG IN S_INNK7 AND
SOBKZ IN S_INTK7.
ENDIF.
WHEN 8.
* 入庫除外対象条件8
IF NOT ( S_INIT8 IS INITIAL AND
S_INIK8 IS INITIAL AND
S_INSK8 IS INITIAL AND
S_INNK8 IS INITIAL AND
S_INTK8 IS INITIAL ).
DELETE I_CUR_INSTOCK
WHERE BWART IN S_INIT8 AND
KZBEW IN S_INIK8 AND
KZVBR IN S_INSK8 AND
KZZUG IN S_INNK8 AND
SOBKZ IN S_INTK8.
ENDIF.
WHEN 9.
* 入庫除外対象条件9
IF NOT ( S_INIT9 IS INITIAL AND
S_INIK9 IS INITIAL AND
S_INSK9 IS INITIAL AND
S_INNK9 IS INITIAL AND
S_INTK9 IS INITIAL ).
DELETE I_CUR_INSTOCK
WHERE BWART IN S_INIT9 AND
KZBEW IN S_INIK9 AND
KZVBR IN S_INSK9 AND
KZZUG IN S_INNK9 AND
SOBKZ IN S_INTK9.
ENDIF.
ENDCASE.
WHEN CNS_H.
* 出庫データ
CASE I_INDEX.
WHEN 1.
* 出庫除外対象条件1
IF NOT ( S_OUTIT1 IS INITIAL AND
S_OUTIK1 IS INITIAL AND
S_OUTSK1 IS INITIAL AND
S_OUTNK1 IS INITIAL AND
S_OUTTK1 IS INITIAL ).
DELETE I_CUR_OUTSTOCK
WHERE BWART IN S_OUTIT1 AND
KZBEW IN S_OUTIK1 AND
KZVBR IN S_OUTSK1 AND
KZZUG IN S_OUTNK1 AND
SOBKZ IN S_OUTTK1.
ENDIF.
WHEN 2.
* 出庫除外対象条件2
IF NOT ( S_OUTIT2 IS INITIAL AND
S_OUTIK2 IS INITIAL AND
S_OUTSK2 IS INITIAL AND
S_OUTNK2 IS INITIAL AND
S_OUTTK2 IS INITIAL ).
DELETE I_CUR_OUTSTOCK
WHERE BWART IN S_OUTIT2 AND
KZBEW IN S_OUTIK2 AND
KZVBR IN S_OUTSK2 AND
KZZUG IN S_OUTNK2 AND
SOBKZ IN S_OUTTK2.
ENDIF.
WHEN 3.
* 出庫除外対象条件3
IF NOT ( S_OUTIT3 IS INITIAL AND
S_OUTIK3 IS INITIAL AND
S_OUTSK3 IS INITIAL AND
S_OUTNK3 IS INITIAL AND
S_OUTTK3 IS INITIAL ).
DELETE I_CUR_OUTSTOCK
WHERE BWART IN S_OUTIT3 AND
KZBEW IN S_OUTIK3 AND
KZVBR IN S_OUTSK3 AND
KZZUG IN S_OUTNK3 AND
SOBKZ IN S_OUTTK3.
ENDIF.
WHEN 4.
* 出庫除外対象条件4
IF NOT ( S_OUTIT4 IS INITIAL AND
S_OUTIK4 IS INITIAL AND
S_OUTSK4 IS INITIAL AND
S_OUTNK4 IS INITIAL AND
S_OUTTK4 IS INITIAL ).
DELETE I_CUR_OUTSTOCK
WHERE BWART IN S_OUTIT4 AND
KZBEW IN S_OUTIK4 AND
KZVBR IN S_OUTSK4 AND
KZZUG IN S_OUTNK4 AND
SOBKZ IN S_OUTTK4.
ENDIF.
WHEN 5.
* 出庫除外対象条件5
IF NOT ( S_OUTIT5 IS INITIAL AND
S_OUTIK5 IS INITIAL AND
S_OUTSK5 IS INITIAL AND
S_OUTNK5 IS INITIAL AND
S_OUTTK5 IS INITIAL ).
DELETE I_CUR_OUTSTOCK
WHERE BWART IN S_OUTIT5 AND
KZBEW IN S_OUTIK5 AND
KZVBR IN S_OUTSK5 AND
KZZUG IN S_OUTNK5 AND
SOBKZ IN S_OUTTK5.
ENDIF.
WHEN 6.
* 出庫除外対象条件6
IF NOT ( S_OUTIT6 IS INITIAL AND
S_OUTIK6 IS INITIAL AND
S_OUTSK6 IS INITIAL AND
S_OUTNK6 IS INITIAL AND
S_OUTTK6 IS INITIAL ).
DELETE I_CUR_OUTSTOCK
WHERE BWART IN S_OUTIT6 AND
KZBEW IN S_OUTIK6 AND
KZVBR IN S_OUTSK6 AND
KZZUG IN S_OUTNK6 AND
SOBKZ IN S_OUTTK6.
ENDIF.
WHEN 7.
* 出庫除外対象条件7
IF NOT ( S_OUTIT7 IS INITIAL AND
S_OUTIK7 IS INITIAL AND
S_OUTSK7 IS INITIAL AND
S_OUTNK7 IS INITIAL AND
S_OUTTK7 IS INITIAL ).
DELETE I_CUR_OUTSTOCK
WHERE BWART IN S_OUTIT7 AND
KZBEW IN S_OUTIK7 AND
KZVBR IN S_OUTSK7 AND
KZZUG IN S_OUTNK7 AND
SOBKZ IN S_OUTTK7.
ENDIF.
WHEN 8.
* 出庫除外対象条件8
IF NOT ( S_OUTIT8 IS INITIAL AND
S_OUTIK8 IS INITIAL AND
S_OUTSK8 IS INITIAL AND
S_OUTNK8 IS INITIAL AND
S_OUTTK8 IS INITIAL ).
DELETE I_CUR_OUTSTOCK
WHERE BWART IN S_OUTIT8 AND
KZBEW IN S_OUTIK8 AND
KZVBR IN S_OUTSK8 AND
KZZUG IN S_OUTNK8 AND
SOBKZ IN S_OUTTK8.
ENDIF.
WHEN 9.
* 出庫除外対象条件9
IF NOT ( S_OUTIT9 IS INITIAL AND
S_OUTIK9 IS INITIAL AND
S_OUTSK9 IS INITIAL AND
S_OUTNK9 IS INITIAL AND
S_OUTTK9 IS INITIAL ).
DELETE I_CUR_OUTSTOCK
WHERE BWART IN S_OUTIT9 AND
KZBEW IN S_OUTIK9 AND
KZVBR IN S_OUTSK9 AND
KZZUG IN S_OUTNK9 AND
SOBKZ IN S_OUTTK9.
ENDIF.
ENDCASE.
ENDCASE.

ENDFORM.                    " DEL_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_CUR_SYUKKO
*&---------------------------------------------------------------------*
*       当月出庫算出処理
*----------------------------------------------------------------------*
FORM GET_CUR_SYUKKO.

DATA:
I_DUMMY_OUTSTOCK  LIKE TABLE OF ST_CUR_STOCK.

*-- 当月出庫の検索
PERFORM GET_OUTSTOCK.

* 物理的出庫データ以外の削除
DO 9 TIMES.
PERFORM DEL_DATA USING CNS_H
SY-INDEX.
ENDDO.

* 購買伝票番号、明細の取得
PERFORM A1F_GET_EBELN.

*-- 紐付け判定処理（出庫）
PERFORM OUTCONNECT_CHK.

*-- 当月出庫内部テーブルのソート
SORT I_CUR_OUTSTOCK BY MATNR WERKS KUNNR VKBUR VKGRP
PERNR ZZNO ZZPOS BUDAT.

*-- キー項目での加算処理
PERFORM SUM_SYUKKO TABLES I_DUMMY_OUTSTOCK.

REFRESH:
I_CUR_OUTSTOCK.
I_CUR_OUTSTOCK = I_DUMMY_OUTSTOCK.

ENDFORM.                    " GET_CUR_SYUKKO
*&---------------------------------------------------------------------*
*&      Form  get_outstock
*&---------------------------------------------------------------------*
*       当月出庫データの取得
*----------------------------------------------------------------------*
FORM GET_OUTSTOCK.

REFRESH:
I_CUR_OUTSTOCK.
SELECT MSEG~MATNR      "品目コード
MSEG~WERKS          "プラント
MKPF~MBLNR          "入出庫伝票番号
MSEG~ZEILE          "入出庫伝票明細番号
MSEG~KDAUF          "受注伝票番号
MSEG~KDPOS          "受注明細番号
MSEG~EBELN          "購買発注番号
MSEG~EBELP          "購買伝票明細番号
MSEG~MENGE          "数量
MKPF~BUDAT          "転記日付
MSEG~BWART          "移動タイプ
MSEG~UMWRK          "入庫/出庫プラント
EKKO~VERKF          "仕入先営業担当者
EKKO~BSART          "購買伝票タイプ
EKKO~EKGRP          "購買グループ
EKPO~IDNLF          "仕入先の品目コード
MSEG~SOBKZ          "特殊在庫区分
EKPO~NETPR          "購買伝票における正味価格 (伝票通貨)
EKPO~PEINH          "価格単位
MSEG~DMBTR          "国内通貨額
MSEG~UMSOK          "在庫転送の特殊在庫区分
MKPF~XBLNR          "参照伝票番号
MSEG~UMMAT          "入庫/出庫品目
EKPO~PSTYP          " 明細カテゴリ
MSEG~LBKUM          " 転記前の評価在庫合計
MSEG~SALK3          " 転記前の評価在庫合計金額
MSEG~WAERS          " 通貨コード
MSEG~KZBEW          "移動区分
MSEG~KZZUG          "入庫区分
MSEG~KZVBR          "消費
INTO CORRESPONDING FIELDS OF TABLE I_CUR_OUTSTOCK
FROM MKPF
INNER JOIN MSEG
ON MKPF~MBLNR = MSEG~MBLNR
LEFT JOIN EKKO
ON MSEG~EBELN = EKKO~EBELN
LEFT JOIN EKPO
ON MSEG~EBELN = EKPO~EBELN AND
MSEG~EBELP = EKPO~EBELP
WHERE MKPF~BUDAT BETWEEN DAT_FIR_DAY AND DAT_END_DAY AND
MSEG~SHKZG = CNS_H
AND MSEG~MATNR IN MATNR
AND MSEG~WERKS IN WERKS.

ENDFORM.                    " GET_OUTSTOCK
*&---------------------------------------------------------------------*
*&      Form  GET_CUR_ZAIKO
*&---------------------------------------------------------------------*
*       当月在庫算出処理
*----------------------------------------------------------------------*
FORM GET_CUR_ZAIKO.

DATA:
*   単位（品目・プラント）別データ取得用内部テーブル
I_TAN_STOCK LIKE TABLE OF ST_CUR_STOCK,
*   一時格納用内部テーブル
I_DUMMY_STOCK LIKE TABLE OF ST_CUR_STOCK.
*-- 存在単位（品目・プラント）格納用内部テーブル
DATA:
BEGIN OF ST_SEL_STOCK,
MATNR LIKE ST_CUR_STOCK-MATNR,
WERKS LIKE ST_CUR_STOCK-WERKS,
END OF ST_SEL_STOCK.
DATA:
I_SEL_STOCK   LIKE TABLE OF ST_SEL_STOCK,
DAT_NYUKO_SUU LIKE ZNEN002-MENGE,  "入庫数量
DAT_IN_INDEX  TYPE I,              "入庫内部テーブル用行数
DAT_STR_INDEX TYPE I,              "開始行
DAT_END_INDEX TYPE I.              "終了行

*-- エラー内部テーブル、キーのクリア
CLEAR:
ST_ERR,
ST_KEY.
REFRESH:
I_ERR.
*-- 当月在庫算出
DO.
DAT_IN_INDEX = DAT_IN_INDEX + 1.
READ TABLE I_CUR_OUTSTOCK
INTO ST_CUR_OUTSTOCK
INDEX DAT_IN_INDEX.
IF ( SY-SUBRC <> 0 ).
EXIT.
ENDIF.
*   品目・プラント変更時に当月入庫残内部テーブルから
*   単位別内部テーブルに格納

IF NOT ( ST_KEY-MATNR = ST_CUR_OUTSTOCK-MATNR AND
ST_KEY-WERKS = ST_CUR_OUTSTOCK-WERKS ).
*     最初は処理しない
IF NOT ( ST_KEY IS INITIAL ).
READ TABLE I_TAN_STOCK
INTO ST_CUR_STOCK
INDEX 1.
IF ( SY-SUBRC = 0 ).
*         変更後の単位別内部テーブルを一時格納用内部テーブルへ格納
APPEND LINES OF I_TAN_STOCK TO I_DUMMY_STOCK.
ENDIF.
ENDIF.
*     各変数の初期化
CLEAR:
ST_KEY,
ST_CUR_STOCK,
DAT_STR_INDEX,
DAT_END_INDEX.
REFRESH:
I_TAN_STOCK.
*     一行目を読み込む
READ TABLE I_CUR_STOCK
INTO ST_CUR_STOCK
WITH KEY MATNR = ST_CUR_OUTSTOCK-MATNR
WERKS = ST_CUR_OUTSTOCK-WERKS
BINARY SEARCH.
IF ( SY-SUBRC = 0 ).
DAT_STR_INDEX = SY-TABIX.
DAT_END_INDEX = SY-TABIX.
*       品目・プラントが変更になる部分のTABINDEXを取得
DO.
READ TABLE I_CUR_STOCK
INTO ST_CUR_STOCK
INDEX DAT_END_INDEX.
IF ( SY-SUBRC <> 0 OR
( ST_CUR_STOCK-MATNR <> ST_CUR_OUTSTOCK-MATNR OR
ST_CUR_STOCK-WERKS <> ST_CUR_OUTSTOCK-WERKS ) ).
DAT_END_INDEX = DAT_END_INDEX - 1.
EXIT.
ENDIF.
DAT_END_INDEX = DAT_END_INDEX + 1.
ENDDO.
*       存在単位内部テーブルへ品目プラントを格納
CLEAR:
ST_SEL_STOCK.
ST_SEL_STOCK-MATNR = ST_CUR_OUTSTOCK-MATNR.
ST_SEL_STOCK-WERKS = ST_CUR_OUTSTOCK-WERKS.
APPEND ST_SEL_STOCK TO I_SEL_STOCK.
ENDIF.
*     単位別内部テーブルへ格納
IF ( DAT_STR_INDEX <> 0 ).
APPEND LINES OF I_CUR_STOCK
FROM DAT_STR_INDEX
TO DAT_END_INDEX
TO I_TAN_STOCK.
*       入庫年月でソート
SORT I_TAN_STOCK BY BUDAT.
ENDIF.
*     キーの設定
ST_KEY-MATNR = ST_CUR_OUTSTOCK-MATNR.
ST_KEY-WERKS = ST_CUR_OUTSTOCK-WERKS.
ENDIF.
*   当月出庫内部テーブルの数量が0の場合はCONTINUE
CHECK ( ST_CUR_OUTSTOCK-MENGE <> 0 ).
*   バックアップ用内部テーブルに当月入庫残内部テーブルを格納
REFRESH:
I_BACK_STOCK.
I_BACK_STOCK = I_TAN_STOCK.
*   算出前の出庫数量を保存
CLEAR:
DAT_KEEP_ZAIKO.
DAT_KEEP_ZAIKO = ST_CUR_OUTSTOCK-MENGE.
*   当月入庫残テーブルの検索
*   (品目・プラント・発注伝票番号・発注伝票明細)
LOOP AT I_TAN_STOCK INTO ST_CUR_STOCK
WHERE MATNR = ST_CUR_OUTSTOCK-MATNR AND
WERKS = ST_CUR_OUTSTOCK-WERKS AND
ZZNO = ST_CUR_OUTSTOCK-EBELN AND
ZZPOS = ST_CUR_OUTSTOCK-EBELP AND
MENGE > 0.
*     現在行を保存
CLEAR:
DAT_CUR_INDEX.
DAT_CUR_INDEX = SY-TABIX.
IF ( ST_CUR_OUTSTOCK-MENGE > 0 ).
IF ( ST_CUR_STOCK-MENGE >= ST_CUR_OUTSTOCK-MENGE ).
ST_CUR_STOCK-MENGE = ST_CUR_STOCK-MENGE -
ST_CUR_OUTSTOCK-MENGE.
ST_CUR_OUTSTOCK-MENGE = 0.
ELSE.
ST_CUR_OUTSTOCK-MENGE = ST_CUR_OUTSTOCK-MENGE -
ST_CUR_STOCK-MENGE.
ST_CUR_STOCK-MENGE = 0.
ENDIF.
MODIFY I_TAN_STOCK
FROM ST_CUR_STOCK
INDEX DAT_CUR_INDEX
TRANSPORTING MENGE.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
*   当月出庫内部テーブルの数量が0の場合はCONTINUE
CHECK ( ST_CUR_OUTSTOCK-MENGE <> 0 ).
*   当月入庫残テーブルの検索
*   (品目・プラント・発注伝票番号)
LOOP AT I_TAN_STOCK INTO ST_CUR_STOCK
WHERE MATNR = ST_CUR_OUTSTOCK-MATNR AND
WERKS = ST_CUR_OUTSTOCK-WERKS AND
ZZNO = ST_CUR_OUTSTOCK-EBELN AND
MENGE > 0.
*     現在行を保存
CLEAR:
DAT_CUR_INDEX.
DAT_CUR_INDEX = SY-TABIX.
IF ( ST_CUR_OUTSTOCK-MENGE > 0 ).
IF ( ST_CUR_STOCK-MENGE >= ST_CUR_OUTSTOCK-MENGE ).
ST_CUR_STOCK-MENGE = ST_CUR_STOCK-MENGE -
ST_CUR_OUTSTOCK-MENGE.
ST_CUR_OUTSTOCK-MENGE = 0.
ELSE.
ST_CUR_OUTSTOCK-MENGE = ST_CUR_OUTSTOCK-MENGE -
ST_CUR_STOCK-MENGE.
ST_CUR_STOCK-MENGE = 0.
ENDIF.
MODIFY I_TAN_STOCK
FROM ST_CUR_STOCK
INDEX DAT_CUR_INDEX
TRANSPORTING MENGE.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
*   当月出庫内部テーブルの数量が0の場合はCONTINUE
CHECK ( ST_CUR_OUTSTOCK-MENGE <> 0 ).
*   当月入庫残テーブルの検索
*   (品目・プラント・得意先コード)
LOOP AT I_TAN_STOCK INTO ST_CUR_STOCK
WHERE MATNR = ST_CUR_OUTSTOCK-MATNR AND
WERKS = ST_CUR_OUTSTOCK-WERKS AND
KUNNR = ST_CUR_OUTSTOCK-KUNNR AND
MENGE > 0.
*     現在行の保存
CLEAR:
DAT_CUR_INDEX.
DAT_CUR_INDEX = SY-TABIX.
IF ( ST_CUR_OUTSTOCK-MENGE > 0 ).
IF ( ST_CUR_STOCK-MENGE >= ST_CUR_OUTSTOCK-MENGE ).
ST_CUR_STOCK-MENGE = ST_CUR_STOCK-MENGE -
ST_CUR_OUTSTOCK-MENGE.
ST_CUR_OUTSTOCK-MENGE = 0.
ELSE.
ST_CUR_OUTSTOCK-MENGE = ST_CUR_OUTSTOCK-MENGE -
ST_CUR_STOCK-MENGE.
ST_CUR_STOCK-MENGE = 0.
ENDIF.
MODIFY I_TAN_STOCK
FROM ST_CUR_STOCK
INDEX DAT_CUR_INDEX
TRANSPORTING MENGE.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
*   当月出庫内部テーブルの数量が0の場合はCONTINUE
CHECK ( ST_CUR_OUTSTOCK-MENGE <> 0 ).
*   当月入庫残テーブルの検索
*   (品目・プラント・担当コード)
LOOP AT I_TAN_STOCK INTO ST_CUR_STOCK
WHERE MATNR = ST_CUR_OUTSTOCK-MATNR AND
WERKS = ST_CUR_OUTSTOCK-WERKS AND
PERNR = ST_CUR_OUTSTOCK-PERNR AND
MENGE > 0.
*     現在行を保存
CLEAR:
DAT_CUR_INDEX.
DAT_CUR_INDEX = SY-TABIX.

IF ( ST_CUR_OUTSTOCK-MENGE > 0 ).
IF ( ST_CUR_STOCK-MENGE >= ST_CUR_OUTSTOCK-MENGE ).
ST_CUR_STOCK-MENGE = ST_CUR_STOCK-MENGE -
ST_CUR_OUTSTOCK-MENGE.
ST_CUR_OUTSTOCK-MENGE = 0.
ELSE.
ST_CUR_OUTSTOCK-MENGE = ST_CUR_OUTSTOCK-MENGE -
ST_CUR_STOCK-MENGE.
ST_CUR_STOCK-MENGE = 0.
ENDIF.
MODIFY I_TAN_STOCK
FROM ST_CUR_STOCK
INDEX DAT_CUR_INDEX
TRANSPORTING MENGE.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
*   当月出庫内部テーブルの数量が0の場合はCONTINUE
CHECK ( ST_CUR_OUTSTOCK-MENGE <> 0 ).

*   当月入庫残テーブルの検索
*   (品目・プラント・課コード)
LOOP AT I_TAN_STOCK INTO ST_CUR_STOCK
WHERE MATNR = ST_CUR_OUTSTOCK-MATNR AND
WERKS = ST_CUR_OUTSTOCK-WERKS AND
VKGRP = ST_CUR_OUTSTOCK-VKGRP AND
MENGE > 0.
*     現在行を保存
CLEAR:
DAT_CUR_INDEX.
DAT_CUR_INDEX = SY-TABIX.
IF ( ST_CUR_OUTSTOCK-MENGE > 0 ).
IF ( ST_CUR_STOCK-MENGE >= ST_CUR_OUTSTOCK-MENGE ).
ST_CUR_STOCK-MENGE = ST_CUR_STOCK-MENGE -
ST_CUR_OUTSTOCK-MENGE.
ST_CUR_OUTSTOCK-MENGE = 0.
ELSE.
ST_CUR_OUTSTOCK-MENGE = ST_CUR_OUTSTOCK-MENGE -
ST_CUR_STOCK-MENGE.
ST_CUR_STOCK-MENGE = 0.
ENDIF.
MODIFY I_TAN_STOCK
FROM ST_CUR_STOCK
INDEX DAT_CUR_INDEX
TRANSPORTING MENGE.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
*   当月出庫内部テーブルの数量が0の場合はCONTINUE
CHECK ( ST_CUR_OUTSTOCK-MENGE <> 0 ).
*   当月入庫残テーブルの検索
*   (品目・プラント・部コード)
LOOP AT I_TAN_STOCK INTO ST_CUR_STOCK
WHERE MATNR = ST_CUR_OUTSTOCK-MATNR AND
WERKS = ST_CUR_OUTSTOCK-WERKS AND
VKBUR = ST_CUR_OUTSTOCK-VKBUR AND
MENGE > 0.
*     現在行を保存
CLEAR:
DAT_CUR_INDEX.
DAT_CUR_INDEX = SY-TABIX.
*
IF ( ST_CUR_OUTSTOCK-MENGE > 0 ).
IF ( ST_CUR_STOCK-MENGE >= ST_CUR_OUTSTOCK-MENGE ).
ST_CUR_STOCK-MENGE = ST_CUR_STOCK-MENGE -
ST_CUR_OUTSTOCK-MENGE.
ST_CUR_OUTSTOCK-MENGE = 0.
ELSE.
ST_CUR_OUTSTOCK-MENGE = ST_CUR_OUTSTOCK-MENGE -
ST_CUR_STOCK-MENGE.
ST_CUR_STOCK-MENGE = 0.
ENDIF.
MODIFY I_TAN_STOCK
FROM ST_CUR_STOCK
INDEX DAT_CUR_INDEX
TRANSPORTING MENGE.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
*   当月出庫内部テーブルの数量が0の場合はCONTINUE
CHECK ( ST_CUR_OUTSTOCK-MENGE <> 0 ).
*   当月入庫残テーブルの検索
*   (品目・プラント)
LOOP AT I_TAN_STOCK INTO ST_CUR_STOCK
WHERE MATNR = ST_CUR_OUTSTOCK-MATNR AND
WERKS = ST_CUR_OUTSTOCK-WERKS AND
MENGE > 0.
*     現在行を保存
CLEAR:
DAT_CUR_INDEX.
DAT_CUR_INDEX = SY-TABIX.

IF ( ST_CUR_OUTSTOCK-MENGE > 0 ).
IF ( ST_CUR_STOCK-MENGE >= ST_CUR_OUTSTOCK-MENGE ).
ST_CUR_STOCK-MENGE = ST_CUR_STOCK-MENGE -
ST_CUR_OUTSTOCK-MENGE.
ST_CUR_OUTSTOCK-MENGE = 0.
ELSE.
ST_CUR_OUTSTOCK-MENGE = ST_CUR_OUTSTOCK-MENGE -
ST_CUR_STOCK-MENGE.
ST_CUR_STOCK-MENGE = 0.
ENDIF.
MODIFY I_TAN_STOCK
FROM ST_CUR_STOCK
INDEX DAT_CUR_INDEX
TRANSPORTING MENGE.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
*   当月出庫内部テーブルの数量が0の場合はCONTINUE
CHECK ( ST_CUR_OUTSTOCK-MENGE <> 0 ).

*  エラー時の処理
IF ( ST_CUR_OUTSTOCK-MENGE > 0 ).
*     当月入庫残内部テーブルの内容を元に戻す
I_TAN_STOCK = I_BACK_STOCK.
CLEAR:
ST_ZYUTYU_FLOW.
*     VBFAテーブルの検索
SELECT VBELV
INTO ST_ZYUTYU_FLOW
UP TO 1 ROWS
FROM VBFA
WHERE VBELN   = ST_CUR_OUTSTOCK-MBLNR AND
POSNN   = ST_CUR_OUTSTOCK-ZEILE AND
VBTYP_V = CNS_TYPJ.
ENDSELECT.

*     ERR内部テーブルへ格納(出荷情報)
CLEAR:
ST_ERR.
ST_ERR-MATNR = ST_CUR_OUTSTOCK-MATNR.  "品目コード
ST_ERR-WERKS = ST_CUR_OUTSTOCK-WERKS.  "プラント
ST_ERR-VBELV = ST_ZYUTYU_FLOW-VBELV.   "出荷伝票番号
ST_ERR-OUTSU = DAT_KEEP_ZAIKO.         "計算前出荷数量（出庫数量）
APPEND ST_ERR TO I_ERR.
*     品目・プラントの在庫計算出
CLEAR:
ST_ERR,
DAT_NYUKO_SUU.
LOOP AT I_TAN_STOCK INTO ST_CUR_STOCK
WHERE MATNR = ST_CUR_OUTSTOCK-MATNR AND
WERKS = ST_CUR_OUTSTOCK-WERKS.
DAT_NYUKO_SUU = DAT_NYUKO_SUU + ST_CUR_STOCK-MENGE.
ENDLOOP.
*     ERR内部テーブルへ格納(在庫情報)
ST_ERR-INSU  = DAT_NYUKO_SUU.
ST_ERR-MATNR = ST_CUR_OUTSTOCK-MATNR.
ST_ERR-WERKS = ST_CUR_OUTSTOCK-WERKS.
APPEND ST_ERR TO I_ERR.
ENDIF.
ENDDO.

*-- 変更後データ格納（最終）
IF NOT ( ST_KEY IS INITIAL ).
READ TABLE I_TAN_STOCK
INTO ST_CUR_STOCK
INDEX 1.
IF ( SY-SUBRC = 0 ).
"変更後の単位別内部テーブルを一時格納用内部テーブルへ格納
APPEND LINES OF I_TAN_STOCK TO I_DUMMY_STOCK.
ENDIF.
ENDIF.
*-- 未処理の品目プラントデータを一時格納テーブルに移動・ソート
SORT I_SEL_STOCK BY MATNR WERKS.
CLEAR:
DAT_CUR_INDEX.
DO.
DAT_CUR_INDEX = DAT_CUR_INDEX + 1.
READ TABLE I_CUR_STOCK
INTO ST_CUR_STOCK
INDEX DAT_CUR_INDEX.
IF ( SY-SUBRC <> 0 ).
EXIT.
ENDIF.
*
READ TABLE I_SEL_STOCK
INTO ST_SEL_STOCK
WITH KEY MATNR = ST_CUR_STOCK-MATNR
WERKS = ST_CUR_STOCK-WERKS
BINARY SEARCH.
IF ( SY-SUBRC <> 0 ).
APPEND ST_CUR_STOCK TO I_DUMMY_STOCK.
ENDIF.
ENDDO.
SORT I_DUMMY_STOCK BY MATNR WERKS KUNNR VKBUR VKGRP
PERNR ZZNO ZZPOS BUDAT.
*-- 当月入庫残内部テーブルに一時格納用内部テーブルを格納
REFRESH:
I_CUR_STOCK.
I_CUR_STOCK = I_DUMMY_STOCK.
*-- エラー出力処理
LOOP AT I_ERR INTO ST_ERR.
*   ヘッダ行出力
AT FIRST.
WRITE:/ TEXT-H00,          "'エラー内容',
12 TEXT-H01,       "'品目',
32 TEXT-H02,       "'プラント',
42 TEXT-H03,       "'出荷伝票番号',
64 TEXT-H04,       "'出荷数量',
84 TEXT-H05.       "'入荷数量'.
ULINE.
ENDAT.
*   エラー内容出力
WRITE:/ TEXT-H06,              "'在庫＜出庫',
12 ST_ERR-MATNR,
32 ST_ERR-WERKS,
42 ST_ERR-VBELV,
56 ST_ERR-OUTSU,
76 ST_ERR-INSU.
ENDLOOP.

ENDFORM.                    " GET_CUR_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  INCONNECT_CHK
*&---------------------------------------------------------------------*
*       紐付け判定処理（入庫）
*----------------------------------------------------------------------*
FORM INCONNECT_CHK.

* ローカルデータ宣言
DATA:LTD_REINYU LIKE TABLE OF ST_CUR_STOCK,
LST_REINYU LIKE ST_CUR_STOCK.

DATA:
LFLG_S(1) TYPE C.    "入出庫フラグX：入庫/SPACE：出庫

* 入庫フラグon
LFLG_S = CNS_X.

*戻入品のデータ取得
LOOP AT I_CUR_INSTOCK INTO ST_CUR_INSTOCK
WHERE BWART IN S_BWART.
LST_REINYU = ST_CUR_INSTOCK.
APPEND LST_REINYU TO LTD_REINYU.
ENDLOOP.

*戻入品のみ削除
DELETE I_CUR_INSTOCK WHERE BWART IN S_BWART.

* 戻入品の組織情報取得
LOOP AT LTD_REINYU INTO LST_REINYU.
PERFORM REINYU USING    LST_REINYU-XBLNR
CHANGING LST_REINYU-VKBUR
LST_REINYU-KUNNR
LST_REINYU-VKGRP
LST_REINYU-PERNR.
MODIFY LTD_REINYU FROM LST_REINYU.
ENDLOOP.

* 戻入品以外の組織情報取得
*-- 当月入庫内部テーブルより受注と発注の関連を判別（MALS,DLINK,TAB発注）
LOOP AT I_CUR_INSTOCK INTO ST_CUR_INSTOCK.

* 現在の行情報を変数に設定
DAT_CUR_INDEX = SY-TABIX.
IF ST_CUR_INSTOCK-EBELN IS INITIAL.
* 発注が直接紐づいていない場合
PERFORM CASE_NO_EBELN USING LFLG_S
CHANGING ST_CUR_INSTOCK.
ELSE.
* 発注が直接紐づいている場合
PERFORM CASE_EBELN USING ST_CUR_INSTOCK.

ENDIF.
MODIFY I_CUR_INSTOCK
FROM ST_CUR_INSTOCK
INDEX DAT_CUR_INDEX.
ENDLOOP.

* 購買発注番号、発注明細番号をZZNO、ZZPOSに格納
LOOP AT I_CUR_INSTOCK INTO ST_CUR_INSTOCK.
ST_CUR_INSTOCK-ZZNO  = ST_CUR_INSTOCK-EBELN.
ST_CUR_INSTOCK-ZZPOS = ST_CUR_INSTOCK-EBELP.
MODIFY I_CUR_INSTOCK FROM ST_CUR_INSTOCK.
ENDLOOP.

* 戻入データを内部テーブルに格納
LOOP AT LTD_REINYU INTO LST_REINYU.
ST_CUR_INSTOCK = LST_REINYU.
APPEND ST_CUR_INSTOCK TO I_CUR_INSTOCK.
ENDLOOP.

ENDFORM.                    " INCONNECT_CHK
*&---------------------------------------------------------------------*
*&      Form  reinyu
*&---------------------------------------------------------------------*
*       戻入品組織取得
*----------------------------------------------------------------------*
*      -->I_XBLNR  参照伝票番号
*      <--O_VKBUR  営業所
*      <--O_KUNNR  得意先コード
*      <--O_VKGRP  営業グループ
*      <--O_PERNR  担当者
*----------------------------------------------------------------------*
FORM REINYU USING    I_XBLNR TYPE MKPF-XBLNR
CHANGING O_VKBUR TYPE VBAK-VKBUR
O_KUNNR TYPE VBAK-KUNNR
O_VKGRP TYPE VBAK-VKGRP
O_PERNR TYPE VBPA-PERNR.

* ローカルデータ宣言
DATA:
LST_ZYUTYU LIKE ST_ZYUTYU,
LW_SUBRC  TYPE SY-SUBRC,
LW_VBELN  TYPE VBFA-VBELN,
LW_POSNV  TYPE VBFA-POSNV.

* 出荷伝票番号から受注伝票番号を取得する
SELECT  VBELV             "先行販売管理伝票
POSNV             "販売管理伝票前明細
INTO (LW_VBELN,LW_POSNV)
UP TO 1 ROWS
FROM VBFA
WHERE VBELN   = I_XBLNR AND
VBTYP_N = CNS_TYPT.
ENDSELECT.

IF ( SY-SUBRC = 0 ).
*   上記で取得した受注伝票(内部TBL)を読み組織ｺｰﾄﾞを取得
PERFORM GET_SOSIKI USING    LW_VBELN    "受注伝票
LW_POSNV    "明細番号
CHANGING LST_ZYUTYU
LW_SUBRC.
IF LW_SUBRC = 0.
O_VKBUR = LST_ZYUTYU-VKBUR.           "営業所
O_KUNNR = LST_ZYUTYU-KUNNR.           "得意先
O_VKGRP = LST_ZYUTYU-VKGRP.           "営業グループ
O_PERNR = LST_ZYUTYU-PERNR.           "従業員番号
ENDIF.
ENDIF.

ENDFORM.                    " REINYU
*&---------------------------------------------------------------------*
*&      Form  GET_SOSIKI
*&---------------------------------------------------------------------*
*       組織情報取得
*----------------------------------------------------------------------*
*      -->I_VBELN  後続の販売管理伝票
*      -->I_POSNV  後続の販売管理伝票明細番号
*      <--O_ZYUTYU 受注伝票情報
*      <--O_SUBRC  処理結果
*----------------------------------------------------------------------*
FORM GET_SOSIKI USING    I_VBELN  TYPE VBAK-VBELN
I_POSNV  TYPE VBAP-POSNV
CHANGING O_ZYUTYU LIKE ST_ZYUTYU
O_SUBRC  TYPE SY-SUBRC.

* 変数クリア
CLEAR : O_ZYUTYU.

* 組織情報取得
SELECT SINGLE
VBAK~VBELN      "販売伝票番号
VBAP~POSNR      "販売伝票明細
VBAK~BSTNK      "得意先発注番号
VBAK~KUNNR      "受注先
VBAK~VKBUR      "営業所
VBAK~VKGRP      "営業グループ
VBPA~PERNR      "従業員番号
VBAP~PSTYV      "明細カテゴリ (販売伝票)
INTO O_ZYUTYU
FROM VBAK
INNER JOIN VBAP
ON VBAK~VBELN = VBAP~VBELN
INNER JOIN VBPA
ON VBAK~VBELN = VBPA~VBELN
LEFT JOIN VBKD
ON VBAP~VBELN = VBKD~VBELN AND
VBAP~POSNR = VBKD~POSNR
WHERE VBPA~PARVW = CNS_VE        AND
VBAK~VBELN = I_VBELN       AND
VBAP~POSNR = I_POSNV.

O_SUBRC = SY-SUBRC.

ENDFORM.                    " GET_SOSIKI
*&---------------------------------------------------------------------*
*&      Form  NOT_EBELN
*&---------------------------------------------------------------------*
*       発注番号に紐付かない入出庫データの組織情報取得
*----------------------------------------------------------------------*
*      -->I_FLG    入出庫フラグX:入庫/space：出庫
*      <--O_STOCK  当月入庫出庫データ
*----------------------------------------------------------------------*
FORM CASE_NO_EBELN USING    I_FLG   TYPE C
CHANGING O_STOCK LIKE ST_CUR_STOCK.

* ローカルデータ宣言
DATA:
LW_C_VBELN TYPE VBAK-VBELN,     "受注伝票番号
LW_C_POSNR TYPE VBAP-POSNR,     "受注伝票明細番号
LW_H_VBELN TYPE VBAK-VBELN,     "受注伝票番号（返品）
LW_H_POSNR TYPE VBAP-POSNR,     "受注伝票明細番号（返品）
LW_EBELN   TYPE EKKO-EBELN,     "購買発注番号
LW_SUBRC   TYPE SY-SUBRC,
LFLG_OK(1) TYPE C.              "組織情報取得時：X

* VBFAを検索すると時間が大量にかかるため、
* 処理分岐
IF NOT O_STOCK-KDAUF IS INITIAL AND
NOT O_STOCK-KDPOS IS INITIAL.

SELECT SINGLE VBTYP VBELN FROM VBAK
INTO (ST_ZYUTYU_FLOW-VBTYP_V ,
ST_ZYUTYU_FLOW-VBELV)
WHERE VBELN = O_STOCK-KDAUF.

ST_ZYUTYU_FLOW-POSNV = O_STOCK-KDPOS.
APPEND ST_ZYUTYU_FLOW TO I_ZYUTYU_FLOW.
ELSE.

* 伝票フロー情報を取得
PERFORM GET_FLOW USING O_STOCK-MBLNR
O_STOCK-ZEILE.
ENDIF.

* 最古の受注伝票番号を取得
* 販売伝票フロー内部テーブルのソート(昇順)
SORT I_ZYUTYU_FLOW BY VBTYP_V
VBELV.

PERFORM GET_VBELN_POSNR CHANGING LW_C_VBELN
LW_C_POSNR.

* 最新の受注伝票番号（返品）を取得
*  販売伝票フロー内部テーブルのソート(降順)
SORT I_ZYUTYU_FLOW BY VBTYP_V DESCENDING
VBELV DESCENDING.

PERFORM GET_VBELN_POSNR CHANGING LW_H_VBELN
LW_H_POSNR.

* 販売伝票フロー内部テーブルの削除
REFRESH:
I_ZYUTYU_FLOW.

* 受注伝票情報の取得
PERFORM GET_SOSIKI USING    LW_C_VBELN    "受注伝票
LW_C_POSNR    "明細番号
CHANGING ST_FLOW_SEL
LW_SUBRC.

* 返品伝票情報の取得
PERFORM GET_SOSIKI USING    LW_H_VBELN    "受注伝票
LW_H_POSNR    "明細番号
CHANGING ST_FLOW_STR
LW_SUBRC.
* 返品伝票から組織情報を取得
IF LW_SUBRC = 0.
LFLG_OK = CNS_X.
ENDIF.

* 紐付け判定(TAB)
* 受注伝票の明細カテゴリが'TAB'時のみ
IF ( ST_FLOW_SEL-PSTYV = CNS_TAB ).
PERFORM CASE_NOT_EBELN_TAB
CHANGING LW_EBELN "購買発注番号
LFLG_OK.

* 購買依頼から組織情報を取得
IF LFLG_OK = CNS_X.
O_STOCK-EBELN = LW_EBELN.
PERFORM SET_SOSIKI USING    ST_FLOW_STR-KUNNR      "得意先
ST_FLOW_STR-VKBUR      "営業所
ST_FLOW_STR-VKGRP      "営業グループ
ST_FLOW_STR-PERNR      "担当者
CHANGING O_STOCK-KUNNR
O_STOCK-VKBUR
O_STOCK-VKGRP
O_STOCK-PERNR.
ELSE.
* 上記以外のデータで受注が検索できているものは組織情報を設定
* 出庫時のみ処理
IF I_FLG IS INITIAL.
O_STOCK-KUNNR = ST_FLOW_STR-KUNNR.
O_STOCK-VKBUR = ST_FLOW_STR-VKBUR.
O_STOCK-VKGRP = ST_FLOW_STR-VKGRP.
O_STOCK-PERNR = ST_FLOW_STR-PERNR.
ENDIF.
ENDIF.
ENDIF.

* 紐付け判定(DLINK)
* 入庫時のみ処理
IF I_FLG = CNS_X.
IF NOT ( ST_FLOW_SEL-VBELN IS INITIAL AND
ST_FLOW_SEL-POSNR IS INITIAL ).
PERFORM CASE_NOT_EBELN_DLINK
USING    ST_FLOW_SEL-VBELN
ST_FLOW_SEL-POSNR
CHANGING LW_EBELN
LFLG_OK.
IF LFLG_OK = CNS_X.
* 当月入庫内部テーブルに組織情報設定更新
O_STOCK-EBELN = LW_EBELN.
PERFORM SET_SOSIKI USING    ST_FLOW_STR-KUNNR      "得意先
ST_FLOW_STR-VKBUR      "営業所
ST_FLOW_STR-VKGRP      "営業グループ
ST_FLOW_STR-PERNR      "担当者
CHANGING O_STOCK-KUNNR
O_STOCK-VKBUR
O_STOCK-VKGRP
O_STOCK-PERNR.
ENDIF.
ENDIF.
ENDIF.

ENDFORM.                    " CASE_NO_EBELN
*&---------------------------------------------------------------------*
*&      Form  GET_VBELN_POSNR
*&---------------------------------------------------------------------*
*       受注伝票番号と明細番号取得
*----------------------------------------------------------------------*
*      <--O_VBELN  受注伝票番号
*      <--O_POSNR  受注明細番号
*----------------------------------------------------------------------*
FORM GET_VBELN_POSNR CHANGING O_VBELN TYPE VBAK-VBELN
O_POSNR TYPE VBAP-POSNR.

CLEAR:ST_ZYUTYU_FLOW.

READ TABLE I_ZYUTYU_FLOW
INTO ST_ZYUTYU_FLOW
INDEX 1.
O_VBELN = ST_ZYUTYU_FLOW-VBELV.
O_POSNR = ST_ZYUTYU_FLOW-POSNV.

ENDFORM.                    " GET_VBELN_POSNR
*&---------------------------------------------------------------------*
*&      Form  GET_FLOW
*&---------------------------------------------------------------------*
*       伝票フロー情報取得
*----------------------------------------------------------------------*
*      -->I_MBLNR  入出庫伝票番号
*      -->I_ZEILE  入出庫明細番号
*----------------------------------------------------------------------*
FORM GET_FLOW USING I_MBLNR TYPE MKPF-MBLNR
I_ZEILE TYPE MSEG-ZEILE.

SELECT VBELV
POSNV
VBTYP_V
INTO TABLE I_ZYUTYU_FLOW
FROM VBFA
WHERE VBELN   = I_MBLNR AND
POSNN   = I_ZEILE AND
VBTYP_N = CNS_TYPR      AND
( VBTYP_V = CNS_TYPC      OR
VBTYP_V = CNS_TYPH ).                 "返品

ENDFORM.                    " GET_FLOW
*&---------------------------------------------------------------------*
*&      Form  CASE_NOT_EBELN_TAB
*&---------------------------------------------------------------------*
*       標準（明細カテゴリTAB）時組織取得（購買発注なし）
*----------------------------------------------------------------------*
*  <--  O_EBELN   購買発注番号
*  <--  O_OK      処理結果
*----------------------------------------------------------------------*
FORM CASE_NOT_EBELN_TAB CHANGING O_EBELN TYPE EBAN-EBELN
O_OK    TYPE C.
* ローカルデータ宣言
DATA:
LW_BANFN   TYPE VBEP-BANFN,     "購買依頼番号
LW_SUBRC   TYPE SY-SUBRC.

* 変数初期化
CLEAR : O_EBELN,O_OK.

* 納入日程行テーブルから購買依頼番号を取得
PERFORM GET_BANFN USING    ST_FLOW_SEL-VBELN  "受注伝票番号
ST_FLOW_SEL-POSNR  "明細番号
CHANGING LW_BANFN          "購買依頼番号
LW_SUBRC.

IF LW_SUBRC = 0.
* 購買依頼情報の確認
SELECT  EBELN
INTO O_EBELN
UP TO 1 ROWS
FROM EBAN
WHERE  BANFN   =  LW_BANFN.
ENDSELECT.

* 購買依頼情報あり
IF SY-SUBRC = 0.
O_OK = CNS_X.
ENDIF.
ENDIF.

ENDFORM.                    " CASE_NOT_EBELN_TAB
*&---------------------------------------------------------------------*
*&      Form  GET_BANFN
*&---------------------------------------------------------------------*
*       購買依頼番号取得
*----------------------------------------------------------------------*
*      -->I_VBELN  受注伝票番号
*      -->I_POSNR  受注伝票明細番号
*      <--O_BANFN  購買依頼番号
*      <--O_SUBRC  処理結果
*----------------------------------------------------------------------*
FORM GET_BANFN USING    I_VBELN TYPE VBAK-VBELN
I_POSNR TYPE VBAP-POSNR
CHANGING O_BANFN TYPE VBEP-BANFN
O_SUBRC TYPE SY-SUBRC.

SELECT BANFN
INTO O_BANFN
UP TO 1 ROWS
FROM VBEP
WHERE VBELN =  I_VBELN AND
POSNR =  I_POSNR AND
BANFN <> SPACE.
ENDSELECT.

O_SUBRC = SY-SUBRC.

ENDFORM.                    " GET_BANFN
*&---------------------------------------------------------------------*
*&      Form  SET_SOSIKI
*&---------------------------------------------------------------------*
*       組織情報セット
*----------------------------------------------------------------------*
*      -->I_KUNNR  得意先
*      -->I_VKBUR  営業所
*      -->I_VKGRP  営業グループ
*      -->I_PERNR  担当者
*      <--O_KUNNR  得意先
*      <--O_VKBUR  営業所
*      <--O_VKGRP  営業グループ
*      <--O_PERNR  担当者
*----------------------------------------------------------------------*
FORM SET_SOSIKI USING    I_KUNNR TYPE VBAK-KUNNR
I_VKBUR TYPE VBAK-VKBUR
I_VKGRP TYPE VBAK-VKGRP
I_PERNR TYPE VBPA-PERNR
CHANGING O_KUNNR TYPE VBAK-KUNNR
O_VKBUR TYPE VBAK-VKBUR
O_VKGRP TYPE VBAK-VKGRP
O_PERNR TYPE VBPA-PERNR.

O_KUNNR = I_KUNNR.   "得意先
O_VKBUR = I_VKBUR.   "営業所
O_VKGRP = I_VKGRP.   "営業グループ
O_PERNR = I_PERNR.   "担当者

ENDFORM.                    " SET_SOSIKI
*&---------------------------------------------------------------------*
*&      Form  CASE_NOT_EBELN_DLINK
*&---------------------------------------------------------------------*
*       DLINK時組織情報取得（購買発注なし）
*----------------------------------------------------------------------*
*  -->  I_VBELN   受注伝票番号
*  -->  I_POSNR   受注伝票明細番号
*  <--  O_EBELN   購買発注番号
*  <--  O_OK      処理結果
*----------------------------------------------------------------------*
FORM CASE_NOT_EBELN_DLINK USING    I_VBELN TYPE VBAK-VBELN
I_POSNR TYPE VBAP-POSNR
CHANGING O_EBELN TYPE EKKO-EBELN
O_OK    TYPE C.
* 受注伝票番号、明細よりDLINK発注番号を取得
CLEAR:DAT_DLNUM.

PERFORM GET_ZYUTYU_TEXT USING    I_VBELN
I_POSNR
CHANGING DAT_DLNUM.

* 購買発注伝票を取得
SELECT  SINGLE EBELN
INTO O_EBELN
FROM EKKO
WHERE  EBELN  =  DAT_DLNUM.

IF SY-SUBRC = 0.
O_OK = CNS_X.
ELSE.
CLEAR O_OK.
ENDIF.
ENDFORM.                    " CASE_NOT_EBELN_DLINK
*&---------------------------------------------------------------------*
*&      Form  CASE_EBELN
*&---------------------------------------------------------------------*
*       発注番号に紐付く入出庫データの組織情報取得
*----------------------------------------------------------------------*
*      <--O_STOCK  当月入出庫データ
*----------------------------------------------------------------------*
FORM CASE_EBELN USING    O_STOCK LIKE ST_CUR_STOCK.

* 紐付け判定(TAB)
PERFORM CASE_EBELN_TAB
USING    O_STOCK-KDAUF    "受注番号
O_STOCK-KDPOS    "明細番号
O_STOCK-EBELN    "購買発注番号
O_STOCK-EBELP    "購買発注明細番号
O_STOCK-EKGRP    "購買グループ
CHANGING O_STOCK-ZZNO
O_STOCK-ZZPOS
O_STOCK-KUNNR
O_STOCK-VKBUR
O_STOCK-VKGRP
O_STOCK-PERNR.

* 紐付け判定(DLINK)
PERFORM CASE_EBELN_DLINK
USING    O_STOCK-VERKF    "営業担当者
O_STOCK-EBELN    "購買発注番号
O_STOCK-EBELP    "購買発注明細番号
CHANGING O_STOCK-ZZNO
O_STOCK-ZZPOS
O_STOCK-KUNNR
O_STOCK-VKBUR
O_STOCK-VKGRP
O_STOCK-PERNR.


ENDFORM.                    " CASE_EBELN
*&---------------------------------------------------------------------*
*&      Form  CASE_EBELN_TAB
*&---------------------------------------------------------------------*
*       標準（明細カテゴリTAB）の組織情報取得（購買発注あり）
*----------------------------------------------------------------------*
*      -->I_KDAUF  受注伝票番号
*      -->I_KDPOS  受注伝票明細番号
*      -->I_EBELN  購買発注伝票番号
*      -->I_EBELP  購買発注明細番号
*      -->I_EKGRP  購買グループ
*      <--O_ZZNO   購買発注番号
*      <--O_ZZPOS  購買発注明細番号
*      <--O_KUNNR  得意先コード
*      <--O_VKBUR  営業所
*      <--O_VKGRP  営業グループ
*      <--O_PERNR  担当者
*----------------------------------------------------------------------*
FORM CASE_EBELN_TAB USING    I_KDAUF TYPE MSEG-KDAUF
I_KDPOS TYPE MSEG-KDPOS
I_EBELN TYPE EKKO-EBELN
I_EBELP TYPE EKPO-EBELP
I_EKGRP TYPE EKKO-EKGRP
CHANGING O_ZZNO  TYPE ZNEN002-ZZNO
O_ZZPOS TYPE ZNEN002-ZZPOS
O_KUNNR TYPE VBAK-KUNNR
O_VKBUR TYPE VBAK-VKBUR
O_VKGRP TYPE VBAK-VKGRP
O_PERNR TYPE VBPA-PERNR.
* ローカルデータ宣言
DATA:
LW_SUBRC TYPE SY-SUBRC.


CLEAR:
ST_ZYUTYU.
* 受注伝票情報の取得
PERFORM GET_SOSIKI USING    I_KDAUF    "受注伝票
I_KDPOS    "明細番号
CHANGING ST_ZYUTYU
LW_SUBRC.
IF LW_SUBRC = 0.

O_ZZNO  = I_EBELN.
O_ZZPOS = I_EBELP.
* 組織情報を取得
PERFORM SET_SOSIKI USING    ST_ZYUTYU-KUNNR      "得意先
ST_ZYUTYU-VKBUR      "営業所
ST_ZYUTYU-VKGRP      "営業グループ
ST_ZYUTYU-PERNR      "担当者
CHANGING O_KUNNR
O_VKBUR
O_VKGRP
O_PERNR.
ELSE.
* 発注から受注が取得できない場合
PERFORM GET_TVBVK
USING    I_EKGRP       "購買グループ
CHANGING O_VKBUR       "営業所
O_VKGRP.      "営業グループ
ENDIF.

ENDFORM.                    " CASE_EBELN_TAB
*&---------------------------------------------------------------------*
*&      Form  GET_TVBVK
*&---------------------------------------------------------------------*
*       営業データ取得
*----------------------------------------------------------------------*
*      -->I_EKGRP  購買グループ
*      <--O_VKBUR  営業所
*      <--O_VKGRP  営業グループ
*----------------------------------------------------------------------*
FORM GET_TVBVK USING    I_EKGRP TYPE EKKO-EKGRP
CHANGING O_VKBUR TYPE TVBVK-VKBUR
O_VKGRP TYPE TVBVK-VKGRP.

* 変数初期化
CLEAR : O_VKBUR,O_VKGRP.

SELECT VKBUR
VKGRP
INTO (O_VKBUR,O_VKGRP)
UP TO 1 ROWS
FROM TVBVK
WHERE VKGRP = I_EKGRP.

ENDSELECT.

ENDFORM.                    " GET_TVBVK
*&---------------------------------------------------------------------*
*&      Form  CASE_EBELN_DLINK
*&---------------------------------------------------------------------*
*       DLINKの組織情報取得（購買発注あり）
*----------------------------------------------------------------------*
*      -->I_VERKF  仕入先営業担当者
*      -->I_EBELN  購買発注番号
*      -->I_EBELP  購買発注明細
*      <--O_ZZNO   購買発注番号
*      <--O_ZZPOS  購買発注明細番号
*      <--O_KUNNR  得意先
*      <--O_VKBUR  営業所
*      <--O_VKGRP  営業グループ
*      <--O_PERNR  担当者
*----------------------------------------------------------------------*
FORM CASE_EBELN_DLINK USING    I_VERKF TYPE EKKO-VERKF
I_EBELN TYPE EKKO-EBELN
I_EBELP TYPE EKPO-EBELP
CHANGING O_ZZNO  TYPE ZNEN002-ZZNO
O_ZZPOS TYPE ZNEN002-ZZPOS
O_KUNNR TYPE VBAK-KUNNR
O_VKBUR TYPE VBAK-VKBUR
O_VKGRP TYPE VBAK-VKGRP
O_PERNR TYPE VBPA-PERNR.
* ローカルデータ宣言
DATA:
LW_VBELN TYPE VBAK-VBELN,
LW_POSNR TYPE VBAP-POSNR,
LW_SUBRC TYPE SY-SUBRC.

CLEAR:
ST_ZYUTYU.

* 受注伝票情報の取得
LW_VBELN = I_VERKF+0(10).               "受注伝票番号
LW_POSNR = I_VERKF+11(6).               "明細番号
PERFORM GET_SOSIKI USING    LW_VBELN    "受注伝票
LW_POSNR    "明細番号
CHANGING ST_ZYUTYU
LW_SUBRC.

IF LW_SUBRC = 0.

O_ZZNO  = I_EBELN.
O_ZZPOS = I_EBELP.
* 組織情報を取得
PERFORM SET_SOSIKI USING    ST_ZYUTYU-KUNNR      "得意先
ST_ZYUTYU-VKBUR      "営業所
ST_ZYUTYU-VKGRP      "営業グループ
ST_ZYUTYU-PERNR      "担当者
CHANGING O_KUNNR
O_VKBUR
O_VKGRP
O_PERNR.
ENDIF.

ENDFORM.                    " CASE_EBELN_DLINK
*&---------------------------------------------------------------------*
*&      Form  GET_SEND_STOCK
*&---------------------------------------------------------------------*
*       在庫転送設定処理
*----------------------------------------------------------------------*
FORM GET_SEND_STOCK.

DATA:
ST_DUMMY_CURSTOCK LIKE ST_CUR_STOCK,
ST_DUMMY_ZENSTOCK LIKE ST_ZEN_STOCK,
I_DUMMY_CURSTOCK  LIKE TABLE OF ST_DUMMY_CURSTOCK,
I_DUMMY_ZENSTOCK  LIKE TABLE OF ST_ZEN_STOCK,
DAT_CUR_INDEX     TYPE I.

*-- 当月入庫内部テーブルのソート
SORT I_CUR_INSTOCK BY MATNR UMWRK.
* 移動タイプ351、352を在庫転送用内部テーブルへ格納
PERFORM GET_ZAIKO_DATA.

*--当月入庫内部テーブル及び前月在庫残内部テーブルをダミーテーブルに格納
CLEAR:
ST_DUMMY_CURSTOCK,
ST_DUMMY_ZENSTOCK.
REFRESH:
I_DUMMY_CURSTOCK,
I_DUMMY_ZENSTOCK.
I_DUMMY_CURSTOCK = I_CUR_INSTOCK.
I_DUMMY_ZENSTOCK = I_ZEN_STOCK.
SORT I_DUMMY_CURSTOCK BY MATNR WERKS KUNNR VKBUR VKGRP PERNR ZZNO
ZZPOS BUDAT.
SORT I_DUMMY_ZENSTOCK BY MATNR WERKS KUNNR VKBUR VKGRP PERNR ZZNO
ZZPOS NYUKO_DAT.

*-- 在庫を移動元プラントの入庫年月により分割
LOOP AT I_SEND_STOCK INTO ST_SEND_STOCK.
LOOP AT I_DUMMY_ZENSTOCK INTO ST_DUMMY_ZENSTOCK
WHERE WERKS = ST_SEND_STOCK-UMWRK AND
MATNR = ST_SEND_STOCK-UMMAT AND
MENGE > 0.
*     残在庫がマイナス時はEXIT
IF ( ST_SEND_STOCK-MENGE < 0 ).
EXIT.
ENDIF.
*     現在の行を保存
CLEAR:
DAT_CUR_INDEX.
DAT_CUR_INDEX = SY-TABIX.

* 前月在庫から引き当て
PERFORM HIKIATE_STOCK USING ST_DUMMY_ZENSTOCK-BWART
ST_DUMMY_ZENSTOCK-VKBUR
ST_DUMMY_ZENSTOCK-VKGRP
ST_DUMMY_ZENSTOCK-PERNR
ST_DUMMY_ZENSTOCK-KUNNR
ST_DUMMY_ZENSTOCK-NYUKO_DAT
CHANGING ST_DUMMY_ZENSTOCK-MENGE
ST_SEND_STOCK
ST_PART_STOCK.
* 分割した在庫数を保存
APPEND ST_PART_STOCK TO I_PART_STOCK.

*     前月在庫残ダミーテーブルの更新
MODIFY I_DUMMY_ZENSTOCK
FROM ST_DUMMY_ZENSTOCK
INDEX DAT_CUR_INDEX
TRANSPORTING MENGE.

ENDLOOP.

*   残在庫が０以下は次処理を行わない
IF ( ST_SEND_STOCK-MENGE =< 0 ).
CONTINUE.
ENDIF.
*   当月入庫内部テーブルから検索
*   (プラント・品目より。他組織情報はスペース)
LOOP AT I_DUMMY_CURSTOCK INTO ST_DUMMY_CURSTOCK
WHERE WERKS = ST_SEND_STOCK-UMWRK AND
MATNR = ST_SEND_STOCK-UMMAT AND
MENGE > 0.

*     残在庫がマイナス時はEXIT
IF ( ST_SEND_STOCK-MENGE < 0 ).
EXIT.
ENDIF.
*     現在の行を保存
CLEAR:
DAT_CUR_INDEX.
DAT_CUR_INDEX = SY-TABIX.

* 当月入庫から引き当て
PERFORM HIKIATE_STOCK USING ST_DUMMY_CURSTOCK-BWART
ST_DUMMY_CURSTOCK-VKBUR
ST_DUMMY_CURSTOCK-VKGRP
ST_DUMMY_CURSTOCK-PERNR
ST_DUMMY_CURSTOCK-KUNNR
ST_DUMMY_CURSTOCK-BUDAT
CHANGING ST_DUMMY_CURSTOCK-MENGE
ST_SEND_STOCK
ST_PART_STOCK.

* 分割した在庫数を保存
APPEND ST_PART_STOCK TO I_PART_STOCK.
*     当月入庫ダミー内部テーブルの更新
MODIFY I_DUMMY_CURSTOCK
FROM ST_DUMMY_CURSTOCK
INDEX DAT_CUR_INDEX
TRANSPORTING MENGE.

ENDLOOP.


*   まだ数量がある場合はそのまま設定
IF ( ST_SEND_STOCK-MENGE > 0 ).
*     在庫分割用内部テーブルヘッダのクリア
CLEAR:
ST_PART_STOCK.
*     各情報の設定
ST_PART_STOCK = ST_SEND_STOCK.
APPEND ST_PART_STOCK TO I_PART_STOCK.
ENDIF.
ENDLOOP.
* 在庫分割用内部テーブルを当月入庫内部テーブルに格納
APPEND LINES OF I_PART_STOCK TO I_CUR_INSTOCK.

ENDFORM.                    " GET_SEND_STOCK
*&---------------------------------------------------------------------*
*&      Form  GET_ZAIKO_DATA
*&---------------------------------------------------------------------*
*       在庫転送データ取得処理
*----------------------------------------------------------------------*
FORM GET_ZAIKO_DATA.

CLEAR:
ST_CUR_INSTOCK,
ST_SEND_STOCK.
REFRESH:
I_SEND_STOCK.

LOOP AT I_CUR_INSTOCK INTO ST_CUR_INSTOCK
WHERE BWART = CNS_351 OR
BWART = CNS_352.

*   格納
CLEAR:
ST_SEND_STOCK.

ST_SEND_STOCK = ST_CUR_INSTOCK.
APPEND ST_SEND_STOCK TO I_SEND_STOCK.
ENDLOOP.

* 当月入庫内部テーブルより削除
DELETE I_CUR_INSTOCK WHERE BWART = CNS_351 OR
BWART = CNS_352.


ENDFORM.                    " GET_ZAIKO_DATA
*&---------------------------------------------------------------------*
*&      Form  HIKIATE_STOCK
*&---------------------------------------------------------------------*
*       在庫引当処理
*----------------------------------------------------------------------*
*      -->I_BWART       移動タイプ
*      -->I_VKBUR       営業所
*      -->I_VKGRP       営業グループ
*      -->I_PERNR       担当者
*      -->I_KUNNR       得意先
*      -->I_DATE        入庫日
*      <--O_MENGE       数量
*      <--O_SEND_STOCK  在庫転送データ
*      <--O_PART_STOCK  分割データ
*----------------------------------------------------------------------*
FORM HIKIATE_STOCK USING    I_BWART      TYPE MSEG-BWART
I_VKBUR      TYPE VBAK-VKBUR
I_VKGRP      TYPE ZNEN002-VKGRP
I_PERNR      TYPE ZNEN002-PERNR
I_KUNNR      TYPE VBAK-KUNNR
I_DATE       TYPE MKPF-BUDAT
CHANGING O_MENGE      TYPE MSEG-MENGE
O_SEND_STOCK LIKE ST_CUR_STOCK
O_PART_STOCK LIKE ST_CUR_STOCK.

* 各情報の設定（入庫年月は前月在庫残内部テーブルより取得）
O_PART_STOCK = O_SEND_STOCK.
O_PART_STOCK-BUDAT = I_DATE.

IF I_BWART = CNS_351 OR
I_BWART = CNS_352.

MOVE I_VKBUR TO O_PART_STOCK-VKBUR.
MOVE I_VKGRP TO O_PART_STOCK-VKGRP.
MOVE I_PERNR TO O_PART_STOCK-PERNR.
MOVE I_KUNNR TO O_PART_STOCK-KUNNR.
ENDIF.

* 残在庫数量算出
O_SEND_STOCK-MENGE = O_SEND_STOCK-MENGE - O_MENGE.

* 在庫数設定
IF O_SEND_STOCK-MENGE => 0.
O_PART_STOCK-MENGE = O_MENGE.
O_MENGE = 0.
ELSE.
O_PART_STOCK-MENGE = O_SEND_STOCK-MENGE +
O_MENGE.
O_MENGE            = O_MENGE -
O_PART_STOCK-MENGE.
ENDIF.

ENDFORM.                    " HIKIATE_STOCK
*&---------------------------------------------------------------------*
*&      Form  SET_ZENDATA
*&---------------------------------------------------------------------*
*       前月在庫データを当月入庫データに格納
*----------------------------------------------------------------------*
FORM SET_ZENDATA.

*-- 当月入庫残内部テーブルのクリア
REFRESH:
I_CUR_STOCK.

*-- 前月残在庫内部テーブル→当月入庫残内部テーブル設定
CLEAR:
ST_ZEN_STOCK.

LOOP AT I_ZEN_STOCK INTO ST_ZEN_STOCK.
CLEAR:
ST_CUR_STOCK.

*   各項目設定
ST_CUR_STOCK-MATNR  = ST_ZEN_STOCK-MATNR.     "品目コード
ST_CUR_STOCK-WERKS  = ST_ZEN_STOCK-WERKS.     "プラント
ST_CUR_STOCK-MENGE  = ST_ZEN_STOCK-MENGE.     "数量
ST_CUR_STOCK-BUDAT  = ST_ZEN_STOCK-NYUKO_DAT. "入庫日付
ST_CUR_STOCK-KUNNR  = ST_ZEN_STOCK-KUNNR.     "得意先コード
ST_CUR_STOCK-VKBUR  = ST_ZEN_STOCK-VKBUR.     "営業所
ST_CUR_STOCK-VKGRP  = ST_ZEN_STOCK-VKGRP.     "営業グループ
ST_CUR_STOCK-PERNR  = ST_ZEN_STOCK-PERNR.     "担当コード
ST_CUR_STOCK-ZZNO   = ST_ZEN_STOCK-ZZNO.      "発注番号
ST_CUR_STOCK-ZZPOS  = ST_ZEN_STOCK-ZZPOS.     "発注明細
ST_CUR_STOCK-MATKL  = ST_ZEN_STOCK-MATKL.     "品目グループ
ST_CUR_STOCK-ZPOCO  = ST_ZEN_STOCK-ZPOCO.     "POCOキー
ST_CUR_STOCK-ZANDT  = ST_ZEN_STOCK-ZANDT.     "勘定日付
ST_CUR_STOCK-ZCOUNT = ST_ZEN_STOCK-ZCOUNT.    "カウンタ
ST_CUR_STOCK-SOBKZ  = ST_ZEN_STOCK-SOBKZ.     "特殊在庫
ST_CUR_STOCK-BWART  = ST_ZEN_STOCK-BWART.
ST_CUR_STOCK-MBLNR  = ST_ZEN_STOCK-ZZNO.
ST_CUR_STOCK-ZEILE  = ST_ZEN_STOCK-ZZPOS+1(4).
ST_CUR_STOCK-SOBKZ  = ST_ZEN_STOCK-SOBKZ.

APPEND ST_CUR_STOCK TO I_CUR_STOCK.
ENDLOOP.

ENDFORM.                    " SET_ZENDATA
*&---------------------------------------------------------------------*
*&      Form  SUM_ZAIKO
*&---------------------------------------------------------------------*
*       在庫数量を算出
*----------------------------------------------------------------------*
*      -->I_DUMMY_INSTOCK  入庫データ
*----------------------------------------------------------------------*
FORM SUM_ZAIKO TABLES I_DUMMY_INSTOCK STRUCTURE ST_CUR_STOCK.

* ローカルデータ宣言
DATA:
LST_DUMMY_INSTOCK LIKE ST_CUR_STOCK.

*-- 当月入庫内部テーブルのソート
SORT I_CUR_INSTOCK BY MATNR WERKS KUNNR VKBUR VKGRP
PERNR ZZNO ZZPOS BUDAT.

* 当月入庫内部テーブル→当月入庫残内部テーブル設定
LOOP AT I_CUR_INSTOCK INTO ST_CUR_INSTOCK.

*   当月入庫残（前月分のみ格納）テーブルに同一キーがないか検索
CLEAR:
ST_CUR_STOCK.

READ TABLE I_CUR_STOCK
INTO ST_CUR_STOCK
WITH KEY MATNR = ST_CUR_INSTOCK-MATNR
WERKS = ST_CUR_INSTOCK-WERKS
KUNNR = ST_CUR_INSTOCK-KUNNR
VKBUR = ST_CUR_INSTOCK-VKBUR
VKGRP = ST_CUR_INSTOCK-VKGRP
PERNR = ST_CUR_INSTOCK-PERNR
ZZNO  = ST_CUR_INSTOCK-ZZNO
ZZPOS = ST_CUR_INSTOCK-ZZPOS
BUDAT = ST_CUR_INSTOCK-BUDAT
BINARY SEARCH.
IF ( SY-SUBRC = 0 ).
*     同一キーが存在時は入庫数量を加算更新する。
ST_CUR_STOCK-MENGE = ST_CUR_STOCK-MENGE + ST_CUR_INSTOCK-MENGE.
MODIFY I_CUR_STOCK
FROM ST_CUR_STOCK
INDEX SY-TABIX.
CONTINUE.
ENDIF.
*   当月入庫一時内部テーブルに同一キーがないか検索
CLEAR:
LST_DUMMY_INSTOCK.
READ TABLE I_DUMMY_INSTOCK INTO LST_DUMMY_INSTOCK
WITH KEY MATNR = ST_CUR_INSTOCK-MATNR
WERKS = ST_CUR_INSTOCK-WERKS
KUNNR = ST_CUR_INSTOCK-KUNNR
VKBUR = ST_CUR_INSTOCK-VKBUR
VKGRP = ST_CUR_INSTOCK-VKGRP
PERNR = ST_CUR_INSTOCK-PERNR
ZZNO  = ST_CUR_INSTOCK-ZZNO
ZZPOS = ST_CUR_INSTOCK-ZZPOS
BUDAT = ST_CUR_INSTOCK-BUDAT
BINARY SEARCH.
IF ( SY-SUBRC = 0 ).
*     同一キーが存在時は入庫数量を加算更新する。
LST_DUMMY_INSTOCK-MENGE = LST_DUMMY_INSTOCK-MENGE +
ST_CUR_INSTOCK-MENGE.

MODIFY I_DUMMY_INSTOCK FROM LST_DUMMY_INSTOCK
INDEX SY-TABIX.
CONTINUE.
ENDIF.
*   存在しない場合は、新規登録
CLEAR:
LST_DUMMY_INSTOCK.

LST_DUMMY_INSTOCK = ST_CUR_INSTOCK.

*評価在庫合計金額
APPEND LST_DUMMY_INSTOCK TO I_DUMMY_INSTOCK.
ENDLOOP.

ENDFORM.                    " SUM_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  OUTCONNECT_CHK
*&---------------------------------------------------------------------*
*       紐付判定処理（出庫）
*----------------------------------------------------------------------*
FORM OUTCONNECT_CHK.
* ローカルデータ宣言
DATA:
LFLG_S(1) TYPE C.   "入出庫判別フラグX：入庫/space：出庫

*-- 当月出庫内部テーブルより受注と発注の関連を判別（MALS,DLINK,TAB発注）
LOOP AT I_CUR_OUTSTOCK INTO ST_CUR_OUTSTOCK.
"現在の行情報を変数に設定
DAT_CUR_INDEX = SY-TABIX.
IF ST_CUR_OUTSTOCK-EBELN IS INITIAL.
* 発注が直接紐づいていない場合
PERFORM CASE_NO_EBELN USING LFLG_S
CHANGING ST_CUR_OUTSTOCK.

ELSE.
* 発注が直接紐づいている場合
PERFORM CASE_EBELN USING ST_CUR_INSTOCK.

ENDIF.
MODIFY I_CUR_OUTSTOCK
FROM ST_CUR_OUTSTOCK
INDEX DAT_CUR_INDEX.

ENDLOOP.

ENDFORM.                    " OUTCONNECT_CHK
*&---------------------------------------------------------------------*
*&      Form  SUM_SYUKKO
*&---------------------------------------------------------------------*
*       出庫数量算出処理
*----------------------------------------------------------------------*
*      -->I_DUMMY_OUTSTOCK  出庫データ
*----------------------------------------------------------------------*
FORM SUM_SYUKKO TABLES   I_DUMMY_OUTSTOCK STRUCTURE ST_CUR_STOCK.

* ローカルデータ宣言
DATA:
LST_DUMMY_OUTSTOCK LIKE ST_CUR_STOCK.

CLEAR:
DAT_CUR_INDEX,
LST_DUMMY_OUTSTOCK.

DO.
DAT_CUR_INDEX = DAT_CUR_INDEX + 1.


READ TABLE I_CUR_OUTSTOCK
INTO ST_CUR_OUTSTOCK
INDEX DAT_CUR_INDEX.
IF ( SY-SUBRC <> 0 ).
EXIT.
ENDIF.
*   同キー項目が存在しないか検索
READ TABLE I_DUMMY_OUTSTOCK
INTO LST_DUMMY_OUTSTOCK
WITH KEY MATNR = ST_CUR_OUTSTOCK-MATNR
WERKS = ST_CUR_OUTSTOCK-WERKS
KUNNR = ST_CUR_OUTSTOCK-KUNNR
VKBUR = ST_CUR_OUTSTOCK-VKBUR
VKGRP = ST_CUR_OUTSTOCK-VKGRP
PERNR = ST_CUR_OUTSTOCK-PERNR
ZZNO  = ST_CUR_OUTSTOCK-ZZNO
ZZPOS = ST_CUR_OUTSTOCK-ZZPOS
BUDAT = ST_CUR_OUTSTOCK-BUDAT
BINARY SEARCH.
IF ( SY-SUBRC = 0 ).
LST_DUMMY_OUTSTOCK-MENGE = LST_DUMMY_OUTSTOCK-MENGE +
ST_CUR_OUTSTOCK-MENGE.

MODIFY I_DUMMY_OUTSTOCK
FROM LST_DUMMY_OUTSTOCK
INDEX SY-TABIX
TRANSPORTING MENGE.

ELSE.
APPEND ST_CUR_OUTSTOCK TO I_DUMMY_OUTSTOCK.
ENDIF.
ENDDO.

ENDFORM.                    " SUM_SYUKKO
*&---------------------------------------------------------------------*
*&      Form  GET_ZYUTYU_TEXT
*&---------------------------------------------------------------------*
*       受注明細テキスト
*----------------------------------------------------------------------*
*  -->  I_VBELN      受注伝票番号
*  -->  I_POSNR      受注伝票明細
*  <--  O_DLNUM      DLINK発注伝票番号
*----------------------------------------------------------------------*
FORM GET_ZYUTYU_TEXT USING    I_VBELN TYPE VBAK-VBELN
I_POSNR TYPE VBAP-POSNR
CHANGING O_DLNUM LIKE ZNEN002-ZZNO.

DATA:
DAT_INLINES   LIKE TLINE OCCURS 1 WITH HEADER LINE,
DAT_LINES     LIKE TLINE OCCURS 1 WITH HEADER LINE,
DAT_NAME      LIKE THEAD-TDNAME,
DAT_VBELN(10) TYPE N,
DAT_POSNR(6)  TYPE N.

*-- 受注伝票番号明細番号設定
CLEAR:
DAT_VBELN,
DAT_POSNR,
O_DLNUM.

DAT_VBELN = I_VBELN.
DAT_POSNR = I_POSNR.
CONCATENATE DAT_VBELN DAT_POSNR INTO DAT_NAME.

CALL FUNCTION CNS_READ_TEXT_INLINE
EXPORTING
ID              = CNS_ID
INLINE_COUNT    = CNS_INLINE
LANGUAGE        = CNS_LANG
NAME            = DAT_NAME
OBJECT          = CNS_OBJECT
TABLES
INLINES         = DAT_INLINES
LINES           = DAT_LINES
EXCEPTIONS
ID              = 1
LANGUAGE        = 2
NAME            = 3
NOT_FOUND       = 4
OBJECT          = 5
REFERENCE_CHECK = 6
OTHERS          = 7.

CLEAR:
DAT_INLINES.
READ TABLE DAT_INLINES
INDEX 1.
IF ( SY-SUBRC = 0 ).
O_DLNUM = DAT_INLINES-TDLINE+30(10).
ENDIF.

ENDFORM.                    " GET_POCOKEY
*&---------------------------------------------------------------------*
*&      Form  SET_OUTPUT
*&---------------------------------------------------------------------*
*       データ設定
*----------------------------------------------------------------------*
FORM SET_OUTPUT.

DATA:
LW_MATKL TYPE MARA-MATKL,      "品目グループ
LW_COUNT TYPE ZNEN002-ZCOUNT.  "カウンタ変数

*-- 当月入庫残内部テーブルのソート
SORT I_CUR_STOCK BY MATNR WERKS.
*-- 各変数の処理
CLEAR:
ST_ZNEN002.

* 在庫0データを削除
DELETE I_CUR_STOCK WHERE MENGE <= 0.

*-- 在庫内訳内部テーブルへ設定(在庫数量がプラスのもののみ)
LOOP AT I_CUR_STOCK INTO ST_CUR_STOCK.

* 品目、プラントごとに処理
AT NEW WERKS.
*     各情報をクリア
CLEAR:
LW_MATKL.
* カウンタ初期値セット
LW_COUNT = 1.

*     品目・プラントの最新カウンタを取得
PERFORM GET_COUNT USING    ST_CUR_STOCK-MATNR
ST_CUR_STOCK-WERKS
CHANGING LW_COUNT.

* 品目情報取得
PERFORM GET_HINMOKU_DATA USING    ST_CUR_STOCK-MATNR
CHANGING LW_MATKL.
ENDAT.
*   在庫内訳内部テーブルへ設定
PERFORM SET_ST_ZNEN002 USING    ST_CUR_STOCK
LW_MATKL
CHANGING LW_COUNT
ST_ZNEN002.
APPEND ST_ZNEN002 TO I_ZNEN002.

* 品目、プラントごとのカウント最大値をZNEN009に格納する
AT END OF WERKS.
ST_ZNEN009-MATNR  = ST_CUR_STOCK-MATNR.
ST_ZNEN009-WERKS  = ST_CUR_STOCK-WERKS.
ST_ZNEN009-ZCOUNT = LW_COUNT.
MODIFY ZNEN009 FROM ST_ZNEN009.
ENDAT.
ENDLOOP.

ENDFORM.                    " SET_OUTPUT
*&---------------------------------------------------------------------*
*&      Form  SET_TABLE
*&---------------------------------------------------------------------*
*       テーブル更新処理
*----------------------------------------------------------------------*
FORM SET_TABLE.

*-- ２回目以降稼動する場合は以前のデータは削除
DELETE FROM ZNEN002
WHERE ZANDT = DAT_END_DAY
AND MATNR IN MATNR
AND WERKS IN WERKS
.
*-- テーブルに在庫内部テーブルをINSERT
INSERT ZNEN002
FROM TABLE I_ZNEN002
ACCEPTING DUPLICATE KEYS .
IF ( SY-SUBRC = 0 ).
COMMIT WORK AND WAIT.
ELSE.
ROLLBACK WORK.
MESSAGE ID CNS_00
TYPE CNS_S
NUMBER CNS_NO
WITH TEXT-E07.
*                'テーブルの更新に失敗しました。'.
ENDIF.

ENDFORM.                    " SET_TABLE
*&---------------------------------------------------------------------*
*&      Form  A1F_GET_EBELN
*&---------------------------------------------------------------------*
*       購買伝票番号、明細の取得
*----------------------------------------------------------------------*
FORM A1F_GET_EBELN .

* ローカルデータ宣言
DATA:
LW_VERKF TYPE EKKO-VERKF.                       "仕入先営業担当者

LOOP AT I_CUR_OUTSTOCK INTO ST_CUR_OUTSTOCK.
*   初期化
CLEAR: LW_VERKF.

*   出荷伝票から受注伝票番号、明細を取得
PERFORM GET_LIPS_MKPF
USING    ST_CUR_OUTSTOCK-MBLNR  "入出庫伝票番号
CHANGING ST_CUR_OUTSTOCK-KDAUF  "受注伝票番号
ST_CUR_OUTSTOCK-KDPOS  "受注伝票明細番号
LW_VERKF.

*   購買伝票番号、明細を取得
PERFORM GET_EKKO_EKPO
USING LW_VERKF                  "仕入先営業担当
CHANGING ST_CUR_OUTSTOCK-EBELN  "購買伝票番号
ST_CUR_OUTSTOCK-EBELP  "購買伝票明細番号
ST_CUR_OUTSTOCK-PSTYP. "明細カテゴリ

* 購買発注伝票番号と明細番号をZZNO、ZZPOSに格納
ST_CUR_OUTSTOCK-ZZNO  = ST_CUR_OUTSTOCK-EBELN.
ST_CUR_OUTSTOCK-ZZPOS = ST_CUR_OUTSTOCK-EBELP.
*     内部テーブルを更新
MODIFY I_CUR_OUTSTOCK FROM ST_CUR_OUTSTOCK.
ENDLOOP.

IF NOT P_PSTYP IS INITIAL.
*   対象外データを削除
DELETE I_CUR_OUTSTOCK WHERE PSTYP = P_PSTYP.   " 明細カテゴリ
ENDIF.

ENDFORM.                    " A1F_GET_EBELN
*&---------------------------------------------------------------------*
*&      Form  GET_LIPS_MKPF
*&---------------------------------------------------------------------*
*       出荷伝票を元に受注伝票情報を取得
*----------------------------------------------------------------------*
*      -->I_MBLNR  入出庫伝票番号
*      <--O_KDAUF  受注伝票番号
*      <--O_KDPOS  受注明細番号
*      <--O_VERKF  受注伝票＋明細番号
*----------------------------------------------------------------------*
FORM GET_LIPS_MKPF USING    I_MBNLR TYPE MKPF-MBLNR
CHANGING O_KDAUF TYPE MSEG-KDAUF
O_KDPOS TYPE MSEG-KDPOS
O_VERKF TYPE EKKO-VERKF.

SELECT  X~VGBEL
X~VGPOS
INTO (O_KDAUF,
O_KDPOS)
UP TO 1 ROWS
FROM      MKPF AS A
INNER JOIN LIPS AS X
ON A~XBLNR = X~VBELN
WHERE A~MBLNR = I_MBNLR.
ENDSELECT.

*   検索のため受注伝票番号＋明細を結合する。
CONCATENATE O_KDAUF
O_KDPOS
INTO O_VERKF
SEPARATED BY SPACE.

ENDFORM.                    " GET_LIPS_MKPF
*&---------------------------------------------------------------------*
*&      Form  GET_EKKO_EKPO
*&---------------------------------------------------------------------*
*       購買伝票情報の取得
*----------------------------------------------------------------------*
*      -->I_VERKF  受注伝票番号＋受注明細番号
*      <--O_EBELN  購買伝票番号
*      <--O_EBELP  購買伝票明細番号
*      <--O_PSTYP  明細カテゴリ
*----------------------------------------------------------------------*
FORM GET_EKKO_EKPO USING    I_VERKF TYPE EKKO-VERKF
CHANGING O_EBELN TYPE EKKO-EBELN
O_EBELP TYPE EKPO-EBELP
O_PSTYP TYPE EKPO-PSTYP.

* ローカルデータ宣言
DATA:
LW_EBELN TYPE EKKO-EBELN,
LW_EBELP TYPE EKPO-EBELP,
LW_PSTYP TYPE EKPO-PSTYP.

SELECT X~EBELN                        " 購買伝票番号
X~EBELP                        " 購買伝票明細
X~PSTYP                        " 明細カテゴリ
INTO (LW_EBELN,
LW_EBELP,
LW_PSTYP)
UP TO 1 ROWS
FROM      EKKO AS A
INNER JOIN EKPO AS X
ON A~EBELN = X~EBELN
WHERE A~VERKF = I_VERKF       " 仕入先営業担当者
AND X~LOEKZ = SPACE.          " 削除フラグ
ENDSELECT.

IF SY-SUBRC = 0.
*     取得した購買伝票番号、明細をセットする。
O_EBELN = LW_EBELN.      " 購買伝票番号
O_EBELP = LW_EBELP.      " 購買伝票明細
O_PSTYP = LW_PSTYP.      " 明細カテゴリ
ENDIF.

ENDFORM.                    " GET_EKKO_EKPO
*&---------------------------------------------------------------------*
*&      Form  GET_HINMOKU_DATA
*&---------------------------------------------------------------------*
*       品目データ取得
*----------------------------------------------------------------------*
*      -->I_MATNR  品目データ
*      <--O_MATKL  品目グループ
*----------------------------------------------------------------------*
FORM GET_HINMOKU_DATA USING    I_MATNR TYPE MARA-MATNR
CHANGING O_MATKL TYPE MARA-MATKL.

* 品目グループ取得
SELECT  SINGLE  MATKL
FROM  MARA
INTO  O_MATKL
WHERE  MATNR   =  I_MATNR.

ENDFORM.                    " GET_HINMOKU_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_COUNT
*&---------------------------------------------------------------------*
*       品目、プラントごとの最新カウンタ取得
*----------------------------------------------------------------------*
*      -->I_MATNR    品目コード
*      -->I_WERKS    プラント
*      <--O_COUNTER  カウンタ
*----------------------------------------------------------------------*
FORM GET_COUNT USING    I_MATNR   TYPE MARA-MATNR
I_WERKS   TYPE MSEG-WERKS
CHANGING O_COUNTER TYPE ZNEN002-ZCOUNT.

CLEAR:
ST_ZNEN009.

SELECT  SINGLE *
FROM  ZNEN009
INTO  ST_ZNEN009
WHERE  MATNR  =  I_MATNR
AND  WERKS  =  I_WERKS.

IF ( SY-SUBRC = 0 ).
O_COUNTER = ST_ZNEN009-ZCOUNT.
ENDIF.

ENDFORM.                    " GET_COUNT
*&---------------------------------------------------------------------*
*&      Form  SET_ST_ZNEN002
*&---------------------------------------------------------------------*
*       在庫内訳テーブル格納
*----------------------------------------------------------------------*
*      -->I_STOCK    在庫データ
*      -->I_MATKL    品目グループ
*      <--O_COUNT    カウンタ
*      <--O_ZNEN002  在庫内訳データ
*----------------------------------------------------------------------*
FORM SET_ST_ZNEN002 USING    I_STOCK   LIKE ST_CUR_STOCK
I_MATKL   TYPE MARA-MATKL
CHANGING O_COUNT   TYPE ZNEN009-ZCOUNT
O_ZNEN002 LIKE ST_ZNEN002.

O_ZNEN002-MATNR = I_STOCK-MATNR.      "品目コード
O_ZNEN002-WERKS = I_STOCK-WERKS.      "プラント
O_ZNEN002-ZANDT = DAT_END_DAY.        "勘定年月
O_ZNEN002-ZZNO  = I_STOCK-ZZNO.       "発注番号
O_ZNEN002-ZZPOS = I_STOCK-ZZPOS.      "発注明細番号

* 在庫移動データ
IF NOT ( S_IDIT1 IS INITIAL AND
S_IDIK1 IS INITIAL AND
S_IDSK1 IS INITIAL AND
S_IDNK1 IS INITIAL AND
S_IDTK1 IS INITIAL ).
IF I_STOCK-BWART IN S_IDIT1 AND
I_STOCK-KZBEW IN S_IDIK1 AND
I_STOCK-KZVBR IN S_IDSK1 AND
I_STOCK-KZZUG IN S_IDNK1 AND
I_STOCK-UMSOK IN S_INTK1.
MOVE I_STOCK-MBLNR TO O_ZNEN002-ZZNO.
MOVE I_STOCK-ZEILE TO O_ZNEN002-ZZPOS+1(4).
ENDIF.
ENDIF.
IF NOT ( S_IDIT2 IS INITIAL AND
S_IDIK2 IS INITIAL AND
S_IDSK2 IS INITIAL AND
S_IDNK2 IS INITIAL AND
S_IDTK2 IS INITIAL ).
IF I_STOCK-BWART IN S_IDIT1 AND
I_STOCK-KZBEW IN S_IDIK1 AND
I_STOCK-KZVBR IN S_IDSK1 AND
I_STOCK-KZZUG IN S_IDNK1 AND
I_STOCK-UMSOK IN S_INTK1.
MOVE I_STOCK-MBLNR TO O_ZNEN002-ZZNO.
MOVE I_STOCK-ZEILE TO O_ZNEN002-ZZPOS+1(4).
ENDIF.
ENDIF.

*   カウンタ設定
IF ( I_STOCK-ZCOUNT IS INITIAL ).
O_COUNT = O_COUNT + 1.
O_ZNEN002-ZCOUNT = O_COUNT.
ELSE.
O_ZNEN002-ZCOUNT = I_STOCK-ZCOUNT.
ENDIF.
O_ZNEN002-VKBUR     = I_STOCK-VKBUR.  "営業所(部)
O_ZNEN002-VKGRP     = I_STOCK-VKGRP.  "営業ｸﾞﾙｰﾌﾟ(課)
O_ZNEN002-PERNR     = I_STOCK-PERNR.  "担当者
O_ZNEN002-KUNNR     = I_STOCK-KUNNR.  "得意先コード
O_ZNEN002-MENGE     = I_STOCK-MENGE.  "在庫数量

O_ZNEN002-NYUKO_DAT = I_STOCK-BUDAT.  "入庫年月
O_ZNEN002-MATKL     = I_MATKL.        "品目グループ
O_ZNEN002-BWART     = I_STOCK-BWART.  "移動タイプ
O_ZNEN002-SOBKZ     = I_STOCK-SOBKZ.  "特殊在庫区分

*-- 在庫発注の組織取得
IF ( O_ZNEN002-ZZNO  <> SPACE AND
O_ZNEN002-VKBUR =  SPACE AND
O_ZNEN002-VKGRP =  SPACE AND
O_ZNEN002-PERNR =  SPACE AND
O_ZNEN002-KUNNR =  SPACE ).

PERFORM LABNR CHANGING O_ZNEN002.
ENDIF.

ENDFORM.                    " SET_ST_ZNEN002
*&---------------------------------------------------------------------*
*&      Form  labnr
*&---------------------------------------------------------------------*
*       在庫発注の組織取得
*----------------------------------------------------------------------*
*  <--  O_ZNEN002      在庫内訳データ
*----------------------------------------------------------------------*
FORM LABNR CHANGING O_ZNEN002 LIKE ST_ZNEN002.

SELECT SINGLE *
FROM EKPO
WHERE EBELN = O_ZNEN002-ZZNO AND
EBELP = O_ZNEN002-ZZPOS.
IF ( SY-SUBRC = 0 AND
EKPO-LABNR(1) = CNS_Z ).
MOVE EKPO-LABNR+1(4)  TO O_ZNEN002-VKBUR.
MOVE EKPO-LABNR+5(4)  TO O_ZNEN002-VKGRP.
MOVE EKPO-LABNR+9(4)  TO O_ZNEN002-PERNR.
MOVE EKPO-LABNR+13(6) TO O_ZNEN002-KUNNR.
ENDIF.

ENDFORM.                    " LABNR
