*&---------------------------------------------------------------------*
*& Report YN010300                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*
*& プログラム：自動照合                                                *
*& 作者      ：梁憶                                                    *
*& 作成日期  ：2006/06/14                                              *
*&---------------------------------------------------------------------*
*& 処理概要&                                                           *
*& 外部データと自社データを照合し、処理結果をアドオンテーブルに格納する*
*&                                                                     *
*&---------------------------------------------------------------------*
*&  変更履歴 ： 2007/02/28 Vertion2
*&  変更内容 ： Version2 (2007/02/28 R.Tomoeda)
*&           ：・支払基準日更新のデフォルトチェックをはずす
*&           ：・照合番号/照合日/照合ユーザ追加
*&           ：・選択画面にコメントを追加
*&  変更履歴 ： 2007/12/03
*&  変更内容 ： 機能改善No.187対応 (2007/12/03 NEGISHI)
*&           ：・バックグラウンド実行時のスプール出力幅を255バイトに変更
*&  変更内容 ： 無効構文修正対応   (2008/01/22 ARII)
*&           ：・STOP命令を置き換え
*&  変更履歴 ： 2009/01/13
*&  変更内容 ： テンプレート改善ＰＪ (2009/01/13 OODUCHI)
*&           ：・パフォーマンス改善
*&---------------------------------------------------------------------*
*>>>2007/12/03 バックグラウンド実行時のスプール出力幅を255バイトに変更
*REPORT YN010300  NO STANDARD PAGE HEADING
*                 MESSAGE-ID YN01.
REPORT YN010300  NO STANDARD PAGE HEADING LINE-SIZE 255
MESSAGE-ID YN01.
*<<<2007/12/03 バックグラウンド実行時のスプール出力幅を255バイトに変更
*-- 構築定義 --
* データエレメント取得用
TYPES: BEGIN OF GTS_DATAELEMENT,
TBLID    LIKE DD03L-TABNAME,                "テーブル名
FLDNM    LIKE DD03L-FIELDNAME,              "項目名
ROLLNM   LIKE DD03L-ROLLNAME,               "データエレメント
END OF GTS_DATAELEMENT.
* 画面項目名称取得用
TYPES: BEGIN OF GTS_SCRINFO,
TBLID    LIKE DD03L-TABNAME,                "テーブル名
FLDNM    LIKE DD03L-FIELDNAME,              "項目名
CAPNM    LIKE DFIES-SCRTEXT_L,              "画面項目名称
END OF GTS_SCRINFO.
* 会社コードチェック用
TYPES: BEGIN OF GTS_BUKRS,
BUKRS    LIKE T001-BUKRS,                   "会社コード
END OF GTS_BUKRS.
* 処理対象得意先コード格納用
TYPES: BEGIN OF GTS_KNB1,
BUKRS    LIKE KNB1-BUKRS,                   "会社コード
KUNNR    LIKE KNB1-KUNNR,                   "得意先コード
END OF GTS_KNB1.
* 処理対象仕入先コード格納用
TYPES: BEGIN OF GTS_LFB1,
BUKRS    LIKE LFB1-BUKRS,                   "会社コード
LIFNR    LIKE LFB1-LIFNR,                   "仕入先コード
END OF GTS_LFB1.
* 外部データ格納用
TYPES: BEGIN OF GTS_GAIBUDATA,
BUKRS    LIKE YN110-BUKRS,                  "会社コード
VRFCTON  LIKE YN110-VRFCTON,                "得意先コード
CKEY1    LIKE YN110-CKEY1,                  "照合キー1
CKEY2    LIKE YN110-CKEY2,                  "照合キー2
CKEY3    LIKE YN110-CKEY3,                  "照合キー3
CKEY4    LIKE YN110-CKEY4,                  "照合キー4
CKEY5    LIKE YN110-CKEY5,                  "照合キー5
CKEY6    LIKE YN110-CKEY6,                  "照合キー6
CKEY7    LIKE YN110-CKEY7,                  "照合キー7
CKEY8    LIKE YN110-CKEY8,                  "照合キー8
WAERS    LIKE YN110-WAERS,                  "通貨コード
GJAHR    LIKE YN110-GJAHR,                  "伝票会計年度
SLPDOC   LIKE YN110-SLPDOC,                 "伝票番号
DTLDOC   LIKE YN110-DTLDOC,                 "伝票明細番号
KNQUAN   LIKE YN110-KNQUAN,                 "数量
KNITXAMT LIKE YN110-KNITXAMT,               "税抜金額
KNETXAMT LIKE YN110-KNETXAMT,               "税込金額
CSTS     LIKE YN110-CSTS,                   "照合ステータス
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC   LIKE YN110-CHKDOC,                 "照合番号
CHKDAT   LIKE YN110-CHKDOC,                 "照合日
CHKUSR   LIKE YN110-CHKDOC,                 "照合ユーザ
*&Ver2 対応 2007/02/28 <<<
END OF GTS_GAIBUDATA.
* 自社データ格納用
TYPES: BEGIN OF GTS_JISYADATA,
BUKRS    LIKE YN120-BUKRS,                  "会社コード
VRFCTON  LIKE YN120-VRFCTON,                "得意先コード
CKEY1    LIKE YN120-CKEY1,                  "照合キー1
CKEY2    LIKE YN120-CKEY2,                  "照合キー2
CKEY3    LIKE YN120-CKEY3,                  "照合キー3
CKEY4    LIKE YN120-CKEY4,                  "照合キー4
CKEY5    LIKE YN120-CKEY5,                  "照合キー5
CKEY6    LIKE YN120-CKEY6,                  "照合キー6
CKEY7    LIKE YN120-CKEY7,                  "照合キー7
CKEY8    LIKE YN120-CKEY8,                  "照合キー8
WAERS    LIKE YN120-WAERS,                  "通貨コード
GJAHR    LIKE YN120-GJAHR,                  "伝票会計年度
SLPDOC   LIKE YN120-SLPDOC,                 "伝票番号
DTLDOC   LIKE YN120-DTLDOC,                 "伝票明細番号
KNQUAN   LIKE YN120-KNQUAN,                 "数量
KNITXAMT LIKE YN120-KNITXAMT,               "税抜金額
KNETXAMT LIKE YN120-KNETXAMT,               "税込金額
CSTS     LIKE YN120-CSTS,                   "照合ステータス
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC   LIKE YN110-CHKDOC,                 "照合番号
CHKDAT   LIKE YN110-CHKDOC,                 "照合日
CHKUSR   LIKE YN110-CHKDOC,                 "照合ユーザ
*&Ver2 対応 2007/02/28 <<<
END OF GTS_JISYADATA.

*-- テーブル定義 --
TABLES: YN110,                                       "外部データ(売上)
YN120.                                       "自社データ(売上)

*-- 内部テーブル定義 --
DATA: GDT_DATAELEMENT TYPE STANDARD TABLE OF GTS_DATAELEMENT,
"データエレメント取得用
GDT_SCRINFO     TYPE STANDARD TABLE OF GTS_SCRINFO,
"画面項目名称取得用
GDT_BUKRS       TYPE STANDARD TABLE OF GTS_BUKRS,
"会社コードチェック用
*-- 20090113 UPD STA 自社データ、外部テーブルをソートテーブルに変更
GDT_JISYADATA   TYPE SORTED TABLE OF GTS_JISYADATA
WITH NON-UNIQUE KEY BUKRS VRFCTON CKEY1 CKEY2
CKEY3 CKEY4 CKEY5 CKEY6 CKEY7 CKEY8 WAERS,
"自社データ格納用
GDT_GAIBUDATA   TYPE SORTED TABLE OF GTS_GAIBUDATA
WITH NON-UNIQUE KEY BUKRS VRFCTON CKEY1 CKEY2
CKEY3 CKEY4 CKEY5 CKEY6 CKEY7 CKEY8 WAERS.
"外部データ格納用
*-- 20090113 UPD END
*-- 20090113 INS STA
TYPES : BEGIN OF GTS_LOCK,
BUKRS   LIKE YN110-BUKRS,
VRFCTON LIKE YN110-VRFCTON,
END OF GTS_LOCK.
DATA : GDT_JISYA_LOCK   TYPE SORTED TABLE OF GTS_LOCK
WITH NON-UNIQUE KEY BUKRS VRFCTON,
"自社データ取引先ロック用
GDT_GAIBU_LOCK   TYPE SORTED TABLE OF GTS_LOCK
WITH NON-UNIQUE KEY BUKRS VRFCTON,
"外部データ取引先ロック用
GDS_JISYA_LOCK   TYPE GTS_LOCK,            "自社データ格納用
GDS_GAIBU_LOCK   TYPE GTS_LOCK.            "外部データ格納用

TYPES: TYP_T_DD03P TYPE STANDARD TABLE OF DD03P.

* エレメント内部テーブル
DATA: T_DD03P_YN110 TYPE TYP_T_DD03P,
T_DD03P_YN120 TYPE TYP_T_DD03P,
T_DD03P_YN210 TYPE TYP_T_DD03P,
T_DD03P_YN220 TYPE TYP_T_DD03P.

*-- 20090113 INS END

*-- 作業領域定義 --
DATA: GDS_DATAELEMENT TYPE GTS_DATAELEMENT,      "データエレメント取得用
GDS_SCRINFO     TYPE GTS_SCRINFO,              "画面項目名称取得用
GDS_BUKRS       TYPE GTS_BUKRS,              "会社コードチェック用
GDS_JISYADATA   TYPE GTS_JISYADATA,            "自社データ格納用
GDS_GAIBUDATA   TYPE GTS_GAIBUDATA.            "外部データ格納用

*-- 変数定義 --
DATA: GDF_GAIBU_TBL(5)  TYPE C,                      "外部テーブル
GDF_JISYA_TBL(5)  TYPE C,                      "自社テーブル
GDF_SYOGO_TBL(5)  TYPE C,                      "照合マスタテーブル
GDF_SYOGO_LINE    LIKE SY-TABIX,               "照合マスタ情報件数
GDF_GAIBU_LINE    LIKE SY-TABIX,               "外部情報件数
GDF_JISYA_LINE    LIKE SY-TABIX,               "自社情報件数
GDF_SYOGO_STATUS  LIKE YN110-CSTS,             "照合ステータス
GDF_LINE_CNT      LIKE SY-TABIX,               "変更した件数
GDF_TAISYO_KENSU  LIKE SY-TABIX,               "対象件数
GDF_SYOGO_KENSU_J LIKE SY-TABIX,               "照合件数(自社)
GDF_SYOGO_KENSU_G LIKE SY-TABIX,               "照合件数(外部)
GDF_SYOGO_KENSU   LIKE SY-TABIX,               "照合件数
GDF_SRSG_KENSU_J  LIKE SY-TABIX,               "数量差異件数(自社)
GDF_SRSG_KENSU_G  LIKE SY-TABIX,               "数量差異件数(外部)
GDF_SRSG_KENSU    LIKE SY-TABIX,               "数量差異件数
GDF_TKSG_KENSU_J  LIKE SY-TABIX,               "単価差異件数(自社)
GDF_TKSG_KENSU_G  LIKE SY-TABIX,               "単価差異件数(外部)
GDF_TKSG_KENSU    LIKE SY-TABIX,               "単価差異件数
GDF_GBDN_KENSU    LIKE SY-TABIX,               "外部データなし件数
GDF_JSDN_KENSU    LIKE SY-TABIX,               "自社データなし件数
GDF_KNITXAMT      LIKE YN110-KNITXAMT,         "税抜差額格納用
GDF_KNETXAMT      LIKE YN110-KNETXAMT,         "税込差額格納用
GDF_KNQUAN        LIKE YN110-KNQUAN,           "数量の差格納用
GDF_PRINT_FLAG(1) TYPE C.                "件数／エラー出力用フラグ

*-- 定数定義 --
CONSTANTS: GCF_C_X(1)         TYPE C VALUE 'X',      "'X'
GCF_C_ZERO(1)      TYPE C VALUE '0',      "'0'
GCF_C_ONE(1)       TYPE C VALUE '1',      "'1'
GCF_C_TWO(1)       TYPE C VALUE '2',      "'2'
GCF_C_THREE(1)     TYPE C VALUE '3',      "'3'
GCF_C_FOUR(1)      TYPE C VALUE '4',      "'4'
GCF_C_FIVE(1)      TYPE C VALUE '5',      "'5'
*-- 20090113 INS STA
GCF_C_SIX(1)       TYPE C VALUE '6',      "'6'
*-- 20090113 INS END
GCF_C_SEVEN(1)     TYPE C VALUE '7',      "'7'
GCF_C_EIGHT(1)     TYPE C VALUE '8',      "'8'
GCF_I_ZERO         TYPE I VALUE '0',      "0
GCF_I_ONE          TYPE I VALUE '1',      "1
GCF_I_TNY_SEVEN    TYPE I VALUE '27',     "27
GCF_C_DEFAULT(7)   TYPE C VALUE 'DEFAULT',"'DEFAULT'
GCF_PGM_ID(8)      TYPE C VALUE 'YN010300',
"'YN010300'
GCF_TBL_DD03L(5)   TYPE C VALUE 'DD03L',  "'DD03L'
GCF_GAIBU_TBL_U(5) TYPE C VALUE 'YN110',  "外部データ(売上)
GCF_JISYA_TBL_U(5) TYPE C VALUE 'YN120',  "自社データ(売上)
GCF_SYOGO_TBL_U(5) TYPE C VALUE 'YN130',  "照合マスタ(売上)
GCF_GAIBU_TBL_S(5) TYPE C VALUE 'YN210',  "外部データ(仕入)
GCF_JISYA_TBL_S(5) TYPE C VALUE 'YN220',  "自社データ(仕入)
GCF_SYOGO_TBL_S(5) TYPE C VALUE 'YN230',  "照合マスタ(仕入)
GCF_VRFCT1_LOW     LIKE DYNPREAD-FIELDNAME
VALUE 'P_VRFCT1-LOW',   "'P_VRFCT1-LOW'
GCF_VRFCT1_HIGH    LIKE DYNPREAD-FIELDNAME
VALUE 'P_VRFCT1-HIGH',  "'P_VRFCT1-HIGH'
GCF_VRFCT2_LOW     LIKE DYNPREAD-FIELDNAME
VALUE 'P_VRFCT2-LOW',   "'P_VRFCT2-LOW'
GCF_VRFCT2_HIGH    LIKE DYNPREAD-FIELDNAME
VALUE 'P_VRFCT2-HIGH',  "'P_VRFCT2-HIGH'
GCF_VRFCTON(7)     TYPE C VALUE 'VRFCTON'."'VRFCTON'

* 照合ステータス
CONSTANTS: C_CSTS_INIT                  TYPE C VALUE '1',
C_CSTS_NO_EXTERNAL           TYPE C VALUE '2',
C_CSTS_NO_INTERNAL           TYPE C VALUE '3',
C_CSTS_DIFFERENT_QUANTITY    TYPE C VALUE '4',
C_CSTS_DIFFERENT_PRICE       TYPE C VALUE '5',
C_CSTS_OK                    TYPE C VALUE '7'.

* 売上／仕入区分
CONSTANTS: C_MODE_SALES                 TYPE C VALUE '1',
C_MODE_PURCHASE              TYPE C VALUE '2'.

CONSTANTS: C_RC_CODE_ERROR         LIKE SY-SUBRC VALUE '9',
C_RC_CODE_DB_ERROR      LIKE SY-SUBRC VALUE '8',
C_RC_CODE_NOT_EXIST     LIKE SY-SUBRC VALUE '4',
C_RC_CODE_NO_AUTHORITY  LIKE SY-SUBRC VALUE '5'.

* 売上／仕入区分
DATA: P_MODE TYPE C,
OUTPUT_FLAG TYPE C,
RC_CODE LIKE SY-SUBRC .

*-- 20090113 UPD STA 画面項目定義方法をYN010400と合わせる
*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
* 売上/仕入区分
SELECTION-SCREEN BEGIN OF BLOCK BK1 WITH FRAME TITLE TEXT-T01.
SELECTION-SCREEN BEGIN OF LINE.
* 売上照合
PARAMETERS P_SALES RADIOBUTTON GROUP RAD1 DEFAULT 'X'
USER-COMMAND RADIO.
SELECTION-SCREEN COMMENT 4(18) TEXT-T02.
* 仕入照合
PARAMETERS P_PRCHS RADIOBUTTON GROUP RAD1.
SELECTION-SCREEN COMMENT 26(18) TEXT-T03.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK BK1.

* パラメータ定義、照合対象データの取得
INCLUDE YN01_YN010300_0000.

* 処理オプション
SELECTION-SCREEN BEGIN OF BLOCK BK4 WITH FRAME TITLE TEXT-T06.
PARAMETERS P_PG TYPE C AS CHECKBOX.
SELECTION-SCREEN BEGIN OF BLOCK BK5 WITH FRAME TITLE TEXT-T07.
SELECT-OPTIONS P_CPUDT FOR YN110-UPDDAT.
*&Ver2 対応 2007/02/28 >>> 支払基準日更新のデフォルトチェックをはずす
PARAMETERS P_OVWRT TYPE C AS CHECKBOX. "DEFAULT 'X'.
*&Ver2 対応 2007/02/28 <<<
SELECTION-SCREEN END OF BLOCK BK5.
SELECTION-SCREEN END OF BLOCK BK4.
*-- 20090113 UPD END 画面項目定義方法をYN010400と合わせる

* 自社データ取込
INCLUDE YN01_YN010200.
* 照合
INCLUDE YN01_YN010400_0001.

*-- 20090113 INS STA 画面項目定義方法をYN010400と合わせる
*&---------------------------------------------------------------------*
*&   Event LOAD-Of-PROGRAM
*&---------------------------------------------------------------------*
LOAD-Of-PROGRAM.

* 出力項目定義取得
PERFORM GET_TABLE_FIELDS.
*-- 20090113 INS END 画面項目定義方法をYN010400と合わせる

*&---------------------------------------------------------------------*
*& EVENT INITIALIZATION                                                *
*&---------------------------------------------------------------------*
INITIALIZATION.
* 初期処理
PERFORM INIT.

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VRFCT1-LOW.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING GCF_VRFCT1_LOW.

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VRFCT1-HIGH.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING GCF_VRFCT1_HIGH.

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VRFCT2-LOW.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING GCF_VRFCT2_LOW.

*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VRFCT2-HIGH.
PERFORM RUNTIME_VRFCT_F4HELP_CHANGE USING GCF_VRFCT2_HIGH.

*&---------------------------------------------------------------------*
*& EVENT AT SELECTION-SCREEN OUTPUT                                    *
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN OUTPUT.
IF P_SALES = 'X'.
P_MODE = C_MODE_SALES.
ELSEIF P_PRCHS = 'X'.
P_MODE = C_MODE_PURCHASE.
ENDIF.
*-- 20090113 UPD STA 画面項目定義方法をYN010400と合わせる
* 選択画面の項目名称の初期設定
PERFORM SET_DYNPRO_TEXT.
*-- 20090113 UPD END 画面項目定義方法をYN010400と合わせる

*&---------------------------------------------------------------------*
*& EVENT AT SELECTION-SCREEN                                           *
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN.
CASE SY-UCOMM.
WHEN 'RADIO'.
*-- 20090113 UPD STA 画面項目定義方法をYN010400と合わせる
* 選択画面の項目名称の再設定
*      PERFORM CAPTION_SET.
*-- 20090113 UPD END 画面項目定義方法をYN010400と合わせる
WHEN OTHERS.
* 入力チェック
PERFORM CHECK.
ENDCASE.

*&---------------------------------------------------------------------*
*& EVENT AT START-OF-SELECTION                                         *
*&---------------------------------------------------------------------*
START-OF-SELECTION.
* 自社データ取込の実行
IF P_PG = GCF_C_X.
PERFORM YN010200_MAIN.
ENDIF.

* 照合マスタの自動照合許容範囲の取得
PERFORM GET_T_COMPARE_RANGE.
IF RC_CODE <> 0.
EXIT.
ENDIF.
* 照合対象データの取得
PERFORM SYOGO_DATA_GET.
*-- 20090113 MOV STA ロック処理をデータ取得後に移動
* テーブルのロック
PERFORM TABLE_LOCK.
*-- 20090113 MOV END
* 集計処理
PERFORM SET_T_COMPARE.
* チェック処理
PERFORM CHECK_T_COMPARE.
* 照合処理
PERFORM COMPARE.
* 内部テーブル更新
PERFORM SYOGO_DATA_UPDATE.
* テーブルの更新
PERFORM TABLE_UPDATE.
* コミット処理
COMMIT WORK.
* テーブルロックの解除
PERFORM TABLE_UNLOCK.
* 結果出力
OUTPUT_FLAG = '2'.
PERFORM RESULT_PRINT.

*&---------------------------------------------------------------------*
*&      Form  INIT
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM INIT.
* 初期化
CLEAR: GDS_DATAELEMENT,
GDS_SCRINFO,
GDS_BUKRS,
GDS_JISYADATA,
GDS_GAIBUDATA,
GDS_JISYA_LOCK,
GDS_GAIBU_LOCK.

REFRESH: GDT_DATAELEMENT,
GDT_SCRINFO,
GDT_BUKRS,
GDT_JISYADATA,
GDT_GAIBUDATA,
GDT_JISYA_LOCK,
GDT_GAIBU_LOCK.

GDF_SYOGO_LINE    = GCF_I_ZERO.
GDF_GAIBU_LINE    = GCF_I_ZERO.
GDF_JISYA_LINE    = GCF_I_ZERO.
GDF_LINE_CNT      = GCF_I_ZERO.
GDF_TAISYO_KENSU  = GCF_I_ZERO.
GDF_SYOGO_KENSU_J = GCF_I_ZERO.
GDF_SYOGO_KENSU_G = GCF_I_ZERO.
GDF_SYOGO_KENSU   = GCF_I_ZERO.
GDF_SRSG_KENSU_J  = GCF_I_ZERO.
GDF_SRSG_KENSU_G  = GCF_I_ZERO.
GDF_SRSG_KENSU    = GCF_I_ZERO.
GDF_TKSG_KENSU_J  = GCF_I_ZERO.
GDF_TKSG_KENSU_G  = GCF_I_ZERO.
GDF_TKSG_KENSU    = GCF_I_ZERO.
GDF_GBDN_KENSU    = GCF_I_ZERO.
GDF_JSDN_KENSU    = GCF_I_ZERO.
GDF_PRINT_FLAG    = GCF_C_ZERO.
ENDFORM.                    " INIT

*&---------------------------------------------------------------------*
*&      Form  CHECK
*&---------------------------------------------------------------------*
*       入力チェック
*----------------------------------------------------------------------*
FORM CHECK.
* 会社コードのチェック
IF P_BUKRS1-LOW <> SPACE.
SELECT COUNT(*)                                  "会社コード
FROM T001
WHERE BUKRS = P_BUKRS1-LOW.
IF SY-SUBRC <> 0.
MESSAGE E750 WITH P_BUKRS1-LOW.
ENDIF.
ENDIF.
IF P_BUKRS2-LOW <> SPACE.
SELECT COUNT(*)                                  "会社コード
FROM T001
WHERE BUKRS = P_BUKRS2-LOW.
IF SY-SUBRC <> 0.
MESSAGE E750 WITH P_BUKRS2-LOW.
ENDIF.
ENDIF.
SELECT BUKRS                                       "会社コード
FROM T001
APPENDING TABLE GDT_BUKRS
WHERE BUKRS IN P_BUKRS1.
IF SY-SUBRC <> 0.
MESSAGE E762.
ENDIF.
SELECT BUKRS                                       "会社コード
FROM T001
APPENDING TABLE GDT_BUKRS
WHERE BUKRS IN P_BUKRS2.
IF SY-SUBRC <> 0.
MESSAGE E762.
ENDIF.
*-- 20090113 INS STA
SORT GDT_BUKRS BY BUKRS.
DELETE ADJACENT DUPLICATES FROM GDT_BUKRS.
*-- 20090113 INS END
* 権限チェック
IF P_SALES = GCF_C_X.
LOOP AT GDT_BUKRS
INTO GDS_BUKRS.
AUTHORITY-CHECK OBJECT 'F_KNA1_BUK'
ID 'BUKRS' FIELD GDS_BUKRS-BUKRS
ID 'ACTVT' DUMMY.
IF SY-SUBRC <> 0.
MESSAGE E751 WITH GDS_BUKRS-BUKRS.
ENDIF.
ENDLOOP.
ENDIF.
IF P_PRCHS = GCF_C_X.
LOOP AT GDT_BUKRS
INTO GDS_BUKRS.
AUTHORITY-CHECK OBJECT 'F_LFA1_BUK'
ID 'BUKRS' FIELD GDS_BUKRS-BUKRS
ID 'ACTVT' DUMMY.
IF SY-SUBRC <> 0.
MESSAGE E751 WITH GDS_BUKRS-BUKRS.
ENDIF.
ENDLOOP.
ENDIF.
DATA: L_VRFCT LIKE YN110-VRFCTON.
* 取引先コードのチェック
PERFORM CHECK_VRFCTON_RANGE TABLES   P_VRFCT1
CHANGING L_VRFCT.
IF NOT L_VRFCT IS INITIAL.
IF P_SALES = 'X'.
MESSAGE E752 WITH L_VRFCT.
ENDIF.
IF P_PRCHS = 'X'.
MESSAGE E753 WITH L_VRFCT.
ENDIF.
ENDIF.
PERFORM CHECK_VRFCTON_RANGE TABLES   P_VRFCT2
CHANGING L_VRFCT.
IF NOT L_VRFCT IS INITIAL.
IF P_SALES = 'X'.
MESSAGE E752 WITH L_VRFCT.
ENDIF.
IF P_PRCHS = 'X'.
MESSAGE E753 WITH L_VRFCT.
ENDIF.
ENDIF.
* 利益センタのチェック
IF P_PRCTR1-LOW <> SPACE.
SELECT COUNT(*)                                  "利益センタ
FROM CEPC AS A
INNER JOIN TKA02 AS B
ON A~KOKRS = B~KOKRS
WHERE A~PRCTR = P_PRCTR1-LOW
AND B~BUKRS IN P_BUKRS1.
IF SY-SUBRC <> 0.
MESSAGE E761 WITH P_PRCTR1-LOW.
ENDIF.
ENDIF.
IF P_PRCTR2-LOW <> SPACE.
SELECT COUNT(*)                                  "利益センタ
FROM CEPC AS A
INNER JOIN TKA02 AS B
ON A~KOKRS = B~KOKRS
WHERE A~PRCTR = P_PRCTR2-LOW
AND B~BUKRS IN P_BUKRS2.
IF SY-SUBRC <> 0.
MESSAGE E761 WITH P_PRCTR2-LOW.
ENDIF.
ENDIF.
ENDFORM.                    " CHECK

*&---------------------------------------------------------------------*
*&      Form  TABLE_LOCK
*&---------------------------------------------------------------------*
*       テーブルのロック
*----------------------------------------------------------------------*
FORM TABLE_LOCK.
DATA: L_USER LIKE SY-MSGV1.

*-- 20090113 INS STA
* 取得データからロック対象のキーテーブル作成
*-- 自社データ
LOOP AT GDT_JISYADATA INTO GDS_JISYADATA.
GDS_JISYA_LOCK-BUKRS   = GDS_JISYADATA-BUKRS.
GDS_JISYA_LOCK-VRFCTON = GDS_JISYADATA-VRFCTON.
INSERT GDS_JISYA_LOCK INTO TABLE GDT_JISYA_LOCK.
ENDLOOP.
DELETE ADJACENT DUPLICATES FROM GDT_JISYA_LOCK.

*-- 外部データ
LOOP AT GDT_GAIBUDATA INTO GDS_GAIBUDATA.
GDS_GAIBU_LOCK-BUKRS   = GDS_GAIBUDATA-BUKRS.
GDS_GAIBU_LOCK-VRFCTON = GDS_GAIBUDATA-VRFCTON.
INSERT GDS_GAIBU_LOCK INTO TABLE GDT_GAIBU_LOCK.
ENDLOOP.
DELETE ADJACENT DUPLICATES FROM GDT_GAIBU_LOCK.
*-- 20090113 INS END

*-- 20090113 UPD STA LOOPする内部テーブルを変更
* ＤＢテーブルのロック
IF P_SALES = GCF_C_X.
LOOP AT GDT_GAIBU_LOCK
INTO GDS_GAIBU_LOCK.
CALL FUNCTION 'ENQUEUE_EY_YN110'
EXPORTING
VRFCTON              = GDS_GAIBU_LOCK-VRFCTON
BUKRS                = GDS_GAIBU_LOCK-BUKRS
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
L_USER = SY-MSGV1.
IF SY-SUBRC <> 0.
MESSAGE I756 WITH GDF_GAIBU_TBL L_USER.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.

LOOP AT GDT_JISYA_LOCK
INTO GDS_JISYA_LOCK.
CALL FUNCTION 'ENQUEUE_EY_YN120'
EXPORTING
VRFCTON              = GDS_JISYA_LOCK-VRFCTON
BUKRS                = GDS_JISYA_LOCK-BUKRS
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
L_USER = SY-MSGV1.
IF SY-SUBRC <> 0.
MESSAGE I756 WITH GDF_JISYA_TBL L_USER.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.
ENDIF.

IF P_PRCHS = GCF_C_X.
LOOP AT GDT_GAIBU_LOCK
INTO GDS_GAIBU_LOCK.
CALL FUNCTION 'ENQUEUE_EY_YN210'
EXPORTING
VRFCTON              = GDS_GAIBU_LOCK-VRFCTON
BUKRS                = GDS_GAIBU_LOCK-BUKRS
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
L_USER = SY-MSGV1.
IF SY-SUBRC <> 0.
MESSAGE I756 WITH GDF_GAIBU_TBL L_USER.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.

LOOP AT GDT_JISYA_LOCK
INTO GDS_JISYA_LOCK.
CALL FUNCTION 'ENQUEUE_EY_YN220'
EXPORTING
VRFCTON              = GDS_JISYA_LOCK-VRFCTON
BUKRS                = GDS_JISYA_LOCK-BUKRS
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
L_USER = SY-MSGV1.
IF SY-SUBRC <> 0.
MESSAGE I756 WITH GDF_JISYA_TBL L_USER.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.
ENDIF.
*-- 20090113 UPD END
ENDFORM.                    " TABLE_LOCK

*&---------------------------------------------------------------------*
*&      Form  TABLE_UPDATE
*&---------------------------------------------------------------------*
*       テーブルの更新
*----------------------------------------------------------------------*
FORM TABLE_UPDATE.
IF P_SALES = GCF_C_X.
LOOP AT GDT_GAIBUDATA INTO GDS_GAIBUDATA
WHERE NOT CSTS IS INITIAL.
UPDATE YN110
SET CSTS    = GDS_GAIBUDATA-CSTS            "照合ステータス
UPDDAT  = SY-DATUM                      "更新日
UPDTIM  = SY-UZEIT                      "更新時刻
UPDUSR  = SY-UNAME                      "更新ユーザ
UPDPRG  = SY-REPID                      "更新プログラム
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC  = GDS_GAIBUDATA-CHKDOC          "照合番号
CHKDAT  = GDS_GAIBUDATA-CHKDAT          "照合日
CHKUSR  = GDS_GAIBUDATA-CHKUSR          "照合ユーザ
*&Ver2 対応 2007/02/28 <<<
WHERE GJAHR   = GDS_GAIBUDATA-GJAHR
AND SLPDOC  = GDS_GAIBUDATA-SLPDOC
AND DTLDOC  = GDS_GAIBUDATA-DTLDOC
AND BUKRS   = GDS_GAIBUDATA-BUKRS
AND VRFCTON = GDS_GAIBUDATA-VRFCTON.
*-- 20090113 DEL STA 更新キーとしては不要
*         AND CKEY1   = GDS_GAIBUDATA-CKEY1
*         AND CKEY2   = GDS_GAIBUDATA-CKEY2
*         AND CKEY3   = GDS_GAIBUDATA-CKEY3
*         AND CKEY4   = GDS_GAIBUDATA-CKEY4
*         AND CKEY5   = GDS_GAIBUDATA-CKEY5
*         AND CKEY6   = GDS_GAIBUDATA-CKEY6
*         AND CKEY7   = GDS_GAIBUDATA-CKEY7
*         AND CKEY8   = GDS_GAIBUDATA-CKEY8.
*-- 20090113 DEL END
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE I758 WITH GDF_GAIBU_TBL.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.

LOOP AT GDT_JISYADATA INTO GDS_JISYADATA
WHERE NOT CSTS IS INITIAL.
UPDATE YN120
SET CSTS    = GDS_JISYADATA-CSTS            "照合ステータス
UPDDAT  = SY-DATUM                      "更新日
UPDTIM  = SY-UZEIT                      "更新時刻
UPDUSR  = SY-UNAME                      "更新ユーザ
UPDPRG  = SY-REPID                      "更新プログラム
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC  = GDS_JISYADATA-CHKDOC          "照合番号
CHKDAT  = GDS_JISYADATA-CHKDAT          "照合日
CHKUSR  = GDS_JISYADATA-CHKUSR          "照合ユーザ
*&Ver2 対応 2007/02/28 <<<
WHERE GJAHR   = GDS_JISYADATA-GJAHR
AND SLPDOC  = GDS_JISYADATA-SLPDOC
AND DTLDOC  = GDS_JISYADATA-DTLDOC
AND BUKRS   = GDS_JISYADATA-BUKRS
AND VRFCTON = GDS_JISYADATA-VRFCTON.
*-- 20090113 DEL STA 更新キーとしては不要
*         AND CKEY1   = GDS_JISYADATA-CKEY1
*         AND CKEY2   = GDS_JISYADATA-CKEY2
*         AND CKEY3   = GDS_JISYADATA-CKEY3
*         AND CKEY4   = GDS_JISYADATA-CKEY4
*         AND CKEY5   = GDS_JISYADATA-CKEY5
*         AND CKEY6   = GDS_JISYADATA-CKEY6
*         AND CKEY7   = GDS_JISYADATA-CKEY7
*         AND CKEY8   = GDS_JISYADATA-CKEY8.
*-- 20090113 DEL END
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE I758 WITH GDF_JISYA_TBL.
LEAVE LIST-PROCESSING.
ENDIF.
ENDLOOP.
ENDIF.

IF P_PRCHS = GCF_C_X.
LOOP AT GDT_GAIBUDATA INTO GDS_GAIBUDATA
WHERE NOT CSTS IS INITIAL.
UPDATE YN210
SET CSTS    = GDS_GAIBUDATA-CSTS            "照合ステータス
UPDDAT  = SY-DATUM                      "更新日
UPDTIM  = SY-UZEIT                      "更新時刻
UPDUSR  = SY-UNAME                      "更新ユーザ
UPDPRG  = SY-REPID                      "更新プログラム
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC  = GDS_GAIBUDATA-CHKDOC          "照合番号
CHKDAT  = GDS_GAIBUDATA-CHKDAT          "照合日
CHKUSR  = GDS_GAIBUDATA-CHKUSR          "照合ユーザ
*&Ver2 対応 2007/02/28 <<<
WHERE GJAHR   = GDS_GAIBUDATA-GJAHR
AND SLPDOC  = GDS_GAIBUDATA-SLPDOC
AND DTLDOC  = GDS_GAIBUDATA-DTLDOC
AND BUKRS   = GDS_GAIBUDATA-BUKRS
AND VRFCTON = GDS_GAIBUDATA-VRFCTON.
*-- 20090113 DEL STA 更新キーとしては不要
*         AND CKEY1   = GDS_GAIBUDATA-CKEY1
*         AND CKEY2   = GDS_GAIBUDATA-CKEY2
*         AND CKEY3   = GDS_GAIBUDATA-CKEY3
*         AND CKEY4   = GDS_GAIBUDATA-CKEY4
*         AND CKEY5   = GDS_GAIBUDATA-CKEY5
*         AND CKEY6   = GDS_GAIBUDATA-CKEY6
*         AND CKEY7   = GDS_GAIBUDATA-CKEY7
*         AND CKEY8   = GDS_GAIBUDATA-CKEY8.
*-- 20090113 DEL END
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE I758 WITH GDF_GAIBU_TBL.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.

LOOP AT GDT_JISYADATA INTO GDS_JISYADATA
WHERE NOT CSTS IS INITIAL.
UPDATE YN220
SET CSTS    = GDS_JISYADATA-CSTS            "照合ステータス
UPDDAT  = SY-DATUM                      "更新日
UPDTIM  = SY-UZEIT                      "更新時刻
UPDUSR  = SY-UNAME                      "更新ユーザ
UPDPRG  = SY-REPID                      "更新プログラム
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
CHKDOC  = GDS_JISYADATA-CHKDOC          "照合番号
CHKDAT  = GDS_JISYADATA-CHKDAT          "照合日
CHKUSR  = GDS_JISYADATA-CHKUSR          "照合ユーザ
*&Ver2 対応 2007/02/28 <<<
WHERE GJAHR   = GDS_JISYADATA-GJAHR
AND SLPDOC  = GDS_JISYADATA-SLPDOC
AND DTLDOC  = GDS_JISYADATA-DTLDOC
AND BUKRS   = GDS_JISYADATA-BUKRS
AND VRFCTON = GDS_JISYADATA-VRFCTON.
*-- 20090113 DEL STA 更新キーとしては不要
*         AND CKEY1   = GDS_JISYADATA-CKEY1
*         AND CKEY2   = GDS_JISYADATA-CKEY2
*         AND CKEY3   = GDS_JISYADATA-CKEY3
*         AND CKEY4   = GDS_JISYADATA-CKEY4
*         AND CKEY5   = GDS_JISYADATA-CKEY5
*         AND CKEY6   = GDS_JISYADATA-CKEY6
*         AND CKEY7   = GDS_JISYADATA-CKEY7
*         AND CKEY8   = GDS_JISYADATA-CKEY8.
*-- 20090113 DEL END
IF SY-SUBRC <> 0.
ROLLBACK WORK.
MESSAGE I758 WITH GDF_JISYA_TBL.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.
ENDIF.
ENDFORM.                    " TABLE_UPDATE

*&---------------------------------------------------------------------*
*&      Form  TABLE_UNLOCK
*&---------------------------------------------------------------------*
*       テーブルのロック解除
*----------------------------------------------------------------------*
FORM TABLE_UNLOCK.
IF P_SALES = GCF_C_X.
LOOP AT GDT_GAIBU_LOCK
INTO GDS_GAIBU_LOCK.
CALL FUNCTION 'DEQUEUE_EY_YN110'
EXPORTING
VRFCTON              = GDS_GAIBU_LOCK-VRFCTON
BUKRS                = GDS_GAIBU_LOCK-BUKRS
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
IF SY-SUBRC <> 0.
MESSAGE I763 WITH GDF_GAIBU_TBL.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.

LOOP AT GDT_JISYA_LOCK
INTO GDS_JISYA_LOCK.
CALL FUNCTION 'DEQUEUE_EY_YN120'
EXPORTING
VRFCTON              = GDS_JISYA_LOCK-VRFCTON
BUKRS                = GDS_JISYA_LOCK-BUKRS
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
IF SY-SUBRC <> 0.
MESSAGE I763 WITH GDF_JISYA_TBL.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.
ENDIF.

IF P_PRCHS = GCF_C_X.
LOOP AT GDT_GAIBU_LOCK
INTO GDS_GAIBU_LOCK.
CALL FUNCTION 'DEQUEUE_EY_YN210'
EXPORTING
VRFCTON              = GDS_GAIBU_LOCK-VRFCTON
BUKRS                = GDS_GAIBU_LOCK-BUKRS
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
IF SY-SUBRC <> 0.
MESSAGE I763 WITH GDF_GAIBU_TBL.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.
ENDLOOP.

LOOP AT GDT_JISYA_LOCK
INTO GDS_JISYA_LOCK.
CALL FUNCTION 'DEQUEUE_EY_YN220'
EXPORTING
VRFCTON              = GDS_JISYA_LOCK-VRFCTON
BUKRS                = GDS_JISYA_LOCK-BUKRS
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
IF SY-SUBRC <> 0.
MESSAGE I763 WITH GDF_JISYA_TBL.
LEAVE LIST-PROCESSING.
ENDIF.
ENDLOOP.
ENDIF.
ENDFORM.                    " TABLE_UNLOCK

*&---------------------------------------------------------------------*
*&      Form  RESULT_PRINT
*&---------------------------------------------------------------------*
*       結果出力
*----------------------------------------------------------------------*
FORM RESULT_PRINT.

DATA: LS_LOGGER LIKE LINE OF T_COMPARE_LOGGER,
LS_COUNTER LIKE LINE OF T_COMPARE_COUNTER.
DATA: L_LINES TYPE I,
L_SKIP TYPE I.

IF P_PG = 'X'.
SKIP.
SKIP.
ENDIF.

* タイトルの出力
PERFORM OUTPUT_TITLE.

DESCRIBE TABLE T_COMPARE_LOGGER LINES L_LINES.
IF L_LINES > 0.
GDF_PRINT_FLAG = GCF_C_ONE.
PERFORM PRINT_TITLE.
L_SKIP = 3.
ELSE.
L_SKIP = 1.
ENDIF.

SORT T_COMPARE_LOGGER BY BUKRS VRFCTON.
LOOP AT T_COMPARE_LOGGER INTO LS_LOGGER.
WRITE: /04 LS_LOGGER-BUKRS,                 "会社コード
15 LS_LOGGER-VRFCTON,               "取引先コード
28 LS_LOGGER-MESSAGE.              "エラー内容
ENDLOOP.

DO L_SKIP TIMES.
SKIP.
ENDDO.

DESCRIBE TABLE T_COMPARE_COUNTER LINES L_LINES.
IF L_LINES > 0.
GDF_PRINT_FLAG = GCF_C_TWO.
PERFORM PRINT_TITLE.
ENDIF.

SORT T_COMPARE_COUNTER BY BUKRS VRFCTON.
LOOP AT T_COMPARE_COUNTER INTO LS_COUNTER.
WRITE: /04  LS_COUNTER-BUKRS,                 "会社コード
15  LS_COUNTER-VRFCTON,               "取引先コード
28  LS_COUNTER-TOTAL,                 "対象件数
39  LS_COUNTER-OK,                    "照合件数
52  LS_COUNTER-DIFFERENT_QUANTITY,    "数量差異件数
65  LS_COUNTER-DIFFERENT_PRICE,       "単価差異件数
84  LS_COUNTER-NO_EXTERNAL,           "外部データなし件数
103 LS_COUNTER-NO_INTERNAL.           "自社データなし件数
ENDLOOP.

DESCRIBE TABLE T_COMPARE_LOGGER LINES L_LINES.
IF L_LINES > 0.
MESSAGE I759.
* 20080122 STOP命令置き換え <<<
LEAVE LIST-PROCESSING.
*        STOP.
* 20080122 <<<
ENDIF.

ENDFORM.                    " RESULT_PRINT

*&---------------------------------------------------------------------*
*&      Form PRINT_TITLE
*&---------------------------------------------------------------------*
*       タイトルの出力
*----------------------------------------------------------------------*
FORM PRINT_TITLE.
IF GDF_PRINT_FLAG = GCF_C_ONE.
WRITE: /04 TEXT-T10,                             "'会社コード'
15 TEXT-T11,                             "'取引先コード'
28 TEXT-T22.                             "'エラー内容'
ULINE.
ENDIF.
IF GDF_PRINT_FLAG = GCF_C_TWO.
WRITE: /04 TEXT-T10,                             "'会社コード'
15 TEXT-T11,                             "'取引先コード'
28 TEXT-T12,                             "'対象件数'
39 TEXT-T13,                             "'照合件数'
50 TEXT-T14,                             "'数量差異件数'
63 TEXT-T15,                             "'単価差異件数'
76 TEXT-T16,                           "'外部データなし件数'
95 TEXT-T17.                           "'自社データなし件数'
ENDIF.
ENDFORM.                    " PRINT_TITLE

*&---------------------------------------------------------------------*
*&      Form PRINT_PAGE_CNT
*&---------------------------------------------------------------------*
*       ページ数の出力
*----------------------------------------------------------------------*
FORM PRINT_PAGE_CNT.
WRITE: /115 TEXT-T23,                              "'ページ:'
123 SY-PAGNO.                              "ページ数
ENDFORM.                    " PRINT_PAGE_CNT
*&---------------------------------------------------------------------*
*&      Form  SET_T_COMPARE
*&---------------------------------------------------------------------*
*       集計処理
*----------------------------------------------------------------------*
FORM SET_T_COMPARE .

DATA: LS_CHECKER LIKE LINE OF T_COMPARE_CHECKER.
DATA: LS_COMPARE TYPE TYP_COMPARE.

REFRESH: T_COMPARE_1, T_COMPARE_2, T_COMPARE_CHECKER.
LOOP AT GDT_GAIBUDATA INTO GDS_GAIBUDATA.
CLEAR: LS_CHECKER, LS_COMPARE.
AT NEW WAERS.
*     集計
SUM.
*     外部データ用照合内部テーブル設定
LS_COMPARE-YNBUKRS = GDS_GAIBUDATA-BUKRS.
LS_COMPARE-YNVRFCTON = GDS_GAIBUDATA-VRFCTON.
LS_COMPARE-YNCKEY1 = GDS_GAIBUDATA-CKEY1.
LS_COMPARE-YNCKEY2 = GDS_GAIBUDATA-CKEY2.
LS_COMPARE-YNCKEY3 = GDS_GAIBUDATA-CKEY3.
LS_COMPARE-YNCKEY4 = GDS_GAIBUDATA-CKEY4.
LS_COMPARE-YNCKEY5 = GDS_GAIBUDATA-CKEY5.
LS_COMPARE-YNCKEY6 = GDS_GAIBUDATA-CKEY6.
LS_COMPARE-YNCKEY7 = GDS_GAIBUDATA-CKEY7.
LS_COMPARE-YNCKEY8 = GDS_GAIBUDATA-CKEY8.
LS_COMPARE-YNWAERS = GDS_GAIBUDATA-WAERS.
LS_COMPARE-YNKNITXAMT = GDS_GAIBUDATA-KNITXAMT.
LS_COMPARE-YNKNETXAMT = GDS_GAIBUDATA-KNETXAMT.
LS_COMPARE-YNKNQUAN = GDS_GAIBUDATA-KNQUAN.
*-- 20090113 UPD STA ハッシュテーブルに変更に伴う修正
*      APPEND LS_COMPARE TO T_COMPARE_1.
INSERT LS_COMPARE INTO TABLE T_COMPARE_1.
*-- 20090113 UPD END
*     照合チェック内部テーブル設定
LS_CHECKER-BUKRS = GDS_GAIBUDATA-BUKRS.
LS_CHECKER-VRFCTON = GDS_GAIBUDATA-VRFCTON.
*      LS_CHECKER-KUBUN = '10'.
LS_CHECKER-WAERS = GDS_GAIBUDATA-WAERS.
COLLECT LS_CHECKER INTO T_COMPARE_CHECKER.
LS_CHECKER-COUNT = 1.
MODIFY TABLE T_COMPARE_CHECKER FROM LS_CHECKER
TRANSPORTING COUNT.
ENDAT.
ENDLOOP.
LOOP AT GDT_JISYADATA INTO GDS_JISYADATA.
CLEAR: LS_CHECKER, LS_COMPARE.
AT NEW WAERS.
*     集計
SUM.
*     外部データ用照合内部テーブル設定
LS_COMPARE-YNBUKRS = GDS_JISYADATA-BUKRS.
LS_COMPARE-YNVRFCTON = GDS_JISYADATA-VRFCTON.
LS_COMPARE-YNCKEY1 = GDS_JISYADATA-CKEY1.
LS_COMPARE-YNCKEY2 = GDS_JISYADATA-CKEY2.
LS_COMPARE-YNCKEY3 = GDS_JISYADATA-CKEY3.
LS_COMPARE-YNCKEY4 = GDS_JISYADATA-CKEY4.
LS_COMPARE-YNCKEY5 = GDS_JISYADATA-CKEY5.
LS_COMPARE-YNCKEY6 = GDS_JISYADATA-CKEY6.
LS_COMPARE-YNCKEY7 = GDS_JISYADATA-CKEY7.
LS_COMPARE-YNCKEY8 = GDS_JISYADATA-CKEY8.
LS_COMPARE-YNWAERS = GDS_JISYADATA-WAERS.
LS_COMPARE-YNKNITXAMT = GDS_JISYADATA-KNITXAMT.
LS_COMPARE-YNKNETXAMT = GDS_JISYADATA-KNETXAMT.
LS_COMPARE-YNKNQUAN = GDS_JISYADATA-KNQUAN.
*-- 20090113 UPD STA ハッシュテーブルに変更に伴う修正
*      APPEND LS_COMPARE TO T_COMPARE_2.
INSERT LS_COMPARE INTO TABLE T_COMPARE_2.
*-- 20090113 UPD END
*     照合チェック内部テーブル設定
LS_CHECKER-BUKRS = GDS_JISYADATA-BUKRS.
LS_CHECKER-VRFCTON = GDS_JISYADATA-VRFCTON.
*      LS_CHECKER-KUBUN = '20'.
LS_CHECKER-WAERS = GDS_JISYADATA-WAERS.
COLLECT LS_CHECKER INTO T_COMPARE_CHECKER.
LS_CHECKER-COUNT = 1.
MODIFY TABLE T_COMPARE_CHECKER FROM LS_CHECKER
TRANSPORTING COUNT.
ENDAT.
ENDLOOP.

ENDFORM.                    " SET_T_COMPARE
*&---------------------------------------------------------------------*
*&      Form  SYOGO_DATA_UPDATE
*&---------------------------------------------------------------------*
*       内部テーブル更新
*----------------------------------------------------------------------*
FORM SYOGO_DATA_UPDATE .

DATA: LS_COMPARE TYPE TYP_COMPARE,
LS_COUNTER LIKE LINE OF T_COMPARE_COUNTER.

REFRESH T_COMPARE_COUNTER.
LOOP AT T_COMPARE_1 INTO LS_COMPARE.
CLEAR LS_COUNTER.
LS_COUNTER-BUKRS = LS_COMPARE-YNBUKRS.
LS_COUNTER-VRFCTON = LS_COMPARE-YNVRFCTON.
LOOP AT GDT_GAIBUDATA INTO GDS_GAIBUDATA
WHERE BUKRS   = LS_COMPARE-YNBUKRS
AND VRFCTON = LS_COMPARE-YNVRFCTON
AND CKEY1   = LS_COMPARE-YNCKEY1
AND CKEY2   = LS_COMPARE-YNCKEY2
AND CKEY3   = LS_COMPARE-YNCKEY3
AND CKEY4   = LS_COMPARE-YNCKEY4
AND CKEY5   = LS_COMPARE-YNCKEY5
AND CKEY6   = LS_COMPARE-YNCKEY6
AND CKEY7   = LS_COMPARE-YNCKEY7
AND CKEY8   = LS_COMPARE-YNCKEY8
AND WAERS   = LS_COMPARE-YNWAERS.
GDS_GAIBUDATA-CSTS = LS_COMPARE-YNCSTS.
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
GDS_GAIBUDATA-CHKDOC = LS_COMPARE-YNCHKDOC.
GDS_GAIBUDATA-CHKDAT = LS_COMPARE-YNCHKDAT.
GDS_GAIBUDATA-CHKUSR = LS_COMPARE-YNCHKUSR.
*&Ver2 対応 2007/02/28 <<<
MODIFY GDT_GAIBUDATA FROM GDS_GAIBUDATA.
ADD 1 TO LS_COUNTER-TOTAL.
CASE GDS_GAIBUDATA-CSTS.
WHEN C_CSTS_OK.
ADD 1 TO LS_COUNTER-OK.
WHEN C_CSTS_NO_EXTERNAL.
ADD 1 TO LS_COUNTER-NO_EXTERNAL.
WHEN C_CSTS_NO_INTERNAL.
ADD 1 TO LS_COUNTER-NO_INTERNAL.
WHEN C_CSTS_DIFFERENT_QUANTITY.
ADD 1 TO LS_COUNTER-DIFFERENT_QUANTITY.
WHEN C_CSTS_DIFFERENT_PRICE.
ADD 1 TO LS_COUNTER-DIFFERENT_PRICE.
ENDCASE.
ENDLOOP.
COLLECT LS_COUNTER INTO T_COMPARE_COUNTER.
ENDLOOP.

LOOP AT T_COMPARE_2 INTO LS_COMPARE.
CLEAR LS_COUNTER.
LS_COUNTER-BUKRS = LS_COMPARE-YNBUKRS.
LS_COUNTER-VRFCTON = LS_COMPARE-YNVRFCTON.
LOOP AT GDT_JISYADATA INTO GDS_JISYADATA
WHERE BUKRS   = LS_COMPARE-YNBUKRS
AND VRFCTON = LS_COMPARE-YNVRFCTON
AND CKEY1   = LS_COMPARE-YNCKEY1
AND CKEY2   = LS_COMPARE-YNCKEY2
AND CKEY3   = LS_COMPARE-YNCKEY3
AND CKEY4   = LS_COMPARE-YNCKEY4
AND CKEY5   = LS_COMPARE-YNCKEY5
AND CKEY6   = LS_COMPARE-YNCKEY6
AND CKEY7   = LS_COMPARE-YNCKEY7
AND CKEY8   = LS_COMPARE-YNCKEY8
AND WAERS   = LS_COMPARE-YNWAERS.
GDS_JISYADATA-CSTS = LS_COMPARE-YNCSTS.
*&Ver2 対応 2007/02/28 >>> 照合番号/照合日/照合ユーザ追加
GDS_JISYADATA-CHKDOC = LS_COMPARE-YNCHKDOC.
GDS_JISYADATA-CHKDAT = LS_COMPARE-YNCHKDAT.
GDS_JISYADATA-CHKUSR = LS_COMPARE-YNCHKUSR.
*&Ver2 対応 2007/02/28 <<<
MODIFY GDT_JISYADATA FROM GDS_JISYADATA.
ADD 1 TO LS_COUNTER-TOTAL.
CASE GDS_JISYADATA-CSTS.
WHEN C_CSTS_OK.
ADD 1 TO LS_COUNTER-OK.
WHEN C_CSTS_NO_EXTERNAL.
ADD 1 TO LS_COUNTER-NO_EXTERNAL.
WHEN C_CSTS_NO_INTERNAL.
ADD 1 TO LS_COUNTER-NO_INTERNAL.
WHEN C_CSTS_DIFFERENT_QUANTITY.
ADD 1 TO LS_COUNTER-DIFFERENT_QUANTITY.
WHEN C_CSTS_DIFFERENT_PRICE.
ADD 1 TO LS_COUNTER-DIFFERENT_PRICE.
ENDCASE.
ENDLOOP.
COLLECT LS_COUNTER INTO T_COMPARE_COUNTER.
ENDLOOP.

ENDFORM.                    " SYOGO_DATA_UPDATE

*&---------------------------------------------------------------------*
*&      Form RUNTIME_VRFCT_F4HELP_CHANGE
*&---------------------------------------------------------------------*
*       ランタイム環境での得意先コード/仕入先コードＦ４ヘルプの変更
*----------------------------------------------------------------------*
FORM RUNTIME_VRFCT_F4HELP_CHANGE USING LDF_FLD_NM.
* ローカル変数
DATA: LDF_TABNAME   LIKE DFIES-TABNAME,
LDF_FIELDNAME LIKE DFIES-FIELDNAME,
LDT_RTN       LIKE STANDARD TABLE OF DDSHRETVAL,
LDS_RTN       LIKE DDSHRETVAL,
LDF_VALUE     LIKE DYNPREAD-FIELDVALUE,
LDT_DYFIELDS  LIKE STANDARD TABLE OF DYNPREAD,
LDS_DYFIELDS  LIKE DYNPREAD.
DATA: L_DFNAME TYPE HELP_INFO-DYNPROFLD,
L_REPID LIKE SY-REPID,
L_DYNNR LIKE SY-DYNNR.

*-- 20090113 INS STA
* 外部データと自社データのテーブルＩＤの取得
IF P_SALES = GCF_C_X.
GDF_GAIBU_TBL = GCF_GAIBU_TBL_U.
GDF_JISYA_TBL = GCF_JISYA_TBL_U.
ENDIF.
IF P_PRCHS = GCF_C_X.
GDF_GAIBU_TBL = GCF_GAIBU_TBL_S.
GDF_JISYA_TBL = GCF_JISYA_TBL_S.
ENDIF.
*-- 20090113 INS END

LDF_TABNAME = GDF_JISYA_TBL.
LDF_FIELDNAME = GCF_VRFCTON.
L_REPID = SY-REPID.
L_DYNNR = SY-DYNNR.
L_DFNAME = LDF_FLD_NM.

CALL FUNCTION 'F4IF_FIELD_VALUE_REQUEST'
EXPORTING
TABNAME                   = LDF_TABNAME
FIELDNAME                 = LDF_FIELDNAME
DYNPPROG                  = L_REPID
DYNPNR                    = L_DYNNR
DYNPROFIELD               = L_DFNAME
TABLES
RETURN_TAB                = LDT_RTN
EXCEPTIONS
FIELD_NOT_FOUND           = 1
NO_HELP_FOR_FIELD         = 2
INCONSISTENT_HELP         = 3
NO_VALUES_FOUND           = 4
OTHERS                    = 5.

IF SY-SUBRC = 0.
READ TABLE LDT_RTN
INTO LDS_RTN
INDEX GCF_I_ONE.
LDF_VALUE = LDS_RTN-FIELDVAL.
ENDIF.

ENDFORM.                    " RUNTIME_VRFCT_F4HELP_CHANGE
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_TITLE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM OUTPUT_TITLE .

IF OUTPUT_FLAG = '1'.
WRITE: / TEXT-007.
ELSE.
WRITE: / TEXT-008.
ENDIF.
ULINE.

ENDFORM.                    " OUTPUT_TITLE
*&---------------------------------------------------------------------*
*&      Form  CHECK_VRFCTON_RANGE
*&---------------------------------------------------------------------*
*       取引先コード存在チェック
*----------------------------------------------------------------------*
*      -->PT_VRFCTON  取引先コード
*      <--P_EVAL  text
*----------------------------------------------------------------------*
FORM CHECK_VRFCTON_RANGE  TABLES   PT_VRFCTON
CHANGING P_EVAL.

FIELD-SYMBOLS: <FS1>, <FS2>, <FS3>.

CLEAR: P_EVAL.
LOOP AT PT_VRFCTON.
ASSIGN COMPONENT 1 OF STRUCTURE PT_VRFCTON TO <FS1>.
ASSIGN COMPONENT 2 OF STRUCTURE PT_VRFCTON TO <FS2>.
CHECK <FS1> = 'I' AND <FS2> = 'EQ'.
ASSIGN COMPONENT 3 OF STRUCTURE PT_VRFCTON TO <FS3>.
* [売上照合]が選択された場合
IF P_SALES = 'X'.
SELECT COUNT(*) FROM KNB1
WHERE BUKRS IN P_BUKRS1 AND KUNNR = <FS3>.
ENDIF.
* [仕入照合]が選択された場合
IF P_PRCHS = 'X'.
SELECT COUNT(*) FROM LFB1
WHERE BUKRS IN P_BUKRS1 AND LIFNR = <FS3>.
ENDIF.
IF SY-SUBRC <> 0.
P_EVAL = <FS3>.
EXIT.
ENDIF.
ENDLOOP.

ENDFORM.                    " CHECK_VRFCTON_RANGE
*&---------------------------------------------------------------------*
*&      Form  GET_TABLE_FIELDS
*&---------------------------------------------------------------------*
*       項目テキスト取得
*----------------------------------------------------------------------*
FORM GET_TABLE_FIELDS .

PERFORM GET_DDIF_TABL TABLES T_DD03P_YN110
USING  'YN110'.
PERFORM GET_DDIF_TABL TABLES T_DD03P_YN120
USING  'YN120'.
PERFORM GET_DDIF_TABL TABLES T_DD03P_YN210
USING  'YN210'.
PERFORM GET_DDIF_TABL TABLES T_DD03P_YN220
USING  'YN220'.

ENDFORM.                    " GET_TABLE_FIELDS
*&---------------------------------------------------------------------*
*&      Form  GET_DDIF_TBL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_T_DD03P  text
*      -->P_TABNAME   text
*----------------------------------------------------------------------*
FORM GET_DDIF_TABL  TABLES   P_T_DD03P STRUCTURE DD03P
USING    P_TABNAME.

DATA: L_NAME TYPE DDOBJNAME.

REFRESH P_T_DD03P.
L_NAME = P_TABNAME.
CALL FUNCTION 'DDIF_TABL_GET'
EXPORTING
NAME          = L_NAME
LANGU         = SY-LANGU
TABLES
DD03P_TAB     = P_T_DD03P
EXCEPTIONS
ILLEGAL_INPUT = 1
OTHERS        = 2.

IF SY-SUBRC <> 0.
MESSAGE E754 WITH P_TABNAME.
ENDIF.

ENDFORM.                    " GET_DDIF_TBL
*&---------------------------------------------------------------------*
*&      Form  SET_DYNPRO_TEXT
*&---------------------------------------------------------------------*
*       選択画面テキスト動的に設定
*----------------------------------------------------------------------*
FORM SET_DYNPRO_TEXT .

DATA: L_HELP_ID(20) TYPE C,
L_SNAME TYPE STRING,
L_FNAME TYPE STRING,
L_SCR_NAME TYPE STRING,
L_TEXT TYPE STRING.

FIELD-SYMBOLS: <FS> TYPE ANY.

FIELD-SYMBOLS: <FS_T_DD03P> TYPE TYP_T_DD03P.
DATA: L_H_DD03P LIKE LINE OF <FS_T_DD03P>.

CHECK SY-DYNNR = '1000'.
LOOP AT SCREEN.
IF SCREEN-GROUP1 = '020' OR SCREEN-GROUP1 = '010'.
CASE SCREEN-GROUP3.
WHEN 'TXT'.
L_SCR_NAME = SCREEN-NAME.
WHEN 'LOW'.
ASSIGN (SCREEN-NAME) TO <FS>.
DESCRIBE FIELD <FS> HELP-ID L_HELP_ID.
SPLIT L_HELP_ID AT '-' INTO L_SNAME L_FNAME.
CONCATENATE 'T_DD03P_YN' P_MODE SCREEN-GROUP1+1(2)
INTO L_SNAME.
ASSIGN (L_SNAME) TO <FS_T_DD03P>.
READ TABLE <FS_T_DD03P> INTO L_H_DD03P
WITH KEY FIELDNAME = L_FNAME.
IF SY-SUBRC = 0.
ASSIGN (L_SCR_NAME) TO <FS>.
<FS> = L_H_DD03P-DDTEXT.
ELSE.
MESSAGE E764.
ENDIF.
ENDCASE.
ENDIF.
ENDLOOP.

ENDFORM.                    " SET_DYNPRO_TEXT
*Text symbol text・
*007:Own Data Import
*008:Automatic Checking
*201:Currency Code Error
*202:Currency Code of Own Data is unmatched
*203:Currency Code of Out Data is unmatched
*204:Currency Code of Own Data and Out Data is unmatched
*205:Inapplicable data
*M17:Partner
*M18:Company
*M19:Fisc. Yr
*M20:Doc. No.
*M21:Item No.
*M22:Error Text
*M23:Process Table
*M24:Read:
*M25:Created:
*M26:Updated:
*M27:Inapplicable:
*M28:Errors:
*T01:Sales/Purchase
*T02:Sales Checking
*T03:Purchase Checking
*T04:Own Data Selection
*T05:Out Data Selection
*T06:Process Option
*T07:Own Data Import Execution
*T08:Ac Doc Entry Date
*T09:Updata of PaymentBaseline Date
*T10:Company
*T11:Partner
*T12:Applied
*T13:Checked
*T14:Quant diff.
*T15:Unit diff.
*T16:Unfound Out Data
*T17:Unfound Own Data
*T18:Inapplicated data
*T19:Currency Code of Own Data is unmatched
*T20:Currency Code of Out Data is unmatched
*T21:Currency Code of Own Data and Out Data is unmatched
*T22:Error Text
*T23:Pages:
*Selection text・
*P_CPUDT:        Ac Doc Entry Date
*P_OVWRT:        Updata of PaymentBaseline Date
*P_PG:        Own Data Import Excution
