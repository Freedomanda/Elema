************************************************************************
* DOCUMENTATION
* PROGRAM ID   : ZZKURA34
* PROGRAM NAME : 高千穂請求書出力対象登録
* DESCRIPTION  :
* TYPE         : REPORT
* CREATED BY   : K.KAJISA(NDSC)
* DATE         : 2001/02/13
*----------------------------------------------------------------------*
* Change Log
* Date        Author    Contents
* 2002/07/01  s.kurano  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
* 2002/07/06  k.kajisa  編集エラー受け取り機能の破棄
*                       入力ファイルのタブ区切りでの受け取り
* 2009/06/08  d.kodama  得意先マスタ会計テキストについて
*                       任意のテキストIDに対し、入力ファイルからの
*                   　　任意のテキストを登録可能なように変更
* 2012/05/11  k.furuya  ①ローカルファイルアップロードは検索ヘルプを設定
*　　　　　　　　　　　 ②汎用化に伴いプログラム名称を変更
*　　　　　　　　　　　　　「会社コードデータテキスト更新」
*&---------------------------------------------------------------------*
*& YYYY/MM/DD  Programar         Description
*& 2012/10/16  ISID              ES-UP
*& 2013/12/06  GSL(k.tsunose)    電子記録債務対応
*&　　　　　　　　　　　            仕入先の利用者番号一括更新に伴う
*&                               仕入先マスタ会計テキスト更新対応
*& 2014/08/29  ISID18            コードページを"UTF-8"に修正
*& 2015/01/12  ISID11            アップロード時のBOMロジック改修
*  2015/02/03  ISID11            コードページ処理の再修正
************************************************************************
REPORT ZZKURA34  NO STANDARD PAGE HEADING MESSAGE-ID Y1
LINE-SIZE  170
LINE-COUNT  58.

* 選択画面
PARAMETERS P_FILE LIKE RLGRAP-FILENAME.  "入力ﾌｧｲﾙﾊﾟｽ名
PARAMETERS P_UPLOAD RADIOBUTTON GROUP RADI. "ローカルよりアップロード
PARAMETERS P_SERVER RADIOBUTTON GROUP RADI. "サーバファイルを読み込み
PARAMETERS P_CHECK AS CHECKBOX DEFAULT 'X'. "チェックのみ
PARAMETERS P_BUKRS LIKE T001-BUKRS OBLIGATORY. "会社コード
PARAMETERS P_OBJ LIKE THEAD-TDOBJECT OBLIGATORY. "テキストオブジェクト
PARAMETERS P_ID LIKE THEAD-TDID OBLIGATORY. "テキストID
* グローバル変数
DATA: BEGIN OF ST_REC OCCURS 100,            "入力ファイル形式
OBJECT(10)   TYPE C,                   "オブジェクト
ID(4)        TYPE C,                   "テキストID
LANGUAGE(1)  TYPE C,                   "言語
KUNNR(10)    TYPE C,                   "得意先コード
BUKRS(4)     TYPE C,                   "会社コード
VKORG(4)     TYPE C,                   "販売組織
VTWEG(2)     TYPE C,                   "流通チャネル
SPART(2)     TYPE C,                   "製品部門
NO(4)        TYPE N,                   "連番
TDFORMAT(2)  TYPE C,                   "タグ列
TDLINE(132)  TYPE C,                   "テキスト行(一列は72文字)
END OF ST_REC.
DATA: TB_REC LIKE STANDARD TABLE OF ST_REC  WITH HEADER LINE.
DATA  TB_TLINE LIKE STANDARD TABLE OF TLINE WITH HEADER LINE.
TYPES: BEGIN OF ST_IN1,
*        edit_err(1) TYPE c, "編集エラー     "2002/07/06 DEL
KSCHL(4) TYPE C,    "メッセージタイプ
VKORG(4) TYPE C,    "販売組織
KUNNR(10) TYPE C,   "得意先コード
PARVW(2) TYPE C,    "取引先機能
NACHA(1) TYPE C,    "メッセージ送信媒体
VSZTP(1) TYPE C,    "ディスパッチ時刻
SPRAS(1) TYPE C,    "メッセージ言語
*2009/06/08 append start
TDLINE(132) TYPE C,  "テキスト行
*2009/06/08 append end
END OF ST_IN1.
DATA W_IN1 TYPE ST_IN1.
DATA: WK_THEAD LIKE THEAD,
WK_NAME  LIKE THEAD-TDNAME,
WK_ZERO(10) TYPE N.                    "ゼロ埋め項目
DATA: CNT_TOTAL TYPE P,                      "入力件数
CNT_OK    TYPE P,                      "OK件数
CNT_ERR   TYPE P.                      "ERR件数
* Add ES-UP 2012/10/16 -->
*-----------------------------------------------------------------------
*  固定値
*-----------------------------------------------------------------------
****START UPD 2014/08/29 ISID18****
*CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
**** START DEL 2015/02/03 ISID11 ****
*CONSTANTS CNS_UTF TYPE STRING VALUE `UTF-8`.
**** END DEL 2015/02/03 ISID11 ****
****END UPD 2014/08/29 ISID18****
* Add ES-UP 2012/10/16 <--
*----------------------------------------------------------------------*
INITIALIZATION.
GET PARAMETER ID 'BUK' FIELD P_BUKRS.
P_ID = 'ZK01'.
P_OBJ = 'KNB1'.

AT SELECTION-SCREEN.
IF P_SERVER = 'X' AND P_FILE IS INITIAL.
MESSAGE E400 WITH '入力ファイル名を入力してください'.
ENDIF.

*2012/05/11 ADD START
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
* エラーファイル名の検索ヘルプ
IF P_SERVER <> 'X'.
PERFORM F4HELP_P_OTFILE USING P_FILE.
ENDIF.
*2012/05/11 ADD END


START-OF-SELECTION.
PERFORM INIT_PROC.                         "初期処理
IF P_CHECK = 'X'.
*    PERFORM master_check.                    "チェック
PERFORM MASTER_CHECK USING 'X'.          "チェック MOD 2002/07/06
ELSE.
PERFORM MASTER_CHECK USING ''.           "チェック ADD 2002/07/06
PERFORM MAIN_PROC.                       "メイン処理
ENDIF.

*&---------------------------------------------------------------------*
*&      Form  INIT_PROC
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM INIT_PROC.
* ローカル変数
DATA I_TAB TYPE STANDARD TABLE OF ST_IN1 WITH HEADER LINE.
*2012/05/11 ADD START
DATA : L_FILENAME TYPE STRING.
*2012/05/11 ADD END
* Add ES-UP 2012/10/16 -->
DATA L_CODEPAGE TYPE ABAP_ENCODING.

**** START ADD 2015/02/03 ISID11 ****
DATA:
L_Z_OUTPUT_CP TYPE  ZTEGZZM001-Z_OUTPUT_CP,
L_SAPCODEPAGE TYPE STRING,
L_FLGUTF8  TYPE  FLAG.

CALL FUNCTION 'ZEG_ZZ_GLOBAL_PGM_CONFIG_GET'
EXPORTING
IMPPGM      = SY-REPID
IMPBUKRS    = P_BUKRS
IMPORTING
EXPCODEPAGE = L_Z_OUTPUT_CP
EXPFLGUTF8  = L_FLGUTF8.
**** END ADD 2015/02/03 ISID11 ****

****START UPD 2014/08/29 ISID18****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
**** START UPD 2015/02/03 ISID11 ****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_UTF ).
L_SAPCODEPAGE = L_Z_OUTPUT_CP.
IF L_SAPCODEPAGE IS NOT INITIAL.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( L_SAPCODEPAGE ).
ENDIF.
**** END UPD 2015/02/03 ISID11 ****
****END UPD 2014/08/29 ISID18****
* Add ES-UP 2012/10/16 <--
IF P_SERVER = 'X'.
PERFORM OPEN_FILE
**** START ADD 2015/02/03 ISID11 ****
USING L_CODEPAGE
L_FLGUTF8. "FILEを開く
**** END ADD 2015/02/03 ISID11 ****
PERFORM READ_FILE.                 "FILE読みこみ
ELSE.
*2012/05/11 MOD START  "利用汎用モジュール変更
IF ( P_FILE IS INITIAL ). "初期値の場合は処理を行わない
LEAVE LIST-PROCESSING.
ENDIF.

L_FILENAME = P_FILE. "出力ファイル
*
CALL FUNCTION 'GUI_UPLOAD'
EXPORTING
FILENAME                      = L_FILENAME
*     FILETYPE                      = 'DAT'
HAS_FIELD_SEPARATOR           = 'X'
*     HEADER_LENGTH                 = 0
*     READ_BY_LINE                  = 'X'
* Add ES-UP 2012/10/16 -->
CODEPAGE                  = L_CODEPAGE
* Add ES-UP 2012/10/16 <--
*   IMPORTING
*     FILELENGTH                    =
*     HEADER                        =
TABLES
DATA_TAB                      = I_TAB
EXCEPTIONS
FILE_OPEN_ERROR               = 1
FILE_READ_ERROR               = 2
NO_BATCH                      = 3
GUI_REFUSE_FILETRANSFER       = 4
INVALID_TYPE                  = 5
NO_AUTHORITY                  = 6
UNKNOWN_ERROR                 = 7
BAD_DATA_FORMAT               = 8
HEADER_NOT_ALLOWED            = 9
SEPARATOR_NOT_ALLOWED         = 10
HEADER_TOO_LONG               = 11
UNKNOWN_DP_ERROR              = 12
ACCESS_DENIED                 = 13
DP_OUT_OF_MEMORY              = 14
DISK_FULL                     = 15
DP_TIMEOUT                    = 16
OTHERS                        = 17
.
IF SY-SUBRC <> 0.
"アップロードエラーです
MESSAGE S638.
LEAVE LIST-PROCESSING.
ENDIF.

*    CALL FUNCTION 'UPLOAD'
*         EXPORTING
*              filename                = p_file
*              filetype                = 'DAT'
*              FILETYPE_NO_CHANGE      = 'X'
*         TABLES
*              data_tab                = i_tab
*         EXCEPTIONS
*              conversion_error        = 1
*              invalid_table_width     = 2
*              invalid_type            = 3
*              no_batch                = 4
*              unknown_error           = 5
*              gui_refuse_filetransfer = 6
*              OTHERS                  = 7.
*    IF sy-subrc <> 0.
*      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*    ENDIF.
*2012/05/11 MOD END

REFRESH TB_REC.
LOOP AT I_TAB.
CLEAR TB_REC.
TB_REC-OBJECT = P_OBJ.
TB_REC-ID = P_ID.
TB_REC-LANGUAGE = SY-LANGU.
TB_REC-KUNNR = I_TAB-KUNNR.
TB_REC-BUKRS = P_BUKRS.
TB_REC-NO = '0001'.
TB_REC-TDFORMAT = '*'.
*2009/06/08 modify start
*      tb_rec-tdline = 'X'.
TB_REC-TDLINE = I_TAB-TDLINE.
*2009/06/08 append end
PERFORM EDIT_KUNNR. "ADD 2002/07/06
APPEND TB_REC.
CNT_TOTAL = CNT_TOTAL + 1.
ENDLOOP.
ENDIF.
ENDFORM.                    " INIT_PROC
*
*&---------------------------------------------------------------------*
*&      Form  OPEN_FILE
*&---------------------------------------------------------------------*
*       FILEを開く
*----------------------------------------------------------------------*
FORM OPEN_FILE
**** START ADD 2015/02/03 ISID11 ****
USING  I_CODEPAGE  TYPE ABAP_ENCODING
I_FLGUTF8   TYPE FLAG.
DATA:
L_SUBRC    TYPE SY-SUBRC.
**** END ADD 2015/02/03 ISID11 ****

* Mod ES-UP 2012/10/16 -->

**** START DEL 2014/09/04 ISID19 ****
*  DATA L_CODEPAGE TYPE ABAP_ENCODING.
**** END DEL 2014/09/04 ISID19 ****

****START DEL 2014/08/29 ISID18****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
****END DEL 2014/08/29 ISID18****
* Mod ES-UP 2012/10/16 <--
*入力ファイル
* Mod ES-UP 2012/10/16 -->
*  OPEN DATASET p_file FOR INPUT IN TEXT MODE.

**** START ADD 2015/02/03 ISID11 ****
IF I_FLGUTF8 IS INITIAL.
TRY .
OPEN DATASET P_FILE FOR INPUT
IN LEGACY TEXT MODE CODE PAGE I_CODEPAGE
IGNORING CONVERSION ERRORS.

L_SUBRC = SY-SUBRC.

CATCH CX_SY_CODEPAGE_CONVERTER_INIT.

L_SUBRC = 8.

ENDTRY.
ELSE.
**** END ADD 2015/02/03 ISID11 ****

OPEN DATASET P_FILE FOR INPUT
**** START UPD 2014/08/31 ISID19 ****
*    IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IN TEXT MODE ENCODING UTF-8
**** END UPD 2014/08/31 ISID19 ****
**** START ADD 2015/01/12 ISID11 ****
SKIPPING BYTE-ORDER MARK
**** END ADD 2015/01/12I SID11 ****
IGNORING CONVERSION ERRORS.

**** START ADD 2015/02/03 ISID11 ****
L_SUBRC = SY-SUBRC.
ENDIF.
**** END ADD 2015/02/03 ISID11 ****
* Mod ES-UP 2012/10/16 <--
**** START UPD 2015/02/03 ISID11 ****
*  IF SY-SUBRC <> 0.
IF L_SUBRC <> 0.
**** END UPD 2015/02/03 ISID11 ****
MESSAGE I401 WITH '得意先テキスト長ファイルオープンエラー'
P_FILE.
STOP.
ENDIF.

ENDFORM.                    " OPEN_FILE
*&---------------------------------------------------------------------*
*&      Form  READ_FILE
*&---------------------------------------------------------------------*
*        入力ファイルの読み込み
*----------------------------------------------------------------------*
FORM READ_FILE.
* Mod ES-UP 2012/10/23 -->
*DATA: W_DUMMY(1500),
*      W_S_DUMMY(10),
*      W_TAB TYPE X VALUE '09'.
DATA: W_DUMMY    TYPE STRING,
W_S_DUMMY  TYPE C LENGTH 10.
* Mod ES-UP 2012/10/23 <--
CLEAR CNT_TOTAL.
REFRESH TB_REC.
DO.
CLEAR: TB_REC, W_IN1.
*   READ DATASET p_file INTO tb_rec.
*2002/07/06 MOD START
*    READ DATASET p_file INTO w_in1.
*    IF sy-subrc <> 0.
*      EXIT.
*    ENDIF.
*    tb_rec-object = p_obj.
*    tb_rec-id = p_id.
*    tb_rec-language = sy-langu.
*    tb_rec-kunnr = w_in1-kunnr.
*    tb_rec-bukrs = p_bukrs.
*    tb_rec-no = '0001'.
*    tb_rec-tdformat = '*'.
*    tb_rec-tdline = 'X'.
READ DATASET P_FILE INTO W_DUMMY.
IF SY-SUBRC <> 0.      EXIT.    ENDIF.
* Mod ES-UP 2012/10/16 -->
*       SPLIT W_DUMMY AT W_TAB INTO
SPLIT W_DUMMY AT CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB INTO
* Mod ES-UP 2012/10/16 <--
*       tb_rec-kschl
W_S_DUMMY
TB_REC-VKORG
TB_REC-KUNNR
*       tb_rec-parvw
W_S_DUMMY
*       tb_rec-nacha
W_S_DUMMY
*       tb_rec-vsztp
W_S_DUMMY
*       tb_rec-spras.
W_S_DUMMY
*2009/06/08 append start
TB_REC-TDLINE.
*2009/06/08 append end
TB_REC-OBJECT = P_OBJ.
TB_REC-ID = P_ID.
TB_REC-LANGUAGE = SY-LANGU.
TB_REC-BUKRS = P_BUKRS.
TB_REC-NO = '0001'.
TB_REC-TDFORMAT = '*'.
*2009/06/08 delete start
*       tb_rec-tdline = 'X'.
*2009/06/08 delete end
PERFORM EDIT_KUNNR.
*2002/07/06 MOD END
APPEND TB_REC.
CNT_TOTAL = CNT_TOTAL + 1.
ENDDO.
CLOSE DATASET P_FILE.

ENDFORM.                    " READ_FILE
*&---------------------------------------------------------------------*
*&      Form  MAIN_PROC
*&---------------------------------------------------------------------*
*       メイン処理
*----------------------------------------------------------------------*
FORM MAIN_PROC.
DATA CNT_ERR2 LIKE CNT_ERR." 2002/07/06 ADD
CNT_ERR2 = CNT_ERR."マスタ検索エラー件数の確保
SORT TB_REC BY OBJECT ID  LANGUAGE KUNNR BUKRS VKORG VTWEG SPART NO.
CLEAR: CNT_ERR,CNT_OK.
LOOP AT TB_REC.
ST_REC = TB_REC.
AT NEW SPART.                "キーブレイクしたら
PERFORM CALL_INIT.      "汎用ルーチンINIT_TEXTのコール
ENDAT.
MOVE-CORRESPONDING TB_REC TO TB_TLINE.
APPEND TB_TLINE.
AT END OF SPART.             "キーブレイクしたら
PERFORM CALL_SAVE.      "汎用ルーチンSAVE_TEXTのコール
ENDAT.
ENDLOOP.
CALL FUNCTION 'COMMIT_TEXT'.
*実行結果の出力
*2002/07/06 マスタ検索エラー分反映
CNT_OK  = CNT_OK  - CNT_ERR2.
CNT_ERR = CNT_ERR + CNT_ERR2.
ULINE.
*
WRITE: 01  TEXT-001 ,18 CNT_TOTAL ,TEXT-002.
WRITE: /01 TEXT-003 ,18 CNT_OK    ,TEXT-002.
WRITE: /01 TEXT-004 ,18 CNT_ERR   ,TEXT-002.

ENDFORM.                    " MAIN_PROC
*&---------------------------------------------------------------------*
*&      Form  CALL_INIT
*&---------------------------------------------------------------------*
*       テキスト初期化
*----------------------------------------------------------------------*
FORM CALL_INIT.
*テキストテーブル初期化
REFRESH TB_TLINE.
CLEAR TB_TLINE.
*得意先のゼロ埋め
IF ST_REC-KUNNR CO '1234567890 '.
WK_ZERO = ST_REC-KUNNR.
ST_REC-KUNNR = WK_ZERO.
ENDIF.
*汎用モジュールコール用項目編集
CLEAR WK_NAME.
CASE ST_REC-OBJECT.
WHEN 'KNA1'.
WK_NAME = ST_REC-KUNNR.
WHEN 'KNB1'.
WK_NAME(10)   = ST_REC-KUNNR.
WK_NAME+10(4) = ST_REC-BUKRS.
WHEN 'KNVV'.
WK_NAME(10)   = ST_REC-KUNNR.
WK_NAME+10(4) = ST_REC-VKORG.
WK_NAME+14(2) = ST_REC-VTWEG.
WK_NAME+16(2) = ST_REC-SPART.
* 2013/12/06 ADD START
WHEN 'LFB1'.      "仕入先マスタ対応
WK_NAME(10)   = ST_REC-KUNNR.
WK_NAME+10(4) = ST_REC-BUKRS.
* 2013/12/06 ADD END
ENDCASE.
*汎用モジュールのコール
CALL FUNCTION 'INIT_TEXT'
EXPORTING
ID       = ST_REC-ID
LANGUAGE = ST_REC-LANGUAGE
NAME     = WK_NAME
OBJECT   = ST_REC-OBJECT
IMPORTING
HEADER   = WK_THEAD
TABLES
LINES    = TB_TLINE.

ENDFORM.                    " CALL_INIT
*&---------------------------------------------------------------------*
*&      Form  CALL_SAVE
*&---------------------------------------------------------------------*
*       テキスト登録
*----------------------------------------------------------------------*
FORM CALL_SAVE.

CALL FUNCTION 'SAVE_TEXT'
EXPORTING
HEADER          = WK_THEAD
INSERT          = ''
SAVEMODE_DIRECT = 'X'
TABLES
LINES           = TB_TLINE.
IF SY-SUBRC <> 0.
CNT_ERR = CNT_ERR + 1.
ELSE.
CNT_OK  = CNT_OK + 1.
ENDIF.

ENDFORM.                    " CALL_SAVE
*---------------------------------------------------------------------*
*       FORM master_check                                             *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*FORM master_check.               MOD 2002/07/06
FORM MASTER_CHECK USING FLG_CHK." MOD 2002/07/06
* ローカル変数
DATA W_AKONT LIKE KNB1-AKONT.
* チェック
CLEAR: CNT_ERR, CNT_OK.
* 2013/12/06 ADD START
CASE P_OBJ.
* 得意先の場合
WHEN 'KNB1' OR 'KNA1' OR 'KNVV'.
* 2013/12/06 ADD END
LOOP AT TB_REC.
SELECT SINGLE AKONT
FROM   KNB1
INTO   W_AKONT
WHERE  KUNNR  = TB_REC-KUNNR
AND    BUKRS  = P_BUKRS.
IF SY-SUBRC = 0.
ADD 1 TO CNT_OK.
ELSE.
ADD 1 TO CNT_ERR.
WRITE: / '得意先マスタなし', TB_REC-KUNNR.
ENDIF.
ENDLOOP.
* 仕入先の場合
WHEN 'LFB1'.
LOOP AT TB_REC.
SELECT SINGLE AKONT
FROM   LFB1
INTO   W_AKONT
WHERE  LIFNR  = TB_REC-KUNNR
AND    BUKRS  = P_BUKRS.
IF SY-SUBRC = 0.
ADD 1 TO CNT_OK.
ELSE.
ADD 1 TO CNT_ERR.
WRITE: / '仕入先マスタなし', TB_REC-KUNNR.
ENDIF.
ENDLOOP.
ENDCASE.
* 結果出力
IF FLG_CHK = 'X'.
ULINE.
WRITE: 01  TEXT-001 ,18 CNT_TOTAL ,TEXT-002.
WRITE: /01 TEXT-003 ,18 CNT_OK    ,TEXT-002.
WRITE: /01 TEXT-004 ,18 CNT_ERR   ,TEXT-002.
ENDIF.
ENDFORM.                    "master_check
*&---------------------------------------------------------------------*
*&      Form  EDIT_KUNNR
*&---------------------------------------------------------------------*
*       得意先変換 2002/07/06
*----------------------------------------------------------------------*
FORM EDIT_KUNNR.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT  = TB_REC-KUNNR
IMPORTING
OUTPUT = TB_REC-KUNNR.


ENDFORM.                    " EDIT_KUNNR
*&---------------------------------------------------------------------*
*&      Form  F4HELP_P_OTFILE
*&---------------------------------------------------------------------*
*       ファイルのF4ヘルプ設定
*----------------------------------------------------------------------*
FORM F4HELP_P_OTFILE USING L_FILE.

DATA: L_IT_FNAME     TYPE FILETABLE,
L_SUBRC        TYPE I,
INIT_DIRECTORY TYPE STRING,
WINDOW_TITLE   TYPE STRING,
FILE_FILTER    TYPE STRING,
L_PATH         TYPE STRING.

FILE_FILTER = '*.*'.
L_PATH =  'C:\*.*'.
REFRESH : L_IT_FNAME.
MOVE 'C:\' TO INIT_DIRECTORY.
CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
EXPORTING
WINDOW_TITLE            = WINDOW_TITLE
DEFAULT_FILENAME        = L_PATH
FILE_FILTER             = FILE_FILTER
INITIAL_DIRECTORY       = INIT_DIRECTORY
MULTISELECTION          = ABAP_FALSE
CHANGING
FILE_TABLE              = L_IT_FNAME
RC                      = L_SUBRC
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 1
CNTL_ERROR              = 2
ERROR_NO_GUI            = 3
OTHERS                  = 4.
IF SY-SUBRC <> 0.
ELSE.
IF L_SUBRC = 1.
READ TABLE L_IT_FNAME INTO L_FILE INDEX 1.
ENDIF.
ENDIF.

ENDFORM.                    " F4HELP_P_OTFILE
