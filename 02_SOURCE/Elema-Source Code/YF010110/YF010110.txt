* 2000/01/13 MOD STRAT
*REPORT YF010100
*              LINE-SIZE  120
*              LINE-COUNT 90
REPORT YF010110
MESSAGE-ID Y1
LINE-SIZE  170
LINE-COUNT  58
* 2000/01/13 MOD END
NO STANDARD PAGE HEADING.
************************************************************************
*    財務会計システム（ＦＩ)                                           *
*    ﾌﾟﾛｸﾞﾗﾑ ID ： YF010020                                            *
*    ﾌﾟﾛｸﾞﾗﾑ名  ： 売掛金元帳                                          *
*    処理種別   ： バッチ(ABAP/4)                                      *
*    処理概要   ： ﾊﾞﾘｱﾝﾄにより指定された、得意先ｺｰﾄﾞ・自〜得意先ｺｰﾄﾞ至*
*    より、得意先ﾏｽﾀ（KNA1）を得意先の情報を取得し、得意先毎に伝票番号 *
*    ・自〜伝票番号・至の範囲内のﾚｺｰﾄﾞを、会計：得意先二次ｲﾝﾃﾞｯｸｽ（BSID*
*    ）、得意先二次ｲﾝﾃﾞｯｸｽ（決済明細）（BSAD）より抽出し、得意先ﾏｽﾀ（月*
*    次貸借）（KNC1）、会計伝票明細（BSEG）、転記ｷｰ名（TBSLT）、得意先 *
*    ﾏｽﾀ（会社ｺｰﾄﾞ）（KNB1）、支払条件の説明（T052U）、会計伝票ﾍｯﾀﾞ（BK*
*    PF）より各情報を付加し、売掛金元帳を作成する。                    *
*    但し、得意先ｺｰﾄﾞの指定は任意とし、指定なしの場合は、全件を対象とす*
*    る。伝票日付の指定は月単位で必須とし、指定した範囲が複数月にまたが*
*    る場合はｴﾗｰとする。                                               *
*    また、通貨コードを指定された場合、指定された通貨コードのデータのみ*
*    抽出して出力、指定されなかった場合は全対象とし、通貨コード毎に    *
*    改ページ処理を行なう。                                            *
*    入力       ： 対象取引先年月日、得意先ｺｰﾄﾞ、言語ｺｰﾄﾞ、会社ｺｰﾄﾞ、  *
*                  勘定ｺｰﾄﾞ、通貨コード                                *
*----------------------------------------------------------------------*
*    元PG作成日 ： 1998/11/02                                          *
*    元PG作成者 ： 田坂                                                *
*    変更履歴   ： 1998/12/25 竹内（入力画面変更）                     *
*                  1999/01/07 大屋                                     *
*                    明細が0件のﾃﾞｰﾀについてﾍｯﾀﾞと繰越額を出力する     *
*                    ように修正。                                      *
*                  1999/01/08 大屋                                     *
*                    ﾍｯﾀﾞに対象年月日・自〜対象年月日・至を出力する    *
*                    ように修正。                                      *
*                  1999/01/19 大屋                                     *
*                    支払条件を全桁出力するように修正。                *
*                  1999/02/09 大屋                                     *
*                    明細0件対応の処理を削除する。                     *
*                  2000/01/12 加治佐                                   *
*                    伝票通貨額を国内通貨額に修正。                    *
*                    外貨対応機能追加                                  *
*                    1.帳票ヘッダ＆選択画面に通貨コードを追加          *
*                      出力するデータの通貨コードを絞れるように修正    *
*                    2.帳票明細に国内通貨額&伝票通貨額の両方と         *
*                      換算レートを追加                                *
*                    3.通貨コード毎でも改ページを行なうが,ページNoは   *
*                      クリアしない                                    *
*               2000/05/22 加治佐                                      *
*                      通貨金額作成汎用ﾓｼﾞｭｰﾙの受取を                  *
*                      数値でなく文字列型に修正                        *
*               2000/06/02 加治佐                                      *
*                      通貨コードブレイク時の国内通貨の繰越            *
*                      伝票通貨の残高の出力                            *
*                      国内通貨残高の値を"前月"から"前日まで"に変更    *
*               2000/06/05 加治佐                                      *
*                      換算差損益の出力                                *
*               2000/06/15 k.kajisa(NDSC)                              *
*                      パラメータの初期値をユーザ情報から取得          *
*               2000/07/11 k.kajisa(NDSC)                              *
*                      転記キー'09'の明細は残高算出に含まなくする      *
*&[改定履歴]                                                           *
*& YYYY/MM/DD  Programar         Description                           *
*& 2012/09/12  ISID              ES-UP                                 *
************************************************************************
*
*ﾃｰﾌﾞﾙ定義書
TABLES: BSID,
BSAD,
BSEG,
BKPF,
KNA1,
KNC1,
KNB1,
SKA1,
T001,
T052U,
TBSLT.
*
*内部ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF IN_TABLE1 OCCURS 10,
GJAHR  LIKE  BSEG-GJAHR,
BELNR  LIKE  BSID-BELNR,
BUDAT  LIKE  BSID-BUDAT,
BUZEI  LIKE  BSID-BUZEI,
END OF IN_TABLE1.

DATA: BEGIN OF IN_TABLE2 OCCURS 10,
* 2000/01/12 ADD START 通貨コードの追加
WAERS  LIKE  BKPF-WAERS,
* 2000/01/12 ADD END
BUDAT  LIKE  BKPF-BUDAT,
CPUTM  LIKE  BKPF-CPUTM,
BELNR  LIKE  BSEG-BELNR,
* 2000/01/12 ADD START 換算レートの追加
KURSF  LIKE  BKPF-KURSF,
* 2000/01/12 ADD END
BUZEI  LIKE  BSEG-BUZEI,
BSCHL  LIKE  BSEG-BSCHL,
UMSKZ  LIKE  BSEG-UMSKZ,
SHKZG  LIKE  BSEG-SHKZG,
WRBTR  LIKE  BSEG-WRBTR,
* 2000/01/12 ADD START 国内通貨額の追加
DMBTR  LIKE  BSEG-DMBTR,
* 2000/01/12 ADD END
SGTXT  LIKE  BSEG-SGTXT,
END OF IN_TABLE2.
*
*住所編集ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_ADLESS,
STRAS  LIKE  KNA1-STRAS,
ORT01  LIKE  KNA1-ORT01,
END OF T_ADLESS.
*
*支払条件編集ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_SIHRAI,
WORK1(2) TYPE C,
TEXT1    LIKE T052U-TEXT1,
WORK2(2) TYPE C,
END OF T_SIHRAI.
*
*転記ｷｰﾃｷｽﾄﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_TENKI OCCURS 10.
INCLUDE STRUCTURE TBSLT.
DATA: END OF T_TENKI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*日付編集用エリアの定義
*DATA: BEGIN OF DATE,
*        NEN(4)     TYPE N,
*        TUKI(2)    TYPE N,
*        HI(2)      TYPE N,
*      END   OF DATE.
*1999/01/07 ADD END
*1999/02/09 DEL END

*
*作業用変数定義
DATA: PAGE_CNT      TYPE I,            "ﾍﾟｰｼﾞｶｳﾝﾀ
LINE_CNT      TYPE I,            "明細行ｶｳﾝﾀ
W_GJAHR LIKE BKPF-GJAHR,         "会計年度格納用
W_MONAT LIKE BKPF-MONAT,         "会計期間格納用
W_SPRAS LIKE T002-SPRAS,         "言語ｺｰﾄﾞ格納用
W_BELNR LIKE BSEG-BELNR,         "比較伝票番号用
W_KTOPL LIKE SKA1-KTOPL,         "勘定ｺｰﾄﾞ表用
W_BUDAT LIKE BKPF-BUDAT,         "転記日付用
W_KIN         TYPE P,            "国内通貨額格納用
W_KARI        TYPE P,            "借方合計金額計算用
W_KASI        TYPE P,            "貸方合計金額計算用
W_ZAN         TYPE P,            "残高計算用
W_KURI        TYPE P,            "前月繰越額格納用
* 2000/01/12 ADD START
W_KIN2(10)    TYPE P DECIMALS 5, "伝票通貨額格納用
*2000/05/22 汎用ﾓｼﾞｭｰﾙバグ対応 ADD START
W_KIN_C(17)   TYPE C, "伝票通貨額格納用
*2000/05 汎用ﾓｼﾞｭｰﾙバグ対応 ADD END
W_KARI2(10)   TYPE P DECIMALS 5, "借方合計金額計算用(伝票通貨額)
W_KASI2(10)   TYPE P DECIMALS 5, "貸方合計金額計算用(伝票通貨額)
W_ZAN2(10)    TYPE P DECIMALS 5, "残高計算用(伝票通貨額)
W_KURI2(10)   TYPE P DECIMALS 5,  "前月繰越額格納用(伝票通貨額)
W_TUKA   LIKE BKPF-WAERS,        "通貨コード
W_SEI         TYPE I,             "整数部桁数
W_SYO         LIKE TCURX-CURRDEC, "少数部桁数
W_B_FLG(1)    TYPE C,            "ヘッダブレイク判定(ページ番号)
* 2000/01/12 ADD END
TEKIYO(30)    TYPE C,            "摘要欄格納用
W_TEXT(8)     TYPE C,            "繰越ﾃｷｽﾄ用
KURI_FLG      TYPE C,            "繰越判断用
BRK_FLG       TYPE C.            "ﾌﾞﾚｲｸ判断用
*1999/02/09 DEL START
*1999/01/07 ADD START
*      W_NEN(4)     TYPE N,
*      W_TUKI(2)    TYPE N,
*      C_NEN(4)     TYPE N,
*      C_TUKI(2)    TYPE N,
*      W_DATE       LIKE SY-DATUM.
*1999/01/07 ADD END
*1999/02/09 DEL END
*2000/06/02 ADD START
DATA: BEGIN OF T_D_ZAN OCCURS 10, "伝票通貨残高計算テーブル
SHKZG LIKE BSID-SHKZG,
WRBTR LIKE BSID-WRBTR.
DATA: END OF T_D_ZAN.
DATA: W_MIN_DAT LIKE BSID-BUDAT,   "選択範囲の最小日付
W_FST_DAT LIKE BSID-BUDAT,   "選択範囲の最小月の初日
W_KIN3(10)    TYPE P DECIMALS 5. "伝票通貨残高額格納用
*2000/06/02 ADD END
*2000/06/05 ADD START
DATA:W_SASON TYPE P.               "換算差損益
*2000/06/05 ADD END
*インクルード文
INCLUDE YF01NUMC.

*
************************************************************************
* パラメータ入力画面                                                   *
************************************************************************

SELECTION-SCREEN SKIP 2.
*2000/06/15 MOD START
*parameters: p_bukrs like t001-bukrs            "会社ｺｰﾄﾞ
*                              obligatory       "入力必須
*                           default 'C001'."C001ﾃﾞﾌｫﾙﾄ表示(19981225追加)
PARAMETERS: P_BUKRS LIKE T001-BUKRS OBLIGATORY MEMORY ID BUK.
*2000/06/15 MOD END
SELECTION-SCREEN SKIP 1.

SELECT-OPTIONS: P_DATUM FOR SY-DATUM        "対象年月日
OBLIGATORY.     "入力必須


SELECTION-SCREEN SKIP 1.

SELECT-OPTIONS: P_KUNNR FOR KNA1-KUNNR         "得意先ｺｰﾄﾞ
MATCHCODE OBJECT DEBI.


SELECTION-SCREEN SKIP 1.

PARAMETERS: P_SAKNR LIKE SKA1-SAKNR             "勘定ｺｰﾄﾞ
MATCHCODE OBJECT SAKO
OBLIGATORY.      "入力必須

* 2000/01/12 ADD START
SELECTION-SCREEN SKIP 1.
SELECT-OPTIONS: P_WAERS FOR BKPF-WAERS         "通貨ｺｰﾄﾞ
NO INTERVALS.
* 2000/01/12 ADD END
SELECTION-SCREEN SKIP 1.

****************************************************************
* 会社ｺｰﾄﾞﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN ON P_BUKRS.

CLEAR T001.

SELECT SINGLE * FROM T001 WHERE BUKRS = P_BUKRS.

IF SY-SUBRC = 0.
W_SPRAS = T001-SPRAS.
ELSE.
MESSAGE E350(F4) WITH P_BUKRS.
STOP.
ENDIF.

*1999/01/07 ADD START
************************************************************************
*         得意先コードの存在チェック                                   *
************************************************************************
AT SELECTION-SCREEN ON P_KUNNR.
CLEAR KNA1.
SELECT * FROM KNA1 WHERE KUNNR IN P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 4.
MESSAGE E153(F2) WITH P_KUNNR-LOW.
STOP.
ENDIF.
*1999/01/07 ADD END


*
****************************************************************
* 勘定ｺｰﾄﾞﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN ON P_SAKNR.

CLEAR SKA1.

SELECT SINGLE * FROM SKA1 WHERE KTOPL = T001-KTOPL
AND   SAKNR = P_SAKNR.

IF SY-SUBRC = 4.
MESSAGE E001(F4) WITH P_SAKNR T001-KTOPL.
STOP.
ENDIF.

*1999/02/09 UPDT START（当該処理復活）
*1999/01/07 DEL START
****************************************************************
* ﾃﾞｰﾀ存在ﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN.

SELECT COUNT(*) FROM BSID WHERE BUKRS = P_BUKRS
AND   KUNNR IN P_KUNNR
AND   BUDAT IN P_DATUM
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
SELECT COUNT(*) FROM BSAD WHERE BUKRS = P_BUKRS
AND   KUNNR IN P_KUNNR
AND   BUDAT IN P_DATUM
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
MESSAGE E008(Y1).
STOP.
ENDIF.
ENDIF.
*1999/01/07 DEL END
*1999/02/09 UPDT END
*
****************************************************************
* 主処理                                                       *
****************************************************************
START-OF-SELECTION.

*転記ｷｰﾃｷｽﾄの取得
SELECT * FROM TBSLT INTO TABLE T_TENKI
WHERE SPRAS = W_SPRAS.

SELECT * FROM KNA1 WHERE KUNNR IN P_KUNNR
AND   LOEVM = SPACE.

*初期化
REFRESH: IN_TABLE1,
IN_TABLE2.

CLEAR: PAGE_CNT,
LINE_CNT,
W_BELNR,
W_KIN,
W_KARI,
W_KASI,
W_ZAN,
W_KURI.
* 2000/01/12 ADD START
CLEAR: W_KIN2,
W_KARI2,
W_KASI2,
W_ZAN2,
W_KURI2.

* 2000/01/12 ADD END
*該当得意先の存在ﾁｪｯｸ
SELECT COUNT(*) FROM BSID WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
SELECT COUNT(*) FROM BSAD WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.
ENDIF.

*主処理
IF SY-SUBRC = 0.
PERFORM DATA_SELECT.
PERFORM PRINT.
*1999/02/09 DEL START
*1999/01/07 ADD START
*      ELSE.
*        C_NEN  = P_DATUM-LOW+0(4).
*        C_TUKI = P_DATUM-LOW+4(2).
*        IF P_DATUM-HIGH <> '00000000'.
*          W_NEN  = P_DATUM-HIGH+0(4).
*          W_TUKI = P_DATUM-HIGH+4(2).
*          IF W_NEN  <> C_NEN
*          OR W_TUKI <> C_TUKI.
*            PERFORM TUKI_GET.
*          ENDIF.
*        ENDIF.
*        PERFORM M_ZERO.
*1999/01/07 ADD END
*1999/02/09 DEL END
ENDIF.

ENDSELECT.

END-OF-SELECTION.
*--------------------------------------------------------------*
* FORM DATA_SELECT     データ抽出処理                          *
*--------------------------------------------------------------*
FORM DATA_SELECT.

*未決済明細の伝票番号取得、内部ﾃｰﾌﾞﾙ作成
SELECT GJAHR BELNR BUDAT BUZEI
FROM BSID INTO TABLE IN_TABLE1 WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.

*決済明細の伝票番号取得、内部テーブル作成
SELECT GJAHR BELNR BUDAT BUZEI
FROM BSAD APPENDING TABLE IN_TABLE1 WHERE BUKRS = P_BUKRS
AND   BUDAT IN P_DATUM
AND   KUNNR = KNA1-KUNNR
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.

* 2000/01/12 ソートする内部テーブル変更 START
*  sort in_table2 by budat belnr buzei.
SORT IN_TABLE1 BY BUDAT BELNR BUZEI.
* 2000/01/12 ソートする内部テーブル変更 END
*IN_TABLE1より詳細の読込
LOOP AT IN_TABLE1.
SELECT * FROM BSEG WHERE BUKRS = P_BUKRS
AND   GJAHR = IN_TABLE1-GJAHR
AND   BELNR = IN_TABLE1-BELNR
AND   BUZEI = IN_TABLE1-BUZEI.

IF W_BELNR <> IN_TABLE1-BELNR.
SELECT * FROM BKPF WHERE BUKRS = P_BUKRS
AND   GJAHR = IN_TABLE1-GJAHR
AND   BELNR = IN_TABLE1-BELNR.
ENDSELECT.

W_BELNR = IN_TABLE1-BELNR.

ENDIF.

IN_TABLE2-BUDAT = BKPF-BUDAT.
IN_TABLE2-CPUTM = BKPF-CPUTM.
IN_TABLE2-BELNR = BSEG-BELNR.
IN_TABLE2-BUZEI = BSEG-BUZEI.
IN_TABLE2-BSCHL = BSEG-BSCHL.
IN_TABLE2-UMSKZ = BSEG-UMSKZ.
IN_TABLE2-SHKZG = BSEG-SHKZG.
IN_TABLE2-WRBTR = BSEG-WRBTR.
* 2000/01/12 ADD START
IN_TABLE2-DMBTR = BSEG-DMBTR.
IN_TABLE2-WAERS = BKPF-WAERS.
IN_TABLE2-KURSF = BKPF-KURSF.
* 2000/01/12 ADD END
IN_TABLE2-SGTXT = BSEG-SGTXT.

APPEND IN_TABLE2.

ENDSELECT.
ENDLOOP.
* 2000/01/12 MOD START
*  SORT IN_TABLE2 BY BUDAT CPUTM BELNR BUZEI.
*2000/06/02 START
*  sort in_table2 by waers budat cputm belnr buzei.
SORT IN_TABLE2 BY BUDAT WAERS CPUTM BELNR BUZEI.
*2000/06/02 END
* 2000/01/12 MOD END
ENDFORM.
*--------------------------------------------------------------*
* FORM PRINT         出力処理                                  *
*--------------------------------------------------------------*
FORM PRINT.

PAGE_CNT = 1.
LINE_CNT = 0.

CLEAR: W_BUDAT.
* 2000/01/12 ADD START 通貨コード初期値の設定
READ TABLE IN_TABLE2 INDEX 1.
W_TUKA = IN_TABLE2-WAERS.
* 2000/01/12 ADD END
PERFORM TOKUISAKI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*  C_NEN  = P_DATUM-LOW+0(4).
*  C_TUKI = P_DATUM-LOW+4(2).
*1999/01/07 ADD END
*1999/02/09 DEL END

*出力編集
LOOP AT IN_TABLE2.

*1999/02/09 DEL START
*1999/01/07 ADD START
*    W_NEN  = IN_TABLE2-BUDAT+0(4).
*    W_TUKI = IN_TABLE2-BUDAT+4(2).
*
*    IF W_NEN  <> C_NEN
*    OR W_TUKI <> C_TUKI.
*      IF SY-TABIX = 1.
*        PERFORM TUKI_GET.
*      ENDIF.
*    ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL START
*2000/01/12 ADD START
CLEAR W_B_FLG.
*2000/01/12 ADD END

*関数呼出（会計年度、会計期間）
IF W_BUDAT+0(6) <> IN_TABLE2-BUDAT+0(6).
CALL FUNCTION 'FI_PERIOD_DETERMINE'
EXPORTING
I_BUKRS = P_BUKRS
I_BUDAT = IN_TABLE2-BUDAT
IMPORTING
E_GJAHR = W_GJAHR               "会計年度
E_MONAT = W_MONAT.              "会計期間

IF LINE_CNT <> 0.
KURI_FLG = '1'.
BRK_FLG  = '1'.
*2000/01/12 ADD START
W_B_FLG = 'X'.
*2000/01/12 ADD END
ENDIF.
ELSE.
* 2000/01/12 MOD START
*     IF LINE_CNT > 74.
IF LINE_CNT > 42.
* 2000/01/12 MOD END
KURI_FLG = '0'.
BRK_FLG  = '1'.
ENDIF.
ENDIF.
* 2000/01/12 ADD START 通貨コードブレイク
IF IN_TABLE2-WAERS <> W_TUKA.
*2000/06/02 MOD START
*      kuri_flg = '1'.
*      kuri_flg = ''.  "2000/06/05
*2000/06/02 MOD END
BRK_FLG  = '1'.
ENDIF.
* 2000/01/12 ADD END

IF BRK_FLG = '1' AND LINE_CNT <> 0.
IF KURI_FLG = '1'.
PERFORM FOOTER.
PERFORM GOUKEI.
*2000/06/02 DEL START
* 2000/01/12 ADD START
*        if in_table2-waers <> w_tuka and w_b_flg <> 'X'.
*          page_cnt = page_cnt + 1.
*          clear w_b_flg.
*        else.
* 2000/01/12 ADD END
*2000/06/02 DEL END
PAGE_CNT = 1.
* 2000/01/12 ADD START
*2000/06/02 DEL START
*        endif.
*2000/06/02 DEL END
* 2000/01/12 ADD END
*1999/02/09 DEL START
*1999/01/07 ADD START
*        C_TUKI = C_TUKI + 1.
*        IF C_TUKI = '13'.
*          C_NEN  = C_NEN + 1.
*          C_TUKI = 1.
*        ENDIF.
*        IF ( W_NEN > C_NEN )
*        OR ( W_NEN = C_NEN AND W_TUKI > C_TUKI ).
*          PERFORM TUKI_GET.
*        ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL END
ELSE.
PERFORM FOOTER.
*2000/06/02 ADD START
IF IN_TABLE2-WAERS <> W_TUKA.
PERFORM GOUKEI_D_ONLY."通貨コードブレイク時の伝票通貨集計出力
ENDIF.
*2000/06/02 ADD END
PAGE_CNT = PAGE_CNT + 1.
ENDIF.
LINE_CNT = 0.
BRK_FLG  = '0'.
ENDIF.

IF LINE_CNT = 0.
IF PAGE_CNT = 1.
PERFORM KURIKOSI.
W_ZAN = W_KURI.
ENDIF.
PERFORM HEADER.
ENDIF.

PERFORM DATA_EDIT.
PERFORM MEISAI.

LINE_CNT = LINE_CNT + 1.
W_BUDAT = IN_TABLE2-BUDAT.

ENDLOOP.

*次月繰越読込
KURI_FLG = '1'.

PERFORM FOOTER.
PERFORM GOUKEI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*  IF P_DATUM-HIGH <> '00000000'.
*    W_NEN  = P_DATUM-HIGH+0(4).
*    W_TUKI = P_DATUM-HIGH+4(2).
*    C_NEN  = IN_TABLE2-BUDAT+0(4).
*    C_TUKI = IN_TABLE2-BUDAT+4(2).
*    IF W_NEN  <> C_NEN
*    OR W_TUKI <> C_TUKI.
*      C_TUKI = C_TUKI + 1.
*      IF C_TUKI = '13'.
*        C_NEN  = C_NEN + 1.
*        C_TUKI = 1.
*      ENDIF.
*
*      IF W_NEN  <> C_NEN
*      OR W_TUKI <> C_TUKI.
*        PERFORM TUKI_GET.
*      ENDIF.
*      PERFORM M_ZERO.
*    ENDIF.
*  ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL END

ENDFORM.
*--------------------------------------------------------------*
* FORM FOOTER           繰越額出力処理                         *
*--------------------------------------------------------------*
FORM FOOTER.

IF KURI_FLG = '1'.
W_TEXT = '次月繰越'.
ELSE.
W_TEXT = '次頁繰越'.
ENDIF.
* 2000/01/12 MOD START
* ULINE (120).
* WRITE: /13 W_TEXT.
ULINE (170).
* 2000/06/05 MOD START
* write: /10 w_text.
WRITE: /08 W_TEXT.
* 2000/06/05 MOD END
PERFORM YF01NUMC USING W_ZAN 15 0.
* WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.
* ULINE (120).
* 2000/06/05 MOD START
* write: 085  o_num using edit mask 'RR________________'.
WRITE: 080  O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
*2000/06/02 ADD START
PERFORM GET_DECIMALS.
CLEAR W_KIN3.
W_SEI = W_SEI + 1.
PERFORM YF01NUMC USING W_ZAN2 W_SEI W_SYO.
* 2000/06/05 MOD START
*  write:  149 o_num using edit mask 'RR________________'.
WRITE:  137 O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
*2000/06/02 ADD END
ULINE (170).
* 2000/01/12 MOD END
IF KURI_FLG = '1'.
CLEAR: W_ZAN.
*2000/06/02 ADD START
CLEAR: W_ZAN2.
*2000/06/02 ADD END
ENDIF.
ENDFORM.
*--------------------------------------------------------------*
* FORM GOUKEI         貸方・借方合計額計算処理                 *
*--------------------------------------------------------------*
FORM GOUKEI.
* 2000/01/12 MOD START
PERFORM YF01NUMC USING W_KARI 15 0.
* WRITE: /064 O_NUM USING EDIT MASK 'RR________________'.
* 2000/06/05 MOD START
*  write: /053 o_num using edit mask 'RR________________'.
WRITE: /049 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
PERFORM YF01NUMC USING W_KASI 15 0.
* WRITE:  084 O_NUM USING EDIT MASK 'RR________________'.
* 2000/06/05 MOD START
*  write:  069 o_num using edit mask 'RR________________'.
WRITE:  064 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
* 2000/01/12 MOD END
CLEAR: W_KARI,
W_KASI.

* 2000/01/12 ADD START
PERFORM GET_DECIMALS.
W_SEI = W_SEI + 1.
PERFORM YF01NUMC USING W_KARI2 W_SEI W_SYO.
* 2000/06/05 MOD START
*  write:  113 o_num using edit mask 'RR________________'.
WRITE:  106 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
PERFORM YF01NUMC USING W_KASI2 W_SEI W_SYO.
* 2000/06/05 MOD START
*  write:  129 o_num using edit mask 'RR________________'.
WRITE:   121 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
CLEAR: W_KARI2,
W_KASI2.
* 2000/01/12 ADD END

ENDFORM.
*--------------------------------------------------------------*
* FORM KURIKOSI        前月繰越抽出処理                        *
*--------------------------------------------------------------*
FORM KURIKOSI.

*前月繰越額編集
SELECT SINGLE * FROM KNC1 WHERE KUNNR = KNA1-KUNNR
AND   BUKRS = P_BUKRS
AND   GJAHR = W_GJAHR.
*1999/01/07 ADD START
IF SY-SUBRC = 4.
W_KURI = 0.
ELSE.
*1999/01/07 ADD END

CASE W_MONAT.
WHEN 1.
W_KURI =     KNC1-UMSAV * 100.
WHEN 2.
W_KURI = (   KNC1-UMSAV
+   KNC1-UM01S
-   KNC1-UM01H
) * 100.
WHEN 3.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S )
- ( KNC1-UM01H + KNC1-UM02H )
) * 100.
WHEN 4.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H )
) * 100.
WHEN 5.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H )
) * 100.
WHEN 6.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H )
) * 100.
WHEN 7.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H )
) * 100.
WHEN 8.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H )
) * 100.
WHEN 9.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H )
) * 100.
WHEN 10.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H )
) * 100.
WHEN 11.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S + KNC1-UM10S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H + KNC1-UM10H )
) * 100.
WHEN 12.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S + KNC1-UM10S + KNC1-UM11S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H + KNC1-UM10H + KNC1-UM11H )
) * 100.
ENDCASE.

ENDIF.
*2000/06/02 "伝票通貨の残高取得 ADD START
W_TUKA = IN_TABLE2-WAERS. "ヘッダ通貨の設定
W_MIN_DAT = IN_TABLE2-BUDAT.
W_FST_DAT = IN_TABLE2-BUDAT.
W_FST_DAT+6(2) = '01'.
PERFORM ADD_ZENJITU.
PERFORM GET_D_ZAN.
*2000/06/02 END
ENDFORM.
*----------------------------------------------------------------------*
* FORM GET_D_ZAN 2000/06/02  "伝票通貨の残高取得 ADD START             *
*----------------------------------------------------------------------*
FORM GET_D_ZAN.
CLEAR: W_KURI2,W_ZAN2.
SELECT SHKZG WRBTR FROM BSID INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND WAERS = IN_TABLE2-WAERS
AND BUDAT < W_MIN_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -1.
ENDIF.
W_KURI2 = W_KURI2 + T_D_ZAN-WRBTR.
ENDLOOP.

SELECT SHKZG WRBTR FROM BSAD INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND WAERS = IN_TABLE2-WAERS
AND BUDAT < W_MIN_DAT
AND AUGDT => W_MIN_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -1.
ENDIF.
W_KURI2 = W_KURI2 + T_D_ZAN-WRBTR.
ENDLOOP.
W_ZAN2 = W_KURI2.
PERFORM GET_D_TUKA USING W_KURI2 IN_TABLE2-WAERS CHANGING W_ZAN2.
*2000/06/02 ADD END
ENDFORM.
*--------------------------------------------------------------*
* FORM HEADER          ヘッダ出力処理                          *
*--------------------------------------------------------------*
FORM HEADER.

NEW-PAGE.

IF PAGE_CNT = 1.
W_TEXT = '前月繰越'.
ELSE.
W_TEXT = '前頁繰越'.
W_KURI = W_ZAN.
ENDIF.

*ﾍｯﾀﾞ出力
* 2000/01/12 MOD START
* WRITE: /110 'ページ',
*        117(3) PAGE_CNT USING EDIT MASK 'RR___'.
WRITE: /160 'ページ',
167(3) PAGE_CNT USING EDIT MASK 'RR___'.
WRITE: /008 W_GJAHR,
012 '年度',
*         050 '売  掛  金  元  帳',
*         088 '作成年月日',
*         098 SY-DATUM+0(4) NO-ZERO,
*         102 '年',
*         104 SY-DATUM+4(2) NO-ZERO,
*         106 '月',
*         108 SY-DATUM+6(2) NO-ZERO,
*         110 '日',
*         115 SY-UZEIT USING EDIT MASK '__:__',
*        /113 '単位:円',
076 '売  掛  金  元  帳',
138 '作成年月日',
148 SY-DATUM+0(4) NO-ZERO,
152 '年',
154 SY-DATUM+4(2) NO-ZERO,
156 '月',
158 SY-DATUM+6(2) NO-ZERO,
160 '日',
165 SY-UZEIT USING EDIT MASK '__:__',
/151 '国内通貨単位: 円',
* 2000/01/12 MOD END
*1999/01/08 ADD START（対象年月日・自〜至の表示）
* 2000/01/12 MOD START
*        /42  '（',
*         44  P_DATUM-LOW+0(4) NO-ZERO,
*         48  '年',
*         50  P_DATUM-LOW+4(2) NO-ZERO,
*         52  '月',
*         54  P_DATUM-LOW+6(2) NO-ZERO,
*         56  '日',
*         58  '〜'.
/70  '（',
72  P_DATUM-LOW+0(4) NO-ZERO,
76  '年',
78  P_DATUM-LOW+4(2) NO-ZERO,
80  '月',
82  P_DATUM-LOW+6(2) NO-ZERO,
84  '日',
86  '〜'.
* 2000/01/12 MOD END
IF P_DATUM-HIGH <> '00000000'.
* 2000/01/12 MOD START
*  WRITE: 60  P_DATUM-HIGH+0(4) NO-ZERO,
*         64  '年',
*         66  P_DATUM-HIGH+4(2) NO-ZERO,
*         68  '月',
*         70  P_DATUM-HIGH+6(2) NO-ZERO,
*         72  '日'.
WRITE: 88  P_DATUM-HIGH+0(4) NO-ZERO,
92  '年',
94  P_DATUM-HIGH+4(2) NO-ZERO,
96  '月',
98  P_DATUM-HIGH+6(2) NO-ZERO,
100 '日'.
* 2000/01/12 MOD END
ELSE.
* 2000/01/12 MOD START
*  WRITE: 60  P_DATUM-LOW+0(4) NO-ZERO,
*         64  '年',
*         66  P_DATUM-LOW+4(2) NO-ZERO,
*         68  '月',
*         70  P_DATUM-LOW+6(2) NO-ZERO,
*         72  '日'.
WRITE: 88  P_DATUM-LOW+0(4) NO-ZERO,
92  '年',
94  P_DATUM-LOW+4(2) NO-ZERO,
96  '月',
98  P_DATUM-LOW+6(2) NO-ZERO,
100 '日'.
* 2000/01/12 MOD END
ENDIF.
* 2000/01/12 MOD START
*  WRITE:  74  '）'.
WRITE:  102 '）'.
* 2000/01/12 MOD END
* 2000/01/12 ADD START
W_TUKA = IN_TABLE2-WAERS.
WRITE:  151 '伝票通貨単位:',
165 W_TUKA.
* 2000/01/12 ADD END

*1999/01/08 ADD END
WRITE: /002 KNA1-KUNNR,
012 KNA1-NAME1.

WRITE: /002 T_ADLESS.

WRITE: /002 KNA1-ORT02,
* Mod ES-UP 2012/09/12 -->
**1999/1/19 UPDT START
**         085(34) T_SIHRAI
**               USING EDIT MASK 'RR_________________________________'.
** 2000/01/12 MOD START
**         066 T_SIHRAI
*          111 T_SIHRAI
** 2000/01/12 MOD START
*                USING EDIT MASK
*     'RR______________________________________________________'.
*                                             "支払条件出力
**1999/1/19 UPDT END
** 2000/01/12 MOD START
** ULINE (120).
066(**) T_SIHRAI RIGHT-JUSTIFIED. "(右寄せ)"
* Mod ES-UP 2012/09/12 <--
ULINE (170).
* 2000/01/12 MOD END
*明細ﾍｯﾀﾞ出力
WRITE: /002 '日付',
* 2000/01/12 MOD START
*         025 '摘  要',
*         049 '元帳照合',
*         068 '借  方',
*         088 '貸  方',
*         110 '残  高'.
*  ULINE (120).
* 2000/06/05 MOD START
*         010 '摘  要',
*         043 '元帳照合',
*         057 '国内通貨借方',
*         073 '国内通貨貸方',
*         089 '国内通貨残高',
*         103 '換算レート',
*         117 '伝票通貨借方',
*         133 '伝票通貨貸方',
*         151 '伝票通貨残高'.
008 '摘  要',
039 '元帳照合',
050 '国内通貨借方',
065 '国内通貨貸方',
080 '国内通貨残高',
096 '換算レート',
107 '伝票通貨借方',
122 '伝票通貨貸方',
137 '伝票通貨残高',
156 '換算差損益'.
* 2000/06/05 MOD END
* ULINE (120).
ULINE (170).
* 2000/01/12 MOD END
* 2000/01/12 MOD START
*  WRITE: /013 W_TEXT.
* 2000/06/05 MOD START
*  write: /010 w_text.
WRITE: /008 W_TEXT.
* 2000/06/05 MOD END
PERFORM YF01NUMC USING W_KURI 15 0.
* WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.
* 2000/06/05 MOD START
*  write: 085  o_num using edit mask 'RR________________'.
WRITE: 080  O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
* 2000/01/12 MOD END
*2000/06/02 ADD START
PERFORM GET_DECIMALS.
W_SEI = W_SEI + 1.
CLEAR:  W_KIN3,W_KIN_C.
PERFORM GET_D_TUKA USING W_KURI2 W_TUKA CHANGING W_KIN3.
PERFORM YF01NUMC USING W_KIN3 W_SEI W_SYO.
* 2000/06/05 MOD START
*  write: 149  o_num using edit mask 'RR________________'.
WRITE: 137  O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
*2000/06/02 ADD END
ENDFORM.
*--------------------------------------------------------------*
* FORM MEISAI          明細出力処理                            *
*--------------------------------------------------------------*
FORM MEISAI.

*内部ﾃｰﾌﾞﾙ２表示
* 2000/06/05 MOD START
*    WRITE: /002(5) IN_TABLE2-BUDAT+4(4) USING EDIT MASK '__.__',
** 2000/01/12 MOD START
**            013    TEKIYO,
**            048    IN_TABLE2-BELNR.
*            010    TEKIYO,
*            042    IN_TABLE2-BELNR.
** 2000/01/12 MOD END
WRITE: /001(5) IN_TABLE2-BUDAT+4(4) USING EDIT MASK '__.__',
008    TEKIYO,
039    IN_TABLE2-BELNR.
* 2000/06/05 MOD END
*貸方・借方合計額計算
PERFORM YF01NUMC USING W_KIN 13 0.
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
* 2000/01/12 MOD START
*        WRITE: 064 O_NUM USING EDIT MASK 'RR________________' .
* 2000/06/05 MOD START
*         write: 053 o_num using edit mask 'RR________________' .
WRITE: 050 O_NUM USING EDIT MASK 'RR_____________' .
* 2000/06/05 MOD END
WHEN'H'.
*        WRITE: 084  O_NUM USING EDIT MASK 'RR________________'.
* 2000/06/05 MOD START
*         write: 069  o_num using edit mask 'RR________________'.
WRITE: 065  O_NUM USING EDIT MASK 'RR_____________'.
* 2000/06/05 MOD END
ENDCASE.
PERFORM YF01NUMC USING W_ZAN 15 0.
*    WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.
* 2000/06/05 MOD START
*    write: 085  o_num using edit mask 'RR________________'.
WRITE: 080  O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
* 2000/01/12 MOD END
* 2000/01/12 ADD START
* 2000/06/05 MOD START
*    write 102 in_table2-kursf.
WRITE 96 IN_TABLE2-KURSF.
* 2000/06/05 MOD END
PERFORM GET_DECIMALS.
PERFORM YF01NUMC USING W_KIN2 W_SEI W_SYO.
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
* 2000/06/05 MOD START
*        write: 113 o_num using edit mask 'RR________________'.
WRITE: 107 O_NUM USING EDIT MASK 'RR_____________'.
* 2000/06/05 MOD END
WHEN'H'.
* 2000/06/05 MOD START
*        write: 129  o_num using edit mask 'RR________________'.
WRITE: 122  O_NUM USING EDIT MASK 'RR_____________'.
* 2000/06/05 MOD END
ENDCASE.
*    PERFORM YF01NUMC USING W_ZAN 15 0.
*    WRITE: 086  O_NUM USING EDIT MASK 'RR________________'.
* 2000/01/12 ADD END
*2000/06/02 ADD START
PERFORM GET_DECIMALS.
CLEAR W_KIN3.
W_SEI = W_SEI + 1.
PERFORM YF01NUMC USING W_ZAN2 W_SEI W_SYO.
* 2000/06/05 MOD START
*  write:  149 o_num using edit mask 'RR________________'.
WRITE:  137 O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
*2000/06/02 ADD END
* 2000/06/05 ADD START
IF IN_TABLE2-BSCHL = '15' AND W_KIN2 <> W_KIN.
"売掛金入金なら換算差損益
W_SASON = IN_TABLE2-KURSF * W_KIN2 - W_KIN.
PERFORM YF01NUMC USING W_SASON 13 0.
WRITE:  156 O_NUM USING EDIT MASK 'RR_____________'.
ENDIF.
* 2000/06/05 ADD END
ENDFORM.
*--------------------------------------------------------------*
* FORM DATA_EDIT         データ編集処理                        *
*--------------------------------------------------------------*
FORM DATA_EDIT.

*摘要編集
IF IN_TABLE2-SGTXT = SPACE.
READ TABLE T_TENKI
WITH KEY SPRAS = W_SPRAS
BSCHL = IN_TABLE2-BSCHL
UMSKZ = IN_TABLE2-UMSKZ.
TEKIYO = T_TENKI-LTEXT.
ELSE.
TEKIYO = IN_TABLE2-SGTXT+0(30).
ENDIF.

*残高計算
* 2000/01/12 MOD START
*  w_kin = in_table2-wrbtr * 100.
W_KIN = IN_TABLE2-DMBTR * 100.
* 2000/01/12 MOD END
* 2000/01/12 ADD START
*2000/06/02 MOD START
*  perform get_d_tuka.
CLEAR:  W_KIN2,W_KIN_C.
PERFORM GET_D_TUKA USING IN_TABLE2-WRBTR W_TUKA
CHANGING W_KIN2.
*2000/06/02 MOD END
* 2000/01/12 ADD END
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
W_ZAN  = W_ZAN  + W_KIN.
W_KARI = W_KARI + W_KIN.
* 2000/01/12 ADD START
W_ZAN2  = W_ZAN2  + W_KIN2.
W_KARI2 = W_KARI2 + W_KIN2.
* 2000/01/12 ADD END
WHEN 'H'.
W_ZAN  = W_ZAN  - W_KIN.
W_KASI = W_KASI + W_KIN.
* 2000/01/12 ADD START
W_ZAN2  = W_ZAN2  - W_KIN2.
W_KASI2 = W_KASI2 + W_KIN2.
* 2000/01/12 ADD END
ENDCASE.

ENDFORM.

*1999/01/07 ADD START
*----------------------------------------------------------------------*
*         得意先情報の取得                                             *
*----------------------------------------------------------------------*
FORM TOKUISAKI.

CLEAR: W_BUDAT,
T_ADLESS,
T_SIHRAI.

*支払条件ｷｰの取得
SELECT * FROM KNB1 WHERE KUNNR = KNA1-KUNNR
AND   BUKRS = P_BUKRS.
ENDSELECT.

*支払条件ﾃｷｽﾄの取得
SELECT * FROM T052U WHERE SPRAS = W_SPRAS
AND   ZTERM = KNB1-ZTERM.
EXIT.
ENDSELECT.

*住所編集
T_ADLESS-STRAS = KNA1-STRAS.
T_ADLESS-ORT01 = KNA1-ORT01.
CONDENSE T_ADLESS NO-GAPS.

*支払条件の編集
IF T052U-TEXT1 = ' '
OR SY-SUBRC = 4.
T_SIHRAI-WORK1 = ' '.
T_SIHRAI-TEXT1 = ' '.
T_SIHRAI-WORK2 = ' '.
ELSE.
T_SIHRAI-WORK1 = '【'.
T_SIHRAI-TEXT1 = T052U-TEXT1.
T_SIHRAI-WORK2 = '】'.
CONDENSE T_SIHRAI NO-GAPS.
ENDIF.


ENDFORM.

*1999/02/09 DEL START
*----------------------------------------------------------------------*
*         明細0件の月の抽出                                            *
*----------------------------------------------------------------------*
*FORM TUKI_GET.
*  DO.
*    PERFORM M_ZERO.
*    C_TUKI = C_TUKI + 1.
*    IF C_TUKI = '13'.
*      C_NEN  = C_NEN + 1.
*      C_TUKI = 1.
*    ENDIF.
*    IF W_NEN  = C_NEN
*   AND W_TUKI = C_TUKI.
*      EXIT.
*    ENDIF.
*  ENDDO.
*ENDFORM.
*
*----------------------------------------------------------------------*
*         明細0件の場合の編集                                          *
*----------------------------------------------------------------------*
*FORM M_ZERO.
*  DATE-NEN  = C_NEN.
*  DATE-TUKI = C_TUKI.
*  DATE-HI   = '01'.
*  CONDENSE DATE NO-GAPS.
*
*  W_DATE = DATE.
*
*  PERFORM TOKUISAKI.
*
*  CALL FUNCTION 'FI_PERIOD_DETERMINE'
*     EXPORTING
*          I_BUKRS = P_BUKRS
*          I_BUDAT = W_DATE
*     IMPORTING
*          E_GJAHR = W_GJAHR
*          E_MONAT = W_MONAT.
*
*  PERFORM KURIKOSI.
*  W_ZAN    = W_KURI.
*  PAGE_CNT = 1.
*  PERFORM HEADER.
*
*  SKIP 1.
*  WRITE: /2 C_NEN NO-ZERO,
*            '年',
*            C_TUKI NO-ZERO,
*            '月'.
*  SKIP 1.
*  WRITE: /2 '【該当データなし】'.
*  SKIP 71.
*
*  KURI_FLG = '1'.
*  PERFORM FOOTER.
*  PERFORM GOUKEI.
*
*ENDFORM.
*1999/02/09 DEL END
*1999/01/07 ADD END
*&---------------------------------------------------------------------*
*&      Form  GET_D_TUKA  2000/01/12 ADD
*&---------------------------------------------------------------------*
*       伝票通貨の通貨コードによる編集
*----------------------------------------------------------------------*
*2000/06/02 MOD START
*form get_d_tuka.
*2000/05/22 MOD START
*  w_kin2 = in_table2-wrbtr.
*  clear:  w_kin2,w_kin_c.
*2000/05/22 MOD END
FORM GET_D_TUKA USING P_KINGAKU P_TUKA CHANGING P_KIN.
*2000/06/02 MOD END
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
EXPORTING
*2000/06/02 MOD START
*             currency    = w_tuka
*             sap_amount  = in_table2-wrbtr
CURRENCY    = P_TUKA
SAP_AMOUNT  = P_KINGAKU
*2000/06/02 MOD END
IMPORTING
*2000/05/22 MOD START
*            idoc_amount = w_kin2
IDOC_AMOUNT = W_KIN_C
*2000/05/22 MOD END
EXCEPTIONS
OTHERS      = 1.

*2000/05/22 ADD START
*2000/06/02 MOD START
*   w_kin2 = w_kin_c.
P_KIN = W_KIN_C.
*2000/06/02 MOD END
*2000/05/22 ADD END

ENDFORM.                    " GET_D_TUKA
*&---------------------------------------------------------------------*
*&      Form  GET_DECIMALS  2000/01/12 ADD
*&---------------------------------------------------------------------*
*       小数部の桁数取得
*----------------------------------------------------------------------*
FORM GET_DECIMALS.
CLEAR: W_SEI,W_SYO.
CALL FUNCTION 'FWOS_CURRENCY_DECIMALS_READ'
EXPORTING
I_CURRENCY    = W_TUKA
IMPORTING
E_DECIMALS    = W_SYO
EXCEPTIONS
OTHERS      = 1.
W_SEI = 14 - W_SYO.

ENDFORM.                    " GET_DECIMALS
*&---------------------------------------------------------------------*
*&      Form  GOUKEI_D_ONLY 2000/06/02
*&---------------------------------------------------------------------*
*       通貨コードブレイク時の伝票通貨集計出力
*----------------------------------------------------------------------*
FORM GOUKEI_D_ONLY.
PERFORM GET_DECIMALS.
W_SEI = W_SEI + 1.
PERFORM YF01NUMC USING W_KARI2 W_SEI W_SYO.
* 2000/06/05 MOD START
*   write:  /113 o_num using edit mask 'RR________________'.
WRITE:  /106 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
PERFORM YF01NUMC USING W_KASI2 W_SEI W_SYO.
* 2000/06/05 MOD START
*   write:  129 o_num using edit mask 'RR________________'.
WRITE:  121 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
CLEAR: W_KARI2,
W_KASI2.
W_MIN_DAT = IN_TABLE2-BUDAT.
PERFORM GET_D_ZAN.
ENDFORM.                    " GOUKEI_D_ONLY
*&---------------------------------------------------------------------*
*&      Form  ADD_ZENJITU 2000/06/02 ADD
*&---------------------------------------------------------------------*
*       国内通貨残に当月の初日から第一明細までの値を加算
*----------------------------------------------------------------------*
FORM ADD_ZENJITU.
SELECT SHKZG DMBTR FROM BSID INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND BUDAT < W_MIN_DAT
AND BUDAT >= W_FST_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -100.
ELSE.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * 100.
ENDIF.
W_KURI = W_KURI + T_D_ZAN-WRBTR.
ENDLOOP.

SELECT SHKZG DMBTR FROM BSAD INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND BUDAT < W_MIN_DAT
AND BUDAT >= W_FST_DAT
AND AUGDT => W_MIN_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -1.
ELSE.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * 100.
ENDIF.
W_KURI = W_KURI + T_D_ZAN-WRBTR.
ENDLOOP.

ENDFORM.                    " ADD_ZENJITU
* 2000/01/13 MOD STRAT
*REPORT YF010100
*              LINE-SIZE  120
*              LINE-COUNT 90
REPORT YF010110
MESSAGE-ID Y1
LINE-SIZE  170
LINE-COUNT  58
* 2000/01/13 MOD END
NO STANDARD PAGE HEADING.
************************************************************************
*    財務会計システム（ＦＩ)                                           *
*    ﾌﾟﾛｸﾞﾗﾑ ID ： YF010020                                            *
*    ﾌﾟﾛｸﾞﾗﾑ名  ： 売掛金元帳                                          *
*    処理種別   ： バッチ(ABAP/4)                                      *
*    処理概要   ： ﾊﾞﾘｱﾝﾄにより指定された、得意先ｺｰﾄﾞ・自〜得意先ｺｰﾄﾞ至*
*    より、得意先ﾏｽﾀ（KNA1）を得意先の情報を取得し、得意先毎に伝票番号 *
*    ・自〜伝票番号・至の範囲内のﾚｺｰﾄﾞを、会計：得意先二次ｲﾝﾃﾞｯｸｽ（BSID*
*    ）、得意先二次ｲﾝﾃﾞｯｸｽ（決済明細）（BSAD）より抽出し、得意先ﾏｽﾀ（月*
*    次貸借）（KNC1）、会計伝票明細（BSEG）、転記ｷｰ名（TBSLT）、得意先 *
*    ﾏｽﾀ（会社ｺｰﾄﾞ）（KNB1）、支払条件の説明（T052U）、会計伝票ﾍｯﾀﾞ（BK*
*    PF）より各情報を付加し、売掛金元帳を作成する。                    *
*    但し、得意先ｺｰﾄﾞの指定は任意とし、指定なしの場合は、全件を対象とす*
*    る。伝票日付の指定は月単位で必須とし、指定した範囲が複数月にまたが*
*    る場合はｴﾗｰとする。                                               *
*    また、通貨コードを指定された場合、指定された通貨コードのデータのみ*
*    抽出して出力、指定されなかった場合は全対象とし、通貨コード毎に    *
*    改ページ処理を行なう。                                            *
*    入力       ： 対象取引先年月日、得意先ｺｰﾄﾞ、言語ｺｰﾄﾞ、会社ｺｰﾄﾞ、  *
*                  勘定ｺｰﾄﾞ、通貨コード                                *
*----------------------------------------------------------------------*
*    元PG作成日 ： 1998/11/02                                          *
*    元PG作成者 ： 田坂                                                *
*    変更履歴   ： 1998/12/25 竹内（入力画面変更）                     *
*                  1999/01/07 大屋                                     *
*                    明細が0件のﾃﾞｰﾀについてﾍｯﾀﾞと繰越額を出力する     *
*                    ように修正。                                      *
*                  1999/01/08 大屋                                     *
*                    ﾍｯﾀﾞに対象年月日・自〜対象年月日・至を出力する    *
*                    ように修正。                                      *
*                  1999/01/19 大屋                                     *
*                    支払条件を全桁出力するように修正。                *
*                  1999/02/09 大屋                                     *
*                    明細0件対応の処理を削除する。                     *
*                  2000/01/12 加治佐                                   *
*                    伝票通貨額を国内通貨額に修正。                    *
*                    外貨対応機能追加                                  *
*                    1.帳票ヘッダ＆選択画面に通貨コードを追加          *
*                      出力するデータの通貨コードを絞れるように修正    *
*                    2.帳票明細に国内通貨額&伝票通貨額の両方と         *
*                      換算レートを追加                                *
*                    3.通貨コード毎でも改ページを行なうが,ページNoは   *
*                      クリアしない                                    *
*               2000/05/22 加治佐                                      *
*                      通貨金額作成汎用ﾓｼﾞｭｰﾙの受取を                  *
*                      数値でなく文字列型に修正                        *
*               2000/06/02 加治佐                                      *
*                      通貨コードブレイク時の国内通貨の繰越            *
*                      伝票通貨の残高の出力                            *
*                      国内通貨残高の値を"前月"から"前日まで"に変更    *
*               2000/06/05 加治佐                                      *
*                      換算差損益の出力                                *
*               2000/06/15 k.kajisa(NDSC)                              *
*                      パラメータの初期値をユーザ情報から取得          *
*               2000/07/11 k.kajisa(NDSC)                              *
*                      転記キー'09'の明細は残高算出に含まなくする      *
*&[改定履歴]                                                           *
*& YYYY/MM/DD  Programar         Description                           *
*& 2012/09/12  ISID              ES-UP                                 *
************************************************************************
*
*ﾃｰﾌﾞﾙ定義書
TABLES: BSID,
BSAD,
BSEG,
BKPF,
KNA1,
KNC1,
KNB1,
SKA1,
T001,
T052U,
TBSLT.
*
*内部ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF IN_TABLE1 OCCURS 10,
GJAHR  LIKE  BSEG-GJAHR,
BELNR  LIKE  BSID-BELNR,
BUDAT  LIKE  BSID-BUDAT,
BUZEI  LIKE  BSID-BUZEI,
END OF IN_TABLE1.

DATA: BEGIN OF IN_TABLE2 OCCURS 10,
* 2000/01/12 ADD START 通貨コードの追加
WAERS  LIKE  BKPF-WAERS,
* 2000/01/12 ADD END
BUDAT  LIKE  BKPF-BUDAT,
CPUTM  LIKE  BKPF-CPUTM,
BELNR  LIKE  BSEG-BELNR,
* 2000/01/12 ADD START 換算レートの追加
KURSF  LIKE  BKPF-KURSF,
* 2000/01/12 ADD END
BUZEI  LIKE  BSEG-BUZEI,
BSCHL  LIKE  BSEG-BSCHL,
UMSKZ  LIKE  BSEG-UMSKZ,
SHKZG  LIKE  BSEG-SHKZG,
WRBTR  LIKE  BSEG-WRBTR,
* 2000/01/12 ADD START 国内通貨額の追加
DMBTR  LIKE  BSEG-DMBTR,
* 2000/01/12 ADD END
SGTXT  LIKE  BSEG-SGTXT,
END OF IN_TABLE2.
*
*住所編集ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_ADLESS,
STRAS  LIKE  KNA1-STRAS,
ORT01  LIKE  KNA1-ORT01,
END OF T_ADLESS.
*
*支払条件編集ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_SIHRAI,
WORK1(2) TYPE C,
TEXT1    LIKE T052U-TEXT1,
WORK2(2) TYPE C,
END OF T_SIHRAI.
*
*転記ｷｰﾃｷｽﾄﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_TENKI OCCURS 10.
INCLUDE STRUCTURE TBSLT.
DATA: END OF T_TENKI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*日付編集用エリアの定義
*DATA: BEGIN OF DATE,
*        NEN(4)     TYPE N,
*        TUKI(2)    TYPE N,
*        HI(2)      TYPE N,
*      END   OF DATE.
*1999/01/07 ADD END
*1999/02/09 DEL END

*
*作業用変数定義
DATA: PAGE_CNT      TYPE I,            "ﾍﾟｰｼﾞｶｳﾝﾀ
LINE_CNT      TYPE I,            "明細行ｶｳﾝﾀ
W_GJAHR LIKE BKPF-GJAHR,         "会計年度格納用
W_MONAT LIKE BKPF-MONAT,         "会計期間格納用
W_SPRAS LIKE T002-SPRAS,         "言語ｺｰﾄﾞ格納用
W_BELNR LIKE BSEG-BELNR,         "比較伝票番号用
W_KTOPL LIKE SKA1-KTOPL,         "勘定ｺｰﾄﾞ表用
W_BUDAT LIKE BKPF-BUDAT,         "転記日付用
W_KIN         TYPE P,            "国内通貨額格納用
W_KARI        TYPE P,            "借方合計金額計算用
W_KASI        TYPE P,            "貸方合計金額計算用
W_ZAN         TYPE P,            "残高計算用
W_KURI        TYPE P,            "前月繰越額格納用
* 2000/01/12 ADD START
W_KIN2(10)    TYPE P DECIMALS 5, "伝票通貨額格納用
*2000/05/22 汎用ﾓｼﾞｭｰﾙバグ対応 ADD START
W_KIN_C(17)   TYPE C, "伝票通貨額格納用
*2000/05 汎用ﾓｼﾞｭｰﾙバグ対応 ADD END
W_KARI2(10)   TYPE P DECIMALS 5, "借方合計金額計算用(伝票通貨額)
W_KASI2(10)   TYPE P DECIMALS 5, "貸方合計金額計算用(伝票通貨額)
W_ZAN2(10)    TYPE P DECIMALS 5, "残高計算用(伝票通貨額)
W_KURI2(10)   TYPE P DECIMALS 5,  "前月繰越額格納用(伝票通貨額)
W_TUKA   LIKE BKPF-WAERS,        "通貨コード
W_SEI         TYPE I,             "整数部桁数
W_SYO         LIKE TCURX-CURRDEC, "少数部桁数
W_B_FLG(1)    TYPE C,            "ヘッダブレイク判定(ページ番号)
* 2000/01/12 ADD END
TEKIYO(30)    TYPE C,            "摘要欄格納用
W_TEXT(8)     TYPE C,            "繰越ﾃｷｽﾄ用
KURI_FLG      TYPE C,            "繰越判断用
BRK_FLG       TYPE C.            "ﾌﾞﾚｲｸ判断用
*1999/02/09 DEL START
*1999/01/07 ADD START
*      W_NEN(4)     TYPE N,
*      W_TUKI(2)    TYPE N,
*      C_NEN(4)     TYPE N,
*      C_TUKI(2)    TYPE N,
*      W_DATE       LIKE SY-DATUM.
*1999/01/07 ADD END
*1999/02/09 DEL END
*2000/06/02 ADD START
DATA: BEGIN OF T_D_ZAN OCCURS 10, "伝票通貨残高計算テーブル
SHKZG LIKE BSID-SHKZG,
WRBTR LIKE BSID-WRBTR.
DATA: END OF T_D_ZAN.
DATA: W_MIN_DAT LIKE BSID-BUDAT,   "選択範囲の最小日付
W_FST_DAT LIKE BSID-BUDAT,   "選択範囲の最小月の初日
W_KIN3(10)    TYPE P DECIMALS 5. "伝票通貨残高額格納用
*2000/06/02 ADD END
*2000/06/05 ADD START
DATA:W_SASON TYPE P.               "換算差損益
*2000/06/05 ADD END
*インクルード文
INCLUDE YF01NUMC.

*
************************************************************************
* パラメータ入力画面                                                   *
************************************************************************

SELECTION-SCREEN SKIP 2.
*2000/06/15 MOD START
*parameters: p_bukrs like t001-bukrs            "会社ｺｰﾄﾞ
*                              obligatory       "入力必須
*                           default 'C001'."C001ﾃﾞﾌｫﾙﾄ表示(19981225追加)
PARAMETERS: P_BUKRS LIKE T001-BUKRS OBLIGATORY MEMORY ID BUK.
*2000/06/15 MOD END
SELECTION-SCREEN SKIP 1.

SELECT-OPTIONS: P_DATUM FOR SY-DATUM        "対象年月日
OBLIGATORY.     "入力必須


SELECTION-SCREEN SKIP 1.

SELECT-OPTIONS: P_KUNNR FOR KNA1-KUNNR         "得意先ｺｰﾄﾞ
MATCHCODE OBJECT DEBI.


SELECTION-SCREEN SKIP 1.

PARAMETERS: P_SAKNR LIKE SKA1-SAKNR             "勘定ｺｰﾄﾞ
MATCHCODE OBJECT SAKO
OBLIGATORY.      "入力必須

* 2000/01/12 ADD START
SELECTION-SCREEN SKIP 1.
SELECT-OPTIONS: P_WAERS FOR BKPF-WAERS         "通貨ｺｰﾄﾞ
NO INTERVALS.
* 2000/01/12 ADD END
SELECTION-SCREEN SKIP 1.

****************************************************************
* 会社ｺｰﾄﾞﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN ON P_BUKRS.

CLEAR T001.

SELECT SINGLE * FROM T001 WHERE BUKRS = P_BUKRS.

IF SY-SUBRC = 0.
W_SPRAS = T001-SPRAS.
ELSE.
MESSAGE E350(F4) WITH P_BUKRS.
STOP.
ENDIF.

*1999/01/07 ADD START
************************************************************************
*         得意先コードの存在チェック                                   *
************************************************************************
AT SELECTION-SCREEN ON P_KUNNR.
CLEAR KNA1.
SELECT * FROM KNA1 WHERE KUNNR IN P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 4.
MESSAGE E153(F2) WITH P_KUNNR-LOW.
STOP.
ENDIF.
*1999/01/07 ADD END


*
****************************************************************
* 勘定ｺｰﾄﾞﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN ON P_SAKNR.

CLEAR SKA1.

SELECT SINGLE * FROM SKA1 WHERE KTOPL = T001-KTOPL
AND   SAKNR = P_SAKNR.

IF SY-SUBRC = 4.
MESSAGE E001(F4) WITH P_SAKNR T001-KTOPL.
STOP.
ENDIF.

*1999/02/09 UPDT START（当該処理復活）
*1999/01/07 DEL START
****************************************************************
* ﾃﾞｰﾀ存在ﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN.

SELECT COUNT(*) FROM BSID WHERE BUKRS = P_BUKRS
AND   KUNNR IN P_KUNNR
AND   BUDAT IN P_DATUM
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
SELECT COUNT(*) FROM BSAD WHERE BUKRS = P_BUKRS
AND   KUNNR IN P_KUNNR
AND   BUDAT IN P_DATUM
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
MESSAGE E008(Y1).
STOP.
ENDIF.
ENDIF.
*1999/01/07 DEL END
*1999/02/09 UPDT END
*
****************************************************************
* 主処理                                                       *
****************************************************************
START-OF-SELECTION.

*転記ｷｰﾃｷｽﾄの取得
SELECT * FROM TBSLT INTO TABLE T_TENKI
WHERE SPRAS = W_SPRAS.

SELECT * FROM KNA1 WHERE KUNNR IN P_KUNNR
AND   LOEVM = SPACE.

*初期化
REFRESH: IN_TABLE1,
IN_TABLE2.

CLEAR: PAGE_CNT,
LINE_CNT,
W_BELNR,
W_KIN,
W_KARI,
W_KASI,
W_ZAN,
W_KURI.
* 2000/01/12 ADD START
CLEAR: W_KIN2,
W_KARI2,
W_KASI2,
W_ZAN2,
W_KURI2.

* 2000/01/12 ADD END
*該当得意先の存在ﾁｪｯｸ
SELECT COUNT(*) FROM BSID WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
SELECT COUNT(*) FROM BSAD WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.
ENDIF.

*主処理
IF SY-SUBRC = 0.
PERFORM DATA_SELECT.
PERFORM PRINT.
*1999/02/09 DEL START
*1999/01/07 ADD START
*      ELSE.
*        C_NEN  = P_DATUM-LOW+0(4).
*        C_TUKI = P_DATUM-LOW+4(2).
*        IF P_DATUM-HIGH <> '00000000'.
*          W_NEN  = P_DATUM-HIGH+0(4).
*          W_TUKI = P_DATUM-HIGH+4(2).
*          IF W_NEN  <> C_NEN
*          OR W_TUKI <> C_TUKI.
*            PERFORM TUKI_GET.
*          ENDIF.
*        ENDIF.
*        PERFORM M_ZERO.
*1999/01/07 ADD END
*1999/02/09 DEL END
ENDIF.

ENDSELECT.

END-OF-SELECTION.
*--------------------------------------------------------------*
* FORM DATA_SELECT     データ抽出処理                          *
*--------------------------------------------------------------*
FORM DATA_SELECT.

*未決済明細の伝票番号取得、内部ﾃｰﾌﾞﾙ作成
SELECT GJAHR BELNR BUDAT BUZEI
FROM BSID INTO TABLE IN_TABLE1 WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.

*決済明細の伝票番号取得、内部テーブル作成
SELECT GJAHR BELNR BUDAT BUZEI
FROM BSAD APPENDING TABLE IN_TABLE1 WHERE BUKRS = P_BUKRS
AND   BUDAT IN P_DATUM
AND   KUNNR = KNA1-KUNNR
* 2000/01/12 ADD START
AND   WAERS IN P_WAERS
* 2000/01/12 ADD END
AND   HKONT = P_SAKNR.

* 2000/01/12 ソートする内部テーブル変更 START
*  sort in_table2 by budat belnr buzei.
SORT IN_TABLE1 BY BUDAT BELNR BUZEI.
* 2000/01/12 ソートする内部テーブル変更 END
*IN_TABLE1より詳細の読込
LOOP AT IN_TABLE1.
SELECT * FROM BSEG WHERE BUKRS = P_BUKRS
AND   GJAHR = IN_TABLE1-GJAHR
AND   BELNR = IN_TABLE1-BELNR
AND   BUZEI = IN_TABLE1-BUZEI.

IF W_BELNR <> IN_TABLE1-BELNR.
SELECT * FROM BKPF WHERE BUKRS = P_BUKRS
AND   GJAHR = IN_TABLE1-GJAHR
AND   BELNR = IN_TABLE1-BELNR.
ENDSELECT.

W_BELNR = IN_TABLE1-BELNR.

ENDIF.

IN_TABLE2-BUDAT = BKPF-BUDAT.
IN_TABLE2-CPUTM = BKPF-CPUTM.
IN_TABLE2-BELNR = BSEG-BELNR.
IN_TABLE2-BUZEI = BSEG-BUZEI.
IN_TABLE2-BSCHL = BSEG-BSCHL.
IN_TABLE2-UMSKZ = BSEG-UMSKZ.
IN_TABLE2-SHKZG = BSEG-SHKZG.
IN_TABLE2-WRBTR = BSEG-WRBTR.
* 2000/01/12 ADD START
IN_TABLE2-DMBTR = BSEG-DMBTR.
IN_TABLE2-WAERS = BKPF-WAERS.
IN_TABLE2-KURSF = BKPF-KURSF.
* 2000/01/12 ADD END
IN_TABLE2-SGTXT = BSEG-SGTXT.

APPEND IN_TABLE2.

ENDSELECT.
ENDLOOP.
* 2000/01/12 MOD START
*  SORT IN_TABLE2 BY BUDAT CPUTM BELNR BUZEI.
*2000/06/02 START
*  sort in_table2 by waers budat cputm belnr buzei.
SORT IN_TABLE2 BY BUDAT WAERS CPUTM BELNR BUZEI.
*2000/06/02 END
* 2000/01/12 MOD END
ENDFORM.
*--------------------------------------------------------------*
* FORM PRINT         出力処理                                  *
*--------------------------------------------------------------*
FORM PRINT.

PAGE_CNT = 1.
LINE_CNT = 0.

CLEAR: W_BUDAT.
* 2000/01/12 ADD START 通貨コード初期値の設定
READ TABLE IN_TABLE2 INDEX 1.
W_TUKA = IN_TABLE2-WAERS.
* 2000/01/12 ADD END
PERFORM TOKUISAKI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*  C_NEN  = P_DATUM-LOW+0(4).
*  C_TUKI = P_DATUM-LOW+4(2).
*1999/01/07 ADD END
*1999/02/09 DEL END

*出力編集
LOOP AT IN_TABLE2.

*1999/02/09 DEL START
*1999/01/07 ADD START
*    W_NEN  = IN_TABLE2-BUDAT+0(4).
*    W_TUKI = IN_TABLE2-BUDAT+4(2).
*
*    IF W_NEN  <> C_NEN
*    OR W_TUKI <> C_TUKI.
*      IF SY-TABIX = 1.
*        PERFORM TUKI_GET.
*      ENDIF.
*    ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL START
*2000/01/12 ADD START
CLEAR W_B_FLG.
*2000/01/12 ADD END

*関数呼出（会計年度、会計期間）
IF W_BUDAT+0(6) <> IN_TABLE2-BUDAT+0(6).
CALL FUNCTION 'FI_PERIOD_DETERMINE'
EXPORTING
I_BUKRS = P_BUKRS
I_BUDAT = IN_TABLE2-BUDAT
IMPORTING
E_GJAHR = W_GJAHR               "会計年度
E_MONAT = W_MONAT.              "会計期間

IF LINE_CNT <> 0.
KURI_FLG = '1'.
BRK_FLG  = '1'.
*2000/01/12 ADD START
W_B_FLG = 'X'.
*2000/01/12 ADD END
ENDIF.
ELSE.
* 2000/01/12 MOD START
*     IF LINE_CNT > 74.
IF LINE_CNT > 42.
* 2000/01/12 MOD END
KURI_FLG = '0'.
BRK_FLG  = '1'.
ENDIF.
ENDIF.
* 2000/01/12 ADD START 通貨コードブレイク
IF IN_TABLE2-WAERS <> W_TUKA.
*2000/06/02 MOD START
*      kuri_flg = '1'.
*      kuri_flg = ''.  "2000/06/05
*2000/06/02 MOD END
BRK_FLG  = '1'.
ENDIF.
* 2000/01/12 ADD END

IF BRK_FLG = '1' AND LINE_CNT <> 0.
IF KURI_FLG = '1'.
PERFORM FOOTER.
PERFORM GOUKEI.
*2000/06/02 DEL START
* 2000/01/12 ADD START
*        if in_table2-waers <> w_tuka and w_b_flg <> 'X'.
*          page_cnt = page_cnt + 1.
*          clear w_b_flg.
*        else.
* 2000/01/12 ADD END
*2000/06/02 DEL END
PAGE_CNT = 1.
* 2000/01/12 ADD START
*2000/06/02 DEL START
*        endif.
*2000/06/02 DEL END
* 2000/01/12 ADD END
*1999/02/09 DEL START
*1999/01/07 ADD START
*        C_TUKI = C_TUKI + 1.
*        IF C_TUKI = '13'.
*          C_NEN  = C_NEN + 1.
*          C_TUKI = 1.
*        ENDIF.
*        IF ( W_NEN > C_NEN )
*        OR ( W_NEN = C_NEN AND W_TUKI > C_TUKI ).
*          PERFORM TUKI_GET.
*        ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL END
ELSE.
PERFORM FOOTER.
*2000/06/02 ADD START
IF IN_TABLE2-WAERS <> W_TUKA.
PERFORM GOUKEI_D_ONLY."通貨コードブレイク時の伝票通貨集計出力
ENDIF.
*2000/06/02 ADD END
PAGE_CNT = PAGE_CNT + 1.
ENDIF.
LINE_CNT = 0.
BRK_FLG  = '0'.
ENDIF.

IF LINE_CNT = 0.
IF PAGE_CNT = 1.
PERFORM KURIKOSI.
W_ZAN = W_KURI.
ENDIF.
PERFORM HEADER.
ENDIF.

PERFORM DATA_EDIT.
PERFORM MEISAI.

LINE_CNT = LINE_CNT + 1.
W_BUDAT = IN_TABLE2-BUDAT.

ENDLOOP.

*次月繰越読込
KURI_FLG = '1'.

PERFORM FOOTER.
PERFORM GOUKEI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*  IF P_DATUM-HIGH <> '00000000'.
*    W_NEN  = P_DATUM-HIGH+0(4).
*    W_TUKI = P_DATUM-HIGH+4(2).
*    C_NEN  = IN_TABLE2-BUDAT+0(4).
*    C_TUKI = IN_TABLE2-BUDAT+4(2).
*    IF W_NEN  <> C_NEN
*    OR W_TUKI <> C_TUKI.
*      C_TUKI = C_TUKI + 1.
*      IF C_TUKI = '13'.
*        C_NEN  = C_NEN + 1.
*        C_TUKI = 1.
*      ENDIF.
*
*      IF W_NEN  <> C_NEN
*      OR W_TUKI <> C_TUKI.
*        PERFORM TUKI_GET.
*      ENDIF.
*      PERFORM M_ZERO.
*    ENDIF.
*  ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL END

ENDFORM.
*--------------------------------------------------------------*
* FORM FOOTER           繰越額出力処理                         *
*--------------------------------------------------------------*
FORM FOOTER.

IF KURI_FLG = '1'.
W_TEXT = '次月繰越'.
ELSE.
W_TEXT = '次頁繰越'.
ENDIF.
* 2000/01/12 MOD START
* ULINE (120).
* WRITE: /13 W_TEXT.
ULINE (170).
* 2000/06/05 MOD START
* write: /10 w_text.
WRITE: /08 W_TEXT.
* 2000/06/05 MOD END
PERFORM YF01NUMC USING W_ZAN 15 0.
* WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.
* ULINE (120).
* 2000/06/05 MOD START
* write: 085  o_num using edit mask 'RR________________'.
WRITE: 080  O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
*2000/06/02 ADD START
PERFORM GET_DECIMALS.
CLEAR W_KIN3.
W_SEI = W_SEI + 1.
PERFORM YF01NUMC USING W_ZAN2 W_SEI W_SYO.
* 2000/06/05 MOD START
*  write:  149 o_num using edit mask 'RR________________'.
WRITE:  137 O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
*2000/06/02 ADD END
ULINE (170).
* 2000/01/12 MOD END
IF KURI_FLG = '1'.
CLEAR: W_ZAN.
*2000/06/02 ADD START
CLEAR: W_ZAN2.
*2000/06/02 ADD END
ENDIF.
ENDFORM.
*--------------------------------------------------------------*
* FORM GOUKEI         貸方・借方合計額計算処理                 *
*--------------------------------------------------------------*
FORM GOUKEI.
* 2000/01/12 MOD START
PERFORM YF01NUMC USING W_KARI 15 0.
* WRITE: /064 O_NUM USING EDIT MASK 'RR________________'.
* 2000/06/05 MOD START
*  write: /053 o_num using edit mask 'RR________________'.
WRITE: /049 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
PERFORM YF01NUMC USING W_KASI 15 0.
* WRITE:  084 O_NUM USING EDIT MASK 'RR________________'.
* 2000/06/05 MOD START
*  write:  069 o_num using edit mask 'RR________________'.
WRITE:  064 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
* 2000/01/12 MOD END
CLEAR: W_KARI,
W_KASI.

* 2000/01/12 ADD START
PERFORM GET_DECIMALS.
W_SEI = W_SEI + 1.
PERFORM YF01NUMC USING W_KARI2 W_SEI W_SYO.
* 2000/06/05 MOD START
*  write:  113 o_num using edit mask 'RR________________'.
WRITE:  106 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
PERFORM YF01NUMC USING W_KASI2 W_SEI W_SYO.
* 2000/06/05 MOD START
*  write:  129 o_num using edit mask 'RR________________'.
WRITE:   121 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
CLEAR: W_KARI2,
W_KASI2.
* 2000/01/12 ADD END

ENDFORM.
*--------------------------------------------------------------*
* FORM KURIKOSI        前月繰越抽出処理                        *
*--------------------------------------------------------------*
FORM KURIKOSI.

*前月繰越額編集
SELECT SINGLE * FROM KNC1 WHERE KUNNR = KNA1-KUNNR
AND   BUKRS = P_BUKRS
AND   GJAHR = W_GJAHR.
*1999/01/07 ADD START
IF SY-SUBRC = 4.
W_KURI = 0.
ELSE.
*1999/01/07 ADD END

CASE W_MONAT.
WHEN 1.
W_KURI =     KNC1-UMSAV * 100.
WHEN 2.
W_KURI = (   KNC1-UMSAV
+   KNC1-UM01S
-   KNC1-UM01H
) * 100.
WHEN 3.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S )
- ( KNC1-UM01H + KNC1-UM02H )
) * 100.
WHEN 4.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H )
) * 100.
WHEN 5.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H )
) * 100.
WHEN 6.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H )
) * 100.
WHEN 7.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H )
) * 100.
WHEN 8.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H )
) * 100.
WHEN 9.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H )
) * 100.
WHEN 10.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H )
) * 100.
WHEN 11.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S + KNC1-UM10S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H + KNC1-UM10H )
) * 100.
WHEN 12.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S + KNC1-UM10S + KNC1-UM11S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H + KNC1-UM10H + KNC1-UM11H )
) * 100.
ENDCASE.

ENDIF.
*2000/06/02 "伝票通貨の残高取得 ADD START
W_TUKA = IN_TABLE2-WAERS. "ヘッダ通貨の設定
W_MIN_DAT = IN_TABLE2-BUDAT.
W_FST_DAT = IN_TABLE2-BUDAT.
W_FST_DAT+6(2) = '01'.
PERFORM ADD_ZENJITU.
PERFORM GET_D_ZAN.
*2000/06/02 END
ENDFORM.
*----------------------------------------------------------------------*
* FORM GET_D_ZAN 2000/06/02  "伝票通貨の残高取得 ADD START             *
*----------------------------------------------------------------------*
FORM GET_D_ZAN.
CLEAR: W_KURI2,W_ZAN2.
SELECT SHKZG WRBTR FROM BSID INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND WAERS = IN_TABLE2-WAERS
AND BUDAT < W_MIN_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -1.
ENDIF.
W_KURI2 = W_KURI2 + T_D_ZAN-WRBTR.
ENDLOOP.

SELECT SHKZG WRBTR FROM BSAD INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND WAERS = IN_TABLE2-WAERS
AND BUDAT < W_MIN_DAT
AND AUGDT => W_MIN_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -1.
ENDIF.
W_KURI2 = W_KURI2 + T_D_ZAN-WRBTR.
ENDLOOP.
W_ZAN2 = W_KURI2.
PERFORM GET_D_TUKA USING W_KURI2 IN_TABLE2-WAERS CHANGING W_ZAN2.
*2000/06/02 ADD END
ENDFORM.
*--------------------------------------------------------------*
* FORM HEADER          ヘッダ出力処理                          *
*--------------------------------------------------------------*
FORM HEADER.

NEW-PAGE.

IF PAGE_CNT = 1.
W_TEXT = '前月繰越'.
ELSE.
W_TEXT = '前頁繰越'.
W_KURI = W_ZAN.
ENDIF.

*ﾍｯﾀﾞ出力
* 2000/01/12 MOD START
* WRITE: /110 'ページ',
*        117(3) PAGE_CNT USING EDIT MASK 'RR___'.
WRITE: /160 'ページ',
167(3) PAGE_CNT USING EDIT MASK 'RR___'.
WRITE: /008 W_GJAHR,
012 '年度',
*         050 '売  掛  金  元  帳',
*         088 '作成年月日',
*         098 SY-DATUM+0(4) NO-ZERO,
*         102 '年',
*         104 SY-DATUM+4(2) NO-ZERO,
*         106 '月',
*         108 SY-DATUM+6(2) NO-ZERO,
*         110 '日',
*         115 SY-UZEIT USING EDIT MASK '__:__',
*        /113 '単位:円',
076 '売  掛  金  元  帳',
138 '作成年月日',
148 SY-DATUM+0(4) NO-ZERO,
152 '年',
154 SY-DATUM+4(2) NO-ZERO,
156 '月',
158 SY-DATUM+6(2) NO-ZERO,
160 '日',
165 SY-UZEIT USING EDIT MASK '__:__',
/151 '国内通貨単位: 円',
* 2000/01/12 MOD END
*1999/01/08 ADD START（対象年月日・自〜至の表示）
* 2000/01/12 MOD START
*        /42  '（',
*         44  P_DATUM-LOW+0(4) NO-ZERO,
*         48  '年',
*         50  P_DATUM-LOW+4(2) NO-ZERO,
*         52  '月',
*         54  P_DATUM-LOW+6(2) NO-ZERO,
*         56  '日',
*         58  '〜'.
/70  '（',
72  P_DATUM-LOW+0(4) NO-ZERO,
76  '年',
78  P_DATUM-LOW+4(2) NO-ZERO,
80  '月',
82  P_DATUM-LOW+6(2) NO-ZERO,
84  '日',
86  '〜'.
* 2000/01/12 MOD END
IF P_DATUM-HIGH <> '00000000'.
* 2000/01/12 MOD START
*  WRITE: 60  P_DATUM-HIGH+0(4) NO-ZERO,
*         64  '年',
*         66  P_DATUM-HIGH+4(2) NO-ZERO,
*         68  '月',
*         70  P_DATUM-HIGH+6(2) NO-ZERO,
*         72  '日'.
WRITE: 88  P_DATUM-HIGH+0(4) NO-ZERO,
92  '年',
94  P_DATUM-HIGH+4(2) NO-ZERO,
96  '月',
98  P_DATUM-HIGH+6(2) NO-ZERO,
100 '日'.
* 2000/01/12 MOD END
ELSE.
* 2000/01/12 MOD START
*  WRITE: 60  P_DATUM-LOW+0(4) NO-ZERO,
*         64  '年',
*         66  P_DATUM-LOW+4(2) NO-ZERO,
*         68  '月',
*         70  P_DATUM-LOW+6(2) NO-ZERO,
*         72  '日'.
WRITE: 88  P_DATUM-LOW+0(4) NO-ZERO,
92  '年',
94  P_DATUM-LOW+4(2) NO-ZERO,
96  '月',
98  P_DATUM-LOW+6(2) NO-ZERO,
100 '日'.
* 2000/01/12 MOD END
ENDIF.
* 2000/01/12 MOD START
*  WRITE:  74  '）'.
WRITE:  102 '）'.
* 2000/01/12 MOD END
* 2000/01/12 ADD START
W_TUKA = IN_TABLE2-WAERS.
WRITE:  151 '伝票通貨単位:',
165 W_TUKA.
* 2000/01/12 ADD END

*1999/01/08 ADD END
WRITE: /002 KNA1-KUNNR,
012 KNA1-NAME1.

WRITE: /002 T_ADLESS.

WRITE: /002 KNA1-ORT02,
* Mod ES-UP 2012/09/12 -->
**1999/1/19 UPDT START
**         085(34) T_SIHRAI
**               USING EDIT MASK 'RR_________________________________'.
** 2000/01/12 MOD START
**         066 T_SIHRAI
*          111 T_SIHRAI
** 2000/01/12 MOD START
*                USING EDIT MASK
*     'RR______________________________________________________'.
*                                             "支払条件出力
**1999/1/19 UPDT END
** 2000/01/12 MOD START
** ULINE (120).
066(**) T_SIHRAI RIGHT-JUSTIFIED. "(右寄せ)"
* Mod ES-UP 2012/09/12 <--
ULINE (170).
* 2000/01/12 MOD END
*明細ﾍｯﾀﾞ出力
WRITE: /002 '日付',
* 2000/01/12 MOD START
*         025 '摘  要',
*         049 '元帳照合',
*         068 '借  方',
*         088 '貸  方',
*         110 '残  高'.
*  ULINE (120).
* 2000/06/05 MOD START
*         010 '摘  要',
*         043 '元帳照合',
*         057 '国内通貨借方',
*         073 '国内通貨貸方',
*         089 '国内通貨残高',
*         103 '換算レート',
*         117 '伝票通貨借方',
*         133 '伝票通貨貸方',
*         151 '伝票通貨残高'.
008 '摘  要',
039 '元帳照合',
050 '国内通貨借方',
065 '国内通貨貸方',
080 '国内通貨残高',
096 '換算レート',
107 '伝票通貨借方',
122 '伝票通貨貸方',
137 '伝票通貨残高',
156 '換算差損益'.
* 2000/06/05 MOD END
* ULINE (120).
ULINE (170).
* 2000/01/12 MOD END
* 2000/01/12 MOD START
*  WRITE: /013 W_TEXT.
* 2000/06/05 MOD START
*  write: /010 w_text.
WRITE: /008 W_TEXT.
* 2000/06/05 MOD END
PERFORM YF01NUMC USING W_KURI 15 0.
* WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.
* 2000/06/05 MOD START
*  write: 085  o_num using edit mask 'RR________________'.
WRITE: 080  O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
* 2000/01/12 MOD END
*2000/06/02 ADD START
PERFORM GET_DECIMALS.
W_SEI = W_SEI + 1.
CLEAR:  W_KIN3,W_KIN_C.
PERFORM GET_D_TUKA USING W_KURI2 W_TUKA CHANGING W_KIN3.
PERFORM YF01NUMC USING W_KIN3 W_SEI W_SYO.
* 2000/06/05 MOD START
*  write: 149  o_num using edit mask 'RR________________'.
WRITE: 137  O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
*2000/06/02 ADD END
ENDFORM.
*--------------------------------------------------------------*
* FORM MEISAI          明細出力処理                            *
*--------------------------------------------------------------*
FORM MEISAI.

*内部ﾃｰﾌﾞﾙ２表示
* 2000/06/05 MOD START
*    WRITE: /002(5) IN_TABLE2-BUDAT+4(4) USING EDIT MASK '__.__',
** 2000/01/12 MOD START
**            013    TEKIYO,
**            048    IN_TABLE2-BELNR.
*            010    TEKIYO,
*            042    IN_TABLE2-BELNR.
** 2000/01/12 MOD END
WRITE: /001(5) IN_TABLE2-BUDAT+4(4) USING EDIT MASK '__.__',
008    TEKIYO,
039    IN_TABLE2-BELNR.
* 2000/06/05 MOD END
*貸方・借方合計額計算
PERFORM YF01NUMC USING W_KIN 13 0.
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
* 2000/01/12 MOD START
*        WRITE: 064 O_NUM USING EDIT MASK 'RR________________' .
* 2000/06/05 MOD START
*         write: 053 o_num using edit mask 'RR________________' .
WRITE: 050 O_NUM USING EDIT MASK 'RR_____________' .
* 2000/06/05 MOD END
WHEN'H'.
*        WRITE: 084  O_NUM USING EDIT MASK 'RR________________'.
* 2000/06/05 MOD START
*         write: 069  o_num using edit mask 'RR________________'.
WRITE: 065  O_NUM USING EDIT MASK 'RR_____________'.
* 2000/06/05 MOD END
ENDCASE.
PERFORM YF01NUMC USING W_ZAN 15 0.
*    WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.
* 2000/06/05 MOD START
*    write: 085  o_num using edit mask 'RR________________'.
WRITE: 080  O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
* 2000/01/12 MOD END
* 2000/01/12 ADD START
* 2000/06/05 MOD START
*    write 102 in_table2-kursf.
WRITE 96 IN_TABLE2-KURSF.
* 2000/06/05 MOD END
PERFORM GET_DECIMALS.
PERFORM YF01NUMC USING W_KIN2 W_SEI W_SYO.
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
* 2000/06/05 MOD START
*        write: 113 o_num using edit mask 'RR________________'.
WRITE: 107 O_NUM USING EDIT MASK 'RR_____________'.
* 2000/06/05 MOD END
WHEN'H'.
* 2000/06/05 MOD START
*        write: 129  o_num using edit mask 'RR________________'.
WRITE: 122  O_NUM USING EDIT MASK 'RR_____________'.
* 2000/06/05 MOD END
ENDCASE.
*    PERFORM YF01NUMC USING W_ZAN 15 0.
*    WRITE: 086  O_NUM USING EDIT MASK 'RR________________'.
* 2000/01/12 ADD END
*2000/06/02 ADD START
PERFORM GET_DECIMALS.
CLEAR W_KIN3.
W_SEI = W_SEI + 1.
PERFORM YF01NUMC USING W_ZAN2 W_SEI W_SYO.
* 2000/06/05 MOD START
*  write:  149 o_num using edit mask 'RR________________'.
WRITE:  137 O_NUM USING EDIT MASK 'RR_______________'.
* 2000/06/05 MOD END
*2000/06/02 ADD END
* 2000/06/05 ADD START
IF IN_TABLE2-BSCHL = '15' AND W_KIN2 <> W_KIN.
"売掛金入金なら換算差損益
W_SASON = IN_TABLE2-KURSF * W_KIN2 - W_KIN.
PERFORM YF01NUMC USING W_SASON 13 0.
WRITE:  156 O_NUM USING EDIT MASK 'RR_____________'.
ENDIF.
* 2000/06/05 ADD END
ENDFORM.
*--------------------------------------------------------------*
* FORM DATA_EDIT         データ編集処理                        *
*--------------------------------------------------------------*
FORM DATA_EDIT.

*摘要編集
IF IN_TABLE2-SGTXT = SPACE.
READ TABLE T_TENKI
WITH KEY SPRAS = W_SPRAS
BSCHL = IN_TABLE2-BSCHL
UMSKZ = IN_TABLE2-UMSKZ.
TEKIYO = T_TENKI-LTEXT.
ELSE.
TEKIYO = IN_TABLE2-SGTXT+0(30).
ENDIF.

*残高計算
* 2000/01/12 MOD START
*  w_kin = in_table2-wrbtr * 100.
W_KIN = IN_TABLE2-DMBTR * 100.
* 2000/01/12 MOD END
* 2000/01/12 ADD START
*2000/06/02 MOD START
*  perform get_d_tuka.
CLEAR:  W_KIN2,W_KIN_C.
PERFORM GET_D_TUKA USING IN_TABLE2-WRBTR W_TUKA
CHANGING W_KIN2.
*2000/06/02 MOD END
* 2000/01/12 ADD END
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
W_ZAN  = W_ZAN  + W_KIN.
W_KARI = W_KARI + W_KIN.
* 2000/01/12 ADD START
W_ZAN2  = W_ZAN2  + W_KIN2.
W_KARI2 = W_KARI2 + W_KIN2.
* 2000/01/12 ADD END
WHEN 'H'.
W_ZAN  = W_ZAN  - W_KIN.
W_KASI = W_KASI + W_KIN.
* 2000/01/12 ADD START
W_ZAN2  = W_ZAN2  - W_KIN2.
W_KASI2 = W_KASI2 + W_KIN2.
* 2000/01/12 ADD END
ENDCASE.

ENDFORM.

*1999/01/07 ADD START
*----------------------------------------------------------------------*
*         得意先情報の取得                                             *
*----------------------------------------------------------------------*
FORM TOKUISAKI.

CLEAR: W_BUDAT,
T_ADLESS,
T_SIHRAI.

*支払条件ｷｰの取得
SELECT * FROM KNB1 WHERE KUNNR = KNA1-KUNNR
AND   BUKRS = P_BUKRS.
ENDSELECT.

*支払条件ﾃｷｽﾄの取得
SELECT * FROM T052U WHERE SPRAS = W_SPRAS
AND   ZTERM = KNB1-ZTERM.
EXIT.
ENDSELECT.

*住所編集
T_ADLESS-STRAS = KNA1-STRAS.
T_ADLESS-ORT01 = KNA1-ORT01.
CONDENSE T_ADLESS NO-GAPS.

*支払条件の編集
IF T052U-TEXT1 = ' '
OR SY-SUBRC = 4.
T_SIHRAI-WORK1 = ' '.
T_SIHRAI-TEXT1 = ' '.
T_SIHRAI-WORK2 = ' '.
ELSE.
T_SIHRAI-WORK1 = '【'.
T_SIHRAI-TEXT1 = T052U-TEXT1.
T_SIHRAI-WORK2 = '】'.
CONDENSE T_SIHRAI NO-GAPS.
ENDIF.


ENDFORM.

*1999/02/09 DEL START
*----------------------------------------------------------------------*
*         明細0件の月の抽出                                            *
*----------------------------------------------------------------------*
*FORM TUKI_GET.
*  DO.
*    PERFORM M_ZERO.
*    C_TUKI = C_TUKI + 1.
*    IF C_TUKI = '13'.
*      C_NEN  = C_NEN + 1.
*      C_TUKI = 1.
*    ENDIF.
*    IF W_NEN  = C_NEN
*   AND W_TUKI = C_TUKI.
*      EXIT.
*    ENDIF.
*  ENDDO.
*ENDFORM.
*
*----------------------------------------------------------------------*
*         明細0件の場合の編集                                          *
*----------------------------------------------------------------------*
*FORM M_ZERO.
*  DATE-NEN  = C_NEN.
*  DATE-TUKI = C_TUKI.
*  DATE-HI   = '01'.
*  CONDENSE DATE NO-GAPS.
*
*  W_DATE = DATE.
*
*  PERFORM TOKUISAKI.
*
*  CALL FUNCTION 'FI_PERIOD_DETERMINE'
*     EXPORTING
*          I_BUKRS = P_BUKRS
*          I_BUDAT = W_DATE
*     IMPORTING
*          E_GJAHR = W_GJAHR
*          E_MONAT = W_MONAT.
*
*  PERFORM KURIKOSI.
*  W_ZAN    = W_KURI.
*  PAGE_CNT = 1.
*  PERFORM HEADER.
*
*  SKIP 1.
*  WRITE: /2 C_NEN NO-ZERO,
*            '年',
*            C_TUKI NO-ZERO,
*            '月'.
*  SKIP 1.
*  WRITE: /2 '【該当データなし】'.
*  SKIP 71.
*
*  KURI_FLG = '1'.
*  PERFORM FOOTER.
*  PERFORM GOUKEI.
*
*ENDFORM.
*1999/02/09 DEL END
*1999/01/07 ADD END
*&---------------------------------------------------------------------*
*&      Form  GET_D_TUKA  2000/01/12 ADD
*&---------------------------------------------------------------------*
*       伝票通貨の通貨コードによる編集
*----------------------------------------------------------------------*
*2000/06/02 MOD START
*form get_d_tuka.
*2000/05/22 MOD START
*  w_kin2 = in_table2-wrbtr.
*  clear:  w_kin2,w_kin_c.
*2000/05/22 MOD END
FORM GET_D_TUKA USING P_KINGAKU P_TUKA CHANGING P_KIN.
*2000/06/02 MOD END
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
EXPORTING
*2000/06/02 MOD START
*             currency    = w_tuka
*             sap_amount  = in_table2-wrbtr
CURRENCY    = P_TUKA
SAP_AMOUNT  = P_KINGAKU
*2000/06/02 MOD END
IMPORTING
*2000/05/22 MOD START
*            idoc_amount = w_kin2
IDOC_AMOUNT = W_KIN_C
*2000/05/22 MOD END
EXCEPTIONS
OTHERS      = 1.

*2000/05/22 ADD START
*2000/06/02 MOD START
*   w_kin2 = w_kin_c.
P_KIN = W_KIN_C.
*2000/06/02 MOD END
*2000/05/22 ADD END

ENDFORM.                    " GET_D_TUKA
*&---------------------------------------------------------------------*
*&      Form  GET_DECIMALS  2000/01/12 ADD
*&---------------------------------------------------------------------*
*       小数部の桁数取得
*----------------------------------------------------------------------*
FORM GET_DECIMALS.
CLEAR: W_SEI,W_SYO.
CALL FUNCTION 'FWOS_CURRENCY_DECIMALS_READ'
EXPORTING
I_CURRENCY    = W_TUKA
IMPORTING
E_DECIMALS    = W_SYO
EXCEPTIONS
OTHERS      = 1.
W_SEI = 14 - W_SYO.

ENDFORM.                    " GET_DECIMALS
*&---------------------------------------------------------------------*
*&      Form  GOUKEI_D_ONLY 2000/06/02
*&---------------------------------------------------------------------*
*       通貨コードブレイク時の伝票通貨集計出力
*----------------------------------------------------------------------*
FORM GOUKEI_D_ONLY.
PERFORM GET_DECIMALS.
W_SEI = W_SEI + 1.
PERFORM YF01NUMC USING W_KARI2 W_SEI W_SYO.
* 2000/06/05 MOD START
*   write:  /113 o_num using edit mask 'RR________________'.
WRITE:  /106 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
PERFORM YF01NUMC USING W_KASI2 W_SEI W_SYO.
* 2000/06/05 MOD START
*   write:  129 o_num using edit mask 'RR________________'.
WRITE:  121 O_NUM USING EDIT MASK 'RR______________'.
* 2000/06/05 MOD END
CLEAR: W_KARI2,
W_KASI2.
W_MIN_DAT = IN_TABLE2-BUDAT.
PERFORM GET_D_ZAN.
ENDFORM.                    " GOUKEI_D_ONLY
*&---------------------------------------------------------------------*
*&      Form  ADD_ZENJITU 2000/06/02 ADD
*&---------------------------------------------------------------------*
*       国内通貨残に当月の初日から第一明細までの値を加算
*----------------------------------------------------------------------*
FORM ADD_ZENJITU.
SELECT SHKZG DMBTR FROM BSID INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND BUDAT < W_MIN_DAT
AND BUDAT >= W_FST_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -100.
ELSE.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * 100.
ENDIF.
W_KURI = W_KURI + T_D_ZAN-WRBTR.
ENDLOOP.

SELECT SHKZG DMBTR FROM BSAD INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND BUDAT < W_MIN_DAT
AND BUDAT >= W_FST_DAT
AND AUGDT => W_MIN_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -1.
ELSE.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * 100.
ENDIF.
W_KURI = W_KURI + T_D_ZAN-WRBTR.
ENDLOOP.

ENDFORM.                    " ADD_ZENJITU
