REPORT ZF021600_BK20130412 MESSAGE-ID Z1.
************************************************************************
* プログラムID  :ZF021600
* プログラム名  :仕訳データダウンロード
* 作成日        :2008/01/15
* 作成者        :DMC
* 変更履歴      :
*& YYYY/MM/DD  Programar         Description
*& 2012/08/22  ISID              ES-UP
************************************************************************
TABLES: BKPF,
BSEG.


*** 構造 ***

* 伝票ヘッダ
TYPES:BEGIN OF TYP_BKPF_00,
BUKRS         TYPE BKPF-BUKRS,        "会社コード
BELNR         TYPE BKPF-BELNR,        "伝票番号
GJAHR         TYPE BKPF-GJAHR,        "会計年度
BLART         TYPE BKPF-BLART,        "伝票タイプ
BUDAT         TYPE BKPF-BUDAT,        "転記日付
MONAT         TYPE BKPF-MONAT,        "会計期間
CPUDT         TYPE BKPF-CPUDT,        "登録日
USNAM         TYPE BKPF-USNAM,        "登録者ID
END   OF TYP_BKPF_00.

* 伝票明細
TYPES:BEGIN OF TYP_BSEG_00,
BUKRS         TYPE BSEG-BUKRS,        "会社コード
BELNR         TYPE BSEG-BELNR,        "伝票番号
GJAHR         TYPE BSEG-GJAHR,        "会計年度
KOART         TYPE BSEG-KOART,        "勘定タイプ
SHKZG         TYPE BSEG-SHKZG,        "貸借フラグ
GSBER         TYPE BSEG-GSBER,        "事業領域
DMBTR         TYPE BSEG-DMBTR,        "国内通貨額
SGTXT         TYPE BSEG-SGTXT,        "明細テキスト
KOSTL         TYPE BSEG-KOSTL,        "原価センタ
HKONT         TYPE BSEG-HKONT,        "G/L勘定コード
PRCTR         TYPE BSEG-PRCTR,        "利益センタ
END   OF TYP_BSEG_00.

* 出力用ファイル項目
TYPES:BEGIN OF TYP_FILE,
BELNR_C(32)   TYPE C,        "仕訳番号
HKONT_C(32)   TYPE C,        "科目コード
DMBTR_C(15)   TYPE C,        "金額
UNIT(42)      TYPE C,        "事業単位
BUDAT_C(20)   TYPE C,        "仕訳取引計上日
MONAT_C(42)   TYPE C,        "期間
CPUDT_C(20)   TYPE C,        "仕訳入力日
USNAM_C(42)   TYPE C,        "仕訳作成者
GENSEN(42)    TYPE C,        "仕訳取引源泉
SGTXT_C(202)  TYPE C,        "適用
OTHER01(52)   TYPE C,        "その他１
OTHER02(52)   TYPE C,        "その他２
OTHER03(52)   TYPE C,        "その他３
END   OF TYP_FILE.

* 出力用ファイル
TYPES:BEGIN OF TYP_DATA,
LINE(1000)    TYPE C,
END   OF TYP_DATA.

*** テーブル ***
DATA: GT_BKPF_00   TYPE TABLE OF TYP_BKPF_00.
DATA: GT_BSEG_DMY  TYPE TABLE OF TYP_BSEG_00.

*** 変数
DATA: GV_CNT    TYPE I.
DATA: GV_GOUKEI TYPE GLT0-HSLVT.
*** 固定値 ***
CONSTANTS:
CNS_DEF_PATH(03)  TYPE C VALUE 'C:\',
CNS_MASK(70)      TYPE C VALUE '*.CSV,ALL FILES,*.*.',
CNS_MODE(01)      TYPE C VALUE 'S',
CNS_TITLE1(06)    TYPE C VALUE '出力先'.
* テキスト：補助元帳
CONSTANTS: CST_HOJO_AR(04)   TYPE C VALUE '債権',
CST_HOJO_AP(04)   TYPE C VALUE '債務'.

* テキスト：他システム
CONSTANTS: CST_SDMM_URI(04)   TYPE C VALUE '売上',
CST_SDMM_GEN(04)   TYPE C VALUE '原価',
CST_SDMM_SYO(04)   TYPE C VALUE '商品',
CST_SDMM_NYU(04)   TYPE C VALUE '入仮'.
* Add ES-UP 2012/08/22 -->
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
* Add ES-UP 2012/08/22 <--
*** 選択パラメータ ***
PARAMETERS    : P_BUKRS  TYPE BKPF-BUKRS DEFAULT 'C001'
OBLIGATORY.
SELECT-OPTIONS: S_BELNR  FOR  BSEG-BELNR.
SELECT-OPTIONS: S_BUDAT  FOR  BKPF-BUDAT NO-EXTENSION
OBLIGATORY.
SELECT-OPTIONS: S_CPUDT  FOR  BKPF-CPUDT NO-EXTENSION.

SELECTION-SCREEN BEGIN OF BLOCK BL1 WITH FRAME TITLE TEXT-001.

PARAMETERS    : P_FILE   TYPE RLGRAP-FILENAME LOWER CASE
OBLIGATORY.
SELECTION-SCREEN BEGIN OF LINE.
* ローカル
PARAMETERS:P_LOCAL RADIOBUTTON GROUP RB1 DEFAULT 'X'.
SELECTION-SCREEN: COMMENT 4(8) TEXT-002, POSITION 14.
* サーバ
PARAMETERS:P_SERVE RADIOBUTTON GROUP RB1.
SELECTION-SCREEN: COMMENT 17(6) TEXT-003.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK BL1.

INITIALIZATION.
************************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
************************************************************************
* ファイル入出力先の検索ウィンドウ呼び出し処理
PERFORM CALL_WS_FILENAME_GET USING SPACE
CNS_DEF_PATH
CNS_MASK
CNS_MODE
CNS_TITLE1
CHANGING P_FILE.

START-OF-SELECTION.
* ローカル出力
IF P_LOCAL = 'X'.
IF NOT P_FILE CS ':\'.
MESSAGE S400 WITH 'ファイルパスが取得できません'.
STOP.
ENDIF.
ENDIF.
PERFORM GET_BKPF.

IF NOT GT_BKPF_00[] IS INITIAL.
PERFORM MAKE_RECORD.
ELSE.
MESSAGE S400(Z1) WITH '対象データが存在しません'.
STOP.
ENDIF.
PERFORM WRITE_LOG.
*&---------------------------------------------------------------------*
*&      FORM CALL_WS_FILENAME_GET
*&---------------------------------------------------------------------*
*       ファイル入出力先の検索ウィンドウ呼び出し処理
*----------------------------------------------------------------------*
FORM CALL_WS_FILENAME_GET USING PV_FILENAME
PV_PATH
PV_MASK
PV_MODE
PV_TITLE
CHANGING PV_PATH_C.
* Mod ES-UP 2012/08/22 -->
*  CALL FUNCTION 'WS_FILENAME_GET'
*       EXPORTING
*            DEF_FILENAME     = PV_FILENAME
*            DEF_PATH         = PV_PATH
*            MASK             = PV_MASK
*            MODE             = PV_MODE
*            TITLE            = PV_TITLE
*       IMPORTING
*            FILENAME         = PV_PATH_C
*       EXCEPTIONS
*            INV_WINSYS       = 1
*            NO_BATCH         = 2
*            SELECTION_CANCEL = 3
*            SELECTION_ERROR  = 4
*            OTHERS           = 5.
*  IF SY-SUBRC <> 0 AND
*     SY-SUBRC <> 3.
DATA: L_FILENAME    TYPE STRING,
L_PATH        TYPE STRING,
L_FULLPATH    TYPE STRING,
L_TITLE       TYPE STRING,
L_USER_ACTION TYPE I.
L_TITLE = PV_TITLE.
CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG(
EXPORTING
WINDOW_TITLE         = L_TITLE
*      DEFAULT_EXTENSION    = DEFAULT_EXTENSION
*      DEFAULT_FILE_NAME    = DEFAULT_FILE_NAME
*      WITH_ENCODING        = WITH_ENCODING
*      FILE_FILTER          = FILE_FILTER
*      INITIAL_DIRECTORY    = INITIAL_DIRECTORY
*      PROMPT_ON_OVERWRITE  = 'X'
CHANGING
FILENAME             = L_FILENAME
PATH                 = L_PATH
FULLPATH             = L_FULLPATH
USER_ACTION          = L_USER_ACTION
*      FILE_ENCODING        = FILE_ENCODING
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4 ).
IF SY-SUBRC = 0
AND L_USER_ACTION = CL_GUI_FRONTEND_SERVICES=>ACTION_OK.
PV_PATH_C = L_FULLPATH.
else.
* Mod ES-UP 2012/08/22 <--
MESSAGE S400 WITH 'ファイルパスが取得できません'.
* Del ES-UP 2012/08/22 -->
*    STOP.
* Del ES-UP 2012/08/22 <--
ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_BKPF
*&---------------------------------------------------------------------*
*       伝票ヘッダの取得
*----------------------------------------------------------------------*
FORM GET_BKPF.

SELECT BUKRS        "会社コード
BELNR        "伝票番号
GJAHR        "会計年度
BLART        "伝票タイプ
BUDAT        "転記日付
MONAT        "会計期間
CPUDT        "登録日
USNAM        "登録者ID
FROM BKPF INTO TABLE GT_BKPF_00
WHERE BUKRS =  P_BUKRS
AND BELNR IN S_BELNR
AND BUDAT IN S_BUDAT
AND CPUDT IN S_CPUDT.

ENDFORM.                    " GET_BKPF
*&---------------------------------------------------------------------*
*&      Form  make_record
*&---------------------------------------------------------------------*
*       レコード作成
*----------------------------------------------------------------------*
FORM MAKE_RECORD.

DATA: LW_BKPF       TYPE TYP_BKPF_00.
DATA: LW_BSEG       TYPE TYP_BSEG_00.
DATA: LW_FILE       TYPE TYP_FILE.
DATA: LW_DATA       TYPE TYP_DATA.
DATA: L_STR_FILE    TYPE STRING.
DATA: LT_LOCAL_FILE TYPE TABLE OF TYP_DATA.
DATA: LT_BSEG       TYPE TABLE OF  TYP_BSEG_00.
* Add ES-UP 2012/08/22 -->
DATA L_CODEPAGE TYPE ABAP_ENCODING.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
* Add ES-UP 2012/08/22 <--
* ローカル出力
IF P_LOCAL = 'X'.
PERFORM CHECK_FILE.                "ファイル存在チェック
* サーバ出力
ELSE.

*   テキストモードでファイルをオープン
* Mod ES-UP 2012/08/22 -->
*    OPEN DATASET P_FILE FOR OUTPUT IN TEXT MODE.
OPEN DATASET P_FILE FOR OUTPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
* Mod ES-UP 2012/08/22 <--
IF SY-SUBRC <> 0.
MESSAGE S400(Z1) WITH 'ファイルオープンエラー'.
STOP.
ENDIF.
ENDIF.

*>伝票ヘッダ毎の処理
LOOP AT GT_BKPF_00 INTO LW_BKPF.
AT FIRST.
*     ヘッダの作成
PERFORM MAKE_HEADER CHANGING LW_DATA.
*     ローカル出力
IF P_LOCAL = 'X'.
APPEND LW_DATA TO LT_LOCAL_FILE.
*     サーバ出力
ELSE.
*  -->  レコードの書き出し
TRANSFER LW_DATA TO P_FILE.
IF SY-SUBRC <> 0.
MESSAGE S400(Z1) WITH 'ファイル書込エラー'.
STOP.
ENDIF.
ENDIF.
CLEAR LW_DATA.
ENDAT.

*-> 明細レコードを取得
PERFORM GET_BSEG USING LW_BKPF
CHANGING LT_BSEG[].
*-> 明細レコード毎の処理
LOOP AT LT_BSEG INTO LW_BSEG.
*-->  出力レコードの編集
PERFORM EDIT_RECORD USING LW_BKPF
LW_BSEG
CHANGING LW_FILE.
*-->  CSVレコードの作成
PERFORM EDIT_CSV USING LW_FILE
CHANGING LW_DATA.

*     ローカル出力
IF P_LOCAL = 'X'.
APPEND LW_DATA TO LT_LOCAL_FILE.
CLEAR LW_DATA.
*     サーバ出力
ELSE.

*  -->  レコードの書き出し
TRANSFER LW_DATA TO P_FILE.
IF SY-SUBRC <> 0.
MESSAGE S400(Z1) WITH 'ファイル書込エラー'.
STOP.
ENDIF.
ENDIF.

GV_CNT = GV_CNT + 1.
ENDLOOP.
ENDLOOP.

* ローカル出力の場合
IF P_LOCAL = 'X'.
L_STR_FILE = P_FILE.
CALL FUNCTION 'GUI_DOWNLOAD'
EXPORTING
FILENAME                = L_STR_FILE
* Add ES-UP 2012/10/25 -->
CODEPAGE                  = L_CODEPAGE
* Add ES-UP 2012/10/25 <--
TABLES
DATA_TAB                = LT_LOCAL_FILE
EXCEPTIONS
FILE_WRITE_ERROR        = 1
NO_BATCH                = 2
GUI_REFUSE_FILETRANSFER = 3
INVALID_TYPE            = 4
NO_AUTHORITY            = 5
UNKNOWN_ERROR           = 6
HEADER_NOT_ALLOWED      = 7
SEPARATOR_NOT_ALLOWED   = 8
FILESIZE_NOT_ALLOWED    = 9
HEADER_TOO_LONG         = 10
DP_ERROR_CREATE         = 11
DP_ERROR_SEND           = 12
DP_ERROR_WRITE          = 13
UNKNOWN_DP_ERROR        = 14
ACCESS_DENIED           = 15
DP_OUT_OF_MEMORY        = 16
DISK_FULL               = 17
DP_TIMEOUT              = 18
FILE_NOT_FOUND          = 19
DATAPROVIDER_EXCEPTION  = 20
CONTROL_FLUSH_ERROR     = 21
OTHERS                  = 22.

*   出力失敗の場合
IF SY-SUBRC <> 0.
MESSAGE S400 WITH 'ファイルの出力に失敗しました'.
STOP.
ENDIF.

* サーバ出力の場合
ELSE.

*   ファイルをクローズ
CLOSE DATASET P_FILE.

ENDIF.
ENDFORM.                    " make_record
*&---------------------------------------------------------------------*
*&      Form  CHECK_FILE
*&---------------------------------------------------------------------*
*       ファイル存在チェック
*----------------------------------------------------------------------*
FORM CHECK_FILE.

DATA: L_FILE      TYPE STRING,
L_RESULT(1) TYPE C,
L_ANSWER(1) TYPE C.
CLEAR:L_RESULT,L_ANSWER,L_FILE.
L_FILE = P_FILE.
CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_EXIST
EXPORTING
FILE            =  L_FILE
RECEIVING
RESULT          =  L_RESULT
EXCEPTIONS
CNTL_ERROR      = 1
ERROR_NO_GUI    = 2
WRONG_PARAMETER = 3
OTHERS          = 4.
* 存在する場合
IF L_RESULT = 'X'.
*   ファイルの上書き確認を行う
CALL FUNCTION 'POPUP_TO_CONFIRM'
EXPORTING
TITLEBAR       = TEXT-M03
TEXT_QUESTION  = TEXT-M04
TEXT_BUTTON_1  = TEXT-M05
TEXT_BUTTON_2  = TEXT-M06
IMPORTING
ANSWER         = L_ANSWER
EXCEPTIONS
TEXT_NOT_FOUND = 1
OTHERS         = 2.
*  【いええ】/【中止】が選択された場合
IF L_ANSWER <> '1'.
*     処理終了、元の画面に戻す
STOP.
ENDIF.
ENDIF.

ENDFORM.                    " CHECK_FILE
*&---------------------------------------------------------------------*
*&      Form  MAKE_HEADER
*&---------------------------------------------------------------------*
*       ヘッダの作成
*----------------------------------------------------------------------*
FORM MAKE_HEADER CHANGING VALUE(PW_DATA) TYPE TYP_DATA.

CLEAR: PW_DATA.

CONCATENATE '仕訳番号'
'科目コード'
'金額'
'事業単位'
'仕訳取引計上日'
'期間'
'仕訳入力日'
'仕訳作成者'
'仕訳取引源泉'
'摘要'
'その他１'
'その他２'
'その他３'
INTO PW_DATA SEPARATED BY ','.

ENDFORM.                    "MAKE_HEADER
*&---------------------------------------------------------------------*
*&      Form  GET_BSEG
*&---------------------------------------------------------------------*
*       伝票明細の取得
*----------------------------------------------------------------------*
FORM GET_BSEG USING VALUE(PW_BKPF) TYPE TYP_BKPF_00
CHANGING VALUE(PT_BSEG) LIKE GT_BSEG_DMY[].

REFRESH: PT_BSEG.

SELECT BUKRS        "会社コード
BELNR        "伝票番号
GJAHR        "会計年度
KOART        "勘定タイプ
SHKZG        "貸借フラグ
GSBER        "事業領域
DMBTR        "国内通貨額
SGTXT        "明細テキスト
KOSTL        "原価センタ
HKONT        "G/L勘定コード
PRCTR        "利益センタ
FROM BSEG INTO TABLE PT_BSEG
WHERE BUKRS = PW_BKPF-BUKRS
AND BELNR = PW_BKPF-BELNR
AND GJAHR = PW_BKPF-GJAHR.

ENDFORM.                    " GET_BSEG

*&---------------------------------------------------------------------*
*&      Form  edit_record
*&---------------------------------------------------------------------*
*       出力レコードの編集
*----------------------------------------------------------------------*
FORM EDIT_RECORD USING VALUE(PW_BKPF)  TYPE TYP_BKPF_00
VALUE(PW_BSEG)  TYPE TYP_BSEG_00
CHANGING VALUE(PW_FILE)  TYPE TYP_FILE.

DATA: LV_DMBTR   TYPE BSEG-DMBTR.
DATA: LV_DMBTR_C TYPE TYP_FILE-DMBTR_C.

CLEAR: PW_FILE.

* 項目の単純コピー(from ヘッダ)
PW_FILE-BELNR_C = PW_BKPF-BELNR.     "仕訳番号
PW_FILE-MONAT_C = PW_BKPF-MONAT.     "期間
PW_FILE-USNAM_C = PW_BKPF-USNAM.     "仕訳作成者

* 項目の単純コピー(from 明細)
PW_FILE-HKONT_C = PW_BSEG-HKONT.      "科目コード
PW_FILE-SGTXT_C = PW_BSEG-SGTXT.      "適用
PW_FILE-UNIT    = PW_BSEG-PRCTR.      "事業単位

* 日付編集項目
WRITE PW_BKPF-BUDAT TO PW_FILE-BUDAT_C
USING EDIT MASK '____/__/__'.  "仕訳取引計上日


WRITE PW_BKPF-CPUDT TO PW_FILE-CPUDT_C
USING EDIT MASK '____/__/__'.  "仕訳入力日

* 仕訳取引源泉
CASE PW_BSEG-KOART.
WHEN 'K'.
PW_FILE-GENSEN = CST_HOJO_AP.  "債務
WHEN 'D'.
PW_FILE-GENSEN = CST_HOJO_AR.  "債権
WHEN OTHERS.
CASE PW_BKPF-BLART.
WHEN 'RV'.
CASE PW_BSEG-HKONT.
WHEN '0004101001'.
PW_FILE-GENSEN = CST_SDMM_URI. "売上
WHEN '0004101002'.
PW_FILE-GENSEN = CST_SDMM_URI. "売上
WHEN OTHERS.
ENDCASE.
WHEN 'WL'.
CASE PW_BSEG-HKONT.
WHEN '0001110001'.
PW_FILE-GENSEN = CST_SDMM_SYO. "商品
WHEN '0005110001'.
PW_FILE-GENSEN = CST_SDMM_GEN. "原価
WHEN '0005110002'.
PW_FILE-GENSEN = CST_SDMM_GEN. "原価
WHEN OTHERS.
ENDCASE.
WHEN 'WE'.
CASE PW_BSEG-HKONT.
WHEN '0001110001'.
PW_FILE-GENSEN = CST_SDMM_SYO. "商品
WHEN '0002190000'.
PW_FILE-GENSEN = CST_SDMM_NYU. "入仮
WHEN OTHERS.
ENDCASE.
WHEN 'RE'.
CASE PW_BSEG-HKONT.
WHEN '0002190000'.
PW_FILE-GENSEN = CST_SDMM_NYU. "入仮
WHEN OTHERS.
ENDCASE.
WHEN OTHERS.
ENDCASE.
ENDCASE.

IF PW_BSEG-SHKZG = 'H'.
LV_DMBTR = PW_BSEG-DMBTR * -1.
ELSE.
LV_DMBTR = PW_BSEG-DMBTR.
ENDIF.

** 金額項目
* 合計額に加算
GV_GOUKEI = GV_GOUKEI + LV_DMBTR.
WRITE LV_DMBTR TO LV_DMBTR_C  CURRENCY 'JPY' NO-GROUPING.

* 貸方なら前マイナス編集
PERFORM EDIT_MINUS USING LV_DMBTR_C
CHANGING PW_FILE-DMBTR_C.

ENDFORM.                    " edit_record

*&---------------------------------------------------------------------*
*&      Form  EDIT_CSV
*&---------------------------------------------------------------------*
*       CSV編集
*----------------------------------------------------------------------*
FORM EDIT_CSV USING VALUE(PW_FILE) TYPE TYP_FILE
CHANGING VALUE(PW_DATA) TYPE TYP_DATA.
CLEAR: PW_DATA.
CONCATENATE '"' PW_FILE-BELNR_C '"'       "仕訳番号
INTO PW_FILE-BELNR_C.
CONCATENATE '"' PW_FILE-HKONT_C '"'       "科目コード
INTO PW_FILE-HKONT_C.
CONCATENATE '"' PW_FILE-UNIT '"'          "事業単位
INTO PW_FILE-UNIT.
CONCATENATE '"' PW_FILE-MONAT_C '"'       "期間
INTO PW_FILE-MONAT_C.
CONCATENATE '"' PW_FILE-USNAM_C '"'       "仕訳作成者
INTO PW_FILE-USNAM_C.
CONCATENATE '"' PW_FILE-GENSEN '"'        "仕訳取引源泉
INTO PW_FILE-GENSEN.
CONCATENATE '"' PW_FILE-SGTXT_C '"'       "適用
INTO PW_FILE-SGTXT_C.
CONCATENATE '"' PW_FILE-OTHER01 '"'       "その他１
INTO PW_FILE-OTHER01.
CONCATENATE '"' PW_FILE-OTHER02 '"'       "その他２
INTO PW_FILE-OTHER02.
CONCATENATE '"' PW_FILE-OTHER03 '"'      "その他３
INTO PW_FILE-OTHER03.

CONCATENATE PW_FILE-BELNR_C       "仕訳番号
PW_FILE-HKONT_C       "科目コード
PW_FILE-DMBTR_C       "金額
PW_FILE-UNIT          "事業単位
PW_FILE-BUDAT_C       "仕訳取引計上日
PW_FILE-MONAT_C       "期間
PW_FILE-CPUDT_C       "仕訳入力日
PW_FILE-USNAM_C       "仕訳作成者
PW_FILE-GENSEN        "仕訳取引源泉
PW_FILE-SGTXT_C       "適用
PW_FILE-OTHER01       "その他１
PW_FILE-OTHER02       "その他２
PW_FILE-OTHER03       "その他３
INTO PW_DATA SEPARATED BY ','.
ENDFORM.                    " EDIT_CSV

*&---------------------------------------------------------------------*
*&      Form  write_log
*&---------------------------------------------------------------------*
*       ログ出力
*----------------------------------------------------------------------*
FORM WRITE_LOG.

DATA: LV_GOUKEI(15)   TYPE C.
DATA: LV_KENSUU(15)   TYPE C.
DATA: LT_LOG_FILE     TYPE TABLE OF TYP_DATA,
LW_LOG_FILE     TYPE TYP_DATA,
L_NEW_FILE_NAME TYPE STRING,
L_FPATH         LIKE RLGRAP-FILENAME,
L_LONG_FILENAME LIKE DBMSGORA-FILENAME,
L_PURE_FILENAME LIKE DBMSGORA-FILENAME.
* Add ES-UP 2012/08/22 -->
DATA L_CODEPAGE TYPE ABAP_ENCODING.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
* Add ES-UP 2012/08/22 <--
WRITE GV_GOUKEI TO LV_GOUKEI CURRENCY 'JPY'.
LV_KENSUU = GV_CNT.

WRITE: /    '仕訳レコード件数：',
20 LV_KENSUU,
35 '件'.
WRITE: /    '仕訳合計金額    ：',
20 LV_GOUKEI,
35 '円'.

CLEAR LW_LOG_FILE.
CONCATENATE '仕訳レコード件数：'
LV_KENSUU
'件'
INTO LW_LOG_FILE.
APPEND LW_LOG_FILE TO LT_LOG_FILE.

CLEAR LW_LOG_FILE.
CONCATENATE '仕訳合計金額    ：'
LV_GOUKEI
'円'
INTO LW_LOG_FILE.
APPEND LW_LOG_FILE TO LT_LOG_FILE.

CALL FUNCTION 'LIST_SPLIT_PATH'
EXPORTING
FILENAME = P_FILE
IMPORTING
PATHNAME = L_FPATH.

L_LONG_FILENAME = P_FILE.
PERFORM SPLIT_FILENAME CHANGING L_LONG_FILENAME
L_PURE_FILENAME.
CLEAR L_NEW_FILE_NAME.
CONCATENATE L_FPATH
L_PURE_FILENAME
'_CTL.TXT'
INTO L_NEW_FILE_NAME.

* ローカル出力の場合
IF P_LOCAL = 'X'.
CALL FUNCTION 'GUI_DOWNLOAD'
EXPORTING
FILENAME                = L_NEW_FILE_NAME
* Add ES-UP 2012/08/22 -->
CODEPAGE                = L_CODEPAGE
* Add ES-UP 2012/08/22 <--
TABLES
DATA_TAB                = LT_LOG_FILE
EXCEPTIONS
FILE_WRITE_ERROR        = 1
NO_BATCH                = 2
GUI_REFUSE_FILETRANSFER = 3
INVALID_TYPE            = 4
NO_AUTHORITY            = 5
UNKNOWN_ERROR           = 6
HEADER_NOT_ALLOWED      = 7
SEPARATOR_NOT_ALLOWED   = 8
FILESIZE_NOT_ALLOWED    = 9
HEADER_TOO_LONG         = 10
DP_ERROR_CREATE         = 11
DP_ERROR_SEND           = 12
DP_ERROR_WRITE          = 13
UNKNOWN_DP_ERROR        = 14
ACCESS_DENIED           = 15
DP_OUT_OF_MEMORY        = 16
DISK_FULL               = 17
DP_TIMEOUT              = 18
FILE_NOT_FOUND          = 19
DATAPROVIDER_EXCEPTION  = 20
CONTROL_FLUSH_ERROR     = 21
OTHERS                  = 22.

*   出力失敗の場合
IF SY-SUBRC <> 0.
MESSAGE S400 WITH 'ログファイルの出力に失敗しました'.
STOP.
ENDIF.

* サーバ出力の場合
ELSE.
*   テキストモードでファイルをオープン
* Mod ES-UP 2012/08/22 -->
*    OPEN DATASET L_NEW_FILE_NAME FOR OUTPUT IN TEXT MODE.
OPEN DATASET L_NEW_FILE_NAME FOR OUTPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
* Mod ES-UP 2012/08/22 <--
IF SY-SUBRC <> 0.
MESSAGE S400(Z1) WITH 'ファイルオープンエラー'.
STOP.
ENDIF.
LOOP AT LT_LOG_FILE INTO LW_LOG_FILE.
*     レコードの書き出し
TRANSFER LW_LOG_FILE TO L_NEW_FILE_NAME.
IF SY-SUBRC <> 0.
MESSAGE S400(Z1) WITH 'ファイル書込エラー'.
STOP.
ENDIF.
ENDLOOP.
*   ファイルをクローズ
CLOSE DATASET L_NEW_FILE_NAME.
ENDIF.

ENDFORM.                    " write_log
*&---------------------------------------------------------------------*
*&      Form  EDIT_MINUS
*&---------------------------------------------------------------------*
*       マイナス編集
*----------------------------------------------------------------------*
FORM EDIT_MINUS USING VALUE(PV_BEFORE) TYPE TYP_FILE-DMBTR_C
CHANGING VALUE(PV_AFTER)  TYPE TYP_FILE-DMBTR_C.

DATA: LV_LEN     TYPE I.
DATA: LV_SHIFT     TYPE I.

CONDENSE PV_BEFORE NO-GAPS.
LV_LEN   = STRLEN( PV_BEFORE ).
LV_SHIFT = LV_LEN - 1.

IF PV_BEFORE+LV_SHIFT  = '-'.
PV_AFTER(01)         = '-'.
PV_AFTER+1(LV_SHIFT) = PV_BEFORE(LV_SHIFT).
ELSE.
PV_AFTER             = PV_BEFORE.
ENDIF.

ENDFORM.                    " EDIT_MINUS
*&---------------------------------------------------------------------*
*&      Form  SPLIT_FILENAME
*&---------------------------------------------------------------------*
*       ファイル名と拡張子を取得
*----------------------------------------------------------------------*
FORM SPLIT_FILENAME CHANGING LONG_FILENAME  LIKE DBMSGORA-FILENAME
PURE_FILENAME  LIKE DBMSGORA-FILENAME.
DATA: PURE_EXTENSION TYPE SDBAD-FUNCT,
SHIFTN  TYPE I,
DEL_SLASH(1)   VALUE '/',
DEL_BACK_SLASH VALUE '\',
DEL_POINT(1) VALUE '.'.

* Delete the path-part
* search for '/'
DO.
SEARCH LONG_FILENAME FOR DEL_SLASH.
IF SY-SUBRC > 0.
EXIT.
ENDIF.
SHIFTN = SY-FDPOS + 1.
SHIFT LONG_FILENAME BY SHIFTN PLACES LEFT.
ENDDO.
* search for '\'
DO.
SEARCH LONG_FILENAME FOR DEL_BACK_SLASH.
IF SY-SUBRC > 0.
EXIT.
ENDIF.
SHIFTN = SY-FDPOS + 1.
SHIFT LONG_FILENAME BY SHIFTN PLACES LEFT.
ENDDO.


* Split the rest
SPLIT LONG_FILENAME AT DEL_POINT INTO PURE_FILENAME PURE_EXTENSION.
CONDENSE PURE_FILENAME NO-GAPS.
CONDENSE PURE_EXTENSION NO-GAPS.
ENDFORM.
