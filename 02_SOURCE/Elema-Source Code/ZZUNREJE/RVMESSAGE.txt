*----------------------------------------------------------------------*
*   INCLUDE RVMESSAGE                                                  *
*----------------------------------------------------------------------*
* Meldungstypen
constants: type_a value 'A',
type_e value 'E',
type_i value 'I',
type_s value 'S',
type_w value 'W'.

* Message Objekt
constants: msg_object_sd_sls like balhdr-object value 'SD-SLS'.

* Meldungsgruppen
constants:
msgg_copy_item like balhdr-subobject value 'COPY_ITEM',
msgg_copy_header like balhdr-subobject value 'COPY_HDR',
msgg_check_item like balhdr-subobject value 'CHECK_ITEM',
msgg_check_header like balhdr-subobject value 'CHECK_HDR',
msgg_type_matching like balhdr-subobject value 'TYPE_MATCHING',
msgg_ppma like balhdr-subobject value 'PPMA',
msgg_rmba like balhdr-subobject value 'RMBA',
msgg_check_dlfl like balhdr-subobject value 'CHECK_DLFL',
msgg_obligo like balhdr-subobject value 'OBLIGO'.

* Makro zum Nachrichtensammeln
* Argument 1: Meldungsgruppe
* Argument 2: Meldungstyp
define message_collect.
move-corresponding sy to mess.
mess-msgty = &2.
message_collect_lord.
call function 'SD_MESSAGE_COLLECT'
exporting
i_mesg   = mess
i_object = msg_object_sd_sls
i_group  = &1
i_vbak   = vbak
i_vbap   = vbap
i_vbep   = vbep.
hinweis_protokoll_show = charx.
end-of-definition.

* message log for lean order processing
define message_collect_lord.

if call_activity eq gc_activity_lord.
move-corresponding sy to mess.
call function 'APPL_LOG_WRITE_SINGLE_MESSAGE'
exporting
object  = 'LORD'
message = mess.
endif.

end-of-definition.
