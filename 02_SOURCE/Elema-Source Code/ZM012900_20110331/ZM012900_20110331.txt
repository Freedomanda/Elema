*&---------------------------------------------------------------------*
*&  REPORT ZM012900                                                    *
*&         帳簿棚卸一覧表                                              *
*&---------------------------------------------------------------------*
*&  機能     :個別購買データ・在庫データをアドオンテーブルに格納する。
*&  作成日   :2010/08/27
*&  作成者   :S.KURATA(SOLFIS)
*&  変更履歴 :
*     2010/10/27
*       明細行編集・合計行追加
*     2011/03/30
*       DELETE条件にプラント追加
*&---------------------------------------------------------------------*
REPORT zm012900 MESSAGE-ID  z1
NO STANDARD PAGE HEADING
LINE-SIZE   100.

TABLES:t001w,marc,mard.
*----------------------------------------------------------------------*
*  型定義
*----------------------------------------------------------------------*
* 受注在庫情報格納用
TYPES:BEGIN OF t_mska,
matnr            TYPE mska-matnr,         "品目コード
werks            TYPE mska-werks,         "プラント
vbeln            TYPE mska-vbeln,         "販売伝票番号
posnr            TYPE mska-posnr,         "販売明細番号
kalab            TYPE mska-kalab,         "利用可能評価在庫
ekgrp            TYPE marc-ekgrp,         "購買グループ
lgpbe            TYPE mard-lgpbe,         "棚番
END OF t_mska.

* 受注伝票情報格納用
TYPES:BEGIN OF t_vbak,
vbeln            TYPE vbak-vbeln,         "販売伝票番号
bstnk            TYPE vbak-bstnk,         "得意先発注番号
kunnr            TYPE vbak-kunnr,         "受注先
name1            TYPE kna1-name1,         "名称１
END OF t_vbak.

* 品目情報格納用
TYPES:BEGIN OF t_mara,
matnr            TYPE makt-matnr,         "品目コード
maktx            TYPE makt-maktx,         "品目テキスト
mseh3            TYPE t006a-mseh3,        "商用数量単位
*--- Add Start 2010/10/27
wrkst            TYPE mara-wrkst,         "主構成物質
normt            TYPE mara-normt,         "標準テキスト
*--- Add End   2010/10/27
END OF t_mara.
TYPES:BEGIN OF t_mara_key,
matnr            TYPE mara-matnr,         "品目コード
END OF t_mara_key.

* 通貨格納用
TYPES:BEGIN OF t_t001k,
werks            TYPE t001k-bwkey,        "プラント
waers            TYPE t001-waers,         "通貨コード
END OF t_t001k.
TYPES:BEGIN OF t_t001k_key,
werks            TYPE t001k-bwkey,        "プラント
END OF t_t001k_key.

* 購買Grテキスト格納用
TYPES:BEGIN OF t_t024,
ekgrp            TYPE t024-ekgrp,         "購買グループ
eknam            TYPE t024-eknam,         "購買グループテキスト
END OF t_t024.
TYPES:BEGIN OF t_t024_key,
ekgrp            TYPE t024-ekgrp,         "購買グループ
END OF t_t024_key.

* 購買伝票情報格納用
TYPES:BEGIN OF t_ekko,
vbelv            TYPE vbfa-vbelv,         "先行販売伝票
posnv            TYPE vbfa-posnv,         "販売伝票前明細
vbeln            TYPE vbfa-vbeln,         "後続販売伝票
posnn            TYPE vbfa-posnn,         "販売伝票次明細
lifnr            TYPE ekko-lifnr,         "仕入先
name1            TYPE lfa1-name1,         "名称１
END OF t_ekko.

* 入庫日格納用
TYPES:BEGIN OF t_ekbe,
ebeln            TYPE ekbe-ebeln,         "購買伝票番号
ebelp            TYPE ekbe-ebelp,         "購買伝票明細
zekkn            TYPE ekbe-zekkn,         "連続番号
vgabe            TYPE ekbe-vgabe,         "履歴取引タイプ
gjahr            TYPE ekbe-gjahr,         "入出庫伝票年度
belnr            TYPE ekbe-belnr,         "入出庫伝票番号
buzei            TYPE ekbe-buzei,         "入出庫明細番号
bldat            TYPE ekbe-bldat,         "伝票日付
END OF t_ekbe.

* 受注納期格納用
TYPES:BEGIN OF t_vbep,
vbeln            TYPE vbep-vbeln,         "販売伝票番号
posnr            TYPE vbep-posnr,         "販売明細番号
edatu            TYPE vbep-edatu,         "納入日程日付
END OF t_vbep.

* 単価算出情報格納用
TYPES:BEGIN OF t_mbew,
matnr            TYPE mbew-matnr,         "品目コード
werks            TYPE mbew-bwkey,         "評価レベル
salk3            TYPE mbew-salk3,         "評価在庫合計額
verpr            TYPE mbew-verpr,         "移動平均原価
peinh            TYPE mbew-peinh,         "価格単位
END OF t_mbew.
TYPES:BEGIN OF t_mbew_key,
matnr            TYPE mbew-matnr,         "品目コード
werks            TYPE mbew-bwkey,         "プラント
END OF t_mbew_key.

* 在庫情報格納用
TYPES:BEGIN OF t_marc,
matnr            TYPE marc-matnr,         "品目コード
werks            TYPE marc-werks,         "プラント
ekgrp            TYPE marc-ekgrp,         "購買グループ
trame            TYPE marc-trame,         "積送中在庫
labst            TYPE mard-labst,         "利用可能在庫数量
speme            TYPE mard-speme,         "保留在庫
lgpbe            TYPE mard-lgpbe,         "棚番
END OF t_marc.

* 仕入先情報格納用
TYPES:BEGIN OF t_eord,
matnr            TYPE eord-matnr,         "品目コード
werks            TYPE eord-werks,         "プラント
zeord            TYPE eord-zeord,         "レコード番号
lifnr            TYPE eord-lifnr,         "仕入先
name1            TYPE lfa1-name1,         "名称１
END OF t_eord.

* 預託在庫格納用
TYPES:BEGIN OF t_msku,
matnr            TYPE msku-matnr,         "品目コード
werks            TYPE msku-werks,         "プラント
charg            TYPE msku-charg,         "ロット番号
kunnr            TYPE msku-kunnr,         "得意先
kulab            TYPE msku-kulab,         "利用可能評価在庫
END OF t_msku.

* 支給在庫格納用
TYPES:BEGIN OF t_mslb,
matnr           TYPE mslb-matnr,          "品目コード
werks           TYPE mslb-werks,          "プラント
charg           TYPE mslb-charg,          "ロット番号
lifnr           TYPE mslb-lifnr,          "仕入先
lblab           TYPE mslb-lblab,          "利用可能評価在庫
END OF t_mslb.

* 出済未出庫格納用(在庫データ)
TYPES:BEGIN OF t_zs0020,
matnr           TYPE zs0020-matnr,        "品目コード
werks           TYPE zs0020-werks,        "プラント
lfimg           TYPE zs0020-lfimg,        "出荷数量実績
END OF t_zs0020.

* 出済未出庫格納用(個別購買データ)
TYPES:BEGIN OF t_lips,
vgbel           TYPE lips-vgbel,          "受注伝票番号
vgpos           TYPE lips-vgpos,          "受注伝票明細
lfimg           TYPE lips-lfimg,          "出荷数量実績
END OF t_lips.

*--- Add Start 2010/10/27
TYPES:BEGIN OF t_total,
labst           TYPE mard-labst,          "当月残数
kulab           TYPE msku-kulab,          "預託在庫
lblab           TYPE mslb-lblab,          "支給在庫
trame           TYPE marc-trame,          "積送中在庫
lfimg           TYPE lips-lfimg,          "出荷数量
speme           TYPE mard-speme,          "保留在庫
END OF t_total.
*--- Add End   2010/10/27
*--- Add Start 2011/03/30
* 対象プラント
TYPES:BEGIN OF typ_plant,
werks TYPE marc-werks,                   "プラント
END OF typ_plant.
*--- Add End   2011/03/30
*----------------------------------------------------------------------*
*  内部テーブル・構造定義
*----------------------------------------------------------------------*
* 受注在庫情報格納用
DATA: it_mska           TYPE STANDARD TABLE OF t_mska,
wa_mska           TYPE t_mska.

* 受注伝票情報格納用
DATA: it_vbak           TYPE HASHED   TABLE OF t_vbak
WITH UNIQUE KEY vbeln,
wa_vbak           TYPE t_vbak.

* 品目情報格納用
DATA: it_mara           TYPE HASHED   TABLE OF t_mara
WITH UNIQUE KEY matnr,
wa_mara           TYPE t_mara,
it_mara_key       TYPE STANDARD TABLE OF t_mara_key,
wa_mara_key       TYPE t_mara_key.

* 通貨格納用
DATA: it_t001k          TYPE HASHED   TABLE OF t_t001k
WITH UNIQUE KEY werks,
wa_t001k          TYPE t_t001k,
it_t001k_key      TYPE STANDARD TABLE OF t_t001k_key,
wa_t001k_key      TYPE t_t001k_key.

* 購買Grテキスト格納用
DATA: it_t024           TYPE HASHED   TABLE OF t_t024
WITH UNIQUE KEY ekgrp,
wa_t024           TYPE t_t024,
it_t024_key       TYPE STANDARD TABLE OF t_t024_key,
wa_t024_key       TYPE t_t024_key.

* 購買伝票情報格納用
DATA: it_ekko           TYPE SORTED   TABLE OF t_ekko
WITH NON-UNIQUE KEY vbelv posnv,
wa_ekko           TYPE t_ekko.

* 入庫日格納用
DATA: it_ekbe           TYPE STANDARD TABLE OF t_ekbe,
wa_ekbe           TYPE t_ekbe.

* 受注納期格納用
DATA: it_vbep           TYPE HASHED   TABLE OF t_vbep
WITH UNIQUE KEY vbeln posnr,
wa_vbep           TYPE t_vbep.

* 単価算出情報格納用
DATA: it_mbew           TYPE HASHED   TABLE OF t_mbew
WITH UNIQUE KEY matnr werks,
wa_mbew           TYPE t_mbew,
it_mbew_key       TYPE STANDARD TABLE OF t_mbew_key,
wa_mbew_key       TYPE t_mbew_key.

* 在庫データテーブル登録用
DATA: it_zm0020         TYPE STANDARD TABLE OF zm0020,
wa_zm0020         TYPE zm0020.

* 在庫情報格納用
DATA: it_marc           TYPE STANDARD TABLE OF t_marc,
wa_marc           TYPE t_marc.

* 仕入先情報格納用
DATA: it_eord           TYPE SORTED TABLE OF t_eord
WITH NON-UNIQUE KEY matnr werks,
wa_eord           TYPE t_eord.

* 預託在庫格納用
DATA: it_msku           TYPE SORTED TABLE OF t_msku
WITH NON-UNIQUE KEY matnr werks,
wa_msku           TYPE t_msku.

* 支給在庫格納用
DATA: it_mslb           TYPE SORTED TABLE OF t_mslb
WITH NON-UNIQUE KEY matnr werks,
wa_mslb           TYPE t_mslb.

* 出済未出庫格納用(在庫データ)
DATA: it_zs0020         TYPE HASHED TABLE OF t_zs0020
WITH UNIQUE KEY matnr werks,
wa_zs0020         TYPE t_zs0020.

* 出済未出庫格納用(個別購買データ)
DATA: it_lips           TYPE STANDARD TABLE OF t_lips,
wa_lips           TYPE t_lips.

*--- Add Start 2010/10/27
DATA: wa_total          TYPE t_total.
*--- Add End   2010/10/27
*--- Add Start 2011/03/30
* 対象プラント
DATA: it_plant TYPE STANDARD TABLE OF typ_plant.
*--- Add End   2011/03/30
*----------------------------------------------------------------------*
*  変数定義
*----------------------------------------------------------------------*
DATA:
cnt_ins               TYPE i.

*----------------------------------------------------------------------*
*  定数定義
*----------------------------------------------------------------------*
CONSTANTS:
cns_month_01(2)       TYPE n VALUE '01',
cns_month_12(2)       TYPE n VALUE '12',
cns_spras_j(1)        TYPE c VALUE 'J',
cns_vbtyp_v(1)        TYPE c VALUE 'V',
cns_bwart_101(3)      TYPE c VALUE '101',
cns_etenr_0001(4)     TYPE n VALUE '0001',
cns_on(1)             TYPE c VALUE 'X',
cns_sobkz_w(1)        TYPE c VALUE 'W',
cns_sobkz_o(1)        TYPE c VALUE 'O',
cns_wbsta_c(1)        TYPE c VALUE 'C',
cns_lgpbe(4)          TYPE c VALUE '****'.

*----------------------------------------------------------------------*
*  選択画面定義
*----------------------------------------------------------------------*
*年
PARAMETERS     p_year   TYPE zm0020-zyear OBLIGATORY.
*月
PARAMETERS     p_month  TYPE zm0020-zmonth OBLIGATORY.
*プラント
SELECT-OPTIONS s_werks  FOR  t001w-werks MEMORY ID wrk OBLIGATORY.
*購買グループ
SELECT-OPTIONS s_ekgrp  FOR  marc-ekgrp  MEMORY ID ekg.
*品目コード
SELECT-OPTIONS s_matnr  FOR  marc-matnr.
*棚番
SELECT-OPTIONS s_lgpbe  FOR  mard-lgpbe.

*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.

* 月のチェック
IF p_month BETWEEN cns_month_01 AND cns_month_12.
ELSE.
*   月 が正しくありません
MESSAGE e009 WITH text-m01.
ENDIF.

*----------------------------------------------------------------------*
*  START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.

* 個別購買データ
PERFORM process_kobetsu.

* 在庫データ
PERFORM process_zaiko.

*--- Add Start 2010/10/27
* 処理対象データ再編集
PERFORM re-edit_stock_data.
*--- Add End   2010/10/27

* 処理対象データ存在チェック
IF it_zm0020 IS INITIAL.
*   帳簿棚卸一覧表に該当するデータがありません
MESSAGE s600 WITH text-m02.
LEAVE LIST-PROCESSING.
ENDIF.

* テーブル更新
PERFORM update_zm0020.

* 結果出力
* X件登録しました
MESSAGE s618 WITH cnt_ins.

*&---------------------------------------------------------------------*
*&      Form  PROCESS_KOBETSU
*&---------------------------------------------------------------------*
*       個別購買データ
*----------------------------------------------------------------------*
FORM process_kobetsu.

* データ取得
PERFORM get_data_kobetsu.

* 編集
PERFORM edit_data_kobetsu.

ENDFORM.                    " PROCESS_KOBETSU
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_KOBETSU
*&---------------------------------------------------------------------*
*       個別購買データ取得
*----------------------------------------------------------------------*
FORM get_data_kobetsu.

* 受注在庫情報
PERFORM get_mska.
IF it_mska IS INITIAL.
EXIT.
ENDIF.

* 受注伝票情報
PERFORM get_vbak.

* 品目情報
PERFORM get_mara_k.

* 通貨
PERFORM get_t001k_k.

* 購買グループ名
PERFORM get_t024_k.

* 購買伝票情報
PERFORM get_ekko.

* 入庫日
PERFORM get_ekbe.

* 受注納期
PERFORM get_vbep.

* 単価・在庫金額
PERFORM get_mbew_k.

* 出済未出庫
PERFORM get_lips.

ENDFORM.                    " GET_DATA_KOBETSU
*&---------------------------------------------------------------------*
*&      Form  GET_MSKA
*&---------------------------------------------------------------------*
*       受注在庫情報
*----------------------------------------------------------------------*
FORM get_mska.

DATA : lv_cnt   TYPE i,
lt_mska  TYPE STANDARD TABLE OF t_mska,
lw_mska  TYPE t_mska.

REFRESH it_mska.

SELECT mska~matnr         "品目コード
mska~werks         "プラント
mska~vbeln         "販売伝票番号
mska~posnr         "販売明細番号
mska~kalab         "利用可能評価在庫
marc~ekgrp         "購買グループ
mard~lgpbe         "棚番
INTO TABLE it_mska
FROM mska
INNER JOIN marc
ON mska~matnr = marc~matnr
AND mska~werks = marc~werks
INNER JOIN mard
ON marc~matnr = mard~matnr
AND marc~werks = mard~werks
WHERE mska~matnr IN s_matnr
AND mska~werks IN s_werks
AND mska~kalab <> 0
AND marc~ekgrp IN s_ekgrp
AND mard~lgpbe IN s_lgpbe.

* 同キーで複数レコード存在する場合、１レコードにして棚番に"****"を設定
* KEY：品目コード・プラント・販売伝票番号・販売明細番号
* ※同品目×プラントで、MARDが複数レコード存在する場合を考慮
CHECK sy-subrc = 0.
SORT it_mska BY matnr werks vbeln posnr.
LOOP AT it_mska INTO wa_mska.
lv_cnt = lv_cnt + 1.
CLEAR lw_mska.
lw_mska = wa_mska.
AT END OF posnr.
*     同KEYが１レコード
IF lv_cnt = 1.
APPEND lw_mska TO lt_mska.
ELSE.
lw_mska-lgpbe = cns_lgpbe.
APPEND lw_mska TO lt_mska.
ENDIF.
CLEAR lv_cnt.
ENDAT.
ENDLOOP.

REFRESH it_mska.
it_mska = lt_mska.

ENDFORM.                    " GET_MSKA
*&---------------------------------------------------------------------*
*&      Form  GET_VBAK
*&---------------------------------------------------------------------*
*       受注伝票情報
*----------------------------------------------------------------------*
FORM get_vbak.

DATA : lt_mska TYPE STANDARD TABLE OF t_mska.

REFRESH it_vbak.
lt_mska = it_mska.
SORT lt_mska BY vbeln.
DELETE ADJACENT DUPLICATES FROM lt_mska COMPARING vbeln.

SELECT vbak~vbeln         "販売伝票番号
vbak~bstnk         "得意先発注番号
vbak~kunnr         "受注先
kna1~name1         "名称１
INTO TABLE it_vbak
FROM vbak
INNER JOIN kna1
ON vbak~kunnr = kna1~kunnr
FOR ALL entries IN lt_mska
WHERE vbak~vbeln = lt_mska-vbeln.

ENDFORM.                    " GET_VBAK
*&---------------------------------------------------------------------*
*&      Form  GET_MARA_K
*&---------------------------------------------------------------------*
*       品目情報(個別購買)
*----------------------------------------------------------------------*
FORM get_mara_k.

DATA : lt_mska TYPE STANDARD TABLE OF t_mska.

REFRESH : it_mara,it_mara_key.
* 品目コードの重複を削除
lt_mska = it_mska.
SORT lt_mska BY matnr.
DELETE ADJACENT DUPLICATES FROM lt_mska COMPARING matnr.
LOOP AT lt_mska INTO wa_mska.
CLEAR wa_mara_key.
wa_mara_key-matnr = wa_mska-matnr.
APPEND wa_mara_key TO it_mara_key.
ENDLOOP.

PERFORM get_mara TABLES it_mara_key.
FREE it_mara_key.

ENDFORM.                    " GET_MARA_K
*&---------------------------------------------------------------------*
*&      Form  GET_MARA
*&---------------------------------------------------------------------*
*       品目情報
*----------------------------------------------------------------------*
*      -->IT_KEY  抽出条件項目(品目コード)
*----------------------------------------------------------------------*
FORM get_mara TABLES   it_key STRUCTURE wa_mara_key.

SELECT makt~matnr         "品目コード
makt~maktx         "品目テキスト
t006a~mseh3        "商用数量単位
*--- Add Start 2010/10/27
mara~wrkst         "主構成物質
mara~normt         "標準テキスト
*--- Add End   2010/10/27
INTO TABLE it_mara
FROM mara
INNER JOIN makt
ON mara~matnr = makt~matnr
INNER JOIN t006a
ON mara~meins = t006a~msehi
FOR ALL entries IN it_key
WHERE mara~matnr  = it_key-matnr
AND makt~spras  = cns_spras_j
AND t006a~spras = cns_spras_j.

ENDFORM.                    " GET_MARA
*&---------------------------------------------------------------------*
*&      Form  GET_T001K_K
*&---------------------------------------------------------------------*
*       通貨コード(個別購買)
*----------------------------------------------------------------------*
FORM get_t001k_k.

DATA : lt_mska TYPE STANDARD TABLE OF t_mska.

REFRESH : it_t001k,it_t001k_key.
* プラントの重複を削除
lt_mska = it_mska.
SORT lt_mska BY werks.
DELETE ADJACENT DUPLICATES FROM lt_mska COMPARING werks.
LOOP AT lt_mska INTO wa_mska.
CLEAR wa_t001k_key.
wa_t001k_key-werks = wa_mska-werks.
APPEND wa_t001k_key TO it_t001k_key.
ENDLOOP.

PERFORM get_t001k TABLES it_t001k_key.
FREE it_t001k_key.

ENDFORM.                    " GET_T001K_K
*&---------------------------------------------------------------------*
*&      Form  GET_T001K
*&---------------------------------------------------------------------*
*       通貨コード
*----------------------------------------------------------------------*
*      -->IT_KEY  抽出条件項目(プラント)
*----------------------------------------------------------------------*
FORM get_t001k TABLES   it_key STRUCTURE wa_t001k_key.

SELECT t001k~bwkey        "評価レベル
t001~waers         "通貨コード
INTO TABLE it_t001k
FROM t001k
INNER JOIN t001
ON t001k~bukrs = t001~bukrs
FOR ALL entries IN it_key
WHERE t001k~bwkey = it_key-werks.

ENDFORM.                                                    " GET_T001K
*&---------------------------------------------------------------------*
*&      Form  GET_T024_K
*&---------------------------------------------------------------------*
*       購買グループ名(個別購買)
*----------------------------------------------------------------------*
FORM get_t024_k.

DATA : lt_mska TYPE STANDARD TABLE OF t_mska.

REFRESH : it_t024,it_t024_key.
* 購買グループの重複を削除
lt_mska = it_mska.
SORT lt_mska BY ekgrp.
DELETE ADJACENT DUPLICATES FROM lt_mska COMPARING ekgrp.
LOOP AT lt_mska INTO wa_mska.
CLEAR wa_t024_key.
wa_t024_key-ekgrp = wa_mska-ekgrp.
APPEND wa_t024_key TO it_t024_key.
ENDLOOP.

PERFORM get_t024 TABLES it_t024_key.
FREE it_t024_key.

ENDFORM.                    " GET_T024_K
*&---------------------------------------------------------------------*
*&      Form  GET_T024
*&---------------------------------------------------------------------*
*       購買グループ名
*----------------------------------------------------------------------*
*      -->IT_KEY  抽出条件項目(購買グループ)
*----------------------------------------------------------------------*
FORM get_t024 TABLES   it_key STRUCTURE wa_t024_key.

SELECT ekgrp              "購買グループ
eknam              "購買グループテキスト
INTO TABLE it_t024
FROM t024
FOR ALL ENTRIES IN it_key
WHERE ekgrp = it_key-ekgrp.

ENDFORM.                                                    " GET_T024
*&---------------------------------------------------------------------*
*&      Form  GET_EKKO
*&---------------------------------------------------------------------*
*       購買伝票情報
*----------------------------------------------------------------------*
FORM get_ekko.

DATA : lt_mska TYPE STANDARD TABLE OF t_mska.

REFRESH it_ekko.
* 販売伝票番号・明細番号の重複を削除
lt_mska = it_mska.
SORT lt_mska BY vbeln posnr.
DELETE ADJACENT DUPLICATES FROM lt_mska COMPARING vbeln posnr.

SELECT vbfa~vbelv         "先行販売伝票
vbfa~posnv         "販売伝票前明細
vbfa~vbeln         "後続販売伝票
vbfa~posnn         "販売伝票次明細
ekko~lifnr         "仕入先
lfa1~name1         "仕入先名
INTO TABLE it_ekko
FROM vbfa
INNER JOIN ekko
ON vbfa~vbeln = ekko~ebeln
INNER JOIN lfa1
ON ekko~lifnr = lfa1~lifnr
FOR ALL entries IN lt_mska
WHERE vbfa~vbelv   = lt_mska-vbeln
AND vbfa~posnv   = lt_mska-posnr
AND vbfa~vbtyp_n = cns_vbtyp_v.

ENDFORM.                    " GET_EKKO
*&---------------------------------------------------------------------*
*&      Form  GET_EKBE
*&---------------------------------------------------------------------*
*       入庫日
*----------------------------------------------------------------------*
FORM get_ekbe.

IF it_ekko IS INITIAL.
EXIT.
ENDIF.

REFRESH it_ekbe.
SELECT ebeln              "購買伝票番号
ebelp              "購買伝票明細番号
zekkn              "連続番号
vgabe              "取引タイプ
gjahr              "入出庫伝票年度
belnr              "入出庫伝票番号
buzei              "入出庫明細番号
bldat              "伝票日付
INTO TABLE it_ekbe
FROM ekbe
FOR ALL ENTRIES IN it_ekko
WHERE ebeln = it_ekko-vbeln
AND bwart = cns_bwart_101.

ENDFORM.                    " GET_EKBE
*&---------------------------------------------------------------------*
*&      Form  GET_VBEP
*&---------------------------------------------------------------------*
*       受注納期
*----------------------------------------------------------------------*
FORM get_vbep.

REFRESH it_vbep.
SELECT vbeln         "販売伝票番号
posnr         "販売明細番号
edatu         "納入日程日付
INTO TABLE it_vbep
FROM vbep
FOR ALL ENTRIES IN it_mska
WHERE vbeln = it_mska-vbeln
AND posnr = it_mska-posnr
AND etenr = cns_etenr_0001.

ENDFORM.                    " GET_VBEP
*&---------------------------------------------------------------------*
*&      Form  GET_MBEW_K
*&---------------------------------------------------------------------*
*       単価・在庫金額（個別購買)
*----------------------------------------------------------------------*
FORM get_mbew_k.

DATA : lt_mska TYPE STANDARD TABLE OF t_mska.

REFRESH : it_mbew,it_mbew_key.
* 品目×プラントの重複を削除
lt_mska = it_mska.
SORT lt_mska BY matnr werks.
DELETE ADJACENT DUPLICATES FROM lt_mska COMPARING matnr werks.
LOOP AT lt_mska INTO wa_mska.
CLEAR wa_mbew_key.
wa_mbew_key-matnr = wa_mska-matnr.  "品目コード
wa_mbew_key-werks = wa_mska-werks.  "プラント
APPEND wa_mbew_key TO it_mbew_key.
ENDLOOP.

*--- Del Start 2010/10/27
*  PERFORM get_mbew TABLES it_mbew_key.
*  FREE it_mbew_key.
*--- Del End   2010/10/27
ENDFORM.                    " GET_MBEW_K
*&---------------------------------------------------------------------*
*&      Form  GET_MBEW
*&---------------------------------------------------------------------*
*       単価・在庫金額
*----------------------------------------------------------------------*
*      -->IT_KEY  抽出条件項目(品目コード・プラント)
*----------------------------------------------------------------------*
FORM get_mbew TABLES   it_key STRUCTURE wa_mbew_key.

SELECT matnr         "品目コード
bwkey         "評価レベル
salk3         "評価在庫合計額
verpr         "移動平均原価
peinh         "価格単位
INTO TABLE it_mbew
FROM mbew
FOR ALL ENTRIES IN it_key
WHERE matnr = it_key-matnr
AND bwkey = it_key-werks.

ENDFORM.                    " GET_MBEW
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA_KOBETSU
*&---------------------------------------------------------------------*
*       個別購買データ編集
*----------------------------------------------------------------------*
FORM edit_data_kobetsu.

DATA : lv_lfimg TYPE lips-lfimg.

* 入庫日を降順ソート　※同伝票番号で最新の日付を取得する為
SORT it_ekbe BY ebeln bldat DESCENDING.

LOOP AT it_mska INTO wa_mska.
CLEAR wa_zm0020.

*   受注伝票情報検索
CLEAR wa_vbak.
READ TABLE it_vbak  INTO wa_vbak
WITH TABLE KEY vbeln = wa_mska-vbeln.
*   品目情報
CLEAR wa_mara.
READ TABLE it_mara  INTO wa_mara
WITH TABLE KEY matnr = wa_mska-matnr.
*   通貨
CLEAR wa_t001k.
READ TABLE it_t001k INTO wa_t001k
WITH TABLE KEY werks = wa_mska-werks.
*   購買グループ名
CLEAR wa_t024.
READ TABLE it_t024  INTO wa_t024
WITH TABLE KEY ekgrp = wa_mska-ekgrp.
*   購買伝票情報
CLEAR wa_ekko.
READ TABLE it_ekko  INTO wa_ekko
WITH TABLE KEY vbelv = wa_mska-vbeln
posnv = wa_mska-posnr.
*   入庫日
CLEAR wa_ekbe.
LOOP AT it_ekbe INTO wa_ekbe
WHERE ebeln = wa_ekko-vbeln.
*     取得できたらLOOPを抜ける
EXIT.
ENDLOOP.

*   受注納期
CLEAR wa_vbep.
READ TABLE it_vbep  INTO wa_vbep
WITH TABLE KEY vbeln = wa_mska-vbeln
posnr = wa_mska-posnr.
*--- Del Start 2010/10/27
**   単価・在庫金額
*    CLEAR wa_mbew.
*    READ TABLE it_mbew  INTO wa_mbew
*                        WITH TABLE KEY matnr = wa_mska-matnr
*                                       werks = wa_mska-werks.
*--- Del End   2010/10/27
*   出済未出庫
CLEAR lv_lfimg.
LOOP AT it_lips INTO wa_lips WHERE vgbel = wa_mska-vbeln
AND vgpos = wa_mska-posnr.
*     未出庫の出荷数を集計
lv_lfimg = lv_lfimg + wa_lips-lfimg.
ENDLOOP.

wa_zm0020-zyear   = p_year.                  "年
wa_zm0020-zmonth  = p_month.                 "月
wa_zm0020-werks   = wa_mska-werks.           "プラント
wa_zm0020-matnr   = wa_mska-matnr.           "品目コード
wa_zm0020-vbeln   = wa_mska-vbeln.           "受注番号
wa_zm0020-posnr   = wa_mska-posnr.           "明細番号
wa_zm0020-maktx   = wa_mara-maktx.           "品目名
wa_zm0020-lgpbe   = wa_mska-lgpbe.           "棚番
wa_zm0020-mseh3   = wa_mara-mseh3.           "単位
wa_zm0020-waers   = wa_t001k-waers.          "通貨
wa_zm0020-eknam   = wa_t024-eknam.           "グループ名
wa_zm0020-kunnr   = wa_vbak-kunnr.           "得意先
wa_zm0020-kname   = wa_vbak-name1.           "得意先名
wa_zm0020-bstnk   = wa_vbak-bstnk.           "得意先発注番号
wa_zm0020-lifnr   = wa_ekko-lifnr.           "仕入先
wa_zm0020-lname   = wa_ekko-name1.           "仕入先名
wa_zm0020-bldat   = wa_ekbe-bldat.           "入庫日
wa_zm0020-edatu   = wa_vbep-edatu.           "受注納期
wa_zm0020-labst   = wa_mska-kalab.           "当月残数
wa_zm0020-lfimg   = lv_lfimg.                "出済未出庫
*--- Del Start 2010/10/27
*    wa_zm0020-verpr   = wa_mbew-verpr.           "平均単価
*    wa_zm0020-salk3   = wa_mbew-verpr / wa_mbew-peinh
*                        * wa_zm0020-labst.       "在庫金額
*    wa_zm0020-peinh   = wa_mbew-peinh.           "価格単位
*--- Del End   2010/10/27
*--- Add Start 2010/10/27
wa_zm0020-wrkst    = wa_mara-wrkst.          "主構成物質
wa_zm0020-normt    = wa_mara-normt.          "標準テキスト
*--- Add End   2010/10/27
APPEND wa_zm0020 TO it_zm0020.
ENDLOOP.

FREE: it_mska,it_vbak,it_mara,it_t001k,it_t024,
it_ekko,it_ekbe,it_vbep,it_mbew.

ENDFORM.                    " EDIT_DATA_KOBETSU
*&---------------------------------------------------------------------*
*&      Form  PROCESS_ZAIKO
*&---------------------------------------------------------------------*
*       在庫データ
*----------------------------------------------------------------------*
FORM process_zaiko.

* データ取得
PERFORM get_data_zaiko.

* 編集
PERFORM edit_data_zaiko.

ENDFORM.                    " PROCESS_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_ZAIKO
*&---------------------------------------------------------------------*
*       在庫データ取得
*----------------------------------------------------------------------*
FORM get_data_zaiko.

* 在庫情報
PERFORM get_marc.
IF it_marc IS INITIAL.
EXIT.
ENDIF.

* 購買グループ名
PERFORM get_t024_z.

* 品目情報
PERFORM get_mara_z.

* 通貨
PERFORM get_t001k_z.

* 仕入先情報
PERFORM get_eord.

* 預託在庫
PERFORM get_msku.

* 支給在庫
PERFORM get_mslb.

* 単価・在庫金額
PERFORM get_mbew_z.

* 出済未出庫
PERFORM get_zs0020.

ENDFORM.                    " GET_DATA_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  GET_MARC
*&---------------------------------------------------------------------*
*       在庫情報
*----------------------------------------------------------------------*
FORM get_marc.

REFRESH it_marc.
SELECT marc~matnr         "品目コード
marc~werks         "プラント
marc~ekgrp         "購買グループ
marc~trame         "積送中在庫
mard~labst         "利用可能在庫数量
mard~speme         "保留在庫
mard~lgpbe         "棚番
INTO TABLE it_marc
FROM marc
INNER JOIN mard
ON marc~matnr = mard~matnr
AND marc~werks = mard~werks
WHERE marc~matnr IN s_matnr
AND marc~werks IN s_werks
AND marc~ekgrp IN s_ekgrp
AND mard~lgpbe IN s_lgpbe.

ENDFORM.                    " GET_MARC
*&---------------------------------------------------------------------*
*&      Form  GET_T024_Z
*&---------------------------------------------------------------------*
*       購買グループ名(在庫)
*----------------------------------------------------------------------*
FORM get_t024_z.

DATA : lt_marc TYPE STANDARD TABLE OF t_marc.

REFRESH : it_t024,it_t024_key.
* 購買グループの重複を削除
lt_marc = it_marc.
SORT lt_marc BY ekgrp.
DELETE ADJACENT DUPLICATES FROM lt_marc COMPARING ekgrp.
LOOP AT lt_marc INTO wa_marc.
CLEAR wa_t024_key.
wa_t024_key-ekgrp = wa_marc-ekgrp.
APPEND wa_t024_key TO it_t024_key.
ENDLOOP.

PERFORM get_t024 TABLES it_t024_key.
FREE it_t024_key.

ENDFORM.                    " GET_T024_Z
*&---------------------------------------------------------------------*
*&      Form  GET_MARA_Z
*&---------------------------------------------------------------------*
*       品目情報(在庫)
*----------------------------------------------------------------------*
FORM get_mara_z.

DATA : lt_marc TYPE STANDARD TABLE OF t_marc.

REFRESH : it_mara,it_mara_key.
* 品目コードの重複を削除
lt_marc = it_marc.
SORT lt_marc BY matnr.
DELETE ADJACENT DUPLICATES FROM lt_marc COMPARING matnr.
LOOP AT lt_marc INTO wa_marc.
CLEAR wa_mara_key.
wa_mara_key-matnr = wa_marc-matnr.
APPEND wa_mara_key TO it_mara_key.
ENDLOOP.

PERFORM get_mara TABLES it_mara_key.
FREE it_mara_key.

ENDFORM.                    " GET_MARA_Z
*&---------------------------------------------------------------------*
*&      Form  GET_T001K_Z
*&---------------------------------------------------------------------*
*       通貨コード(在庫)
*----------------------------------------------------------------------*
FORM get_t001k_z.

DATA : lt_marc TYPE STANDARD TABLE OF t_marc.

REFRESH : it_t001k,it_t001k_key.
* プラントの重複を削除
lt_marc = it_marc.
SORT it_marc BY werks.
DELETE ADJACENT DUPLICATES FROM lt_marc COMPARING werks.
LOOP AT lt_marc INTO wa_marc.
CLEAR wa_t001k_key.
wa_t001k_key-werks = wa_marc-werks.
APPEND wa_t001k_key TO it_t001k_key.
ENDLOOP.

PERFORM get_t001k TABLES it_t001k_key.
FREE it_t001k_key.

ENDFORM.                    " GET_T001K_Z
*&---------------------------------------------------------------------*
*&      Form  GET_EORD
*&---------------------------------------------------------------------*
*       仕入先情報
*----------------------------------------------------------------------*
FORM get_eord.

DATA : lt_marc TYPE STANDARD TABLE OF t_marc.

lt_marc = it_marc.
* 品目・プラントの重複を削除
SORT lt_marc BY matnr werks.
DELETE ADJACENT DUPLICATES FROM lt_marc COMPARING matnr werks.

REFRESH it_eord.
SELECT eord~matnr         "品目コード
eord~werks         "プラント
eord~zeord         "レコード番号
eord~lifnr         "仕入先
lfa1~name1         "名称１
INTO TABLE it_eord
FROM eord
INNER JOIN lfa1
ON eord~lifnr = lfa1~lifnr
FOR ALL entries IN lt_marc
WHERE eord~matnr =  lt_marc-matnr
AND eord~werks =  lt_marc-werks
AND eord~vdatu <= sy-datum
AND eord~bdatu >= sy-datum
AND eord~flifn =  cns_on.

ENDFORM.                    " GET_EORD
*&---------------------------------------------------------------------*
*&      Form  GET_MSKU
*&---------------------------------------------------------------------*
*       預託在庫
*----------------------------------------------------------------------*
FORM get_msku.

DATA : lt_marc TYPE STANDARD TABLE OF t_marc.

lt_marc = it_marc.
* 品目・プラントの重複を削除
SORT lt_marc BY matnr werks.
DELETE ADJACENT DUPLICATES FROM lt_marc COMPARING matnr werks.

REFRESH it_msku.
SELECT matnr         "品目コード
werks         "プラント
charg         "ロット番号
kunnr         "得意先
kulab         "利用可能評価在庫
INTO TABLE it_msku
FROM msku
FOR ALL ENTRIES IN lt_marc
WHERE matnr = lt_marc-matnr
AND werks = lt_marc-werks
AND sobkz = cns_sobkz_w.

ENDFORM.                    " GET_MSKU
*&---------------------------------------------------------------------*
*&      Form  GET_MSLB
*&---------------------------------------------------------------------*
*       支給在庫
*----------------------------------------------------------------------*
FORM get_mslb.

DATA : lt_marc TYPE STANDARD TABLE OF t_marc.

lt_marc = it_marc.
* 品目・プラントの重複を削除
SORT lt_marc BY matnr werks.
DELETE ADJACENT DUPLICATES FROM lt_marc COMPARING matnr werks.

REFRESH it_mslb.
SELECT matnr          "品目コード
werks          "プラント
charg          "ロット番号
lifnr          "仕入先
lblab          "利用可能評価在庫
INTO TABLE it_mslb
FROM mslb
FOR ALL ENTRIES IN lt_marc
WHERE matnr = lt_marc-matnr
AND werks = lt_marc-werks
AND sobkz = cns_sobkz_o.

ENDFORM.                    " GET_MSLB
*&---------------------------------------------------------------------*
*&      Form  GET_MBEW_Z
*&---------------------------------------------------------------------*
*       単価・在庫金額(在庫)
*----------------------------------------------------------------------*
FORM get_mbew_z.

DATA lt_marc TYPE STANDARD TABLE OF t_marc.

*--- Del Start 2010/10/27
*  REFRESH : it_mbew,it_mbew_key.
*--- Del End   2010/10/27
* 品目×プラントの重複を削除
lt_marc = it_marc.
SORT lt_marc BY matnr werks.
DELETE ADJACENT DUPLICATES FROM lt_marc COMPARING matnr werks.
LOOP AT lt_marc INTO wa_marc.
*--- Add Start 2010/10/27
READ TABLE it_mbew_key WITH KEY matnr = wa_marc-matnr
werks = wa_marc-werks
TRANSPORTING NO FIELDS
BINARY SEARCH.
IF sy-subrc = 0.
CONTINUE.
ENDIF.
*--- Add End   2010/10/27
CLEAR wa_mbew_key.
wa_mbew_key-matnr = wa_marc-matnr. "品目コード
wa_mbew_key-werks = wa_marc-werks. "プラント
APPEND wa_mbew_key TO it_mbew_key.
ENDLOOP.
*--- Del Start 2010/10/27
*  PERFORM get_mbew TABLES it_mbew_key.
*  FREE it_mbew_key.
*--- Del End   2010/10/27
ENDFORM.                    " GET_MBEW_Z
*&---------------------------------------------------------------------*
*&      Form  GET_ZS0020
*&---------------------------------------------------------------------*
*       出済未出庫
*----------------------------------------------------------------------*
FORM get_zs0020.

DATA : lt_marc TYPE STANDARD TABLE OF t_marc.

lt_marc = it_marc.
* 品目・プラントの重複を削除
SORT lt_marc BY matnr werks.
DELETE ADJACENT DUPLICATES FROM lt_marc COMPARING matnr werks.

REFRESH it_zs0020.
SELECT matnr        "品目コード
werks        "プラント
lfimg        "出荷数量実績
INTO TABLE it_zs0020
FROM zs0020
FOR ALL ENTRIES IN lt_marc
WHERE matnr = lt_marc-matnr
AND werks = lt_marc-werks.

ENDFORM.                    " GET_ZS0020
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA_ZAIKO
*&---------------------------------------------------------------------*
*       在庫データ編集
*----------------------------------------------------------------------*
FORM edit_data_zaiko.

LOOP AT it_marc INTO wa_marc.
CLEAR wa_zm0020.

*   購買グループ名
CLEAR wa_t024.
READ TABLE it_t024  INTO wa_t024
WITH TABLE KEY ekgrp = wa_marc-ekgrp.

*   品目情報
CLEAR wa_mara.
READ TABLE it_mara  INTO wa_mara
WITH TABLE KEY matnr = wa_marc-matnr.

*   通貨コード
CLEAR wa_t001k.
READ TABLE it_t001k INTO wa_t001k
WITH TABLE KEY werks = wa_marc-werks.

*   仕入先情報
CLEAR wa_eord.
READ TABLE it_eord  INTO wa_eord
WITH TABLE KEY matnr = wa_marc-matnr
werks = wa_marc-werks.
*   預託在庫
CLEAR wa_msku.
READ TABLE it_msku  INTO wa_msku
WITH TABLE KEY matnr = wa_marc-matnr
werks = wa_marc-werks.
*   支給在庫
CLEAR wa_mslb.
READ TABLE it_mslb  INTO wa_mslb
WITH TABLE KEY matnr = wa_marc-matnr
werks = wa_marc-werks.
*   出済未出庫
CLEAR wa_zs0020.
READ TABLE it_zs0020 INTO wa_zs0020
WITH TABLE KEY matnr = wa_marc-matnr
werks = wa_marc-werks.
*--- Del Start 2010/10/27
**   単価・在庫金額
*    CLEAR wa_mbew.
*    READ TABLE it_mbew  INTO wa_mbew
*                        WITH TABLE KEY matnr = wa_marc-matnr
*                                       werks = wa_marc-werks.
*--- Del End   2010/10/27

wa_zm0020-zyear   = p_year.                            "年
wa_zm0020-zmonth  = p_month.                           "月
wa_zm0020-werks   = wa_marc-werks.                     "プラント
wa_zm0020-matnr   = wa_marc-matnr.                     "品目コード
wa_zm0020-maktx   = wa_mara-maktx.                     "品目名
wa_zm0020-lgpbe   = wa_marc-lgpbe.                     "棚番
wa_zm0020-mseh3   = wa_mara-mseh3.                     "単位
wa_zm0020-waers   = wa_t001k-waers.                    "通貨
wa_zm0020-eknam   = wa_t024-eknam.                     "グループ名
wa_zm0020-lifnr   = wa_eord-lifnr.                     "仕入先
wa_zm0020-lname   = wa_eord-name1.                     "仕入先名
wa_zm0020-labst   = wa_marc-labst.                     "当月残数
wa_zm0020-kulab   = wa_msku-kulab.                     "預託在庫
wa_zm0020-lblab   = wa_mslb-lblab.                     "支給在庫
wa_zm0020-trame   = wa_marc-trame.                     "転送中在庫
wa_zm0020-lfimg   = wa_zs0020-lfimg.                   "出済未出庫
wa_zm0020-speme   = wa_marc-speme.                     "保留在庫
*--- Del Start 2010/10/27
*    wa_zm0020-verpr   = wa_mbew-verpr.                     "平均単価
*    wa_zm0020-salk3   = wa_mbew-salk3.                     "在庫金額
*    wa_zm0020-peinh   = wa_mbew-peinh.                     "価格単位
*--- Del End   2010/10/27
*--- Add Start 2010/10/27
wa_zm0020-wrkst    = wa_mara-wrkst.                    "主構成物質
wa_zm0020-normt    = wa_mara-normt.                    "標準テキスト
*--- Add End   2010/10/27

*   当月残数・預託在庫・支給在庫・転送中在庫・保留在庫
*   すべてがゼロの場合、処理対象外とする。
IF wa_zm0020-labst = 0  AND  "当月残数
wa_zm0020-kulab = 0  AND  "預託在庫
wa_zm0020-lblab = 0  AND  "支給在庫
wa_zm0020-trame = 0  AND  "転送中在庫
wa_zm0020-speme = 0.      "保留在庫
CONTINUE.
ELSE.
APPEND wa_zm0020 TO it_zm0020.
ENDIF.
ENDLOOP.

FREE: it_marc,it_t024,it_mara,it_t001k,
it_eord,it_msku,it_mslb,it_zs0020,it_mbew.

ENDFORM.                    " EDIT_DATA_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZM0020
*&---------------------------------------------------------------------*
*       テーブル更新
*----------------------------------------------------------------------*
FORM update_zm0020.

* テーブルロック
PERFORM enqueue_zm0020.

* データ削除
PERFORM delete_zm0020.

* データ登録
PERFORM insert_zm0020.

* ロック解除
PERFORM dequeue_zm0020.

ENDFORM.                    " UPDATE_ZM0020
*&---------------------------------------------------------------------*
*&      Form  ENQUEUE_ZM0020
*&---------------------------------------------------------------------*
*       テーブルロック
*----------------------------------------------------------------------*
FORM enqueue_zm0020.
*--- Add Start 2011/03/30
* local
DATA: lwa_zm0020 TYPE zm0020,
lwa_plant  TYPE typ_plant.

REFRESH it_plant.
* 対象プラント抽出
LOOP AT it_zm0020 INTO lwa_zm0020.
READ TABLE it_plant WITH KEY werks = lwa_zm0020-werks
TRANSPORTING NO FIELDS
BINARY SEARCH.
IF sy-subrc <> 0.
CLEAR lwa_plant.
lwa_plant-werks = lwa_zm0020-werks.
APPEND lwa_plant TO it_plant.
SORT it_plant BY werks.
ENDIF.
ENDLOOP.

* プラント毎にロック
LOOP AT it_plant INTO lwa_plant.
*--- Add End   2011/03/30

CALL FUNCTION 'ENQUEUE_EZ_ZM0020'
EXPORTING
zyear          = p_year
zmonth         = p_month
*--- Add Start 2011/03/30
werks          = lwa_plant-werks
*--- Add End   2011/03/30
EXCEPTIONS
foreign_lock   = 1
system_failure = 2
OTHERS         = 3.

CASE sy-subrc.
WHEN 0.
WHEN 1.
*     棚卸データテーブル は他のユーザによりロックされています
MESSAGE s004 WITH text-m03.
LEAVE LIST-PROCESSING.
WHEN OTHERS.
*     ロックできませんでした
MESSAGE s202.
LEAVE LIST-PROCESSING.
ENDCASE.
*--- Add Start 2011/03/30
ENDLOOP.
*--- Add End   2011/03/30

ENDFORM.                    " ENQUEUE_ZM0020
*&---------------------------------------------------------------------*
*&      Form  DELETE_ZM0020
*&---------------------------------------------------------------------*
*       データ削除
*----------------------------------------------------------------------*
FORM delete_zm0020.

DELETE FROM zm0020 WHERE zyear  = p_year
AND zmonth = p_month
*--- Add Start 2011/03/30
AND werks IN s_werks.
*--- Add End   2011/03/30

* 削除エラー時
CASE sy-subrc.
WHEN 0 OR 4.
WHEN OTHERS.
*     ロールバック
ROLLBACK WORK.
*     ロック解除
PERFORM dequeue_zm0020.
*     棚卸データテーブルの削除でエラーが発生しました
MESSAGE s400 WITH text-m04.
LEAVE LIST-PROCESSING.
ENDCASE.

ENDFORM.                    " DELETE_ZM0020
*&---------------------------------------------------------------------*
*&      Form  INSERT_ZM0020
*&---------------------------------------------------------------------*
*       データ登録
*----------------------------------------------------------------------*
FORM insert_zm0020.

INSERT zm0020 FROM TABLE it_zm0020 ACCEPTING DUPLICATE KEYS.

* 登録正常時
IF sy-subrc = 0.
*   コミット
COMMIT WORK.
*   登録件数取得
cnt_ins = sy-dbcnt.

* 登録エラー時
ELSE.
*   ロールバック
ROLLBACK WORK.
*   ロック解除
PERFORM dequeue_zm0020.
*   棚卸データテーブルの登録でエラーが発生しました
MESSAGE s400 WITH text-m05.
LEAVE LIST-PROCESSING.
ENDIF.

ENDFORM.                    " INSERT_ZM0020
*&---------------------------------------------------------------------*
*&      Form  DEQUEUE_ZM0020
*&---------------------------------------------------------------------*
*       ロック解除
*----------------------------------------------------------------------*
FORM dequeue_zm0020.
*--- Add Start 2011/03/30
* local
DATA lwa_plant TYPE typ_plant.

LOOP AT it_plant INTO lwa_plant.
*--- Add End   2011/03/30
CALL FUNCTION 'DEQUEUE_EZ_ZM0020'
EXPORTING
zyear  = p_year
zmonth = p_month
*--- Add Start 2011/03/30
werks  = lwa_plant-werks.
ENDLOOP.
*--- Add End   2011/03/30

ENDFORM.                    " DEQUEUE_ZM0020
*&---------------------------------------------------------------------*
*&      Form  GET_LIPS
*&---------------------------------------------------------------------*
*       出済未出庫(個別購買データ)
*----------------------------------------------------------------------*
FORM get_lips.

REFRESH it_lips.
SELECT lips~vgbel    "参照伝票番号
lips~vgpos    "参照伝票明細
lips~lfimg    "出荷済未出庫
INTO TABLE it_lips
FROM lips
INNER JOIN vbup
ON lips~vbeln = vbup~vbeln
AND lips~posnr = vbup~posnr
FOR ALL entries IN it_mska
WHERE lips~vgbel =  it_mska-vbeln
AND lips~vgpos =  it_mska-posnr
AND vbup~wbsta <> cns_wbsta_c.

ENDFORM.                    " GET_LIPS
*&---------------------------------------------------------------------*
*&      Form  re-edit_stock_data
*&---------------------------------------------------------------------*
*       処理対象データ再編集
*       (明細行)移動平均原価、価格単位
*       (合計行)在庫金額
*----------------------------------------------------------------------*
FORM re-edit_stock_data.
* local
DATA: lit_zm0020 TYPE TABLE OF zm0020,
lwa_zm0020 TYPE zm0020.

* 品目評価
PERFORM get_mbew TABLES it_mbew_key.
FREE it_mbew_key.

SORT it_zm0020 BY zyear zmonth werks matnr vbeln posnr.

*--明細行編集・合計行追加
LOOP AT it_zm0020 INTO lwa_zm0020.
wa_zm0020 = lwa_zm0020.
AT NEW matnr.
CLEAR: wa_mbew, wa_total.
READ TABLE it_mbew INTO wa_mbew
WITH TABLE KEY matnr = wa_zm0020-matnr
werks = wa_zm0020-werks.
ENDAT.

*   明細行項目を編集
"※wa_zm0020-labstは利用可能在庫ではない
wa_zm0020-labst = wa_zm0020-labst + wa_zm0020-kulab +
wa_zm0020-lblab + wa_zm0020-trame +
wa_zm0020-speme.                    "当月残数
wa_zm0020-verpr = wa_mbew-verpr.                      "平均単価
wa_zm0020-peinh = wa_mbew-peinh.                      "価格単位
MODIFY it_zm0020 FROM wa_zm0020 TRANSPORTING labst verpr peinh.

*   各合計数量算出(合計行)
PERFORM calculate_total.

AT END OF matnr.
*     在庫品の出荷済未出庫数量の算出
PERFORM calculate_stock_quantity.
*     合計行データ設定
PERFORM set_total_record.
APPEND wa_zm0020 TO lit_zm0020.
ENDAT.
ENDLOOP.

APPEND LINES OF lit_zm0020 TO it_zm0020.

ENDFORM.                    " re-edit_stock_data
*&---------------------------------------------------------------------*
*&      Form  calculate_total
*&---------------------------------------------------------------------*
*       各合計数量算出
*----------------------------------------------------------------------*
FORM calculate_total.
wa_total-labst = wa_total-labst + wa_zm0020-labst.  "当月残数
wa_total-kulab = wa_total-kulab + wa_zm0020-kulab.  "預託在庫
wa_total-lblab = wa_total-lblab + wa_zm0020-lblab.  "支給在庫
wa_total-trame = wa_total-trame + wa_zm0020-trame.  "転送中在庫
wa_total-speme = wa_total-speme + wa_zm0020-speme.  "保留在庫
* 個別購買のみ
IF wa_zm0020-vbeln <> space.
wa_total-lfimg = wa_total-lfimg + wa_zm0020-lfimg.  "出荷済未出庫
ENDIF.
ENDFORM.                    " calculate_total
*&---------------------------------------------------------------------*
*&      Form  set_total_record
*&---------------------------------------------------------------------*
*       合計行データ設定
*----------------------------------------------------------------------*
FORM set_total_record.
* 出力不要項目クリア
CLEAR: wa_zm0020-vbeln, wa_zm0020-posnr, wa_zm0020-lgpbe,
wa_zm0020-eknam, wa_zm0020-kunnr, wa_zm0020-kname,
wa_zm0020-bstnk, wa_zm0020-lifnr, wa_zm0020-lname,
wa_zm0020-bldat, wa_zm0020-edatu, wa_zm0020-verpr.
* 各数量
wa_zm0020-labst = wa_total-labst.    "当月残数
wa_zm0020-kulab = wa_total-kulab.    "預託在庫
wa_zm0020-lblab = wa_total-lblab.    "支給在庫
wa_zm0020-trame = wa_total-trame.    "転送中在庫
wa_zm0020-lfimg = wa_total-lfimg.    "出荷済未出庫
wa_zm0020-speme = wa_total-speme.    "保留在庫
* 在庫金額
wa_zm0020-salk3 = wa_mbew-salk3.
* 合計行判別フラグON
wa_zm0020-zflg  = cns_on.
ENDFORM.                    " set_total_record
*&---------------------------------------------------------------------*
*&      Form  calculate_stock_quantity
*&---------------------------------------------------------------------*
*       在庫品の出荷済未出庫数量の算出
*----------------------------------------------------------------------*
FORM calculate_stock_quantity.
* local
DATA lwa_zm0020 TYPE zm0020.

* 在庫品レコード検索
READ TABLE it_zm0020 INTO lwa_zm0020
WITH KEY zyear  = wa_zm0020-zyear
zmonth = wa_zm0020-zmonth
werks  = wa_zm0020-werks
matnr  = wa_zm0020-matnr
vbeln  = space
BINARY SEARCH.
IF sy-subrc = 0.
*   在庫品のみの出荷済未出庫数量
lwa_zm0020-lfimg = lwa_zm0020-lfimg - wa_total-lfimg.
MODIFY it_zm0020 FROM lwa_zm0020 INDEX sy-tabix TRANSPORTING lfimg.

*   在庫品と個別購買品の出荷済未出庫数量
wa_total-lfimg = wa_total-lfimg + lwa_zm0020-lfimg.
ENDIF.

ENDFORM.                    " calculate_stock_quantity
