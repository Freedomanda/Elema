*&-------------------------------------------------------------------
*& Report  ZF020500
*&-------------------------------------------------------------------
* [プログラム名]
*   ZF020500        相殺データ出力処理
*
* [処理概要]
*　　　相殺データを出力する
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2005/04/26   DMC K.ONODA       新規開発　
*&-------------------------------------------------------------------
REPORT  ZF020500
LINE-SIZE 185
LINE-COUNT 57(1)
NO STANDARD PAGE HEADING.
*===================================================================*
* バリアント関連宣言
*===================================================================*
*--- バリアント情報取得TBL
DATA GT_VAR TYPE TABLE OF RSPARAMS.
DATA GF_VAR TYPE RSPARAMS.
*--- バリアント関連設定項目
DATA :G_HKONT LIKE BSIK-HKONT,                     "各勘定の型参照
G_BLART LIKE BSIK-BLART.                     "伝票タイプの型参照
DATA :G_ZFBDT LIKE BSIK-ZFBDT,                     "支払日
G_LIFNR LIKE BSIK-LIFNR.                     "仕入先コード
*===================================================================*
* 処理関連宣言
*===================================================================*
*--- ファイル名取得関連項目
DATA:  W_DEF_FILENM(255) TYPE C,                       "PCﾌｧｲﾙ名
PC_FILENM         LIKE RLGRAP-FILENAME.         "ファイル名

DATA: W_MASK(22)        TYPE C VALUE
* {MODIFY-----------------------------------------(S.MIKAMI 2005/07/11)
*             ',*.TXT,*.TXT,*.*,*.*.'.                  "ファイルの種類
',*.CSV,*.CSV,*.*,*.*.'.                  "ファイルの種類
*  MODIFY-----------------------------------------(S.MIKAMI 2005/07/11)}

*--- 定数項目
CONSTANTS:
CNS_INIT_RECNUM  TYPE P VALUE 3,"ヘッダレコード数
CNS_REPTITLE(14) TYPE C VALUE '相殺データ出力',
CNS_FILENAME(6) TYPE C VALUE '出力先',
CNS_BUKRS(10)   TYPE C VALUE '会社コード',
CNS_BUKRSC(12)  TYPE C VALUE '会社コード：',
CNS_PAYDAY(8)   TYPE C VALUE '支払日：',
CNS_SAIMU(8)    TYPE C VALUE '債務勘定',
CNS_SAIKEN(8)   TYPE C VALUE '債権勘定',
CNS_GENKIN(8)   TYPE C VALUE '現金勘定',
CNS_YOKIN(8)    TYPE C VALUE '預金勘定',
CNS_SHTEGATA(8) TYPE C VALUE '支払手形',
CNS_SOUSAI(4)   TYPE C VALUE '相殺',
CNS_ETC(6)      TYPE C VALUE 'その他',
CNS_LFA1_J(30)  TYPE C VALUE '仕入先マスタ（一般セクション）',
CNS_LFB1_J(30)  TYPE C VALUE '仕入先マスタ（会社コード）',
CNS_ST_LIFNR(12) TYPE C VALUE '仕入先コード',
CNS_ST_NAME(10) TYPE C VALUE '仕入先名称',
CNS_ST_OFFSET(8) TYPE C VALUE '相殺金額',
CNS_KARA(2)      TYPE C VALUE '〜',
CNS_TOTAL_J(6)  TYPE C VALUE '＊計＊',
CNS_LTOTAL_J(8) TYPE C VALUE '＊合計＊',
CNS_X           TYPE C VALUE 'X',"BSAKフラグ
CNS_H           TYPE C VALUE 'H',"借方貸借フラグ
CNS_S           TYPE C VALUE 'S'."貸方貸借フラグ

* {MODIFY-----------------------------------------(S.MIKAMI 2005/07/11)
*CONSTANTS: CNSX_TAB     TYPE X VALUE '09'."TABコード
CONSTANTS: CNS_COM      TYPE C VALUE ','. "カンマ
*  MODIFY-----------------------------------------(S.MIKAMI 2005/07/11)}

*--- 型の定義
* 仕入先マスタ（一般セクション）----------------------------*
TYPES: BEGIN OF TYP_LFA1,
LIFNR LIKE LFA1-LIFNR ,"仕入先コード
NAME2 LIKE LFA1-NAME2,"仕入先名
KUNNR LIKE LFA1-KUNNR,"得意先コード
TELFX LIKE LFA1-TELFX,"仕入先ＦＡＸ番号
END OF TYP_LFA1.

DATA: GT_LFA1 TYPE TABLE OF TYP_LFA1,"仕入先マスタA内部ＴＢＬ
GF_LFA1 TYPE TYP_LFA1         ,"仕入先マスタA構造
GT_LFA1_EXCL TYPE TABLE OF TYP_LFA1,"仕入先マスタ得意先
GF_LFA1_EXCL TYPE TYP_LFA1.         "仕入先マスタ得意先

* 仕入先マスタ（会社コード）--------------------------------*
TYPES: BEGIN OF TYP_LFB1,
BUKRS LIKE LFB1-BUKRS,"会社コード
LIFNR LIKE LFB1-LIFNR,"仕入先コード
ZWELS LIKE LFB1-ZWELS,"支払方法
ZTERM LIKE LFB1-ZTERM,"支払条件
END OF TYP_LFB1.

DATA: GT_LFB1 TYPE TABLE OF TYP_LFB1,"仕入先マスタB内部ＴＢＬ
GF_LFB1 TYPE TYP_LFB1         ."仕入先マスタB構造
* Header of Payment actual result matrix -----------------*
* 支払実績リストヘッダ項目[共用]
TYPES: BEGIN OF TYP_HOFPARM,
H_BUKRS(18)     TYPE C,"文字列”会社コード”
BUKRS(13)       TYPE C,"会社コード：画面入力値
BUTXT(20)       TYPE C,"会社名
H_ZFBDT(13)     TYPE C,"文字列”支払日”
ZFBDTFM(13)     TYPE C,"支払日(From)：画面入力値
M_MARK(13)      TYPE C,"文字列”〜”
ZFBDTTO(13)     TYPE C,"支払日(To)：画面入力値
H_LIFNR(13)     TYPE C,"文字列”仕入先”
H_NAME(13)      TYPE C,"文字列”仕入先名称”
H_OFFSET(13)    TYPE C,"文字列”相殺”
END OF TYP_HOFPARM.

DATA: GT_HOFPARM TYPE TABLE OF TYP_HOFPARM,"支払実績ＬＨ情報内部ＴＢＬ
GF_HOFPARM TYPE TYP_HOFPARM.         "支払実績ＬＨ情報構造
* Payment actual result matrix ---------------------------*
* 支払実績リスト明細[ファイル用→帳票用]
TYPES: BEGIN OF TYP_PARM,
F01(20)      TYPE C,"番号
F02(20)      TYPE C,"支払先／ソート／計
F03(35)      TYPE C,"支払先名称／買掛金
F04(35)      TYPE C,"売掛金
F05(35)      TYPE C,"裏書手形
F06(35)      TYPE C,"支払条件／銀行振込
F07(35)      TYPE C,"支払方法／支払手形
F08(35)      TYPE C,"その他
F09(35)      TYPE C,"支払計
F10(35)      TYPE C,"相殺
F11(35)      TYPE C,"差額
F12(35)      TYPE C,"仕入割引
F03P(7)     TYPE P,"支払先名称／買掛金:帳票用データ
F04P(7)     TYPE P,"売掛金           :帳票用データ
F05P(7)     TYPE P,"現金             :帳票用データ
F06P(7)     TYPE P,"支払条件／銀行振込:帳票用データ
F07P(7)     TYPE P,"支払方法／支払手形:帳票用データ
F08P(7)     TYPE P,"その他           :帳票用データ
F09P(7)     TYPE P,"支払計           :帳票用データ
F10P(7)     TYPE P,"相殺             :帳票用データ
F11P(7)     TYPE P,"差額             :帳票用データ
F12P(7)     TYPE P,"仕入割引         ：帳票用データ
END OF TYP_PARM.

DATA: GT_PARM TYPE TABLE OF TYP_PARM,"支払実績Ｌ明細情報内部ＴＢＬ
GF_PARM TYPE TYP_PARM.         "支払実績Ｌ明細情報構造

TYPES: BEGIN OF TYP_LIST,
L01(20)      TYPE C,"会社コード(テキスト)／支払日(テキスト)
L02(35)      TYPE C,"会社コード／支払日(LOW)
L03(35)      TYPE C,"会社コード名称／〜
L04(35)      TYPE C,"支払日(LOW)
L05(35)      TYPE C,"相殺
L06(7)       TYPE P,"相殺:帳票用データ
END OF TYP_LIST.

DATA: GT_LIST TYPE TABLE OF TYP_LIST,
GF_LIST TYPE TYP_LIST.

* 支払実績リスト明細[ダウンロード用]
TYPES: BEGIN OF TYP_DOWN,
D01(20)      TYPE C,"仕入先コード
D02(35)      TYPE C,"仕入先名称
D03(20)      TYPE C,"相殺
END OF TYP_DOWN.

DATA: GT_DOWN TYPE TABLE OF TYP_DOWN,
GF_DOWN TYPE TYP_DOWN.

* Payment actual result matrix ---------------------------*
* 支払実績リスト総合計[ファイル＆帳票用]
TYPES: BEGIN OF TYP_PARMT,
F01(14)      TYPE P,"番号
F02(20)      TYPE C,"＊合計＊（文字列）
F03(7)       TYPE P,"買掛金
F04(7)       TYPE P,"売掛金
F05(7)       TYPE P,"裏書手形
F06(7)       TYPE P,"銀行振込
F07(7)       TYPE P,"支払手形
F08(7)       TYPE P,"その他
F09(7)       TYPE P,"支払計
F10(7)       TYPE P,"相殺
F11(7)       TYPE P,"差額
F12(7)       TYPE P,"仕入割引
END OF TYP_PARMT.

DATA: GT_PARMT TYPE TABLE OF TYP_PARMT,"支払実績Ｌ総合計情報内部ＴＢＬ
GF_PARMT TYPE TYP_PARMT.         "支払実績Ｌ総合計情報構造

* Payment actual result matrix for process -----------------------*
* 支払実績リスト処理用
TYPES: BEGIN OF TYP_PARMPRO,
LIFNR  LIKE LFB1-LIFNR,"仕入先コード
ZUONR  LIKE BSID-ZUONR,"ソートキー
BUKRS  LIKE LFB1-BUKRS,"会社コード
ZFBDT  LIKE BSID-ZFBDT,"支払日
NAME2  LIKE LFA1-NAME2,"仕入先名
KUNNR  LIKE LFA1-KUNNR,"得意先コード
AUGDT  LIKE BSAK-AUGDT,"決済日付
AUGBL  LIKE BSAK-AUGBL,"決済伝票
BUDAT  LIKE BSAK-BUDAT,"転記日付
SHKZG  LIKE BSAK-SHKZG,"借方／貸借フラグ
DMBTR  LIKE BSAK-DMBTR,"国内通貨額
HKONT  LIKE BSAK-HKONT,"Ｇ／Ｌ勘定
ZWELS  LIKE LFB1-ZWELS,"支払方法
ZTERM  LIKE LFB1-ZTERM,"支払条件
FBSAK  TYPE C,         "BSAKフラグ（BSAKから取得）
TELFX LIKE LFA1-TELFX,"仕入先ＦＡＸ番号
END OF TYP_PARMPRO.

DATA: GT_PARMPRO TYPE TABLE OF TYP_PARMPRO,"支払実績Ｌ処理情報内部TBL
GF_PARMPRO TYPE TYP_PARMPRO.         "支払実績Ｌ処理情報構造
DATA: GT_CP_PARMPRO TYPE TABLE OF TYP_PARMPRO,"支払実績L処理情報内部TBL
GF_CP_PARMPRO TYPE TYP_PARMPRO.         "支払実績Ｌ処理情報構造

* 最終集計用退避用
DATA: GT_TMP_PARMPRO TYPE TABLE OF TYP_PARMPRO,
GF_TMP_PARMPRO TYPE          TYP_PARMPRO.

* 支払金種別集計用 -------------------------------------------------*
TYPES: BEGIN OF TYP_PKIND,
LIFNR(14)  TYPE P,"仕入先コード
AP(14)     TYPE P,"買掛金
AR(14)     TYPE P,"売掛金
CASH(14)   TYPE P,"裏書手形
BNKTR(14)  TYPE P,"銀行振込
LACCP(14)  TYPE P,"支払手形
DISCNT(14) TYPE P,"仕入割引
ETC(14)    TYPE P,"その他
PSUMT(14)  TYPE P,"支払計
OFFSET(14) TYPE P,"相殺
DIFFER(14) TYPE P,"差額
END OF TYP_PKIND.

DATA: GT_PKIND TYPE TABLE OF TYP_PKIND,"支払金種別集計用内部ＴＢＬ
GF_PKIND TYPE TYP_PKIND.         "支払金種別集計用構造
* --- ファイルイメージ
TYPES:BEGIN OF TYP_FILE_IMAGE,"ファイルイメージ
FLINE(255) TYPE C,
END OF TYP_FILE_IMAGE.

DATA: GT_FILE_IMAGE TYPE TABLE OF TYP_FILE_IMAGE,"ファイルイメージ
GF_FILE_IMAGE TYPE TYP_FILE_IMAGE.         "FILE IMAGE LINE

* 共通債務／債権読込用内部ＴＢＬ ------------------------------------*
TYPES: BEGIN OF TYP_BSXX,
LIFNR LIKE BSIK-LIFNR,"仕入先コード
KUNNR LIKE BSIK-LIFNR,"得意先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
BLART LIKE BSAK-BLART,"伝票タイプ
END OF TYP_BSXX.

* 相殺用内部テーブル
TYPES: BEGIN OF TYP_BSXZ,
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
LIFNR LIKE BSIK-LIFNR,"仕入先コード
KUNNR LIKE BSIK-LIFNR,"得意先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
BLART LIKE BSAK-BLART,"伝票タイプ
END OF TYP_BSXZ.

* 回転用
TYPES: BEGIN OF TYP_BSXK,
LIFNR LIKE BSIK-LIFNR,"仕入先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
BLART LIKE BSAK-BLART,"伝票タイプ
KUNNR LIKE BSIK-LIFNR,"得意先コード
END OF TYP_BSXK.

DATA: GT_TMP_BSXK TYPE TABLE OF TYP_BSXK,
GF_TMP_BSXK TYPE          TYP_BSXK.

TYPES: BEGIN OF TYP_BSXD,
KUNNR LIKE BSIK-LIFNR,"得意先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
BLART LIKE BSAK-BLART,"伝票タイプ
LIFNR LIKE BSIK-LIFNR,"仕入先コード
END OF TYP_BSXD.

DATA: GT_TMP_BSXD TYPE TABLE OF TYP_BSXD,
GF_TMP_BSXD TYPE          TYP_BSXD.

TYPES: BEGIN OF TYP_BSEG,
LIFNR LIKE BSIK-LIFNR,"仕入先コード
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
KUNNR LIKE BSIK-LIFNR,"得意先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
BLART LIKE BSAK-BLART,"伝票タイプ
END OF TYP_BSEG.

DATA: GT_TMP_BSEG TYPE TABLE OF TYP_BSEG,
GF_TMP_BSEG TYPE          TYP_BSEG.

DATA G_SOUSAI    LIKE KNKK-KLIMK. "相殺計算用（伝票の相殺額）
DATA G_YOTEI     LIKE KNKK-KLIMK. "相殺計算用（伝票の相殺額）
DATA G_SOUSAI_1  LIKE KNKK-KLIMK. "相殺計算用（仕入先別合計）
DATA G_YOTEI_1   LIKE KNKK-KLIMK. "相殺計算用（仕入先別合計）

DATA: GT_BSIK TYPE TABLE OF TYP_BSXX,"債務データ未決済内部ＴＢＬ
GF_BSIK TYPE TYP_BSXX.         "債務データ未決済構造
DATA: GT_BSID TYPE TABLE OF TYP_BSXX,"債権データ未決済内部ＴＢＬ
GF_BSID TYPE TYP_BSXX.         "債権データ未決済構造
DATA: GT_BSAK TYPE TABLE OF TYP_BSXX,"債務データ決済内部ＴＢＬ
GF_BSAK TYPE TYP_BSXX.         "債務データ決済構造
DATA: GT_BSAD TYPE TABLE OF TYP_BSXX,"債権データ決済内部ＴＢＬ
GF_BSAD TYPE TYP_BSXX.         "債権データ決済構造
DATA: GT_BSEG TYPE TABLE OF TYP_BSXX,"会計伝票内部ＴＢＬ
GF_BSEG TYPE TYP_BSXX.         "会計伝票構造
* 相殺用内部テーブル
DATA: GT_BSEG2 TYPE TABLE OF TYP_BSXZ,"会計伝票内部ＴＢＬ
GF_BSEG2 TYPE TYP_BSXZ.         "会計伝票構造

* BSAKからBSEGを読みに行くデータの紐付く元データ格納用
DATA: GT_BSAK_AUGDT TYPE TABLE OF TYP_BSXX,"債務データ決済内部ＴＢＬ
GF_BSAK_AUGDT TYPE TYP_BSXX.         "債務データ決済構造

* アスタリスク不具合対応２
TYPES: BEGIN OF TYP_BSAD,
KUNNR LIKE BSIK-LIFNR,"得意先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
BLART LIKE BSAK-BLART,"伝票タイプ
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
LIFNR LIKE BSIK-LIFNR,"仕入先コード
END OF TYP_BSAD.

* アスタリスク不具合対応３
TYPES: BEGIN OF TYP_BSAK,
LIFNR LIKE BSIK-LIFNR,"仕入先コード
ZUONR LIKE BSIK-ZUONR,"ソートキー
BLART LIKE BSAK-BLART,"伝票タイプ
SHKZG LIKE BSIK-SHKZG,"貸借フラグ
DMBTR LIKE BSIK-DMBTR,"国内通貨額
HKONT LIKE BSIK-HKONT,"Ｇ／Ｌ勘定
ZFBDT LIKE BSIK-ZFBDT,"支払基準日
AUGBL LIKE BSAK-AUGBL,"決済伝票番号
AUGDT LIKE BSAK-AUGDT,"決済日付
GJAHR LIKE BSAK-GJAHR,"会計年度
BELNR LIKE BSAK-BELNR,"会計伝票
BUZEI LIKE BSEG-BUZEI,"会計伝票明細
KUNNR LIKE BSIK-LIFNR,"得意先コード
END OF TYP_BSAK.

* 支払計＝０かつ差額＜０を対象外に変更
TYPES: BEGIN OF TYP_OUTOFLIST,
NUMBER(20) TYPE C,"対象外リスト番号
END OF TYP_OUTOFLIST.

DATA: GT_OUTLIST TYPE TABLE OF TYP_OUTOFLIST,"対象外ファイルテーブル
GF_OUTLIST TYPE TYP_OUTOFLIST.

*--- 共通項目
DATA: CNT_NUM(4)     TYPE N.          "番号採番
DATA: G_AP(14)       TYPE P,          "買掛金
G_AR(14)       TYPE P.          "売掛金
*--- 汎用モジュール&ファイル関連等(ショートダンプ対応用)
DATA: G_FILENAME   TYPE RLGRAP-FILENAME,"ダウンロードファイル名
G_REFILENAME TYPE RLGRAP-FILENAME."パスなしファイル名
* 支払計＝０かつ差額＜０を対象外に変更
* ローカル用
DATA:LT_PARM TYPE TABLE OF TYP_PARM,"出力用の編集用
LF_PARM TYPE TYP_PARM,         "集計用
L_SUBRC LIKE SY-SUBRC,         "リターン値
L_NUMBER(4) TYPE N.            "正規リスト番号

* 支払手形集計用
DATA: GT_BSIK_BILL TYPE TABLE OF TYP_BSAK,"支払手形
GF_BSIK_BILL TYPE TYP_BSAK.         "支払手形

*--- プッシュボタン用
TABLES SSCRFIELDS.
*===================================================================*
* 選択画面定義
*===================================================================*
PARAMETERS: PR_BUKRS LIKE T001-BUKRS MEMORY ID BUK OBLIGATORY.
"会社ＣＤ

SELECT-OPTIONS: S_ZFBDT FOR G_ZFBDT OBLIGATORY, "支払日
S_LIFNR FOR G_LIFNR OBLIGATORY. "仕入先コード

PARAMETERS: PR_REP  AS CHECKBOX,     "レポートのみ
PR_RDL RADIOBUTTON GROUP RB1,   "ローカルに出力
PR_FILE1(40)  TYPE C,
"参照しない場合のパス名＋ファイル名
PR_FILE2 LIKE RTERM-FILE NO-DISPLAY.
"参照した場合のパス名＋ファイル名
SELECTION-SCREEN PUSHBUTTON 78(4) BUTTON USER-COMMAND GETFNAME.

PARAMETERS: PR_RDS RADIOBUTTON GROUP RB1,   "サーバに出力
PR_SFILE LIKE RLGRAP-FILENAME."APサーバ格納先

SELECTION-SCREEN BEGIN OF BLOCK DEBT
WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS: S_DEBT  FOR G_HKONT OBLIGATORY, "債務勘定
S_BLDT  FOR G_BLART OBLIGATORY, "伝票タイプ（債務）
S_CRDT  FOR G_HKONT OBLIGATORY, "債券勘定
S_BLCT  FOR G_BLART OBLIGATORY. "伝票タイプ（債権）

SELECTION-SCREEN END   OF BLOCK DEBT.

SELECTION-SCREEN BEGIN OF BLOCK PAY
WITH FRAME TITLE TEXT-002.
SELECT-OPTIONS: S_CASH  FOR G_HKONT OBLIGATORY, "現金勘定
S_DEPS  FOR G_HKONT OBLIGATORY, "預金勘定
S_BLPY  FOR G_HKONT OBLIGATORY, "支払手形
S_OFFEO FOR G_HKONT OBLIGATORY, "相殺
S_DCNT  FOR G_HKONT OBLIGATORY, "仕入割引
S_ETC   FOR G_HKONT OBLIGATORY. "その他
SELECT-OPTIONS  S_BLBSEG  FOR G_BLART.          "伝票タイプ[BSEG]
SELECTION-SCREEN END   OF BLOCK PAY.

AT SELECTION-SCREEN.
* 参照ボタンのチェック
IF SSCRFIELDS-UCOMM = 'GETFNAME'.
PERFORM FRM_WS_FILENAME_GET.
PR_FILE2 = PC_FILENM.
PR_FILE1 = PR_FILE2+0(40).
ELSE.
PR_FILE2 = PR_FILE1.
PERFORM FRM_CHECK_T001 USING PR_BUKRS.   "会社コード存在チェック
PERFORM FRM_CHECK_SKB1 USING PR_BUKRS.   "各種勘定チェック
ENDIF.
*********************************************************************
* INITIALIZATION
*********************************************************************
INITIALIZATION.
BUTTON = TEXT-003.

*********************************************************************
* TOP-OF-PAGE
*********************************************************************
TOP-OF-PAGE.
PERFORM FRM_H_FIREP USING CNS_REPTITLE.

*********************************************************************
* END-OF-PAGE
*********************************************************************
END-OF-PAGE.
PERFORM FRM_SY_ULINE.

*********************************************************************
* START-OF-SELECTION
*********************************************************************
START-OF-SELECTION.
* MAIN PROCESS
PERFORM FRM_CHECK_REPONLY."出力先入力チェック
* 「相殺予定のみ」でないとき
PERFORM FRM_GET_LFA1.     "仕入先マスタ・得意先コード取得

PERFORM FRM_GET_LFB1.     "支払方法・支払条件取得
PERFORM FRM_H_SETDATE.    "ヘッダ支払日Ｆ＆Ｔの設定
PERFORM FRM_H_SETETC.     "ヘッダその他の設定

PERFORM FRM_GET_BSIK.     "債権データ（未決済）抽出処理
PERFORM FRM_COM_BSIK.     "債権データ（未決済）集計処理

PERFORM FRM_GET_BSID.     "債務データ（未決済）抽出処理
PERFORM FRM_COM_BSID.     "債務データ（未決済）集計処理

PERFORM FRM_GET_BSAK.     "債権データ（決済）抽出処理
PERFORM FRM_COM_BSAK.     "債権データ（決済）集計処理

PERFORM FRM_GET_BSAD.     "債務データ（決済）抽出処理
PERFORM FRM_COM_BSAD.     "債務データ（決済）集計処理

PERFORM FRM_GET_BSAK_AUGDT.

PERFORM FRM_GET_BSEG.     "決済伝票明細抽出
* Accounts receivable check
* 「相殺予定のみ」の時
*  IF PR_OFFEO = CNS_X.
*    PERFORM FRM_AR_CHECKAND.
*  ENDIF.
* COMPUTE PROCESS
PERFORM FRM_COM_CRDB.     "債権／債務集計処理+決済伝票集計
PERFORM FRM_ZERO_CHECK.
PERFORM FRM_PUT_SUM.      "総合計を追加

* 支払計＝０　AND 　差額＜０　のときは対象外とする
*  PERFORM FRM_OUT_OF_THE_TARGET.

PERFORM FRM_ZERO_CHECK.

* DOWNLOAD PROCESS
PERFORM FRM_LIST_DOWNLOAD."支払実績リストダウンロード

* FILE OPEN PROCESS
PERFORM FRM_LIST_FILE_UP_LOAD."ファイル処理

* MESSAGE PROCESS
PERFORM FRM_AFTER_MESSAGE."メッセージ処理

* OUTPUT PROCESS
PERFORM FRM_SCR_WRITE.    "帳票出力（画面）
*&------------------------------------------------------------------*
*&      Form  FRM_TEST_WRITE
*&------------------------------------------------------------------*
*       画面出力
*-------------------------------------------------------------------*
FORM FRM_SCR_WRITE.
*  DATA: TMP_NUM(4) TYPE N."採番された前明細番号

* 支払実績リストファイル出力用完成済内部ＴＢＬ
LOOP AT GT_LIST INTO GF_LIST.
*   ファイル出力用ヘッダ部は読み飛ばし
IF SY-TABIX <= CNS_INIT_RECNUM.
CONTINUE.
ENDIF.
*            WRITE AT:/1(1) SY-VLINE,
*                 1(185) SY-ULINE.

*   明細行の設定
PERFORM FRM_DETAILS_WRITE.
ENDLOOP.

ENDFORM.                    " FRM_TEST_WRITE
*&------------------------------------------------------------------*
*&      Form  FRM_WS_FILENAME_GET
*&------------------------------------------------------------------*
*       ファイル名の設定ポップアップ
*-------------------------------------------------------------------*
*  ファイル名をポップアップで設定する
*-------------------------------------------------------------------*
FORM FRM_WS_FILENAME_GET.

CALL FUNCTION 'WS_FILENAME_GET'
EXPORTING
DEF_FILENAME     = W_DEF_FILENM
*           DEF_PATH         = W_DEF_PATH
MASK             = W_MASK
TITLE            = '保存場所'
IMPORTING
FILENAME         = PC_FILENM
EXCEPTIONS
SELECTION_CANCEL = 1
OTHERS           = 2.
IF SY-SUBRC <> 0.
MESSAGE ID '00' TYPE 'S' NUMBER '208' WITH '処理中断'.
STOP.
ENDIF.

ENDFORM.                    " FRM_WS_FILENAME_GET
*&------------------------------------------------------------------*
*&      Form  FRM_CHECK_REPONLY
*&------------------------------------------------------------------*
*       「レポートのみ」が押下されているときのファイル名のチェック
*-------------------------------------------------------------------*
FORM FRM_CHECK_REPONLY.
* レポートのみ（チェックボックス）チェック
IF PR_REP = SPACE.
IF PR_FILE2 = SPACE.
MESSAGE S006(Z1) WITH CNS_FILENAME.
STOP.
ENDIF.
ENDIF.
ENDFORM.                    " FRM_CHECK_REPONLY
*&------------------------------------------------------------------*
*&      Form  FRM_CHECK_T001
*&------------------------------------------------------------------*
*       会社コード存在チェック&会社名取得
*-------------------------------------------------------------------*
*  --> P_BUKRS 会社コード
*-------------------------------------------------------------------*
FORM FRM_CHECK_T001 USING P_BUKRS.

SELECT SINGLE BUKRS BUTXT FROM T001
INTO (GF_HOFPARM-BUKRS,GF_HOFPARM-BUTXT)
WHERE BUKRS = P_BUKRS.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_BUKRS.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'T001' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_CHECK_T001
*&------------------------------------------------------------------*
*&      Form  FRM_GET_LFA1
*&------------------------------------------------------------------*
*       仕入先名称・得意先コード取得
*-------------------------------------------------------------------*
FORM FRM_GET_LFA1.

SELECT LIFNR
NAME2
KUNNR
TELFX "仕入先ＦＡＸ番号
FROM LFA1
INTO CORRESPONDING FIELDS OF TABLE GT_LFA1
WHERE LIFNR IN S_LIFNR.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_LFA1_J.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'LFA1' SY-SUBRC.
ENDCASE.
* 得意先コードがないレコードは省き別の内部テーブルに格納する。
LOOP AT GT_LFA1 INTO GF_LFA1
WHERE KUNNR <> SPACE.
APPEND GF_LFA1 TO GT_LFA1_EXCL.
ENDLOOP.

ENDFORM.                    " FRM_GET_LFA1
*&------------------------------------------------------------------*
*&      Form  FRM_READ_LFA1
*&------------------------------------------------------------------*
*       仕入先マスタ内部ＴＢＬから仕入先名・得意先コードを取得する
*-------------------------------------------------------------------*
*      -->  P_LIFNR     仕入先コード
*      <--  P_NAME2     仕入先名
*      <--  P_KUNNR     得意先コード
*      <--  P_TELFX     ファックス番号
*-------------------------------------------------------------------*
FORM FRM_READ_LFA1 USING    P_LIFNR
CHANGING P_NAME2
P_KUNNR
P_TELFX.

READ TABLE GT_LFA1 INTO GF_LFA1
WITH KEY LIFNR = P_LIFNR.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_LFA1_J.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'LFA1' SY-SUBRC.
ENDCASE.

P_NAME2     = GF_LFA1-NAME2.
P_KUNNR     = GF_LFA1-KUNNR.
P_TELFX     = GF_LFA1-TELFX.

ENDFORM.                    " FRM_READ_LFA1
*&------------------------------------------------------------------*
*&      Form  FRM_GET_LFB1
*&------------------------------------------------------------------*
*      支払条件・支払方法の取得
*        読込ＴＢＬ：LFB1：仕入先マスタ（会社コード）
*        ＴＢＬ読込条件３Ａ
*-------------------------------------------------------------------*
FORM FRM_GET_LFB1.

SELECT BUKRS
LIFNR
ZWELS
ZTERM
FROM LFB1
INTO CORRESPONDING FIELDS OF TABLE GT_LFB1
WHERE LIFNR IN S_LIFNR AND
BUKRS = PR_BUKRS.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_LFB1_J.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'LFB1' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_GET_LFB1
*&------------------------------------------------------------------*
*&      Form  FRM_READ_LFB1
*&------------------------------------------------------------------*
*       仕入先マスタ（会社コード）内部TBLから
*       支払方法・支払条件を読み込む
*-------------------------------------------------------------------*
*      -->  P_LIFNR     仕入先コード
*      <--  P_ZWELS     支払方法
*      <--  P_ZTERM     支払条件
*-------------------------------------------------------------------*
FORM FRM_READ_LFB1 USING    P_LIFNR
CHANGING P_ZWELS
P_ZTERM.

READ TABLE GT_LFB1 INTO GF_LFB1
WITH KEY LIFNR = P_LIFNR.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_LFB1_J.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'LFB1' SY-SUBRC.
ENDCASE.

P_ZWELS     = GF_LFB1-ZWELS.
P_ZTERM     = GF_LFB1-ZTERM.

ENDFORM.                    " FRM_READ_LFB1
*&------------------------------------------------------------------*
*&      Form  FRM_CHECK_SKB1
*&------------------------------------------------------------------*
*       各種勘定チェック
*-------------------------------------------------------------------*
* --> P_BUKRS 会社コード
*-------------------------------------------------------------------*
FORM FRM_CHECK_SKB1 USING VALUE(P_BUKRS).
DATA: TMP_BUKRS LIKE SKB1-BUKRS."会社コード作業領域
* --- 債務勘定チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_DEBT.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_SAIMU.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
ENDCASE.
* --- 債券勘定チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_CRDT.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_SAIKEN.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
ENDCASE.

* --- 現金勘定チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_CASH.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_GENKIN.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
ENDCASE.

* --- 預金勘定チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_DEPS.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_YOKIN.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
ENDCASE.

* --- 支払手形チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_BLPY.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_SHTEGATA.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
ENDCASE.

* --- 相殺チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_OFFEO.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_SOUSAI.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
ENDCASE.

* --- その他チェック
SELECT SINGLE BUKRS FROM SKB1 INTO (TMP_BUKRS)
WHERE BUKRS = P_BUKRS AND
SAKNR IN S_ETC.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S600(Z1) WITH CNS_ETC.
STOP.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'SKB1' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_CHECK_SKB1
*&------------------------------------------------------------------*
*&      Form  FRM_H_SETDATE
*&------------------------------------------------------------------*
*       ヘッダ支払日Ｆ＆Ｔの設定
*-------------------------------------------------------------------*
FORM FRM_H_SETDATE.
LOOP AT S_ZFBDT WHERE SIGN = 'I'.
WRITE S_ZFBDT-LOW  TO GF_HOFPARM-ZFBDTFM  .
WRITE S_ZFBDT-HIGH TO GF_HOFPARM-ZFBDTTO  .
ENDLOOP.
ENDFORM.                    " FRM_H_SETDATE
*&------------------------------------------------------------------*
*&      Form  FRM_H_SETETC
*&------------------------------------------------------------------*
*       ヘッダその他の設定
*-------------------------------------------------------------------*
FORM FRM_H_SETETC.

GF_HOFPARM-H_LIFNR = CNS_ST_LIFNR.
GF_HOFPARM-H_NAME  = CNS_ST_NAME.
GF_HOFPARM-H_OFFSET = CNS_ST_OFFSET.

*   ファイル出力用明細構造
*---ヘッダ部　会社コード行
MOVE:  CNS_BUKRSC       TO GF_LIST-L01.
MOVE:  GF_HOFPARM-BUKRS TO GF_LIST-L02.
MOVE:  GF_HOFPARM-BUTXT TO GF_LIST-L03.
APPEND GF_LIST  TO GT_LIST .
CLEAR GF_LIST.

*---ヘッダ部　支払日行
* 2005/04/26 START_ADD
MOVE:  CNS_PAYDAY         TO GF_LIST-L01.
MOVE:  GF_HOFPARM-ZFBDTFM TO GF_LIST-L02.
MOVE:  CNS_KARA           TO GF_LIST-L03.
MOVE:  GF_PARM-F04        TO GF_LIST-L04.
APPEND GF_HOFPARM-ZFBDTTO TO GT_LIST .
CLEAR GF_LIST.

*---明細ヘッダ部
MOVE:  GF_HOFPARM-H_LIFNR  TO GF_LIST-L01.
MOVE:  GF_HOFPARM-H_NAME   TO GF_LIST-L02.
MOVE:  GF_HOFPARM-H_OFFSET TO GF_LIST-L03.

APPEND GF_LIST  TO GT_LIST .
CLEAR GF_LIST.

ENDFORM.
*&------------------------------------------------------------------*
*&      Form  FRM_GET_BSIK
*&------------------------------------------------------------------*
*   会計管理：仕入先二次索引（BSIK）ＴＢＬから債務データ（未決済）情報を
*   抽出する。
*-------------------------------------------------------------------*
FORM FRM_GET_BSIK.

LOOP AT GT_LFA1 INTO GF_LFA1.
SELECT LIFNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
FROM BSIK
APPENDING CORRESPONDING FIELDS OF TABLE GT_BSIK
WHERE BUKRS = PR_BUKRS
AND LIFNR = GF_LFA1-LIFNR
*2012/05/14 MOD
AND BUDAT IN S_ZFBDT
*             AND ZFBDT IN S_ZFBDT
*2012/05/14 MOD
AND HKONT IN S_DEBT
AND BLART IN S_BLDT.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSIK' SY-SUBRC.
ENDCASE.
ENDLOOP.

ENDFORM.                    " FRM_GET_BSIK
*&------------------------------------------------------------------*
*&      Form  FRM_COM_BSIK
*&------------------------------------------------------------------*
* 抽出した会計管理：仕入先二次索引（BSIK）ＴＢＬから債務データ（未決済）
* を集計する。
*-------------------------------------------------------------------*
FORM FRM_COM_BSIK.

* 集計用回転内部TBL GT_TMP_BSXK にデータをコピー
CLEAR: GF_TMP_BSXK.
LOOP AT GT_BSIK INTO GF_BSIK.
MOVE-CORRESPONDING GF_BSIK TO GF_TMP_BSXK.
APPEND GF_TMP_BSXK TO GT_TMP_BSXK.
ENDLOOP.

* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_TMP_BSXK  ASCENDING BY LIFNR
ZUONR.
*
LOOP AT GT_TMP_BSXK INTO GF_TMP_BSXK.
MOVE-CORRESPONDING GF_TMP_BSXK TO GF_BSIK.
*   集計処理
PERFORM PRM_SET_PERMPRO_BSIK.
AT END OF ZUONR.
APPEND GF_PARMPRO TO GT_PARMPRO.
CLEAR GF_PARMPRO.
ENDAT.
ENDLOOP.

ENDFORM.                    " FRM_COM_BSIK
*&------------------------------------------------------------------*
*&      Form  PRM_SET_PERMPRO_BSIK
*&------------------------------------------------------------------*
*       支払実績リスト処理用内部ＴＢＬの設定
*-------------------------------------------------------------------*
FORM PRM_SET_PERMPRO_BSIK.

* 仕入先コードから、仕入先名・得意先コードを読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFA1 USING    GF_BSIK-LIFNR
CHANGING GF_PARMPRO-NAME2
GF_PARMPRO-KUNNR
GF_PARMPRO-TELFX.

* 仕入先コードから、支払方法・支払条件を読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFB1 USING    GF_BSIK-LIFNR
CHANGING GF_PARMPRO-ZWELS
GF_PARMPRO-ZTERM.

GF_PARMPRO-BUKRS = PR_BUKRS.      "会社コード
GF_PARMPRO-LIFNR = GF_BSIK-LIFNR. "仕入先コード
GF_PARMPRO-ZUONR = GF_BSIK-ZUONR. "ソートキー
GF_PARMPRO-SHKZG = GF_BSIK-SHKZG. "借方／貸方フラグ

* 貸方／借方フラグをチェックし国内通貨額を加減算する
CASE GF_BSIK-SHKZG.
WHEN CNS_H.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR + GF_BSIK-DMBTR.
WHEN CNS_S.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR - GF_BSIK-DMBTR.
WHEN OTHERS.
ENDCASE.

GF_PARMPRO-HKONT = GF_BSIK-HKONT."ソートキー
GF_PARMPRO-ZFBDT = GF_BSIK-ZFBDT."支払基準日

ENDFORM.                    " PRM_SET_PERMPRO_BSIK
*&------------------------------------------------------------------*
*&      Form  FRM_GET_BSID
*&------------------------------------------------------------------*
*   会計管理：仕入先二次索引（BSID）ＴＢＬから債権データ（未決済）情報を
*   抽出する。
*-------------------------------------------------------------------*
FORM FRM_GET_BSID.
DATA:L_CNT_PARMREC(14) TYPE N."GT_LFA1_EXCLのレコード数

DESCRIBE TABLE GT_LFA1_EXCL LINES L_CNT_PARMREC.
* ファイル出力用内部ＴＢＬが0件ならば再ブレイクと判断しない
IF L_CNT_PARMREC = 0.
EXIT.
ENDIF.

LOOP AT GT_LFA1_EXCL INTO GF_LFA1_EXCL.
SELECT KUNNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
FROM BSID
APPENDING CORRESPONDING FIELDS OF TABLE GT_BSID
WHERE BUKRS = PR_BUKRS
AND KUNNR = GF_LFA1_EXCL-KUNNR
AND ZFBDT IN S_ZFBDT
AND HKONT IN S_CRDT
AND BLART IN S_BLCT
.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSID' SY-SUBRC.
ENDCASE.
ENDLOOP.

ENDFORM.                    " FRM_GET_BSID
*&------------------------------------------------------------------*
*&      Form  FRM_COM_BSID
*&------------------------------------------------------------------*
* 抽出した会計管理：得意先二次索引（BSID）ＴＢＬから債権データ（未決済）
* を集計する。
*-------------------------------------------------------------------*
FORM FRM_COM_BSID.
* 集計用回転内部TBL GF_TMP_BSXD にデータをコピー
CLEAR: GF_TMP_BSXD.
LOOP AT GT_BSID INTO GF_BSID.
MOVE-CORRESPONDING GF_BSID TO GF_TMP_BSXD.
APPEND GF_TMP_BSXD TO GT_TMP_BSXD.
ENDLOOP.
* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_TMP_BSXD  ASCENDING BY KUNNR
ZUONR.

LOOP AT GT_LFA1 INTO GF_LFA1.
LOOP AT GT_TMP_BSXD INTO GF_TMP_BSXD
WHERE KUNNR = GF_LFA1-KUNNR .
MOVE-CORRESPONDING GF_TMP_BSXD TO GF_BSID.
*     集計処理
PERFORM PRM_SET_PERMPRO_BSID.
AT END OF ZUONR.
APPEND GF_PARMPRO TO GT_PARMPRO.
CLEAR GF_PARMPRO.
ENDAT.
ENDLOOP.
ENDLOOP.
ENDFORM.                    " FRM_COM_BSID
*&------------------------------------------------------------------*
*&      Form  PRM_SET_PERMPRO_BSID
*&------------------------------------------------------------------*
*       支払実績リスト処理用内部ＴＢＬの設定
*-------------------------------------------------------------------*
FORM PRM_SET_PERMPRO_BSID.

* 仕入先コードから、仕入先名・得意先コードを読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
GF_BSID-LIFNR    = GF_LFA1-LIFNR.
GF_PARMPRO-LIFNR = GF_LFA1-LIFNR.
GF_PARMPRO-NAME2 = GF_LFA1-NAME2.
GF_PARMPRO-KUNNR = GF_LFA1-KUNNR.

GF_PARMPRO-TELFX = GF_LFA1-TELFX.

* 仕入先コードから、支払方法・支払条件を読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFB1 USING    GF_BSID-LIFNR
CHANGING GF_PARMPRO-ZWELS
GF_PARMPRO-ZTERM.

GF_PARMPRO-BUKRS = PR_BUKRS.      "会社コード
GF_PARMPRO-LIFNR = GF_BSID-LIFNR. "仕入先コード
GF_PARMPRO-ZUONR = GF_BSID-ZUONR. "ソートキー
GF_PARMPRO-SHKZG = GF_BSID-SHKZG. "借方／貸方フラグ

* 貸方／借方フラグをチェックし国内通貨額を加減算する
CASE GF_BSID-SHKZG.
WHEN CNS_H.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR - GF_BSID-DMBTR.
WHEN CNS_S.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR + GF_BSID-DMBTR.
WHEN OTHERS.
ENDCASE.

GF_PARMPRO-HKONT = GF_BSID-HKONT."ソートキー
GF_PARMPRO-ZFBDT = GF_BSID-ZFBDT."支払基準日

ENDFORM.                    " PRM_SET_PERMPRO_BSID
*&------------------------------------------------------------------*
*&      Form  FRM_GET_BSAK
*&------------------------------------------------------------------*
*   会計管理：仕入先二次索引（BSAK）ＴＢＬから債務データ（決済）情報を
*   抽出する。
*-------------------------------------------------------------------*
FORM FRM_GET_BSAK.

SELECT LIFNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
AUGBL
AUGDT
GJAHR
BELNR
BLART "伝票タイプ
FROM BSAK
INTO CORRESPONDING FIELDS OF TABLE GT_BSAK
FOR ALL ENTRIES IN GT_LFA1
WHERE BUKRS = PR_BUKRS
AND LIFNR = GT_LFA1-LIFNR
*2012/05/14 MOD
AND BUDAT IN S_ZFBDT
*             AND ZFBDT IN S_ZFBDT
*2012/05/14 MOD
AND HKONT IN S_DEBT
AND BLART IN S_BLDT.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSAK' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_GET_BSAK
*&------------------------------------------------------------------*
*&      Form  FRM_COM_BSAK
*&------------------------------------------------------------------*
* 抽出した会計管理：仕入先二次索引（BSAK）ＴＢＬから債務データ（決済）
* を集計する。
*-------------------------------------------------------------------*
FORM FRM_COM_BSAK.
* 集計用回転内部TBL GT_TMP_BSXK
CLEAR: GF_TMP_BSXK, GT_TMP_BSXK.
LOOP AT GT_BSAK INTO GF_BSAK.
MOVE-CORRESPONDING GF_BSAK TO GF_TMP_BSXK.
APPEND GF_TMP_BSXK TO GT_TMP_BSXK.
ENDLOOP.
* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_TMP_BSXK  ASCENDING BY LIFNR
ZUONR.

LOOP AT GT_TMP_BSXK INTO GF_TMP_BSXK.
MOVE-CORRESPONDING GF_TMP_BSXK TO GF_BSAK.
*   集計処理
PERFORM PRM_SET_PERMPRO_BSAK.
AT END OF ZUONR.
APPEND GF_PARMPRO TO GT_PARMPRO.
CLEAR GF_PARMPRO.
ENDAT.
ENDLOOP.

ENDFORM.                    " FRM_COM_BSAK
*&------------------------------------------------------------------*
*&      Form  PRM_SET_PERMPRO_BSAK
*&------------------------------------------------------------------*
*       支払実績リスト処理用内部ＴＢＬの設定
*-------------------------------------------------------------------*
*       仕入先債務データは決済伝票との関連処理のため
*       BSAKフラグを用いて差別化する。
*-------------------------------------------------------------------*
FORM PRM_SET_PERMPRO_BSAK.

* 仕入先コードから、仕入先名・得意先コードを読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFA1 USING    GF_BSAK-LIFNR
CHANGING GF_PARMPRO-NAME2
GF_PARMPRO-KUNNR
GF_PARMPRO-TELFX.

* 仕入先コードから、支払方法・支払条件を読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFB1 USING    GF_BSAK-LIFNR
CHANGING GF_PARMPRO-ZWELS
GF_PARMPRO-ZTERM.

GF_PARMPRO-BUKRS = PR_BUKRS.      "会社コード
GF_PARMPRO-AUGBL = GF_BSAK-AUGBL. "決済伝票
GF_PARMPRO-AUGDT = GF_BSAK-AUGDT. "決済日付
GF_PARMPRO-LIFNR = GF_BSAK-LIFNR. "仕入先コード
GF_PARMPRO-ZUONR = GF_BSAK-ZUONR. "ソートキー
GF_PARMPRO-SHKZG = GF_BSAK-SHKZG. "借方／貸方フラグ
GF_PARMPRO-FBSAK = CNS_X.         "BSAKフラグセット

* 貸方／借方フラグをチェックし国内通貨額を加減算する
CASE GF_BSAK-SHKZG.
WHEN CNS_H.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR + GF_BSAK-DMBTR.
WHEN CNS_S.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR - GF_BSAK-DMBTR.
WHEN OTHERS.
ENDCASE.

GF_PARMPRO-HKONT = GF_BSAK-HKONT."ソートキー
GF_PARMPRO-ZFBDT = GF_BSAK-ZFBDT."支払基準日

ENDFORM.                    " PRM_SET_PERMPRO_BSAK
*&------------------------------------------------------------------*
*&      Form  FRM_GET_BSAD
*&------------------------------------------------------------------*
*   会計管理：得意先二次索引（BSAD）ＴＢＬから債権データ（決済）情報を
*   抽出する。
*-------------------------------------------------------------------*
FORM FRM_GET_BSAD.
DATA:L_CNT_PARMREC(14) TYPE N."GT_LFA1_EXCLのレコード数

DESCRIBE TABLE GT_LFA1_EXCL LINES L_CNT_PARMREC.
* ファイル出力用内部ＴＢＬが0件ならば再ブレイクと判断しない
IF L_CNT_PARMREC = 0.
EXIT.
ENDIF.

SELECT KUNNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
AUGBL
AUGDT
BLART
FROM BSAD
INTO CORRESPONDING FIELDS OF TABLE GT_BSAD
FOR ALL ENTRIES IN GT_LFA1_EXCL
WHERE BUKRS = PR_BUKRS
AND KUNNR = GT_LFA1_EXCL-KUNNR
AND ZFBDT IN S_ZFBDT
AND HKONT IN S_CRDT
AND BLART IN S_BLCT.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSAD' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_GET_BSAD
*&------------------------------------------------------------------*
*&      Form  FRM_COM_BSAD
*&------------------------------------------------------------------*
* 抽出した会計管理：得意先二次索引（BSAD）ＴＢＬから債権データ（未決済）
* を集計する。
*-------------------------------------------------------------------*
FORM FRM_COM_BSAD.
* 集計用回転内部TBL GT_TMP_BSXD
CLEAR: GF_TMP_BSXD,GT_TMP_BSXD.
LOOP AT GT_BSAD INTO GF_BSAD.
MOVE-CORRESPONDING GF_BSAD TO GF_TMP_BSXD.
APPEND GF_TMP_BSXD TO GT_TMP_BSXD.
ENDLOOP.

* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_TMP_BSXD  ASCENDING BY KUNNR
ZUONR.
LOOP AT GT_LFA1 INTO GF_LFA1
WHERE KUNNR <> SPACE.
LOOP AT GT_TMP_BSXD INTO GF_TMP_BSXD
WHERE KUNNR = GF_LFA1-KUNNR .
MOVE-CORRESPONDING GF_TMP_BSXD TO GF_BSAD.
*     集計処理
PERFORM PRM_SET_PERMPRO_BSAD.
AT END OF ZUONR.
APPEND GF_PARMPRO TO GT_PARMPRO.
CLEAR GF_PARMPRO.
ENDAT.
ENDLOOP.
ENDLOOP.
ENDFORM.                    " FRM_COM_BSAD
*&------------------------------------------------------------------*
*&      Form  PRM_SET_PERMPRO_BSAD
*&------------------------------------------------------------------*
*       支払実績リスト処理用内部ＴＢＬの設定
*-------------------------------------------------------------------*
FORM PRM_SET_PERMPRO_BSAD.

* 仕入先コードから、仕入先名・得意先コードを読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
GF_BSAD-LIFNR    = GF_LFA1-LIFNR.
GF_PARMPRO-LIFNR = GF_LFA1-LIFNR.
GF_PARMPRO-NAME2 = GF_LFA1-NAME2.
GF_PARMPRO-KUNNR = GF_LFA1-KUNNR.
GF_PARMPRO-TELFX = GF_LFA1-TELFX.

* 仕入先コードから、支払方法・支払条件を読み込み
* 支払実績リスト処理用明細内部ＴＢＬに設定する
PERFORM FRM_READ_LFB1 USING    GF_BSAD-LIFNR
CHANGING GF_PARMPRO-ZWELS
GF_PARMPRO-ZTERM.

GF_PARMPRO-BUKRS = PR_BUKRS.      "会社コード
GF_PARMPRO-AUGBL = GF_BSAK-AUGBL. "決済伝票
GF_PARMPRO-AUGDT = GF_BSAK-AUGDT. "決済日付
GF_PARMPRO-LIFNR = GF_BSAD-LIFNR. "仕入先コード
GF_PARMPRO-ZUONR = GF_BSAD-ZUONR. "ソートキー
GF_PARMPRO-SHKZG = GF_BSAD-SHKZG. "借方／貸方フラグ

* 貸方／借方フラグをチェックし国内通貨額を加減算する
CASE GF_BSAD-SHKZG.
WHEN CNS_H.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR - GF_BSAD-DMBTR.
WHEN CNS_S.
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR + GF_BSAD-DMBTR.
WHEN OTHERS.
ENDCASE.

GF_PARMPRO-HKONT = GF_BSAD-HKONT."ソートキー
GF_PARMPRO-ZFBDT = GF_BSAD-ZFBDT."支払基準日

ENDFORM.                    " PRM_SET_PERMPRO_BSAD
*&------------------------------------------------------------------*
*&      Form  FRM_GET_BSEG
*&------------------------------------------------------------------*
*       決済伝票明細抽出処理
*-------------------------------------------------------------------*
FORM FRM_GET_BSEG.

LOOP AT GT_BSAK_AUGDT INTO GF_BSAK_AUGDT.

SELECT BUKRS
BELNR
GJAHR
BUZEI
ZUONR
SHKZG
DMBTR
HKONT
FROM BSEG
INTO CORRESPONDING FIELDS OF GF_BSEG
WHERE BUKRS = PR_BUKRS
AND GJAHR = GF_BSAK_AUGDT-GJAHR
AND BELNR = GF_BSAK_AUGDT-BELNR
AND SGTXT <> '支払手形決済'.

GF_BSEG-LIFNR = GF_BSAK_AUGDT-LIFNR.
APPEND GF_BSEG TO GT_BSEG.

ENDSELECT.
CASE SY-SUBRC.
WHEN 0.
WHEN 4.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSEG' SY-SUBRC.
ENDCASE.

ENDLOOP.

CLEAR: GF_TMP_BSEG, GT_TMP_BSEG.
LOOP AT GT_BSEG INTO GF_BSEG.
MOVE-CORRESPONDING GF_BSEG TO GF_TMP_BSEG.
APPEND GF_TMP_BSEG TO GT_TMP_BSEG.
ENDLOOP.

SORT GT_TMP_BSEG ASCENDING BY LIFNR "追加 2002/09/25
BELNR
GJAHR
BUZEI.

*-------------------------------------------*
* 重複データ削除処理 APPEND START 2002/01/24
*-------------------------------------------*
DATA:GT_BSEG_MARGE TYPE TABLE OF TYP_BSXX."gt_bsegのマージ後のデータ

LOOP AT GT_TMP_BSEG INTO GF_TMP_BSEG.
MOVE-CORRESPONDING GF_TMP_BSEG TO GF_BSEG.
AT END OF BUZEI.
APPEND GF_BSEG TO GT_BSEG_MARGE.
ENDAT.
ENDLOOP.

GT_BSEG = GT_BSEG_MARGE.
*-------------------------------------------*
* 重複データ削除処理 APPEND END 2002/01/24
*-------------------------------------------*

ENDFORM.                    " FRM_GET_BSEG
*&------------------------------------------------------------------*
*&      Form  FRM_COM_CRDB
*&------------------------------------------------------------------*
*       債権／債務の決済／未決済をそれぞれ仕入先＋ソートキーで
*       集計する
*-------------------------------------------------------------------*
FORM FRM_COM_CRDB.
* 構造の初期化
CLEAR: GF_PARM,
GF_TMP_PARMPRO,
GF_PKIND.
DATA: L_SUBRC TYPE SY-SUBRC.
* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_PARMPRO ASCENDING BY LIFNR
ZUONR.
* GT_PARMPRO 内部TBLの複数仕入先時に発生する
* 空（カラ）レコードを削除する
DELETE GT_PARMPRO WHERE BUKRS = SPACE.

LOOP AT GT_PARMPRO INTO GF_TMP_PARMPRO.
GF_PARMPRO = GF_TMP_PARMPRO.
*   仕入先コードブレイク時かつ初期レコードでない時---------*
AT NEW LIFNR.
PERFORM FRM_LIFNR_BREAK."仕入先コードブレイク時
*
WRITE GF_PARMPRO-LIFNR TO GF_LIST-L01.   "仕入先コード
MOVE GF_PARMPRO-NAME2 TO GF_LIST-L02.    "仕入先名
*
ENDAT.
*   ソートキーの処理
L_SUBRC = 4.
AT END OF ZUONR.
L_SUBRC = 0.
PERFORM FRM_ZUONR_BREAK_END."ソートキーごとの処理
ENDAT.
IF L_SUBRC <> 0.
PERFORM FRM_ZUONR_BREAK."スタンダードソートキー
ENDIF.
*   ソートキーごとの処理
AT END OF LIFNR.
PERFORM FRM_LIFNR_REBREAK."仕入先コード再ブレイク時
*
MOVE GF_PARM-F10  TO GF_LIST-L05.
MOVE GF_PARM-F10P TO GF_LIST-L06.
IF GF_PARM-F10P <> 0.
APPEND GF_LIST TO GT_LIST.
ENDIF.
CLEAR:GF_LIST.
*
ENDAT.
ENDLOOP.

ENDFORM.                    " FRM_COM_CRDB
*&------------------------------------------------------------------*
*&      Form  FRM_LIFNR_BREAK
*&------------------------------------------------------------------*
*       ファイル出力用内部ＴＢＬ格納
*       仕入先ブレイク時の処理
*-------------------------------------------------------------------*
FORM FRM_LIFNR_BREAK.
CNT_NUM = CNT_NUM + 1.                "仕入先ごとに採番する
*"採番された番号
WRITE CNT_NUM TO GF_PARM-F01.
*"支払先
WRITE GF_PARMPRO-LIFNR TO GF_PARM-F02.
*"名称
WRITE GF_PARMPRO-NAME2 TO GF_PARM-F03.
*"支払条件
WRITE GF_PARMPRO-ZWELS TO GF_PARM-F07.
*"支払方法
WRITE GF_PARMPRO-ZTERM TO GF_PARM-F06.
WRITE GF_PARMPRO-TELFX TO GF_PARM-F05."ＦＡＸ番号

*   明細1行目をAPPENDする
APPEND GF_PARM TO GT_PARM."１明細行を内部テーブルに追加
CLEAR GF_PARM.

ENDFORM.                    " FRM_LIFNR_BREAK
*&------------------------------------------------------------------*
*&      Form  FRM_ZUONR_BREAK
*&------------------------------------------------------------------*
*       ファイル出力内部ＴＢＬ格納
*       ソートキーごとの処理
*-------------------------------------------------------------------*
FORM FRM_ZUONR_BREAK.

* 通貨は「JPY」固定により「金額×１００」とする
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR * 100.

IF GF_PARMPRO-HKONT IN S_DEBT."債務勘定を処理対象
GF_PARM-F03P = GF_PARM-F03P + GF_PARMPRO-DMBTR.
WRITE GF_PARM-F03P TO GF_PARM-F03.    "買掛金
G_AP = GF_PARMPRO-DMBTR + G_AP.       "合計明細に加算
ENDIF.

IF GF_PARMPRO-HKONT IN S_CRDT."債権勘定を処理対象
GF_PARM-F04P = GF_PARM-F04P + GF_PARMPRO-DMBTR.
WRITE GF_PARM-F04P TO GF_PARM-F04.    "売掛金
G_AR = GF_PARMPRO-DMBTR + G_AR.       "合計明細に加算
ENDIF.

WRITE GF_PARMPRO-ZUONR TO GF_PARM-F02."ソートキー

*   買掛金と売掛金が共に０円の時
IF NOT ( GF_PARM-F03P = 0
AND  GF_PARM-F04P = 0 ).
*    AND  PR_DETL = CNS_X.
GF_PARM-F05 = SPACE.
GF_PARM-F06 = SPACE.
GF_PARM-F07 = SPACE.
GF_PARM-F08 = SPACE.
GF_PARM-F09 = SPACE.
GF_PARM-F10 = SPACE.
GF_PARM-F11 = SPACE.
ENDIF.

ENDFORM.                    " FRM_ZUONR_BREAK
*&------------------------------------------------------------------*
*&      Form  FRM_ZUONR_BREAK_END
*&------------------------------------------------------------------*
*       ファイル出力内部ＴＢＬ格納
*       ソートキーごとの処理
*-------------------------------------------------------------------*
FORM FRM_ZUONR_BREAK_END.

* 通貨は「JPY」固定により「金額×１００」とする
GF_PARMPRO-DMBTR = GF_PARMPRO-DMBTR * 100.

IF GF_PARMPRO-HKONT IN S_DEBT."債務勘定を処理対象
GF_PARM-F03P = GF_PARM-F03P + GF_PARMPRO-DMBTR.
WRITE GF_PARM-F03P TO GF_PARM-F03.    "買掛金
G_AP = GF_PARMPRO-DMBTR + G_AP.       "合計明細に加算
ENDIF.

IF GF_PARMPRO-HKONT IN S_CRDT."債権勘定を処理対象
GF_PARM-F04P = GF_PARM-F04P + GF_PARMPRO-DMBTR.
WRITE GF_PARM-F04P TO GF_PARM-F04.    "売掛金
G_AR = GF_PARMPRO-DMBTR + G_AR.       "合計明細に加算
ENDIF.

WRITE GF_PARMPRO-ZUONR TO GF_PARM-F02."ソートキー

*   買掛金と売掛金が共に０円の時
IF NOT ( GF_PARM-F03P = 0
AND  GF_PARM-F04P = 0 ).
*    AND  PR_DETL = CNS_X.
GF_PARM-F05 = SPACE.
GF_PARM-F06 = SPACE.
GF_PARM-F07 = SPACE.
GF_PARM-F08 = SPACE.
GF_PARM-F09 = SPACE.
GF_PARM-F10 = SPACE.
GF_PARM-F11 = SPACE.
ENDIF.

*  IF PR_DETL = CNS_X.
*    APPEND GF_PARM TO GT_PARM."２明細行を内部テーブルに追加
*  ENDIF.
CLEAR GF_PARM.

ENDFORM.                    " FRM_ZUONR_BREAK_END
*&------------------------------------------------------------------*
*&      Form  FRM_LIFNR_REBREAK
*&------------------------------------------------------------------*
*       ファイル出力用内部ＴＢＬ格納
*       仕入先再ブレイク時の処理
*-------------------------------------------------------------------*
FORM FRM_LIFNR_REBREAK.
DATA:L_CNT_PARMREC(14) TYPE N."GT_PARMのレコード数

DESCRIBE TABLE GT_LIST LINES L_CNT_PARMREC.
* ファイル出力用内部ＴＢＬが0件ならば再ブレイクと判断しない
IF L_CNT_PARMREC < CNS_INIT_RECNUM.
EXIT.
ENDIF.
* ファイル出力用内部ＴＢＬが0件でなければ再ブレイクと判断する

* 支払金種別集計内部ＴＢＬから前レコードの仕入先コードで
* 支払金種別集計情報を集計。
PERFORM FRM_COM_BSEG.

ENDFORM.                    " FRM_LIFNR_REBREAK
*&---------------------------------------------------------------------*
*&      Form  FRM_COM_BSEG
*&---------------------------------------------------------------------*
*       仕入先ごとに支払金種別に集計し明細合計行を設定する。
*----------------------------------------------------------------------*
FORM FRM_COM_BSEG.

CLEAR GF_PKIND.
LOOP AT GT_BSEG INTO GF_BSEG
WHERE LIFNR = GF_PARMPRO-LIFNR.
*   通貨は「JPY」固定により「金額×１００」とする
GF_BSEG-DMBTR = GF_BSEG-DMBTR * 100.
*   現金勘定の設定---------------------------------------
IF GF_BSEG-HKONT IN S_CASH.
IF GF_BSEG-SHKZG = CNS_H."借方
*       支払実績リスト明細[帳票用]
GF_PKIND-CASH = GF_PKIND-CASH + GF_BSEG-DMBTR.
*       支払実績リスト総合計[帳票用]
GF_PARMT-F05 = GF_PARMT-F05 + GF_BSEG-DMBTR.
ELSE."貸方
*       支払実績リスト明細[帳票用]
GF_PKIND-CASH = GF_PKIND-CASH - GF_BSEG-DMBTR.
*       支払実績リスト総合計[帳票用]
GF_PARMT-F05 = GF_PARMT-F05 - GF_BSEG-DMBTR.
ENDIF.
ENDIF.
*   銀行振込の設定---------------------------------------
IF GF_BSEG-HKONT IN S_DEPS.
IF GF_BSEG-SHKZG = CNS_H."借方
*       支払実績リスト明細[帳票用]
GF_PKIND-BNKTR = GF_PKIND-BNKTR + GF_BSEG-DMBTR.
*       支払実績リスト総合計[帳票用]
GF_PARMT-F06 = GF_PARMT-F06 + GF_BSEG-DMBTR.
ELSE."貸方
*       支払実績リスト明細[帳票用]
GF_PKIND-BNKTR = GF_PKIND-BNKTR - GF_BSEG-DMBTR.
*       支払実績リスト総合計[帳票用]
GF_PARMT-F06 = GF_PARMT-F06 - GF_BSEG-DMBTR.
ENDIF.
ENDIF.
*   仕入割引の設定  ---------------------------------------
IF GF_BSEG-HKONT IN S_DCNT.
IF GF_BSEG-SHKZG = CNS_H."借方
*        支払実績リスト明細[帳票用]
GF_PKIND-DISCNT = GF_PKIND-DISCNT + GF_BSEG-DMBTR.
*        支払実績リスト総合計[帳票用]
GF_PARMT-F12 = GF_PARMT-F12 + GF_BSEG-DMBTR.
ELSE.
*        支払実績リスト明細[帳票用]
GF_PKIND-DISCNT = GF_PKIND-DISCNT - GF_BSEG-DMBTR.
*        支払実績リスト総合計[帳票用]
GF_PARMT-F12 = GF_PARMT-F12 - GF_BSEG-DMBTR.
ENDIF.
ENDIF.
*   その他の設定  ---------------------------------------
IF GF_BSEG-HKONT IN S_ETC.
IF GF_BSEG-SHKZG = CNS_H."借方
*        支払実績リスト明細[帳票用]
GF_PKIND-ETC = GF_PKIND-ETC + GF_BSEG-DMBTR.
*        支払実績リスト総合計[帳票用]
GF_PARMT-F08 = GF_PARMT-F08 + GF_BSEG-DMBTR.
ELSE.
*        支払実績リスト明細[帳票用]
GF_PKIND-ETC = GF_PKIND-ETC - GF_BSEG-DMBTR.
*        支払実績リスト総合計[帳票用]
GF_PARMT-F08 = GF_PARMT-F08 - GF_BSEG-DMBTR.
ENDIF.
ENDIF.
ENDLOOP.

PERFORM FRM_SOUSAI.
* 支払手形は別途再計算する
PERFORM FRM_SELECT_BSIK.

*   買掛金の設定    ---------------------------------------
*   買掛金明細合計[帳票用]
GF_PKIND-AP = G_AP.
*   買掛金総合計[帳票用]
GF_PARMT-F03 = GF_PARMT-F03 + G_AP.
*   売掛金の設定    ---------------------------------------
*   売掛金の明細合計[帳票用]
GF_PKIND-AR = G_AR.
*   売掛金総合計[帳票用]
GF_PARMT-F04 = GF_PARMT-F04 + G_AR.

*   支払計の加算  ---------------------------------------
GF_PKIND-PSUMT = GF_PKIND-CASH
+ GF_PKIND-BNKTR
+ GF_PKIND-LACCP
+ GF_PKIND-DISCNT
+ GF_PKIND-ETC.
GF_PARMT-F09   = GF_PARMT-F09 + GF_PKIND-PSUMT.
*   差額の計算      ---------------------------------------
*   差額の明細合計[帳票用]
GF_PKIND-DIFFER = GF_PKIND-AP - GF_PKIND-PSUMT - GF_PKIND-OFFSET.
*   差額の総合計[帳票用]
GF_PARMT-F11 = GF_PARMT-F11 + GF_PKIND-DIFFER.

*   文字列”＊計＊”の設定[帳票用]
GF_PARMT-F02 = CNS_TOTAL_J.
*   APPEND処理等
*   計算用→出力用[帳票用]
PERFORM FRM_PARM_WRITE.

* [帳票用]
APPEND GF_PARM TO GT_PARM."ファイル出力用明細　構造→内部ＴＢＬ

*   初期化処理
*   現在使用した計算用構造GF_PKINDを初期化する
CLEAR: G_AP,
G_AR,
GF_PKIND.

ENDFORM.                    " FRM_COM_BSEG
*&---------------------------------------------------------------------*
*&      Form  FRM_PARM_WRITE
*&---------------------------------------------------------------------*
*       計算用構造から出力用構造に出力
*----------------------------------------------------------------------*
FORM FRM_PARM_WRITE.

* ファイル出力用
WRITE: CNS_TOTAL_J     TO GF_PARM-F02,
GF_PKIND-AP     TO GF_PARM-F03,
GF_PKIND-AR     TO GF_PARM-F04,
GF_PKIND-CASH   TO GF_PARM-F05,
GF_PKIND-BNKTR  TO GF_PARM-F06,
GF_PKIND-LACCP  TO GF_PARM-F07,
GF_PKIND-ETC    TO GF_PARM-F08,
GF_PKIND-DISCNT TO GF_PARM-F12,"仕入割引
GF_PKIND-PSUMT  TO GF_PARM-F09,
GF_PKIND-OFFSET TO GF_PARM-F10,
GF_PKIND-DIFFER TO GF_PARM-F11.

* 帳票出力用
MOVE:
GF_PKIND-AP     TO GF_PARM-F03P,
GF_PKIND-AR     TO GF_PARM-F04P,
GF_PKIND-CASH   TO GF_PARM-F05P,
GF_PKIND-BNKTR  TO GF_PARM-F06P,
GF_PKIND-LACCP  TO GF_PARM-F07P,
GF_PKIND-DISCNT TO GF_PARM-F12P,"仕入割引
GF_PKIND-ETC    TO GF_PARM-F08P,
GF_PKIND-PSUMT  TO GF_PARM-F09P,
GF_PKIND-OFFSET TO GF_PARM-F10P,
GF_PKIND-DIFFER TO GF_PARM-F11P.

ENDFORM.                    " FRM_PARM_WRITE
*&---------------------------------------------------------------------*
*&      Form  FRM_PUT_SUM
*&---------------------------------------------------------------------*
*       支払実績リストファイル出力用総合計レコードを追加する
*----------------------------------------------------------------------*
FORM FRM_PUT_SUM.
*   ファイル出力用明細構造
WRITE: CNS_LTOTAL_J    TO GF_LIST-L01,
GF_PARMT-F10    TO GF_LIST-L05.

MOVE:  GF_PARMT-F10    TO GF_LIST-L06.

APPEND GF_LIST TO GT_LIST.

ENDFORM.                    " FRM_PUT_SUM
*&---------------------------------------------------------------------*
*&      Form  FRM_H_FIREP
*&---------------------------------------------------------------------*
*       ＦＩ共通ヘッダ
*----------------------------------------------------------------------*
*       改ページ処理時にヘッダを出力する
*----------------------------------------------------------------------*
FORM FRM_H_FIREP USING P_TITLE.

* 共通レポートヘッダー出力　（１７０バイト用）
* １行目
WRITE : /56   P_TITLE,
131  '出力日時:' ,
140  SY-DATUM ,
151  SY-UZEIT ,
160'PAGE:' ,
165  SY-PAGNO .

PERFORM FRM_H_DETAILS.

ENDFORM.                    " FRM_H_FIREP
*&---------------------------------------------------------------------*
*&      Form  FRM_H_DETAILS
*&---------------------------------------------------------------------*
*       帳票出力明細ヘッダの出力
*----------------------------------------------------------------------*
FORM FRM_H_DETAILS.
*---ヘッダ部　会社コード行
WRITE:/2   CNS_BUKRSC       ,
16  GF_HOFPARM-BUKRS ,
22  GF_HOFPARM-BUTXT .

*---ヘッダ部　支払日行
WRITE:/2   CNS_PAYDAY         ,
16  GF_HOFPARM-ZFBDTFM.

IF GF_HOFPARM-ZFBDTTO <> '0000/00/00'.
WRITE:  27  CNS_KARA,
30  GF_HOFPARM-ZFBDTTO .
ENDIF.

*---明細ヘッダ部
WRITE AT:  /1(185) SY-ULINE,
/1(1) SY-VLINE.

FORMAT COLOR 4 ON INTENSIFIED.
WRITE:  10  GF_HOFPARM-H_LIFNR ,
32  GF_HOFPARM-H_NAME ,
77  GF_HOFPARM-H_OFFSET ,
185(1) SY-VLINE.

WRITE AT:  /1(185) SY-ULINE.

FORMAT COLOR OFF.

ENDFORM.                    " FRM_H_DETAILS
*&---------------------------------------------------------------------*
*&      Form  FRM_DETAILS_WRITE
*&---------------------------------------------------------------------*
*       帳票出力明細行の出力詳細
*----------------------------------------------------------------------*
FORM FRM_DETAILS_WRITE.

FORMAT COLOR 2 ON INTENSIFIED.
* 合計行の明細パターン
IF GF_LIST-L01 = CNS_TOTAL_J.
* 総合計行のパターン
ELSEIF GF_LIST-L01 = CNS_LTOTAL_J.
FORMAT COLOR 3 ON INTENSIFIED.
*   総合計行明細出力
WRITE AT:/1(1) SY-VLINE.
WRITE AT:1(185) SY-ULINE.
WRITE AT:185(1) SY-VLINE.
PERFORM FRM_DETAILS_PT01.
WRITE AT:/1(1) SY-VLINE.
WRITE AT:1(185) SY-ULINE.
WRITE AT:185(1) SY-VLINE.
* 通常明細
ELSE.
PERFORM FRM_DETAILS_PT02.
ENDIF.
* 枠線の出力
WRITE AT:185(1) SY-VLINE.
FORMAT COLOR OFF.
ENDFORM.                    " FRM_DETAILS_WRITE
*&---------------------------------------------------------------------*
*&      Form  FRM_DETAILS_PT01
*&---------------------------------------------------------------------*
*       明細合計行　パターン
*----------------------------------------------------------------------*
FORM FRM_DETAILS_PT01.
* 枠線の出力
WRITE AT:/1(1) SY-VLINE.
* 明細合計行
WRITE  10  GF_LIST-L01.
WRITE  77  GF_LIST-L06.
* 枠線の出力
WRITE AT:1(1) SY-VLINE.
WRITE AT:185(1) SY-VLINE.

ENDFORM.                    " FRM_DETAILS_PT01
*&---------------------------------------------------------------------*
*&      Form  FRM_DETAILS_PT02
*&---------------------------------------------------------------------*
*       ソートキー明細行
*----------------------------------------------------------------------*
FORM FRM_DETAILS_PT02.
WRITE AT:/1(1) SY-VLINE.
WRITE  10   GF_LIST-L01.
WRITE  32   GF_LIST-L02.
WRITE  77   GF_LIST-L06.
WRITE AT:185(1) SY-VLINE.
ENDFORM.                    " FRM_DETAILS_PT02
*&---------------------------------------------------------------------*
*&      Form  FRM_LIST_DOWNLOAD
*&---------------------------------------------------------------------*
*       「レポートのみ」をチェックしなかった場合、指定された
*       ローカルフォルダにダウンロードする。
*----------------------------------------------------------------------*
FORM FRM_LIST_DOWNLOAD.

* 帳票用内部テーブルをダウンロード用内部ＴＢＬに格納する
*（FILE OPEN でも仕様）
DATA:L_TABIX LIKE SY-TABIX."ヘッダ部日付欠落対応用
* {INSERT-----------------------------------------(S.MIKAMI 2005/07/11)
DATA: L_NUM(20) TYPE N.  "カンマ区切りを無くする用
*  INSERT-----------------------------------------(S.MIKAMI 2005/07/11)}

CLEAR:GF_DOWN,"ダウンロード用
GT_DOWN."ダウンロード用
LOOP AT GT_LIST INTO GF_LIST.
L_TABIX = SY-TABIX."ヘッダ部日付欠落対応用
IF L_TABIX = 3.
CONDENSE GF_LIST-L01 NO-GAPS.
CONDENSE GF_LIST-L02 NO-GAPS.
CONDENSE GF_LIST-L03 NO-GAPS.

GF_DOWN-D01 = GF_LIST-L01.
GF_DOWN-D02 = GF_LIST-L02.
GF_DOWN-D03 = GF_LIST-L03.
APPEND GF_DOWN TO GT_DOWN.
ENDIF.
IF L_TABIX > 3 AND GF_LIST-L01 <> CNS_LTOTAL_J.
*     データ設定
CONDENSE GF_LIST-L01 NO-GAPS.
CONDENSE GF_LIST-L02 NO-GAPS.
CONDENSE GF_LIST-L05 NO-GAPS.

GF_DOWN-D01 = GF_LIST-L01.
GF_DOWN-D02 = GF_LIST-L02.
* {MODIFY-----------------------------------------(S.MIKAMI 2005/07/11)
*      GF_DOWN-D03 = GF_LIST-L05.
L_NUM = GF_LIST-L05.
WRITE L_NUM TO GF_DOWN-D03 NO-ZERO.
CONDENSE GF_DOWN-D03 NO-GAPS.
*  MODIFY-----------------------------------------(S.MIKAMI 2005/07/11)}
APPEND GF_DOWN TO GT_DOWN.
ENDIF.
ENDLOOP.
* ファイル名を指定の型に変換
G_FILENAME = PR_FILE2.
* レポートのみ　または　バッチ処理時はダウンロードしない
IF PR_REP = SPACE AND SY-BATCH = SPACE.

LOOP AT GT_DOWN INTO GF_DOWN.
*   データ編集
PERFORM FRM_DATA_EDIT.
*   ファイルイメージ用
APPEND GF_FILE_IMAGE TO GT_FILE_IMAGE.
ENDLOOP.

CALL FUNCTION 'WS_DOWNLOAD'
EXPORTING
FILENAME                = G_FILENAME
FILETYPE                = 'DAT'
TABLES
DATA_TAB                = GT_FILE_IMAGE
EXCEPTIONS
FILE_OPEN_ERROR         = 1
FILE_WRITE_ERROR        = 2
INVALID_FILESIZE        = 3
INVALID_TYPE            = 4
NO_BATCH                = 5
UNKNOWN_ERROR           = 6
INVALID_TABLE_WIDTH     = 7
GUI_REFUSE_FILETRANSFER = 8
CUSTOMER_ERROR          = 9
OTHERS                  = 10.

IF SY-SUBRC <> 0.
*     汎用モジュールエラー
MESSAGE S502(Z1) WITH 'WS_DOWNLOAD' SY-SUBRC.
STOP.
ENDIF.

ENDIF."------ NO-BATCH = SPACE AND PR_REP = SPACE

ENDFORM.                    " FRM_LIST_DOWNLOAD
*&---------------------------------------------------------------------*
*&      Form  FRM_LIST_FILE_UP_LOAD
*&---------------------------------------------------------------------*
*       タブ区切りのデータを作成しＲ／３サーバーへデータを格納する
*----------------------------------------------------------------------*
FORM FRM_LIST_FILE_UP_LOAD.
* レポートのみ　または　ローカル出力時はファイル処理をしない
IF PR_REP = SPACE AND PR_RDS = CNS_X.

* ファイル名の選定
PERFORM FRM_FILEPATH_CUT USING    G_FILENAME
CHANGING G_REFILENAME.
* ファイルオープン
OPEN DATASET PR_SFILE FOR OUTPUT IN TEXT MODE.
*   ファイルオープンエラーチェック
IF SY-SUBRC <> 0.
MESSAGE S209(Z1).
STOP.
ENDIF.

LOOP AT GT_DOWN INTO GF_DOWN.
*   データ編集
PERFORM FRM_DATA_EDIT.
*   実際にＲ／３：ＡＰサーバーへ転送
TRANSFER GF_FILE_IMAGE TO PR_SFILE.
ENDLOOP.
* ファイルクローズ
CLOSE DATASET PR_SFILE.

ENDIF."------ NO-BATCH = SPACE AND PR_REP = CNS_X

ENDFORM.                    " FRM_LIST_FILE_UP_LOAD
*&---------------------------------------------------------------------*
*&      Form  FRM_SPACE_CUT
*&---------------------------------------------------------------------*
*       スペースをカットする
*----------------------------------------------------------------------*
*      -->P_GF_FILE_IMAGE_FLINE  text
*----------------------------------------------------------------------*
FORM FRM_SPACE_CUT USING    P_GF_FILE_IMAGE_FLINE.

DATA: L_STRING(256) TYPE C,
L_LEN         TYPE P,
L_CHANGE_LEN  TYPE P,
L_LOOP        TYPE P.

* 文字取得
L_STRING = P_GF_FILE_IMAGE_FLINE.
* 文字数取得
L_LEN = STRLEN( L_STRING ).

DO L_LEN TIMES.
IF L_STRING+L_LOOP(1) <> SPACE.
L_CHANGE_LEN = L_LEN - L_LOOP.
P_GF_FILE_IMAGE_FLINE = L_STRING+L_LOOP(L_CHANGE_LEN).
EXIT.
ENDIF.
L_LOOP = L_LOOP + 1.
ENDDO.

ENDFORM.                    " FRM_SPACE_CUT
*&---------------------------------------------------------------------*
*&      Form  FRM_FILEPATH_CUT
*&---------------------------------------------------------------------*
*       パスつきファイル名からパス名を取り除く
*----------------------------------------------------------------------*
FORM FRM_FILEPATH_CUT USING    P_FILENAME
CHANGING P_REFILENAME.
DATA: LEN TYPE I,
L_FILENAME(256) TYPE C.

L_FILENAME = P_FILENAME.

DO 256 TIMES.
LEN = STRLEN( L_FILENAME ).
SEARCH L_FILENAME FOR '\'.
IF SY-SUBRC = 4.
EXIT.
ENDIF.
SY-FDPOS = SY-FDPOS + 1.
L_FILENAME = L_FILENAME+SY-FDPOS(LEN).
ENDDO.

P_REFILENAME = L_FILENAME.

ENDFORM.                    " FRM_FILEPATH_CUT
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_EDIT
*&---------------------------------------------------------------------*
*       ファイルをＡＰサーバーに格納する前のデータを編集する
*----------------------------------------------------------------------*
FORM FRM_DATA_EDIT.

PERFORM FRM_SPACE_CUT USING GF_DOWN-D01.
PERFORM FRM_SPACE_CUT USING GF_DOWN-D02.
PERFORM FRM_SPACE_CUT USING GF_DOWN-D03.

CONCATENATE:
* {MODIFY-----------------------------------------(S.MIKAMI 2005/07/11)
*     GF_DOWN-D01 CNSX_TAB
*     GF_DOWN-D02 CNSX_TAB
GF_DOWN-D01 CNS_COM
GF_DOWN-D02 CNS_COM
*  MODIFY-----------------------------------------(S.MIKAMI 2005/07/11)}
GF_DOWN-D03
INTO GF_FILE_IMAGE-FLINE.

ENDFORM.                    " FRM_DATA_EDIT
*&---------------------------------------------------------------------*
*&      Form  FRM_AFTER_MESSAGE
*&---------------------------------------------------------------------*
*       メッセージ処理
*----------------------------------------------------------------------*
FORM FRM_AFTER_MESSAGE.
* バッチ処理＋ファイル出力時時の完了メッセージ
IF PR_REP = SPACE AND SY-BATCH = CNS_X.
MESSAGE S853(Z1) WITH G_REFILENAME.
* オンライン時＋ファイル出力時のメッセージ
ELSEIF PR_REP = SPACE AND SY-BATCH = SPACE.
*   ファイル名の選定
PERFORM FRM_FILEPATH_CUT USING    G_FILENAME
CHANGING G_REFILENAME.
MESSAGE S859(Z1) WITH G_REFILENAME.
* ファイル出力しないときのメッセージ
ELSE.
MESSAGE S858(Z1).
ENDIF.
ENDFORM.                    " FRM_AFTER_MESSAGE
*&---------------------------------------------------------------------*
*&      Form  FRM_ZERO_CHECK
*&---------------------------------------------------------------------*
*       ０件チェック
*----------------------------------------------------------------------*
FORM FRM_ZERO_CHECK.

DATA:L_CNT_PARMREC(14) TYPE N."GT_PARMのレコード数

DESCRIBE TABLE GT_LIST LINES L_CNT_PARMREC.
* ファイル出力用内部ＴＢＬが0件ならば再ブレイクと判断しない
IF L_CNT_PARMREC <= CNS_INIT_RECNUM.
MESSAGE S204(Z1).
STOP.
ENDIF.

ENDFORM.                    " FRM_ZERO_CHECK
*&---------------------------------------------------------------------*
*&      Form  FRM_AR_CHECKAND
*&---------------------------------------------------------------------*
*       集計後の売掛金が０円の仕入先は対象外とする
*----------------------------------------------------------------------*
FORM FRM_AR_CHECKAND.
DATA:L_TMP_LIFNR LIKE LFA1-LIFNR,
L_WK_DMBTR  LIKE BSEG-DMBTR.

GT_CP_PARMPRO = GT_PARMPRO.
* 仕入先コード＋ソートキーで　昇順ソート
SORT GT_CP_PARMPRO ASCENDING BY LIFNR
ZUONR.

LOOP AT GT_CP_PARMPRO INTO GF_CP_PARMPRO.
AT NEW LIFNR.
L_TMP_LIFNR = GF_CP_PARMPRO-LIFNR.
ENDAT.

IF GF_CP_PARMPRO-HKONT IN S_CRDT."債権勘定に含まれるもの
L_WK_DMBTR = L_WK_DMBTR + GF_CP_PARMPRO-DMBTR.
ENDIF.

AT END OF LIFNR.
IF L_WK_DMBTR = 0 AND L_TMP_LIFNR <> SPACE.
DELETE GT_PARMPRO WHERE LIFNR = L_TMP_LIFNR.
ENDIF.

CLEAR:L_TMP_LIFNR,
L_WK_DMBTR.
ENDAT.
ENDLOOP.

ENDFORM.                    " FRM_AR_CHECKAND
*---APPEND START PSD T.SAITOH 2002/04/22 ---------------------------*
* 支払計＝０かつ差額＜０を対象外に変更
*&---------------------------------------------------------------------*
*&      Form  FRM_OUT_OF_THE_TARGET
*&---------------------------------------------------------------------*
*       対象外データの削除
*----------------------------------------------------------------------*
FORM FRM_OUT_OF_THE_TARGET.

* 対象外番号リスト作成
LOOP AT GT_PARM INTO GF_PARM.
*   最初の３行は無条件CONTINUE
IF SY-TABIX < 4.
CONTINUE.
ENDIF.
*   番号設定し逃亡
IF GF_PARM-F01 <> SPACE.
GF_OUTLIST-NUMBER = GF_PARM-F01.
CONTINUE.
ENDIF.
*   合計行を見つけ比較
IF GF_PARM-F02 = CNS_TOTAL_J.
*     支払計＝０　AND　差額＜０ならば
IF GF_PARM-F09P = 0 AND GF_PARM-F11P < 0.
*       対象外リストに追加
APPEND GF_OUTLIST TO GT_OUTLIST.
ENDIF.
ENDIF.
ENDLOOP.

CLEAR: GF_OUTLIST,
GF_PARM.

LOOP AT GT_PARM INTO GF_PARM.
*   最終レコードは破棄
AT LAST.
EXIT.
ENDAT.
*   最初の３行は無条件CONTINUE
IF SY-TABIX < 4.
APPEND GF_PARM TO LT_PARM.
CONTINUE.
ENDIF.
*   番号取得しリターン値設定
IF GF_PARM-F01 <> SPACE.
READ TABLE GT_OUTLIST INTO GF_OUTLIST
WITH KEY NUMBER = GF_PARM-F01.
L_SUBRC = SY-SUBRC.
*     正規番号書き換え
IF SY-SUBRC <> 0.
L_NUMBER = L_NUMBER + 1.
ENDIF.
ENDIF.
*   リターン値が０なら、対象外のため、APPENDしない
IF L_SUBRC <> 0.
*     新しい番号を設定
IF GF_PARM-F01 <> SPACE.
GF_PARM-F01 = L_NUMBER.
ENDIF.
*     合計行集計
IF GF_PARM-F02 = CNS_TOTAL_J.
PERFORM FRM_COMPUTE_LTOTAL.
ENDIF.
APPEND GF_PARM TO LT_PARM.
ENDIF.
ENDLOOP.
* 総合計行の編集
PERFORM FRM_LTOTAL_EDIT.
* 出力用テーブルに戻す
GT_PARM = LT_PARM.

ENDFORM.                    " FRM_OUTSIDE_OF_THE_TARGET
*---APPEND END   PSD T.SAITOH 2002/04/22 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/04/23 ---------------------------*
* 支払計＝０かつ差額＜０を対象外に変更
*&---------------------------------------------------------------------*
*&      Form  FRM_COMPUTE_LTOTAL
*&---------------------------------------------------------------------*
*       総合計行の再設定
*----------------------------------------------------------------------*
FORM FRM_COMPUTE_LTOTAL.
LF_PARM-F03P = LF_PARM-F03P + GF_PARM-F03P.
LF_PARM-F04P = LF_PARM-F04P + GF_PARM-F04P.
LF_PARM-F05P = LF_PARM-F05P + GF_PARM-F05P.
LF_PARM-F06P = LF_PARM-F06P + GF_PARM-F06P.
LF_PARM-F07P = LF_PARM-F07P + GF_PARM-F07P.
LF_PARM-F08P = LF_PARM-F08P + GF_PARM-F08P.
LF_PARM-F09P = LF_PARM-F09P + GF_PARM-F09P.
LF_PARM-F10P = LF_PARM-F10P + GF_PARM-F10P.
LF_PARM-F11P = LF_PARM-F11P + GF_PARM-F11P.
LF_PARM-F12P = LF_PARM-F12P + GF_PARM-F12P.
ENDFORM.                    " FRM_COMPUTE_LTOTAL
*&---------------------------------------------------------------------*
*&      Form  FRM_LTOTAL_EDIT
*&---------------------------------------------------------------------*
*       総合計行の編集
*----------------------------------------------------------------------*
FORM FRM_LTOTAL_EDIT.
LF_PARM-F02 = CNS_LTOTAL_J.
WRITE LF_PARM-F03P TO LF_PARM-F03.
WRITE LF_PARM-F04P TO LF_PARM-F04.
WRITE LF_PARM-F05P TO LF_PARM-F05.
WRITE LF_PARM-F06P TO LF_PARM-F06.
WRITE LF_PARM-F07P TO LF_PARM-F07.
WRITE LF_PARM-F08P TO LF_PARM-F08.
WRITE LF_PARM-F09P TO LF_PARM-F09.
WRITE LF_PARM-F10P TO LF_PARM-F10.
WRITE LF_PARM-F11P TO LF_PARM-F11.
WRITE LF_PARM-F12P TO LF_PARM-F12.

APPEND LF_PARM TO LT_PARM.

ENDFORM.                    " FRM_LTOTAL_EDIT
*---APPEND END   PSD T.SAITOH 2002/04/23 ---------------------------*
*---APPEND START PSD T.SAITOH 2002/04/23 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_SY_ULINE
*&---------------------------------------------------------------------*
*       下の横線を引く
*----------------------------------------------------------------------*
FORM FRM_SY_ULINE.
WRITE : /1(185) SY-ULINE,
185(1)   SY-VLINE.
ENDFORM.                    " FRM_SY_ULINE
*---APPEND END   PSD T.SAITOH 2002/04/23 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_BSAK_AUGDT
*&---------------------------------------------------------------------*
*       指定月決済された伝票を取得する
*----------------------------------------------------------------------*
FORM FRM_GET_BSAK_AUGDT.

LOOP AT GT_LFA1 INTO GF_LFA1.

SELECT LIFNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
AUGBL
AUGDT
GJAHR
BELNR
BLART "伝票タイプ
FROM BSAK
APPENDING CORRESPONDING FIELDS OF TABLE GT_BSAK_AUGDT
WHERE BUKRS = PR_BUKRS
AND LIFNR = GF_LFA1-LIFNR
AND BUDAT IN S_ZFBDT
AND ( HKONT IN S_DEBT
OR HKONT IN S_CASH
OR HKONT IN S_DEPS
OR HKONT IN S_OFFEO
OR HKONT IN S_DCNT
OR HKONT IN S_ETC )
AND BLART IN S_BLBSEG.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
WHEN OTHERS.
MESSAGE A603(Z1) WITH SY-REPID 'BSAK' SY-SUBRC.
ENDCASE.
ENDLOOP.
ENDFORM.                    " FRM_GET_BSAK_AUGDT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_BSIK
*&---------------------------------------------------------------------*
*       支払手形再集計
*----------------------------------------------------------------------*
FORM FRM_SELECT_BSIK.

CLEAR: GT_BSIK_BILL,GF_BSIK_BILL.

SELECT LIFNR
ZUONR
SHKZG
DMBTR
HKONT
ZFBDT
AUGBL
AUGDT
GJAHR
BELNR
BLART "伝票タイプ
FROM BSIK
APPENDING CORRESPONDING FIELDS OF TABLE GT_BSIK_BILL
WHERE BUKRS = PR_BUKRS
AND LIFNR = GF_PARMPRO-LIFNR
AND UMSKZ = 'W'
AND BUDAT IN S_ZFBDT
AND HKONT IN S_BLPY
AND BLART IN S_BLBSEG.

LOOP AT GT_BSIK_BILL INTO GF_BSIK_BILL.
IF GF_BSIK_BILL-SHKZG = CNS_H.
GF_PKIND-LACCP = GF_PKIND-LACCP + GF_BSIK_BILL-DMBTR * 100.
GF_PARMT-F07   = GF_PARMT-F07   + GF_BSIK_BILL-DMBTR * 100.
ELSE.
GF_PKIND-LACCP = GF_PKIND-LACCP - GF_BSIK_BILL-DMBTR * 100.
GF_PARMT-F07   = GF_PARMT-F07   - GF_BSIK_BILL-DMBTR * 100.
ENDIF.
ENDLOOP.

ENDFORM.                    " FRM_SELECT_BSIK
*&---------------------------------------------------------------------*
*&      Form  FRM_SOUSAI
*&--------------------------------------------------------------------
*　　　　相殺金額集計  2002/10/10
*----------------------------------------------------------------------*
FORM FRM_SOUSAI.
*相殺処理を行った会計伝票の明細を取得する
DATA: G_TAB_BSEG TYPE SORTED TABLE OF TYP_BSXZ
WITH UNIQUE KEY BELNR
GJAHR
BUZEI.
LOOP AT GT_BSEG INTO GF_BSEG
WHERE LIFNR = GF_PARMPRO-LIFNR
AND HKONT IN S_OFFEO    "相殺勘定
.
GF_BSEG2-GJAHR = GF_BSEG-GJAHR.
GF_BSEG2-BELNR = GF_BSEG-BELNR.
GF_BSEG2-BUZEI = GF_BSEG-BUZEI.
GF_BSEG2-LIFNR = GF_BSEG-LIFNR.
GF_BSEG2-KUNNR = GF_BSEG-KUNNR.
GF_BSEG2-ZUONR = GF_BSEG-ZUONR.
GF_BSEG2-SHKZG = GF_BSEG-SHKZG.
GF_BSEG2-DMBTR = GF_BSEG-DMBTR.
GF_BSEG2-HKONT = GF_BSEG-HKONT.
GF_BSEG2-ZFBDT = GF_BSEG-ZFBDT.
GF_BSEG2-AUGBL = GF_BSEG-AUGBL.
GF_BSEG2-AUGDT = GF_BSEG-AUGDT.
GF_BSEG2-BLART = GF_BSEG-BLART.
INSERT GF_BSEG2 INTO TABLE G_TAB_BSEG.
ENDLOOP.
*相殺処理を行った会計伝票の明細を取得する
DATA: G_TAB_BSEG_SOSAI TYPE SORTED TABLE OF TYP_BSXZ
WITH UNIQUE KEY BELNR
GJAHR
BUZEI.
LOOP AT G_TAB_BSEG INTO GF_BSEG2.
SELECT GJAHR BUZEI BELNR SHKZG HKONT DMBTR ZFBDT FROM BSEG
INTO CORRESPONDING FIELDS OF GF_BSEG2
WHERE BUKRS = PR_BUKRS       "会社コード
AND BELNR = GF_BSEG2-BELNR  "伝票番号
AND GJAHR = GF_BSEG2-GJAHR  "会計年度
AND ( HKONT IN S_OFFEO     "相殺勘定
OR HKONT IN S_DEBT )  "買掛勘定
.
INSERT GF_BSEG2 INTO TABLE G_TAB_BSEG_SOSAI.
ENDSELECT.
ENDLOOP.
*相殺金額の集計
*決済会計伝票から勘定コードを判定し相殺金額を求める
*SOUSAI・・・相殺勘定の合計
*YOTEI・・・売掛金勘定の合計
*上記は売掛金の一部相殺を考慮している
G_SOUSAI_1 = 0.
G_YOTEI_1  = 0.
*伝票毎の相殺額を取得
LOOP AT G_TAB_BSEG_SOSAI INTO GF_BSEG2.
AT NEW BELNR.
G_SOUSAI = 0.
G_YOTEI  = 0.
ENDAT.

IF GF_BSEG2-SHKZG = 'H'.
GF_BSEG2-DMBTR = GF_BSEG2-DMBTR * 100.
ELSE.
GF_BSEG2-DMBTR = GF_BSEG2-DMBTR * 100 * -1.
ENDIF.
IF GF_BSEG2-HKONT IN S_OFFEO.
G_SOUSAI = G_SOUSAI + GF_BSEG2-DMBTR.
ENDIF.
IF GF_BSEG2-HKONT IN S_DEBT.
G_YOTEI = G_YOTEI + GF_BSEG2-DMBTR.
ENDIF.

AT END OF BELNR.
G_SOUSAI_1 = G_SOUSAI_1 + G_SOUSAI.
G_YOTEI_1 = G_YOTEI_1 + G_YOTEI.
ENDAT.
ENDLOOP.
*仕入先毎の合計から実相殺額を求める
IF G_SOUSAI_1 < 0.
G_SOUSAI_1 = G_SOUSAI_1 * -1.
ENDIF.
IF G_YOTEI_1 < 0.
G_YOTEI_1  = G_YOTEI_1 * -1.
ENDIF.
IF G_SOUSAI_1 > G_YOTEI_1.
GF_PKIND-OFFSET = GF_PKIND-OFFSET + G_YOTEI_1.
GF_PARMT-F10    = GF_PARMT-F10    + G_YOTEI_1.
ELSE.
GF_PKIND-OFFSET = GF_PKIND-OFFSET + G_SOUSAI_1.
GF_PARMT-F10    = GF_PARMT-F10    + G_SOUSAI_1.
ENDIF.
ENDFORM.
