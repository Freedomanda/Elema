REPORT ZFIWR003
MESSAGE-ID Y1
LINE-SIZE  255
LINE-COUNT  60
NO STANDARD PAGE HEADING.
************************************************************************
*    財務会計システム（ＦＩ)                                           *
*    ﾌﾟﾛｸﾞﾗﾑ ID ：                                                     *
*    ﾌﾟﾛｸﾞﾗﾑ名  ：  得意先取引元帳                                     *
*    処理種別   ： バッチ(ABAP/4)                                      *
*    処理概要   ： ﾊﾞﾘｱﾝﾄにより指定された、得意先ｺｰﾄﾞ・自〜得意先ｺｰﾄﾞ至*
*    より、得意先ﾏｽﾀ（KNA1）を得意先の情報を取得し、得意先毎に伝票番号 *
*    ・自〜伝票番号・至の範囲内のﾚｺｰﾄﾞを、会計：得意先二次ｲﾝﾃﾞｯｸｽ（BSID*
*    ）、得意先二次ｲﾝﾃﾞｯｸｽ（決済明細）（BSAD）より抽出し、得意先ﾏｽﾀ（月*
*    次貸借）（KNC1）、会計伝票明細（BSEG）、転記ｷｰ名（TBSLT）、得意先 *
*    ﾏｽﾀ（会社ｺｰﾄﾞ）（KNB1）、支払条件の説明（T052U）、会計伝票ﾍｯﾀﾞ（BK*
*    PF）より各情報を付加し、売掛金元帳を作成する。                    *
*    但し、得意先ｺｰﾄﾞの指定は任意とし、指定なしの場合は、全件を対象とす*
*    る。伝票日付の指定は月単位で必須とし、指定した範囲が複数月にまたが*
*    る場合はｴﾗｰとする。また、請求伝票に参照伝票が有る場合、そのデータも
*    出力する(売上帳+売掛金元帳のイメージ)                             *
*                                                                      *
*    入力       ： 対象取引先年月日、得意先ｺｰﾄﾞ、言語ｺｰﾄﾞ、会社ｺｰﾄﾞ、  *
*                  勘定ｺｰﾄﾞ、営業所、販売組織、流通チャネル、製品部門  *
*----------------------------------------------------------------------*
*    元プログラム: 売掛金元帳修正版
*----------------------------------------------------------------------*
*    作成日     ： 2000/04/20                                          *
*    作成者     ： 加治佐                                              *
*----------------------------------------------------------------------*
*    更新日     ： 2000/05/01                                          *
*    更新者     ： 加治佐                                              *
*     摘要欄の削除、種別テキストの出力、明細を２行ずつに変更、         *
*     テキスト 1,2,3の出力、品目名称の桁数増加、                       *
*     カテゴリによる数値のマイナス編集、下線ONOFFボタンの追加          *
*----------------------------------------------------------------------*
*    更新日     ： 2000/05/10                                          *
*    更新者     ： 加治佐                                              *
*     国内通貨/伝票通貨の切替え機能の追加                              *
*     国内通貨時のレイアウト変更                                       *
*     伝票通貨時のレイアウト変更                                       *
*     選択画面のレイアウト変更                                         *
*----------------------------------------------------------------------*
*    更新日     ： 2000/05/22                                          *
*    更新者     ： 加治佐                                              *
*     通貨金額作成汎用ﾓｼﾞｭｰﾙの受取を                                   *
*     数値でなく文字列型に修正                                         *
*----------------------------------------------------------------------*
*    更新日     ： 2000/06/01                                          *
*    更新者     ： 加治佐                                              *
*    新規選択項目をラジオボタン化                                      *
*----------------------------------------------------------------------*
*    更新日     ： 2000/06/06                                          *
*    更新者     ： 加治佐                                              *
*    伝票通貨の残高の出力                                              *
*    摘要の出力                                                        *
*    国内通貨残高の値を"前月"から"前日まで"に変更                      *
*----------------------------------------------------------------------*
*    更新日     ： 2000/06/15                                          *
*    更新者     ： 加治佐                                              *
*    パラメータの初期値をユーザ情報から取得                            *
*    更新日     ： 2000/06/26                                          *
*    更新者     ： 加治佐                                              *
*    請求伝票の取得キーを変更(AWKEY)                                   *
*----------------------------------------------------------------------*
*    更新日     ： 2000/07/11                                          *
*    更新者     ： 加治佐                                              *
*    転記キー'09'の明細は残高算出に含まなくする                        *
*----------------------------------------------------------------------*
*    更新日     ： 2000/08/29                                          *
*    更新者     ： 加治佐                                              *
*    明細テキスト1,2,3のヘッダの名称を変更                             *
*----------------------------------------------------------------------*
*& YYYY/MM/DD  Programar         Description
*& 2012/09/13  ISID              ES-UP
************************************************************************
*ﾃｰﾌﾞﾙ定義書
TABLES: BSID,
BSAD,
BSEG,
BKPF,
KNA1,
KNC1,
KNB1,
SKA1,
T001,
T052U,
TBSLT.
*
*2000/04/20 ADD START
TABLES: KNVV,
VBAK,                           "販売伝票: ヘッダデータ
VBAP,                           "販売伝票: 明細データ
VBRK,                           "請求書: ヘッダデータ
T006,                           "数量単位
MAKT,                           "品目テキスト
VBRP.                           "請求伝票: 明細データ

*2000/05/01 ADD START
TABLES: TVAKT.                          "種別テキスト
*2000/05/01 ADD END
*2000/04/20 ADD END
*内部ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF IN_TABLE1 OCCURS 10,
GJAHR  LIKE  BSEG-GJAHR,
BELNR  LIKE  BSID-BELNR,
BUDAT  LIKE  BSID-BUDAT,
BUZEI  LIKE  BSID-BUZEI,
END OF IN_TABLE1.

DATA: BEGIN OF IN_TABLE2 OCCURS 10,
* 2000/04/20 ADD START 通貨コードの追加
WAERS  LIKE  BKPF-WAERS,
* 2000/04/20 ADD END
BUDAT  LIKE  BKPF-BUDAT,
CPUTM  LIKE  BKPF-CPUTM,
BELNR  LIKE  BSEG-BELNR,
BUZEI  LIKE  BSEG-BUZEI,
BSCHL  LIKE  BSEG-BSCHL,
UMSKZ  LIKE  BSEG-UMSKZ,
SHKZG  LIKE  BSEG-SHKZG,
* 2000/01/12 MOD START
*        wrbtr  like  bseg-wrbtr,
* 2000/04/20 MOD STAR
*        DMBTR  LIKE  BSEG-DMBTR,
** 2000/01/12 MOD END
WRBTR  LIKE  BSEG-WRBTR,
* 2000/04/20 MOD END
SGTXT  LIKE  BSEG-SGTXT,
* 2000/04/20 ADD START
AUBEL     LIKE  VBRP-AUBEL,     "販売伝票番号
MATNR     LIKE  VBRP-MATNR,     "品目コード
MAKTX     LIKE  MAKT-MAKTX,     "品目テキスト
FKIMG     LIKE  VBRP-FKIMG,     "数量
NETWR     LIKE  VBRP-NETWR,     "税抜き金額
BSTNK     LIKE  VBAK-BSTNK,     "得意先注番
AUART     LIKE  VBAK-AUART,     "種別
WAERK     LIKE  VBAK-WAERK,     "通貨
TANKA(10) TYPE P DECIMALS 5,    "単価
VRKME     LIKE  VBRP-VRKME,     "販売伝票数量単位
SHFLG(1)  TYPE C,               "請求/販売参照データ有無判定
* 2000/04/20 ADD END
*2000/05/01 ADD START
BEZEI     LIKE  TVAKT-BEZEI,     "種別名称
*       text1(20) type c,                "テキスト1
*       text2(10) type c,                "テキスト2
*       text3(10) type c,                "テキスト3
TEXT1(30) TYPE C,                "テキスト1
TEXT2(30) TYPE C,                "テキスト2
TEXT3(30) TYPE C,                "テキスト3
*2000/05/01 ADD END
END OF IN_TABLE2.
*
*住所編集ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_ADLESS,
STRAS  LIKE  KNA1-STRAS,
ORT01  LIKE  KNA1-ORT01,
END OF T_ADLESS.
*
*支払条件編集ﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_SIHRAI,
WORK1(2) TYPE C,
TEXT1    LIKE T052U-TEXT1,
WORK2(2) TYPE C,
END OF T_SIHRAI.
*
*転記ｷｰﾃｷｽﾄﾃｰﾌﾞﾙ定義
DATA: BEGIN OF T_TENKI OCCURS 10.
INCLUDE STRUCTURE TBSLT.
DATA: END OF T_TENKI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*日付編集用エリアの定義
*DATA: BEGIN OF DATE,
*        NEN(4)     TYPE N,
*        TUKI(2)    TYPE N,
*        HI(2)      TYPE N,
*      END   OF DATE.
*1999/01/07 ADD END
*1999/02/09 DEL END

*2000/05/10 ADD (通貨毎の集計テーブル) START
DATA: BEGIN OF T_SUM OCCURS 0.
DATA: WAERS   LIKE IN_TABLE2-WAERS,
INDEX   LIKE SY-INDEX,
KINGAKU LIKE IN_TABLE2-NETWR.
DATA: END OF T_SUM .
*2000/05/10 ADD END
*
*作業用変数定義
DATA: PAGE_CNT      TYPE I,            "ﾍﾟｰｼﾞｶｳﾝﾀ
LINE_CNT      TYPE I,            "明細行ｶｳﾝﾀ
W_GJAHR LIKE BKPF-GJAHR,         "会計年度格納用
W_MONAT LIKE BKPF-MONAT,         "会計期間格納用
W_SPRAS LIKE T002-SPRAS,         "言語ｺｰﾄﾞ格納用
W_BELNR LIKE BSEG-BELNR,         "比較伝票番号用
W_KTOPL LIKE SKA1-KTOPL,         "勘定ｺｰﾄﾞ表用
W_BUDAT LIKE BKPF-BUDAT,         "転記日付用
*2000/04/20 ADD START
W_ZEISUM(10)  TYPE P DECIMALS 5, "税抜金額集計
*2000/04/20 ADD END
*2000/04/20 MOD START
*     W_KIN         TYPE P,            "伝票通貨額格納用
*     W_KARI        TYPE P,            "借方合計金額計算用
*     W_KASI        TYPE P,            "貸方合計金額計算用
*     W_ZAN         TYPE P,            "残高計算用
*     W_KURI        TYPE P,            "前月繰越額格納用
W_KIN(10)     TYPE P DECIMALS 5, "伝票通貨額格納用
W_KARI(10)    TYPE P DECIMALS 5, "借方合計金額計算用
W_KASI(10)    TYPE P DECIMALS 5, "貸方合計金額計算用
*2000/05/10 MOD START
*      w_zan(10)     type p,            "残高計算用
W_ZAN(10)     TYPE P DECIMALS 5, "残高計算用
*2000/05/10 MOD END
*2000/06/06 MOD START
*      w_kuri(10)    type p,            "前月繰越額格納用
W_KURI(10)    TYPE P DECIMALS 5,  "前月繰越額格納用
*2000/06/06 MOD END
*2000/04/20 MOD END
TEKIYO(30)    TYPE C,            "摘要欄格納用
W_TEXT(8)     TYPE C,            "繰越ﾃｷｽﾄ用
KURI_FLG      TYPE C,            "繰越判断用
BRK_FLG       TYPE C.            "ﾌﾞﾚｲｸ判断用
*1999/02/09 DEL START
*1999/01/07 ADD START
*      W_NEN(4)     TYPE N,
*      W_TUKI(2)    TYPE N,
*      C_NEN(4)     TYPE N,
*      C_TUKI(2)    TYPE N,
*      W_DATE       LIKE SY-DATUM.
*1999/01/07 ADD END
*1999/02/09 DEL END
*2000/04/20 ADD START
DATA:  W_SH_FLG(1) TYPE C,           "請求販売データ有無判定
WK_DEC      TYPE I,           "小数部桁数
W_SEI       TYPE I,             "整数部桁数
W_SYO       LIKE TCURX-CURRDEC, "少数部桁数
W_TUKA   LIKE BKPF-WAERS,        "通貨コード
W_BEZEI     LIKE TVKBT-BEZEI. "営業所テキスト
*2000/04/20 ADD END
*2000/06/06 ADD START
DATA: BEGIN OF T_D_ZAN OCCURS 10, "伝票通貨残高計算テーブル
SHKZG LIKE BSID-SHKZG,
WRBTR LIKE BSID-WRBTR.
DATA: END OF T_D_ZAN.
DATA: W_MIN_DAT LIKE BSID-BUDAT,   "選択範囲の最小日付
W_FST_DAT LIKE BSID-BUDAT,   "選択範囲の最小月の初日
W_KIN3(10)    TYPE P DECIMALS 5. "伝票通貨残高額格納用
*2000/06/06 ADD END

*インクルード文
INCLUDE YF01NUMC.

*2000/04/20 ADD START (マルチバイト編集）
INCLUDE YF01CCUT.
*2000/04/20 ADD END
*
*2000/05/01 ADD START
CONSTANTS : C_ID1 LIKE THEAD-TDID VALUE 'Y901',
C_ID2 LIKE THEAD-TDID VALUE 'Y902',
C_ID3 LIKE THEAD-TDID VALUE 'Y903'.
*2000/05/01 ADD END

************************************************************************
* パラメータ入力画面                                                   *
************************************************************************
*2000/05/10 DEL START
*selection-screen skip 2.
*2000/05/10 DEL END
*2000/05/10 ADD STRAT
SELECTION-SCREEN : BEGIN OF BLOCK FRM1 WITH FRAME.
*2000/05/10 ADD END
*2000/06/15 MOD START
*parameters: p_bukrs like t001-bukrs            "会社ｺｰﾄﾞ
*                              obligatory       "入力必須
*                           default 'C001'."C001ﾃﾞﾌｫﾙﾄ表示(19981225追加)
PARAMETERS: P_BUKRS LIKE T001-BUKRS OBLIGATORY MEMORY ID BUK.
*2000/06/15 MOD END
*2000/05/10 DEL START
*selection-screen skip 1.
*2000/05/10 DEL END
SELECT-OPTIONS: P_DATUM FOR SY-DATUM        "対象年月日
OBLIGATORY.     "入力必須

*2000/05/10 DEL START
*selection-screen skip 1.
*2000/05/10 DEL END
SELECT-OPTIONS: P_KUNNR FOR KNA1-KUNNR         "得意先ｺｰﾄﾞ
MATCHCODE OBJECT DEBI.

*2000/05/10 DEL START
*selection-screen skip 1.
*2000/05/10 DEL END
PARAMETERS: P_SAKNR LIKE SKA1-SAKNR             "勘定ｺｰﾄﾞ
MATCHCODE OBJECT SAKO
OBLIGATORY.      "入力必須
*2000/05/10 DEL START
*selection-screen skip 1.
*2000/05/10 DEL END
*2000/05/10 ADD START
SELECTION-SCREEN : END OF BLOCK FRM1.
SELECTION-SCREEN : BEGIN OF LINE
, POSITION 02.
PARAMETERS : B_KTUKA  RADIOBUTTON GROUP BT1.
SELECTION-SCREEN : COMMENT 05(8) TEXT-Y01
, END OF LINE.                "国内通貨ラジオボタン
SELECTION-SCREEN : BEGIN OF LINE
, POSITION 02.
PARAMETERS : B_DTUKA  RADIOBUTTON GROUP BT1.
SELECTION-SCREEN : COMMENT 05(8) TEXT-Y02,    "取引通貨ラジオボタン
POSITION 15.
SELECTION-SCREEN END OF LINE.
*2000/05/10 ADD END
*2000/04/20 ADD START
SELECT-OPTIONS: P_WAERS FOR BKPF-WAERS         "通貨ｺｰﾄﾞ
NO INTERVALS.
*2000/05/10 DEL START
*selection-screen skip 1.
*2000/05/10 DEL END
*2000/05/10 ADD STRAT
SELECTION-SCREEN : BEGIN OF BLOCK FRM2 WITH FRAME.
*2000/05/10 ADD END

PARAMETERS: P_VKORG LIKE KNVV-VKORG            "販売組織
OBLIGATORY.     "入力必須
*2000/05/10 DEL START
*selection-screen skip 1.
*2000/05/10 DEL END
SELECT-OPTIONS: P_VTWEG FOR KNVV-VTWEG.            "流通チャネル
*2000/05/10 DEL START
*selection-screen skip 1.
*2000/05/10 DEL END
SELECT-OPTIONS: P_VKBUR FOR KNVV-VKBUR.            "営業所
*2000/05/10 DEL START
*selection-screen skip 1.
*2000/05/10 DEL END
SELECT-OPTIONS: P_SPART FOR KNVV-SPART.            "製品部門

*2000/05/10 ADD START
SELECTION-SCREEN : END OF BLOCK FRM2.
*2000/05/10 ADD END

DATA BEGIN OF T_KUNNR OCCURS 0.
*       INCLUDE STRUCTURE P_KUNNR.                     "該当得意先
DATA:      KUNNR LIKE KNVV-KUNNR,
VKBUR LIKE KNVV-VKBUR.
DATA END OF T_KUNNR .
*2000/04/20 ADD END
*2000/05/01 ADD START
*2000/05/10 DEL START
*selection-screen skip 1.
*2000/05/10 DEL END
*2000/06/01 MOD START
*parameters: p_line as checkbox.                    "下線ONOFF
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(08) TEXT-007.
SELECTION-SCREEN POSITION 35.
PARAMETERS: P_LINE RADIOBUTTON GROUP GR02 DEFAULT 'X'."下線表示FLG(ON)
SELECTION-SCREEN COMMENT 37(04) TEXT-008.
SELECTION-SCREEN POSITION 43.
PARAMETERS: P_LINE2 RADIOBUTTON GROUP GR02.
SELECTION-SCREEN COMMENT 45(06) TEXT-009.
SELECTION-SCREEN END   OF LINE.
*2000/06/01 MOD END
*2000/05/01 ADD END

****************************************************************
* 会社ｺｰﾄﾞﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN ON P_BUKRS.

CLEAR T001.

SELECT SINGLE * FROM T001 WHERE BUKRS = P_BUKRS.

IF SY-SUBRC = 0.
W_SPRAS = T001-SPRAS.
ELSE.
MESSAGE E350(F4) WITH P_BUKRS.
STOP.
ENDIF.

*1999/01/07 ADD START
************************************************************************
*         得意先コードの存在チェック                                   *
************************************************************************
AT SELECTION-SCREEN ON P_KUNNR.
CLEAR KNA1.
SELECT * FROM KNA1 WHERE KUNNR IN P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 4.
MESSAGE E153(F2) WITH P_KUNNR-LOW.
STOP.
ENDIF.
*1999/01/07 ADD END
*
****************************************************************
* 勘定ｺｰﾄﾞﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN ON P_SAKNR.

CLEAR SKA1.

SELECT SINGLE * FROM SKA1 WHERE KTOPL = T001-KTOPL
AND   SAKNR = P_SAKNR.

IF SY-SUBRC = 4.
MESSAGE E001(F4) WITH P_SAKNR T001-KTOPL.
STOP.
ENDIF.

*1999/02/09 UPDT START（当該処理復活）
*1999/01/07 DEL START
****************************************************************
* ﾃﾞｰﾀ存在ﾁｪｯｸ                                                 *
****************************************************************
AT SELECTION-SCREEN.
*2000/05/10 ADD START
IF B_KTUKA = 'X'.
CLEAR P_WAERS.
REFRESH P_WAERS.
ENDIF.
*2000/05/10 ADD END
*2000/04/20 ADD START
PERFORM GET_KUNNR. "有効得意先の選定
*2000/04/20 ADD END
*2000/04/20 MOD START
*  SELECT COUNT(*) FROM BSID WHERE BUKRS = P_BUKRS
*                            AND   KUNNR IN P_KUNNR
*                            AND   BUDAT IN P_DATUM
*                            AND   HKONT = P_SAKNR.
SELECT COUNT(*) FROM BSID FOR ALL ENTRIES IN T_KUNNR
WHERE KUNNR = T_KUNNR-KUNNR
AND   BUKRS = P_BUKRS
AND   WAERS IN P_WAERS
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.
*2000/04/20 MOD END
IF SY-SUBRC = 4.
*2000/04/20 MOD START
*    SELECT COUNT(*) FROM BSAD WHERE BUKRS = P_BUKRS
*                              AND   KUNNR IN P_KUNNR
*                              AND   BUDAT IN P_DATUM
*                              AND   HKONT = P_SAKNR.
SELECT COUNT(*) FROM BSAD FOR ALL ENTRIES IN T_KUNNR
WHERE KUNNR = T_KUNNR-KUNNR
AND   BUKRS = P_BUKRS
AND   WAERS IN P_WAERS
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.
*2000/04/20 MOD END
IF SY-SUBRC = 4.
MESSAGE E008(Y1).
STOP.
ENDIF.
ENDIF.
*1999/01/07 DEL END
*1999/02/09 UPDT END
*
****************************************************************
* 主処理                                                       *
****************************************************************
START-OF-SELECTION.

*2000/04/20 ADD START
PERFORM GET_KUNNR. "有効得意先の選定
*2000/04/20 ADD END


*転記ｷｰﾃｷｽﾄの取得
SELECT * FROM TBSLT INTO TABLE T_TENKI
WHERE SPRAS = W_SPRAS.

*2000/04/20 MOD START   "有効得意先でのループ
*  SELECT * FROM KNA1 WHERE KUNNR IN P_KUNNR
*                     AND   LOEVM = SPACE.
LOOP AT T_KUNNR.
SELECT * FROM KNA1 WHERE KUNNR = T_KUNNR-KUNNR
AND   LOEVM = SPACE.
*2000/04/20 MOD END
*初期化
REFRESH: IN_TABLE1,
IN_TABLE2.

CLEAR: PAGE_CNT,
LINE_CNT,
W_BELNR,
W_KIN,
W_KARI,
W_KASI,
W_ZAN,
W_KURI.
*2000/04/20 ADD START
CLEAR W_ZEISUM.
*2000/04/20 ADD END
*該当得意先の存在ﾁｪｯｸ
SELECT COUNT(*) FROM BSID WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
*2000/04/20 ADD START
AND   WAERS IN P_WAERS
*2000/04/20 ADD END
AND   HKONT = P_SAKNR.

IF SY-SUBRC = 4.
SELECT COUNT(*) FROM BSAD WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
AND   BUDAT IN P_DATUM
*2000/04/20 ADD START
AND   WAERS IN P_WAERS
*2000/04/20 ADD END
AND   HKONT = P_SAKNR.
ENDIF.
*主処理
IF SY-SUBRC = 0.
PERFORM DATA_SELECT.
PERFORM PRINT.
ENDIF.
ENDSELECT.
*2000/04/20 ADD START  "有効得意先でのループ
ENDLOOP.
*2000/04/20 ADD END
END-OF-SELECTION.
*--------------------------------------------------------------*
* FORM DATA_SELECT     データ抽出処理                          *
*--------------------------------------------------------------*
FORM DATA_SELECT.

*未決済明細の伝票番号取得、内部ﾃｰﾌﾞﾙ作成
SELECT GJAHR BELNR BUDAT BUZEI
FROM BSID INTO TABLE IN_TABLE1 WHERE BUKRS = P_BUKRS
AND   KUNNR = KNA1-KUNNR
*2000/04/20 ADD START
AND   WAERS IN P_WAERS
*2000/04/20 ADD END
AND   BUDAT IN P_DATUM
AND   HKONT = P_SAKNR.

*決済明細の伝票番号取得、内部テーブル作成
SELECT GJAHR BELNR BUDAT BUZEI
FROM BSAD APPENDING TABLE IN_TABLE1 WHERE BUKRS = P_BUKRS
AND   BUDAT IN P_DATUM
AND   KUNNR = KNA1-KUNNR
*2000/04/20 ADD START
AND   WAERS IN P_WAERS
*2000/04/20 ADD END
AND   HKONT = P_SAKNR.

*  sort in_table2 by budat belnr buzei.
*2000/04/20 ADD START
SORT IN_TABLE1 BY BUDAT BELNR BUZEI.
*2000/04/20 ADD END
*IN_TABLE1より詳細の読込
LOOP AT IN_TABLE1.
SELECT * FROM BSEG WHERE BUKRS = P_BUKRS
AND   GJAHR = IN_TABLE1-GJAHR
AND   BELNR = IN_TABLE1-BELNR
AND   BUZEI = IN_TABLE1-BUZEI.

IF W_BELNR <> IN_TABLE1-BELNR.
SELECT * FROM BKPF WHERE BUKRS = P_BUKRS
AND   GJAHR = IN_TABLE1-GJAHR
AND   BELNR = IN_TABLE1-BELNR.
ENDSELECT.

W_BELNR = IN_TABLE1-BELNR.

ENDIF.
*2000/04/20 ADD START
CLEAR: IN_TABLE2.
PERFORM GET_SEIHAN.           "請求&販売伝票データ取得
IF W_SH_FLG IS INITIAL.
*2000/04/20 ADD END.
*2000/04/20 MOD START               "ITABへの書込みのモジュール化
*        IN_TABLE2-BUDAT = BKPF-BUDAT.
*        IN_TABLE2-CPUTM = BKPF-CPUTM.
*        IN_TABLE2-BELNR = BSEG-BELNR.
*        IN_TABLE2-BUZEI = BSEG-BUZEI.
*        IN_TABLE2-BSCHL = BSEG-BSCHL.
*        IN_TABLE2-UMSKZ = BSEG-UMSKZ.
*        IN_TABLE2-SHKZG = BSEG-SHKZG.
** 2000/01/12 MOD START
**      in_table2-wrbtr = bseg-wrbtr.
*        IN_TABLE2-DMBTR = BSEG-DMBTR.
** 2000/01/12 MOD END
*        IN_TABLE2-SGTXT = BSEG-SGTXT.
*        APPEND IN_TABLE2.
PERFORM ADD_INTABLE.
*2000/04/20 MOD END
*2000/04/20 ADD START
ENDIF.
*2000/04/20 ADD END
ENDSELECT.
ENDLOOP.
*2000/04/20 MOD START
*  SORT IN_TABLE2 BY BUDAT CPUTM BELNR BUZEI.
*2000/05/10 MOD START
* sort in_table2 by waers budat cputm belnr buzei.
IF B_KTUKA ='X'.
SORT IN_TABLE2 BY BUDAT CPUTM BELNR BUZEI AUBEL MATNR.
ELSE.
SORT IN_TABLE2 BY WAERS BUDAT CPUTM BELNR BUZEI AUBEL MATNR.
ENDIF.
*2000/05/10 MOD END
*2000/04/20 MOD END

ENDFORM.
*--------------------------------------------------------------*
* FORM PRINT         出力処理                                  *
*--------------------------------------------------------------*
FORM PRINT.

PAGE_CNT = 1.
LINE_CNT = 0.

CLEAR: W_BUDAT.

PERFORM TOKUISAKI.
*2000/05/01 ADD START
SET BLANK LINES ON."空白行の出力許可
*2000/05/01 ADD END
*1999/02/09 DEL START
*1999/01/07 ADD START
*  C_NEN  = P_DATUM-LOW+0(4).
*  C_TUKI = P_DATUM-LOW+4(2).
*1999/01/07 ADD END
*1999/02/09 DEL END
*2000/05/10 ADD START
CLEAR: T_SUM. "集計要項のクリア
FREE T_SUM.
*2000/05/10 ADD END

*出力編集
LOOP AT IN_TABLE2.

*1999/02/09 DEL START
*1999/01/07 ADD START
*    W_NEN  = IN_TABLE2-BUDAT+0(4).
*    W_TUKI = IN_TABLE2-BUDAT+4(2).
*
*    IF W_NEN  <> C_NEN
*    OR W_TUKI <> C_TUKI.
*      IF SY-TABIX = 1.
*        PERFORM TUKI_GET.
*      ENDIF.
*    ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL START

*関数呼出（会計年度、会計期間）
IF W_BUDAT+0(6) <> IN_TABLE2-BUDAT+0(6).
CALL FUNCTION 'FI_PERIOD_DETERMINE'
EXPORTING
I_BUKRS = P_BUKRS
I_BUDAT = IN_TABLE2-BUDAT
IMPORTING
E_GJAHR = W_GJAHR               "会計年度
E_MONAT = W_MONAT.              "会計期間

IF LINE_CNT <> 0.
KURI_FLG = '1'.
BRK_FLG  = '1'.
ENDIF.
ELSE.
*2000/04/20 MOD START
*      IF LINE_CNT > 74.
*2000/06/06 MOD START
*     if line_cnt > 42.
IF ( LINE_CNT > 40 AND B_KTUKA = 'X' )
OR ( LINE_CNT > 42 AND B_DTUKA = 'X' ).
*2000/06/06 MOD END
*2000/04/20 MOD END
KURI_FLG = '0'.
BRK_FLG  = '1'.
ENDIF.
ENDIF.
AT NEW WAERS.
*2000/05/10 MOD START
*     if line_cnt <> 0.
IF B_KTUKA = 'X'.
W_TUKA = IN_TABLE2-WAERS."2000/05/10 ADD
ENDIF.
IF LINE_CNT <> 0 AND B_DTUKA = 'X'.
*2000/05/10 MOD END
KURI_FLG = '1'.
BRK_FLG  = '1'.
ENDIF.
ENDAT.
IF BRK_FLG = '1' AND LINE_CNT <> 0.
IF KURI_FLG = '1'.
PERFORM FOOTER.
PERFORM GOUKEI.
PAGE_CNT = 1.
*1999/02/09 DEL START
*1999/01/07 ADD START
*        C_TUKI = C_TUKI + 1.
*        IF C_TUKI = '13'.
*          C_NEN  = C_NEN + 1.
*          C_TUKI = 1.
*        ENDIF.
*        IF ( W_NEN > C_NEN )
*        OR ( W_NEN = C_NEN AND W_TUKI > C_TUKI ).
*          PERFORM TUKI_GET.
*        ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL END
ELSE.
PERFORM FOOTER.
PAGE_CNT = PAGE_CNT + 1.
ENDIF.
LINE_CNT = 0.
BRK_FLG  = '0'.
ENDIF.

IF LINE_CNT = 0.
IF PAGE_CNT = 1.
PERFORM KURIKOSI.
W_ZAN = W_KURI.
ENDIF.
PERFORM HEADER.
ENDIF.

PERFORM DATA_EDIT.
PERFORM MEISAI.
*2000/05/01 MOD START
*    LINE_CNT = LINE_CNT + 1.
IF P_LINE = 'X'.
LINE_CNT = LINE_CNT + 3.
ULINE.
ELSE.
LINE_CNT = LINE_CNT + 2.
ENDIF.
*2000/05/01 MOD END
W_BUDAT = IN_TABLE2-BUDAT.

ENDLOOP.

*次月繰越読込
KURI_FLG = '1'.

PERFORM FOOTER.
PERFORM GOUKEI.

*1999/02/09 DEL START
*1999/01/07 ADD START
*  IF P_DATUM-HIGH <> '00000000'.
*    W_NEN  = P_DATUM-HIGH+0(4).
*    W_TUKI = P_DATUM-HIGH+4(2).
*    C_NEN  = IN_TABLE2-BUDAT+0(4).
*    C_TUKI = IN_TABLE2-BUDAT+4(2).
*    IF W_NEN  <> C_NEN
*    OR W_TUKI <> C_TUKI.
*      C_TUKI = C_TUKI + 1.
*      IF C_TUKI = '13'.
*        C_NEN  = C_NEN + 1.
*        C_TUKI = 1.
*      ENDIF.
*
*      IF W_NEN  <> C_NEN
*      OR W_TUKI <> C_TUKI.
*        PERFORM TUKI_GET.
*      ENDIF.
*      PERFORM M_ZERO.
*    ENDIF.
*  ENDIF.
*1999/01/07 ADD END
*1999/02/09 DEL END

ENDFORM.
*--------------------------------------------------------------*
* FORM FOOTER           繰越額出力処理                         *
*--------------------------------------------------------------*
FORM FOOTER.

IF KURI_FLG = '1'.
W_TEXT = '次月繰越'.
ELSE.
W_TEXT = '次頁繰越'.
ENDIF.
*2000/04/20 MOD START
*  ULINE (120).
*  WRITE: /13 W_TEXT.
*  PERFORM YF01NUMC USING W_ZAN 15 0.
*  WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.
*  ULINE (120).
*2000/05/01 MOD START
*  ULINE.
IF P_LINE <> 'X'.
ULINE.
ENDIF.
*2000/05/01 MOD END
*2000/05/01 MOD START
*  WRITE: /22 W_TEXT.
*  PERFORM YF01NUMC USING W_ZAN 19 0.
*  WRITE: 238  O_NUM USING EDIT MASK 'RR________________'.
*2000/06/06 DEL START
**2000/05/10 ADD(IF文のみ) START
* if b_ktuka = 'X'.                                          "2000/05/10
*2000/06/06 DEL END.
WRITE: /11 W_TEXT.
* 2000/06/06 MOD START
*    perform yf01numc using w_zan 19 0.
IF B_KTUKA = 'X'.
W_SEI = 19.
W_SYO = 0.
ELSE.
PERFORM GET_DECIMALS USING W_TUKA.
W_SEI = W_SEI + 1.
ENDIF.
PERFORM YF01NUMC USING W_ZAN W_SEI W_SYO.
* 2000/06/06 MOD END
WRITE: 233  O_NUM USING EDIT MASK 'RR___________________'.
*2000/05/01 MOD END
ULINE.
*2000/04/20 MOD END
*2000/06/06 DEL START
* endif.                                                     "2000/05/10
**2000/05/10 ADD(IF文のみ) END
*2000/06/06 DEL END.
IF KURI_FLG = '1'.
CLEAR: W_ZAN.
ENDIF.

ENDFORM.
*--------------------------------------------------------------*
* FORM GOUKEI         貸方・借方合計額計算処理                 *
*--------------------------------------------------------------*
FORM GOUKEI.
DATA W_T_TEXT(7) TYPE C. "通貨コード括弧付き
*2000/04/20 MOD START
*  PERFORM YF01NUMC USING W_KARI 15 0.
*  WRITE: /064 O_NUM USING EDIT MASK 'RR________________'.
*  PERFORM YF01NUMC USING W_KASI 15 0.
*  WRITE:  084 O_NUM USING EDIT MASK 'RR________________'.
*2000/05/01 MOD START
*  PERFORM YF01NUMC USING W_ZEISUM 19 0.
*  WRITE: /178 O_NUM USING EDIT MASK 'RR________________'.
*  PERFORM GET_DECIMALS.
*  PERFORM YF01NUMC USING W_KARI W_SEI W_SYO.
*  WRITE:  198 O_NUM USING EDIT MASK 'RR________________'.
*  PERFORM GET_DECIMALS.
*  PERFORM YF01NUMC USING W_KASI W_SEI W_SYO.
*  WRITE:  218 O_NUM USING EDIT MASK 'RR________________'.
*  CLEAR W_ZEISUM.
*2000/04/20 MOD END
*2000/05/10 ADD START
PERFORM GET_DECIMALS USING W_TUKA.
W_SEI = W_SEI + 1.
*2000/05/10 ADD END
*2000/05/10 DEL START
*  perform yf01numc using w_zeisum 19 0.
*  write: /167 o_num using edit mask 'RR___________________'.
*2000/05/10 DEL END
*2000/05/10 DEL START
* perform get_decimals using w_tuka.
* w_sei = w_sei + 1.
*2000/05/10 del end
*2000/05/10 ADD START
IF B_KTUKA = 'X'.
W_SEI = 19.
W_SYO = 0.
ENDIF.
*2000/05/10 ADD END
PERFORM YF01NUMC USING W_KARI W_SEI W_SYO.
WRITE:  193 O_NUM USING EDIT MASK 'RR___________________'.
PERFORM YF01NUMC USING W_KASI W_SEI W_SYO.
WRITE:  213 O_NUM USING EDIT MASK 'RR___________________'.
*2000/05/10 ADD START
IF B_KTUKA = 'X'.
LINE_CNT = LINE_CNT + 5.
LOOP AT T_SUM.
IF LINE_CNT > 50.  "通貨合計出力中の改ページ
PAGE_CNT = PAGE_CNT + 1.
PERFORM HEADER.
LINE_CNT = 0.
ENDIF.
CONCATENATE '(' T_SUM-WAERS ')' INTO W_T_TEXT.
PERFORM GET_DECIMALS USING T_SUM-WAERS.
W_SEI = W_SEI + 1.
PERFORM YF01NUMC USING T_SUM-KINGAKU W_SEI W_SYO.
WRITE: 167 O_NUM USING EDIT MASK 'RR___________________'.
WRITE  187 W_T_TEXT."通貨
WRITE /10 ' '.
LINE_CNT = LINE_CNT + 1.
ENDLOOP.
ELSE.
CONCATENATE '(' W_TUKA ')' INTO W_T_TEXT.
PERFORM YF01NUMC USING W_ZEISUM W_SEI W_SYO.
WRITE: 167 O_NUM USING EDIT MASK 'RR___________________'.
WRITE  187 W_T_TEXT."通貨
ENDIF.
CLEAR: T_SUM. "集計要項のクリア
FREE T_SUM.
*2000/05/10 ADD END
*2000/05/01 MOD END
CLEAR W_ZEISUM.
CLEAR: W_KARI,
W_KASI.

ENDFORM.
*--------------------------------------------------------------*
* FORM KURIKOSI        前月繰越抽出処理                        *
*--------------------------------------------------------------*
FORM KURIKOSI.
*2000/06/06 ADD START
W_TUKA = IN_TABLE2-WAERS. "ヘッダ通貨の設定
W_MIN_DAT = IN_TABLE2-BUDAT.
W_FST_DAT = IN_TABLE2-BUDAT.
W_FST_DAT+6(2) = '01'.
IF B_KTUKA = 'X'.
*2000/06/06 ADD END
*前月繰越額編集
SELECT SINGLE * FROM KNC1 WHERE KUNNR = KNA1-KUNNR
AND   BUKRS = P_BUKRS
AND   GJAHR = W_GJAHR.
*1999/01/07 ADD START
IF SY-SUBRC = 4.
W_KURI = 0.
ELSE.
*1999/01/07 ADD END

CASE W_MONAT.
WHEN 1.
W_KURI =     KNC1-UMSAV * 100.
WHEN 2.
W_KURI = (   KNC1-UMSAV
+   KNC1-UM01S
-   KNC1-UM01H
) * 100.
WHEN 3.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S )
- ( KNC1-UM01H + KNC1-UM02H )
) * 100.
WHEN 4.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H )
) * 100.
WHEN 5.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H )
) * 100.
WHEN 6.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H )
) * 100.
WHEN 7.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H )
) * 100.
WHEN 8.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H )
) * 100.
WHEN 9.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H )
) * 100.
WHEN 10.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H )
) * 100.
WHEN 11.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S + KNC1-UM10S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H + KNC1-UM10H )
) * 100.
WHEN 12.
W_KURI = (   KNC1-UMSAV
+ ( KNC1-UM01S + KNC1-UM02S + KNC1-UM03S + KNC1-UM04S
+ KNC1-UM05S + KNC1-UM06S + KNC1-UM07S + KNC1-UM08S
+ KNC1-UM09S + KNC1-UM10S + KNC1-UM11S )
- ( KNC1-UM01H + KNC1-UM02H + KNC1-UM03H + KNC1-UM04H
+ KNC1-UM05H + KNC1-UM06H + KNC1-UM07H + KNC1-UM08H
+ KNC1-UM09H + KNC1-UM10H + KNC1-UM11H )
) * 100.
ENDCASE.

ENDIF.
*2000/06/05 "伝票通貨の残高取得 ADD START
PERFORM ADD_ZENJITU.
W_ZAN = W_KURI.
ELSE.
PERFORM GET_D_ZAN.
ENDIF.
*2000/06/05 ADD END

ENDFORM.
*--------------------------------------------------------------*
* FORM HEADER          ヘッダ出力処理                          *
*--------------------------------------------------------------*
FORM HEADER.

NEW-PAGE.

IF PAGE_CNT = 1.
W_TEXT = '前月繰越'.
ELSE.
W_TEXT = '前頁繰越'.
W_KURI = W_ZAN.
ENDIF.

*ﾍｯﾀﾞ出力
*2000/04/20 MOD START
*  WRITE: /110 'ページ',
*          117(3) PAGE_CNT USING EDIT MASK 'RR___'.
*
*  WRITE: /008 W_GJAHR,
*          012 '年度',
*          050 '売  掛  金  元  帳',
*          088 '作成年月日',
*          098 SY-DATUM+0(4) NO-ZERO,
*          102 '年',
*          104 SY-DATUM+4(2) NO-ZERO,
*          106 '月',
*          108 SY-DATUM+6(2) NO-ZERO,
*          110 '日',
*          115 SY-UZEIT USING EDIT MASK '__:__',
*         /113 '単位:円',
**1999/01/08 ADD START（対象年月日・自〜至の表示）
*         /42  '（',
*          44  P_DATUM-LOW+0(4) NO-ZERO,
*          48  '年',
*          50  P_DATUM-LOW+4(2) NO-ZERO,
*          52  '月',
*          54  P_DATUM-LOW+6(2) NO-ZERO,
*          56  '日',
*          58  '〜'.
*  IF P_DATUM-HIGH <> '00000000'.
*   WRITE: 60  P_DATUM-HIGH+0(4) NO-ZERO,
*          64  '年',
*          66  P_DATUM-HIGH+4(2) NO-ZERO,
*          68  '月',
*          70  P_DATUM-HIGH+6(2) NO-ZERO,
*          72  '日'.
*  ELSE.
*   WRITE: 60  P_DATUM-LOW+0(4) NO-ZERO,
*          64  '年',
*          66  P_DATUM-LOW+4(2) NO-ZERO,
*          68  '月',
*          70  P_DATUM-LOW+6(2) NO-ZERO,
*          72  '日'.
*  ENDIF.
*  WRITE:  74  '）'.
**1999/01/08 ADD END
*  WRITE: /002 KNA1-KUNNR,
*          012 KNA1-NAME1.
*
*  WRITE: /002 T_ADLESS.
*
*  WRITE: /002 KNA1-ORT02,
**1999/1/19 UPDT START
**         085(34) T_SIHRAI
**               USING EDIT MASK 'RR_________________________________'.
*          066 T_SIHRAI
*                USING EDIT MASK
*     'RR______________________________________________________'.
*                                             "支払条件出力
**1999/1/19 UPDT END
*  ULINE (120).
*
**明細ﾍｯﾀﾞ出力
*  WRITE: /002 '日付',
*          025 '摘  要',
*          049 '元帳照合',
*          068 '借  方',
*          088 '貸  方',
*          110 '残  高'.
*  ULINE (120).
*
*  WRITE: /013 W_TEXT.
*  PERFORM YF01NUMC USING W_KURI 15 0.
*  WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.
*
PERFORM NEW_PAGE_HEADER. "新レイアウトのヘッダ
*2000/04/20 END.
ENDFORM.
*--------------------------------------------------------------*
* FORM MEISAI          明細出力処理                            *
*--------------------------------------------------------------*
FORM MEISAI.
*2000/04/20 MOD START
**内部ﾃｰﾌﾞﾙ２表示
*    WRITE: /002(5) IN_TABLE2-BUDAT+4(4) USING EDIT MASK '__.__',
*            013    TEKIYO,
*            048    IN_TABLE2-BELNR.
*
**貸方・借方合計額計算
*    PERFORM YF01NUMC USING W_KIN 13 0.
*    CASE IN_TABLE2-SHKZG.
*      WHEN 'S'.
*        WRITE: 064 O_NUM USING EDIT MASK 'RR________________' .
*      WHEN'H'.
*        WRITE: 084  O_NUM USING EDIT MASK 'RR________________'.
*    ENDCASE.
*    PERFORM YF01NUMC USING W_ZAN 15 0.
*    WRITE: 104  O_NUM USING EDIT MASK 'RR________________'.
WRITE: /002(5) IN_TABLE2-BUDAT+4(4) USING EDIT MASK '__.__', "日付
011    IN_TABLE2-BELNR,     "会計伝票No
*2000/05/01 MOD START
*            022    TEKIYO,              "摘要
*            053    IN_TABLE2-AUBEL,     "販売伝票No
*            066    IN_TABLE2-BSTNK,     "得意先注番
*            087    IN_TABLE2-AUART,     "種別
*            092    IN_TABLE2-MATNR.     "品目コード
*  PERFORM MULTI_BYTE_STR USING:
*                IN_TABLE2-MAKTX '111' '20'.   "商品名称
*
*  IF NOT IN_TABLE2-SHFLG IS INITIAL.               "請求/販売データ有無
*    PERFORM GET_DEC_S USING IN_TABLE2-VRKME.
*    PERFORM YF01NUMC USING IN_TABLE2-FKIMG 15 WK_DEC. "数量
*    WRITE: 132  O_NUM USING EDIT MASK 'RR________________'.
*
*    PERFORM GET_DEC_T USING IN_TABLE2-WAERK.
*    PERFORM YF01NUMC USING IN_TABLE2-TANKA 15 WK_DEC. "単価
*    WRITE: 152  O_NUM USING EDIT MASK 'RR________________'.
*
*    PERFORM YF01NUMC USING IN_TABLE2-NETWR 18 0. "税抜金額
*    WRITE: 178  O_NUM USING EDIT MASK 'RR________________'.
*
*  ENDIF.
*  IF IN_TABLE2-SHFLG = 'W'.
*  ELSE.
*    PERFORM GET_DECIMALS.
*    PERFORM YF01NUMC USING W_KIN W_SEI W_SYO.    "貸借方
*    CASE IN_TABLE2-SHKZG.
*      WHEN 'S'.
*        WRITE: 198 O_NUM USING EDIT MASK 'RR________________' .
*      WHEN'H'.
*        WRITE: 218  O_NUM USING EDIT MASK 'RR________________'.
*    ENDCASE.
*  ENDIF.
*  PERFORM YF01NUMC USING W_ZAN 18 0.          "残高
*  WRITE: 238  O_NUM USING EDIT MASK 'RR________________'.
**  WRITE  171    IN_TABLE2-WAERK.              "通貨
**2000/04/20 MOD END
023    IN_TABLE2-AUBEL,     "販売伝票No
035    IN_TABLE2-BSTNK,     "得意先注番
057    IN_TABLE2-AUART,     "種別
073    IN_TABLE2-MATNR.     "品目コード
PERFORM MULTI_BYTE_STR USING:
IN_TABLE2-MAKTX '93' '40',   "商品名称
IN_TABLE2-BEZEI '63' '8'.    "種別名称

IF NOT IN_TABLE2-SHFLG IS INITIAL.               "請求/販売データ有無
PERFORM GET_DEC_S USING IN_TABLE2-VRKME.
PERFORM YF01NUMC USING IN_TABLE2-FKIMG 15 WK_DEC. "数量
WRITE: 134  O_NUM USING EDIT MASK 'RR_______________'.

PERFORM GET_DEC_T USING IN_TABLE2-WAERK.
PERFORM YF01NUMC USING IN_TABLE2-TANKA 15 WK_DEC. "単価
WRITE: 151  O_NUM USING EDIT MASK 'RR_______________'.

*2000/05/10 MOD START
*    perform yf01numc using in_table2-netwr 18 0. "税抜金額
PERFORM GET_DECIMALS USING W_TUKA.
PERFORM YF01NUMC USING IN_TABLE2-NETWR W_SEI W_SYO. "税抜金額
*2000/05/10 MOD end
WRITE: 168  O_NUM USING EDIT MASK 'RR__________________'.
ENDIF.
IF IN_TABLE2-SHFLG = 'W'.                         "同一BSEG2度以上出力
ELSE.
*    perform get_decimals.
PERFORM GET_DECIMALS USING W_TUKA.
*2000/05/10 ADD START
IF B_KTUKA ='X'.      "国内通貨なら小数部は不要
W_SEI = 18.
W_SYO = 0.
ENDIF.
*2000/05/10 ADD END
PERFORM YF01NUMC USING W_KIN W_SEI W_SYO.    "貸借方
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
WRITE: 194 O_NUM USING EDIT MASK 'RR__________________' .
WHEN'H'.
WRITE: 214  O_NUM USING EDIT MASK 'RR__________________'.
ENDCASE.
ENDIF.
*2000/05/10 MOD START
*  perform yf01numc using w_zan 18 0.          "残高
IF B_KTUKA = 'X'.
PERFORM YF01NUMC USING W_ZAN 18 0.          "残高(国内通貨)
ELSE.
PERFORM YF01NUMC USING W_ZAN W_SEI W_SYO.          "残高(伝票通貨)
ENDIF.
*2000/05/10 MOD END
WRITE: 234  O_NUM USING EDIT MASK 'RR__________________'.
*2000/05/10 ADD START
WRITE: 188 IN_TABLE2-WAERS.
*2000/05/10 ADD END

* write:/011  in_table2-text2,
*        023  in_table2-text3,
*        035  in_table2-text1.
WRITE /01 ' '.
*2000/08/29 MOD START
* PERFORM MULTI_BYTE_STR USING: IN_TABLE2-TEXT2 '011' '10',
*                               IN_TABLE2-TEXT3 '023' '10',
*                               IN_TABLE2-TEXT1 '035' '20'.
PERFORM MULTI_BYTE_STR USING: IN_TABLE2-TEXT1 '011' '20',
IN_TABLE2-TEXT2 '033' '10',
IN_TABLE2-TEXT3 '045' '10'.
*2000/08/29 MOD END
*2000/05/01 MOD END
*2000/06/06 ADD START
WRITE  057    TEKIYO.              "摘要
*2000/06/06 ADD END
ENDFORM.
*--------------------------------------------------------------*
* FORM DATA_EDIT         データ編集処理                        *
*--------------------------------------------------------------*
FORM DATA_EDIT.

*摘要編集
IF IN_TABLE2-SGTXT = SPACE.
READ TABLE T_TENKI
WITH KEY SPRAS = W_SPRAS
BSCHL = IN_TABLE2-BSCHL
UMSKZ = IN_TABLE2-UMSKZ.
TEKIYO = T_TENKI-LTEXT.
ELSE.
TEKIYO = IN_TABLE2-SGTXT+0(30).
ENDIF.

*残高計算
* 2000/01/12 MOD START
*2000/04/20 MOD START
**  w_kin = in_table2-wrbtr * 100.
*  W_KIN = IN_TABLE2-DMBTR * 100.
*2000/05/10 MOD START
* perform get_d_tuka.            "通貨コードによる編集(円なら100倍)
W_KIN = IN_TABLE2-WRBTR * 100.
IF B_DTUKA = 'X'.
*2000/06/06 MOD START
*    perform get_d_tuka.            "通貨コードによる編集
CLEAR W_KIN.
PERFORM GET_D_TUKA USING IN_TABLE2-WRBTR IN_TABLE2-WAERS
CHANGING W_KIN.
*2000/06/06 MOD END
ENDIF.
*2000/05/10 MOD END
*2000/04/20 MOD END
* 2000/01/12 MOD END
CASE IN_TABLE2-SHKZG.
WHEN 'S'.
W_ZAN  = W_ZAN  + W_KIN.
W_KARI = W_KARI + W_KIN.
WHEN 'H'.
W_ZAN  = W_ZAN  - W_KIN.
W_KASI = W_KASI + W_KIN.
ENDCASE.
*2000/04/20 ADD START
SELECT SINGLE MAKTX FROM MAKT INTO IN_TABLE2-MAKTX
WHERE MATNR = IN_TABLE2-MATNR
AND SPRAS = 'J'."(品目テキストの取得)
W_ZEISUM  = IN_TABLE2-NETWR + W_ZEISUM.
*2000/04/20 ADD END
*2000/05/10 ADD START
READ TABLE T_SUM WITH KEY WAERS = IN_TABLE2-WAERS.
IF SY-SUBRC <> 0.
T_SUM-WAERS = IN_TABLE2-WAERS.
T_SUM-KINGAKU = IN_TABLE2-NETWR.
T_SUM-INDEX = T_SUM-INDEX + 1.
APPEND T_SUM.
ELSE.
T_SUM-KINGAKU = IN_TABLE2-NETWR + T_SUM-KINGAKU.
MODIFY T_SUM INDEX T_SUM-INDEX.
ENDIF.
*2000/05/10 ADD END
ENDFORM.

*1999/01/07 ADD START
*----------------------------------------------------------------------*
*         得意先情報の取得                                             *
*----------------------------------------------------------------------*
FORM TOKUISAKI.

CLEAR: W_BUDAT,
T_ADLESS,
T_SIHRAI.

*支払条件ｷｰの取得
SELECT * FROM KNB1 WHERE KUNNR = KNA1-KUNNR
AND   BUKRS = P_BUKRS.
ENDSELECT.

*支払条件ﾃｷｽﾄの取得
SELECT * FROM T052U WHERE SPRAS = W_SPRAS
AND   ZTERM = KNB1-ZTERM.
EXIT.
ENDSELECT.

*住所編集
T_ADLESS-STRAS = KNA1-STRAS.
T_ADLESS-ORT01 = KNA1-ORT01.
CONDENSE T_ADLESS NO-GAPS.

*支払条件の編集
IF T052U-TEXT1 = ' '
OR SY-SUBRC = 4.
T_SIHRAI-WORK1 = ' '.
T_SIHRAI-TEXT1 = ' '.
T_SIHRAI-WORK2 = ' '.
ELSE.
T_SIHRAI-WORK1 = '【'.
T_SIHRAI-TEXT1 = T052U-TEXT1.
T_SIHRAI-WORK2 = '】'.
CONDENSE T_SIHRAI NO-GAPS.
ENDIF.

*2000/04/20 ADD START  営業所テキスト取得
CLEAR W_BEZEI.
SELECT SINGLE BEZEI FROM TVKBT INTO W_BEZEI
WHERE SPRAS = 'J'
AND VKBUR = T_KUNNR-VKBUR.
*2000/04/20 ADD  END

ENDFORM.

*1999/02/09 DEL START
*----------------------------------------------------------------------*
*         明細0件の月の抽出                                            *
*----------------------------------------------------------------------*
*FORM TUKI_GET.
*  DO.
*    PERFORM M_ZERO.
*    C_TUKI = C_TUKI + 1.
*    IF C_TUKI = '13'.
*      C_NEN  = C_NEN + 1.
*      C_TUKI = 1.
*    ENDIF.
*    IF W_NEN  = C_NEN
*   AND W_TUKI = C_TUKI.
*      EXIT.
*    ENDIF.
*  ENDDO.
*ENDFORM.
*
*----------------------------------------------------------------------*
*         明細0件の場合の編集                                          *
*----------------------------------------------------------------------*
*FORM M_ZERO.
*  DATE-NEN  = C_NEN.
*  DATE-TUKI = C_TUKI.
*  DATE-HI   = '01'.
*  CONDENSE DATE NO-GAPS.
*
*  W_DATE = DATE.
*
*  PERFORM TOKUISAKI.
*
*  CALL FUNCTION 'FI_PERIOD_DETERMINE'
*     EXPORTING
*          I_BUKRS = P_BUKRS
*          I_BUDAT = W_DATE
*     IMPORTING
*          E_GJAHR = W_GJAHR
*          E_MONAT = W_MONAT.
*
*  PERFORM KURIKOSI.
*  W_ZAN    = W_KURI.
*  PAGE_CNT = 1.
*  PERFORM HEADER.
*
*  SKIP 1.
*  WRITE: /2 C_NEN NO-ZERO,
*            '年',
*            C_TUKI NO-ZERO,
*            '月'.
*  SKIP 1.
*  WRITE: /2 '【該当データなし】'.
*  SKIP 71.
*
*  KURI_FLG = '1'.
*  PERFORM FOOTER.
*  PERFORM GOUKEI.
*
*ENDFORM.
*1999/02/09 DEL END
*1999/01/07 ADD END
*&---------------------------------------------------------------------*
*&      Form  GET_KUNNR2000/04/20 ADD
*&---------------------------------------------------------------------*
*       有効得意先の選定
*----------------------------------------------------------------------*
FORM GET_KUNNR.
DATA WK_P_CNT TYPE I.  "パラメータ'得意先'入力件数
CLEAR: T_KUNNR,WK_P_CNT.
FREE  T_KUNNR.

DESCRIBE TABLE P_KUNNR LINES WK_P_CNT.
IF WK_P_CNT > 0.                     "得意先入力有り
SELECT KUNNR VKBUR FROM KNVV INTO TABLE T_KUNNR
WHERE  VKBUR IN P_VKBUR
AND    VKORG =  P_VKORG
AND    VTWEG IN P_VTWEG
AND    SPART IN P_SPART
AND    KUNNR IN P_KUNNR.
ELSE.                                "得意先入力無し
SELECT KUNNR VKBUR FROM  KNVV INTO TABLE T_KUNNR
WHERE  VKBUR IN P_VKBUR
AND    VKORG =  P_VKORG
AND    VTWEG IN P_VTWEG
AND    SPART IN P_SPART.
ENDIF.
IF  SY-SUBRC <> 0.
MESSAGE E008.
ENDIF.

ENDFORM.                    " GET_KUNNR
*&---------------------------------------------------------------------*
*&      Form  GET_SEIHAN
*&---------------------------------------------------------------------*
*       請求伝票/販売伝票データ取得
*----------------------------------------------------------------------*
FORM GET_SEIHAN.
DATA: WK_NETPR LIKE VBAP-NETPR,    "金額
WK_KPEIN LIKE VBAP-KPEIN,   "数量
WK_F_OUT_FLG(1) TYPE C.      "初回実行フラグ
CLEAR W_SH_FLG.
*2000/06/26 MOD START
* SELECT SINGLE * FROM VBRK WHERE VBELN = BKPF-XBLNR.
SELECT SINGLE * FROM VBRK WHERE VBELN = BKPF-AWKEY.
*2000/06/26 MOD END
CHECK SY-SUBRC = 0.
SELECT * FROM VBRP WHERE VBELN = VBRK-VBELN.
CLEAR: WK_NETPR,WK_KPEIN,IN_TABLE2,VBAK,VBAP.
W_SH_FLG = 'X'.
SELECT SINGLE BSTNK AUART WAERK FROM VBAK
INTO (IN_TABLE2-BSTNK,IN_TABLE2-AUART,IN_TABLE2-WAERK)
WHERE VBELN = VBRP-AUBEL.       "得意先注番 種別 通貨
SELECT SINGLE NETPR KPEIN FROM VBAP INTO (WK_NETPR,WK_KPEIN)
WHERE VBELN = VBRP-AUBEL
AND POSNR = VBRP-AUPOS.
*2000/05/10 MOD START
*   in_table2-tanka = wk_netpr * 100 / wk_kpein. "単価
PERFORM EDIT_KINGAKU USING WK_NETPR BKPF-WAERS.
IF WK_KPEIN <> 0.
IN_TABLE2-TANKA = W_KIN / WK_KPEIN. "単価
ELSE.
MESSAGE A205.
ENDIF.
*2000/05/10 MOD END
IN_TABLE2-AUBEL = VBRP-AUBEL.                "販売伝票番号
IN_TABLE2-MATNR = VBRP-MATNR.                "品目コード
IN_TABLE2-FKIMG = VBRP-FKIMG.                "数量
IN_TABLE2-VRKME = VBRP-VRKME.                "数量単位
*2000/05/10 MOD START
*    in_table2-netwr = vbrp-netwr * 100.          "税抜き金額
PERFORM EDIT_KINGAKU USING VBRP-NETWR BKPF-WAERS.
IN_TABLE2-NETWR = W_KIN.
*2000/05/10 MOD END
*2000/05/01 ADD START
SELECT SINGLE BEZEI INTO IN_TABLE2-BEZEI FROM TVAKT
WHERE SPRAS = 'JA' AND AUART = IN_TABLE2-AUART. "種別名称
PERFORM GET_MTEXT USING C_ID1 CHANGING IN_TABLE2-TEXT1."テキスト1
PERFORM GET_MTEXT USING C_ID2 CHANGING IN_TABLE2-TEXT2."テキスト2
PERFORM GET_MTEXT USING C_ID3 CHANGING IN_TABLE2-TEXT3."テキスト3
IF VBRK-VBTYP = 'O' OR VBRK-VBTYP = 'N'.
IN_TABLE2-FKIMG = IN_TABLE2-FKIMG * -1.
IN_TABLE2-NETWR = IN_TABLE2-NETWR * -1.
ENDIF.
*2000/05/01 ADD END
IF WK_F_OUT_FLG <> 'X'.                      "同一BSEGの金額抑制
PERFORM ADD_INTABLE.                         "in_table2書込み
WK_F_OUT_FLG = 'X'.
ELSE.
IN_TABLE2-WAERS = BKPF-WAERS.
IN_TABLE2-BUDAT = BKPF-BUDAT.
IN_TABLE2-CPUTM = BKPF-CPUTM.
IN_TABLE2-BELNR = BSEG-BELNR.
IN_TABLE2-BUZEI = BSEG-BUZEI.
IN_TABLE2-BSCHL = BSEG-BSCHL.
IN_TABLE2-UMSKZ = BSEG-UMSKZ.
IN_TABLE2-SHKZG = BSEG-SHKZG.
IN_TABLE2-SGTXT = BSEG-SGTXT.
IN_TABLE2-SHFLG = 'W'.                      "同一BSEG2度以上出力
APPEND IN_TABLE2.
ENDIF.
ENDSELECT.

ENDFORM.                    " GET_SEIHAN

*&---------------------------------------------------------------------*
*&      Form  ADD_INTABLE
*&---------------------------------------------------------------------*
*       内部テーブル2への書込み
*----------------------------------------------------------------------*
FORM ADD_INTABLE.

IN_TABLE2-WAERS = BKPF-WAERS.
IN_TABLE2-BUDAT = BKPF-BUDAT.
IN_TABLE2-CPUTM = BKPF-CPUTM.
IN_TABLE2-BELNR = BSEG-BELNR.
IN_TABLE2-BUZEI = BSEG-BUZEI.
IN_TABLE2-BSCHL = BSEG-BSCHL.
IN_TABLE2-UMSKZ = BSEG-UMSKZ.
IN_TABLE2-SHKZG = BSEG-SHKZG.
*2000/05/10 MOD START
*  in_table2-wrbtr = bseg-wrbtr.
IF B_KTUKA = 'X'.               "国内通貨
IN_TABLE2-WRBTR = BSEG-DMBTR.
ELSE.                           "伝票通貨
IN_TABLE2-WRBTR = BSEG-WRBTR.
ENDIF.
*2000/05/10 MOD END
IN_TABLE2-SGTXT = BSEG-SGTXT.
IN_TABLE2-SHFLG = W_SH_FLG.
APPEND IN_TABLE2.

ENDFORM.                    " ADD_INTABLE
*&---------------------------------------------------------------------*
*&      Form  NEW_PAGE_HEADER
*&---------------------------------------------------------------------*
*       新レイアウトのヘッダ
*----------------------------------------------------------------------*
FORM NEW_PAGE_HEADER.

NEW-PAGE.
IF PAGE_CNT = 1.
W_TEXT = '前月繰越'.
ELSE.
W_TEXT = '前頁繰越'.
W_KURI = W_ZAN.
ENDIF.
*ﾍｯﾀﾞ出力
WRITE: /243 'ページ',
250(3) PAGE_CNT USING EDIT MASK 'RR___'.
WRITE: /007 W_GJAHR,
011 '年度',
117 '得  意  先  元  帳',
221 '作成年月日',
231 SY-DATUM+0(4) NO-ZERO,
235 '年',
237 SY-DATUM+4(2) NO-ZERO,
239 '月',
241 SY-DATUM+6(2) NO-ZERO,
243 '日',
248 SY-UZEIT USING EDIT MASK '__:__'.
WRITE: /002 KNA1-KUNNR,
013 KNA1-NAME1,
110 '(',
111 P_DATUM-LOW+0(4) NO-ZERO,
115 '年',
117 P_DATUM-LOW+4(2) NO-ZERO,
119 '月',
121 P_DATUM-LOW+6(2) NO-ZERO,
123 '日',
125 '〜'.
IF P_DATUM-HIGH <> '00000000'.
WRITE: 127 P_DATUM-HIGH+0(4) NO-ZERO,
131 '年',
133 P_DATUM-HIGH+4(2) NO-ZERO,
135 '月',
137 P_DATUM-HIGH+6(2) NO-ZERO,
139 '日'.
ELSE.
WRITE: 127 P_DATUM-LOW+0(4) NO-ZERO,
131 '年',
133 P_DATUM-LOW+4(2) NO-ZERO,
135 '月',
137 P_DATUM-LOW+6(2) NO-ZERO,
139 '日'.
ENDIF.
WRITE:  141 ')'.
*2000/05/10 DEL START
*          243 '通貨:',
*          248 in_table2-waers
*              using edit mask 'RR_____'.
*2000/05/10 DEL END
W_TUKA = IN_TABLE2-WAERS.
WRITE: /002 T_ADLESS.
WRITE: /002 KNA1-ORT02,
151 T_KUNNR-VKBUR,
156 W_BEZEI,
* Mod ES-UP 2012/09/13 -->
*          199 T_SIHRAI
*                USING EDIT MASK
*     'RR______________________________________________________'.
199(**) T_SIHRAI RIGHT-JUSTIFIED.
* Mod ES-UP 2012/09/13 <--
ULINE.
*明細ﾍｯﾀﾞ出力
*2000/05/01 MOD START
*  WRITE: /002 '売上日付',
*          011 '会計伝票No',
*          022 '摘  要',
*          053 '販売伝票No',
*          066 '得意先注番',
*          087 '種別',
*          092 '品目コード',
*          111 '品目テキスト',
*          132 '数量',
*          152 '単価',
**          171 '通貨',
*          178 '税抜金額',
*          198 '借  方',
*          218 '貸  方',
*          238 '残  高'.
*  ULINE.
*  WRITE: /022 W_TEXT.
*  PERFORM YF01NUMC USING W_KURI 15 0.
*  WRITE: 238  O_NUM USING EDIT MASK 'RR________________'.
WRITE: /002 '売上日付',
011 '会計伝票No',
023 '販売伝票No',
035 '得意先注番',
057 '種別',
063 '種別名称',
073 '品目コード',
093 '品目テキスト',
137 '数量',
154 '単価',
171 '税抜金額',
*2000/05/10 ADD START
188 '通貨',
*2000/05/10 ADD END
197 '借  方',
217 '貸  方'.
*2000/06/06 DEL START
**2000/05/10 MOD START
**          238 '残  高'.
*  if b_ktuka = 'X'.
*2000/06/06 DEL END
WRITE: 237 '残  高'.
*2000/06/06 DEL START
*  endif.
*2000/06/06 DEL END
*2000/05/10 MOD END
*2000/08/29 MOD START
*  WRITE: /011 '社内注番',
*          023 '参照伝票No',
*          035 '備考A.B'.
WRITE: /011 'テキスト1',
033 'テキスト2',
045 'テキスト3'.
*2000/08/29 MOD END
*2000/06/06 ADD START
WRITE: 057 '摘  要'.
*2000/06/06 ADD END
ULINE.
*2000/05/10 伝票通貨ボタンでのIF文追加 START
*2000/06/06 MOD START
* if b_ktuka = 'X' and line_cnt < 42.                        "2000/05/10
IF B_KTUKA = 'X' AND LINE_CNT < 40.                        "2000/05/10
*2000/06/06 MOD END
WRITE: /011 W_TEXT.
PERFORM YF01NUMC USING W_KURI 18 0.
WRITE: 234  O_NUM USING EDIT MASK 'RR__________________'.
IF P_LINE = 'X'.
ULINE.
ENDIF.
ELSE.                                                      "2000/05/10
*2000/06/06 MOD START
*    w_kuri = 0.
*    w_zan = 0.
WRITE: /011 W_TEXT.
PERFORM GET_DECIMALS USING W_TUKA.
PERFORM YF01NUMC USING W_KURI W_SEI W_SYO.
WRITE: 234  O_NUM USING EDIT MASK 'RR__________________'.
IF P_LINE = 'X'.
ULINE.
ENDIF.
*2000/06/06 MOD END
ENDIF.                                                     "2000/05/10
*2000/05/10 IF文追加 END
*2000/05/01 MOD END

ENDFORM.                    " NEW_PAGE_HEADER
*&---------------------------------------------------------------------*
*       マルチバイト文字列編集出力
*----------------------------------------------------------------------*
FORM MULTI_BYTE_STR USING LC_STR
LC_COL
LC_LEN.
*  INCLUDE YF0CCUT.
PERFORM YF01CCUT USING LC_STR LC_LEN.

WRITE AT LC_COL(LC_LEN) OUT_CHAR.

ENDFORM.                               " MULTI_BYTE_STR
*&---------------------------------------------------------------------*
*&      form  GET_DEC_S 2000/04/18 ADD
*&---------------------------------------------------------------------*
*        数量単位からの小数部桁数獲得
*----------------------------------------------------------------------*
*      -P_TANI = 数量単位                                              *
*----------------------------------------------------------------------*
FORM GET_DEC_S USING P_TANI.
CLEAR WK_DEC.
SELECT SINGLE * FROM T006 WHERE MSEHI = P_TANI.
IF SY-SUBRC = 0.
WK_DEC = T006-ANDEC.
ELSE.
WK_DEC = 3.
ENDIF.

ENDFORM.                    " GET_DEC_S
*&---------------------------------------------------------------------*
*&      Form  GET_DEC_T 2000/04/18 ADD
*&---------------------------------------------------------------------*
*       通貨コードからの小数部桁数の取得
*----------------------------------------------------------------------*
*      -P_TUKA = 通貨コード                                            *
*----------------------------------------------------------------------*
FORM GET_DEC_T USING    P_TUKA.
DATA WK_C_TUKA LIKE TCURX-CURRKEY.
DATA WK_C_DEC  LIKE TCURX-CURRDEC.
CLEAR: WK_DEC,WK_C_DEC.
WK_C_TUKA = P_TUKA.
CALL FUNCTION 'FWOS_CURRENCY_DECIMALS_READ'
EXPORTING
I_CURRENCY    = WK_C_TUKA
IMPORTING
E_DECIMALS    = WK_C_DEC
EXCEPTIONS
OTHERS      = 1.
IF SY-SUBRC = 0.
WK_DEC = WK_C_DEC + 2.
ELSE.
WK_DEC = 2.
ENDIF.

ENDFORM.                    " GET_DEC_T
*&---------------------------------------------------------------------*
*&      Form  GET_D_TUKA 2000/04/20 ADD
*&---------------------------------------------------------------------*
*       伝票通貨の通貨コードによる編集
*----------------------------------------------------------------------*
*2000/06/06 MOD START
*FORM GET_D_TUKA.
**2000/05/22 汎用ﾓｼﾞｭｰﾙバグ対応 ADD START
*DATA: W_KIN_C(17)   TYPE C."伝票通貨額格納用
**2000/05 汎用ﾓｼﾞｭｰﾙバグ対応 ADD END
**2000/05/22 MOD START
** w_kin = in_table2-wrbtr.
*  CLEAR W_KIN.
**2000/05/22 MOD END
FORM GET_D_TUKA USING P_KINGAKU P_TUKA CHANGING P_KIN.
DATA: W_KIN_C(17)   TYPE C."伝票通貨額格納用
*2000/06/06 MOD END
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
EXPORTING
*2000/06/06 MOD START
*             currency    = in_table2-waers
*             sap_amount  = in_table2-wrbtr
CURRENCY    = P_TUKA
SAP_AMOUNT  = P_KINGAKU
*2000/06/06 MOD END
IMPORTING
*2000/05/22 MOD START
*             idoc_amount = w_kin
IDOC_AMOUNT = W_KIN_C
*2000/05/22 MOD END
EXCEPTIONS
OTHERS      = 1.
*2000/06/02 MOD START
**2000/05/22
*   w_kin = w_kin_c.
**2000/05/22
P_KIN = W_KIN_C.
*2000/06/02 MOD END


ENDFORM.                    " GET_D_TUKA
*&---------------------------------------------------------------------*
*&      Form  GET_DECIMALS  2000/04/20 ADD
*&---------------------------------------------------------------------*
*       小数部の桁数取得
*----------------------------------------------------------------------*
FORM GET_DECIMALS USING P_TUKA.
CLEAR: W_SEI,W_SYO.
CALL FUNCTION 'FWOS_CURRENCY_DECIMALS_READ'
EXPORTING
I_CURRENCY    = P_TUKA
IMPORTING
E_DECIMALS    = W_SYO
EXCEPTIONS
OTHERS      = 1.
W_SEI = 18 - W_SYO.


ENDFORM.                    " GET_DECIMALS
*&---------------------------------------------------------------------*
*&      Form  GET_MTEXT 2000/05/01 ADD
*&---------------------------------------------------------------------*
*       明細テキストの取得
*----------------------------------------------------------------------*
*      -->P_ID           テキストID                                    *
*      <->P_TEXT         テキスト格納先                                *
*----------------------------------------------------------------------*
FORM GET_MTEXT USING    P_ID
CHANGING P_TEXT.
DATA:W_SPRAS  LIKE THEAD-TDSPRAS VALUE 'J',
W_NAME   LIKE THEAD-TDNAME,
W_OBJ    LIKE THEAD-TDOBJECT VALUE 'VBBP',
W_HEAD LIKE THEAD.
DATA BEGIN OF W_TAB OCCURS 0.
INCLUDE STRUCTURE TLINE.
DATA: END OF W_TAB.
* concatenate vbrp-vbeln vbrp-posnr into w_name.
W_NAME(10) = VBRP-VBELN.
W_NAME+10(6) = VBRP-POSNR.
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID                       = P_ID
LANGUAGE                 = W_SPRAS
NAME                     = W_NAME
OBJECT                   = W_OBJ
IMPORTING
HEADER                   = W_HEAD
TABLES
LINES                 = W_TAB
EXCEPTIONS
ID                       = 1
LANGUAGE                 = 2
NAME                     = 3
NOT_FOUND                = 4
OBJECT                   = 5
REFERENCE_CHECK          = 6
WRONG_ACCESS_TO_ARCHIVE  = 7.
IF SY-SUBRC = 0.
READ TABLE W_TAB INDEX 1.
P_TEXT = W_TAB-TDLINE.
ELSE.
CLEAR  P_TEXT.
ENDIF.
ENDFORM.                    " GET_MTEXT
*&---------------------------------------------------------------------*
*&      Form  EDIT_KINGAKU
*&---------------------------------------------------------------------*
*       各種金額の通貨編集
*----------------------------------------------------------------------*
*      -->P_KINGAKU   編集金額                                         *
*      -->P_TUKA      編集通貨                                         *
*                                                                      *
*----------------------------------------------------------------------*
FORM EDIT_KINGAKU USING  P_KINGAKU P_TUKA.
*2000/05/22 汎用ﾓｼﾞｭｰﾙバグ対応 ADD START
DATA: W_KIN_C(17)   TYPE C."伝票通貨額格納用
*2000/05 汎用ﾓｼﾞｭｰﾙバグ対応 ADD END
CLEAR W_KIN.
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
EXPORTING
CURRENCY    = P_TUKA
SAP_AMOUNT  = P_KINGAKU
IMPORTING
*2000/05/22 MOD START
*             idoc_amount = w_kin
IDOC_AMOUNT = W_KIN_C
*2000/05/22 MOD END
EXCEPTIONS
OTHERS      = 1.
*2000/05/22
W_KIN = W_KIN_C.
*2000/05/22
ENDFORM.                    " EDIT_KINGAKU
*&---------------------------------------------------------------------*
*&      Form  ADD_ZENJITU 2000/06/06 ADD
*&---------------------------------------------------------------------*
*       国内通貨残に当月の初日から第一明細までの値を加算
*----------------------------------------------------------------------*
FORM ADD_ZENJITU.
SELECT SHKZG DMBTR FROM BSID INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND BUDAT < W_MIN_DAT
AND BUDAT >= W_FST_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -100.
ELSE.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * 100.
ENDIF.
W_KURI = W_KURI + T_D_ZAN-WRBTR.
ENDLOOP.

SELECT SHKZG DMBTR FROM BSAD INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND BUDAT < W_MIN_DAT
AND BUDAT >= W_FST_DAT
AND AUGDT => W_MIN_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -1.
ELSE.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * 100.
ENDIF.
W_KURI = W_KURI + T_D_ZAN-WRBTR.
ENDLOOP.

ENDFORM.                    " ADD_ZENJITU

*&---------------------------------------------------------------------*
*&      Form  GET_D_ZAN ADD 2000/06/06
*&---------------------------------------------------------------------*
*       伝票通貨の残高取得
*----------------------------------------------------------------------*
FORM GET_D_ZAN.
CLEAR: W_KURI,W_ZAN.
SELECT SHKZG WRBTR FROM BSID INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND WAERS = IN_TABLE2-WAERS
AND BUDAT < W_MIN_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -1.
ENDIF.
W_KURI = W_KURI + T_D_ZAN-WRBTR.
ENDLOOP.
SELECT SHKZG WRBTR FROM BSAD INTO TABLE T_D_ZAN
WHERE KUNNR = KNA1-KUNNR
AND WAERS = IN_TABLE2-WAERS
AND BUDAT < W_MIN_DAT
AND AUGDT => W_MIN_DAT
*2000/07/11 ADD START
AND BSCHL <> '09'
*2000/07/11 ADD END
AND SAKNR = P_SAKNR.
LOOP AT T_D_ZAN.
IF T_D_ZAN-SHKZG = 'H'.
T_D_ZAN-WRBTR = T_D_ZAN-WRBTR * -1.
ENDIF.
W_KURI = W_KURI + T_D_ZAN-WRBTR.
ENDLOOP.
PERFORM GET_D_TUKA USING W_KURI IN_TABLE2-WAERS CHANGING W_KURI.

ENDFORM.                    " GET_D_ZAN
