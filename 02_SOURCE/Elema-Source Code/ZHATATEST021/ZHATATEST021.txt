REPORT Zhatatest021 MESSAGE-ID Z1 .

* 得意先回答納期一括変更


TABLES : VBAK ,
VBKD .

DATA : BDC_TAB TYPE TABLE OF BDCDATA WITH HEADER LINE ,
IN_DATA(1000) TYPE C ,
BDC_MSG TYPE TABLE OF BDCMSGCOLL WITH HEADER LINE .
*----------------------------------------------------------------------*
* 型定義
*----------------------------------------------------------------------*
TYPES : BEGIN OF TYP_FILE ,
VBELN(10) TYPE C ,          "受注伝票
BSTDK_E(10) TYPE C ,          "得意先回答納期
END OF TYP_FILE ,
BEGIN OF TYP_DATA  ,
VBELN LIKE VBAK-VBELN ,     "仕入先コード
BSTDK_E LIKE VBKD-BSTDK_E ,     "得意先回答納期
END OF TYP_DATA  .
*----------------------------------------------------------------------*
* 変数宣言
*----------------------------------------------------------------------*
DATA :
D_TAB TYPE TABLE OF TYP_DATA ,
D_WRK TYPE TYP_DATA ,
F_TAB TYPE TABLE OF TYP_FILE ,
F_WRK TYPE TYP_FILE .

DATA : W_MEINS(3)   TYPE C,          "発注単位
W_CNT        TYPE I,          "テーブル行数カウンタ
FLG_MEINS(1) TYPE C,          "単位変換フラグ
FLG_WRITE(1) TYPE C.          "WRITEフラグ

DATA : BDC_TRAN LIKE SYST-TCODE VALUE 'VA02' ,
BDC_MODE(1) TYPE C VALUE 'N' .
*      BDC_MODE(1) TYPE C VALUE 'A' .

*----------------------------------------------------------------------*
* 選択画面
*----------------------------------------------------------------------*
PARAMETERS : P_FILE LIKE RLGRAP-FILENAME.
PARAMETERS : P_LOCAL RADIOBUTTON GROUP R_1 , "ローカル
P_SERVE RADIOBUTTON GROUP R_1 . "サーバー
AT SELECTION-SCREEN .

AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
PERFORM WS_FILENAME_GET USING P_FILE.

START-OF-SELECTION .

PERFORM READ_FILE .
PERFORM DATA_GET .
*  PERFORM CHK_ITEM .
LOOP AT F_TAB INTO F_WRK .
READ TABLE D_TAB INTO D_WRK WITH KEY VBELN = F_WRK-VBELN
BINARY SEARCH.
PERFORM BDC_SET .
PERFORM CALL_TRAN .
ENDLOOP .

*----------------------------------------------------------------------*
* ファイルパス取得
*----------------------------------------------------------------------*
FORM WS_FILENAME_GET USING P_FILE.

CALL FUNCTION 'WS_FILENAME_GET'
EXPORTING
DEF_PATH         = 'C:\SAPDATA'
MASK             = '*.*,ALL FILES,*.*.'
MODE             = 'O'
IMPORTING
FILENAME         = P_FILE
EXCEPTIONS
INV_WINSYS       = 1
NO_BATCH         = 2
SELECTION_CANCEL = 3
SELECTION_ERROR  = 4
OTHERS           = 5.


ENDFORM.
*----------------------------------------------------------------------*
* ファイル読み込み
*----------------------------------------------------------------------*
FORM READ_FILE .
DATA : L_LINE(1000) TYPE C .
DATA : W_TAB TYPE X VALUE '09' .
IF P_LOCAL EQ 'X' .
CALL FUNCTION 'WS_UPLOAD'
EXPORTING
FILENAME                = P_FILE
FILETYPE                = 'DAT'
TABLES
DATA_TAB                = F_TAB
EXCEPTIONS
CONVERSION_ERROR        = 1
FILE_OPEN_ERROR         = 2
FILE_READ_ERROR         = 3
INVALID_TYPE            = 4
NO_BATCH                = 5
UNKNOWN_ERROR           = 6
INVALID_TABLE_WIDTH     = 7
GUI_REFUSE_FILETRANSFER = 8
CUSTOMER_ERROR          = 9
OTHERS                  = 10.

*   汎用モジュール失敗時エラーメッセージ出力
IF SY-SUBRC NE 0.
MESSAGE I616 .
STOP .
ELSE.
ENDIF.
ELSE .
OPEN DATASET P_FILE FOR INPUT IN TEXT MODE .
IF SY-SUBRC NE 0 .
MESSAGE I616 .
STOP .
ELSE .
DO .
READ DATASET P_FILE INTO L_LINE .
IF SY-SUBRC NE 0 .
EXIT .
ENDIF .
SPLIT L_LINE AT W_TAB
INTO F_WRK-VBELN
F_WRK-BSTDK_E
.
APPEND F_WRK TO F_TAB .
CLEAR : F_WRK .
ENDDO .
CLOSE DATASET P_FILE .
ENDIF .
ENDIF .

* 取得データ０件時エラーメッセージ出力
CLEAR : W_CNT.
DESCRIBE TABLE F_TAB LINES W_CNT .
IF W_CNT = 0 .
MESSAGE I616 .
STOP .
ELSE.
ENDIF.

* 取得データ変換
LOOP AT F_TAB INTO F_WRK.
PERFORM CONV_ALPHA_IN_SYORI USING F_WRK-VBELN
CHANGING F_WRK-VBELN.
MODIFY F_TAB FROM F_WRK.
ENDLOOP.



ENDFORM .
*----------------------------------------------------------------------*
* 対象データ取得
*----------------------------------------------------------------------*
FORM DATA_GET .

* 変更前データ取得
SELECT VBELN
BSTDK_E
INTO CORRESPONDING FIELDS OF TABLE D_TAB
FROM VBKD
FOR ALL ENTRIES IN F_TAB
WHERE VBELN = F_TAB-VBELN
AND POSNR = '000000'.

* 取得データ０件時エラーメッセージ出力
CLEAR : W_CNT.
DESCRIBE TABLE D_TAB LINES W_CNT .
IF W_CNT = 0 .
MESSAGE I616 .
STOP .
ELSE.
SORT D_TAB BY VBELN.
ENDIF.

ENDFORM .
*----------------------------------------------------------------------*
* BDCテーブルセット
*----------------------------------------------------------------------*
FORM BDC_SET .

CLEAR : W_MEINS.


PERFORM SET_BDC USING :
*     第一画面
'SAPMV45A' '0102' 'X' ,
'BDC_CURSOR' 'VBAK-VBELN' '' ,
'BDC_OKCODE' '/00' '' ,
'VBAK-VBELN' F_WRK-VBELN '' ,
*     第二画面
'SAPMV45A' '4001' 'X' ,
'BDC_OKCODE' '=KBES' '' ,
*     購買発注データ
'SAPMV45A' '4002' 'X' ,
'BDC_OKCODE' '=SICH' '' ,
'BDC_CURSOR' 'VBKD-BSTDK_E' '' ,
'VBKD-BSTDK_E' F_WRK-BSTDK_E '' .

ENDFORM .
*----------------------------------------------------------------------*
* トランザクションコール
*----------------------------------------------------------------------*
FORM CALL_TRAN .

DATA : W_MSG LIKE MESSAGE ,
W_MSGNO LIKE SY-MSGNO .

CALL TRANSACTION BDC_TRAN
USING   BDC_TAB
MODE    BDC_MODE
MESSAGES INTO BDC_MSG
.

LOOP AT BDC_MSG WHERE MSGTYP = 'E' OR MSGTYP = 'A'.
MOVE : BDC_MSG-MSGNR TO W_MSGNO ,
'X'           TO FLG_WRITE.
CALL FUNCTION 'WRITE_MESSAGE'
EXPORTING
MSGID         = BDC_MSG-MSGID
MSGNO         = W_MSGNO
MSGTY         = BDC_MSG-MSGTYP
MSGV1         = BDC_MSG-MSGV1
MSGV2         = BDC_MSG-MSGV2
MSGV3         = BDC_MSG-MSGV3
MSGV4         = BDC_MSG-MSGV4
*         MSGV5         = BDC_MSG-MSGV5
IMPORTING
*         ERROR         =
MESSG         = W_MSG
*         MSGLN         =
.
MESSAGE ID BDC_MSG-MSGID
*            Type BDC_MSG-MSGTYP
TYPE 'S'
NUMBER W_MSGNO
WITH BDC_MSG-MSGV1
BDC_MSG-MSGV2
BDC_MSG-MSGV3
BDC_MSG-MSGV4
.
WRITE : /1 BDC_MSG-MSGTYP,
3 W_MSG-MSGTX .

ENDLOOP .

IF FLG_WRITE IS INITIAL.
PERFORM WRITE_CHANGE_OK.
ENDIF.

ULINE.

CLEAR   : FLG_WRITE.
REFRESH : BDC_TAB , BDC_MSG .
CLEAR   : D_WRK , F_WRK .

ENDFORM .
*----------------------------------------------------------------------*
* BDCセット
*----------------------------------------------------------------------*
FORM SET_BDC USING P_DAT P_VAL P_FLG .
MOVE : P_FLG TO BDC_TAB-DYNBEGIN .
IF P_FLG EQ 'X' .
MOVE : P_DAT TO BDC_TAB-PROGRAM ,
P_VAL TO BDC_TAB-DYNPRO .
ELSE .
MOVE : P_DAT TO BDC_TAB-FNAM ,
P_VAL TO BDC_TAB-FVAL .
ENDIF .
APPEND : BDC_TAB .
CLEAR : BDC_TAB .
ENDFORM .
*----------------------------------------------------------------------*
* 項目チェック
*----------------------------------------------------------------------*
FORM CHK_ITEM.

ENDFORM.
*----------------------------------------------------------------------*
* 前ゼロ埋め変換
*----------------------------------------------------------------------*
FORM CONV_ALPHA_IN_SYORI USING P_IN
CHANGING P_OUT.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
EXPORTING
INPUT  = P_IN
IMPORTING
OUTPUT = P_OUT.

ENDFORM.
*----------------------------------------------------------------------*
* 変更成功メッセージ出力
*----------------------------------------------------------------------*
FORM WRITE_CHANGE_OK.
CLEAR : W_MEINS.

READ TABLE BDC_MSG WITH KEY MSGID = '06' MSGNR = '336'.

IF SY-SUBRC = 0 .
WRITE : / F_WRK-VBELN ,
'は変更されませんでした。'.
EXIT.
ENDIF.


WRITE : / F_WRK-VBELN ,
'の納期が変更されました。'.

WRITE: /  D_WRK-BSTDK_E , '⇒' , F_WRK-BSTDK_E.
ENDFORM.
