*&---------------------------------------------------------------------*
*&  Include           Z_IBM_EXCEL_DOWNLOAD
*&---------------------------------------------------------------------*

CLASS c_oi_errors DEFINITION LOAD.
TYPE-POOLS: soi,
* Start of change by TDEY ----
seop. "Used for Class
* End of change by TDEY ----

DATA control TYPE REF TO i_oi_container_control.
DATA document TYPE REF TO i_oi_document_proxy.
DATA spreadsheet TYPE REF TO i_oi_spreadsheet.
DATA: error TYPE REF TO i_oi_error OCCURS 0 WITH HEADER LINE.
DATA: retcode TYPE soi_ret_string.
DATA: list TYPE soi_document_type_descr_list.
DATA: container TYPE REF TO cl_gui_custom_container.
DATA: fieldtab TYPE soi_fields_table.
DATA: wa_fieldtab TYPE rfc_fields.
DATA: rangelist TYPE soi_range_list.
DATA: rangeitem TYPE soi_range_item.

*&---------------------------------------------------------------------*
*&      Form  INITIALIZE_EXCEL_DOWNLOAD
*&---------------------------------------------------------------------*
*      Initialize Excel Download
*----------------------------------------------------------------------*
FORM initialize_excel_download .

CALL METHOD c_oi_container_control_creator=>get_container_control
IMPORTING
control = control
retcode = retcode.

CREATE OBJECT container
EXPORTING
container_name = 'CONTAINER'.

CALL METHOD control->init_control
EXPORTING
r3_application_name = 'Demo Document Container'
inplace_enabled     = ' '
parent              = container
IMPORTING
retcode             = retcode.

CALL METHOD control->get_document_proxy
EXPORTING
document_type   = 'Excel.Sheet.8'
document_format = 'OLE'
IMPORTING
document_proxy  = document
retcode         = retcode.

ENDFORM.                    " INITIALIZE_EXCEL_DOWNLOAD

*&---------------------------------------------------------------------*
*&      Form  INITIALIZE_SPREADSHEET
*&---------------------------------------------------------------------*
*       Create Excel Spreadsheet
*----------------------------------------------------------------------*
FORM initialize_spreadsheet .

CALL METHOD document->create_document
EXPORTING
create_view_data = 'X'
document_title   = 'Excel Download'
no_flush         = space
open_inplace     = ' '
open_readonly    = ' '
onsave_macro     = ' '
startup_macro    = ' '
IMPORTING
error            = error
retcode          = retcode.

* Handle Errors and throw error message if reqd
PERFORM error_handling.

CALL METHOD document->get_spreadsheet_interface
EXPORTING
no_flush        = space
IMPORTING
error           = error
sheet_interface = spreadsheet
retcode         = retcode.

* Handle Errors and throw error message if reqd
PERFORM error_handling.

ENDFORM.                    " INITIALIZE_SPREADSHEET

*&---------------------------------------------------------------------*
*&      Form  ADD_SHEET
*&---------------------------------------------------------------------*
*       Add Sheet to excel spreadsheet
*----------------------------------------------------------------------*
FORM add_sheet  USING p_sheet_name TYPE char255.

CALL METHOD spreadsheet->add_sheet
EXPORTING
name     = p_sheet_name
no_flush = space
IMPORTING
error    = error
retcode  = retcode.

* Handle Errors and throw error message if reqd
PERFORM error_handling.

ENDFORM.                    " ADD_SHEET

*&-------------------------------------------------------------------*
*&      Form  ADD_RANGE_TO_SHEET
*&-------------------------------------------------------------------*
*       Add range to the worksheet
*--------------------------------------------------------------------*
FORM add_range_to_sheet  USING   p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

CALL METHOD spreadsheet->select_sheet
EXPORTING
name     = p_sheet
no_flush = space
IMPORTING
error    = error
retcode  = retcode.

* Handle Errors and throw error message if reqd
PERFORM error_handling.

CALL METHOD spreadsheet->set_selection
EXPORTING
top      = p_top
left     = 1
rows     = 1
columns  = 1
no_flush = space
IMPORTING
error    = error
retcode  = retcode.

* Handle Errors and throw error message if reqd
PERFORM error_handling.

CALL METHOD spreadsheet->insert_range
EXPORTING
name     = p_range
rows     = p_row
columns  = p_col
no_flush = space
IMPORTING
error    = error
retcode  = retcode.

* Handle Errors and throw error message if reqd
PERFORM error_handling.

CALL METHOD spreadsheet->set_format
EXPORTING
rangename = p_range
typ       = '0'
currency  = ' '
no_flush  = space
IMPORTING
error     = error
retcode   = retcode.

* Handle Errors and throw error message if reqd
PERFORM error_handling.


ENDFORM.                    " ADD_RANGE_TO_SHEET

*&---------------------------------------------------------------------*
*&      Form  ADD_TABLE_TO_RANGE
*&---------------------------------------------------------------------*
*       Add table to the range
*----------------------------------------------------------------------*
FORM add_table_to_range  USING    p_range TYPE char255
p_table TYPE table.

CALL FUNCTION 'DP_GET_FIELDS_FROM_TABLE'
TABLES
data   = p_table
fields = fieldtab.

CALL METHOD spreadsheet->insert_one_table
EXPORTING
data_table   = p_table
fields_table = fieldtab
rangename    = p_range
wholetable   = 'X'
no_flush     = space
IMPORTING
error        = error
retcode      = retcode.

* Handle Errors and throw error message if reqd
PERFORM error_handling.

CALL METHOD spreadsheet->fit_widest
EXPORTING
name     = p_range
no_flush = space
IMPORTING
error    = error
retcode  = retcode.

* Handle Errors and throw error message if reqd
PERFORM error_handling.

ENDFORM.                    " ADD_TABLE_TO_RANGE

*&---------------------------------------------------------------------*
*&      Form  SAVE_EXCEL_SHEET
*&---------------------------------------------------------------------*
*       Promt for saving the excel sheet
*----------------------------------------------------------------------*
FORM save_excel_sheet .

CALL METHOD document->save_as
EXPORTING
no_flush    = space
prompt_user = 'X'
IMPORTING
error       = error
retcode     = retcode.

ENDFORM.                    " SAVE_EXCEL_SHEET

*&---------------------------------------------------------------------*
*&      Form  ERROR_HANDLING
*&---------------------------------------------------------------------*
*       Handle Errors and throw error message if reqd
*----------------------------------------------------------------------*
FORM error_handling .

IF retcode NE c_oi_errors=>ret_ok.

MESSAGE i398 WITH
'Error in downloading data to excel spreadsheet'(148).
LEAVE LIST-PROCESSING.

ENDIF.

ENDFORM.                    " ERROR_HANDLING
*&---------------------------------------------------------------------*
*&      Form  STD_MOD_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM std_mod_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.


DATA:  l_wa_adir_final TYPE x_adir_final.

l_wa_adir_final-object  = 'Obj'(194).
l_wa_adir_final-text    = 'Object Description'(017).
l_wa_adir_final-obj_name = 'Object Name'(018).
l_wa_adir_final-sub_type = 'Sub Ty'(195).
l_wa_adir_final-sub_text = 'Sub Type Description'(083).
l_wa_adir_final-sub_name = 'Sub-Object Name'(241).

INSERT l_wa_adir_final INTO i_adir_final INDEX 1.
CLEAR l_wa_adir_final .

DESCRIBE TABLE i_adir_final LINES l_rows.

l_str_name = 'Std_Modified'(313).
l_cols = 23. "6.
l_range = 'RANGE1'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_adir_final[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING  l_range
i_adir_final.

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R

ENDIF.

DELETE i_adir_final INDEX 1.

ENDFORM.                    " STD_MOD_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  CUSTDEV_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM custdev_xls_dwnd .
DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA: l_wa_custdev_final TYPE x_adir_final.

LOOP AT i_cust_final INTO l_wa_custdev_final.

i_custdev_final-object  = l_wa_custdev_final-object .

i_custdev_final-text    = l_wa_custdev_final-text .

i_custdev_final-obj_name = l_wa_custdev_final-obj_name.
i_custdev_final-devclass = l_wa_custdev_final-devclass.
* Start of change by TDEY ----
i_custdev_final-object_desc    = l_wa_custdev_final-object_desc.
i_custdev_final-devclass_desc  = l_wa_custdev_final-devclass_desc.
i_custdev_final-appl           = l_wa_custdev_final-appl.
i_custdev_final-appl_desc      = l_wa_custdev_final-appl_desc.
i_custdev_final-source_system  = l_wa_custdev_final-source_system.
i_custdev_final-cretd_on       = l_wa_custdev_final-cretd_on.
i_custdev_final-obj_vern       = l_wa_custdev_final-obj_vern.
i_custdev_final-lines_of_code  = l_wa_custdev_final-lines_of_code.
i_custdev_final-release_impact = l_wa_custdev_final-release_impact.
i_custdev_final-unicode_impact = l_wa_custdev_final-unicode_impact.
i_custdev_final-obsolete_count = l_wa_custdev_final-obsolete_count.
** Begin of change ** RKUMAR7 ** 20.10.2009 12:37:51
i_custdev_final-obsolete_count_fm =
l_wa_custdev_final-obsolete_count_fm.
** End of change ** RKUMAR7 ** 20.10.2009 12:37:55
i_custdev_final-last_chngd_by    = l_wa_custdev_final-last_chngd_by.
i_custdev_final-last_chngd_on    = l_wa_custdev_final-last_chngd_on.
i_custdev_final-last_transp      = l_wa_custdev_final-last_transp.
i_custdev_final-last_transp_date =
l_wa_custdev_final-last_transp_date.
* End of change by TDEY ----

** Begin of change ** RKUMAR7 **
i_custdev_final-used = l_wa_custdev_final-used.
** End of change ** RKUMAR7 **
APPEND i_custdev_final.
CLEAR i_custdev_final.
ENDLOOP.

* Start of change by TDEY ----
*  i_custdev_final-object  = 'Obj'(194).
*  i_custdev_final-text    = 'Object Description'(017).
*  i_custdev_final-obj_name = 'Object Name'(018).
*  i_custdev_final-devclass = 'Package'(098).

i_custdev_final-object           = 'ObjTy'(242).
i_custdev_final-text             = 'Object Type Desc'(243).
i_custdev_final-obj_name         = 'Object Name'(018).
i_custdev_final-object_desc      = 'Object Description'(017).
i_custdev_final-devclass         = 'Package'(098).
i_custdev_final-devclass_desc    = 'Package Description'(247).
i_custdev_final-appl             = 'Application'(051).
i_custdev_final-appl_desc        = 'Application Desc'(249).
i_custdev_final-source_system    = 'Source System'(250).
i_custdev_final-obj_vern         = 'Obj Ver'(251).
i_custdev_final-cretd_on         = 'Created on'(213).
i_custdev_final-last_chngd_by    = 'Last Changed by'(253).
i_custdev_final-last_chngd_on    = 'Last Changed on'(254).
i_custdev_final-last_transp      = 'Last Transport'(255).
i_custdev_final-last_transp_date = 'Last Transport Date'(256).
i_custdev_final-lines_of_code    = 'Lines of Code'(257).
i_custdev_final-release_impact   = 'Release Impact(Warning)'(258).
i_custdev_final-unicode_impact   = 'Unicode Impact(Error)'(259).
i_custdev_final-obsolete_count   = 'Obsolete Count(Warning)'(238).
** Begin of change ** RKUMAR7 ** 20.10.2009 12:39:33
i_custdev_final-obsolete_count_fm = 'Obsolete FM Count(Warning)'(081).
** End of change ** RKUMAR7 ** 20.10.2009 12:39:37

** Begin of change ** RKUMAR7 **
i_custdev_final-used     = 'Used'(206).
** End of change ** RKUMAR7 **
INSERT i_custdev_final INDEX 1.
CLEAR i_custdev_final .

DESCRIBE TABLE i_custdev_final  LINES l_rows.

l_str_name = 'Cust_Developments'(314).
* Start of change by TDEY ----
*  l_cols = 4.
l_cols = 21.
* End of change by TDEY ----
l_range = 'RANGE2'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_custdev_final[] IS INITIAL.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_custdev_final[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
*  DELETE i_cust_final INDEX 1.

ENDFORM.                    " custdev_xls_dwnd
*&---------------------------------------------------------------------*
*&      Form  tabl_xls_dwnd
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM tabl_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

DATA: l_wa_tabl_details TYPE zibm_table_structure.

LOOP AT i_tabl_details INTO l_wa_tabl_details .

i_custtabl_details-tabname   =  l_wa_tabl_details-tabname.
i_custtabl_details-fieldname   =  l_wa_tabl_details-fieldname.
i_custtabl_details-is_primary_key =
l_wa_tabl_details-is_primary_key.
i_custtabl_details-dataelement   =  l_wa_tabl_details-dataelement.
i_custtabl_details-checktable	 =  l_wa_tabl_details-checktable.

i_custtabl_details-domname   =  l_wa_tabl_details-domname.

i_custtabl_details-datatype	 =  l_wa_tabl_details-datatype .

i_custtabl_details-length	 =  l_wa_tabl_details-length .

i_custtabl_details-decimals	 =  l_wa_tabl_details-decimals.

i_custtabl_details-fieldtext   =  l_wa_tabl_details-fieldtext.
i_custtabl_details-area   =  l_wa_tabl_details-area.

APPEND i_custtabl_details.
CLEAR i_custtabl_details.

ENDLOOP.

*i_custtabl_details-tabname = 'Table Name'(026).
*i_custtabl_details-fieldname = 'Field Name'(027).
*i_custtabl_details-is_primary_key = 'Key ?'(028).
*i_custtabl_details-dataelement = 'Data Element'(029).
*i_custtabl_details-checktable = 'Check Table '(030).
*i_custtabl_details-domname	 = 'Domain'(031).
*i_custtabl_details-datatype   = 'Data Type'(032).
*i_custtabl_details-length   = 'Length'(033).
*i_custtabl_details-decimals   = 'Decimal Places'(034).
*i_custtabl_details-fieldtext	 = 'Description'(035).
*
*  INSERT i_custtabl_details INDEX 1.
*  CLEAR i_custtabl_details.

DESCRIBE TABLE i_custtabl_details  LINES l_rows.

l_str_name = 'Cust_Table_Details'.
l_cols = 11.
l_range = 'RANGE3'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.


PERFORM custtabl_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.

IF NOT i_custtabl_details[] IS INITIAL.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_custtabl_details[].

ENDIF.

ENDFORM.                    " tabl_xls_dwnd
*&---------------------------------------------------------------------*
*&      Form  VIEW_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM view_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.


DATA: l_wa_tabl_details TYPE zibm_table_structure.

LOOP AT i_view_details INTO l_wa_tabl_details .

i_l_view_details-tabname   =  l_wa_tabl_details-tabname.
i_l_view_details-fieldname   =  l_wa_tabl_details-fieldname.
i_l_view_details-dataelement   =  l_wa_tabl_details-dataelement.
i_l_view_details-domname   =  l_wa_tabl_details-domname.
i_l_view_details-datatype	 =  l_wa_tabl_details-datatype .
i_l_view_details-length	 =  l_wa_tabl_details-length .
i_l_view_details-decimals	 =  l_wa_tabl_details-decimals.
i_l_view_details-fieldtext   =  l_wa_tabl_details-fieldtext.
i_l_view_details-area   =  l_wa_tabl_details-area.
APPEND i_l_view_details.
CLEAR i_l_view_details.

ENDLOOP.

DESCRIBE TABLE i_l_view_details  LINES l_rows.

l_str_name = 'Cust_View_Details'.
l_cols = 9.
l_range = 'RANGE4'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

PERFORM view_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.

IF NOT i_l_view_details[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.

* Add table to the range

PERFORM add_table_to_range USING l_range
i_l_view_details[].

ENDIF.

ENDFORM.                    " VIEW_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  STR_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM str_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

DATA: l_wa_tabl_details TYPE zibm_table_structure.

LOOP AT i_stru_details INTO l_wa_tabl_details .

i_struct_details-tabname   =  l_wa_tabl_details-tabname.
i_struct_details-fieldname   =  l_wa_tabl_details-fieldname.
i_struct_details-dataelement   =  l_wa_tabl_details-dataelement.
i_struct_details-domname   =  l_wa_tabl_details-domname.
i_struct_details-datatype	 =  l_wa_tabl_details-datatype .
i_struct_details-length	 =  l_wa_tabl_details-length .
i_struct_details-decimals	 =  l_wa_tabl_details-decimals.
i_struct_details-fieldtext   =  l_wa_tabl_details-fieldtext.

APPEND i_struct_details.
CLEAR i_struct_details.

ENDLOOP.


DESCRIBE TABLE i_struct_details  LINES l_rows.

l_str_name = 'Cust_Struct_Details'(315).
l_cols = 8.
l_range = 'RANGE5'.
l_top  = 2.
* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

PERFORM str_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.

IF NOT i_struct_details[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_struct_details[].

ENDIF.

ENDFORM.                    " STR_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  SIDX_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM sidx_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA : l_wa_index TYPE x_index.

l_wa_index-indexname = 'Idx'(196).
l_wa_index-ddtext	=	'Descriptions'(316).
l_wa_index-sqltab	=	'Table Name'(317).

INSERT l_wa_index INTO i_std_index INDEX 1.
CLEAR l_wa_index.

DESCRIBE TABLE i_std_index  LINES l_rows.

l_str_name = 'Std_table_index'(318).
l_cols = 3.
l_range = 'RANGE6'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_std_index[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_std_index.

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_std_index INDEX 1.

ENDFORM.                    " SIDX_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  CIDX_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM cidx_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA : l_wa_index TYPE x_index.

l_wa_index-indexname  = 'Idx'(196).
l_wa_index-ddtext	=	'Descriptions'(316).
l_wa_index-sqltab	=	'Table Name'(317).

INSERT l_wa_index INTO i_index INDEX 1.
CLEAR l_wa_index.

DESCRIBE TABLE i_index  LINES l_rows.

l_str_name = 'Cust_table_index'(319).
l_cols = 3.
l_range = 'RANGE7'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_index[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_index.

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_index INDEX 1.

ENDFORM.                    " CIDX_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  QUE_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM que_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA : l_wa_query TYPE aqlqcat.

l_wa_query-mandt 	=	'Clt'(197).
l_wa_query-num  = 'User Group'(320).
l_wa_query-qnum	=	'Query name'(321).
l_wa_query-clas =	'InfoSet'(322).

INSERT l_wa_query INTO i_query INDEX 1.
CLEAR l_wa_query.

DESCRIBE TABLE i_query  LINES l_rows.

l_str_name = 'Cust_Query_Details'(323).
l_cols = 4.
l_range = 'RANGE8'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_query[] IS INITIAL.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_query.

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_query INDEX 1.
ENDFORM.                    " QUE_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  CUS_VAR_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM cus_var_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA : l_wa_cust_varid TYPE x_varid.

l_wa_cust_varid-report = 'Report'(324).
l_wa_cust_varid-variant = 'Variant Name'(325).

INSERT l_wa_cust_varid INTO i_varid  INDEX 1.
CLEAR l_wa_cust_varid.

DESCRIBE TABLE i_varid   LINES l_rows.

l_str_name = 'Cust_Prog Variants'(326).
l_cols = 2.
l_range = 'RANGE9'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_varid[] IS INITIAL.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_varid.

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_varid INDEX 1.

ENDFORM.                    " CUS_VAR_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  STD_VAR_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM std_var_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA : l_wa_std_varid TYPE x_varid.

l_wa_std_varid-report = 'Report'(327).
l_wa_std_varid-variant = 'Variant Name'(328).

INSERT l_wa_std_varid INTO i_std_varid  INDEX 1.
CLEAR l_wa_std_varid.

DESCRIBE TABLE i_std_varid   LINES l_rows.

l_str_name = 'Std_Prog Variants'(329).
l_cols = 2.
l_range = 'RANGE10'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_std_varid[] IS INITIAL.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_std_varid.

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_std_varid INDEX 1.

ENDFORM.                    " STD_VAR_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  AREA_MENU_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM area_menu_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA : l_wa_area TYPE x_area.

l_wa_area-devclass = 'Package'(098).
l_wa_area-id = 'Area Menu Name'(020).

INSERT l_wa_area INTO i_area  INDEX 1.
CLEAR l_wa_area.

DESCRIBE TABLE i_area   LINES l_rows.

l_str_name = 'Cust Area Menus'(330).
l_cols = 2.
l_range = 'RANGE11'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_area[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_area.

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_area INDEX 1.


ENDFORM.                    " AREA_MENU_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  CUST_MSG_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM cust_msg_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA : l_wa_t100 TYPE x_t100.

l_wa_t100-devclass 	=	'Package'(331).
l_wa_t100-arbgb	=	'Message Class'(332).
l_wa_t100-msgnr	=	'Msg No'(333).
l_wa_t100-text =  'Message'(334).

INSERT l_wa_t100 INTO i_t100  INDEX 1.
CLEAR l_wa_t100.

DESCRIBE TABLE i_t100   LINES l_rows.

l_str_name = 'Cust Messages'(335).
l_cols = 4.
l_range = 'RANGE12'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_t100[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.
* Add table to the range
PERFORM add_table_to_range USING l_range
i_t100   .

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_t100 INDEX 1.


ENDFORM.                    " CUST_MSG_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  PRG_APP_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM prg_app_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA : l_wa_prog TYPE x_prog.

l_wa_prog-progname = 'Program Name'(336).
l_wa_prog-appl = 'Application'(337).

INSERT l_wa_prog INTO i_prog  INDEX 1.
CLEAR l_wa_prog.

DESCRIBE TABLE i_prog   LINES l_rows.

l_str_name = 'Progs In Applications'(338).
l_cols = 2.
l_range = 'RANGE13'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_prog[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_prog   .

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_prog INDEX 1.
ENDFORM.                    " PRG_APP_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  FEXIT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fexit_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

i_exit-enh = 'Enh.cmnt'(198).
i_exit-member = 'Enh. Component'(104).
i_exit-proj = 'CMOD Project'(105).
i_exit-dclass = 'Package'(098).

INSERT i_exit INDEX 1.
CLEAR i_exit.

DESCRIBE TABLE i_exit   LINES l_rows.

l_str_name = 'Func_Exit'(339).
l_cols = 4.
l_range = 'RANGE14'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_exit[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_exit[]   .

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_exit INDEX 1.

ENDFORM.                    " FEXIT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  VOFM_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM vofm_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.


DATA: l_wa_vofm TYPE x_vofm.

DESCRIBE TABLE i_vofm   LINES l_rows.

l_str_name = 'VOFM'.
l_cols = 5.
l_range = 'RANGE15'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.


PERFORM vofm_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.

IF NOT i_vofm[] IS INITIAL.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_vofm   .

ENDIF.
*  DELETE i_vofm INDEX 1.

ENDFORM.                    " VOFM_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  BTE_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM bte_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

LOOP AT i_bte.

i_bte_details-event = i_bte-event .
i_bte_details-text1 =   i_bte-text1 .
i_bte_details-stdfb = i_bte-stdfb .

APPEND i_bte_details.
CLEAR i_bte_details.

ENDLOOP.

i_bte_details-event = 'Evnt/Proc '(199).
i_bte_details-text1 = 'Description'(035).
i_bte_details-stdfb = 'Function Module'(090).

INSERT i_bte_details INDEX 1.
CLEAR i_bte_details.

DESCRIBE TABLE i_bte_details   LINES l_rows.

l_str_name = 'BTE_List'(340).
l_cols = 3.
l_range = 'RANGE16'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_bte_details[] IS INITIAL.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_bte_details[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.

ENDFORM.                    " BTE_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  SLS_USR_EXIT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM sls_usr_exit_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA : l_wa_uexit_sd TYPE x_uexit_sd.

l_wa_uexit_sd-obj_name = 'Object Name'(018).
l_wa_uexit_sd-int_name = 'User Exit Name'(130).

INSERT l_wa_uexit_sd INTO i_uexit_sd INDEX 1.
CLEAR l_wa_uexit_sd.

DESCRIBE TABLE i_uexit_sd   LINES l_rows.

l_str_name = 'Sales User Exits'(341).
l_cols = 2.
l_range = 'RANGE17'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_uexit_sd[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_uexit_sd   .

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_uexit_sd INDEX 1.

ENDFORM.                    " SLS_USR_EXIT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  BADI_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM badi_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA l_wa_badi TYPE x_badi.

l_wa_badi-imp_name = 'BADI Implementation'(135).
l_wa_badi-exit_name = 'BADI Definition'(136).
l_wa_badi-devclass = 'Package'(098).

INSERT l_wa_badi  INTO i_badi  INDEX 1.
CLEAR l_wa_badi.

DESCRIBE TABLE i_badi   LINES l_rows.

l_str_name = 'BADI Implementation'(342).
l_cols = 3.
l_range = 'RANGE18'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_badi[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_badi   .

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_badi INDEX 1.

ENDFORM.                    " BADI_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  STD_WKFLW_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM std_wkflw_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

DATA : l_wa_wflow TYPE x_wflow.

*Begin of change by Rudra R
DATA : lwa_worklist TYPE swr_freq,
l_task TYPE sww_task.
*End of change by Rudra R

LOOP AT i_std_wflow INTO l_wa_wflow.

i_l_std_wflow-otype = l_wa_wflow-otype  .
i_l_std_wflow-objid = l_wa_wflow-objid  .
i_l_std_wflow-stext = l_wa_wflow-stext  .

*Begin of change by Rudra R
CONCATENATE i_l_std_wflow-otype i_l_std_wflow-objid
INTO l_task.
*   Go for Binary serach as the table is already sorted
READ TABLE i_worklist_compact INTO lwa_worklist
WITH KEY wi_rh_task = l_task
BINARY SEARCH.
IF sy-subrc = 0.
i_l_std_wflow-count = lwa_worklist-wi_count.
SHIFT i_l_std_wflow-count LEFT DELETING LEADING space.
ELSE.
i_l_std_wflow-count = '0'.
ENDIF.
*End of change by Rudra R
APPEND i_l_std_wflow.
CLEAR i_l_std_wflow.

ENDLOOP.


DESCRIBE TABLE i_l_std_wflow LINES l_rows.

l_str_name = 'Std_Work Flow'(343).
l_cols = 4. "3.
l_range = 'RANGE19'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

PERFORM std_wflow_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.

IF NOT i_l_std_wflow[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_l_std_wflow[]   .

ENDIF.

ENDFORM.                    " STD_WKFLW_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  CUST_WKFLW_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM cust_wkflw_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

DATA : l_wa_wflow TYPE x_wflow.

*Begin of change by Rudra R
DATA : lwa_worklist TYPE swr_freq,
l_task TYPE sww_task.
*End of change by Rudra R

LOOP AT i_wflow INTO l_wa_wflow.

i_cust_wflow-otype = l_wa_wflow-otype .
i_cust_wflow-objid = l_wa_wflow-objid .
i_cust_wflow-stext = l_wa_wflow-stext  .
*Begin of change by Rudra R
CONCATENATE i_cust_wflow-otype i_cust_wflow-objid
INTO l_task.
*   Go for Binary serach as the table is already sorted
READ TABLE i_worklist_compact INTO lwa_worklist
WITH KEY wi_rh_task = l_task
BINARY SEARCH.
IF sy-subrc = 0.
i_cust_wflow-count = lwa_worklist-wi_count.
SHIFT i_cust_wflow-count LEFT DELETING LEADING space.
ELSE.
i_cust_wflow-count = '0'.
ENDIF.
*End of change by Rudra R

APPEND i_cust_wflow.
CLEAR i_cust_wflow.

ENDLOOP.

*Begin of change by Rudra R
FREE : i_wflow.
*End of change by Rudra R

DESCRIBE TABLE i_cust_wflow LINES l_rows.

l_str_name = 'Cust_Work Flow'(344).
l_cols = 4.
l_range = 'RANGE20'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

PERFORM cust_wflow_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.

IF NOT i_cust_wflow[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_cust_wflow[]   .

ENDIF.

ENDFORM.                    " CUST_WKFLW_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  STD_OUTBOUND_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM std_outbound_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

i_ale_std_outbound-mestyp = 'Message Type'(345).
i_ale_std_outbound-idoctyp =  'Basic type'(346).

INSERT i_ale_std_outbound INDEX 1.
CLEAR i_ale_std_outbound.

DESCRIBE TABLE i_ale_std_outbound LINES l_rows.

l_str_name = 'Std ALE Outbound'(347).
l_cols = 2.
l_range = 'RANGE21'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_ale_std_outbound[] IS INITIAL.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_ale_std_outbound[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_ale_std_outbound INDEX 1.


ENDFORM.                    " STD_OUTBOUND_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  CUST_OUTBOUND_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM cust_outbound_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

i_ale_outbound-mestyp = 'Message Type'(184).
i_ale_outbound-idoctyp =  'Basic type'(185).

INSERT i_ale_outbound INDEX 1.
CLEAR i_ale_outbound.

DESCRIBE TABLE i_ale_outbound LINES l_rows.

l_str_name = 'Cust ALE Outbound'(348).
l_cols = 2.
l_range = 'RANGE22'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_ale_outbound[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_ale_outbound[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_ale_outbound INDEX 1.

ENDFORM.                    " CUST_OUTBOUND_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  STD_INBOUND_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM std_inbound_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

i_ale_std_inbound-mestyp = 'Message Type'(349).
i_ale_std_inbound-evcode =  'Inbound process code'(350).
i_ale_std_inbound-funcname = 'Function module'(351).

INSERT i_ale_std_inbound INDEX 1.
CLEAR i_ale_std_inbound.

DESCRIBE TABLE i_ale_std_inbound LINES l_rows.

l_str_name = 'Std ALE Inbound'(352).
l_cols = 3.
l_range = 'RANGE23'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_ale_std_inbound[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_ale_std_inbound[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.
DELETE i_ale_std_inbound INDEX 1.

ENDFORM.                    " STD_INBOUND_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  CUST_INBOUND_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM cust_inbound_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

i_ale_inbound-mestyp = 'Message Type'(184).
i_ale_inbound-evcode =  'Inbound process code'(193).
i_ale_inbound-funcname = 'Function module'(192).

INSERT i_ale_inbound INDEX 1.
CLEAR i_ale_inbound.

DESCRIBE TABLE i_ale_inbound LINES l_rows.

l_str_name = 'Cust ALE Inbound'(353).
l_cols = 3.
l_range = 'RANGE24'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

IF NOT i_ale_inbound[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_ale_inbound[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R

ENDIF.
DELETE i_ale_inbound INDEX 1.


ENDFORM.                    " CUST_INBOUND_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  LSMW_OBJECTS_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM lsmw_objects_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

DESCRIBE TABLE i_lsmw_objects LINES l_rows.

l_str_name = 'LSMW Objects'(354).
l_cols = 19.
l_range = 'RANGE25'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

PERFORM lsmw_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.

IF NOT i_lsmw_objects[] IS INITIAL.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_lsmw_objects[].

ENDIF.
*  DELETE i_lsmw_objects INDEX 1.

ENDFORM.                    " LSMW_OBJECTS_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  SAP_VERSION_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM sap_version_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

DESCRIBE TABLE i_component LINES l_rows.

l_str_name = 'SAP Version Info'(355).
l_cols = 6. "5.
l_range = 'RANGE26'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.


PERFORM sapver_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.
IF NOT i_component[] IS INITIAL.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_component[]   .

ENDIF.
*  DELETE i_component INDEX 1.

ENDFORM.                    " SAP_VERSION_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  LANG_INST_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM lang_inst_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

** Begin of change ** RKUMAR7 ** 29.06.2009 17:12:45
*  DESCRIBE TABLE i_lang_final LINES l_rows.
DESCRIBE TABLE i_spras LINES l_rows.
** End of change ** RKUMAR7 **

l_str_name = 'Languages Installed'(356).
l_cols = 6. "5.
l_range = 'RANGE27'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

PERFORM lang_inst_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.
IF NOT i_lang_final[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.


* Add table to the range
PERFORM add_table_to_range USING l_range
i_lang_final[]   .
ENDIF.
*  DELETE i_lang_final INDEX 1.


ENDFORM.                    " LANG_INST_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  LNDSCP_DET_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM lndscp_det_xls_dwnd .


DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.


DESCRIBE TABLE i_landscape LINES l_rows.

l_str_name = 'Landscape Details'(357).
l_cols = 28.
l_range = 'RANGE28'.
l_top  = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.


PERFORM lndscp_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.

IF NOT i_landscape[] IS INITIAL.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_landscape[].
ENDIF.
*  DELETE i_landscape INDEX 1.

ENDFORM.                    " LNDSCP_DET_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  HWD_PLTF_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM hwd_pltf_xls_dwnd .


DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

*{   REPLACE        TEDK909196                                        1
*\  i_hw_info-descriptor = 'Descriptor '(152).
*\  i_hw_info-value_1 = 'Value '(153).
*  i_hw_info-descriptor = 'Descriptor '(152).
*  i_hw_info-value_1 = 'Value '(153).
*}   REPLACE

*{   REPLACE        TEDK909196                                        2
*\  INSERT i_hw_info INDEX 1.
*\  CLEAR i_hw_info.
*  INSERT i_hw_info INDEX 1.
*  CLEAR i_hw_info.
*}   REPLACE

*{   REPLACE        TEDK909196                                        3
*\  DESCRIBE TABLE i_hw_info LINES l_rows.
*  DESCRIBE TABLE i_hw_info LINES l_rows.
*}   REPLACE

l_str_name = 'Hardware Platform'(358).
l_cols = 2.
l_range = 'RANGE29'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

*{   REPLACE        TEDK909196                                        4
*\  IF NOT i_hw_info[] IS INITIAL.
*\* Add range to the worksheet
*\    PERFORM add_range_to_sheet USING l_str_name
*\                                       l_range
*\                                       l_rows
*\                                       l_cols
*\                                       v_top.
*\
*\* Add table to the range
*\    PERFORM add_table_to_range USING l_range
*\                                     i_hw_info[].
*\****>>>Begin of change by Rudra R
*\*   Add color to first row
*\    PERFORM add_color_to_cells USING  l_range
*\                                      1
*\                                      l_cols.
*\****>>>End of change by Rudra R
*\  ENDIF.
*\  DELETE i_hw_info INDEX 1.
*  IF NOT i_hw_info[] IS INITIAL.
* Add range to the worksheet
*    PERFORM add_range_to_sheet USING l_str_name
*                                       l_range
*                                       l_rows
*                                       l_cols
*                                       v_top.
*
* Add table to the range
*    PERFORM add_table_to_range USING l_range
*                                     i_hw_info[].
****>>>Begin of change by Rudra R
*   Add color to first row
*    PERFORM add_color_to_cells USING  l_range
*                                      1
*                                      l_cols.
****>>>End of change by Rudra
* ENDIF.
*  DELETE i_hw_info INDEX 1.
*}   REPLACE


ENDFORM.                    " HWD_PLTF_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  PRG_STATS_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM prg_stats_xls_dwnd .



DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

LOOP AT i_prog_stat1.

i_prg_stat_detail-ttype = i_prog_stat1-ttype.
i_prg_stat_detail-entry_id = i_prog_stat1-entry_id.
** Begin of change ** RKUMAR7 **
i_prg_stat_detail-count = i_prog_stat1-count.
** End of change ** RKUMAR7 **
APPEND i_prg_stat_detail.
CLEAR i_prg_stat_detail.

ENDLOOP.

i_prg_stat_detail-ttype = 'TYPE '(149).
i_prg_stat_detail-entry_id = 'Name '(151).
** Begin of change ** RKUMAR7 **
i_prg_stat_detail-count = 'Count'(359).
** End of change ** RKUMAR7 **
INSERT i_prg_stat_detail INDEX 1.
CLEAR i_prg_stat_detail.

DESCRIBE TABLE i_prg_stat_detail LINES l_rows.

l_str_name = 'Program Statistics'(360).
l_cols = 3. "2.
l_range = 'RANGE30'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.


*  PERFORM prg_stat_txt_xls_dwnd USING l_str_name
*                                   l_range
*                                   l_rows
*                                   l_cols
*                                   v_top.

IF NOT i_prg_stat_detail[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_prg_stat_detail[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.

ENDFORM.                    " PRG_STATS_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  TRANS_STATS_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM trans_stats_xls_dwnd .


DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

LOOP AT i_tran_stat2.

i_tran_stat_detail-ttype = i_tran_stat2-ttype.
i_tran_stat_detail-entry_id = i_tran_stat2-entry_id.
** Begin of change ** RKUMAR7 **
i_tran_stat_detail-count  = i_tran_stat2-count.
** End of change ** RKUMAR7 **
APPEND i_tran_stat_detail.
CLEAR i_tran_stat_detail.

ENDLOOP.

i_tran_stat_detail-ttype = 'TYPE '(149).
i_tran_stat_detail-entry_id = 'Name '(151).
** Begin of change ** RKUMAR7 **
i_tran_stat_detail-count = 'Count'(361).
** End of change ** RKUMAR7 **
INSERT i_tran_stat_detail INDEX 1.
CLEAR i_tran_stat_detail.

DESCRIBE TABLE i_tran_stat_detail LINES l_rows.

l_str_name = 'Transaction Statistics'(362).
l_cols = 3. "2.
l_range = 'RANGE31'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

*  PERFORM trans_stat_txt_xls_dwnd USING l_str_name
*                                   l_range
*                                   l_rows
*                                   l_cols
*                                   v_top.

IF NOT i_tran_stat_detail[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
i_tran_stat_detail[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDIF.

ENDFORM.                    " TRANS_STATS_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  SUMMARY_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM summary_xls_dwnd USING p_comp TYPE c
p_lang TYPE c
*                           Start of change by TDEY ----
p_user TYPE c
p_server TYPE c
*                           End of change by TDEY ----
p_pghis TYPE c
p_dbhis TYPE c
p_lsmw TYPE c
p_ale TYPE c
p_rfc TYPE c
p_gtway TYPE c
p_bkgrnd TYPE c.

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.

DATA: l_wa_summ TYPE x_summ.
DATA: l_str_stat_count TYPE char10.

DATA: BEGIN OF l_summ OCCURS 0,
line         TYPE char5,
category(60) TYPE c,
number       TYPE char10 ,
END OF l_summ.

l_wa_summ-line = 'No. '(363) .
l_wa_summ-category = 'Category'(364).
l_wa_summ-number = 'Count'(365).

INSERT l_wa_summ INTO i_summ INDEX 1.
CLEAR l_wa_summ.

l_summ[] = i_summ[].
IF v_stat_count > 0.
l_str_stat_count = v_stat_count - 1.
CONDENSE l_str_stat_count.
ELSE.
l_str_stat_count = 0.
CONDENSE l_str_stat_count.
ENDIF.

*  DESCRIBE TABLE l_summ LINES l_rows.
*  sy-tabix = l_rows.
*  CLEAR l_rows.

IF p_ale = c_flag.

DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.

l_summ-line = sy-tabix .
l_summ-category = 'Custom Inbound ALE Interfaces'(366).
DESCRIBE TABLE i_ale_inbound LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.


l_summ-line = sy-tabix .
l_summ-category = 'Standard Inbound ALE Interfaces'(367).
DESCRIBE TABLE i_ale_std_inbound LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

l_summ-line = sy-tabix .
l_summ-category = 'Custom Outbound ALE Interfaces'(368).
DESCRIBE TABLE i_ale_outbound LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

l_summ-line = sy-tabix .
l_summ-category = 'Standard Outbound ALE Interfaces'(369).
DESCRIBE TABLE i_ale_std_outbound LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

ENDIF.

IF p_lsmw = c_flag.

DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.

l_summ-line = sy-tabix .
l_summ-category = 'LSMW Objects'(370).
DESCRIBE TABLE i_lsmw_objects LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

ENDIF.

IF p_comp = c_flag.

DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.

l_summ-line = sy-tabix .
l_summ-category = 'SAP Version Information'(371).
l_summ-number = cvers_txt-stext.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

ENDIF.
* Begin of change ** RKUMAR7 **
IF p_rfc  = c_flag.

DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.

l_summ-line = sy-tabix .
l_summ-category = 'RFC Connection'(372).
DESCRIBE TABLE i_rfcattrib LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

ENDIF.

IF p_gtway = c_flag.

DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.

l_summ-line = sy-tabix .
l_summ-category = 'Gateway Connection (Active)'(373).

DESCRIBE TABLE i_gwconn LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.
ENDIF.

IF p_bkgrnd = c_flag.

DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.

l_summ-line = sy-tabix .
l_summ-category = 'Scheduled Jobs'(374).

DESCRIBE TABLE i_backgrnd LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.
ENDIF.

** End of change ** RKUMAR7 **

IF p_lang = c_flag.

DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.

l_summ-line = sy-tabix .
l_summ-category = 'No. of Installed Languages'(375).
** Begin of change ** RKUMAR7 **
*    DESCRIBE TABLE i_lang_final LINES l_rows.
DESCRIBE TABLE i_spras LINES l_rows.
** End of change ** RKUMAR7 **
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

ENDIF.


* Start of change by TDEY ----
IF p_user = c_flag.

*   Total no of Clients
DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.

l_summ-line = sy-tabix .
l_summ-category = 'Total no of Users in all Clients'(376).
DESCRIBE TABLE i_client_user LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

ENDIF.

IF p_server = c_flag.

*   Total no of Clients
DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.

l_summ-line = sy-tabix .
l_summ-category = 'Total no of Servers'(377).
DESCRIBE TABLE i_server LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

ENDIF.

* End of change by TDEY ----

IF p_pghis = 'X' .

DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.

l_summ-line = sy-tabix .
l_summ-category = 'Program Usage Statistics'(378).
CONCATENATE l_summ-category ' ( '
l_str_stat_count ' months)'
INTO l_summ-category.
DESCRIBE TABLE i_prog_stat1 LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

ENDIF.

IF p_dbhis = c_flag.

DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.

l_summ-line = sy-tabix .
l_summ-category = 'Transaction Usage Statistics'(379).
CONCATENATE l_summ-category ' ( '
l_str_stat_count ' months)'
INTO l_summ-category.
DESCRIBE TABLE i_tran_stat2 LINES l_rows.
l_summ-number = l_rows.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

ENDIF.

****>>>Begin of change by Anjan
IF p_dbhis = c_flag OR p_pghis = c_flag.
**  Retrieve the data retention month if program or transaction
**  statistics is checked.
DATA l_retention_month TYPE sy-tabix.
DESCRIBE TABLE l_summ LINES l_rows.
sy-tabix = l_rows.
CLEAR l_rows.
PERFORM get_data_retention_month CHANGING l_retention_month.
l_summ-line = sy-tabix .
l_summ-category = 'Statistical Data Retained For Months'(418).
l_summ-number = l_retention_month.
APPEND l_summ.
CLEAR l_rows.
CLEAR l_summ.

ENDIF.

****>>>End of change by Anjan

DESCRIBE TABLE l_summ LINES l_rows.

l_str_name = 'Summary Report'(380).
l_cols = 3.
l_range = 'RANGE32'.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
l_summ[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
DELETE l_summ INDEX 1.


ENDFORM.                    " SUMMARY_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  STR_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM str_txt_xls_dwnd USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_struct_texts-tabname = 'Structure Name'(381).
i_struct_texts-fieldname = 'Field Name'(027).
i_struct_texts-dataelement = 'Data Element'(029).
i_struct_texts-domname   = 'Domain'(031).
i_struct_texts-datatype	 = 'Data Type '.
i_struct_texts-length	 = 'Length'(033).
i_struct_texts-decimals	 = 'Decimal Places'(034).
i_struct_texts-fieldtext   = 'Description'(035).

INSERT i_struct_texts INDEX 1.
CLEAR i_struct_texts.



PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_struct_texts[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " STR_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  VIEW_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM view_txt_xls_dwnd  USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_view_texts-tabname = 'View Name'(382).
i_view_texts-fieldname = 'Field Name'(027).
i_view_texts-dataelement = 'Data Element'(029).
i_view_texts-domname   = 'Domain'(031).
i_view_texts-datatype	 = 'Data Type'(032).
i_view_texts-length	 = 'Length'(033).
i_view_texts-decimals	 = 'Decimal Places'(034).
i_view_texts-fieldtext   = 'Description'(035).
i_view_texts-area = 'Function Group'(093).

INSERT i_view_texts INDEX 1.
CLEAR i_view_texts.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_view_texts[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " VIEW_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  CUSTTABL_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM custtabl_txt_xls_dwnd  USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_custtabl_texts-tabname = 'Table Name'(026).
i_custtabl_texts-fieldname = 'Field Name'(027).
i_custtabl_texts-is_primary_key = 'Key ?'(028).
i_custtabl_texts-dataelement = 'Data Element'(029).
i_custtabl_texts-checktable = 'Check Table '(030).
i_custtabl_texts-domname   = 'Domain'(031).
i_custtabl_texts-datatype	 = 'Data Type'(032).
i_custtabl_texts-length	 = 'Length'(033).
i_custtabl_texts-decimals	 = 'Decimal Places'(034).
i_custtabl_texts-fieldtext   = 'Description'(035).
i_custtabl_texts-area   = 'Function Group'(093).

INSERT i_custtabl_texts INDEX 1.
CLEAR i_custtabl_texts.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_custtabl_texts[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R

ENDFORM.                    " CUSTTABL_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  VOFM_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM vofm_txt_xls_dwnd  USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_vofm_texts-grpze   = 'Group Indicator '(116).
i_vofm_texts-ddtext  = 'Group Indicator Text '(117).
i_vofm_texts-grpno   = 'No of the routine'(118).
i_vofm_texts-kappl   = 'Application'(051).
i_vofm_texts-bezei   = 'Description'(383).

INSERT i_vofm_texts INDEX 1.
CLEAR i_vofm_texts.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_vofm_texts[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " VOFM_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  STD_WFLOW_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM std_wflow_txt_xls_dwnd  USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_std_wflow_texts-otype	=	'Obj Type'(142).
i_std_wflow_texts-objid	=	'Object ID'(143).
i_std_wflow_texts-stext	=	'Description'(035).

*Begin of change by Rudra R
i_std_wflow_texts-count = 'Usage Count'(233).
*End of change by Rudra R

INSERT i_std_wflow_texts INDEX 1.
CLEAR i_std_wflow_texts.


PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_std_wflow_texts[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " STD_WFLOW_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  CUST_WFLOW_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM cust_wflow_txt_xls_dwnd  USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_cust_wflow_texts-otype  =	'Obj Type'(142).
i_cust_wflow_texts-objid   =  'Object ID'(143).
i_cust_wflow_texts-stext   =  'Description'(035).
*Begin of change by Rudra R
i_cust_wflow_texts-count = 'Usage Count'(233).
*End of change by Rudra R

INSERT i_cust_wflow_texts INDEX 1.
CLEAR i_cust_wflow_texts.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_cust_wflow_texts[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R

ENDFORM.                    " CUST_WFLOW_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  LSMW_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM lsmw_txt_xls_dwnd   USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_lsmw_texts-project = 'Project'(178).
i_lsmw_texts-subproj = 'Subproject  '(179).
i_lsmw_texts-object = 'Object'(016).
i_lsmw_texts-objecttype = 'Object Type'(180).
i_lsmw_texts-dxobj = 'Object'(016).
i_lsmw_texts-subdx = 'Method  '(181).
i_lsmw_texts-busobj = 'Business Object  '(182).
i_lsmw_texts-method = 'Business Object Method'(183).
i_lsmw_texts-messtype = 'Message Type	'(184).
i_lsmw_texts-idoctype = 'Basic type	'(185).
i_lsmw_texts-cimtype = 'Extension	'(186).
i_lsmw_texts-programnumber = 'Prg Number '.
i_lsmw_texts-owner = 'Owner	'(384).
i_lsmw_texts-x_onetime = 'Once-Only'(187).
i_lsmw_texts-x_periodic = 'Periodic'(188).
i_lsmw_texts-uname = 'Last changed by	'(189).
i_lsmw_texts-datum = 'Date of Last Change	'(190).
i_lsmw_texts-systemdependent = 'System-Dependent File Name'(191).
i_lsmw_texts-edidc40 = 'EDIDC40 Target Strc	'(385).

INSERT i_lsmw_texts INDEX 1.
CLEAR i_lsmw_texts.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_lsmw_texts[].
****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " LSMW_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  SAPVER_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM sapver_txt_xls_dwnd  USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_component_texts-component = 'Software Component'(177).
i_component_texts-release = 'SAP Release'(159).
i_component_texts-extrelease = 'SAP SupportPackLevel'(176).
i_component_texts-comp_type = 'Component Type'(175).
** Begin of change ** RKUMAR7 **
i_component_texts-ddtext = 'Comp Type Text'(200).
** End of change ** RKUMAR7 **
i_component_texts-desc_text  =
'Short Description of Software Component'(386).

INSERT i_component_texts INDEX 1.
CLEAR i_component_texts.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_component_texts[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " SAPVER_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  LANG_INST_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM lang_inst_txt_xls_dwnd  USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_lang_inst_texts-spras = 'Language Key'(173).
i_lang_inst_texts-laspez = 'Language specifications'(172).
i_lang_inst_texts-lahq = 'Degree of Translation of Lang'(171).
i_lang_inst_texts-laiso = 'Lang. (ISO 639)'(170).
i_lang_inst_texts-sptxt = 'Language'(047).
** Begin of change ** RKUMAR7 **
i_lang_inst_texts-codepage = 'Codepage'(202).
** End of change ** RKUMAR7 **
INSERT i_lang_inst_texts INDEX 1.
CLEAR i_lang_inst_texts.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_lang_inst_texts[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R

ENDFORM.                    " LANG_INST_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  LNDSCP_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM lndscp_txt_xls_dwnd  USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_landscape_texts-domnam = 'Transport Domain '(169).
i_landscape_texts-sysnam = 'System Name '(163).
i_landscape_texts-limbo = 'Indicator '(154).
i_landscape_texts-cicfg = 'CI Status '(168).
i_landscape_texts-dlcfg = 'Distrib. Status '(167).
i_landscape_texts-tmscfg = 'TMS Status '(166).
i_landscape_texts-wbocfg = 'Indicator '(154).
i_landscape_texts-tpcfg = 'tp Status '(165).
i_landscape_texts-exported = 'Indicator '(154).
i_landscape_texts-method = 'Method                 '(387).
i_landscape_texts-nfsgrp = 'Transport Group '(164).
i_landscape_texts-comsys = 'System Name '(163).
i_landscape_texts-tradir = 'Directory name '(162).
i_landscape_texts-desadm = 'RFC Destination '(161).
i_landscape_texts-dessup = 'RFC Destination '(161).
i_landscape_texts-supallow = 'Indicator '(154).
i_landscape_texts-holdcon = 'Indicator '(154).
i_landscape_texts-systxt = 'Short Description '.
i_landscape_texts-tmsrel = 'TMS Release '(160).
i_landscape_texts-saprel = 'SAP Release '(159).
i_landscape_texts-instnr = 'Installation Number '(158).
i_landscape_texts-moddat = 'Current Date '(157).
i_landscape_texts-modtim = 'Time '(156).
i_landscape_texts-modusr = 'Last Changed By '(155).
i_landscape_texts-diststates = 'Char20 '.
i_landscape_texts-extsys = 'Indicator '(154).
i_landscape_texts-systyp = 'System type'.
i_landscape_texts-comcli = 'Client '(131).

INSERT i_landscape_texts INDEX 1.
CLEAR i_landscape_texts.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_landscape_texts[].


****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " LNDSCP_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  PRG_STAT_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM prg_stat_txt_xls_dwnd  USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_prg_stat_texts-ttype = 'TYPE '(149).
i_prg_stat_texts-entry_id = 'Name '(151).

INSERT i_prg_stat_texts INDEX 1.
CLEAR i_prg_stat_texts.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_prg_stat_texts[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
1
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " PRG_STAT_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  TRANS_STAT_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM trans_stat_txt_xls_dwnd  USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_trans_stat_texts-ttype = 'TYPE '(149).
i_trans_stat_texts-entry_id = 'Name '(151).

INSERT i_trans_stat_texts INDEX 1.
CLEAR i_trans_stat_texts.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_trans_stat_texts[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
1
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " TRANS_STAT_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  ESTIMATION_XLS_DWND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM estimation_xls_dwnd .

DATA : l_count TYPE i .
DATA : otherobj_cnt  TYPE i .
DATA : mpool_cnt TYPE i .
DATA : fmodule_cnt TYPE i .
DATA : sform_cnt TYPE i .
DATA : sscript_cnt TYPE i .
DATA : rprog_cnt TYPE i .
DATA : clas_cnt TYPE i .
DATA : shelp_cnt TYPE i .
DATA : tran_cnt TYPE i .
DATA : include_cnt TYPE i .
DATA : enhmt_cnt TYPE i .
DATA : dtel_cnt TYPE i .
DATA : doma_cnt TYPE i .
DATA : view_cnt TYPE i .
DATA : tabl_cnt TYPE i .
DATA : stru_cnt TYPE i .
DATA : ttyp_cnt TYPE i .
DATA : index_cnt TYPE i .
DATA : query_cnt TYPE i .
DATA : area_cnt TYPE i .
DATA : alein_cnt TYPE i .
DATA : aleout_cnt TYPE i .
** Begin of change ** RKUMAR7 ** 22.10.2009 17:44:58
DATA : vw_tmg_cnt TYPE i,
tbl_tmg_cnt TYPE i,
l_i_view_details TYPE STANDARD TABLE OF
zibm_table_structure  INITIAL SIZE 0,
l_i_tabl_details TYPE STANDARD TABLE OF
zibm_table_structure  INITIAL SIZE 0,
l_wa_index TYPE x_index.
** End of change ** RKUMAR7 ** 22.10.2009 17:45:03
DATA : exit_cnt TYPE i .
DATA : vofm_cnt TYPE i .
DATA : bte_cnt TYPE i .
DATA : badi_cnt TYPE i .
DATA : uexit_sd_cnt TYPE i .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i.


DATA: l_summ_est TYPE x_summ OCCURS 0 WITH HEADER LINE.

i_list_final_est[] = i_list_final[].

LOOP AT i_list_final_est INTO wa_list_final_est .

IF wa_list_final_est-object_type = 'DTEL' .
dtel_cnt = dtel_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'DOMA' .
doma_cnt = doma_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'VIEW' .
view_cnt = view_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'TABL' .
tabl_cnt = tabl_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'MPROG' .
mpool_cnt = mpool_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'FUNC' .
fmodule_cnt = fmodule_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'SSFO' .
sform_cnt = sform_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'RPROG' .
rprog_cnt = rprog_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'SHLP' .
shelp_cnt = shelp_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'CLAS' .
clas_cnt = clas_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'TRAN' .
tran_cnt = tran_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'IPROG' .
include_cnt = include_cnt + 1.
*      ELSEIF wa_list_final_est-object_type = 'CMOD' .
*        enhmt_cnt = enhmt_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'FORM' .
sscript_cnt = sscript_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'STRU' .
stru_cnt = stru_cnt + 1.
ELSEIF wa_list_final_est-object_type = 'TTYP' .
ttyp_cnt = ttyp_cnt + 1.
ENDIF.

CLEAR wa_list_final_est .

ENDLOOP.

*  for reports
l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category = 'Reports :'(087).
l_summ_est-number = rprog_cnt.
APPEND l_summ_est  .
CLEAR l_summ_est .
** Begin of change ** RKUMAR7 ** 23.10.2009 10:06:43
*  for Other Objects
l_i_view_details[] = i_view_details[].
l_i_tabl_details[] = i_tabl_details[].
*l_i_std_index[] = i_std_index[].
DELETE l_i_view_details WHERE area EQ space.
DELETE l_i_tabl_details WHERE area EQ space.
*  CLEAR index_cnt.
*  LOOP AT i_std_index INTO l_wa_index.
*    IF l_wa_index-indexname IN r_object.
*      index_cnt = index_cnt + 1.
*    ENDIF.
*  ENDLOOP.

DESCRIBE TABLE l_i_view_details  LINES vw_tmg_cnt .
DESCRIBE TABLE l_i_tabl_details  LINES tbl_tmg_cnt .
** End of change ** RKUMAR7 ** 23.10.2009 10:06:35
l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category =  'Other Objects*'(086).
** Begin of change ** Anjan ** 23.10.2009 10:06:43
*  DESCRIBE TABLE i_index LINES index_cnt .
DESCRIBE TABLE i_std_index LINES index_cnt .
** End of change ** Anjan ** 23.10.2009 10:06:43
*  DESCRIBE TABLE i_query LINES query_cnt .
DESCRIBE TABLE i_area  LINES area_cnt .
** Begin of change ** RKUMAR7 ** 23.10.2009 10:06:18
otherobj_cnt = index_cnt + area_cnt + clas_cnt + shelp_cnt
+ vw_tmg_cnt + tbl_tmg_cnt.
** End of change ** RKUMAR7 ** 23.10.2009 10:06:23
l_summ_est-number = otherobj_cnt.
APPEND l_summ_est  .
CLEAR l_summ_est .

*  for ALE Report
l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category =  'ALE Interfaces'(076).
DESCRIBE TABLE i_ale_inbound LINES alein_cnt .
DESCRIBE TABLE i_ale_outbound LINES aleout_cnt .
l_summ_est-number = alein_cnt + aleout_cnt.
APPEND l_summ_est  .
CLEAR l_summ_est .


*    for Custom development (data element,domain,tables,structure,view)


l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category =  'Custom Data Dictionary Objects**'(088).
l_summ_est-number = dtel_cnt + doma_cnt + view_cnt + tabl_cnt +
stru_cnt + ttyp_cnt.
APPEND l_summ_est  .
CLEAR l_summ_est .

*    for Module Pool

l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category =  'Module Pool Program'(089).
l_summ_est-number = mpool_cnt.
APPEND l_summ_est  .
CLEAR l_summ_est .

*    for Function Module

l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category =  'Function Module'(090).
l_summ_est-number = fmodule_cnt.
APPEND l_summ_est  .
CLEAR l_summ_est .


*    for Smart Form

l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category =  'Smart Form'(091).
l_summ_est-number = sform_cnt.
APPEND l_summ_est  .
CLEAR l_summ_est .


**    for Transactions
*
*    l_count = l_count + 1 .
*    l_summ_est-line = l_count .
*    l_summ_est-category =  'Transactions'(093).
*    l_summ_est-number = tran_cnt.
*    APPEND l_summ_est  .
*    CLEAR l_summ_est .


*    for Include Program

l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category =  'Include Program'(094).
l_summ_est-number = include_cnt.
APPEND l_summ_est  .
CLEAR l_summ_est .


*    for Enhancement Project

l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category =  'Enhancements ***'(138).
DESCRIBE TABLE i_exit LINES exit_cnt .
DESCRIBE TABLE i_vofm LINES vofm_cnt .
DESCRIBE TABLE i_bte LINES bte_cnt .
DESCRIBE TABLE i_uexit_sd LINES uexit_sd_cnt .
DESCRIBE TABLE i_badi LINES badi_cnt .
enhmt_cnt = exit_cnt + vofm_cnt + bte_cnt + uexit_sd_cnt + badi_cnt.
l_summ_est-number = enhmt_cnt.
APPEND l_summ_est  .
CLEAR l_summ_est .

*  for Modification
l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category =  'Modification'(096).
DESCRIBE TABLE i_adir LINES l_summ_est-number .
APPEND l_summ_est  .
CLEAR l_summ_est .

*  for LSMW
l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category =  'LSMW Objects'(097).
DESCRIBE TABLE i_lsmw_objects LINES l_summ_est-number .
APPEND l_summ_est  .
CLEAR l_summ_est .

*  for SAP Script
l_count = l_count + 1 .
l_summ_est-line = l_count .
l_summ_est-category =  'SAP Script Form'(092).
l_summ_est-number = sscript_cnt.
APPEND l_summ_est  .
CLEAR l_summ_est.

l_summ_est-line = 'No. '(388) .
l_summ_est-category = 'Category'(389).
l_summ_est-number = 'Count'(390).

INSERT l_summ_est INDEX 1.
CLEAR l_summ_est.

DO 2 TIMES.

l_summ_est-category = ' '.
APPEND l_summ_est .

ENDDO.


*  l_summ_est-category = '*  AreaMenu, Index, Query, Class. '(391).

CONCATENATE '*   AreaMenu, Search help, TMG, Class,'(301)
'Index on std. tables.'(150) INTO l_summ_est-category SEPARATED BY
space.

APPEND l_summ_est .

l_summ_est-category =
'** Custom DataElement, Domain, Table, View,'(392).

APPEND l_summ_est.

l_summ_est-category = 'Structure, TableType.'(393) .

APPEND l_summ_est.

l_summ_est-category = '*** Function Exits, VOFM Routine, BTE,'(394).

APPEND l_summ_est.

l_summ_est-category = ' Sales User Exit, BADI.'(395).

APPEND l_summ_est.

l_str_name = 'Estimation Report'(396).
l_cols = 3.
l_range = 'RANGE35'.

DESCRIBE TABLE l_summ_est LINES l_rows.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
v_top.

* Add table to the range
PERFORM add_table_to_range USING l_range
l_summ_est[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
ENDFORM.                    " ESTIMATION_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  RFC_CONNECT_XLS_DWND
*&---------------------------------------------------------------------*
*       Download in excel the RFC data
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM rfc_connect_xls_dwnd .
DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

DESCRIBE TABLE i_rfcattrib LINES l_rows.

i_rfcattrib_x[] = i_rfcattrib[].

l_str_name = 'RFC Connections'(397).
l_cols = 5.
l_range = 'RANGE33'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

PERFORM rfc_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.
IF NOT i_rfcattrib[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.


* Add table to the range
PERFORM add_table_to_range USING l_range
i_rfcattrib_x[]   .

ENDIF.

ENDFORM.                    " RFC_CONNECT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  RFC_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       RFC connection text download
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM rfc_txt_xls_dwnd   USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_rfc_text-rfcdest = 'Logical Destination'(211).
i_rfc_text-cuname = 'Created by'(212).
i_rfc_text-cudate = 'Created on'(213).
i_rfc_text-muname = 'Last Changed By'(155).
i_rfc_text-mudate = 'Changed On'(214).

INSERT i_rfc_text INDEX 1.
CLEAR i_rfc_text.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_rfc_text[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " RFC_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  GTWAY_CONNECT_XLS_DWNLD
*&---------------------------------------------------------------------*
*       Gateway connection details download
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM gtway_connect_xls_dwnld .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

DESCRIBE TABLE i_gwconn LINES l_rows.

l_str_name = 'Gateway Connections'(203).
l_cols = 15.
l_range = 'RANGE34'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

PERFORM gtway_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.
IF NOT i_gwconn[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.


* Add table to the range
PERFORM add_table_to_range USING l_range
i_gwconn[]   .

ENDIF.

ENDFORM.                    " GTWAY_CONNECT_XLS_DWNLD
*&---------------------------------------------------------------------*
*&      Form  GTWAY_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       Gateway text download
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM gtway_txt_xls_dwnd  USING    p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.
i_gtway_text-conn      = 'Connection Number'(215).
i_gtway_text-lu        =  'Logical Unit'(216).
i_gtway_text-tp        = 'Transaction program'(217).
i_gtway_text-gwuser    = 'Gateway user'(218).
i_gtway_text-state     = 'Connection status'(219).
i_gtway_text-symdest   = 'Symbolic destination'(220).
i_gtway_text-convid    = 'Conversation ID'(221).
i_gtway_text-prot      = 'Client log'(222).
i_gtway_text-trace     = 'Fast/slow connection'(223).
i_gtway_text-wp_no     = 'Work process num'(224).
i_gtway_text-req_block = 'General Counter'(225).
i_gtway_text-appcrc    = 'CPIC Return Value'(226).
i_gtway_text-saprc     = 'CPIC return value'(227).
i_gtway_text-last_req  = 'Last Req Time'(228).
i_gtway_text-filler    = 'Gateway fill byte '(229).

INSERT i_gtway_text INDEX 1.
CLEAR i_gtway_text.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

** Add table to the range
PERFORM add_table_to_range USING p_range
i_gtway_text[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " GTWAY_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  SCHEDULED_JOB_XLS_DWNLD
*&---------------------------------------------------------------------*
*       Scheduled job detail download
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM scheduled_job_xls_dwnld .
DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

DESCRIBE TABLE i_backgrnd LINES l_rows.

l_str_name = 'Scheduled Jobs With Cust Prog'(204).
l_cols = 3.
l_range = 'RANGE35'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

PERFORM jobs_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.
IF NOT i_backgrnd[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.


* Add table to the range
PERFORM add_table_to_range USING l_range
i_backgrnd[]   .

ENDIF.
ENDFORM.                    " SCHEDULED_JOB_XLS_DWNLD
*&---------------------------------------------------------------------*
*&      Form  JOBS_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       Scheduled job text download
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM jobs_txt_xls_dwnd  USING    p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_bg_job_txt-jobname  =  'Scheduled job name'(230).
i_bg_job_txt-progname = 'Program name'(231).
i_bg_job_txt-variant  = 'Variant'(232).

INSERT i_bg_job_txt INDEX 1.
CLEAR i_bg_job_txt.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

** Add table to the range
PERFORM add_table_to_range USING p_range
i_bg_job_txt[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R

ENDFORM.                    " JOBS_TXT_XLS_DWND


* Start of change by TDEY ----
*&---------------------------------------------------------------------*
*&      Form  USER_XLS_DWND
*&---------------------------------------------------------------------*
*       Download the Client - User details
*----------------------------------------------------------------------*
FORM user_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

DESCRIBE TABLE i_client_user LINES l_rows.

l_str_name = 'User Info'(398).
l_cols = 5.
l_range = 'RANGE36'.
l_top = 2.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

* Display the heading
PERFORM user_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.


* Display the data
IF NOT i_client_user[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.


* Add table to the range
PERFORM add_table_to_range USING l_range
i_client_user[].

ENDIF.

ENDFORM.                    " USER_XLS_DWND

*&---------------------------------------------------------------------*
*&      Form  user_txt_xls_dwnd
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM user_txt_xls_dwnd  USING p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_user_texts-mandt = 'Client'(399).
i_user_texts-mtext = 'Client Name'(400).
i_user_texts-bname = 'User Name'(401).
i_user_texts-ustyp = 'User Type'(402).
i_user_texts-ustyptxt = 'User Type Desc'(403).

INSERT i_user_texts INDEX 1.
CLEAR i_user_texts.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

* Add table to the range
PERFORM add_table_to_range USING p_range
i_user_texts[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R
ENDFORM.                    " user_txt_xls_dwnd

*&---------------------------------------------------------------------*
*&      Form  server_xls_dwnd
*&---------------------------------------------------------------------*
*       Download the Server details
*----------------------------------------------------------------------*
FORM server_xls_dwnd .

DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_top TYPE i.

* Display the heading
i_server-type = 'Server Type'(404).
i_server-name = 'Server Name'(405).
i_server-host = 'Host'(406).
INSERT i_server INDEX 1.
CLEAR i_server.

DESCRIBE TABLE i_server LINES l_rows.

l_str_name = 'Server Info'(407).
l_cols = 3.
l_range = 'RANGE37'.
l_top = 1.

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.


* Display the data
IF NOT i_server[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.


* Add table to the range
PERFORM add_table_to_range USING l_range
i_server[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  l_range
1
l_cols.
****>>>End of change by Rudra R
DELETE i_server INDEX 1.
ENDIF.

ENDFORM.                    " server_xls_dwnd

* End of change by TDEY ----
*&---------------------------------------------------------------------*
*&      Form  RUN_INFO_XLS_DWNLD
*&---------------------------------------------------------------------*
*       It download the selection conditions and user to excel sheet
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM run_info_xls_dwnld .
DATA: l_str_name TYPE char255,
l_range TYPE char255,
l_rows TYPE i,
l_cols TYPE i,
l_version_text TYPE text40,
l_runinfo LIKE LINE OF i_runinfo,
l_date(10)   TYPE c,
l_time(8)    TYPE c,
l_top TYPE i.
DATA:    l_i_texts LIKE textpool OCCURS 0 WITH HEADER
LINE.
* Populate the run information table
* Report name
l_runinfo-selname = 'Report'(408).
l_runinfo-low   = sy-repid.
APPEND l_runinfo TO i_runinfo.


* System details
l_runinfo-selname = 'System'(409).
*  l_runinfo-low   = sy-sysid.
CONCATENATE sy-sysid sy-mandt INTO l_runinfo-low
SEPARATED BY '-'.
APPEND l_runinfo TO i_runinfo.

*sap version details
SELECT SINGLE stext
INTO l_version_text
FROM cvers_txt
WHERE langu = sy-langu.

IF l_version_text IS INITIAL.
l_version_text = sy-saprl.
ENDIF.

l_runinfo-selname = 'Current SAP Version'(410).
l_runinfo-low   = l_version_text.
APPEND l_runinfo TO i_runinfo.
CLEAR l_runinfo.
* User details
l_runinfo-selname = 'UserID'(411).
l_runinfo-low   = sy-uname.
APPEND l_runinfo TO i_runinfo.
CLEAR l_runinfo.

* Date
l_runinfo-selname = 'Date/Time'(412).
WRITE: sy-datum TO l_date,
sy-uzeit TO l_time.
CONCATENATE l_date l_time INTO l_runinfo-low
SEPARATED BY space.
APPEND l_runinfo TO i_runinfo.
CLEAR l_runinfo.


READ TEXTPOOL sy-repid INTO l_i_texts.

SORT l_i_texts BY key.
LOOP AT i_params.
READ TABLE l_i_texts WITH KEY key = i_params-selname BINARY SEARCH.
IF sy-subrc = 0.
CONDENSE l_i_texts-entry.
l_runinfo-selname = l_i_texts-entry.
ELSE.
l_runinfo-selname = i_params-selname.
ENDIF.
l_runinfo-low = i_params-low.
l_runinfo-high = i_params-high.
APPEND l_runinfo TO i_runinfo.
CLEAR l_runinfo.
ENDLOOP.

DESCRIBE TABLE i_runinfo LINES l_rows.

l_str_name = 'Run Info'(413).
l_cols = 3.
l_range = 'RANGE38'.
l_top = 2 .

* Add Sheet to excel spreadsheet
PERFORM add_sheet USING l_str_name.

PERFORM rinfo_txt_xls_dwnd USING l_str_name
l_range
l_rows
l_cols
v_top.
IF NOT i_runinfo[] IS INITIAL.
* Add range to the worksheet
PERFORM add_range_to_sheet USING l_str_name
l_range
l_rows
l_cols
l_top.


* Add table to the range
PERFORM add_table_to_range USING l_range
i_runinfo[]   .

ENDIF.




ENDFORM.                    " RUN_INFO_XLS_DWNLD
*&---------------------------------------------------------------------*
*&      Form  RINFO_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*       Run info text download
*----------------------------------------------------------------------*
*      -->P_L_STR_NAME  text
*      -->P_L_RANGE  text
*      -->P_L_ROWS  text
*      -->P_L_COLS  text
*      -->P_V_TOP  text
*----------------------------------------------------------------------*
FORM rinfo_txt_xls_dwnd  USING     p_sheet TYPE char255
p_range TYPE char255
p_row   TYPE i
p_col   TYPE i
p_top   TYPE i.

DATA: l_top TYPE i VALUE 1,
l_row TYPE i VALUE 1.

i_rinfo_txt-selname  =  'Parameters'(414).
i_rinfo_txt-low = 'Low Value'(415).
i_rinfo_txt-high = 'High Value'(417).

INSERT i_rinfo_txt INDEX 1.
CLEAR i_rinfo_txt.

PERFORM add_range_to_sheet USING p_sheet
p_range
l_row
p_col
l_top.

** Add table to the range
PERFORM add_table_to_range USING p_range
i_rinfo_txt[].

****>>>Begin of change by Rudra R
*   Add color to first row
PERFORM add_color_to_cells USING  p_range
99999
p_col.
****>>>End of change by Rudra R

ENDFORM.                    " RINFO_TXT_XLS_DWND
*&---------------------------------------------------------------------*
*&      Form  ADD_COLOR_TO_CELLS
*&---------------------------------------------------------------------*
*       Add color to first row
*----------------------------------------------------------------------*
*      -->P_RANGE  Range name
*      -->P_ROWS   No of rows
*      -->P_COLS   No of Columns
*----------------------------------------------------------------------*
FORM add_color_to_cells  USING    p_range TYPE char255
p_rows  TYPE i
p_cols  TYPE i.


IF p_rows NE 99999.
CALL METHOD spreadsheet->change_range
EXPORTING
*    no_flush  = ' '
rangename = p_range
*    newname   =
rows      = p_rows
columns   = p_cols
*    updating  = -1
IMPORTING
error     = error
retcode   = retcode
.

* Handle Errors and throw error message if reqd
PERFORM error_handling.
ENDIF.

CALL METHOD spreadsheet->set_color
EXPORTING
rangename = p_range
front     = 1
*    no_flush  = ' '
back      = 6
IMPORTING
error     = error
retcode   = retcode
.

* Handle Errors and throw error message if reqd
PERFORM error_handling.
ENDFORM.                    " ADD_COLOR_TO_CELLS
