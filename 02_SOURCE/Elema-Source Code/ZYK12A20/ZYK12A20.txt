*&---------------------------------------------------------------------*
*& 検収照合システム                                                    *
*&     プログラム名称：違算明細書                                      *
*&     プログラムＩＤ：ZYK12A20                                        *
*&     作成者　　　　：K.ISHIKAWA(NSP)   作成日　　　　：2002/01/21    *
*&     更新者　　　　：KAJISA(NDSC)      更新日        : 2003/05/29    *
*&                     処理見直し                                      *
*&     更新者　　　　：SEIWA(DMC)        更新日        : 2003/12/10    *
*&                     品目テキストがスペースの場合の処理の追加        *
*&     更新者　　　　：ABE(DMC)          更新日        : 2005/02/17    *
*&                     明細テキストの桁数変更                          *
*&---------------------------------------------------------------------*
REPORT      YK012A10_S
LINE-COUNT 58
LINE-SIZE 170
NO STANDARD PAGE HEADING
MESSAGE-ID Y1.

*----------------------------------------------------------------------*
*   宣言部
*----------------------------------------------------------------------*
TABLES:     YK210,          " 請求データ
LFA1,           " 仕入先マスター： 一般セクション
LFM1,           " 仕入先マスタ購買組織データ
T001W,          " プラント
*---2003.12.10 ADD_S
MAKT,           "品目テキスト
EKPO.           "購買伝票明細
*---2003.12.10 ADD_E

*   請求データ(出力用)
TYPES: BEGIN OF ST_SEIKYU_OUT,
BUKRS     LIKE YK210-BUKRS,     " 会社コード/S-K(1)/M-K(1)
YKYEAR    LIKE YK210-YKYEAR,    " 暦年/S-K(2)/M-K(2)
LIFNR     LIKE YK210-LIFNR,     " 仕入先/S-K(3)
LIFN2     LIKE YK210-LIFN2,     " 請求先/S-K(4)
WERKS     LIKE YK210-WERKS,     " プラント/S-K(5)
EKORG     LIKE YK210-EKORG,     " 購買組織/S-K(6)
EKGRP     LIKE YK210-EKGRP,     " 購買GRP/S-K(7)
GSBER     LIKE YK210-GSBER,     " 事業領域/S-K(8)
ZFBDT     LIKE YK210-ZFBDT,     " 締日/S-K(9)
RENKETU(10) TYPE P,             "連結番号2003/05/29
BILDOC    LIKE YK210-BILDOC,    "入力番号
MAEATO(1)   TYPE C,             "前後判定フラグ2003/05/29
RELBILDOC LIKE YK210-RELBILDOC, " 訂正前入力番号/S-K(10)
RELYKYEAR LIKE YK210-RELYKYEAR, " 訂正前暦年
CORFLG    LIKE YK210-CORFLG,    " 訂正フラグ
DELFLG    LIKE YK210-DELFLG,    " 削除フラグ
EBELN     LIKE YK210-EBELN,     " 購買請求番号
*---2003.12.10 ADD_S
EBELP     LIKE YK210-EBELP,     " 購買伝票
MAKTX     LIKE YK210-MAKTX,     " 品目テキスト
MATNR     LIKE YK210-MATNR,     " 品目コード
**--2003.12.10 ADD_E
BILDAT    LIKE YK210-BILDAT,    " 請求日
KNQUAN    LIKE YK210-KNQUAN,    " 数量
KNUNIT    LIKE YK210-KNUNIT,    " 単位
KNUNTPRC  LIKE YK210-KNUNTPRC,  " 単価
KNETXAMT  LIKE YK210-KNETXAMT,  " 税込金額
WAERS     LIKE YK210-WAERS,     " 通貨コード
SGTXT     LIKE YK210-SGTXT,     " 明細テキスト
END OF ST_SEIKYU_OUT.
DATA I_SEIKYU   TYPE STANDARD TABLE OF ST_SEIKYU_OUT.
DATA I_SEIKYU_S TYPE STANDARD TABLE OF ST_SEIKYU_OUT."開始番号
DATA I_SEIKYU_E TYPE STANDARD TABLE OF ST_SEIKYU_OUT."終了番号
*   請求データ
TYPES: BEGIN OF ST_SEIKYU,
BUKRS     LIKE YK210-BUKRS,     " 会社コード/S-K(1)/M-K(1)
YKYEAR    LIKE YK210-YKYEAR,    " 暦年/S-K(2)/M-K(2)
LIFNR     LIKE YK210-LIFNR,     " 仕入先/S-K(3)
LIFN2     LIKE YK210-LIFN2,     " 請求先/S-K(4)
WERKS     LIKE YK210-WERKS,     " プラント/S-K(5)
EKORG     LIKE YK210-EKORG,     " 購買組織/S-K(6)
EKGRP     LIKE YK210-EKGRP,     " 購買GRP/S-K(7)
GSBER     LIKE YK210-GSBER,     " 事業領域/S-K(8)
ZFBDT     LIKE YK210-ZFBDT,     " 締日/S-K(9)
BILDOC    LIKE YK210-BILDOC,    " 入力番号 ADD 2002/05/31a
RELBILDOC LIKE YK210-RELBILDOC, " 訂正前入力番号/S-K(10)
FIXFLG    LIKE YK210-FIXFLG,    " 確定フラグ
DELFLG    LIKE YK210-DELFLG,    " 削除フラグ
RELYKYEAR LIKE YK210-RELYKYEAR, " 訂正前暦年
CORFLG    LIKE YK210-CORFLG,    " 訂正フラグ
EBELN     LIKE YK210-EBELN,     " 購買請求番号
*---2003.12.10 ADD_S
EBELP     LIKE YK210-EBELP,     " 購買伝票
MAKTX     LIKE YK210-MAKTX,     " 品目テキスト
MATNR     LIKE YK210-MATNR,     " 品目コード
**--2003.12.10 ADD_E
BILDAT    LIKE YK210-BILDAT,    " 請求日
KNQUAN    LIKE YK210-KNQUAN,    " 数量
KNUNIT    LIKE YK210-KNUNIT,    " 単位
KNUNTPRC  LIKE YK210-KNUNTPRC,  " 単価
KNETXAMT  LIKE YK210-KNETXAMT,  " 税込金額
WAERS     LIKE YK210-WAERS,     " 通貨コード
SGTXT     LIKE YK210-SGTXT,     " 明細テキスト
END OF ST_SEIKYU.
DATA I_SEIKYU_FULL TYPE SORTED TABLE OF ST_SEIKYU
WITH UNIQUE KEY BUKRS YKYEAR LIFNR LIFN2 WERKS EKORG EKGRP
GSBER ZFBDT  BILDOC.   "フラグ関係なし全件
DATA I_SEIKYU_FLG TYPE SORTED TABLE OF ST_SEIKYU
WITH UNIQUE KEY  BUKRS YKYEAR LIFNR LIFN2 WERKS EKORG EKGRP
GSBER ZFBDT  BILDOC.   "確定&削除ON

DATA I_SEIKYU_NODEL TYPE SORTED TABLE OF ST_SEIKYU
WITH UNIQUE KEY BUKRS YKYEAR LIFNR LIFN2 WERKS EKORG EKGRP
GSBER ZFBDT  BILDOC.  "削除なし
*   ワークエリア
FIELD-SYMBOLS: <MAIN>  TYPE ST_SEIKYU,      "メインループ用
<FULL>  TYPE ST_SEIKYU,      "旧入力番号検索用(次月対応)
<OUT>   TYPE ST_SEIKYU_OUT.  "出力用
DATA:ST_NODEL TYPE ST_SEIKYU,               "削除されてないデータ用
ST_FULL  TYPE ST_SEIKYU,               "旧入力番号検索用
ST_GET   TYPE ST_SEIKYU_OUT.           "出力用
DATA: W_OLD_LIFNR LIKE YK210-LIFNR,
W_MINI  LIKE YK210-BILDOC,            "最小入力番号
W_RENKETU(10) TYPE P,                 "連結番号
W_KNETXAMT_TTL LIKE YK210-KNETXAMT,   " 請求金額合計ワーク
W_KNCHGAMT_TTL LIKE YK210-KNETXAMT,   " 変更請求金額合計ワーク
W_KNETXDIF_TTL LIKE YK210-KNETXAMT,   " 税込違算合計ワーク
W_WAERS LIKE YK210-WAERS,
W_NAME1(40)    TYPE C,                " 名称
W_EDIT(15) TYPE C.                    " 単価/金額/数量編集用ワーク

*----------------------------------------------------------------------*
*   選択画面定義
*----------------------------------------------------------------------*
PARAMETERS:P_BUKRS LIKE YK210-BUKRS MEMORY ID BUK OBLIGATORY, "会社コー
P_EKORG LIKE YK210-EKORG MEMORY ID EKO OBLIGATORY. "購買組織

SELECT-OPTIONS: S_WERKS FOR YK210-WERKS MEMORY ID WRK, "プラント
S_GSBER FOR YK210-GSBER MEMORY ID GSB, "事業領域
S_EKGRP FOR YK210-EKGRP.               "購買GRP
SELECT-OPTIONS S_LIFNR  FOR YK210-LIFNR.               "仕入先コード
SELECT-OPTIONS S_ZFBDT  FOR YK210-ZFBDT.               "締日
PARAMETERS P_CHK1 AS CHECKBOX.                         " 購買GRP初期設定
*----------------------------------------------------------------------*
*   実行
*----------------------------------------------------------------------*
INITIALIZATION.
CLEAR W_OLD_LIFNR.
************************************************************************
AT SELECTION-SCREEN.
DATA CT_REC TYPE P.
CHECK SY-UCOMM IS INITIAL.          "ENTER時のみ処理
DESCRIBE TABLE S_LIFNR LINES CT_REC.
IF CT_REC = 1.
READ TABLE S_LIFNR INDEX 1.
IF W_OLD_LIFNR <>  S_LIFNR-LOW.
IF  ( S_LIFNR-OPTION = 'EQ' OR  S_LIFNR-OPTION = SPACE ).
REFRESH: S_ZFBDT.
PERFORM SET_ZFBDT.              "締日初期値セット
MESSAGE ID 'Y1' TYPE 'S' NUMBER '400' WITH '初期値設定しました'.
ENDIF.
W_OLD_LIFNR =  S_LIFNR-LOW.
ENDIF.
ELSE.
CLEAR W_OLD_LIFNR.
ENDIF.
*--------------------- 購買グループ提案 ADD 2002/05/17
DATA W_CNT TYPE P.
DESCRIBE TABLE S_EKGRP LINES W_CNT.
IF P_CHK1 = 'X' AND W_CNT = 0.
CLEAR LFM1.
SELECT EKGRP INTO LFM1-EKGRP FROM  LFM1
WHERE  LIFNR IN S_LIFNR
AND  EKORG =  P_EKORG.
S_EKGRP-LOW = LFM1-EKGRP.
S_EKGRP-SIGN  = 'I'.
S_EKGRP-OPTION ='EQ'.
APPEND S_EKGRP.
ENDSELECT.
ENDIF.
************************************************************************
START-OF-SELECTION.
PERFORM INIT_PROC. "初期処理
PERFORM MAIN_PROC. "主処理


*&---------------------------------------------------------------------*
*&      Form  INIT_PROC
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM INIT_PROC.
REFRESH:I_SEIKYU_FULL,I_SEIKYU_FLG,I_SEIKYU_NODEL.
CLEAR:  I_SEIKYU_FULL,I_SEIKYU_FLG,I_SEIKYU_NODEL.

ENDFORM.                    " INIT_PROC
*&---------------------------------------------------------------------*
*&      Form  MAIN_PROC
*&---------------------------------------------------------------------*
*       メイン処理
*----------------------------------------------------------------------*
FORM MAIN_PROC.
PERFORM GET_DATA. "処理①ＹＫ２１０処理対象の取得
CLEAR W_RENKETU.
LOOP AT I_SEIKYU_FLG ASSIGNING <MAIN>.
CLEAR:ST_NODEL,ST_GET,ST_FULL,W_MINI.
W_RENKETU = W_RENKETU + 1.
*処理②当月削除なしデータの検索
READ TABLE I_SEIKYU_NODEL INTO ST_NODEL
WITH KEY BUKRS     = <MAIN>-BUKRS
YKYEAR    = <MAIN>-YKYEAR
LIFNR     = <MAIN>-LIFNR
LIFN2     = <MAIN>-LIFN2
WERKS     = <MAIN>-WERKS
EKORG     = <MAIN>-EKORG
EKGRP     = <MAIN>-EKGRP
GSBER     = <MAIN>-GSBER
ZFBDT     = <MAIN>-ZFBDT
RELBILDOC = <MAIN>-BILDOC.   "旧入力 = 入力番号
IF SY-SUBRC = 0.
MOVE-CORRESPONDING <MAIN> TO ST_GET.
ST_GET-MAEATO = '1'.                      "変更前データ
ST_GET-RENKETU = W_RENKETU.
APPEND ST_GET TO I_SEIKYU.
MOVE-CORRESPONDING ST_NODEL TO ST_GET.
ST_GET-MAEATO = '2'.                      "変更後データ
ST_GET-RENKETU = W_RENKETU.
APPEND ST_GET TO I_SEIKYU.
CONTINUE.
ELSEIF <MAIN>-RELBILDOC IS INITIAL.
*処理③当月削除なしデータが無く、旧入力番号が無ければ通常削除データ
MOVE-CORRESPONDING <MAIN> TO ST_GET.
ST_GET-MAEATO = '1'.                      "変更前データ
ST_GET-RENKETU = W_RENKETU.
APPEND ST_GET TO I_SEIKYU.
CLEAR ST_GET.
ST_GET-MAEATO = '2'.                      "変更後は０円
ST_GET-RENKETU = W_RENKETU.
APPEND ST_GET TO I_SEIKYU.
CONTINUE.
ENDIF.
*処理④親が同支払基準日に居るなら処理対象外
READ TABLE I_SEIKYU_FULL INTO ST_FULL
WITH KEY BUKRS     = <MAIN>-BUKRS
YKYEAR    = <MAIN>-YKYEAR
LIFNR     = <MAIN>-LIFNR
LIFN2     = <MAIN>-LIFN2
WERKS     = <MAIN>-WERKS
EKORG     = <MAIN>-EKORG
EKGRP     = <MAIN>-EKGRP
GSBER     = <MAIN>-GSBER
ZFBDT     = <MAIN>-ZFBDT
BILDOC    = <MAIN>-RELBILDOC."入力番号 = 旧入力
IF SY-SUBRC = 0.
CONTINUE.
ENDIF.
*処理⑤同じ親をもつデータを取得し、最小入力番号を取得
W_MINI = <MAIN>-BILDOC.
LOOP AT I_SEIKYU_FULL ASSIGNING <FULL>
WHERE BUKRS     = <MAIN>-BUKRS
AND YKYEAR    = <MAIN>-YKYEAR
AND LIFNR     = <MAIN>-LIFNR
AND LIFN2     = <MAIN>-LIFN2
AND WERKS     = <MAIN>-WERKS
AND EKORG     = <MAIN>-EKORG
AND EKGRP     = <MAIN>-EKGRP
AND GSBER     = <MAIN>-GSBER
AND ZFBDT     = <MAIN>-ZFBDT
AND RELBILDOC = <MAIN>-RELBILDOC.     "入力番号 = 旧入力
IF W_MINI > <FULL>-BILDOC.
W_MINI = <FULL>-BILDOC.
ENDIF.
ENDLOOP.
*処理⑥同じ親をもつデータの最小入力番号のデータでなければ対象外
IF W_MINI <> <MAIN>-BILDOC.
CONTINUE.
ENDIF.
*処理⑦
MOVE-CORRESPONDING <MAIN> TO ST_GET.
ST_GET-MAEATO = '1'.                          "変更前データ
ST_GET-RENKETU = W_RENKETU.
APPEND ST_GET TO I_SEIKYU.
READ TABLE I_SEIKYU_NODEL INTO ST_NODEL
WITH KEY BUKRS     = <MAIN>-BUKRS
YKYEAR    = <MAIN>-YKYEAR
LIFNR     = <MAIN>-LIFNR
LIFN2     = <MAIN>-LIFN2
WERKS     = <MAIN>-WERKS
EKORG     = <MAIN>-EKORG
EKGRP     = <MAIN>-EKGRP
GSBER     = <MAIN>-GSBER
ZFBDT     = <MAIN>-ZFBDT
RELBILDOC = <MAIN>-RELBILDOC.   "同一の親で未削除
IF SY-SUBRC = 0.
MOVE-CORRESPONDING ST_NODEL TO ST_GET.
ST_GET-MAEATO = '2'.                      "変更後データ
ST_GET-RENKETU = W_RENKETU.
APPEND ST_GET TO I_SEIKYU.
CONTINUE.
ELSE.
CLEAR ST_GET.
ST_GET-MAEATO = '2'.                      "変更後は０円
ST_GET-RENKETU = W_RENKETU.
APPEND ST_GET TO I_SEIKYU.
CONTINUE.
ENDIF.
ENDLOOP.
FREE:I_SEIKYU_FULL,I_SEIKYU_FLG,I_SEIKYU_NODEL.
*件数確認
READ TABLE I_SEIKYU ASSIGNING <OUT> INDEX 1.
IF SY-SUBRC <> 0.
MESSAGE S622.
STOP.
ENDIF.
*開始データのみの内部テーブル
I_SEIKYU_S[] = I_SEIKYU[].
DELETE I_SEIKYU_S WHERE MAEATO = '2'.
*終了データのみの内部テーブル
I_SEIKYU_E[] = I_SEIKYU[].
DELETE I_SEIKYU_E WHERE MAEATO = '1'.
FREE:I_SEIKYU.
SORT I_SEIKYU_S ASCENDING BY BUKRS YKYEAR LIFNR LIFN2 WERKS EKORG
EKGRP GSBER ZFBDT RENKETU.
SORT I_SEIKYU_E ASCENDING BY RENKETU.


PERFORM WRITE_DATA.       "帳票出力
FREE:I_SEIKYU_S, I_SEIKYU_E.
ENDFORM.                    " MAIN_PROC

*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       ＹＫ２１０処理対象の取得
*----------------------------------------------------------------------*
FORM GET_DATA.
*全体データ取得
SELECT BUKRS YKYEAR BILDOC FIXFLG
CORFLG DELFLG LIFNR LIFN2 WERKS
EKORG EKGRP GSBER EBELN
*--2003.12.10 ADD_S
EBELP MAKTX MATNR
*--2003.12.10 ADD_E
ZFBDT BILDAT KNQUAN
KNUNIT KNUNTPRC KNETXAMT WAERS SGTXT
RELYKYEAR RELBILDOC
FROM YK210
INTO CORRESPONDING FIELDS OF TABLE I_SEIKYU_FULL
WHERE BUKRS  = P_BUKRS
AND LIFNR IN S_LIFNR      "仕入先コード
AND EKORG  = P_EKORG
AND GSBER IN S_GSBER
AND WERKS IN S_WERKS
AND EKGRP IN S_EKGRP
AND ZFBDT IN S_ZFBDT.     "締め日

IF SY-SUBRC > 0.
MESSAGE S622 .
STOP.
ENDIF.
*  SORT I_SEIKYU_FULL by BUKRS YKYEAR BILDOC RELBILDOC FIXFLG DELFLG.
*確定&削除フラグONデータ取得
I_SEIKYU_FLG[] = I_SEIKYU_FULL[].
DELETE I_SEIKYU_FLG WHERE FIXFLG <> 'X' OR DELFLG <> 'X'.
*削除フラグOFFデータ取得
I_SEIKYU_NODEL[] = I_SEIKYU_FULL[].
DELETE I_SEIKYU_NODEL WHERE DELFLG = 'X'.
ENDFORM.                    " GET_DATA
*&---------------------------------------------------------------------*
*&      Form  WRITE_DATA
*&---------------------------------------------------------------------*
*       帳票出力
*----------------------------------------------------------------------*
FORM WRITE_DATA.
LOOP AT I_SEIKYU_S ASSIGNING <OUT>.
AT NEW ZFBDT."締め日
NEW-PAGE.
CLEAR: W_KNETXAMT_TTL, W_KNCHGAMT_TTL, W_KNETXDIF_TTL.
ENDAT.

CLEAR ST_GET.
PERFORM F_PRINT_TEISEI_MAE.              "明細見出し(訂正前)印刷
READ TABLE I_SEIKYU_E INTO ST_GET
WITH KEY RENKETU = <OUT>-RENKETU.   "変更後データ読み出し

PERFORM F_PRINT_TEISEI_ATO.              "明細見出し(訂正後)印刷
W_WAERS = <OUT>-WAERS.
AT END OF ZFBDT.
*  各合計額表示
ULINE.
PERFORM EDIT_VALUE USING W_KNETXAMT_TTL
W_WAERS.
WRITE: /86      '(請求金額合計',
104(14)  W_EDIT RIGHT-JUSTIFIED,
120      W_WAERS NO-GAP, ')'.
PERFORM EDIT_VALUE USING W_KNCHGAMT_TTL
W_WAERS.
WRITE: /86      '(変更請求金額合計',
104(14)  W_EDIT RIGHT-JUSTIFIED,
120      W_WAERS NO-GAP, ')'.

W_KNETXDIF_TTL = W_KNCHGAMT_TTL - W_KNETXAMT_TTL.
PERFORM EDIT_VALUE USING W_KNETXDIF_TTL
W_WAERS.
WRITE: /86      '(税込違算合計',
104(14)  W_EDIT RIGHT-JUSTIFIED,
120      W_WAERS NO-GAP, ')'.
ENDAT.
ENDLOOP.

ENDFORM.                    " WRITE_DATA

*&---------------------------------------------------------------------*
*&      Form  F_PRINT_TEISEI_MAE
*&---------------------------------------------------------------------*
*        明細見出し(訂正前)印刷
*----------------------------------------------------------------------*
FORM F_PRINT_TEISEI_MAE.
*------------2003.12.10 ADD_S>>品目テキストの取得
IF <OUT>-MAKTX = ''.
SELECT SINGLE TXZ01
FROM EKPO
INTO <OUT>-MAKTX
WHERE EBELN = <OUT>-EBELN
AND EBELP = <OUT>-EBELP.
*
IF SY-SUBRC <> 0.
SELECT SINGLE MAKTX
FROM MAKT
INTO <OUT>-MAKTX
WHERE MATNR = <OUT>-MATNR.
ENDIF.
ENDIF.
**------------2003.12.10 ADD_E>>

WRITE: /1  <OUT>-BILDAT,       " 請求日
12  <OUT>-BILDOC,       " 入力番号
23  <OUT>-EBELN,        " 発注番号
34  <OUT>-MAKTX.        " 品目テキスト
*       単価
PERFORM EDIT_UNTPRC USING <OUT>-KNUNTPRC
<OUT>-WAERS.
WRITE:  75(14)  W_EDIT RIGHT-JUSTIFIED.     " 単価
*       数量
PERFORM EDIT_QUANT  USING <OUT>-KNQUAN
<OUT>-KNUNIT.
WRITE:  90(12)  W_EDIT RIGHT-JUSTIFIED.     " 数量
*       訂正前　請求金額
PERFORM EDIT_VALUE USING  <OUT>-KNETXAMT
<OUT>-WAERS.
WRITE:  105(13) W_EDIT RIGHT-JUSTIFIED.    "請求金額
WRITE:  120     <OUT>-WAERS.               "通貨コード
* 2005/02/17 MOD-S
*  WRITE:  126(32) <OUT>-SGTXT.               "明細テキスト(摘要)
WRITE:  126(40) <OUT>-SGTXT.               "明細テキスト(摘要)
* 2005/02/17 MOD-E

W_KNETXAMT_TTL = W_KNETXAMT_TTL +  <OUT>-KNETXAMT. "請求額計

ENDFORM.                    " F_PRINT_TEISEI_MAE
*&---------------------------------------------------------------------*
*&      Form  EDIT_QUANT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_<OUT>_KNQUAN  text
*      -->P_<OUT>_KNUNIT  text
*----------------------------------------------------------------------*
FORM EDIT_QUANT  USING VALUE(P_QUAN) LIKE YK210-KNQUAN
VALUE(P_UNIT) LIKE YK210-KNUNIT.
DATA: W_AMOUNT(15) TYPE C,
W_SIGN       TYPE C.

CLEAR: W_EDIT, W_AMOUNT, W_SIGN.
IF P_QUAN = 0.
W_EDIT = 0.
EXIT.
ENDIF.
IF P_QUAN < 0.
W_SIGN = '-'.
ENDIF.

WRITE P_QUAN UNIT P_UNIT RIGHT-JUSTIFIED TO W_EDIT.
IF W_SIGN = '-'.
WRITE W_EDIT RIGHT-JUSTIFIED TO W_AMOUNT.
CONCATENATE W_SIGN W_AMOUNT(14) INTO W_EDIT.
ENDIF.
CONDENSE W_EDIT NO-GAPS.

ENDFORM.                    " EDIT_QUANT

*----------------------------------------------------------------------*
*   EDIT_UNTPRC/AMOUNT/QUANT
*----------------------------------------------------------------------*
*       単価/金額/数量編集ルーチン
*----------------------------------------------------------------------*
*       -> P_UNTPRC/AMOUNT/QUAN (単価/金額/数量)
*       -> P_WAERS (通貨コード) or P_UNIT (単位)
*----------------------------------------------------------------------*
FORM EDIT_UNTPRC USING VALUE(P_UNTPRC) LIKE YK210-KNUNTPRC
VALUE(P_WAERS)  LIKE YK210-WAERS.
DATA: W_AMOUNT(15) TYPE C,
W_SIGN       TYPE C,
W_DEC5(16)   TYPE P DECIMALS 5,
W_FRACT      LIKE TCURX-CURRDEC.

CLEAR: W_EDIT, W_AMOUNT, W_SIGN.
IF P_UNTPRC = 0.
W_EDIT = 0.
EXIT.
ENDIF.

IF P_UNTPRC < 0.
W_SIGN = '-'.
ENDIF.

W_AMOUNT = P_UNTPRC.
W_DEC5 = W_AMOUNT.
CALL FUNCTION 'FWOS_CURRENCY_DECIMALS_READ'
EXPORTING
I_CURRENCY = P_WAERS
IMPORTING
E_DECIMALS = W_FRACT
EXCEPTIONS
OTHERS     = 1.

IF SY-SUBRC > 0.
CLEAR W_FRACT.
ENDIF.

W_FRACT = W_FRACT + 2.

WRITE W_DEC5 DECIMALS W_FRACT TO W_EDIT.
IF W_SIGN = '-'.
WRITE W_EDIT RIGHT-JUSTIFIED TO W_AMOUNT.
CONCATENATE W_SIGN W_AMOUNT(14) INTO W_EDIT.
ENDIF.
CONDENSE W_EDIT NO-GAPS.

ENDFORM.                    " EDIT_UNTPRC
*&---------------------------------------------------------------------*
*&      Form  EDIT_VALUE
*&---------------------------------------------------------------------*
*----------------------------------------------------------------------*
*      -->P_<OUT>_KNETXAMT  text
*      -->P_<OUT>_WAERS  text
*----------------------------------------------------------------------*
FORM EDIT_VALUE  USING VALUE(P_VALUE) LIKE YK210-KNITXAMT
VALUE(P_WAERS) LIKE YK210-WAERS.
DATA: W_AMOUNT(15) TYPE C,
W_SIGN       TYPE C,
W_DEC5(16)   TYPE P DECIMALS 5,
W_FRACT      LIKE TCURX-CURRDEC.

CLEAR: W_EDIT, W_AMOUNT, W_SIGN.
IF P_VALUE = 0.
W_EDIT = 0.
EXIT.
ENDIF.
IF P_VALUE < 0.
W_SIGN = '-'.
ENDIF.

CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
EXPORTING
CURRENCY    = P_WAERS
SAP_AMOUNT  = P_VALUE
IMPORTING
IDOC_AMOUNT = W_AMOUNT
EXCEPTIONS
OTHERS      = 1.
IF SY-SUBRC > 0 OR W_AMOUNT IS INITIAL.
CLEAR W_AMOUNT.
ENDIF.

W_DEC5 = W_AMOUNT.

CALL FUNCTION 'FWOS_CURRENCY_DECIMALS_READ'
EXPORTING
I_CURRENCY = P_WAERS
IMPORTING
E_DECIMALS = W_FRACT
EXCEPTIONS
OTHERS     = 1.

IF SY-SUBRC > 0.
CLEAR W_FRACT.
ENDIF.

WRITE W_DEC5 DECIMALS W_FRACT TO W_EDIT.
IF W_SIGN = '-'.
WRITE W_EDIT RIGHT-JUSTIFIED TO W_AMOUNT.
CONCATENATE W_SIGN W_AMOUNT(14) INTO W_EDIT.
ENDIF.
CONDENSE W_EDIT NO-GAPS.
ENDFORM.                    " EDIT_VALUE
*&---------------------------------------------------------------------*
*&      Form  F_PRINT_TEISEI_ATO
*&---------------------------------------------------------------------*
*        明細見出し(訂正後)印刷
*----------------------------------------------------------------------*
FORM F_PRINT_TEISEI_ATO.
IF NOT ST_GET-BILDAT IS INITIAL.
WRITE: /1 ST_GET-BILDAT,            " 請求日
12 ST_GET-BILDOC.            " 入力番号
ELSE.
WRITE:/12 ST_GET-BILDOC.           " 入力番号
ENDIF.
*------------2003.12.10 ADD_S>>品目テキストの取得
*品目テキストが空白の場合
IF ST_GET-MAKTX = ''.
SELECT SINGLE TXZ01
FROM EKPO
INTO ST_GET-MAKTX
WHERE EBELN = ST_GET-EBELN
AND EBELP = ST_GET-EBELP.
*
IF  SY-SUBRC <> 0.
SELECT SINGLE MAKTX
FROM MAKT
INTO ST_GET-MAKTX
WHERE MATNR = ST_GET-MATNR.
ENDIF.
ENDIF.
**------------2003.12.10 ADD_E>>
WRITE:23 ST_GET-EBELN,             " 発注番号
34 ST_GET-MAKTX.             " 品目テキスト
PERFORM EDIT_UNTPRC USING ST_GET-KNUNTPRC
ST_GET-WAERS.
WRITE:  75(14)  W_EDIT RIGHT-JUSTIFIED.     " 単価

PERFORM EDIT_QUANT  USING ST_GET-KNQUAN
ST_GET-KNUNIT.
WRITE:  90(12)  W_EDIT RIGHT-JUSTIFIED.     " 数量
*       訂正前　請求金額
PERFORM EDIT_VALUE USING ST_GET-KNETXAMT
ST_GET-WAERS.
WRITE:  105(13) W_EDIT RIGHT-JUSTIFIED.    " 請求金額
WRITE:  120     ST_GET-WAERS.              " 通貨コード
* 2005/02/17 MOD-S
*  WRITE:  126(32) ST_GET-SGTXT.              " 明細テキスト(摘要)
WRITE:  126(40) ST_GET-SGTXT.              " 明細テキスト(摘要)
* 2005/02/17 MOD-E

W_KNCHGAMT_TTL = W_KNCHGAMT_TTL +  ST_GET-KNETXAMT. " 変更請求額計

ENDFORM.                    " F_PRINT_TEISEI_ATO
************************************************************************
TOP-OF-PAGE.
PERFORM F_PRINT_PAGE_HEADER.

*&---------------------------------------------------------------------*
*&      Form  F_PRINT_PAGE_HEADER
*&---------------------------------------------------------------------*
*       ページヘッダ印刷
*----------------------------------------------------------------------*
FORM F_PRINT_PAGE_HEADER.
WRITE /.
WRITE: /27  '***　　違　算　明　細　書　　***',
63 '(', <OUT>-YKYEAR,
'/', <OUT>-ZFBDT+4(2), '月度 )',
120 '作成日時:',
SY-DATUM USING EDIT MASK '____/__/__',
SY-UZEIT USING EDIT MASK '__:__',
150 'Page:',
SY-PAGNO.
CLEAR W_NAME1.
SELECT SINGLE NAME1     " 仕入先名
FROM LFA1
INTO W_NAME1
WHERE LIFNR = <OUT>-LIFNR.   " 仕入先コードチェック

CONCATENATE W_NAME1 '御中'
INTO W_NAME1 SEPARATED BY SPACE. "2002/04/12 ADD
WRITE /.
WRITE: /1  '仕入先:', <OUT>-LIFNR,
19 W_NAME1.
CLEAR W_NAME1.
SELECT SINGLE NAME1 FROM T001W INTO W_NAME1
WHERE WERKS = <OUT>-WERKS.
WRITE: /1  'プラント:', <OUT>-WERKS,
19 W_NAME1.
SKIP.
WRITE: /1   '請求日',
12  '入力番号',
23  '発注番号',
34  '品 目 テ キ ス ト',
84  '単 価',
97  '数 量',
110 '請求金額'.
WRITE: /106 '変更請求金額',   "2002.04.25 MOD
120 '通貨',
126 '摘　要'.
ULINE.

ENDFORM.                    " F_PRINT_PAGE_HEADER
*&---------------------------------------------------------------------*
*&      Form  set_zfbdt
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SET_ZFBDT.
CALL FUNCTION 'YK_ZFBDT_GET_BY_LFM1'
EXPORTING
I_CORD         = S_LIFNR-LOW
I_EKORG        = P_EKORG
I_DAY          = SY-DATUM
IMPORTING
E_ZFBDT_OLD    = S_ZFBDT-LOW
EXCEPTIONS
NO_GET_T052    = 1
NO_GOOD_GETDAY = 2
NO_GET_ZTERM   = 3
OTHERS         = 4.
IF SY-SUBRC = 0.
S_ZFBDT-SIGN   = 'I'.
S_ZFBDT-OPTION = 'EQ'.
APPEND S_ZFBDT.
ENDIF.

ENDFORM.                    " set_zfbdt
