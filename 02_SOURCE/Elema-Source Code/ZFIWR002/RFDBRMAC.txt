***INCLUDE RFDBRMAC.

* Aufruf: COPY itab1 TO itab2.
* Initialisiert itab2 und kopiert dann itab1 nach itab2
DEFINE COPY.
IF '&2' = 'TO'. ENDIF. "Dummyverwendung des zweiten Arguments
REFRESH &3.
LOOP AT &1 INTO &3.
APPEND &3.
ENDLOOP.
CLEAR &3.
END-OF-DEFINITION.

DEFINE GET_FRAME_TITLE.
PERFORM GET_FRAME_TITLE(SAPDBBRF) USING &1 _TEXT_&1.
END-OF-DEFINITION.

DEFINE BEGIN_OF_BLOCK.
SELECTION-SCREEN BEGIN OF BLOCK &1 WITH FRAME TITLE _TEXT_&1.
END-OF-DEFINITION.

DEFINE END_OF_BLOCK.
SELECTION-SCREEN END   OF BLOCK &1.
END-OF-DEFINITION.

* Makros f#r Tabstrips
DEFINE BEGIN_OF_SCREEN.                                          " 4.6A
SELECTION-SCREEN BEGIN OF SCREEN &1 AS SUBSCREEN.              " 4.6A
END-OF-DEFINITION.                                               " 4.6A

DEFINE END_OF_SCREEN.                                            " 4.6A
SELECTION-SCREEN END   OF SCREEN &1.                           " 4.6A
END-OF-DEFINITION.                                               " 4.6A

DEFINE GET_TABSTRIP_TITLE.                                       " 4.6A
DATA: TS_TEXT&1 LIKE RFPDO-ALLGLINE.                           " 4.6A
PERFORM GET_FRAME_TITLE(SAPDBBRF) USING &1 TS_TEXT&1.          " 4.6A
TAB&1 = TS_TEXT&1.                                             " 4.6A
END-OF-DEFINITION.                                               " 4.6A

DEFINE TABSTRIP.                                                 " 4.6A
SELECTION-SCREEN TAB &2 TAB&1                                  " 4.6A
USER-COMMAND UCOM&1                      " 4.6A
DEFAULT SCREEN &1.                       " 4.6A
END-OF-DEFINITION.

DEFINE BEGIN_OF_TABBED_BLOCK.                                    " 4.6A
SELECTION-SCREEN BEGIN OF TABBED BLOCK TABBL&1                 " 4.6A
FOR &2 LINES.                " 4.6A
END-OF-DEFINITION.                                               " 4.6A

* Makros f#r Pufferung
*---------------------
DEFINE BUFFER.
* Felder zur Cursorverwaltung
DATA: CURSOR-&1 LIKE SY-INDEX.
* Interne Tabellen zur Zwischenpufferung
DATA: BEGIN OF X&1 OCCURS 0.
INCLUDE STRUCTURE &1.
DATA: END OF X&1.
END-OF-DEFINITION.

* Abarbeiten des Puffers fuer Kundennummer
* Beispiel 1: ACCESS_BUFFER_1 KNAS KUNNR
* Beispiel 2: ACCESS_BUFFER_1 LFAS LIFNR
DEFINE ACCESS_BUFFER_1.
IF CURSOR-&1 = 0.
PERFORM UPDATE_X&1.
ENDIF.
DO.
READ TABLE X&1 INDEX CURSOR-&1.
IF SY-SUBRC NE 0.
EXIT.
ENDIF.
IF SAVE_&2 < X&1-&2. "Eintrag nicht enthalten
EXIT.
ELSEIF SAVE_&2 > X&1-&2. "Weiterlesen
CURSOR-&1 = CURSOR-&1 + 1.
ELSE. "Treffer
&1 = X&1.
PUT &1.
CURSOR-&1 = CURSOR-&1 + 1.
ENDIF. "KUNNR
ENDDO.
END-OF-DEFINITION.

* Abarbeiten des Puffers fuer Kundennummer und Buchungskreis
* Beispiel 1: ACCESS_BUFFER_2 KNC1 KUNNR BUKRS
* Beispiel 2: ACCESS_BUFFER_2 LFC1 LIFNR BUKRS
DEFINE ACCESS_BUFFER_2.
IF CURSOR-&1 = 0.
PERFORM UPDATE_X&1.
ENDIF.
DO.
READ TABLE X&1 INDEX CURSOR-&1.
IF SY-SUBRC NE 0.
EXIT.
ENDIF.
IF SAVE_&2 < X&1-&2. "Eintrag nicht enthalten
EXIT.
ELSEIF SAVE_&2 > X&1-&2. "Weiterlesen
CURSOR-&1 = CURSOR-&1 + 1.
ELSE. "Treffer
IF SAVE_&3 < X&1-&3.
EXIT.
ELSEIF SAVE_&3 > X&1-&3.
CURSOR-&1 = CURSOR-&1 + 1.
ELSE.
&1 = X&1.
PUT &1.
CURSOR-&1 = CURSOR-&1 + 1.
ENDIF. "BUKRS
ENDIF. "KUNNR
ENDDO.
END-OF-DEFINITION.

DEFINE INIT_WHERE.
MOVE '&1' TO L_DS_CLAUSES-TABLENAME.
READ TABLE DYN_SEL-CLAUSES WITH KEY L_DS_CLAUSES-TABLENAME
INTO L_DS_CLAUSES.
IF SY-SUBRC = 0.
&1_WHERE[] =  L_DS_CLAUSES-WHERE_TAB[].
ENDIF.
END-OF-DEFINITION.

DEFINE INIT_FIELDS.
MOVE '&1' TO L_TAB_FIELDS-TABLENAME.
READ TABLE SELECT_FIELDS WITH KEY L_TAB_FIELDS-TABLENAME
INTO L_TAB_FIELDS.
IF SY-SUBRC = 0.
&1_FIELDS[] = L_TAB_FIELDS-FIELDS[].
ENDIF.
END-OF-DEFINITION.

DEFINE CHECK_WIA_AND_MODIFY_SCREEN.
CALL FUNCTION 'CHECK_PLANTS_ABROAD_ACTIVE'
EXPORTING
I_CUST        = 'X'
IMPORTING
E_FI_ISACTIVE = &1.
IF &1 = SPACE.
LOOP AT SCREEN.
IF SCREEN-GROUP1 = 'WIA'.
SCREEN-INPUT = '0'.
SCREEN-INVISIBLE = '1'.
MODIFY SCREEN.
ENDIF.
ENDLOOP.
REFRESH SEL_LSTM.
CLEAR SEL_LSTM.
ENDIF.
END-OF-DEFINITION.

* Problems with unicode in headerline
DEFINE UC_DATA.
DATA: L_LINE    TYPE SYULINE,
L_OFFSET  TYPE I,
L_OFF_TAB TYPE ABAP_OFFSET_TAB.
END-OF-DEFINITION.

DEFINE UC_INITIALIZE.
CLEAR L_OFF_TAB.
END-OF-DEFINITION.

DEFINE UC_VLINE_OFFSET.
APPEND &1 TO L_OFF_TAB.
END-OF-DEFINITION.

DEFINE UC_HEADERLINE.
L_LINE = &1.
CALL METHOD CL_ABAP_LIST_UTILITIES=>DISPLAY_TO_MEMORY
EXPORTING
DISPLAY_DATA = L_LINE
OFFSET_TAB   = L_OFF_TAB
IMPORTING
MEMORY_DATA  = L_LINE.

LOOP AT L_OFF_TAB INTO L_OFFSET.
IF L_LINE+L_OFFSET(1) = SPACE.
WRITE SY-VLINE TO L_LINE+L_OFFSET(1).
ENDIF.
ENDLOOP.

CALL METHOD CL_ABAP_LIST_UTILITIES=>MEMORY_TO_DISPLAY
EXPORTING
MEMORY_DATA  = L_LINE
OFFSET_TAB   = L_OFF_TAB
IMPORTING
DISPLAY_DATA = L_LINE.
END-OF-DEFINITION.
