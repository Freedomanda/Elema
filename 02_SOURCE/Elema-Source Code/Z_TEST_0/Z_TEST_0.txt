*&---------------------------------------------------------------------*
*&  REPORT ZN011200                                                    *
*&         支払予定一覧兼支払実績表                                    *
*&---------------------------------------------------------------------*
*&  機能     : ZN002より、支払予定データ/支払済データをALV表示する
*&
*&  作成日   : 2012/02/02
*&  作成者   : S.TAKIKAWA(solfis)
*&  変更履歴 :
*&  変更内容 :
*&---------------------------------------------------------------------*
REPORT ZN011200
NO STANDARD PAGE HEADING
LINE-SIZE  170
LINE-COUNT 58
MESSAGE-ID Y1.
*----------------------------------------------------------------------*
*   構造/テーブル定義
*----------------------------------------------------------------------*
* 支払予定データ取得用
TYPES:T_TYP_ZN002   TYPE STANDARD TABLE OF ZN002.
* 仕入先マスタデータ取得用
TYPES:BEGIN OF TYP_LFA1,
LIFNR       TYPE LIFNR,      "仕入先
NAME1       TYPE NAME1_GP,   "名称 1
SPERM       TYPE SPERM_X,    "購買ブロック(LFA1)
BUKRS       TYPE BUKRS,      "会社コード
ZWELS       TYPE DZWELS,     "支払方法
ZTERM       TYPE DZTERM,     "支払条件(LFB1)
TLFNS       TYPE TLFNS,      "資本金
EKORG       TYPE EKORG,      "購買組織
ZTERM_M     TYPE DZTERM,     "支払条件(LFM1)
SPERM_M     TYPE SPERM_M,    "購買ブロック(LFM1)
SUBCONTACT  TYPE CHAR1,      "下請法
END   OF TYP_LFA1,
T_TYP_LFA1   TYPE STANDARD TABLE OF TYP_LFA1.
* ALV一覧用
TYPES:BEGIN OF TYP_OUTPUT,
SUBCONTACT  TYPE CHAR1,     "下請法
SPERM       TYPE SPERM_M,   "購買ブロック
LIFNR       TYPE LIFNR,     "仕入先コード
NAME1       TYPE NAME1_GP,  "名称
ZWELS       TYPE DZWELS,    "方法
ZTERM       TYPE DZTERM,    "条件
ZTERM_M     TYPE DZTERM,    "ｻｲﾄ
CZFBDT      TYPE ZNECZFBDT, "締日
PZFBDT      TYPE ZNEPZFBDT, "支払日
PZLSCH      TYPE AS4TEXT,   "支払手段
PZTERM      TYPE ZNEPZTERM, "ｻｲﾄ
WAERS       TYPE WAERS,     "通貨コード
PWRBTR      TYPE ZNEPWRBTR, "支払予定額
PADVNC      TYPE ZNEPADVNC, "前渡金決済
PKUNNR      TYPE ZNEPKUNNR, "相殺得意先
PLIFNR      TYPE ZNEPLIFNR, "振替仕入先
SHIHARAI    TYPE CHAR2,     "支払
GJAHR       TYPE GJAHR,     "会計年度
BELNR       TYPE BELNR_D,   "伝票番号
PMEMO       TYPE ZNEMEMO,   "メモ
EKORG       TYPE EKORG,     "購買組織
END   OF TYP_OUTPUT,
T_TYP_OUTPUT  TYPE STANDARD TABLE OF TYP_OUTPUT.
TYPES:BEGIN OF TYP_DOMAIN,
DOMNAME     TYPE DOMNAME,   "ドメイン名
DDTEXT      TYPE VAL_TEXT,  "ドメイン値テキスト
DOMVALUE_L  TYPE DOMVALUE_L, "ドメイン値
END   OF TYP_DOMAIN,
T_TYP_DOMAIN TYPE STANDARD TABLE OF TYP_DOMAIN.
*----------------------------------------------------------------------*
*   内部テーブル定義
*----------------------------------------------------------------------*
DATA: T_ZN002   TYPE T_TYP_ZN002,     "支払予定（仕入）データ取得用
T_LFA1    TYPE T_TYP_LFA1,      "仕入先マスタデータ取得用
T_OUTPUT  TYPE T_TYP_OUTPUT,    "ALV一覧データ
W_OUTPUT  TYPE TYP_OUTPUT,
T_DOMAIN  TYPE T_TYP_DOMAIN.    "ドメイン値テキスト取得用
* PGID退避用
DATA: G_PGID     TYPE SYCPROG.
* ALV出力用
TYPE-POOLS SLIS.
DATA: W_LAYOUT      TYPE SLIS_LAYOUT_ALV,     "ALV出力レイアウト
W_FIELDCAT    TYPE SLIS_FIELDCAT_ALV,   "ALV出力項目設定
T_FIELDCAT    TYPE SLIS_T_FIELDCAT_ALV, "ALV出力項目設定
W_REPID       TYPE SY-REPID,            "ALV出力用：プログラムID
W_EDISVARIANT TYPE DISVARIANT,          "ALV出力バリアント
T_EVENT       TYPE SLIS_T_EVENT,        "イベント
W_EVENT       LIKE LINE OF T_EVENT,
T_HEAD        TYPE SLIS_T_LISTHEADER,   "ヘッダ
W_HEAD        LIKE LINE OF T_HEAD,
W_PRINT       TYPE SLIS_PRINT_ALV.
* 下請法検索ヘルプ用
DATA: BEGIN OF TBL_HELP OCCURS 0,
FLAG    TYPE CHAR01,
TEXT    TYPE TEXT20,
END OF TBL_HELP.
*----------------------------------------------------------------------*
*   定数定義
*----------------------------------------------------------------------*
CONSTANTS:
C_ON         TYPE C     VALUE 'X',
C_SIGN       TYPE CHAR1 VALUE 'I',
C_OPTION     TYPE CHAR2 VALUE 'EQ',
* ドメインテキストを取得するドメイン
C_DOMAIN     TYPE DOMNAME VALUE 'ZNDPZLSCH'.
*----------------------------------------------------------------------*
*   テーブル定義(選択画面用)
*----------------------------------------------------------------------*
TABLES:ZN002, LFM1.
*----------------------------------------------------------------------*
*   選択画面
*----------------------------------------------------------------------*
* データ選択
SELECTION-SCREEN:BEGIN OF BLOCK BL1 WITH FRAME TITLE TEXT-001.
PARAMETERS:P_BUK    TYPE BUKRS OBLIGATORY.       "会社コード
SELECT-OPTIONS:P_CZFBDT   FOR ZN002-CZFBDT.      "締日
SELECT-OPTIONS:P_PZFBDT   FOR ZN002-PZFBDT.      "支払日
SELECT-OPTIONS:P_LIFNR    FOR ZN002-LIFNR.       "仕入先(請求先)
SELECT-OPTIONS:P_WAERS    FOR ZN002-WAERS        "通貨コード
NO INTERVALS.
SELECT-OPTIONS:P_PZLSCH   FOR ZN002-PZLSCH       "支払方法
NO INTERVALS.
SELECT-OPTIONS:P_SUBCON   FOR W_OUTPUT-SUBCONTACT "下請法
NO INTERVALS.
SELECT-OPTIONS:P_SPERM    FOR LFM1-SPERM         "購買ブロック
NO INTERVALS.
SELECTION-SCREEN:BEGIN OF LINE,
COMMENT 1(10) TEXT-002 FOR FIELD P_MI,
POSITION 25.
PARAMETERS:P_MI  AS CHECKBOX.
SELECTION-SCREEN:END   OF LINE.
SELECTION-SCREEN:END   OF BLOCK BL1.

* 処理オプション
SELECTION-SCREEN:BEGIN OF BLOCK BL2 WITH FRAME TITLE TEXT-003.
* ALVバリアント項目
PARAMETERS:P_VARI   TYPE SLIS_VARI.
SELECTION-SCREEN:END   OF BLOCK BL2.

* システム項目
SELECTION-SCREEN:BEGIN OF BLOCK BL3 WITH FRAME TITLE TEXT-004.
PARAMETERS:P_SHIHON   TYPE CDCURR0 OBLIGATORY.   "資本金
PARAMETERS:P_EKORG    TYPE EKORG OBLIGATORY.     "購買組織
SELECTION-SCREEN:END   OF BLOCK BL3.

TYPE-POOLS:SSCR.
*----------------------------------------------------------------------*
*  INITIALIZATION
*----------------------------------------------------------------------*
INITIALIZATION.
*---選択画面の複数入力ボタン制御
PERFORM BUTTON_CONTROL.
*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
PERFORM F_DATA_CHECK.
*&---------------------------------------------------------------------*
*&   Event AT SELECTION-SCREEN ON VALUE-REQUEST
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_SUBCON-LOW.
PERFORM F4_INPUT_SUBCON.
*----------------------------------------------------------------------*
*    バリアント検索ヘルプ
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VARI.
PERFORM VARIANT_F4_HELP  CHANGING P_VARI.
*----------------------------------------------------------------------*
*    ALVヘッダをつける場合
*----------------------------------------------------------------------*
TOP-OF-PAGE.
PERFORM HEADER_WRITE.
*  PERFORM HEADER_WRITE2.
*----------------------------------------------------------------------*
* START-OF-SELECTION.
*----------------------------------------------------------------------*
START-OF-SELECTION.

* 初期化処理
PERFORM INIT_SYORI.
* ZN002データ取得
PERFORM GET_DATA_ZN002.
CHECK NOT T_ZN002 IS INITIAL.
* 仕入先マスタ情報取得
PERFORM GET_DATA_LIFNR.
* データ編集
PERFORM EDIT_ALV.
* ALVリスト出力
PERFORM OUTPUT_ALV.

*&---------------------------------------------------------------------*
*&      Form  BUTTON_CONTROL
*&---------------------------------------------------------------------*
*       選択画面の複数ボタン制御
*----------------------------------------------------------------------*
FORM BUTTON_CONTROL.
DATA:L_WA_RES        TYPE SSCR_RESTRICT,
L_WA_OPT_LIST   TYPE SSCR_OPT_LIST,
L_WA_ASS        TYPE SSCR_ASS.
DATA:OPTL TYPE SSCR_OPT_LIST.

* 共通設定
L_WA_OPT_LIST-NAME       = 'JUST_EQ'.
L_WA_OPT_LIST-OPTIONS-EQ = 'X'.
APPEND L_WA_OPT_LIST TO L_WA_RES-OPT_LIST_TAB.

L_WA_ASS-KIND    = 'S'.
L_WA_ASS-SG_MAIN = 'I'.
L_WA_ASS-OP_MAIN = 'JUST_EQ'.

* 通貨コード
L_WA_ASS-NAME    = 'P_WAERS'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.
* 支払方法
L_WA_ASS-NAME    = 'P_PZLSCH'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.
* 下請法
L_WA_ASS-NAME    = 'P_SUBCON'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.
* 購買ブロック
L_WA_ASS-NAME    = 'P_SPERM'.
APPEND L_WA_ASS TO L_WA_RES-ASS_TAB.

* 実行
CALL FUNCTION 'SELECT_OPTIONS_RESTRICT'
EXPORTING
RESTRICTION = L_WA_RES.

ENDFORM.                    " BUTTON_CONTROL
*&---------------------------------------------------------------------*
*&      Form  F4_INPUT_SUBCON
*&---------------------------------------------------------------------*
*       下請法検索ヘルプ
*----------------------------------------------------------------------*
FORM F4_INPUT_SUBCON.
DATA: LW_HELP   LIKE LINE OF TBL_HELP,
L_REPID   LIKE SY-REPID.

* 検索ヘルプデータ作成
LW_HELP-FLAG  = SPACE.
LW_HELP-TEXT = TEXT-005.
APPEND LW_HELP TO TBL_HELP.
LW_HELP-FLAG  = C_ON.
LW_HELP-TEXT = TEXT-006.
APPEND LW_HELP TO TBL_HELP.

L_REPID = SY-REPID.
* 検索ヘルプ表示
CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
EXPORTING
RETFIELD               = 'FLAG'
DYNPPROG               = L_REPID
DYNPNR                 = SY-DYNNR
DYNPROFIELD            = 'P_SUBCON-LOW'
VALUE_ORG              = 'S'
TABLES
VALUE_TAB              = TBL_HELP
EXCEPTIONS
PARAMETER_ERROR        = 1
NO_VALUES_FOUND        = 2
OTHERS                 = 3.

ENDFORM.                    " F4_INPUT_SUBCON
*&---------------------------------------------------------------------*
*&      Form  F_DATA_CHECK
*&---------------------------------------------------------------------*
*       選択画面入力チェック
*----------------------------------------------------------------------*
FORM F_DATA_CHECK.
DATA:LW_BUKRS  TYPE BUKRS.

* 複数選択ボタン押下時はチェックしない
IF SY-UCOMM+0(1) <> '%'.
*   会社コード存在チェック
SELECT SINGLE BUKRS
INTO LW_BUKRS
FROM T001
WHERE BUKRS = P_BUK.
IF SY-SUBRC <> 0.
MESSAGE E685(Y1) WITH P_BUK.
ENDIF.

*   締日入力チェック
IF P_CZFBDT[] IS INITIAL.
MESSAGE E006(Y1) WITH TEXT-E01.
ENDIF.

*   支払日入力チェック
IF P_PZFBDT[] IS INITIAL.
MESSAGE E006(Y1) WITH TEXT-E02.
ENDIF.

ENDIF.
ENDFORM.                    " F_DATA_CHECK
*&---------------------------------------------------------------------*
*&      Form  VARIANT_F4_HELP
*&---------------------------------------------------------------------*
*       バリアント検索ヘルプ
*----------------------------------------------------------------------*
*      <--P_P_VARI  検索ヘルプで選択されたバリアント名
*----------------------------------------------------------------------*
FORM VARIANT_F4_HELP CHANGING P_P_VARI.
DATA:LW_VARI   TYPE SLIS_VARI.  "属性変換用

G_PGID = SY-REPID.
* ALVバリアントの検索ヘルプ
CALL FUNCTION 'HR_F4_FOR_ALV_VARIANT'
EXPORTING
CURRENT_REPORT       = G_PGID
IMPORTING
VARIANT              = LW_VARI.

* ヘルプ画面より選択されたバリアント名を画面項目に設定
IF NOT LW_VARI IS INITIAL.
P_P_VARI = LW_VARI.
ENDIF.

ENDFORM.                    " VARIANT_F4_HELP
*&---------------------------------------------------------------------*
*&      Form  HEADER_WRITE
*&---------------------------------------------------------------------*
*       ALVヘッダ編集
*----------------------------------------------------------------------*
FORM HEADER_WRITE.
DATA:LW_WORK   TYPE CHAR100,
LW_PAGNO(4) TYPE C.
*--- タイトル
PERFORM SET_HEADER USING 'H' '支払予定一覧兼支払実績表' SPACE.

*--- ページ
CLEAR: LW_WORK,LW_PAGNO.
LW_PAGNO = SY-PAGNO.
CONDENSE LW_PAGNO.
CONCATENATE 'ページ　：'
LW_PAGNO
INTO LW_WORK.
PERFORM SET_HEADER USING 'S' SPACE LW_WORK.

*--- 処理日付
CLEAR LW_WORK.
CONCATENATE '処理日付：'
SY-DATUM+0(4) '/'
SY-DATUM+4(2) '/'
SY-DATUM+6(2)
INTO LW_WORK.
PERFORM SET_HEADER USING 'S' SPACE LW_WORK.

*--- 処理時刻
CLEAR LW_WORK.
CONCATENATE '処理時刻：'
SY-UZEIT+0(2) ':'
SY-UZEIT+2(2) ':'
SY-UZEIT+4(2)
INTO LW_WORK.
PERFORM SET_HEADER USING 'S' SPACE LW_WORK.

*--- ユーザID
CLEAR LW_WORK.
CONCATENATE 'ユーザID：' SY-UNAME INTO LW_WORK.
PERFORM SET_HEADER USING 'S' SPACE LW_WORK.



*--- 締日(選択画面の画面表示されているデータをヘッダに出力)
READ TABLE P_CZFBDT INDEX 1.
PERFORM EDIT_HEADER_DATE    USING P_CZFBDT-LOW
P_CZFBDT-HIGH
TEXT-010
CHANGING LW_WORK.
PERFORM SET_HEADER USING 'S' LW_WORK '<<実行条件>>'.
CLEAR:LW_WORK.

*--- 支払日(選択画面の画面表示されているデータをヘッダに出力)
READ TABLE P_PZFBDT INDEX 1.
PERFORM EDIT_HEADER_DATE    USING P_PZFBDT-LOW
P_PZFBDT-HIGH
TEXT-011
CHANGING LW_WORK.
PERFORM SET_HEADER USING 'S' LW_WORK SPACE.
CLEAR:LW_WORK.

* ヘッダ出力
CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
EXPORTING
IT_LIST_COMMENTARY       = T_HEAD.

CLEAR:T_HEAD.

ENDFORM.                    " HEADER_WRITE
*&---------------------------------------------------------------------*
*&      Form  EDIT_HEADER_DATE
*&---------------------------------------------------------------------*
*       画面出力用文言の編集
*----------------------------------------------------------------------*
*      -->P_LW_FROM    レンジテーブルFROM値
*      -->P_LW_TO      レンジテーブルTO値
*      <--P_LW_WORK    編集した文言
*----------------------------------------------------------------------*
FORM EDIT_HEADER_DATE USING    P_LW_FROM
P_LW_TO
P_TEXT
CHANGING P_LW_WORK.
DATA:LW_FROM_D TYPE DATUM,        "FROM値 日付属性
LW_TO_D   TYPE DATUM,        "TO値 日付属性
LW_FROM   TYPE CHAR10,       "FROM YYYY/MM/DD出力用
LW_TO     TYPE CHAR10.       "TO YYYY/MM/DD出力用

* 日付属性に設定しなおす
LW_FROM_D = P_LW_FROM.
LW_TO_D   = P_LW_TO.
* FROM値
IF NOT LW_FROM_D IS INITIAL.
WRITE LW_FROM_D TO LW_FROM.
ENDIF.
* TO値
IF NOT LW_TO_D IS INITIAL.
WRITE LW_TO_D TO LW_TO.
ENDIF.

* YYYY/MM/DD 〜 YYYY/MM/DD
IF  NOT LW_FROM IS INITIAL
AND NOT LW_TO   IS INITIAL.
CONCATENATE P_TEXT LW_FROM TEXT-009 LW_TO
INTO P_LW_WORK.
ENDIF.
* YYYY/MM/DDのみ
IF  NOT LW_FROM IS INITIAL
AND     LW_TO   IS INITIAL.
CONCATENATE P_TEXT LW_FROM
INTO P_LW_WORK.
ENDIF.
* 〜 YYYY/MM/DD
IF      LW_FROM IS INITIAL
AND NOT LW_TO   IS INITIAL.
CONCATENATE P_TEXT TEXT-009 LW_TO
INTO P_LW_WORK.
ENDIF.

ENDFORM.                    " EDIT_HEADER_DATE
*&---------------------------------------------------------------------*
*&      Form  SET_HEADER
*&---------------------------------------------------------------------*
*       ヘッダ編集
*----------------------------------------------------------------------*
*      -->L_TYP    タイプ
*      -->L_INFO   編集内容
*----------------------------------------------------------------------*
FORM SET_HEADER  USING     L_TYP
L_INFO
L_KEY.
CLEAR W_HEAD.
W_HEAD-TYP  = L_TYP.
W_HEAD-key = L_KEY.
W_HEAD-INFO = L_INFO.
APPEND W_HEAD TO T_HEAD.

ENDFORM.                    " SET_HEADER
*&---------------------------------------------------------------------*
*&      Form  INIT_SYORI
*&---------------------------------------------------------------------*
*       初期化処理
*----------------------------------------------------------------------*
FORM INIT_SYORI.

CLEAR:T_ZN002, T_LFA1, T_OUTPUT.

ENDFORM.                    " INIT_SYORI
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_ZN002
*&---------------------------------------------------------------------*
*       ZN002データ取得
*----------------------------------------------------------------------*
FORM GET_DATA_ZN002.
DATA:T_PSTFLG  TYPE RANGE OF ZNEPSTFLG,
LW_PSTFLG LIKE LINE OF T_PSTFLG.
IF P_MI = C_ON.
LW_PSTFLG-SIGN = C_SIGN.
LW_PSTFLG-OPTION = C_OPTION.
LW_PSTFLG-LOW = SPACE.
APPEND LW_PSTFLG TO T_PSTFLG.
ENDIF.

SELECT *
INTO TABLE T_ZN002
FROM ZN002
WHERE BUKRS = P_BUK
AND LIFNR IN P_LIFNR
AND CZFBDT IN P_CZFBDT
AND PZFBDT IN P_PZFBDT
AND PZLSCH IN P_PZLSCH
AND WAERS  IN P_WAERS
AND PSTFLG IN T_PSTFLG.

IF SY-SUBRC = 0.
SORT T_ZN002 BY LIFNR CZFBDT PZFBDT.
ELSE.
MESSAGE I204(Y1).
ENDIF.

ENDFORM.                    " GET_DATA_ZN002
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_LIFNR
*&---------------------------------------------------------------------*
*       仕入先マスタ情報取得
*----------------------------------------------------------------------*
FORM GET_DATA_LIFNR.
DATA:LT_ZN002   TYPE T_TYP_ZN002.

* 会社コード/仕入先の重複を削除
LT_ZN002[] = T_ZN002[].
SORT LT_ZN002 BY BUKRS LIFNR.
DELETE ADJACENT DUPLICATES FROM LT_ZN002
COMPARING BUKRS LIFNR.

* 仕入先マスタの情報を取得
SELECT LFA1~LIFNR        "仕入先コード
LFA1~NAME1        "名称１
LFA1~SPERM        "購買ブロック
LFB1~BUKRS        "会社コード
LFB1~ZWELS        "支払方法
LFB1~ZTERM        "支払条件
LFB1~TLFNS        "資本金
LFM1~EKORG        "購買組織
LFM1~ZTERM        "支払条件
LFM1~SPERM        "購買ブロック
INTO TABLE T_LFA1
FROM LFA1 INNER JOIN LFB1
ON LFA1~LIFNR = LFB1~LIFNR
INNER JOIN LFM1
ON LFA1~LIFNR = LFM1~LIFNR
FOR ALL ENTRIES IN LT_ZN002
WHERE LFA1~LIFNR = LT_ZN002-LIFNR
AND LFB1~BUKRS = LT_ZN002-BUKRS
AND LFM1~EKORG = P_EKORG.

IF SY-SUBRC = 0.
SORT T_LFA1 BY LIFNR BUKRS.
ENDIF.

ENDFORM.                    " GET_DATA_LIFNR
*&---------------------------------------------------------------------*
*&      Form  EDIT_ALV
*&---------------------------------------------------------------------*
*       データ編集
*----------------------------------------------------------------------*
FORM EDIT_ALV.

* 下請法の編集
PERFORM EDIT_SUBCONTACT.
* ドメイン値テキストの取得
PERFORM GET_DOMAIN_T.
* ALVデータ編集
PERFORM MAKE_OUTPUT_DATA.

ENDFORM.                    " EDIT_ALV
*&---------------------------------------------------------------------*
*&      Form  EDIT_SUBCONTACT
*&---------------------------------------------------------------------*
*       下請法のフラグ編集
*----------------------------------------------------------------------*
FORM EDIT_SUBCONTACT.
DATA:LT_LFA1   TYPE T_TYP_LFA1,
LW_LFA1   TYPE TYP_LFA1,
LW_FIELD  TYPE CHAR30,
LW_HTYPE  TYPE DATATYPE_D,
LW_NUMC(5) TYPE P.     "数値項目

* ローカル内部テーブルに仕入先マスタデータをコピー
LT_LFA1[] = T_LFA1[].
CLEAR:T_LFA1.

* ローカル内部テーブルを基に下請法を編集し、内部テーブルに格納
LOOP AT LT_LFA1 INTO LW_LFA1.
LW_FIELD = LW_LFA1-TLFNS.     "資本金項目の内容をコピー
*   カンマを削除
TRANSLATE LW_FIELD USING ', '.
CONDENSE LW_FIELD NO-GAPS.

*   数値のみかどうかをチェック
CALL FUNCTION 'NUMERIC_CHECK'
EXPORTING
STRING_IN        = LW_FIELD
IMPORTING
*       STRING_OUT       =
HTYPE            = LW_HTYPE.

*   数値の場合
IF LW_HTYPE = 'NUMC'.
LW_NUMC = LW_FIELD.
*     選択画面の資本金以下の場合は下請法適用仕入先
IF LW_NUMC <= P_SHIHON.
LW_LFA1-SUBCONTACT = C_ON.
*     選択画面の資本金より大きい場合は下請法適用外仕入先
ELSE.
LW_LFA1-SUBCONTACT = SPACE.
ENDIF.
*   文字列の場合
ELSE.
LW_LFA1-SUBCONTACT = SPACE.
ENDIF.

*   仕入先マスタデータ内部テーブルに格納
APPEND LW_LFA1 TO T_LFA1.
ENDLOOP.

ENDFORM.                    " EDIT_SUBCONTACT
*&---------------------------------------------------------------------*
*&      Form  GET_DOMAIN_T
*&---------------------------------------------------------------------*
*       ドメイン値テキストの取得
*----------------------------------------------------------------------*
FORM GET_DOMAIN_T.

* ドメイン値テキストを取得
SELECT DOMNAME
DDTEXT
DOMVALUE_L
INTO TABLE T_DOMAIN
FROM DD07T
WHERE DOMNAME = C_DOMAIN
AND DDLANGUAGE = SY-LANGU.

* 取得した場合は検索用にソートする
IF SY-SUBRC = 0.
SORT T_DOMAIN BY DOMNAME DOMVALUE_L.
ENDIF.

ENDFORM.                    " GET_DOMAIN_T
*&---------------------------------------------------------------------*
*&      Form  MAKE_OUTPUT_DATA
*&---------------------------------------------------------------------*
*       ALV一覧用データの作成
*----------------------------------------------------------------------*
FORM MAKE_OUTPUT_DATA.
DATA:LW_LFA1     TYPE TYP_LFA1,
LW_ZN002    TYPE ZN002,
LW_FLG_OK   TYPE CHAR1,
LW_DOMAIN   TYPE TYP_DOMAIN.

LOOP AT T_ZN002 INTO LW_ZN002.
CLEAR:LW_LFA1, W_OUTPUT,LW_FLG_OK,LW_DOMAIN.

*   仕入先マスタ情報の読込
READ TABLE T_LFA1 INTO LW_LFA1
WITH KEY LIFNR = LW_ZN002-LIFNR
BUKRS = LW_ZN002-BUKRS
BINARY SEARCH.
*   購買ブロックの編集
IF LW_LFA1-SPERM = C_ON
OR LW_LFA1-SPERM_M = C_ON.
W_OUTPUT-SPERM = C_ON.
ENDIF.
*   購買ブロックの条件チェック
IF W_OUTPUT-SPERM IN P_SPERM.
*     下請法の条件チェック
IF LW_LFA1-SUBCONTACT IN P_SUBCON.
LW_FLG_OK = C_ON.
ENDIF.
ENDIF.

CHECK LW_FLG_OK = C_ON.
W_OUTPUT-SUBCONTACT = LW_LFA1-SUBCONTACT.  "下請法
W_OUTPUT-LIFNR       = LW_ZN002-LIFNR.     "仕入先
W_OUTPUT-NAME1       = LW_LFA1-NAME1.      "仕入先名
W_OUTPUT-ZWELS       = LW_LFA1-ZWELS.      "方法
W_OUTPUT-ZTERM       = LW_LFA1-ZTERM.      "条件
W_OUTPUT-ZTERM_M     = LW_LFA1-ZTERM_M.    "ｻｲﾄ
W_OUTPUT-CZFBDT      = LW_ZN002-CZFBDT.    "締日
W_OUTPUT-PZFBDT      = LW_ZN002-PZFBDT.    "支払日
W_OUTPUT-PZTERM      = LW_ZN002-PZTERM.    "支払方法
W_OUTPUT-WAERS       = LW_ZN002-WAERS.     "通貨コード
W_OUTPUT-PWRBTR      = LW_ZN002-PWRBTR.    "支払予定額
W_OUTPUT-PADVNC      = LW_ZN002-PADVNC.    "前渡金決済
W_OUTPUT-PKUNNR      = LW_ZN002-PKUNNR.    "相殺得意先
W_OUTPUT-PLIFNR      = LW_ZN002-PLIFNR.    "振替仕入先
W_OUTPUT-GJAHR       = LW_ZN002-GJAHR.     "会計年度
W_OUTPUT-BELNR       = LW_ZN002-BELNR.     "伝票番号
W_OUTPUT-PMEMO       = LW_ZN002-PMEMO.     "メモ
W_OUTPUT-EKORG       = LW_LFA1-EKORG.     "購買組織
*   支払手段のテキスト設定
READ TABLE T_DOMAIN INTO LW_DOMAIN
WITH KEY DOMNAME    = C_DOMAIN
DOMVALUE_L = LW_ZN002-PZLSCH.
IF SY-SUBRC = 0.
W_OUTPUT-PZLSCH      = LW_DOMAIN-DDTEXT.
ENDIF.
*   支払のテキスト設定
IF LW_ZN002-PSTFLG = C_ON.
W_OUTPUT-SHIHARAI    = TEXT-007.
ELSE.
W_OUTPUT-SHIHARAI    = TEXT-008.
ENDIF.
APPEND W_OUTPUT TO T_OUTPUT.
ENDLOOP.

ENDFORM.                    " MAKE_OUTPUT_DATA
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_ALV
*&---------------------------------------------------------------------*
*       ALVリスト出力
*----------------------------------------------------------------------*
FORM OUTPUT_ALV.

* 項目属性編集
PERFORM ALV_SET_FIELDCAT.
* その他編集
PERFORM ALV_LAYOUT.
* ALV一覧出力
PERFORM ALV_CALL.

ENDFORM.                    " OUTPUT_ALV
*&---------------------------------------------------------------------*
*&      Form  ALV_SET_FIELDCAT
*&---------------------------------------------------------------------*
*       項目属性編集
*----------------------------------------------------------------------*
FORM ALV_SET_FIELDCAT.
* PGID退避
G_PGID = SY-REPID.

* 項目名を編集する
PERFORM SET_FIELDCAT USING 'SUBCONTACT'     "項目ID
'下請法'         "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
4                "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'SPERM'          "項目ID
'購買ブロック'   "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
4                "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'LIFNR'          "項目ID
'仕入先コード'   "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
10               "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'NAME1'          "項目ID
'仕入先名称'     "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
20               "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'ZWELS'          "項目ID
'方法(ﾏｽﾀ)'      "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
6                "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'ZTERM'          "項目ID
'条件(ﾏｽﾀ)'      "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
6                "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'ZTERM_M'        "項目ID
'ｻｲﾄ(ﾏｽﾀ)'       "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
6                "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'CZFBDT'         "項目ID
'締日'           "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
10               "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'PZFBDT'         "項目ID
'支払日'         "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
10               "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'PZLSCH'         "項目ID
'支払手段'       "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
15               "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'PZTERM'         "項目ID
'ｻｲﾄ'            "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
4                "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'WAERS'          "項目ID
'通貨'           "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
4                "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'PWRBTR'         "項目ID
'支払予定額'     "項目テキスト
C_ON             "金額項目フラグ
16               "データ長
18               "出力データ長(カンマ含む)
'WAERS'.         "通貨参照項目
PERFORM SET_FIELDCAT USING 'PADVNC'         "項目ID
'前渡金決済'     "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
4                "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'PKUNNR'         "項目ID
'相殺得意先'     "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
10               "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'PLIFNR'         "項目ID
'名寄仕入先'     "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
10               "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'SHIHARAI'       "項目ID
'支払'           "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
4                "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'GJAHR'          "項目ID
'会計年度'       "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
10               "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'BELNR'          "項目ID
'伝票番号'       "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
10               "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'PMEMO'          "項目ID
'コメント'       "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
10               "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
PERFORM SET_FIELDCAT USING 'EKORG'          "項目ID
'購買組織'       "項目テキスト
SPACE            "金額項目フラグ
SPACE            "データ長
4                "出力データ長(カンマ含む)
SPACE.           "通貨参照項目
ENDFORM.                    " ALV_SET_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  SET_FIELDCAT
*&---------------------------------------------------------------------*
*       FIELD CATALOGの編集
*----------------------------------------------------------------------*
*      -->P_FIELDNAME     項目ID
*      -->P_FIELDTEXT     項目テキスト(見出し)
*      -->P_CURR_FLG      金額項目フラグ('X'->金額、SPACE->金額以外)
*      -->P_INTLEN        金額項目の桁数(数値のみ)
*      -->P_OUTPUTLEN     金額項目の出力桁数(カンマ、小数点、符号含む)
*      -->P_CFIELD        金額項目の場合参照する通貨項目名
*----------------------------------------------------------------------*
FORM SET_FIELDCAT USING    P_FIELDNAME
P_FIELDTEXT
P_CURR_FLG   "金額項目時に使用
P_INTLEN     "金額項目時に使用
P_OUTPUTLEN  "金額項目時に使用
P_CFIELD.    "金額項目時に使用
DATA:W_FIELDCAT TYPE SLIS_FIELDCAT_ALV.

* 見出し設定
IF NOT P_FIELDTEXT IS INITIAL.
W_FIELDCAT-FIELDNAME = P_FIELDNAME.       "項目ID
W_FIELDCAT-SELTEXT_L = P_FIELDTEXT.       "項目テキスト
W_FIELDCAT-DDICTXT   = 'L'.               "出力名長
W_FIELDCAT-OUTPUTLEN = P_OUTPUTLEN.    "出力データ長
ENDIF.

* 項目が金額項目
IF P_CURR_FLG = 'X'.
W_FIELDCAT-DATATYPE   = 'CURR'.         "データ型
W_FIELDCAT-INTTYPE    = 'P'.            "数値のデータ型
W_FIELDCAT-INTLEN     = P_INTLEN.       "データ長
W_FIELDCAT-CFIELDNAME = P_CFIELD.       "通貨参照項目
ENDIF.

APPEND W_FIELDCAT TO T_FIELDCAT.

ENDFORM.                    " SET_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  ALV_LAYOUT
*&---------------------------------------------------------------------*
*       その他編集
*----------------------------------------------------------------------*
FORM ALV_LAYOUT.

* プログラムID取得
W_REPID = SY-REPID.
* レイアウト設定
*  W_LAYOUT-COLWIDTH_OPTIMIZE    = 'X'.  "ALV コントロール: 列幅の最適化
W_LAYOUT-DETAIL_INITIAL_LINES = 'X'.
W_LAYOUT-ZEBRA                = 'X'.
w_layout-group_change_edit = 'X'.
W_LAYOUT-GROUP_CHANGE_EDIT = 'X'.

* バリアント
IF NOT P_VARI IS INITIAL.
W_EDISVARIANT-REPORT  = G_PGID.
W_EDISVARIANT-VARIANT = P_VARI.
ENDIF.

* ALV印刷時用 設定項目
W_PRINT-NO_PRINT_LISTINFOS = 'X'.


* 処理イベントの取得
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
I_LIST_TYPE           = 0
IMPORTING
ET_EVENTS             = T_EVENT.

* イベント時にコールされるFORM名を設定
CLEAR W_EVENT.
READ TABLE T_EVENT INTO W_EVENT WITH KEY NAME = 'TOP_OF_PAGE'.
IF SY-SUBRC = 0.
W_EVENT-FORM = 'HEADER_WRITE'.
MODIFY T_EVENT INDEX SY-TABIX FROM W_EVENT.
ENDIF.
read table t_event with key name = 'TOP_OF_LIST' into w_event.
w_event-form = 'TOP_OF_LIST'.
modify t_event from w_event index sy-tabix.

* イベント時にコールされるFORM名を設定
CLEAR W_EVENT.
READ TABLE T_EVENT INTO W_EVENT WITH KEY NAME = 'USER_COMMAND'.
IF SY-SUBRC = 0.
W_EVENT-FORM = 'USER_COMMAND'.
MODIFY T_EVENT INDEX SY-TABIX FROM W_EVENT.
ENDIF.


ENDFORM.                    " ALV_LAYOUT
*&---------------------------------------------------------------------*
*&      Form  ALV_CALL
*&---------------------------------------------------------------------*
*       ALV一覧出力
*----------------------------------------------------------------------*
FORM ALV_CALL.

CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
*  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM      = W_REPID     "プログラム名
IS_LAYOUT               = W_LAYOUT    "レイアウト定義
IS_PRINT                = W_PRINT
IT_FIELDCAT             = T_FIELDCAT  "構造定義
I_DEFAULT               = 'X'
I_SAVE                  = 'A'
IS_VARIANT              = W_EDISVARIANT
IT_EVENTS               = T_EVENT
TABLES
T_OUTTAB                = T_OUTPUT     "出力データ
EXCEPTIONS
PROGRAM_ERROR           = 1
OTHERS                  = 2.

IF SY-SUBRC <> 0.
MESSAGE S400 WITH 'システムエラーが発生しました'.
STOP.
ENDIF.

ENDFORM.                    " ALV_CALL
*&---------------------------------------------------------------------*
*&      Form  USER_COMMAND
*&---------------------------------------------------------------------*
*       ユーザコマンド
*----------------------------------------------------------------------*
FORM USER_COMMAND USING P_UCOMM  TYPE SYUCOMM
P_INFO   TYPE SLIS_SELFIELD.
DATA:LW_OUTPUT   TYPE TYP_OUTPUT.
DATA:T_BDC   TYPE TABLE OF BDCDATA,
W_BDC   TYPE BDCDATA.

READ TABLE T_OUTPUT INTO LW_OUTPUT
INDEX P_INFO-TABINDEX.

IF NOT LW_OUTPUT-BELNR IS INITIAL.
SET PARAMETER ID 'BLN' FIELD LW_OUTPUT-BELNR.
SET PARAMETER ID 'GJR' FIELD LW_OUTPUT-GJAHR.
CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.
ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  HEADER_WRITE2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*FORM HEADER_WRITE2.
*  data:lw_work    type text60,
*       lw_work2   type text60,
*       lw_work3   type text60,
*       lw_work4   type text60,
*       LW_PAGNO(4) TYPE C.
**--- タイトル
*  lw_work2+0(24) = '支払予定一覧兼支払実績表' .
*  PERFORM SET_HEADER USING 'H' lw_work2.
*LW_PAGNO = SY-PAGNO.
*  CONCATENATE 'ユーザID：' SY-UNAME INTO LW_WORK3.
*  CONCATENATE 'ページ：'
*                LW_PAGNO
*           INTO LW_WORK2.
*  lw_work4+0(21) = LW_WORK3.
*  lw_work4+30(21) = LW_WORK2.
*  PERFORM SET_HEADER USING 'S' LW_WORK4.
*  clear:LW_WORK4.
*
**--- 処理日付
*  CLEAR LW_WORK.
*    CONCATENATE '処理日付：'
*                SY-DATUM+0(4) '/'
*                SY-DATUM+4(2) '/'
*                SY-DATUM+6(2)
*           INTO LW_WORK.
*
*    CONCATENATE '処理時刻：'
*                SY-UZEIT+0(2) ':'
*                SY-UZEIT+2(2) ':'
*                SY-UZEIT+4(2)
*           INTO LW_WORK2.
*
*  lw_work4+0(21) = lw_work.
*  lw_work4+30(21) = lw_work2.
*  PERFORM SET_HEADER USING 'S' LW_WORK4.
*
*  clear:lw_work4.
*  lw_work4 = '<<抽出条件>>'.
*  PERFORM SET_HEADER USING 'S' LW_WORK4.
*
**--- 締日(選択画面の画面表示されているデータをヘッダに出力)
*  READ TABLE P_CZFBDT INDEX 1.
*  PERFORM EDIT_HEADER_DATE    USING P_CZFBDT-LOW
*                                    P_CZFBDT-HIGH
*                                    TEXT-010
*                           CHANGING LW_WORK.
*
**--- 支払日(選択画面の画面表示されているデータをヘッダに出力)
*  READ TABLE P_PZFBDT INDEX 1.
*  PERFORM EDIT_HEADER_DATE    USING P_PZFBDT-LOW
*                                    P_PZFBDT-HIGH
*                                    TEXT-011
*                           CHANGING LW_WORK2.
*  lw_work4+0(21) = lw_work.
*  lw_work4+30(21) = lw_work2.
*
*  PERFORM SET_HEADER USING 'S' LW_WORK4.
*  CLEAR:LW_WORK.
*
** ヘッダ出力
*  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
*    EXPORTING
*      IT_LIST_COMMENTARY       = T_HEAD.
*
*  CLEAR:T_HEAD.
*
*ENDFORM.                    " HEADER_WRITE2

form top_of_list.

endform.
