***INCLUDE BDCRECX1.
*  for programs doing a data transfer by creating a batch-input session
*  and
*  for programs doing a data transfer by CALL TRANSACTION USING
*&--------------------------------------------------------------------*
*& 2011/02/24 グレードダウン対応あり
*&            VersionUp対応時に元に戻す
*&--------------------------------------------------------------------*

SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS CTU RADIOBUTTON GROUP R_CT DEFAULT 'X'.  "calltransaction
SELECTION-SCREEN COMMENT 03(25) TEXT-S08 FOR FIELD CTU.
SELECTION-SCREEN POSITION 45.
PARAMETERS SESSION RADIOBUTTON GROUP R_CT .  "create session
SELECTION-SCREEN COMMENT 48(20) TEXT-S07 FOR FIELD SESSION.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 03(20) TEXT-S05 FOR FIELD CTUMODE.
PARAMETERS CTUMODE LIKE CTU_PARAMS-DISMODE DEFAULT 'N'.
"A: show all dynpros
"E: show dynpro on error only
"N: do not display dynpro
*  selection-screen position 25.
SELECTION-SCREEN POSITION 70.
PARAMETERS GROUP(12).     "group name of session
SELECTION-SCREEN COMMENT 48(20) TEXT-S01 FOR FIELD GROUP.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 03(20) TEXT-S06 FOR FIELD CUPDATE.
PARAMETERS CUPDATE LIKE CTU_PARAMS-UPDMODE DEFAULT 'L'.
"S: synchronously
"A: asynchronously
"L: local
*  selection-screen position 25.
SELECTION-SCREEN POSITION 70.
SELECTION-SCREEN COMMENT 48(21) TEXT-S02 FOR FIELD USER.
PARAMETERS: USER(12) DEFAULT SY-UNAME.   "user for session in batch
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 03(20) TEXT-S09 FOR FIELD E_GROUP.
PARAMETERS E_GROUP(12).             "group name of error-session
*  selection-screen position 25.
SELECTION-SCREEN POSITION 70.
SELECTION-SCREEN COMMENT 48(21) TEXT-S03 FOR FIELD KEEP.
PARAMETERS: KEEP AS CHECKBOX.       "' ' = delete session if finished
"'X' = keep   session if finished

SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 03(20) TEXT-S02 FOR FIELD E_USER.
PARAMETERS: E_USER(12) DEFAULT SY-UNAME.    "user for error-session
*  selection-screen position 25.
SELECTION-SCREEN POSITION 70.
SELECTION-SCREEN COMMENT 48(21) TEXT-S04 FOR FIELD HOLDDATE.
PARAMETERS: HOLDDATE LIKE SY-DATUM.
*  SELECTION-SCREEN COMMENT 51(17) TEXT-S02 FOR FIELD E_USER.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
*  SELECTION-SCREEN COMMENT 51(17) TEXT-S03 FOR FIELD E_KEEP.
SELECTION-SCREEN COMMENT 03(20) TEXT-S03 FOR FIELD E_KEEP.
*  selection-screen position 70.
PARAMETERS: E_KEEP AS CHECKBOX .  "' ' = delete session iffinished
"'X' = keep   session if finished
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
*  SELECTION-SCREEN COMMENT 51(17) TEXT-S04 FOR FIELD E_HDATE.
SELECTION-SCREEN COMMENT 03(20) TEXT-S04 FOR FIELD E_HDATE.
*  selection-screen position 70.
PARAMETERS: E_HDATE LIKE SY-DATUM.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN SKIP.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 3(20) TEXT-S10 FOR FIELD NODATA.
PARAMETERS: NODATA DEFAULT '/' LOWER CASE.          "nodata
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 3(20) FOR FIELD SMALLLOG.
PARAMETERS: SMALLLOG AS CHECKBOX.  "' ' = log all transactions
"'X' = no transaction logging
SELECTION-SCREEN END OF LINE.

*----------------------------------------------------------------------*
*   data definition
*----------------------------------------------------------------------*
*       Batchinputdata of single transaction
DATA:   BDCDATA LIKE BDCDATA    OCCURS 0 WITH HEADER LINE.
*       messages of call transaction
DATA:   MESSTAB LIKE BDCMSGCOLL OCCURS 0 WITH HEADER LINE.
*       error session opened (' ' or 'X')
DATA:   E_GROUP_OPENED.
*       message texts
TABLES: T100.

*----------------------------------------------------------------------*
*   at selection screen                                                *
*----------------------------------------------------------------------*
*AT SELECTION-SCREEN OUTPUT.
*  PERFORM CHANGE_SCREEN.
*
*----------------------------------------------------------------------*
*   at selection screen                                                *
*----------------------------------------------------------------------*
*AT SELECTION-SCREEN.
** group and user must be filled for create session
*  IF SESSION = 'X' AND
*     GROUP = SPACE OR USER = SPACE.
*    MESSAGE E613(MS).
*  ENDIF.
*
*----------------------------------------------------------------------*
*   open dataset                                                       *
*----------------------------------------------------------------------*
FORM OPEN_DATASET USING P_DATASET.
* Mod ES-UP 2012/10/12 -->
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
DATA L_CODEPAGE TYPE ABAP_ENCODING.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
* Mod ES-UP 2012/10/12 <--
OPEN DATASET P_DATASET
* Mod ES-UP 2012/10/12 -->
*               FOR INPUT IN TEXT MODE.
FOR INPUT
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
* Mod ES-UP 2012/10/12 <--
* 2011/02/24 グレードダウン対応 >>>
*               ENCODING DEFAULT
*  IGNORING CONVERSION ERRORS.
* 2011/02/24 グレードダウン対応 <<<
IF SY-SUBRC <> 0.
WRITE: / TEXT-E00, SY-SUBRC.
STOP.
ENDIF.
ENDFORM.

*----------------------------------------------------------------------*
*   close dataset                                                      *
*----------------------------------------------------------------------*
FORM CLOSE_DATASET USING P_DATASET.
CLOSE DATASET P_DATASET.
ENDFORM.

*----------------------------------------------------------------------*
*   create batchinput session                                          *
*   (not for call transaction using...)                                *
*----------------------------------------------------------------------*
FORM OPEN_GROUP.
IF SESSION = 'X'.
SKIP.
WRITE: /(20) 'Create group'(I01), GROUP.
SKIP.
*   open batchinput group
CALL FUNCTION 'BDC_OPEN_GROUP'
EXPORTING  CLIENT   = SY-MANDT
GROUP    = GROUP
USER     = USER
KEEP     = KEEP
HOLDDATE = HOLDDATE.
WRITE: /(30) 'BDC_OPEN_GROUP'(I02),
(12) 'returncode:'(I05),
SY-SUBRC.
ENDIF.
ENDFORM.

*----------------------------------------------------------------------*
*   end batchinput session                                             *
*   (call transaction using...: error session)                         *
*----------------------------------------------------------------------*
FORM CLOSE_GROUP.
IF SESSION = 'X'.
*   close batchinput group
CALL FUNCTION 'BDC_CLOSE_GROUP'.
WRITE: /(30) 'BDC_CLOSE_GROUP'(I04),
(12) 'returncode:'(I05),
SY-SUBRC.
ELSE.
IF E_GROUP_OPENED = 'X'.
CALL FUNCTION 'BDC_CLOSE_GROUP'.
WRITE: /.
WRITE: /(30) 'Fehlermappe wurde erzeugt'(I06).
ENDIF.
ENDIF.
ENDFORM.

*----------------------------------------------------------------------*
*        Start new transaction according to parameters                 *
*----------------------------------------------------------------------*
FORM BDC_TRANSACTION USING TCODE.
DATA: L_MSTRING(480).
DATA: L_SUBRC LIKE SY-SUBRC.
* batch input session
IF SESSION = 'X'.
CALL FUNCTION 'BDC_INSERT'
EXPORTING TCODE     = TCODE
TABLES    DYNPROTAB = BDCDATA.
IF SMALLLOG <> 'X'.
WRITE: / 'BDC_INSERT'(I03),
TCODE,
'returncode:'(I05),
SY-SUBRC,
'RECORD:',
SY-INDEX.
ENDIF.
* call transaction using
ELSE.
*  IF CTU = 'X'.
REFRESH MESSTAB.
CALL TRANSACTION TCODE USING BDCDATA
MODE   CTUMODE
UPDATE CUPDATE
MESSAGES INTO MESSTAB.
L_SUBRC = SY-SUBRC.
WK_SUBRC = L_SUBRC.
WK_MSGV1 = SY-MSGV1.
WK_MSGV2 = SY-MSGV2.

IF SMALLLOG <> 'X'.
WRITE: / 'CALL_TRANSACTION',
TCODE,
'returncode:'(I05),
L_SUBRC,
'RECORD:',
SY-INDEX.
LOOP AT MESSTAB.
SELECT SINGLE * FROM T100 WHERE SPRSL = MESSTAB-MSGSPRA
AND   ARBGB = MESSTAB-MSGID
AND   MSGNR = MESSTAB-MSGNR.
IF SY-SUBRC = 0.
L_MSTRING = T100-TEXT.
IF L_MSTRING CS '&1'.
REPLACE '&1' WITH MESSTAB-MSGV1 INTO L_MSTRING.
REPLACE '&2' WITH MESSTAB-MSGV2 INTO L_MSTRING.
REPLACE '&3' WITH MESSTAB-MSGV3 INTO L_MSTRING.
REPLACE '&4' WITH MESSTAB-MSGV4 INTO L_MSTRING.
ELSE.
REPLACE '&' WITH MESSTAB-MSGV1 INTO L_MSTRING.
REPLACE '&' WITH MESSTAB-MSGV2 INTO L_MSTRING.
REPLACE '&' WITH MESSTAB-MSGV3 INTO L_MSTRING.
REPLACE '&' WITH MESSTAB-MSGV4 INTO L_MSTRING.
ENDIF.
CONDENSE L_MSTRING.
WRITE: / MESSTAB-MSGTYP, L_MSTRING(250).
ELSE.
WRITE: / MESSTAB.
ENDIF.
ENDLOOP.
SKIP.
ENDIF.
** Erzeugen fehlermappe ************************************************
IF L_SUBRC <> 0 AND E_GROUP <> SPACE.
IF E_GROUP_OPENED = ' '.
CALL FUNCTION 'BDC_OPEN_GROUP'
EXPORTING  CLIENT   = SY-MANDT
GROUP    = E_GROUP
USER     = E_USER
KEEP     = E_KEEP
HOLDDATE = E_HDATE.
E_GROUP_OPENED = 'X'.
ENDIF.
CALL FUNCTION 'BDC_INSERT'
EXPORTING TCODE     = TCODE
TABLES    DYNPROTAB = BDCDATA.
ENDIF.
ENDIF.
E_MESSAGE = L_MSTRING.
REFRESH BDCDATA.
ENDFORM.

*----------------------------------------------------------------------*
*        Start new screen                                              *
*----------------------------------------------------------------------*
FORM BDC_DYNPRO USING PROGRAM DYNPRO.
CLEAR BDCDATA.
BDCDATA-PROGRAM  = PROGRAM.
BDCDATA-DYNPRO   = DYNPRO.
BDCDATA-DYNBEGIN = 'X'.
APPEND BDCDATA.
ENDFORM.

*----------------------------------------------------------------------*
*        Insert field                                                  *
*----------------------------------------------------------------------*
FORM BDC_FIELD USING FNAM FVAL.
IF FVAL <> NODATA.
CLEAR BDCDATA.
BDCDATA-FNAM = FNAM.
BDCDATA-FVAL = FVAL.
APPEND BDCDATA.
ENDIF.
ENDFORM.
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
FORM CHANGE_SCREEN.
LOOP AT SCREEN.
IF NOT CTU IS INITIAL.
IF SCREEN-NAME EQ 'GROUP'.
SCREEN-INPUT    = '0'.
ELSEIF SCREEN-NAME EQ 'USER'.
SCREEN-INPUT    = '0'.
ELSEIF SCREEN-NAME EQ 'KEEP'.
SCREEN-INPUT    = '0'.
ELSEIF SCREEN-NAME EQ 'HOLDDATE'  .
SCREEN-INPUT    = '0'.
ELSE.
SCREEN-INPUT    = '1'.
ENDIF.
ELSE.
IF SCREEN-NAME EQ 'CTUMODE'.
SCREEN-INPUT    = '0'.
ELSEIF SCREEN-NAME EQ 'CUPDATE'.
SCREEN-INPUT    = '0'.
ELSEIF SCREEN-NAME EQ 'E_GROUP'.
SCREEN-INPUT    = '0'.
ELSEIF SCREEN-NAME EQ 'E_USER'  .
SCREEN-INPUT    = '0'.
ELSEIF SCREEN-NAME EQ 'E_KEEP'.
SCREEN-INPUT    = '0'.
ELSEIF SCREEN-NAME EQ 'E_HDATE'.
SCREEN-INPUT    = '0'.
ELSE.
SCREEN-INPUT    = '1'.
ENDIF.
ENDIF.
MODIFY SCREEN.
ENDLOOP.
ENDFORM.                    " CHANGE_SCREEN
