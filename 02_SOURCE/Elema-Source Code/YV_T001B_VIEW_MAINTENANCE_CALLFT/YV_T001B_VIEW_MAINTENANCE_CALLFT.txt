REPORT YV_T001B_VIEW_MAINTENANCE_CALLFT.
* 2.0
*
DATA: TIME1 TYPE P, TIME2 TYPE P, RUNTIME(30), DEBUG, ATRA.
DATA: RC LIKE SY-SUBRC , V_RC LIKE SY-SUBRC.
DATA: DESTI LIKE RFCDES-RFCDEST.
DATA: FIELDNAME LIKE SY-REPID.
DATA: G_UPPER TYPE C.         "Gross/Kleinschreibung
*
TABLES : EUFUNC.
DATA: BEGIN OF UNTERSCHIED,            " Unterschiede bei Testdur
PARAMETER(30),
ALT(200),
NEU(200),                      " laufen
END OF UNTERSCHIED.
*
DATA : D102N_EXPORTKEY LIKE FUNCTDIR.
*
DATA : BEGIN OF EXPORTKEY,
DATAID LIKE EUFUNC-NUMMER,
SEQID  LIKE EUFUNC-SEQID,
END OF EXPORTKEY.
DATA : BEGIN OF EXCEPTIONS OCCURS 10,
NAME(30),
END OF EXCEPTIONS.
DATA : VEXCEPTION(30).
DATA : OEXCEPTION(30).
DATA : NR2(250) TYPE C.
DATA : TABLEN TYPE I.
DATA : EX TYPE REF TO CX_ROOT.
DATA : DESCR_REF TYPE REF TO CL_ABAP_TYPEDESCR.
DATA : RESULTAT(30) TYPE C.
DATA : REST(30)     TYPE C.
*
FORM EXISTENCE_CHECK CHANGING VARIA.
VARIA = 1.
ENDFORM.
FORM FUNCTION_CALL.
*  TRANSAKTION = 'Repo', PROGRAM = REPORT
IF ATRA = '1'.
SET RUN TIME ANALYZER ON %_INTERNAL.
ENDIF.
IF DESTI IS INITIAL.
IF DEBUG = '1'. BREAK-POINT AT NEXT APPLICATION STATEMENT.
ENDIF.
DEBUG = SPACE.
GET RUN TIME FIELD TIME1.
CALL FUNCTION 'YV_T001B_VIEW_MAINTENANCE_CALL'.
IF ATRA = '1'.
SET RUN TIME ANALYZER OFF %_INTERNAL.
ENDIF.
ELSE.
GET RUN TIME FIELD TIME1.
*  TRANSAKTION = 'Repo', PROGRAM = REPORT
IF ATRA = '1'.
SET RUN TIME ANALYZER ON %_INTERNAL.
ENDIF.
IF DESTI = 'SPACE'.
DESTI = ' '.
ENDIF.
CALL FUNCTION 'YV_T001B_VIEW_MAINTENANCE_CALL' DESTINATION DESTI.
IF ATRA = '1'.
SET RUN TIME ANALYZER OFF %_INTERNAL.
ENDIF.
ENDIF.
GET RUN TIME FIELD TIME2.
RC = SY-SUBRC.
CLEAR EXCEPTIONS.
READ TABLE EXCEPTIONS INDEX RC.
IF SY-SUBRC = 0.
OEXCEPTION = EXCEPTIONS-NAME.
ELSE.
OEXCEPTION = RESULTAT.
ENDIF.
TIME1 = TIME2 - TIME1.
WRITE TIME1 TO RUNTIME.
CONDENSE RUNTIME.
ENDFORM.

FORM CLEAR_DATA.
ENDFORM.
FORM CLEAR_TABLE.
ENDFORM.
FORM DELETE_LINE USING KEY INDEX.
CASE KEY.
ENDCASE.
ENDFORM.
FORM INIT_EXCEPTIONS USING NAME.
CLEAR EXCEPTIONS.
MOVE NAME TO EXCEPTIONS-NAME.
APPEND EXCEPTIONS.
ENDFORM.
FORM PARAM_ACCESS_TYPES USING KEY DEST P_MODE P_UPPER.
DATA : INTKEY(31).
P_UPPER = G_UPPER.
INTKEY = DEST.
INTKEY+1 = KEY.
CONDENSE INTKEY.
CASE INTKEY.
ENDCASE.
ENDFORM.
FORM PARAMETER_SET USING NAME DIRECTION VALUE.
DATA: L_NAME(31).
CONCATENATE DIRECTION NAME INTO L_NAME.
CASE L_NAME.
ENDCASE.
ENDFORM.
FORM PARAMETER_GET USING NAME DIRECTION
CHANGING   VALUE
OLD_VALUE.
DATA: L_NAME(31).
CONCATENATE DIRECTION NAME INTO L_NAME.
CASE L_NAME.
ENDCASE.
ENDFORM.
FORM PARAMETER_TABLE_SET USING NAME VALUE.
CASE NAME.
ENDCASE.
ENDFORM.
FORM PARAMETER_TABLE_GET USING NAME
CHANGING   VALUE.
CASE NAME.
ENDCASE.
ENDFORM.
FORM PARAMETER_DESCRIBE USING CBPROG
NAME.
CASE NAME.
ENDCASE.
ENDFORM.
FORM PARAMETER_CONTAINER TABLES LCONT STRUCTURE SWCONT
USING NAME
DIRECTION .
CASE NAME.
ENDCASE.
ENDFORM.
FORM TABLES_CONTAINER TABLES LCONT STRUCTURE SWCONT
USING NAME
DIRECTION.
CASE NAME.
ENDCASE.
ENDFORM.
FORM SET_VARIABLES USING KEY VALUE.
CASE KEY.
WHEN '%%DEBUGON'.
DEBUG = 1.
WHEN '%%DEBUGOFF'.
DEBUG = 0.
WHEN '%%DESTI'.
DESTI = VALUE.
WHEN '%%ATRAON'.
ATRA = 1.
WHEN '%%ATRAOFF'.
ATRA = 0.
WHEN '%%UPPER'.
G_UPPER = VALUE.
ENDCASE.
ENDFORM.
FORM GET_VARIABLES USING    KEY
CHANGING VALUE.
CASE KEY.
WHEN '%%DEBUG'.
VALUE = DEBUG.
WHEN '%%DESTI'.
VALUE = DESTI.
WHEN '%%ATRA'.
VALUE = ATRA.
WHEN '%%SUBRC'.
VALUE = RC.
WHEN 'V%%SUBRC'.
VALUE = V_RC.
WHEN '%%TIME'.
VALUE = RUNTIME.
WHEN '%%UPPER'.
VALUE = G_UPPER.
WHEN '%%EXCCL'.
VALUE = RESULTAT.
ENDCASE.
ENDFORM.
FORM GET_EXC_CL CHANGING P_EXC_CL.
IF EX IS BOUND.
P_EXC_CL = EX.
ELSE.
CLEAR P_EXC_CL.
ENDIF.
ENDFORM.
FORM PARAMETER_READ_INPUT USING NAME
KEY
CHANGING VALUE.
CASE NAME.
ENDCASE.
ENDFORM.
FORM PARAMETER_READ_OUTPUT USING NAME
KEY
CHANGING VALUE.
CASE NAME.
ENDCASE.
ENDFORM.
FORM PARAMETER_COMPARE USING NAME
CHANGING VALUE.
CASE NAME.
ENDCASE.
ENDFORM.
FORM EXPORT_IMPORT_MEMORY USING SEL KEY STRUCTURE EXPORTKEY.
CASE SEL.
WHEN 'IO'.
V_RC = RC.
VEXCEPTION = OEXCEPTION.
EXPORT
TIME1
V_RC
VEXCEPTION
G_UPPER
TO MEMORY ID KEY.
WHEN 'VI'.
CATCH SYSTEM-EXCEPTIONS CONNE_IMPORT_WRONG_COMP_TYPE = 1
CONNE_IMPORT_WRONG_OBJECT_TYPE = 2
CONNE_IMPORT_WRONG_COMP_LENG = 3
CONNE_IMPORT_WRONG_FIELD_LENG = 6
CONNE_IMPORT_WRONG_STRUCTURE  = 7
CONNE_IMPORT_WRONG_FIELD_TYPE = 4
IMPORT_WRONG_END_POS = 8
IMPORT_ALIGNMENT_MISMATCH = 5.
IMPORT
TIME1
V_RC
VEXCEPTION
G_UPPER
FROM MEMORY ID KEY.
ENDCATCH.
WHEN 'VO'.
V_RC = RC.
VEXCEPTION = OEXCEPTION.
EXPORT
TIME1
V_RC
VEXCEPTION
G_UPPER
TO MEMORY ID KEY.
WHEN 'IV'.
CATCH SYSTEM-EXCEPTIONS CONNE_IMPORT_WRONG_COMP_TYPE = 1
CONNE_IMPORT_WRONG_OBJECT_TYPE = 2
CONNE_IMPORT_WRONG_COMP_LENG = 3
CONNE_IMPORT_WRONG_FIELD_LENG = 6
CONNE_IMPORT_WRONG_STRUCTURE  = 7
CONNE_IMPORT_WRONG_FIELD_TYPE = 4
IMPORT_WRONG_END_POS = 8
IMPORT_ALIGNMENT_MISMATCH = 5.
IMPORT
TIME1
V_RC
VEXCEPTION
G_UPPER
FROM MEMORY ID KEY.
ENDCATCH.
RC = V_RC.
ENDCASE.
ENDFORM.
FORM EXPORT_IMPORT USING SEL KEY STRUCTURE D102N_EXPORTKEY.
CASE SEL.
WHEN 'IO'.
V_RC = RC.
VEXCEPTION = OEXCEPTION.
EXPORT
TIME1
V_RC
VEXCEPTION
G_UPPER
TO DATABASE EUFUNC(FL) ID KEY.
WHEN 'VI'.
CATCH SYSTEM-EXCEPTIONS CONNE_IMPORT_WRONG_COMP_TYPE = 1
CONNE_IMPORT_WRONG_OBJECT_TYPE = 2
CONNE_IMPORT_WRONG_COMP_LENG = 3
CONNE_IMPORT_WRONG_FIELD_LENG = 6
CONNE_IMPORT_WRONG_STRUCTURE  = 7
CONNE_IMPORT_WRONG_FIELD_TYPE = 4
IMPORT_WRONG_END_POS = 8
IMPORT_ALIGNMENT_MISMATCH = 5.
IMPORT
TIME1
V_RC
VEXCEPTION
G_UPPER
FROM DATABASE EUFUNC(FL) ID KEY ACCEPTING PADDING
IGNORING CONVERSION ERRORS.
ENDCATCH.
WHEN 'VO'.
V_RC = RC.
VEXCEPTION = OEXCEPTION.
EXPORT
TIME1
V_RC
VEXCEPTION
G_UPPER
TO DATABASE EUFUNC(FL) ID KEY.
WHEN 'IV'.
CATCH SYSTEM-EXCEPTIONS CONNE_IMPORT_WRONG_COMP_TYPE = 1
CONNE_IMPORT_WRONG_OBJECT_TYPE = 2
CONNE_IMPORT_WRONG_COMP_LENG = 3
CONNE_IMPORT_WRONG_FIELD_LENG = 6
CONNE_IMPORT_WRONG_STRUCTURE  = 7
CONNE_IMPORT_WRONG_FIELD_TYPE = 4
IMPORT_WRONG_END_POS = 8
IMPORT_ALIGNMENT_MISMATCH = 5.
IMPORT
TIME1
V_RC
VEXCEPTION
G_UPPER
FROM DATABASE EUFUNC(FL) ID KEY ACCEPTING PADDING
IGNORING CONVERSION ERRORS.
ENDCATCH.
RC = V_RC.
ENDCASE.
ENDFORM.
FORM GET_EXCEPTION_DIFFERENCE
TABLES DIFFERENCES STRUCTURE UNTERSCHIED.
IF VEXCEPTION NE OEXCEPTION.
MOVE 'EXCEPTION' TO DIFFERENCES-PARAMETER.
IF VEXCEPTION = SPACE.
MOVE '-' TO DIFFERENCES-ALT.
ELSE.
MOVE VEXCEPTION TO DIFFERENCES-ALT.
ENDIF.
IF OEXCEPTION = SPACE.
MOVE '-' TO DIFFERENCES-NEU.
ELSE.
MOVE OEXCEPTION TO DIFFERENCES-NEU.
ENDIF.
APPEND DIFFERENCES.
ENDIF.
ENDFORM.
FORM COMPARE_DATA
TABLES DIFFERENCES STRUCTURE UNTERSCHIED
USING FIELD
CHANGING RETCODE.
DATA : SUBRC LIKE SY-SUBRC.
field-symbols: <l_f1> type x.
field-symbols: <l_f2> type x.
RETCODE = '='.
CLEAR DIFFERENCES.
CASE FIELD.
WHEN 'EXCEPTION'.
IF VEXCEPTION NE OEXCEPTION.
RETCODE = SPACE.
MOVE FIELD      TO DIFFERENCES-PARAMETER.
MOVE VEXCEPTION TO DIFFERENCES-ALT.
MOVE OEXCEPTION TO DIFFERENCES-NEU.
APPEND DIFFERENCES.
ENDIF.
ENDCASE.
ENDFORM.
