************************************************************************
*             ç‡ñ±âÔåvÉVÉXÉeÉÄÅiÇeÇhÅj
*             ä®íËâ»ñ⁄ï écçÇàÍóóï\çÏê¨
*             ÇoÇqÇnÇfÇqÇ`ÇlÅ|ÇhÇcÅFÇxÇeÇOÇOÇOÇQÇOÇO
*
*         ïœçXÇPÅFSTTD22      1999/02/02         îNéüëŒâû
*&[â¸íËóöó]
*& YYYY/MM/DD  Programar         Description
*& 2012/09/11  ISID              ES-UP
************************************************************************
REPORT YF000200 MESSAGE-ID Y1
NO STANDARD PAGE HEADING
LINE-SIZE   170
LINE-COUNT   58(0).
*----------------------------------------------------------------------*
*         ÉeÅ[ÉuÉãíËã`                                                 *
*----------------------------------------------------------------------*
TABLES:SKC1A,                          " ëçä®íËå≥í†ä®íËécçÇÉeÅ[ÉuÉã
T001,                           " âÔé–ÉRÅ[ÉhÉeÅ[ÉuÉã
T009B,
SKAT.                           " ëçä®íËå≥í†É}ÉXÉ^
*----------------------------------------------------------------------*
*         ì‡ïîÉeÅ[ÉuÉãíËã`                                             *
*----------------------------------------------------------------------*
DATA:BEGIN OF T_SKAT OCCURS 1,
SAKNR(10) TYPE C,               " ä®íËÉRÅ[Éh
GSBER(04) TYPE C,               " éñã∆óÃàÊ
TXT50(14) TYPE C,               " â»ñ⁄ñº
TXT20(14) TYPE C,               " ï‚èïâ»ñ⁄ñº
UMSAV(11) TYPE P,               " ëÊÇPâÔåvä˙ä‘
UM01S(11) TYPE P,
UM01H(11) TYPE P,
UM01K(11) TYPE P,               " ëÊÇQâÔåvä˙ä‘
UM02S(11) TYPE P,
UM02H(11) TYPE P,
UM02K(11) TYPE P,               " ëÊÇRâÔåvä˙ä‘
UM03S(11) TYPE P,
UM03H(11) TYPE P,
UM03K(11) TYPE P,               " ëÊÇSâÔåvä˙ä‘
UM04S(11) TYPE P,
UM04H(11) TYPE P,
UM04K(11) TYPE P,               " ëÊÇTâÔåvä˙ä‘
UM05S(11) TYPE P,
UM05H(11) TYPE P,
UM05K(11) TYPE P,               " ëÊÇUâÔåvä˙ä‘
UM06S(11) TYPE P,
UM06H(11) TYPE P,
UM06K(11) TYPE P,               " ëÊÇVâÔåvä˙ä‘
UM07S(11) TYPE P,
UM07H(11) TYPE P,
UM07K(11) TYPE P,               " ëÊÇWâÔåvä˙ä‘
UM08S(11) TYPE P,
UM08H(11) TYPE P,
UM08K(11) TYPE P,               " ëÊÇXâÔåvä˙ä‘
UM09S(11) TYPE P,
UM09H(11) TYPE P,
UM09K(11) TYPE P,               " ëÊÇPÇOâÔåvä˙ä‘
UM10S(13) TYPE P,
UM10H(13) TYPE P,
UM10K(13) TYPE P,               " ëÊÇPÇPâÔåvä˙ä‘
UM11S(13) TYPE P,
UM11H(13) TYPE P,
UM11K(13) TYPE P,               " ëÊÇPÇQâÔåvä˙ä‘
UM12S(13) TYPE P,
UM12H(13) TYPE P,
UM12K(13) TYPE P.
DATA:END OF T_SKAT.

DATA:BEGIN OF T_SKC1A OCCURS 100.
INCLUDE STRUCTURE SKC1A.
DATA:END OF T_SKC1A.
*----------------------------------------------------------------------*
*         ÉpÉâÉÅÅ[É^íËã`                                               *
*----------------------------------------------------------------------*
PARAMETERS:P_NEN(4)  TYPE N,           " ëŒè€îN
P_TUKI(2) TYPE N,           " ëŒè€åé
P_BUKRS(4) TYPE C.          " âÔé–ÉRÅ[Éh
SELECT-OPTIONS S_SAKNR FOR SKAT-SAKNR.
PARAMETERS P_NENJI AS CHECKBOX.        " îNéüÉfÅ[É^ëŒè€
*----------------------------------------------------------------------*
*         ÉfÅ[É^íËã`
*----------------------------------------------------------------------*
DATA:W_NEN(04)     TYPE N,
W_HI(02)      TYPE N,
W_TAISYO_Y(04)  TYPE N,
W_TAISYO_M(02)  TYPE N,
W_PERIO(03)  TYPE N,
W_PAGNO(02)   TYPE N,
W_CNT        TYPE I,
W_CTR_LINE   TYPE I,
W_FLG(01)    VALUE 0,
* Mod ES-UP 2012/09/10 -->
*     W_A01(4)  TYPE C,
*     W_A02(4)  TYPE C,
*     W_A03(4)  TYPE C,
*     W_A04(4)  TYPE C,
*     W_A05(4)  TYPE C,
*     W_A06(4)  TYPE C,
*     W_A07(4)  TYPE C,
*     W_A08(4)  TYPE C,
*     W_A09(4)  TYPE C,
*     W_A10(4)  TYPE C,
*     W_A11(4)  TYPE C,
*     W_A12(4)  TYPE C,
W_A01  TYPE C length 3,
W_A02  TYPE C length 3,
W_A03  TYPE C length 3,
W_A04  TYPE C length 3,
W_A05  TYPE C length 3,
W_A06  TYPE C length 3,
W_A07  TYPE C length 3,
W_A08  TYPE C length 3,
W_A09  TYPE C length 3,
W_A10  TYPE C length 3,
W_A11  TYPE C length 3,
W_A12  TYPE C length 3,
* Mod ES-UP 2012/09/10 <--
W_KODO1(10) TYPE C,
W_KODO2(10) TYPE C,
W_SAKNR_OLD(10) TYPE C,
W_GSBER_OLD(4)  TYPE C,
W_DATE TYPE D,
W_E_DATE        TYPE D.

DATA: BEGIN OF S_TUKI,
TUKI1(2) TYPE C,
* Mod ES-UP 2012/09/11 -->
*      TUKI2(2) TYPE C,
TUKI2(1) TYPE C,
* Mod ES-UP 2012/09/11 <--
END OF S_TUKI.

DATA: BEGIN OF S_FNAME,
FIL1(3) TYPE C VALUE 'W_A',
CNT(2) TYPE N,
END OF S_FNAME.

DATA: BEGIN OF T_T009B OCCURS 12.
INCLUDE STRUCTURE T009B.
DATA: END OF T_T009B.

FIELD-SYMBOLS: <FNAME>.

INCLUDE YF01NUMC.                      "êîílï“èWópªÃﬁŸ∞¡›

*----------------------------------------------------------------------*
*          éÂèàóù
*----------------------------------------------------------------------*
START-OF-SELECTION.
W_KODO1 = S_SAKNR-LOW.
W_KODO2 = S_SAKNR-HIGH.

MOVE: P_NEN TO W_DATE(4),
P_TUKI TO W_DATE+4(2),
'01' TO W_DATE+6(2).

CALL FUNCTION 'FI_PERIOD_DETERMINE'
EXPORTING
I_BUDAT        = W_DATE
I_BUKRS        = P_BUKRS
IMPORTING
E_GJAHR        = W_NEN
E_POPER        = W_PERIO
EXCEPTIONS
FISCAL_YEAR    = 1
PERIOD         = 2
PERIOD_VERSION = 3
POSTING_PERIOD = 4
SPECIAL_PERIOD = 5
VERSION        = 6
POSTING_DATE   = 7
OTHERS         = 8.

IF SY-SUBRC <> 0.
MESSAGE A001 WITH 'FI_PERIOD_DETERMINE' SY-SUBRC.
EXIT.
ENDIF.

SELECT SINGLE * FROM  T001
WHERE  BUKRS       = P_BUKRS        .

CALL FUNCTION 'LAST_DAY_IN_PERIOD_GET'
EXPORTING
I_GJAHR        = W_NEN
I_PERIV        = T001-PERIV
I_POPER        = W_PERIO
IMPORTING
E_DATE         = W_E_DATE
EXCEPTIONS
INPUT_FALSE    = 1
T009_NOTFOUND  = 2
T009B_NOTFOUND = 3
OTHERS         = 4.

IF SY-SUBRC <> 0.
MESSAGE A001 WITH 'LAST_DAY_IN_PERIOD_GET' SY-SUBRC.
ELSE.
W_HI = W_E_DATE+6(2).
ENDIF.

GET  SKC1A.
MOVE-CORRESPONDING SKC1A TO T_SKC1A.
APPEND T_SKC1A.

END-OF-SELECTION.

* ï“èW
PERFORM EDT_HEADER.
SORT T_SKC1A BY SAKNR GSBER.
PERFORM ZANDAKA.

*----------------------------------------------------------------------*
*         ëçä®íËå≥í†écçÇì«çûÇ›
*----------------------------------------------------------------------*
FORM ZANDAKA.
W_SAKNR_OLD = '0000000000'.
LOOP AT T_SKC1A
WHERE SAKNR >= W_KODO1
AND SAKNR <= W_KODO2
AND GJAHR = W_NEN
AND BUKRS = P_BUKRS.
IF  W_SAKNR_OLD = T_SKC1A-SAKNR.
ELSE.
IF W_SAKNR_OLD = '0000000000'.
W_SAKNR_OLD = T_SKC1A-SAKNR.
PERFORM OUT_HEADER.
PERFORM OUT_HEADER1.
ELSE.
PERFORM PRNT_LIST.
W_SAKNR_OLD = T_SKC1A-SAKNR.
ENDIF.
ENDIF.
PERFORM KEISAN.
ENDLOOP.
IF W_SAKNR_OLD = '0000000000'.
ELSE.
PERFORM PRNT_LIST.
ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM KEISAN                                                   *
*---------------------------------------------------------------------*
FORM KEISAN.
* IF  T_SKC1A-SAKNR  >=  '0002000000' AND
*     T_SKC1A-SAKNR  <=  '0004099999'.
*   PERFORM JYOSAN.

* ELSEIF  T_SKC1A-SAKNR  >=  '0005000000' AND
*         T_SKC1A-SAKNR  <=  '0005099999'.
*   PERFORM JYOSAN.

* ELSEIF  T_SKC1A-SAKNR  >=  '0006000000' AND
*         T_SKC1A-SAKNR  <=  '0006099999'.
*   PERFORM JYOSAN.

* ELSE.
PERFORM KASAN.

* ENDIF.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM KASAN                                                    *
*---------------------------------------------------------------------*
FORM KASAN.
IF W_PERIO >= 12.
IF P_NENJI = 'X'.
T_SKAT-UM12S = T_SKAT-UM12S + T_SKC1A-UM12S * 100
+ T_SKC1A-UM13S * 100 + T_SKC1A-UM14S * 100
+ T_SKC1A-UM15S * 100 + T_SKC1A-UM16S * 100.
T_SKAT-UM12H = T_SKAT-UM12H + T_SKC1A-UM12H * 100
+ T_SKC1A-UM13H * 100 + T_SKC1A-UM14H * 100
+ T_SKC1A-UM15H * 100 + T_SKC1A-UM16H * 100.
T_SKAT-UM12K = T_SKAT-UM12K + T_SKC1A-UM16K * 100.
ELSE.
T_SKAT-UM12S = T_SKAT-UM12S + T_SKC1A-UM12S * 100.
T_SKAT-UM12H = T_SKAT-UM12H + T_SKC1A-UM12H * 100.
T_SKAT-UM12K = T_SKAT-UM12K + T_SKC1A-UM12K * 100.
ENDIF.
ENDIF.
IF W_PERIO >= 11.
T_SKAT-UM11S = T_SKAT-UM11S + T_SKC1A-UM11S * 100.
T_SKAT-UM11H = T_SKAT-UM11H + T_SKC1A-UM11H * 100.
T_SKAT-UM11K = T_SKAT-UM11K + T_SKC1A-UM11K * 100.
ENDIF.
IF W_PERIO >= 10.
T_SKAT-UM10S = T_SKAT-UM10S + T_SKC1A-UM10S * 100.
T_SKAT-UM10H = T_SKAT-UM10H + T_SKC1A-UM10H * 100.
T_SKAT-UM10K = T_SKAT-UM10K + T_SKC1A-UM10K * 100.
ENDIF.
IF W_PERIO >= 9.
T_SKAT-UM09S = T_SKAT-UM09S + T_SKC1A-UM09S * 100.
T_SKAT-UM09H = T_SKAT-UM09H + T_SKC1A-UM09H * 100.
T_SKAT-UM09K = T_SKAT-UM09K + T_SKC1A-UM09K * 100.
ENDIF.
IF W_PERIO >= 8.
T_SKAT-UM08S = T_SKAT-UM08S + T_SKC1A-UM08S * 100.
T_SKAT-UM08H = T_SKAT-UM08H + T_SKC1A-UM08H * 100.
T_SKAT-UM08K = T_SKAT-UM08K + T_SKC1A-UM08K * 100.
ENDIF.
IF W_PERIO >= 7.
T_SKAT-UM07S = T_SKAT-UM07S + T_SKC1A-UM07S * 100.
T_SKAT-UM07H = T_SKAT-UM07H + T_SKC1A-UM07H * 100.
T_SKAT-UM07K = T_SKAT-UM07K + T_SKC1A-UM07K * 100.
ENDIF.
IF W_PERIO >= 6.
T_SKAT-UM06S = T_SKAT-UM06S + T_SKC1A-UM06S * 100.
T_SKAT-UM06H = T_SKAT-UM06H + T_SKC1A-UM06H * 100.
T_SKAT-UM06K = T_SKAT-UM06K + T_SKC1A-UM06K * 100.
ENDIF.
IF W_PERIO >= 5.
T_SKAT-UM05S = T_SKAT-UM05S + T_SKC1A-UM05S * 100.
T_SKAT-UM05H = T_SKAT-UM05H + T_SKC1A-UM05H * 100.
T_SKAT-UM05K = T_SKAT-UM05K + T_SKC1A-UM05K * 100.
ENDIF.
IF W_PERIO >= 4.
T_SKAT-UM04S = T_SKAT-UM04S + T_SKC1A-UM04S * 100.
T_SKAT-UM04H = T_SKAT-UM04H + T_SKC1A-UM04H * 100.
T_SKAT-UM04K = T_SKAT-UM04K + T_SKC1A-UM04K * 100.
ENDIF.
IF W_PERIO >= 3.
T_SKAT-UM03S = T_SKAT-UM03S + T_SKC1A-UM03S * 100.
T_SKAT-UM03H = T_SKAT-UM03H + T_SKC1A-UM03H * 100.
T_SKAT-UM03K = T_SKAT-UM03K + T_SKC1A-UM03K * 100.
ENDIF.
IF W_PERIO >= 2.
T_SKAT-UM02S = T_SKAT-UM02S + T_SKC1A-UM02S * 100.
T_SKAT-UM02H = T_SKAT-UM02H + T_SKC1A-UM02H * 100.
T_SKAT-UM02K = T_SKAT-UM02K + T_SKC1A-UM02K * 100.
ENDIF.
IF W_PERIO >= 1.
T_SKAT-UMSAV = T_SKAT-UMSAV + T_SKC1A-UMSAV * 100.
T_SKAT-UM01S = T_SKAT-UM01S + T_SKC1A-UM01S * 100.
T_SKAT-UM01H = T_SKAT-UM01H + T_SKC1A-UM01H * 100.
T_SKAT-UM01K = T_SKAT-UM01K + T_SKC1A-UM01K * 100.
ENDIF.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM JYOSAN                                                   *
*---------------------------------------------------------------------*
FORM JYOSAN.
IF W_PERIO >= 12.
T_SKAT-UM12S = T_SKAT-UM12S + T_SKC1A-UM12S * 100.
T_SKAT-UM12H = T_SKAT-UM12H + T_SKC1A-UM12H * 100.
T_SKAT-UM12K = T_SKAT-UM12K - T_SKC1A-UM12K * 100.
ENDIF.
IF W_PERIO >= 11.
T_SKAT-UM11S = T_SKAT-UM11S + T_SKC1A-UM11S * 100.
T_SKAT-UM11H = T_SKAT-UM11H + T_SKC1A-UM11H * 100.
T_SKAT-UM11K = T_SKAT-UM11K - T_SKC1A-UM11K * 100.
ENDIF.
IF W_PERIO >= 10.
T_SKAT-UM10S = T_SKAT-UM10S + T_SKC1A-UM10S * 100.
T_SKAT-UM10H = T_SKAT-UM10H + T_SKC1A-UM10H * 100.
T_SKAT-UM10K = T_SKAT-UM10K - T_SKC1A-UM10K * 100.
ENDIF.
IF W_PERIO >= 9.
T_SKAT-UM09S = T_SKAT-UM09S + T_SKC1A-UM09S * 100.
T_SKAT-UM09H = T_SKAT-UM09H + T_SKC1A-UM09H * 100.
T_SKAT-UM09K = T_SKAT-UM09K - T_SKC1A-UM09K * 100.
ENDIF.
IF W_PERIO >= 8.
T_SKAT-UM08S = T_SKAT-UM08S + T_SKC1A-UM08S * 100.
T_SKAT-UM08H = T_SKAT-UM08H + T_SKC1A-UM08H * 100.
T_SKAT-UM08K = T_SKAT-UM08K - T_SKC1A-UM08K * 100.
ENDIF.
IF W_PERIO >= 7.
T_SKAT-UM07S = T_SKAT-UM07S + T_SKC1A-UM07S * 100.
T_SKAT-UM07H = T_SKAT-UM07H + T_SKC1A-UM07H * 100.
T_SKAT-UM07K = T_SKAT-UM07K - T_SKC1A-UM07K * 100.
ENDIF.
IF W_PERIO >= 6.
T_SKAT-UM06S = T_SKAT-UM06S + T_SKC1A-UM06S * 100.
T_SKAT-UM06H = T_SKAT-UM06H + T_SKC1A-UM06H * 100.
T_SKAT-UM06K = T_SKAT-UM06K - T_SKC1A-UM06K * 100.
ENDIF.
IF W_PERIO >= 5.
T_SKAT-UM05S = T_SKAT-UM05S + T_SKC1A-UM05S * 100.
T_SKAT-UM05H = T_SKAT-UM05H + T_SKC1A-UM05H * 100.
T_SKAT-UM05K = T_SKAT-UM05K - T_SKC1A-UM05K * 100.
ENDIF.
IF W_PERIO >= 4.
T_SKAT-UM04S = T_SKAT-UM04S + T_SKC1A-UM04S * 100.
T_SKAT-UM04H = T_SKAT-UM04H + T_SKC1A-UM04H * 100.
T_SKAT-UM04K = T_SKAT-UM04K - T_SKC1A-UM04K * 100.
ENDIF.
IF W_PERIO >= 3.
T_SKAT-UM03S = T_SKAT-UM03S + T_SKC1A-UM03S * 100.
T_SKAT-UM03H = T_SKAT-UM03H + T_SKC1A-UM03H * 100.
T_SKAT-UM03K = T_SKAT-UM03K - T_SKC1A-UM03K * 100.
ENDIF.
IF W_PERIO >= 2.
T_SKAT-UM02S = T_SKAT-UM02S + T_SKC1A-UM02S * 100.
T_SKAT-UM02H = T_SKAT-UM02H + T_SKC1A-UM02H * 100.
T_SKAT-UM02K = T_SKAT-UM02K - T_SKC1A-UM02K * 100.
ENDIF.
IF W_PERIO >= 1.
T_SKAT-UMSAV = T_SKAT-UMSAV - T_SKC1A-UMSAV * 100.
T_SKAT-UM01S = T_SKAT-UM01S + T_SKC1A-UM01S * 100.
T_SKAT-UM01H = T_SKAT-UM01H + T_SKC1A-UM01H * 100.
T_SKAT-UM01K = T_SKAT-UM01K - T_SKC1A-UM01K * 100.
ENDIF.
ENDFORM.

*----------------------------------------------------------------------*
*         ÉeÅ[ÉuÉãÇÃì«çûÇ›
*----------------------------------------------------------------------*

*ëçä®íËå≥í†É}ÉXÉ^ì«çûÇ›
FORM MASTA.
SELECT SINGLE * FROM SKAT
WHERE  SPRAS  =  'J'
AND    KTOPL  = T001-KTOPL
AND    SAKNR  = W_SAKNR_OLD.
IF SY-SUBRC = 0.
ELSE.
SKAT-TXT20 = ''.
SKAT-TXT50 = ''.
ENDIF.
ENDFORM.

*----------------------------------------------------------------------*
*         ì¸èoã‡é¿ê—ï\èoóÕèàóù
*----------------------------------------------------------------------*
FORM PRNT_LIST.
IF W_CTR_LINE > 55.
NEW-PAGE.
PERFORM OUT_HEADER.
PERFORM OUT_HEADER1.
ENDIF.
PERFORM OUT_DETAIL.
ENDFORM.

*----------------------------------------------------------------------*
*        å©èoÇµï“èWèàóù
*----------------------------------------------------------------------*
FORM EDT_HEADER.
* ëŒè€îNåéï“èW
W_TAISYO_Y = P_NEN.
W_TAISYO_M = P_TUKI.

PERFORM TUKI_SET.

W_PAGNO    = 1.
W_CTR_LINE = 58.
ENDFORM.

*----------------------------------------------------------------------*
*           å©èoÇµèoóÕèàóù                                             *
*----------------------------------------------------------------------*
FORM OUT_HEADER.
* W_CNT = 58 - W_CTR_LINE.
* SKIP W_CNT.

* WRITE: /162 'Õﬂ∞ºﬁ ',W_PAGNO NO-ZERO.
WRITE: 162 'Õﬂ∞ºﬁ ',W_PAGNO NO-ZERO.
WRITE: /010 W_NEN,'îNìx',
065 'ä®  íË Åiï‚ èïÅj â»  ñ⁄  ï   éc  çÇ  àÍ  óó  ï\',
130 'çÏê¨îNåéì˙',
SY-DATUM(4),'îN',
SY-DATUM+4(2) NO-ZERO,'åé',
SY-DATUM+6(2) NO-ZERO,'ì˙',
162 SY-UZEIT(2),':',
SY-UZEIT+2(2).
WRITE:/064 '=================================================',
162 'íPà ÅFâ~'.
WRITE:/077 '(',P_NEN,'îN',
P_TUKI NO-ZERO,'åé',
W_HI NO-ZERO,'ì˙åªç›Åj'.
SKIP.
W_CTR_LINE = 5.
W_PAGNO    = W_PAGNO + 1.
ENDFORM.
*----------------------------------------------------------------------*
*           ì¸ã‡ÅEèoã‡èoóÕ                                             *
*----------------------------------------------------------------------*
FORM OUT_HEADER1.
SKIP.
WRITE:/001 'â» ñ⁄ ñº',
011 'çÄñ⁄',
* Mod ES-UP 2012/09/10 -->
*         024 W_A01 ,037 W_A02 ,049 W_A03 ,063 W_A04 ,076 W_A05 ,
*         089 W_A06 ,102 W_A07,115 W_A08,128 W_A09,
*         141 W_A10 ,154 W_A11 ,167 W_A12.
024(4) W_A01,037(4) W_A02,049(4) W_A03,063(4) W_A04,076(4) W_A05,
089(4) W_A06,102(4) W_A07,115(4) W_A08,128(4) W_A09,
141(4) W_A10,154(4) W_A11,167(4) W_A12.
* Mod ES-UP 2012/09/10 <--
ULINE.
W_CTR_LINE = W_CTR_LINE + 3.
ENDFORM.

*----------------------------------------------------------------------*
*         ñæç◊èoóÕèàóù
*----------------------------------------------------------------------*
FORM OUT_DETAIL.
PERFORM MASTA.
WRITE: /001 SKAT-TXT50,
/011 'ëOéc'.
PERFORM YF01NUMC USING T_SKAT-UMSAV 12 0.
WRITE: 016 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM01K 12 0.
WRITE: 029 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM02K 12 0.
WRITE: 042 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM03K 12 0.
WRITE: 055 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM04K 12 0.
WRITE: 068 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM05K 12 0.
WRITE: 081 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM06K 12 0.
WRITE: 094 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM07K 12 0.
WRITE: 107 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM08K 12 0.
WRITE: 120 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM09K 12 0.
WRITE: 133 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM10K 12 0.
WRITE: 146 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM11K 12 0.
WRITE: 159 O_NUM USING EDIT MASK 'RR____________'.

WRITE: /011 'éÿï˚'.
PERFORM YF01NUMC USING T_SKAT-UM01S 12 0.
WRITE: 016 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM02S 12 0.
WRITE: 029 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM03S 12 0.
WRITE: 042 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM04S 12 0.
WRITE: 055 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM05S 12 0.
WRITE: 068 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM06S 12 0.
WRITE: 081 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM07S 12 0.
WRITE: 094 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM08S 12 0.
WRITE: 107 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM09S 12 0.
WRITE: 120 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM10S 12 0.
WRITE: 133 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM11S 12 0.
WRITE: 146 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM12S 12 0.
WRITE: 159 O_NUM USING EDIT MASK 'RR____________'.

WRITE: /011 'ë›ï˚'.
PERFORM YF01NUMC USING T_SKAT-UM01H 12 0.
WRITE: 016 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM02H 12 0.
WRITE: 029 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM03H 12 0.
WRITE: 042 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM04H 12 0.
WRITE: 055 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM05H 12 0.
WRITE: 068 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM06H 12 0.
WRITE: 081 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM07H 12 0.
WRITE: 094 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM08H 12 0.
WRITE: 107 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM09H 12 0.
WRITE: 120 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM10H 12 0.
WRITE: 133 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM11H 12 0.
WRITE: 146 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM12H 12 0.
WRITE: 159 O_NUM USING EDIT MASK 'RR____________'.

WRITE: /011 'ìñéc'.
PERFORM YF01NUMC USING T_SKAT-UM01K 12 0.
WRITE: 016 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM02K 12 0.
WRITE: 029 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM03K 12 0.
WRITE: 042 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM04K 12 0.
WRITE: 055 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM05K 12 0.
WRITE: 068 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM06K 12 0.
WRITE: 081 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM07K 12 0.
WRITE: 094 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM08K 12 0.
WRITE: 107 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM09K 12 0.
WRITE: 120 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM10K 12 0.
WRITE: 133 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM11K 12 0.
WRITE: 146 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM12K 12 0.
WRITE: 159 O_NUM USING EDIT MASK 'RR____________'.
ULINE.
W_CTR_LINE = W_CTR_LINE + 6.
CLEAR T_SKAT.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM TUKI_SET                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM TUKI_SET.

S_FNAME-CNT = 1.

SELECT * FROM  T009B INTO TABLE T_T009B
WHERE  PERIV       = T001-PERIV.

SORT T_T009B BY POPER.

LOOP AT T_T009B.
CLEAR: S_TUKI.
WRITE T_T009B-BUMON TO S_TUKI-TUKI1 NO-ZERO.
MOVE 'åé' TO S_TUKI-TUKI2.
CONDENSE S_TUKI.
ASSIGN (S_FNAME) TO <FNAME>.
WRITE S_TUKI TO <FNAME> RIGHT-JUSTIFIED.
S_FNAME-CNT = S_FNAME-CNT + 1.
IF S_FNAME-CNT > 12.
EXIT.
ENDIF.
ENDLOOP.

ENDFORM.
************************************************************************
*             ç‡ñ±âÔåvÉVÉXÉeÉÄÅiÇeÇhÅj
*             ä®íËâ»ñ⁄ï écçÇàÍóóï\çÏê¨
*             ÇoÇqÇnÇfÇqÇ`ÇlÅ|ÇhÇcÅFÇxÇeÇOÇOÇOÇQÇOÇO
*
*         ïœçXÇPÅFSTTD22      1999/02/02         îNéüëŒâû
*&[â¸íËóöó]
*& YYYY/MM/DD  Programar         Description
*& 2012/09/11  ISID              ES-UP
************************************************************************
REPORT YF000200 MESSAGE-ID Y1
NO STANDARD PAGE HEADING
LINE-SIZE   170
LINE-COUNT   58(0).
*----------------------------------------------------------------------*
*         ÉeÅ[ÉuÉãíËã`                                                 *
*----------------------------------------------------------------------*
TABLES:SKC1A,                          " ëçä®íËå≥í†ä®íËécçÇÉeÅ[ÉuÉã
T001,                           " âÔé–ÉRÅ[ÉhÉeÅ[ÉuÉã
T009B,
SKAT.                           " ëçä®íËå≥í†É}ÉXÉ^
*----------------------------------------------------------------------*
*         ì‡ïîÉeÅ[ÉuÉãíËã`                                             *
*----------------------------------------------------------------------*
DATA:BEGIN OF T_SKAT OCCURS 1,
SAKNR(10) TYPE C,               " ä®íËÉRÅ[Éh
GSBER(04) TYPE C,               " éñã∆óÃàÊ
TXT50(14) TYPE C,               " â»ñ⁄ñº
TXT20(14) TYPE C,               " ï‚èïâ»ñ⁄ñº
UMSAV(11) TYPE P,               " ëÊÇPâÔåvä˙ä‘
UM01S(11) TYPE P,
UM01H(11) TYPE P,
UM01K(11) TYPE P,               " ëÊÇQâÔåvä˙ä‘
UM02S(11) TYPE P,
UM02H(11) TYPE P,
UM02K(11) TYPE P,               " ëÊÇRâÔåvä˙ä‘
UM03S(11) TYPE P,
UM03H(11) TYPE P,
UM03K(11) TYPE P,               " ëÊÇSâÔåvä˙ä‘
UM04S(11) TYPE P,
UM04H(11) TYPE P,
UM04K(11) TYPE P,               " ëÊÇTâÔåvä˙ä‘
UM05S(11) TYPE P,
UM05H(11) TYPE P,
UM05K(11) TYPE P,               " ëÊÇUâÔåvä˙ä‘
UM06S(11) TYPE P,
UM06H(11) TYPE P,
UM06K(11) TYPE P,               " ëÊÇVâÔåvä˙ä‘
UM07S(11) TYPE P,
UM07H(11) TYPE P,
UM07K(11) TYPE P,               " ëÊÇWâÔåvä˙ä‘
UM08S(11) TYPE P,
UM08H(11) TYPE P,
UM08K(11) TYPE P,               " ëÊÇXâÔåvä˙ä‘
UM09S(11) TYPE P,
UM09H(11) TYPE P,
UM09K(11) TYPE P,               " ëÊÇPÇOâÔåvä˙ä‘
UM10S(13) TYPE P,
UM10H(13) TYPE P,
UM10K(13) TYPE P,               " ëÊÇPÇPâÔåvä˙ä‘
UM11S(13) TYPE P,
UM11H(13) TYPE P,
UM11K(13) TYPE P,               " ëÊÇPÇQâÔåvä˙ä‘
UM12S(13) TYPE P,
UM12H(13) TYPE P,
UM12K(13) TYPE P.
DATA:END OF T_SKAT.

DATA:BEGIN OF T_SKC1A OCCURS 100.
INCLUDE STRUCTURE SKC1A.
DATA:END OF T_SKC1A.
*----------------------------------------------------------------------*
*         ÉpÉâÉÅÅ[É^íËã`                                               *
*----------------------------------------------------------------------*
PARAMETERS:P_NEN(4)  TYPE N,           " ëŒè€îN
P_TUKI(2) TYPE N,           " ëŒè€åé
P_BUKRS(4) TYPE C.          " âÔé–ÉRÅ[Éh
SELECT-OPTIONS S_SAKNR FOR SKAT-SAKNR.
PARAMETERS P_NENJI AS CHECKBOX.        " îNéüÉfÅ[É^ëŒè€
*----------------------------------------------------------------------*
*         ÉfÅ[É^íËã`
*----------------------------------------------------------------------*
DATA:W_NEN(04)     TYPE N,
W_HI(02)      TYPE N,
W_TAISYO_Y(04)  TYPE N,
W_TAISYO_M(02)  TYPE N,
W_PERIO(03)  TYPE N,
W_PAGNO(02)   TYPE N,
W_CNT        TYPE I,
W_CTR_LINE   TYPE I,
W_FLG(01)    VALUE 0,
* Mod ES-UP 2012/09/10 -->
*     W_A01(4)  TYPE C,
*     W_A02(4)  TYPE C,
*     W_A03(4)  TYPE C,
*     W_A04(4)  TYPE C,
*     W_A05(4)  TYPE C,
*     W_A06(4)  TYPE C,
*     W_A07(4)  TYPE C,
*     W_A08(4)  TYPE C,
*     W_A09(4)  TYPE C,
*     W_A10(4)  TYPE C,
*     W_A11(4)  TYPE C,
*     W_A12(4)  TYPE C,
W_A01  TYPE C length 3,
W_A02  TYPE C length 3,
W_A03  TYPE C length 3,
W_A04  TYPE C length 3,
W_A05  TYPE C length 3,
W_A06  TYPE C length 3,
W_A07  TYPE C length 3,
W_A08  TYPE C length 3,
W_A09  TYPE C length 3,
W_A10  TYPE C length 3,
W_A11  TYPE C length 3,
W_A12  TYPE C length 3,
* Mod ES-UP 2012/09/10 <--
W_KODO1(10) TYPE C,
W_KODO2(10) TYPE C,
W_SAKNR_OLD(10) TYPE C,
W_GSBER_OLD(4)  TYPE C,
W_DATE TYPE D,
W_E_DATE        TYPE D.

DATA: BEGIN OF S_TUKI,
TUKI1(2) TYPE C,
* Mod ES-UP 2012/09/11 -->
*      TUKI2(2) TYPE C,
TUKI2(1) TYPE C,
* Mod ES-UP 2012/09/11 <--
END OF S_TUKI.

DATA: BEGIN OF S_FNAME,
FIL1(3) TYPE C VALUE 'W_A',
CNT(2) TYPE N,
END OF S_FNAME.

DATA: BEGIN OF T_T009B OCCURS 12.
INCLUDE STRUCTURE T009B.
DATA: END OF T_T009B.

FIELD-SYMBOLS: <FNAME>.

INCLUDE YF01NUMC.                      "êîílï“èWópªÃﬁŸ∞¡›

*----------------------------------------------------------------------*
*          éÂèàóù
*----------------------------------------------------------------------*
START-OF-SELECTION.
W_KODO1 = S_SAKNR-LOW.
W_KODO2 = S_SAKNR-HIGH.

MOVE: P_NEN TO W_DATE(4),
P_TUKI TO W_DATE+4(2),
'01' TO W_DATE+6(2).

CALL FUNCTION 'FI_PERIOD_DETERMINE'
EXPORTING
I_BUDAT        = W_DATE
I_BUKRS        = P_BUKRS
IMPORTING
E_GJAHR        = W_NEN
E_POPER        = W_PERIO
EXCEPTIONS
FISCAL_YEAR    = 1
PERIOD         = 2
PERIOD_VERSION = 3
POSTING_PERIOD = 4
SPECIAL_PERIOD = 5
VERSION        = 6
POSTING_DATE   = 7
OTHERS         = 8.

IF SY-SUBRC <> 0.
MESSAGE A001 WITH 'FI_PERIOD_DETERMINE' SY-SUBRC.
EXIT.
ENDIF.

SELECT SINGLE * FROM  T001
WHERE  BUKRS       = P_BUKRS        .

CALL FUNCTION 'LAST_DAY_IN_PERIOD_GET'
EXPORTING
I_GJAHR        = W_NEN
I_PERIV        = T001-PERIV
I_POPER        = W_PERIO
IMPORTING
E_DATE         = W_E_DATE
EXCEPTIONS
INPUT_FALSE    = 1
T009_NOTFOUND  = 2
T009B_NOTFOUND = 3
OTHERS         = 4.

IF SY-SUBRC <> 0.
MESSAGE A001 WITH 'LAST_DAY_IN_PERIOD_GET' SY-SUBRC.
ELSE.
W_HI = W_E_DATE+6(2).
ENDIF.

GET  SKC1A.
MOVE-CORRESPONDING SKC1A TO T_SKC1A.
APPEND T_SKC1A.

END-OF-SELECTION.

* ï“èW
PERFORM EDT_HEADER.
SORT T_SKC1A BY SAKNR GSBER.
PERFORM ZANDAKA.

*----------------------------------------------------------------------*
*         ëçä®íËå≥í†écçÇì«çûÇ›
*----------------------------------------------------------------------*
FORM ZANDAKA.
W_SAKNR_OLD = '0000000000'.
LOOP AT T_SKC1A
WHERE SAKNR >= W_KODO1
AND SAKNR <= W_KODO2
AND GJAHR = W_NEN
AND BUKRS = P_BUKRS.
IF  W_SAKNR_OLD = T_SKC1A-SAKNR.
ELSE.
IF W_SAKNR_OLD = '0000000000'.
W_SAKNR_OLD = T_SKC1A-SAKNR.
PERFORM OUT_HEADER.
PERFORM OUT_HEADER1.
ELSE.
PERFORM PRNT_LIST.
W_SAKNR_OLD = T_SKC1A-SAKNR.
ENDIF.
ENDIF.
PERFORM KEISAN.
ENDLOOP.
IF W_SAKNR_OLD = '0000000000'.
ELSE.
PERFORM PRNT_LIST.
ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM KEISAN                                                   *
*---------------------------------------------------------------------*
FORM KEISAN.
* IF  T_SKC1A-SAKNR  >=  '0002000000' AND
*     T_SKC1A-SAKNR  <=  '0004099999'.
*   PERFORM JYOSAN.

* ELSEIF  T_SKC1A-SAKNR  >=  '0005000000' AND
*         T_SKC1A-SAKNR  <=  '0005099999'.
*   PERFORM JYOSAN.

* ELSEIF  T_SKC1A-SAKNR  >=  '0006000000' AND
*         T_SKC1A-SAKNR  <=  '0006099999'.
*   PERFORM JYOSAN.

* ELSE.
PERFORM KASAN.

* ENDIF.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM KASAN                                                    *
*---------------------------------------------------------------------*
FORM KASAN.
IF W_PERIO >= 12.
IF P_NENJI = 'X'.
T_SKAT-UM12S = T_SKAT-UM12S + T_SKC1A-UM12S * 100
+ T_SKC1A-UM13S * 100 + T_SKC1A-UM14S * 100
+ T_SKC1A-UM15S * 100 + T_SKC1A-UM16S * 100.
T_SKAT-UM12H = T_SKAT-UM12H + T_SKC1A-UM12H * 100
+ T_SKC1A-UM13H * 100 + T_SKC1A-UM14H * 100
+ T_SKC1A-UM15H * 100 + T_SKC1A-UM16H * 100.
T_SKAT-UM12K = T_SKAT-UM12K + T_SKC1A-UM16K * 100.
ELSE.
T_SKAT-UM12S = T_SKAT-UM12S + T_SKC1A-UM12S * 100.
T_SKAT-UM12H = T_SKAT-UM12H + T_SKC1A-UM12H * 100.
T_SKAT-UM12K = T_SKAT-UM12K + T_SKC1A-UM12K * 100.
ENDIF.
ENDIF.
IF W_PERIO >= 11.
T_SKAT-UM11S = T_SKAT-UM11S + T_SKC1A-UM11S * 100.
T_SKAT-UM11H = T_SKAT-UM11H + T_SKC1A-UM11H * 100.
T_SKAT-UM11K = T_SKAT-UM11K + T_SKC1A-UM11K * 100.
ENDIF.
IF W_PERIO >= 10.
T_SKAT-UM10S = T_SKAT-UM10S + T_SKC1A-UM10S * 100.
T_SKAT-UM10H = T_SKAT-UM10H + T_SKC1A-UM10H * 100.
T_SKAT-UM10K = T_SKAT-UM10K + T_SKC1A-UM10K * 100.
ENDIF.
IF W_PERIO >= 9.
T_SKAT-UM09S = T_SKAT-UM09S + T_SKC1A-UM09S * 100.
T_SKAT-UM09H = T_SKAT-UM09H + T_SKC1A-UM09H * 100.
T_SKAT-UM09K = T_SKAT-UM09K + T_SKC1A-UM09K * 100.
ENDIF.
IF W_PERIO >= 8.
T_SKAT-UM08S = T_SKAT-UM08S + T_SKC1A-UM08S * 100.
T_SKAT-UM08H = T_SKAT-UM08H + T_SKC1A-UM08H * 100.
T_SKAT-UM08K = T_SKAT-UM08K + T_SKC1A-UM08K * 100.
ENDIF.
IF W_PERIO >= 7.
T_SKAT-UM07S = T_SKAT-UM07S + T_SKC1A-UM07S * 100.
T_SKAT-UM07H = T_SKAT-UM07H + T_SKC1A-UM07H * 100.
T_SKAT-UM07K = T_SKAT-UM07K + T_SKC1A-UM07K * 100.
ENDIF.
IF W_PERIO >= 6.
T_SKAT-UM06S = T_SKAT-UM06S + T_SKC1A-UM06S * 100.
T_SKAT-UM06H = T_SKAT-UM06H + T_SKC1A-UM06H * 100.
T_SKAT-UM06K = T_SKAT-UM06K + T_SKC1A-UM06K * 100.
ENDIF.
IF W_PERIO >= 5.
T_SKAT-UM05S = T_SKAT-UM05S + T_SKC1A-UM05S * 100.
T_SKAT-UM05H = T_SKAT-UM05H + T_SKC1A-UM05H * 100.
T_SKAT-UM05K = T_SKAT-UM05K + T_SKC1A-UM05K * 100.
ENDIF.
IF W_PERIO >= 4.
T_SKAT-UM04S = T_SKAT-UM04S + T_SKC1A-UM04S * 100.
T_SKAT-UM04H = T_SKAT-UM04H + T_SKC1A-UM04H * 100.
T_SKAT-UM04K = T_SKAT-UM04K + T_SKC1A-UM04K * 100.
ENDIF.
IF W_PERIO >= 3.
T_SKAT-UM03S = T_SKAT-UM03S + T_SKC1A-UM03S * 100.
T_SKAT-UM03H = T_SKAT-UM03H + T_SKC1A-UM03H * 100.
T_SKAT-UM03K = T_SKAT-UM03K + T_SKC1A-UM03K * 100.
ENDIF.
IF W_PERIO >= 2.
T_SKAT-UM02S = T_SKAT-UM02S + T_SKC1A-UM02S * 100.
T_SKAT-UM02H = T_SKAT-UM02H + T_SKC1A-UM02H * 100.
T_SKAT-UM02K = T_SKAT-UM02K + T_SKC1A-UM02K * 100.
ENDIF.
IF W_PERIO >= 1.
T_SKAT-UMSAV = T_SKAT-UMSAV + T_SKC1A-UMSAV * 100.
T_SKAT-UM01S = T_SKAT-UM01S + T_SKC1A-UM01S * 100.
T_SKAT-UM01H = T_SKAT-UM01H + T_SKC1A-UM01H * 100.
T_SKAT-UM01K = T_SKAT-UM01K + T_SKC1A-UM01K * 100.
ENDIF.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM JYOSAN                                                   *
*---------------------------------------------------------------------*
FORM JYOSAN.
IF W_PERIO >= 12.
T_SKAT-UM12S = T_SKAT-UM12S + T_SKC1A-UM12S * 100.
T_SKAT-UM12H = T_SKAT-UM12H + T_SKC1A-UM12H * 100.
T_SKAT-UM12K = T_SKAT-UM12K - T_SKC1A-UM12K * 100.
ENDIF.
IF W_PERIO >= 11.
T_SKAT-UM11S = T_SKAT-UM11S + T_SKC1A-UM11S * 100.
T_SKAT-UM11H = T_SKAT-UM11H + T_SKC1A-UM11H * 100.
T_SKAT-UM11K = T_SKAT-UM11K - T_SKC1A-UM11K * 100.
ENDIF.
IF W_PERIO >= 10.
T_SKAT-UM10S = T_SKAT-UM10S + T_SKC1A-UM10S * 100.
T_SKAT-UM10H = T_SKAT-UM10H + T_SKC1A-UM10H * 100.
T_SKAT-UM10K = T_SKAT-UM10K - T_SKC1A-UM10K * 100.
ENDIF.
IF W_PERIO >= 9.
T_SKAT-UM09S = T_SKAT-UM09S + T_SKC1A-UM09S * 100.
T_SKAT-UM09H = T_SKAT-UM09H + T_SKC1A-UM09H * 100.
T_SKAT-UM09K = T_SKAT-UM09K - T_SKC1A-UM09K * 100.
ENDIF.
IF W_PERIO >= 8.
T_SKAT-UM08S = T_SKAT-UM08S + T_SKC1A-UM08S * 100.
T_SKAT-UM08H = T_SKAT-UM08H + T_SKC1A-UM08H * 100.
T_SKAT-UM08K = T_SKAT-UM08K - T_SKC1A-UM08K * 100.
ENDIF.
IF W_PERIO >= 7.
T_SKAT-UM07S = T_SKAT-UM07S + T_SKC1A-UM07S * 100.
T_SKAT-UM07H = T_SKAT-UM07H + T_SKC1A-UM07H * 100.
T_SKAT-UM07K = T_SKAT-UM07K - T_SKC1A-UM07K * 100.
ENDIF.
IF W_PERIO >= 6.
T_SKAT-UM06S = T_SKAT-UM06S + T_SKC1A-UM06S * 100.
T_SKAT-UM06H = T_SKAT-UM06H + T_SKC1A-UM06H * 100.
T_SKAT-UM06K = T_SKAT-UM06K - T_SKC1A-UM06K * 100.
ENDIF.
IF W_PERIO >= 5.
T_SKAT-UM05S = T_SKAT-UM05S + T_SKC1A-UM05S * 100.
T_SKAT-UM05H = T_SKAT-UM05H + T_SKC1A-UM05H * 100.
T_SKAT-UM05K = T_SKAT-UM05K - T_SKC1A-UM05K * 100.
ENDIF.
IF W_PERIO >= 4.
T_SKAT-UM04S = T_SKAT-UM04S + T_SKC1A-UM04S * 100.
T_SKAT-UM04H = T_SKAT-UM04H + T_SKC1A-UM04H * 100.
T_SKAT-UM04K = T_SKAT-UM04K - T_SKC1A-UM04K * 100.
ENDIF.
IF W_PERIO >= 3.
T_SKAT-UM03S = T_SKAT-UM03S + T_SKC1A-UM03S * 100.
T_SKAT-UM03H = T_SKAT-UM03H + T_SKC1A-UM03H * 100.
T_SKAT-UM03K = T_SKAT-UM03K - T_SKC1A-UM03K * 100.
ENDIF.
IF W_PERIO >= 2.
T_SKAT-UM02S = T_SKAT-UM02S + T_SKC1A-UM02S * 100.
T_SKAT-UM02H = T_SKAT-UM02H + T_SKC1A-UM02H * 100.
T_SKAT-UM02K = T_SKAT-UM02K - T_SKC1A-UM02K * 100.
ENDIF.
IF W_PERIO >= 1.
T_SKAT-UMSAV = T_SKAT-UMSAV - T_SKC1A-UMSAV * 100.
T_SKAT-UM01S = T_SKAT-UM01S + T_SKC1A-UM01S * 100.
T_SKAT-UM01H = T_SKAT-UM01H + T_SKC1A-UM01H * 100.
T_SKAT-UM01K = T_SKAT-UM01K - T_SKC1A-UM01K * 100.
ENDIF.
ENDFORM.

*----------------------------------------------------------------------*
*         ÉeÅ[ÉuÉãÇÃì«çûÇ›
*----------------------------------------------------------------------*

*ëçä®íËå≥í†É}ÉXÉ^ì«çûÇ›
FORM MASTA.
SELECT SINGLE * FROM SKAT
WHERE  SPRAS  =  'J'
AND    KTOPL  = T001-KTOPL
AND    SAKNR  = W_SAKNR_OLD.
IF SY-SUBRC = 0.
ELSE.
SKAT-TXT20 = ''.
SKAT-TXT50 = ''.
ENDIF.
ENDFORM.

*----------------------------------------------------------------------*
*         ì¸èoã‡é¿ê—ï\èoóÕèàóù
*----------------------------------------------------------------------*
FORM PRNT_LIST.
IF W_CTR_LINE > 55.
NEW-PAGE.
PERFORM OUT_HEADER.
PERFORM OUT_HEADER1.
ENDIF.
PERFORM OUT_DETAIL.
ENDFORM.

*----------------------------------------------------------------------*
*        å©èoÇµï“èWèàóù
*----------------------------------------------------------------------*
FORM EDT_HEADER.
* ëŒè€îNåéï“èW
W_TAISYO_Y = P_NEN.
W_TAISYO_M = P_TUKI.

PERFORM TUKI_SET.

W_PAGNO    = 1.
W_CTR_LINE = 58.
ENDFORM.

*----------------------------------------------------------------------*
*           å©èoÇµèoóÕèàóù                                             *
*----------------------------------------------------------------------*
FORM OUT_HEADER.
* W_CNT = 58 - W_CTR_LINE.
* SKIP W_CNT.

* WRITE: /162 'Õﬂ∞ºﬁ ',W_PAGNO NO-ZERO.
WRITE: 162 'Õﬂ∞ºﬁ ',W_PAGNO NO-ZERO.
WRITE: /010 W_NEN,'îNìx',
065 'ä®  íË Åiï‚ èïÅj â»  ñ⁄  ï   éc  çÇ  àÍ  óó  ï\',
130 'çÏê¨îNåéì˙',
SY-DATUM(4),'îN',
SY-DATUM+4(2) NO-ZERO,'åé',
SY-DATUM+6(2) NO-ZERO,'ì˙',
162 SY-UZEIT(2),':',
SY-UZEIT+2(2).
WRITE:/064 '=================================================',
162 'íPà ÅFâ~'.
WRITE:/077 '(',P_NEN,'îN',
P_TUKI NO-ZERO,'åé',
W_HI NO-ZERO,'ì˙åªç›Åj'.
SKIP.
W_CTR_LINE = 5.
W_PAGNO    = W_PAGNO + 1.
ENDFORM.
*----------------------------------------------------------------------*
*           ì¸ã‡ÅEèoã‡èoóÕ                                             *
*----------------------------------------------------------------------*
FORM OUT_HEADER1.
SKIP.
WRITE:/001 'â» ñ⁄ ñº',
011 'çÄñ⁄',
* Mod ES-UP 2012/09/10 -->
*         024 W_A01 ,037 W_A02 ,049 W_A03 ,063 W_A04 ,076 W_A05 ,
*         089 W_A06 ,102 W_A07,115 W_A08,128 W_A09,
*         141 W_A10 ,154 W_A11 ,167 W_A12.
024(4) W_A01,037(4) W_A02,049(4) W_A03,063(4) W_A04,076(4) W_A05,
089(4) W_A06,102(4) W_A07,115(4) W_A08,128(4) W_A09,
141(4) W_A10,154(4) W_A11,167(4) W_A12.
* Mod ES-UP 2012/09/10 <--
ULINE.
W_CTR_LINE = W_CTR_LINE + 3.
ENDFORM.

*----------------------------------------------------------------------*
*         ñæç◊èoóÕèàóù
*----------------------------------------------------------------------*
FORM OUT_DETAIL.
PERFORM MASTA.
WRITE: /001 SKAT-TXT50,
/011 'ëOéc'.
PERFORM YF01NUMC USING T_SKAT-UMSAV 12 0.
WRITE: 016 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM01K 12 0.
WRITE: 029 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM02K 12 0.
WRITE: 042 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM03K 12 0.
WRITE: 055 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM04K 12 0.
WRITE: 068 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM05K 12 0.
WRITE: 081 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM06K 12 0.
WRITE: 094 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM07K 12 0.
WRITE: 107 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM08K 12 0.
WRITE: 120 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM09K 12 0.
WRITE: 133 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM10K 12 0.
WRITE: 146 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM11K 12 0.
WRITE: 159 O_NUM USING EDIT MASK 'RR____________'.

WRITE: /011 'éÿï˚'.
PERFORM YF01NUMC USING T_SKAT-UM01S 12 0.
WRITE: 016 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM02S 12 0.
WRITE: 029 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM03S 12 0.
WRITE: 042 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM04S 12 0.
WRITE: 055 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM05S 12 0.
WRITE: 068 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM06S 12 0.
WRITE: 081 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM07S 12 0.
WRITE: 094 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM08S 12 0.
WRITE: 107 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM09S 12 0.
WRITE: 120 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM10S 12 0.
WRITE: 133 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM11S 12 0.
WRITE: 146 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM12S 12 0.
WRITE: 159 O_NUM USING EDIT MASK 'RR____________'.

WRITE: /011 'ë›ï˚'.
PERFORM YF01NUMC USING T_SKAT-UM01H 12 0.
WRITE: 016 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM02H 12 0.
WRITE: 029 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM03H 12 0.
WRITE: 042 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM04H 12 0.
WRITE: 055 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM05H 12 0.
WRITE: 068 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM06H 12 0.
WRITE: 081 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM07H 12 0.
WRITE: 094 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM08H 12 0.
WRITE: 107 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM09H 12 0.
WRITE: 120 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM10H 12 0.
WRITE: 133 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM11H 12 0.
WRITE: 146 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM12H 12 0.
WRITE: 159 O_NUM USING EDIT MASK 'RR____________'.

WRITE: /011 'ìñéc'.
PERFORM YF01NUMC USING T_SKAT-UM01K 12 0.
WRITE: 016 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM02K 12 0.
WRITE: 029 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM03K 12 0.
WRITE: 042 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM04K 12 0.
WRITE: 055 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM05K 12 0.
WRITE: 068 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM06K 12 0.
WRITE: 081 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM07K 12 0.
WRITE: 094 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM08K 12 0.
WRITE: 107 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM09K 12 0.
WRITE: 120 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM10K 12 0.
WRITE: 133 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM11K 12 0.
WRITE: 146 O_NUM USING EDIT MASK 'RR____________'.
PERFORM YF01NUMC USING T_SKAT-UM12K 12 0.
WRITE: 159 O_NUM USING EDIT MASK 'RR____________'.
ULINE.
W_CTR_LINE = W_CTR_LINE + 6.
CLEAR T_SKAT.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM TUKI_SET                                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM TUKI_SET.

S_FNAME-CNT = 1.

SELECT * FROM  T009B INTO TABLE T_T009B
WHERE  PERIV       = T001-PERIV.

SORT T_T009B BY POPER.

LOOP AT T_T009B.
CLEAR: S_TUKI.
WRITE T_T009B-BUMON TO S_TUKI-TUKI1 NO-ZERO.
MOVE 'åé' TO S_TUKI-TUKI2.
CONDENSE S_TUKI.
ASSIGN (S_FNAME) TO <FNAME>.
WRITE S_TUKI TO <FNAME> RIGHT-JUSTIFIED.
S_FNAME-CNT = S_FNAME-CNT + 1.
IF S_FNAME-CNT > 12.
EXIT.
ENDIF.
ENDLOOP.

ENDFORM.
