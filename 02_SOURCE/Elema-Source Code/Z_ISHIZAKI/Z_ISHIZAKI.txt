REPORT Z_ISHIZAKI MESSAGE-ID Y1
NO STANDARD PAGE HEADING.

*&---------------------------------------------------------------------*
*&   テーブル定義　
*&---------------------------------------------------------------------*
TABLES DD03L.   "ﾃｰﾌﾞﾙ項目
*
DATA :
BGR00 TYPE BGR00,   "ｾｯｼｮﾝﾃﾞｰﾀ用ﾊﾞｯﾁ入力構造
BKN00 TYPE BKN00,   "ﾊﾞｯﾁ入力用得意先ﾏｽﾀﾚｺｰﾄﾞ取引ﾃﾞｰﾀ
BKNA1 TYPE BKNA1,   "一般得意先マスタレコードパート
BKNB1 TYPE BKNB1,   "会社コードデータ
BKNBK TYPE BKNBK,   "銀行データ
BKNVV TYPE BKNVV,   "販売データ
BKNVP TYPE BKNVP.   "取引先機能

*&---------------------------------------------------------------------*
*&   定数定義　
*&---------------------------------------------------------------------*
*CONSTANTS:

*&---------------------------------------------------------------------*
*&   データ型定義/内部テーブル定義　
*&---------------------------------------------------------------------*
TYPES: BEGIN OF ST_IN,
KUNNR  LIKE BKN00-KUNNR, "得意先ｺｰﾄﾞ
*
NAME1  LIKE BKNA1-NAME1, "名称1
NAME2  LIKE BKNA1-NAME2, "名称2
NAME3  LIKE BKNA1-NAME3, "名称3
NAME4  LIKE BKNA1-NAME4, "名称4
STRAS  LIKE BKNA1-STRAS, "都道府県
ORT01  LIKE BKNA1-ORT01, "市区町村
SORTL  LIKE BKNA1-SORTL, "検索用語
PSTLZ  LIKE BKNA1-PSTLZ, "郵便番号
LAND1  LIKE BKNA1-LAND1, "国ｺｰﾄﾞ
REGIO  LIKE BKNA1-REGIO, "地域
TELF1  LIKE BKNA1-TELF1, "電話番号
*会社
INTAD  LIKE BKNB1-INTAD, "関係会社担当者のインターネット
*銀行
BANKL  LIKE BKNBK-BANKL, "銀行コード
BANKN  LIKE BKNBK-BANKN, "銀行口座番号
KOINH  LIKE BKNBK-KOINH, "口座名義人名
*販売エリア
KVGR1  LIKE BKNVV-KVGR1, "得意先グループ 1
*取引先機能
KTONR  LIKE BKNVP-KTONR, "営業員
END OF ST_IN.

DATA I_IN TYPE STANDARD TABLE OF ST_IN WITH HEADER LINE.

DATA:W_ZERO(10) TYPE N.      "ｾﾞﾛ埋め項目
DATA:W_KUNNR TYPE KNA1-KUNNR.

DATA:W_INCNT  LIKE SY-DBCNT, "入力ﾚｺｰﾄﾞ件数
W_OUTCNT LIKE SY-DBCNT, "出力ﾚｺｰﾄﾞ件数
W_TRNCNT LIKE SY-DBCNT. "出力得意先ｺｰﾄﾞ件数

*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
PARAMETERS P_IN(128) LOWER CASE OBLIGATORY.   "入力ﾌｧｲﾙ名
PARAMETERS P_OUT(128) LOWER CASE OBLIGATORY.  "出力ﾌｧｲﾙ名
PARAMETERS P_GROUP LIKE BGR00-GROUP           "ｾｯｼｮﾝ名
OBLIGATORY DEFAULT SY-REPID.

*&---------------------------------------------------------------------*
*&   処理
*&---------------------------------------------------------------------*
START-OF-SELECTION.
CLEAR:W_INCNT,  "入力ﾚｺｰﾄﾞ件数
W_OUTCNT, "出力ﾚｺｰﾄﾞ件数
W_TRNCNT. "出力得意先ｺｰﾄﾞ件数
REFRESH:I_IN.
CLEAR:  I_IN.
*
PERFORM F_READFILE.     "ﾌｧｲﾙﾘｰﾄﾞ
PERFORM F_OPENDATASET.  "ﾌｧｲﾙｵｰﾌﾟﾝ
PERFORM F_DATACHECK.    "ﾃﾞｰﾀﾁｪｯｸ
PERFORM F_BGR00.        "ｾｯｼｮﾝﾚｺｰﾄﾞ 作成
LOOP AT I_IN.
PERFORM F_BKN00.      "得意先ﾏｽﾀ ﾍｯﾀﾞﾚｺｰﾄﾞ 作成
PERFORM F_BKNA1.      "得意先ﾏｽﾀ 一般ﾃﾞｰﾀﾚｺｰﾄﾞ 作成
PERFORM F_BKNB1.      "得意先ﾏｽﾀ 会社ﾚｺｰﾄﾞ 作成
PERFORM F_BKNBK.      "得意先ﾏｽﾀ 銀行ﾚｺｰﾄﾞ 作成
PERFORM F_BKNVV.      "得意先ﾏｽﾀ 販売ｴﾘｱﾚｺｰﾄﾞ 作成
PERFORM F_BKNVP.      "得意先ﾏｽﾀ 取引先機能ﾚｺｰﾄﾞ 作成
ENDLOOP.
PERFORM F_LOG.          "ﾛｸﾞ(ﾀﾞｲｱﾛｸﾞﾎﾞｯｸｽ)
*---------------------------------------------------------------------*
*       FORM F_OPENDATASET
*---------------------------------------------------------------------*
*       ファイルオープン
*---------------------------------------------------------------------*
FORM F_OPENDATASET.
OPEN DATASET P_OUT FOR OUTPUT IN TEXT MODE.
IF SY-SUBRC <> 0.
MESSAGE S401(Y1) WITH 'ファイルオープンエラー' P_OUT.
STOP.
ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*       FORM F_READFILE
*---------------------------------------------------------------------*
*       ファイルリード
*---------------------------------------------------------------------*
FORM F_READFILE.
DATA:
L_CANCEL TYPE C.
*
CLEAR:L_CANCEL.
*
CALL FUNCTION 'UPLOAD'
EXPORTING
FILENAME                      = P_IN
FILETYPE                      = 'DAT'
IMPORTING
CANCEL                        = L_CANCEL
TABLES
DATA_TAB                      = I_IN
EXCEPTIONS
CONVERSION_ERROR              = 1
INVALID_TABLE_WIDTH           = 2
INVALID_TYPE                  = 3
NO_BATCH                      = 4
UNKNOWN_ERROR                 = 5
GUI_REFUSE_FILETRANSFER       = 6
OTHERS                        = 7
.

IF SY-SUBRC <> 0.
MESSAGE S401(Y1) WITH 'システムエラー' SY-SUBRC.
STOP.
ELSE.
*キャンセル
IF NOT L_CANCEL IS INITIAL.
MESSAGE S401(Y1) WITH '処理を中止しました'.
STOP.
ELSE.
* 入力レコード件数
DESCRIBE TABLE I_IN LINES W_INCNT.
IF W_INCNT = 0.
MESSAGE S401(Y1) WITH '変更データが０件です'.
STOP.
ENDIF.
ENDIF.
ENDIF.
*
ENDFORM.
*---------------------------------------------------------------------*
*       F_DATACHECK
*---------------------------------------------------------------------*
*       データチェック
*---------------------------------------------------------------------*
FORM F_DATACHECK.
LOOP AT I_IN.
*** 得意先コード頭ゼロ埋め
IF I_IN-KUNNR CO '1234567890 '.
W_ZERO = I_IN-KUNNR.
I_IN-KUNNR = W_ZERO.
MODIFY I_IN.
ENDIF.
ENDLOOP.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM F_BGR00
*---------------------------------------------------------------------*
*       ｾｯｼｮﾝﾚｺｰﾄﾞ 作成　　　                                          *
*---------------------------------------------------------------------*
FORM F_BGR00.
PERFORM F_INIT_VAL USING 'BGR00'.
BGR00-STYPE = '0'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
BGR00-GROUP = P_GROUP.      "ｾｯｼｮﾝ名
BGR00-MANDT = SY-MANDT.     "ｸﾗｲｱﾝﾄ
BGR00-USNAM = SY-UNAME.     "ﾕｰｻﾞ名
BGR00-START = SPACE.        "開始日
BGR00-XKEEP = 'X'.          "保持ﾌﾗｸﾞ
BGR00-NODATA = '/'.         "ﾊﾞｯﾁｲﾝﾌﾟｯﾄなし項目
TRANSFER BGR00 TO P_OUT.
* 出力レコード件数
ADD 1 TO W_OUTCNT.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM F_BKN00
*---------------------------------------------------------------------*
*       得意先ﾏｽﾀ ﾍｯﾀﾞﾚｺｰﾄﾞ 作成                                      *
*---------------------------------------------------------------------*
FORM F_BKN00.

PERFORM F_INIT_VAL USING 'BKN00'.
BKN00-STYPE = '1'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
BKN00-TCODE = 'XD02'.       "変更
BKN00-KUNNR = I_IN-KUNNR.   "得意先ｺｰﾄﾞ
*会社
SELECT SINGLE KUNNR INTO W_KUNNR
FROM KNB1
WHERE KUNNR = BKN00-KUNNR
AND   BUKRS = 'C001'.
IF SY-SUBRC = 0.
BKN00-BUKRS = 'C001'.        "会社ｺｰﾄﾞ
ENDIF.
*販売エリア
SELECT SINGLE KUNNR INTO W_KUNNR
FROM KNVV
WHERE KUNNR = BKN00-KUNNR
AND   VKORG = '1000'      "販売組織
AND   VTWEG = '10'        "流通チャネル
AND   SPART = '10'.       "製品部門
IF SY-SUBRC = 0.
BKN00-VKORG = '1000'.
BKN00-VTWEG = '10'.
BKN00-SPART = '10'.
ENDIF.
*
TRANSFER BKN00 TO P_OUT.
* 出力レコード件数/出力得意先コード件数
ADD 1 TO W_OUTCNT.
ADD 1 TO W_TRNCNT.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM F_BKNA1
*---------------------------------------------------------------------*
*       得意先ﾏｽﾀ 一般ﾃﾞｰﾀﾚｺｰﾄﾞ 作成                                  *
*---------------------------------------------------------------------*
FORM F_BKNA1.
DATA :
L_2N(02) TYPE N.

SELECT SINGLE KUNNR INTO W_KUNNR
FROM KNA1 "得意先マスタ: 一般データ
WHERE KUNNR = BKN00-KUNNR.

CHECK SY-SUBRC = 0.

PERFORM F_INIT_VAL USING 'BKNA1'.
BKNA1-STYPE = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
BKNA1-TBNAM = 'BKNA1'.      "ﾃｰﾌﾞﾙ名
BKNA1-NAME1 = I_IN-NAME1.   "名称1
BKNA1-NAME2 = I_IN-NAME2.   "名称2
BKNA1-NAME3 = I_IN-NAME3.   "名称3
BKNA1-NAME4 = I_IN-NAME4.   "名称4
BKNA1-STRAS = I_IN-STRAS.   "都道府県
BKNA1-ORT01 = I_IN-ORT01.   "市区町村
BKNA1-SORTL = I_IN-SORTL.   "検索用語
BKNA1-PSTLZ = I_IN-PSTLZ.   "郵便番号
BKNA1-LAND1 = I_IN-LAND1.   "国ｺｰﾄﾞ
IF I_IN-REGIO CO '1234567890 '.
L_2N = I_IN-REGIO.
BKNA1-REGIO = L_2N.       "地域
ELSE.
BKNA1-REGIO = I_IN-REGIO. "地域
ENDIF.
BKNA1-TELF1 = I_IN-TELF1.   "電話番号

TRANSFER BKNA1 TO P_OUT.

* 出力レコード件数
ADD 1 TO W_OUTCNT.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM F_INIT_VAL                                               *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  VALUE(P_DB)                                                   *
*---------------------------------------------------------------------*
FORM F_INIT_VAL USING VALUE(P_DB).
* ローカル変数
FIELD-SYMBOLS <PT> TYPE ANY.
DATA: WK_DB(60) TYPE C.
* 変数の初期化
SELECT * FROM DD03L WHERE TABNAME = P_DB.
CONCATENATE P_DB '-' DD03L-FIELDNAME INTO WK_DB.
ASSIGN (WK_DB) TO <PT>.
<PT> = '/'.
ENDSELECT.
ENDFORM.
*---------------------------------------------------------------------*
*       FORM F_LOG
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM F_LOG.
MESSAGE I402(Y1) WITH '入力レコード:' W_INCNT '件'.
MESSAGE I402(Y1) WITH '出力レコード:' W_OUTCNT '件'.
MESSAGE I402(Y1) WITH '出力得意先コード:' W_TRNCNT '件'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_BKNB1
*&---------------------------------------------------------------------*
*       得意先ﾏｽﾀ 会社ﾚｺｰﾄﾞ 作成
*----------------------------------------------------------------------*
FORM F_BKNB1.
*
CHECK BKN00-BUKRS = 'C001'.        "会社ｺｰﾄﾞ
*
PERFORM F_INIT_VAL USING 'BKNB1'.
BKNB1-STYPE = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
BKNB1-TBNAM = 'BKNB1'.      "ﾃｰﾌﾞﾙ名
BKNB1-INTAD = I_IN-INTAD.   "関係会社担当者のインターネットアドレス
*
TRANSFER BKNB1 TO P_OUT.
* 出力レコード件数
ADD 1 TO W_OUTCNT.
*
ENDFORM.                    " F_BKNB1
*&---------------------------------------------------------------------*
*&      Form  F_BKNBK
*&---------------------------------------------------------------------*
*       得意先ﾏｽﾀ 銀行ﾚｺｰﾄﾞ 作成
*----------------------------------------------------------------------*
FORM F_BKNBK.
*
DATA:
L_7N(7) TYPE N,
L_BKONT TYPE KNBK-BKONT.
*
CHECK NOT I_IN-BANKL = '/' AND
NOT I_IN-BANKN = '/' AND
NOT I_IN-KOINH = '/'.
*
*銀行コード
IF I_IN-BANKL CO '1234567890 '.
L_7N = I_IN-BANKL.
BKNBK-BANKL = L_7N.
ELSE.
BKNBK-BANKL = I_IN-BANKL.
ENDIF.
*
SELECT SINGLE BKONT INTO L_BKONT
FROM KNBK
WHERE KUNNR = BKN00-KUNNR
AND   BANKS = 'JP'
AND   BANKL = BKNBK-BANKL
AND   BANKN = I_IN-BANKN.
*
CHECK SY-SUBRC = 0.
*
PERFORM F_INIT_VAL USING 'BKNBK'.
BKNBK-STYPE = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
BKNBK-TBNAM = 'BKNBK'.      "ﾃｰﾌﾞﾙ名
*銀行国コード
BKNBK-BANKS = 'JP'.
*フラグ: バッチインプットで登録削除?
BKNBK-XDELE = 'X'. "削除
*銀行コード
IF I_IN-BANKL CO '1234567890 '.
L_7N = I_IN-BANKL.
BKNBK-BANKL = L_7N.
ELSE.
BKNBK-BANKL = I_IN-BANKL.
ENDIF.
*銀行口座番号
BKNBK-BANKN = I_IN-BANKN.
*
TRANSFER BKNBK TO P_OUT.
* 出力レコード件数
ADD 1 TO W_OUTCNT.
*
PERFORM F_INIT_VAL USING 'BKNBK'.
BKNBK-STYPE = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
BKNBK-TBNAM = 'BKNBK'.      "ﾃｰﾌﾞﾙ名
*銀行国コード
BKNBK-BANKS = 'JP'.
*フラグ: バッチインプットで登録削除?
BKNBK-XDELE = SPACE. "登録
*銀行コード
IF I_IN-BANKL CO '1234567890 '.
L_7N = I_IN-BANKL.
BKNBK-BANKL = L_7N.
ELSE.
BKNBK-BANKL = I_IN-BANKL.
ENDIF.
*銀行口座番号
BKNBK-BANKN = I_IN-BANKN.
*口座名義人名
BKNBK-KOINH = I_IN-KOINH.
*銀行管理キー
BKNBK-BKONT = L_BKONT.
*
TRANSFER BKNBK TO P_OUT.
* 出力レコード件数
ADD 1 TO W_OUTCNT.

ENDFORM.                    " F_BKNBK
*&---------------------------------------------------------------------*
*&      Form  F_BKNVV
*&---------------------------------------------------------------------*
*       得意先ﾏｽﾀ 販売ｴﾘｱﾚｺｰﾄﾞ 作成
*----------------------------------------------------------------------*
FORM F_BKNVV.

CHECK  BKN00-VKORG = '1000'.
*
PERFORM F_INIT_VAL USING 'BKNVV'.
BKNVV-STYPE = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
BKNVV-TBNAM = 'BKNVV'.      "ﾃｰﾌﾞﾙ名
BKNVV-KVGR1 = I_IN-KVGR1.   "得意先グループ 1
*
TRANSFER BKNVV TO P_OUT.
* 出力レコード件数
ADD 1 TO W_OUTCNT.
*

ENDFORM.                    " F_BKNVV
*&---------------------------------------------------------------------*
*&      Form  F_BKNVP
*&---------------------------------------------------------------------*
*       得意先ﾏｽﾀ 取引先機能ﾚｺｰﾄﾞ 作成
*----------------------------------------------------------------------*
FORM F_BKNVP.
DATA:
L_PERNR TYPE KNVP-PERNR.
*
CHECK NOT I_IN-KTONR = '/'.
*
SELECT SINGLE PERNR INTO L_PERNR
FROM KNVP
WHERE KUNNR = BKN00-KUNNR
AND   VKORG = '1000'
AND   VTWEG = '10'
AND   SPART = '10'
AND   PARVW = 'VE'. "営業員
*
CHECK SY-SUBRC = 0.
*削除
PERFORM F_INIT_VAL USING 'BKNVP'.
BKNVP-STYPE = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
BKNVP-TBNAM = 'BKNVP'.      "ﾃｰﾌﾞﾙ名
BKNVP-XDELE = 'X'.
BKNVP-PARVW = 'VE'.
BKNVP-KTONR = L_PERNR.
*
TRANSFER BKNVP TO P_OUT.
* 出力レコード件数
ADD 1 TO W_OUTCNT.
*登録
PERFORM F_INIT_VAL USING 'BKNVP'.
BKNVP-STYPE = '2'.          "ﾚｺｰﾄﾞﾀｲﾌﾟ
BKNVP-TBNAM = 'BKNVP'.      "ﾃｰﾌﾞﾙ名
BKNVP-XDELE = SPACE.
BKNVP-PARVW = 'VE'.
BKNVP-KTONR = I_IN-KTONR.
*
TRANSFER BKNVP TO P_OUT.
* 出力レコード件数
ADD 1 TO W_OUTCNT.

ENDFORM.                    " F_BKNVP
