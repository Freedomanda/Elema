*----------------------------------------------------------------------*
***INCLUDE YMP120MP003FI01 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  GET_MATNR_DATA
*&---------------------------------------------------------------------*
*       品目情報取得
*----------------------------------------------------------------------*
*      -->I_MATNR  品目情報テーブル
*----------------------------------------------------------------------*
*FORM GET_MATNR_DATA TABLES   I_MATNR STRUCTURE ST_MATNR.
FORM GET_MATNR_DATA.

CALL FUNCTION 'ENQUEUE_EMMARAE'
EXPORTING
MODE_MARA      = 'E'
MANDT          = SY-MANDT
MATNR          = /A1F/YMNS0001-YM_MATNR
EXCEPTIONS
FOREIGN_LOCK   = 1
SYSTEM_FAILURE = 2
OTHERS         = 3.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

SELECT MARA~MATNR      "品目コード
**** START DEL 2015/07/13 ISID18 ****
*         MAKT~MAKTX      "品目テキスト
**** END DEL 2015/07/13 ISID18 ****
MARA~MTART      "品目タイプ
MARA~MATKL      "品目グループ
T023T~WGBEZ     "品目グループテキスト
MARA~MEINS      "基本数量単位
MARA~BSTME      "発注単位
MARA~NTGEW      "正味質量
MARA~STOFF      "危険物コード
MARA~SPART      "製品部門
MARA~PRDHA      "品目階層
T179T~VTEXT     "品目階層テキスト
MARA~LVORM      "削除フラグ
* Append By Mis-Ohno
*         MARA~WRKST      "主構成物質
*         MARA~NORMT      "標準テキスト
* END Append
INTO CORRESPONDING FIELDS OF LST_MATNR
FROM MARA
**** START DEL 2015/07/13 ISID18 ****
*          INNER JOIN MAKT
*            ON MARA~MATNR = MAKT~MATNR
**** END DEL 2015/07/13 ISID18 ****
LEFT JOIN T023T
ON MARA~MATKL = T023T~MATKL
**** START ADD 2014/08/26 ISID･喩 ****
AND T023T~SPRAS = SY-LANGU
**** END ADD 2014/08/26 ISID･喩 ****
LEFT JOIN T179T
ON MARA~PRDHA = T179T~PRODH
**** START ADD 2014/08/26 ISID･喩 ****
AND T179T~SPRAS = SY-LANGU
**** END ADD 2014/08/26 ISID･喩 ****
WHERE MARA~MATNR = /A1F/YMNS0001-YM_MATNR.
**** START ADD 2014/08/26 ISID･喩 ****
**** START DEL 2015/07/13 ISID18 ****
*            AND MAKT~SPRAS = SY-LANGU.
**** END DEL 2015/07/13 ISID18 ****
**** END ADD 2014/08/26 ISID･喩 ****
ENDSELECT.

**** START ADD 2015/07/13 ISID18 ****
PERFORM GET_MAKTX_ACCOD_LANG
USING    /A1F/YMNS0001-YM_MATNR
CHANGING /A1F/YMNS0001-YM_MAKTX_LANG
/A1F/YMNS0001-YM_MAKTX
A1F_INIT_FLG_MAKTX.
**** END ADD 2015/07/13 ISID18 ****

IF LST_MATNR-LVORM IS INITIAL.
ELSE.
MESSAGE W315(/A1F/YLMS0100).
ENDIF.

IF SY-SUBRC = 0.
**** START DEL 2015/07/13 ISID18 ****
*    /A1F/YMNS0001-YM_MAKTX      = LST_MATNR-MAKTX.   "品目テキスト
**** END DEL 2015/07/13 ISID18 ****
/A1F/YMNS0001-YM_HNMKTYP    = LST_MATNR-MTART.   "品目タイプ
/A1F/YMNS0001-YM_MATKL      = LST_MATNR-MATKL.   "品目グループ
/A1F/YMNS0001-YM_MATKL_TEXT = LST_MATNR-WGBEZ.   "品目GRPテキスト
/A1F/YMNS0001-YM_MEINS      = LST_MATNR-MEINS.   "基本数量単位
/A1F/YMNS0001-YM_PSKMEIN1   = LST_MATNR-BSTME.
/A1F/YMNS0001-YM_PSKONMS1   = LST_MATNR-BSTME.
/A1F/YMNS0001-YM_BSTME      = LST_MATNR-BSTME.   "発注単位
/A1F/YMNS0001-YM_NTGEW      = LST_MATNR-NTGEW.   "正味質量
/A1F/YMNS0001-YM_STOFF      = LST_MATNR-STOFF.   "危険物コード
**** START UPD 2015/05/28 ISID18 ****
*    /A1F/YMNS0001-SPART         = LST_MATNR-SPART.   "製品部門
IF /A1F/YMNS0001-SPART IS INITIAL.
/A1F/YMNS0001-SPART = LST_MATNR-SPART.
ENDIF.
**** END UPD 2015/05/28 ISID18 ****
/A1F/YMNS0001-YM_PRDHA      = LST_MATNR-PRDHA.   "品目階層
/A1F/YMNS0001-YM_PRDHA_TEXT = LST_MATNR-VTEXT.   "品目階層テキスト
* Append By Mis-Ohno
*    /A1F/YMNS0001-YM_WRKST      = LST_MATNR-WRKST.   "主構成物質
*    /A1F/YMNS0001-YM_NORMT      = LST_MATNR-NORMT.   "標準テキスト
* END Append
ENDIF.

IF NOT ( /A1F/YMNS0001-YM_MEINS IS INITIAL ).
* 基本数量単位（販売）
/A1F/YMNS0001-YM_MEINSS = /A1F/YMNS0001-YM_MEINS.
* 基本数量単位（発注）
/A1F/YMNS0001-YM_MEINSP = /A1F/YMNS0001-YM_MEINS.
ENDIF.

ENDFORM.                    " GET_MATNR_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_MARM_DATA
*&---------------------------------------------------------------------*
*       品目数量単位情報取得
*----------------------------------------------------------------------*
FORM GET_MARM_DATA.

* ローカルデータ宣言
DATA:
LST_MARM TYPE TYP_MARM.

* 基本数量単位と発注単位が違うデータのみ取得
IF /A1F/YMNS0001-YM_BSTME NE /A1F/YMNS0001-YM_MEINS.
SELECT SINGLE
MEINH               "在庫単位の代替数量単位
UMREZ               "基本数量単位への換算分子
UMREN               "分母: 基本数量単位へ変換する場合
INTO LST_MARM
FROM MARM
WHERE MATNR = /A1F/YMNS0001-YM_MATNR
AND MEINH = /A1F/YMNS0001-YM_BSTME.

IF SY-SUBRC = 0.
* 基本数量単位と販売単位が同じ場合は画面に出力しない
*    /A1F/YMNS0001-YM_VRKME = LST_MARM-MEINH.    "販売数量単位
/A1F/YMNS0001-YM_UMRENP = LST_MARM-UMREN.   "分母（販売）
/A1F/YMNS0001-YM_UMREZP = LST_MARM-UMREZ.   "分子（販売）
ENDIF.
ENDIF.

ENDFORM.                    " GET_MARM_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_MARC_DATA
*&---------------------------------------------------------------------*
*       プラント情報取得
*----------------------------------------------------------------------*
FORM GET_MARC_DATA.

* ローカルデータ宣言
DATA:
LST_MARC TYPE TYP_MARC.

SELECT SINGLE
WEBAZ               "入庫処理日数
STAWN               "貿易: 統計品目コード/輸入コード番号
HERKL               "品目の原産国
**** START ADD 2015/07/13 ISID18 ****
LGPRO               "出庫保管場所
LGFSB               "外部調達保管場所
**** END ADD 2015/07/13 ISID18 ****
INTO LST_MARC
FROM MARC
WHERE MATNR = /A1F/YMNS0001-YM_MATNR   "品目コード
AND WERKS = /A1F/YMNS0001-WERKS.     "プラント

IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_WEBAZ = LST_MARC-WEBAZ.       "入庫処理日数
/A1F/YMNS0001-YM_STAWN = LST_MARC-STAWN.       "HSコード
/A1F/YMNS0001-YM_HERKL = LST_MARC-HERKL.       "原産地
**** START ADD 2015/07/13 ISID18 ****
/A1F/YMNS0001-YM_LGFSB = LST_MARC-LGFSB.       "外部調達保管場所
/A1F/YMNS0001-YM_LGPRO = LST_MARC-LGPRO.       "出庫保管場所
**** END ADD 2015/07/13 ISID18 ****
ELSE.
MESSAGE E306(/A1F/YLMS0100) WITH /A1F/YMNS0001-YM_MATNR
/A1F/YMNS0001-WERKS.
ENDIF.
ENDFORM.                    " GET_MARC_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_MARD_DATA
*&---------------------------------------------------------------------*
*       保管場所情報取得
*----------------------------------------------------------------------*
FORM GET_MARD_DATA.

* ローカルデータ宣言
DATA:
LW_LGPBE TYPE MARD-LGPBE.

SELECT SINGLE
LGPBE                                  "棚番
INTO LW_LGPBE
FROM MARD
WHERE MATNR = /A1F/YMNS0001-YM_MATNR   "品目コード
AND WERKS = /A1F/YMNS0001-WERKS      "プラント
AND LGORT = /A1F/YMNS0001-LGORT.     "保管場所

IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_LGPBE = LW_LGPBE.         "棚番
ENDIF.
ENDFORM.                    " GET_MARD_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_MBEW_DATA
*&---------------------------------------------------------------------*
*       品目評価情報取得
*----------------------------------------------------------------------*
FORM GET_MBEW_DATA.

* ローカルデータ宣言
DATA:
LST_MBEW TYPE TYP_MBEW,
**** START ADD 2014/09/01 ISID･喩 ****
LW_BAPICURR LIKE  BAPICURR-BAPICURR.
**** END ADD 2014/09/01 ISID･喩 ****

SELECT VERPR                    "移動平均原価/期間単位価格
PEINH                    "価格単位
INTO LST_MBEW
UP TO 1 ROWS
FROM MBEW
WHERE MATNR = /A1F/YMNS0001-YM_MATNR    "品目コード
AND BWKEY = /A1F/YMNS0001-WERKS.      "プラント
ENDSELECT.

IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_VERPR    = LST_MBEW-VERPR.     "移動平均原価
/A1F/YMNS0001-YM_PEINH    = LST_MBEW-PEINH.     "価格単位

IF /A1F/YMNS0001-YM_WAERS IS INITIAL.
* システム通貨取得
**** START UPD 2015/05/28 ISID18 ****
*      SELECT SINGLE
*             MWAER
*             INTO /A1F/YMNS0001-YM_WAERS
*             FROM T000
*             WHERE MANDT = SY-MANDT.
SELECT SINGLE WAERS
INTO /A1F/YMNS0001-YM_WAERS
FROM T001
WHERE BUKRS = /A1F/YMNS0001-BUKRS.
**** END ADD 2015/05/28 ISID18 ****
ENDIF.

* 小数点変換
* 移動平均原価(簡易)
**** START UPD 2014/09/01 ISID･喩 ****
*    /A1F/YMNS0001-YM_VERPR_CH = /A1F/YMNS0001-YM_VERPR * 100.
**** START UPD 2015/05/28 ISID18 ****
*    CLEAR: LW_BAPICURR.
*    PERFORM CONV_CURR_TO_EXTER USING /A1F/YMNS0001-YM_WAERS
*                                     /A1F/YMNS0001-YM_VERPR
*                            CHANGING LW_BAPICURR.
*
*    /A1F/YMNS0001-YM_VERPR_CH = LW_BAPICURR.
WRITE /A1F/YMNS0001-YM_VERPR TO /A1F/YMNS0001-YM_VERPR_CH
CURRENCY /A1F/YMNS0001-YM_WAERS.
**** END UPD 2015/05/28 ISID18 ****
**** END UPD 2014/09/01 ISID･喩 ****
ENDIF.

ENDFORM.                    " GET_MBEW_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_MVKE_DATA
*&---------------------------------------------------------------------*
*       販売情報取得
*----------------------------------------------------------------------*
FORM GET_MVKE_DATA.

SELECT SINGLE
VRKME                 "販売単位
MVGR1                 "商品グループ
MVGR2                 "最終製品
MVGR3                 "商品分類
MVGR4                 "開発部販売実績
PRAT1                 "危険品区分
PRAT2                 "該非判定
* 2010/10/14 DMW2286品目グループ5 - start
MVGR5                 "ｲﾆｼｬﾙ(金型等)
* 2010/10/14 DMW2286品目グループ5 - end
INTO LST_MVKE
FROM MVKE
WHERE MATNR = /A1F/YMNS0001-YM_MATNR    "品目コード
AND VKORG = /A1F/YMNS0001-VKORG       "販売組織
AND VTWEG = /A1F/YMNS0001-VTWEG.      "流通チャネル

IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_VRKME       = LST_MVKE-VRKME.  "単位（販売価格）
/A1F/YMNS0001-YM_MVGR1       = LST_MVKE-MVGR1.  "商品グループ
/A1F/YMNS0001-YM_MVGR2       = LST_MVKE-MVGR2.  "最終製品
/A1F/YMNS0001-YM_MVGR3       = LST_MVKE-MVGR3.  "商品分類
/A1F/YMNS0001-YM_KIHTBHBIJSK = LST_MVKE-MVGR4.  "開発部販売実績
/A1F/YMNS0001-PROD_ATT_1     = LST_MVKE-PRAT1.  "危険品区分
/A1F/YMNS0001-PROD_ATT_2     = LST_MVKE-PRAT2.  "該非判定
* 2010/10/14 DMW2286品目グループ5 - start
/A1F/YMNS0001-YM_INITIAL     = LST_MVKE-MVGR5.  "ｲﾆｼｬﾙ(金型等)
* 2010/10/14 DMW2286品目グループ5 - end
**** START ADD 2015/07/13 ISID18 ****
PERFORM GET_SALES_TEXT
USING    /A1F/YMNS0001-YM_MATNR
/A1F/YMNS0001-VKORG
/A1F/YMNS0001-VTWEG
CHANGING /A1F/YMNS0001-YM_HANBAI_LANG
/A1F/YMNS0001-YM_HANBAI_TEXT
A1F_INIT_FLG_HANBAI.
**** END ADD 2015/07/13 ISID18 ****
ENDIF.

* 基本数量単位と販売単位が違うデータのみ取得
IF /A1F/YMNS0001-YM_VRKME NE /A1F/YMNS0001-YM_MEINS.
SELECT SINGLE
MEINH               "在庫単位の代替数量単位
UMREZ               "基本数量単位への換算分子
UMREN               "分母: 基本数量単位へ変換する場合
INTO LST_MARM
FROM MARM
WHERE MATNR = /A1F/YMNS0001-YM_MATNR
AND MEINH = /A1F/YMNS0001-YM_VRKME.

IF SY-SUBRC = 0.
* 基本数量単位と販売単位が同じ場合は画面に出力しない
*      /A1F/YMNS0001-YM_VRKME = LST_MARM-MEINH.    "販売数量単位
/A1F/YMNS0001-YM_UMRENS = LST_MARM-UMREN.   "分母（販売）
/A1F/YMNS0001-YM_UMREZS = LST_MARM-UMREZ.   "分子（販売）
ENDIF.
ENDIF.

ENDFORM.                    " GET_MVKE_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_LIFNR_DATA
*&---------------------------------------------------------------------*
*       仕入先情報の取得
*----------------------------------------------------------------------*
FORM GET_LIFNR_DATA.

* ローカルデータ宣言
DATA:
LST_LIFNR TYPE TYP_LIFNR.

SELECT SINGLE
NAME1                                              "名称1
LOEVM                "削除フラグ
INTO LST_LIFNR
FROM LFA1
WHERE LIFNR = /A1F/YMNS0001-YM_LIFNR.

IF SY-SUBRC = 0.
IF LST_LIFNR-LOEVM = CNS_X.
MESSAGE E303(/A1F/YLMS0100) WITH
/A1F/YMNS0001-YM_LIFNR .
ELSE.
/A1F/YMNS0001-YM_SIRSKNM = LST_LIFNR-NAME1.           "名称1

ENDIF.
ENDIF.

ENDFORM.                    " GET_LIFNR_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_PO_OTHER
*&---------------------------------------------------------------------*
*       購買情報取得(BAPI以外)
*----------------------------------------------------------------------*
FORM GET_PO_DATA_OTHER.

** ローカルデータ宣言
*  DATA:
*    LW_INFNR TYPE EINA-INFNR.         "購買情報番号


* 購買情報取得
PERFORM GET_BAPI_PO_DATA CHANGING LW_INFNR.

* 購買テキスト情報取得
PERFORM GET_PO_TEXT USING LW_INFNR.



ENDFORM.                    " GET_PO_OTHER
*&---------------------------------------------------------------------*
*&      Form  GET_BAPI_PO_DATA
*&---------------------------------------------------------------------*
*       購買情報取得(BAPI)
*----------------------------------------------------------------------*
*      <--O_INFNR  購買情報番号
*----------------------------------------------------------------------*
FORM GET_BAPI_PO_DATA CHANGING O_INFNR TYPE EINA-INFNR.

* ローカルデータ宣言
DATA:
LTD_PO_OTHER TYPE TABLE OF TYP_PO_OTHER,
LST_PO_OTHER TYPE TYP_PO_OTHER.

SELECT EINA~INFNR                  "購買情報番号
EINE~ESOKZ                  "購買情報区分
EINE~EVERS                  "出荷指示
INTO TABLE LTD_PO_OTHER
FROM EINA
INNER JOIN EINE
ON EINE~INFNR = EINA~INFNR
WHERE EINA~MATNR = /A1F/YMNS0001-YM_MATNR  "品目コード
AND EINA~LIFNR = /A1F/YMNS0001-YM_LIFNR  "仕入先コード
AND EINA~LOEKZ = SPACE
AND EINE~LOEKZ = SPACE
**** START ADD 2014/08/27 ISID・喩 ****
AND EINE~EKORG = /A1F/YMNS0001-EKORG.
**** END ADD 2014/08/27 ISID・喩 ****

IF SY-SUBRC = 0.

DELETE ADJACENT DUPLICATES FROM LTD_PO_OTHER COMPARING ALL FIELDS.

LOOP AT LTD_PO_OTHER INTO LST_PO_OTHER.

CALL FUNCTION 'ENQUEUE_EMEINAE'
EXPORTING
MODE_EINA      = 'E'
MANDT          = SY-MANDT
INFNR          = LST_PO_OTHER-INFNR
EXCEPTIONS
FOREIGN_LOCK   = 1
SYSTEM_FAILURE = 2
OTHERS         = 3.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

O_INFNR = LST_PO_OTHER-INFNR.              "購買情報番号
IF LST_PO_OTHER-ESOKZ = CNS_3.
/A1F/YMNS0001-YM_SIRSKKBN1 = CNS_X.      "外注加工の場合
ENDIF.
IF NOT ( LST_PO_OTHER-EVERS IS INITIAL ).  "直送
/A1F/YMNS0001-YM_SIRSKKBN2 = CNS_X.
ENDIF.
ENDLOOP.
ELSE.
**** START UPD 2014/08/27 ISID･喩 ****
*    MESSAGE E314(06).
MESSAGE E314(06) WITH SPACE.
**** END UPD 2014/08/27 ISID･喩 ****
ENDIF.


ENDFORM.                    " GET_BAPI_PO_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_PO_TEXT
*&---------------------------------------------------------------------*
*       購買テキスト情報取得
*----------------------------------------------------------------------*
*      -->I_INFNR  購買情報番号
*----------------------------------------------------------------------*
FORM GET_PO_TEXT USING    I_INFNR TYPE EINA-INFNR.

* ローカルデータ宣言
DATA:
LTD_STXL TYPE TABLE OF TYP_STXL,
LST_STXL TYPE TYP_STXL.
DATA:
LW_INFNR TYPE STXL-TDNAME.                "検索条件
* テキスト取得テーブル
DATA:
LTD_INLINES TYPE TABLE OF TLINE,         "テキスト読込の第一行
LST_INLINES TYPE TLINE,
LTD_LINES TYPE TABLE OF TLINE,           "読込テキスト行
LTS_LINES TYPE TLINE.

* 購買情報番号を含む条件で検索'購買情報番号+'*''
CONCATENATE I_INFNR CNS_PERCENT INTO LW_INFNR.

* テキスト取得用情報取得
SELECT TDOBJECT                 "オブジェクト
TDNAME                   "名称
TDID                     "テキスト ID
TDSPRAS                  "言語キー
INTO TABLE LTD_STXL
FROM STXL
WHERE TDNAME LIKE LW_INFNR
AND ( TDOBJECT = A1F_CNS_TDOBJECT1
OR   TDOBJECT = A1F_CNS_TDOBJECT2 )
**** START ADD 2014/08/29 ISID･喩 ****
AND TDSPRAS = SY-LANGU.
**** END ADD 2014/08/29 ISID･喩 ****

* 検索できなかった場合はテキスト取得いかない
CHECK SY-SUBRC = 0.

* 購買情報注記テキスト情報取得
READ TABLE LTD_STXL WITH KEY TDOBJECT = CNS_EINA
INTO LST_STXL.

* 検索できなかった場合はテキスト取得いかない
IF SY-SUBRC = 0.

PERFORM READ_TEXT_INLINE TABLES LTD_INLINES         "テキスト第一行
LTD_LINES           "テキスト行
USING  LST_STXL-TDID       "テキスト ID
LST_STXL-TDSPRAS    "言語キー
LST_STXL-TDNAME     "名称
LST_STXL-TDOBJECT.  "オブジェクト

* 取得したテキストを1行目と2行目に分解
READ TABLE LTD_INLINES INDEX 1 INTO LST_INLINES.
DELETE TABLE LTD_LINES FROM LST_INLINES.
READ TABLE LTD_LINES INDEX 1 INTO LTS_LINES.

* 購買情報注記1行目
/A1F/YMNS0001-YM_KUBIJUHUTYUK = LST_INLINES-TDLINE.
* 購買情報注記2行目
/A1F/YMNS0001-YM_KUBIJUHUTYUK2 = LTS_LINES-TDLINE.

ENDIF.

REFRESH:LTD_INLINES,
LTD_LINES.

* 購買情報テキスト情報取得
READ TABLE LTD_STXL WITH KEY TDOBJECT = CNS_EINE
INTO LST_STXL.

* 検索できなかった場合はテキスト取得いかない
IF SY-SUBRC = 0.

PERFORM READ_TEXT_INLINE TABLES LTD_INLINES         "テキスト第一行
LTD_LINES           "テキスト行
USING  LST_STXL-TDID       "テキスト ID
LST_STXL-TDSPRAS    "言語キー
LST_STXL-TDNAME     "名称
LST_STXL-TDOBJECT.  "オブジェクト

IF SY-SUBRC = 0.
* 購買情報テキスト
READ TABLE LTD_INLINES INDEX 1 INTO LST_INLINES.
/A1F/YMNS0001-YM_KUBUJUHUTEXT = LST_INLINES-TDLINE.
ENDIF.
ENDIF.
ENDFORM.                    " GET_PO_TEXT
*&---------------------------------------------------------------------*
*&      Form  READ_TEXT_INLINE
*&---------------------------------------------------------------------*
*       汎用モジュールでの購買テキスト情報取得
*----------------------------------------------------------------------*
*      -->I_INLINES   テキスト第一行
*      -->I_LINES     テキスト行
*      -->I_TDID      テキスト ID
*      -->I_TDSPRAS   言語キー
*      -->I_TDNAME    名称
*      -->I_TDOBJECT  オブジェクト
*----------------------------------------------------------------------*
FORM READ_TEXT_INLINE TABLES   I_INLINES  STRUCTURE TLINE
I_LINES    STRUCTURE TLINE
USING    I_TDID     TYPE STXL-TDID
I_TDSPRAS  TYPE STXL-TDSPRAS
I_TDNAME   TYPE STXL-TDNAME
I_TDOBJECT TYPE STXL-TDOBJECT.

CALL FUNCTION CNS_READ_TEXT_INLINE
EXPORTING
ID                    = I_TDID        "テキスト ID
INLINE_COUNT          = CNS_1         "インラインテーブルの行数
LANGUAGE              = I_TDSPRAS     "言語
NAME                  = I_TDNAME      "テキスト名
OBJECT                = I_TDOBJECT    "オブジェクト
*   LOCAL_CAT             = ' '
* IMPORTING
*   HEADER                =
TABLES
INLINES               = I_INLINES     "テキスト第一行
LINES                 = I_LINES.      "読込テキスト行


ENDFORM.                    " READ_TEXT_INLINE
*&---------------------------------------------------------------------*
*&      Form  GET_LFM1_DATA
*&---------------------------------------------------------------------*
*       購買組織データ情報の取得
*----------------------------------------------------------------------*
FORM GET_LFM1_DATA.

* ローカルデータ宣言
DATA:
LST_LFM1 TYPE TYP_LFM1.

SELECT SINGLE
LOEVM                   "購買組織レベルの仕入先削除フラグ
WAERS                   "購買発注通貨
INTO LST_LFM1
FROM LFM1
WHERE LIFNR = /A1F/YMNS0001-YM_LIFNR   "仕入先コード
AND EKORG = /A1F/YMNS0001-EKORG.     "購買組織

IF SY-SUBRC = 0.
IF LST_LFM1-LOEVM = CNS_X.
MESSAGE E303(/A1F/YLMS0100) WITH
/A1F/YMNS0001-YM_LIFNR .
ELSE.
/A1F/YMNS0001-YM_PWAERS = LST_LFM1-WAERS.   "購買発注通貨
ENDIF.
ENDIF.


ENDFORM.                    " GET_LFM1_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_INFORECORD_DATA
*&---------------------------------------------------------------------*
*       購買情報取得
*----------------------------------------------------------------------*
FORM GET_INFORECORD_DATA.

* ローカルデータ宣言
DATA:
LTD_GENERAL  TYPE TABLE OF BAPIEINA,     "購買情報: 一般データ
LTD_PURCHORG TYPE TABLE OF BAPIEINE,     "購買情報: 購買組織データ
LTD_RETURN   TYPE TABLE OF BAPIRETURN,   "リターンメッセージ
LST_RETURN   TYPE BAPIRETURN,
**** START ADD 2014/08/27 ISID?喩 ****
LW_FLG       TYPE CHAR1.
**** END ADD 2014/08/27 ISID?喩 ****

DATA:
LCTR_LINE TYPE I.


CALL FUNCTION CNS_BAPI_INFORECORD_GETLIST
EXPORTING
VENDOR              = /A1F/YMNS0001-YM_LIFNR    "仕入先コード
MATERIAL            = /A1F/YMNS0001-YM_MATNR    "品目コード
*     MAT_GRP             =
*     VEND_MAT            =
*     VEND_PART           =
*     VEND_MATG           =
PURCH_ORG           = /A1F/YMNS0001-EKORG       "購買組織
*     INFO_TYPE           =
*     PLANT               =
*     PUR_GROUP           =
*     PURCHASINGINFOREC   =
*     DELETED_INFORECORDS = ' '
PURCHORG_DATA       = CNS_X
GENERAL_DATA        = CNS_X
TABLES
INFORECORD_GENERAL  = LTD_GENERAL             "一般データ
INFORECORD_PURCHORG = LTD_PURCHORG            "購買組織データ
RETURN              = LTD_RETURN.
**** START UPD 2014/08/27 ISID･喩 ****
*  IF SY-SUBRC = 0.
CLEAR: LW_FLG.

LOOP AT LTD_RETURN INTO LST_RETURN WHERE TYPE = 'A' OR TYPE = 'E'.
LW_FLG = 'X'.
EXIT.
ENDLOOP.

IF LW_FLG <> 'X'.
**** END UPD 2014/08/27 ISID･喩 ****
DESCRIBE TABLE LTD_GENERAL LINES LCTR_LINE.

CASE LCTR_LINE.
WHEN 0.
* 未取得
CLEAR:LTD_GENERAL.

WHEN 1.
* 購買情報: 一般データをセット
PERFORM SET_INFORECORD_GENERAL TABLES LTD_GENERAL.

WHEN OTHERS.
* 複数情報取得時エラー
MESSAGE W256(/A1F/YLMS0100) WITH
/A1F/YMNS0001-YM_MATNR
/A1F/YMNS0001-YM_LIFNR
LCTR_LINE.
ENDCASE.

* 購買情報: 購買組織データをセット
PERFORM SET_INFORECORD_PURCHORG TABLES LTD_PURCHORG.

ENDIF.

ENDFORM.                    " GET_INFORECORD_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_A017_DATA
*&---------------------------------------------------------------------*
*       価格情報(購買)取得
*----------------------------------------------------------------------*
FORM GET_A017_DATA.

* ローカルデータ宣言
DATA:
LW_KNUMH TYPE A017-KNUMH,
LW_DATAB TYPE A017-DATAB,
LW_DATBI TYPE A017-DATBI,
LST_KONP TYPE TYP_KONP,
LTD_KONM TYPE TABLE OF TYP_KONM,
LST_KONM TYPE TYP_KONM,
LW_SUBRC TYPE SY-SUBRC,
WL_ESOKZ TYPE A017-ESOKZ,
**** START ADD 2014/08/29 ISID･喩 ****
LW_WAERS    TYPE WAERS,
LW_BAPICURR LIKE BAPICURR-BAPICURR .
**** END ADD 2014/08/29 ISID･喩 ****

IF /A1F/YMNS0001-YM_SIRSKKBN1 IS INITIAL.
WL_ESOKZ = '0'.
ELSE.
WL_ESOKZ = '3'.
ENDIF.

SELECT KNUMH DATAB DATBI                      "条件レコード番号
INTO (LW_KNUMH,LW_DATAB,LW_DATBI)
FROM A017
WHERE KAPPL = CNS_M                    "アプリケーション
AND LIFNR = /A1F/YMNS0001-YM_LIFNR   "仕入先勘定コード
AND MATNR = /A1F/YMNS0001-YM_MATNR   "品目コード
AND EKORG = /A1F/YMNS0001-EKORG      "購買組織
AND ESOKZ = WL_ESOKZ                 "購買情報区分
AND DATBI    >= SY-DATUM
AND DATAB    <= SY-DATUM.

ENDSELECT.

CHECK SY-SUBRC = 0.
/A1F/YMNS0001-YM_PDATAB = LW_DATAB.
/A1F/YMNS0001-YM_PDATBI = LW_DATBI.

* 条件情報取得
PERFORM GET_KONP_KONM TABLES   LTD_KONM
USING    LW_KNUMH
'M'
CHANGING LST_KONP
LW_SUBRC.
IF LW_SUBRC = 0.
/A1F/YMNS0001-YM_PSKONMS1 = LST_KONP-KONMS.  "数量単位(仕入)
/A1F/YMNS0001-YM_PSKMEIN1 = LST_KONP-KMEIN.  "単位(仕入)
/A1F/YMNS0001-YM_PSKPEIN1 = LST_KONP-KPEIN.  "価格単位(仕入)

* スケール数量と条件レート
LOOP AT LTD_KONM INTO LST_KONM.
CASE SY-TABIX.
WHEN 1.
/A1F/YMNS0001-YM_PSKSTBM1 = LST_KONM-KSTBM.    "スケール数量
/A1F/YMNS0001-YM_PSKBETR1 = LST_KONM-KBETR.    "条件レート
WHEN 2.
/A1F/YMNS0001-YM_PSKSTBM2 = LST_KONM-KSTBM.
/A1F/YMNS0001-YM_PSKBETR2 = LST_KONM-KBETR.
WHEN 3.
/A1F/YMNS0001-YM_PSKSTBM3 = LST_KONM-KSTBM.
/A1F/YMNS0001-YM_PSKBETR3 = LST_KONM-KBETR.
WHEN 4.
/A1F/YMNS0001-YM_PSKSTBM4 = LST_KONM-KSTBM.
/A1F/YMNS0001-YM_PSKBETR4 = LST_KONM-KBETR.
WHEN 5.
/A1F/YMNS0001-YM_PSKSTBM5 = LST_KONM-KSTBM.
/A1F/YMNS0001-YM_PSKBETR5 = LST_KONM-KBETR.
ENDCASE.
ENDLOOP.
ENDIF.

* 通貨が取得できなかった場合、%対応
IF /A1F/YMNS0001-YM_PWAERS IS INITIAL.
**** START UPD 2014/08/29 ISID･喩 ****
*    /A1F/YMNS0001-YM_PSKBETR1 = /A1F/YMNS0001-YM_PSKBETR1 * 100.
*    /A1F/YMNS0001-YM_PSKBETR2 = /A1F/YMNS0001-YM_PSKBETR2 * 100.
*    /A1F/YMNS0001-YM_PSKBETR3 = /A1F/YMNS0001-YM_PSKBETR3 * 100.
*    /A1F/YMNS0001-YM_PSKBETR4 = /A1F/YMNS0001-YM_PSKBETR4 * 100.
*    /A1F/YMNS0001-YM_PSKBETR5 = /A1F/YMNS0001-YM_PSKBETR5 * 100.

CLEAR: LW_WAERS,
LW_BAPICURR.

SELECT SINGLE WAERS
INTO LW_WAERS
FROM T001
WHERE BUKRS = /A1F/YMNS0001-BUKRS.

PERFORM CONV_CURR_TO_EXTER USING LW_WAERS
/A1F/YMNS0001-YM_PSKBETR1
CHANGING LW_BAPICURR.

/A1F/YMNS0001-YM_PSKBETR1 = LW_BAPICURR.

CLEAR: LW_BAPICURR.
PERFORM CONV_CURR_TO_EXTER USING LW_WAERS
/A1F/YMNS0001-YM_PSKBETR2
CHANGING LW_BAPICURR.

/A1F/YMNS0001-YM_PSKBETR2 = LW_BAPICURR.

CLEAR: LW_BAPICURR.
PERFORM CONV_CURR_TO_EXTER USING LW_WAERS
/A1F/YMNS0001-YM_PSKBETR3
CHANGING LW_BAPICURR.

/A1F/YMNS0001-YM_PSKBETR3 = LW_BAPICURR.

CLEAR: LW_BAPICURR.
PERFORM CONV_CURR_TO_EXTER USING LW_WAERS
/A1F/YMNS0001-YM_PSKBETR4
CHANGING LW_BAPICURR.

/A1F/YMNS0001-YM_PSKBETR4 = LW_BAPICURR.

CLEAR: LW_BAPICURR.
PERFORM CONV_CURR_TO_EXTER USING LW_WAERS
/A1F/YMNS0001-YM_PSKBETR5
CHANGING LW_BAPICURR.

/A1F/YMNS0001-YM_PSKBETR5 = LW_BAPICURR.
**** END UPD 2014/08/29 ISID･喩 ****
ENDIF.

** 数値未入力の場合変換なし
IF /A1F/YMNS0001-YM_PKBETR_CH IS INITIAL .
EXIT .
ENDIF .

PERFORM AF1_CONV_VERPR_CHAR_TO_CURR
USING /A1F/YMNS0001-YM_PWAERS
/A1F/YMNS0001-YM_PKBETR_CH
CHANGING /A1F/YMNS0001-YM_PKPEIN
/A1F/YMNS0001-YM_PKBETR .


ENDFORM.                    " GET_A017_DATA
*&---------------------------------------------------------------------*
*&      Form  SET_INFORECORD_GENERAL
*&---------------------------------------------------------------------*
*       購買情報: 一般データをセット
*----------------------------------------------------------------------*
*      -->  I_GENERAL  購買情報: 一般データ
*----------------------------------------------------------------------*
FORM SET_INFORECORD_GENERAL TABLES   I_GENERAL STRUCTURE BAPIEINA.

* ローカルデータ宣言
DATA:
LST_GENERAL  TYPE BAPIEINA.

LOOP AT I_GENERAL INTO LST_GENERAL.
* 基本数量単位と発注単位が同じ場合は出力しない
IF NOT ( /A1F/YMNS0001-YM_VRKME IS INITIAL ).
/A1F/YMNS0001-YM_UMRENP = LST_GENERAL-CONV_DEN1.   "分母（発注）
/A1F/YMNS0001-YM_UMREZP = LST_GENERAL-CONV_NUM1.   "分子（発注）
ENDIF.
/A1F/YMNS0001-YM_INDLF  = LST_GENERAL-VEND_MAT.    "仕入先品目コード
/A1F/YMNS0001-YM_URZTP  = LST_GENERAL-CERT_TYPE.   "証明書区分

ENDLOOP.
ENDFORM.                    " SET_INFORECORD_GENERAL
*&---------------------------------------------------------------------*
*&      Form  SET_INFORECORD_PURCHORG
*&---------------------------------------------------------------------*
*       購買情報: 購買組織データをセット
*----------------------------------------------------------------------*
*      -->I_PURCHORG  text
*----------------------------------------------------------------------*
FORM SET_INFORECORD_PURCHORG TABLES   I_PURCHORG STRUCTURE BAPIEINE.

* ローカルデータ宣言
DATA:
LST_PURCHORG TYPE BAPIEINE,
**** START ADD 2014/08/29 ISID･喩 ****
LW_BAPICURR    LIKE BAPICURR-BAPICURR.
**** END ADD 2014/08/29 ISID･喩 ****

LOOP AT I_PURCHORG INTO LST_PURCHORG.
/A1F/YMNS0001-EKGRP     = LST_PURCHORG-PUR_GROUP.  "購買グループ
/A1F/YMNS0001-YM_MWSKZ  = LST_PURCHORG-TAX_CODE.   "税コード
/A1F/YMNS0001-YM_PKBETR = LST_PURCHORG-NET_PRICE.  "正味価格(仕入)
* 仕入価格：簡易入力用
**** START UPD 2014/08/29 ISID･喩 ****
*    /A1F/YMNS0001-YM_PKBETR_CH = /A1F/YMNS0001-YM_PKBETR * 100.
CLEAR: LW_BAPICURR.

PERFORM CONV_CURR_TO_EXTER USING /A1F/YMNS0001-YM_PWAERS
/A1F/YMNS0001-YM_PKBETR
CHANGING LW_BAPICURR.

/A1F/YMNS0001-YM_PKBETR_CH = LW_BAPICURR.
**** END UPD 2014/08/29 ISID･喩 ****
/A1F/YMNS0001-YM_PKPEIN = LST_PURCHORG-PRICE_UNIT. "価格単位(仕入)
/A1F/YMNS0001-YM_PKMEIN = LST_PURCHORG-ORDERPR_UN. "単位(仕入)
/A1F/YMNS0001-YM_PDATAB = LST_PURCHORG-CREATED_AT. "有効開始(仕入)
/A1F/YMNS0001-YM_PDATBI = LST_PURCHORG-PRICE_DATE. "有効終了(仕入)
/A1F/YMNS0001-YM_APLFZ  = LST_PURCHORG-PLND_DELRY. "納入予定日数
ENDLOOP.

IF NOT ( /A1F/YMNS0001-EKGRP IS INITIAL ).
* 購買グループ→営業グループ
/A1F/YMNS0001-YM_VKGRP = /A1F/YMNS0001-EKGRP.
ENDIF.

ENDFORM.                    " SET_INFORECORD_PURCHORG
*&---------------------------------------------------------------------*
*&      Form  GET_KNVV_DATA
*&---------------------------------------------------------------------*
*       得意先マスタ: 販売データ取得
*----------------------------------------------------------------------*
FORM GET_KNVV_DATA.

* ローカルデータ宣言
DATA:
LW_WAERS TYPE KNVV-WAERS.

SELECT SINGLE
WAERS                                 "通貨コード
INTO LW_WAERS
FROM KNVV
WHERE KUNNR = /A1F/YMNS0001-YM_KUNNR  "得意先コード
AND VKORG = /A1F/YMNS0001-VKORG     "販売組織
AND VTWEG = /A1F/YMNS0001-VTWEG     "流通チャネル
AND SPART = /A1F/YMNS0001-SPART.    "製品部門

IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_SWAERS = LW_WAERS.        "通貨（販売）
ELSE.
**** START ADD 2015/05/28 ISID18 ****
SELECT WAERS
UP TO 1 ROWS
INTO LW_WAERS
FROM KNVV
WHERE KUNNR = /A1F/YMNS0001-YM_KUNNR  "得意先コード
AND VKORG = /A1F/YMNS0001-VKORG     "販売組織
AND VTWEG = /A1F/YMNS0001-VTWEG.    "流通チャネル
ENDSELECT.
IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_SWAERS = LW_WAERS.      "通貨（販売）
ELSE.
**** END ADD 2015/05/28 ISID18 ****
MESSAGE E251(/A1F/YLMS0100) WITH
/A1F/YMNS0001-YM_KUNNR .
**** START ADD 2015/05/28 ISID18 ****
ENDIF.
**** END ADD 2015/05/28 ISID18 ****
ENDIF.

CALL FUNCTION 'ENQUEUE_EVKNMT'
EXPORTING
MODE_KNMT      = 'E'
MANDT          = SY-MANDT
VKORG          = /A1F/YMNS0001-VKORG
VTWEG          = /A1F/YMNS0001-VTWEG
KUNNR          = /A1F/YMNS0001-YM_KUNNR
MATNR          = /A1F/YMNS0001-YM_MATNR
EXCEPTIONS
FOREIGN_LOCK   = 1
SYSTEM_FAILURE = 2
OTHERS         = 3.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.



ENDFORM.                    " GET_KNVV_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_KNMT_DATA
*&---------------------------------------------------------------------*
*       得意先/品目情報取得
*----------------------------------------------------------------------*
FORM GET_KNMT_DATA.

* ローカルデータ宣言
DATA:
LTS_KNMT TYPE TYP_KNMT.


SELECT SINGLE
KNMT~KDMAT               "得意先品目コード
KNMT~POSTX               "得意先の品目テキスト
KNMT~VWPOS               "明細用途
KNA1~NAME1                                         "名称1
INTO LTS_KNMT
FROM KNMT
INNER JOIN KNA1
ON KNMT~KUNNR = KNA1~KUNNR
WHERE KNMT~VKORG = /A1F/YMNS0001-VKORG       "販売組織
AND KNMT~VTWEG = /A1F/YMNS0001-VTWEG       "流通チャネル
AND KNMT~KUNNR = /A1F/YMNS0001-YM_KUNNR    "得意先コード
AND KNMT~MATNR = /A1F/YMNS0001-YM_MATNR.   "品目コード

IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_KDMAT = LTS_KNMT-KDMAT.       "客先型番
/A1F/YMNS0001-YM_POSTX = LTS_KNMT-POSTX.       "得意先品目テキスト
/A1F/YMNS0001-YM_TKISKNM = LTS_KNMT-NAME1.     "得意先名
IF NOT ( LTS_KNMT-VWPOS IS INITIAL ).
/A1F/YMNS0001-YM_TMPSRYHS = CNS_X.           "添付資料必須
ENDIF.
ELSE.
MESSAGE E150(/A1F/YLMS0100) WITH /A1F/YMNS0001-YM_KUNNR
/A1F/YMNS0001-YM_MATNR.
ENDIF.

ENDFORM.                    " GET_KNMT_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_CU_TEXT
*&---------------------------------------------------------------------*
*       得意先/品目情報テキスト情報取得
*----------------------------------------------------------------------*
FORM GET_CU_TEXT.

* ローカルデータ宣言
DATA:
LTD_CUINFO     TYPE TABLE OF BAPI_BUS3033_BOID,
LST_CUINFO     TYPE BAPI_BUS3033_BOID,
LTD_CUINFOTEXT TYPE TABLE OF BAPI_BUS3033_TLINEKOM_DISP,
LTS_CUINFOTEXT TYPE BAPI_BUS3033_TLINEKOM_DISP.

LST_CUINFO-SALESORG   = /A1F/YMNS0001-VKORG.      "販売組織
LST_CUINFO-DISTR_CHAN = /A1F/YMNS0001-VTWEG.      "流通チャネル
LST_CUINFO-CUSTOMER   = /A1F/YMNS0001-YM_KUNNR.   "得意先コード
LST_CUINFO-MATERIAL   = /A1F/YMNS0001-YM_MATNR.   "得意先名
APPEND LST_CUINFO TO LTD_CUINFO.


CALL FUNCTION CNS_BAPI_CUSTMATINFO_GET
TABLES
CUSTOMERMATERIALINFO       = LTD_CUINFO
*     CUSTOMERMATERIALINFODETAIL =
CUSTOMERMATERIALINFOTEXT   = LTD_CUINFOTEXT.  "伝票テキスト
*            RETURN =.
**** START DEL 2014/08/27 ISID･喩 ****
*  IF SY-SUBRC = 0.
**** END DEL 2014/08/27 ISID･喩 ****
* 出荷指示備考
READ TABLE LTD_CUINFOTEXT
WITH KEY TEXT_ID = CNS_0001
INTO LTS_CUINFOTEXT.

IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_SKSJBKU = LTS_CUINFOTEXT-TEXT_LINE+2(132).
ENDIF.
* 商品名
READ TABLE LTD_CUINFOTEXT
WITH KEY TEXT_ID = CNS_0003
INTO LTS_CUINFOTEXT.

IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_SUHNNAM = LTS_CUINFOTEXT-TEXT_LINE+2(132).
ENDIF.
* 用途
READ TABLE LTD_CUINFOTEXT
WITH KEY TEXT_ID = CNS_0004
INTO LTS_CUINFOTEXT.

IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_YOUTO = LTS_CUINFOTEXT-TEXT_LINE+2(132).
ENDIF.
**** START DEL 2014/08/27 ISID･喩 ****
*  ENDIF.
**** END DEL 2014/08/27 ISID･喩 ****

ENDFORM.                    " GET_CU_TEXT
*&---------------------------------------------------------------------*
*&      Form  GET_A901_DATA
*&---------------------------------------------------------------------*
*       価格情報(販売)取得
*----------------------------------------------------------------------*
FORM GET_A901_DATA.
* ローカルデータ宣言
DATA:
LST_A901 TYPE TYP_A901,
LST_KONP TYPE TYP_KONP,
LTD_KONM TYPE TABLE OF TYP_KONM,
LST_KONM TYPE TYP_KONM,
LW_SUBRC TYPE SY-SUBRC,
**** START ADD 2014/08/29 ISID･喩 ****
LW_WAERS    TYPE WAERS,
LW_BAPICURR LIKE  BAPICURR-BAPICURR.
**** END ADD 2014/08/29 ISID･喩 ****

SELECT DATBI                                  "条件マスタ有効終了日
DATAB                                  "条件マスタ有効開始日
KNUMH                                  "条件レコード番号
INTO LST_A901
FROM A901
WHERE KAPPL    = CNS_V                    "アプリケーション
AND VTWEG    = /A1F/YMNS0001-VTWEG      "流通チャネル
AND SPART    = /A1F/YMNS0001-SPART      "製品部門
AND KUNNR    = /A1F/YMNS0001-YM_KUNNR   "得意先コード
AND ZZZKDMAT = /A1F/YMNS0001-YM_KDMAT   "客先型番
AND DATBI    >= SY-DATUM
AND DATAB    <= SY-DATUM
**** START ADD 2014/08/29 ISID･喩 ****
AND VKORGAU = /A1F/YMNS0001-VKORG.   "受注伝票の販売組織
**** END ADD 2014/08/29 ISID･喩 ****
ENDSELECT.

IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_SDATAB = LST_A901-DATAB.      "有効開始（販売価格）
/A1F/YMNS0001-YM_SDATBI = LST_A901-DATBI.      "有効終了（販売価格）
ENDIF.

* 条件情報取得
PERFORM GET_KONP_KONM TABLES   LTD_KONM
USING    LST_A901-KNUMH
'S'
CHANGING LST_KONP
LW_SUBRC.
IF LW_SUBRC = 0.
/A1F/YMNS0001-YM_SKPEIN   = LST_KONP-KPEIN.  "価格単位(販売)
/A1F/YMNS0001-YM_SKMEIN   = LST_KONP-KMEIN.  "単位(販売)
/A1F/YMNS0001-YM_SSKONMS1 = LST_KONP-KONMS.  "数量単位(販売スケール)
/A1F/YMNS0001-YM_SSKMEIN1 = LST_KONP-KMEIN.  "単位(販売スケール)
/A1F/YMNS0001-YM_SSKPEIN1 = LST_KONP-KPEIN.  "価格単位(販売スケール)

* スケール数量と条件レート
LOOP AT LTD_KONM INTO LST_KONM.
CASE SY-TABIX.
WHEN 1.
/A1F/YMNS0001-YM_SKBETR = LST_KONM-KBETR.      "正味価格(販売)
* 販売価格：簡易入力用
*          /A1F/YMNS0001-YM_SKBETR_CH = /A1F/YMNS0001-YM_SKBETR * 100.
/A1F/YMNS0001-YM_SSKSTBM1 = LST_KONM-KSTBM.    "スケール数量
/A1F/YMNS0001-YM_SSKBETR1 = LST_KONM-KBETR.    "条件レート
WHEN 2.
/A1F/YMNS0001-YM_SSKSTBM2 = LST_KONM-KSTBM.    "スケール数量
/A1F/YMNS0001-YM_SSKBETR2 = LST_KONM-KBETR.    "条件レート
WHEN 3.
/A1F/YMNS0001-YM_SSKSTBM3 = LST_KONM-KSTBM.    "スケール数量
/A1F/YMNS0001-YM_SSKBETR3 = LST_KONM-KBETR.    "条件レート
WHEN 4.
/A1F/YMNS0001-YM_SSKSTBM4 = LST_KONM-KSTBM.    "スケール数量
/A1F/YMNS0001-YM_SSKBETR4 = LST_KONM-KBETR.    "条件レート

WHEN 5.
/A1F/YMNS0001-YM_SSKSTBM5 = LST_KONM-KSTBM.    "スケール数量
/A1F/YMNS0001-YM_SSKBETR5 = LST_KONM-KBETR.    "条件レート
ENDCASE.
ENDLOOP.
ENDIF.

* 通貨が取得できなかった場合、%対応
IF /A1F/YMNS0001-YM_SWAERS IS INITIAL.
**** START UPD 2014/08/29 ISID･喩 ****
*    /A1F/YMNS0001-YM_SSKBETR1 = /A1F/YMNS0001-YM_SSKBETR1 * 100.
*    /A1F/YMNS0001-YM_SSKBETR2 = /A1F/YMNS0001-YM_SSKBETR2 * 100.
*    /A1F/YMNS0001-YM_SSKBETR3 = /A1F/YMNS0001-YM_SSKBETR3 * 100.
*    /A1F/YMNS0001-YM_SSKBETR4 = /A1F/YMNS0001-YM_SSKBETR4 * 100.
*    /A1F/YMNS0001-YM_SSKBETR5 = /A1F/YMNS0001-YM_SSKBETR5 * 100.

SELECT SINGLE WAERS
INTO LW_WAERS
FROM T001
WHERE BUKRS = /A1F/YMNS0001-BUKRS.

IF SY-SUBRC = 0.
CLEAR: LW_BAPICURR.

PERFORM CONV_CURR_TO_EXTER USING LW_WAERS
/A1F/YMNS0001-YM_SSKBETR1
CHANGING LW_BAPICURR.

/A1F/YMNS0001-YM_SSKBETR1 = LW_BAPICURR.

CLEAR: LW_BAPICURR.

PERFORM CONV_CURR_TO_EXTER USING LW_WAERS
/A1F/YMNS0001-YM_SSKBETR2
CHANGING LW_BAPICURR.

/A1F/YMNS0001-YM_SSKBETR2 = LW_BAPICURR.

CLEAR: LW_BAPICURR.

PERFORM CONV_CURR_TO_EXTER USING LW_WAERS
/A1F/YMNS0001-YM_SSKBETR3
CHANGING LW_BAPICURR.

/A1F/YMNS0001-YM_SSKBETR3 = LW_BAPICURR.

CLEAR: LW_BAPICURR.

PERFORM CONV_CURR_TO_EXTER USING LW_WAERS
/A1F/YMNS0001-YM_SSKBETR4
CHANGING LW_BAPICURR.

/A1F/YMNS0001-YM_SSKBETR4 = LW_BAPICURR.

CLEAR: LW_BAPICURR.

PERFORM CONV_CURR_TO_EXTER USING LW_WAERS
/A1F/YMNS0001-YM_SSKBETR5
CHANGING LW_BAPICURR.

/A1F/YMNS0001-YM_SSKBETR5 = LW_BAPICURR.
ENDIF.
**** END UPD 2014/08/29 ISID･喩 ****
ENDIF.

** 数値未入力の場合変換なし
IF /A1F/YMNS0001-YM_SKBETR_CH IS INITIAL .
EXIT .
ENDIF .

PERFORM AF1_CONV_VERPR_CHAR_TO_CURR
USING /A1F/YMNS0001-YM_SWAERS
/A1F/YMNS0001-YM_SKBETR_CH
CHANGING /A1F/YMNS0001-YM_SKPEIN
/A1F/YMNS0001-YM_SKBETR .


ENDFORM.                    " GET_A901_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_KONP_KONM
*&---------------------------------------------------------------------*
*       条件情報取得
*----------------------------------------------------------------------*
*      -->I_KONM    条件 (一次元の数量スケール)情報
*      -->I_KNUMH   条件レコード番号
*      <--O_KONP    条件 (明細)情報
*      <--O_SUBRC   処理結果
*----------------------------------------------------------------------*
FORM GET_KONP_KONM TABLES   I_KONM STRUCTURE ST_KONM
USING    I_KNUMH TYPE A017-KNUMH
I_FLG   TYPE C
CHANGING O_KONP  TYPE TYP_KONP
O_SUBRC TYPE SY-SUBRC.

*DMW4785 2012.11.15 MIS INSERT START
DATA : A1F_WL_TMP_VALUE LIKE BAPICURR-BAPICURR .
CLEAR : A1F_WL_TMP_VALUE .
*DMW4785 2012.11.15 MIS INSERT END

* 条件 (明細)情報取得
SELECT KONMS                   "条件スケール単位
KPEIN                   "価格条件単位
KMEIN                   "条件単位
KBETR
INTO O_KONP
FROM KONP
WHERE KNUMH = I_KNUMH
AND LOEVM_KO = SPACE.
ENDSELECT.

IF I_FLG = 'M'.
*DMW4785 2012.11.15 MIS DELETE START
*    /A1F/YMNS0001-YM_PKBETR_CH = O_KONP-KBETR * 100.
*DMW4785 2012.11.15 MIS DELETE END
*DMW4785 2012.11.15 MIS INSERT START
**** START ADD 2014/08/27 ISID･喩 ****
CLEAR /A1F/YMNS0001-YM_PKBETR_CH .
**** END ADD 2014/08/27 ISID･喩 ****
CALL FUNCTION 'BAPI_CURRENCY_CONV_TO_EXTERNAL'
EXPORTING
CURRENCY        = /A1F/YMNS0001-YM_PWAERS
AMOUNT_INTERNAL = O_KONP-KBETR
IMPORTING
AMOUNT_EXTERNAL = A1F_WL_TMP_VALUE.
**** START DEL 2014/08/27 ISID･喩 ****
*    IF SY-SUBRC = 0 .
**** END DEL 2014/08/27 ISID･喩 ****
/A1F/YMNS0001-YM_PKBETR_CH = A1F_WL_TMP_VALUE .
**** START DEL 2014/08/27 ISID･喩 ****
*    ELSE .
*      CLEAR /A1F/YMNS0001-YM_PKBETR_CH .
*    ENDIF .
**** END DEL 2014/08/27 ISID･喩 ****

*DMW4785 2012.11.15 MIS INSERT END
/A1F/YMNS0001-YM_PSKPEIN1  = O_KONP-KPEIN.
IF NOT /A1F/YMNS0001-YM_PSKPEIN1 IS INITIAL.
/A1F/YMNS0001-YM_PKBETR_CH =
/A1F/YMNS0001-YM_PKBETR_CH /
/A1F/YMNS0001-YM_PSKPEIN1.
ENDIF.
ELSEIF I_FLG = 'S'.
*DMW4785 2012.11.15 MIS DELETE START
*    /A1F/YMNS0001-YM_SKBETR_CH = O_KONP-KBETR * 100.
*DMW4785 2012.11.15 MIS DELETE END
*DMW4785 2012.11.15 MIS INSERT START
**** START ADD 2014/08/27 ISID･喩 ****
CLEAR /A1F/YMNS0001-YM_SKBETR_CH .
**** END ADD 2014/08/27 ISID･喩 ****
CALL FUNCTION 'BAPI_CURRENCY_CONV_TO_EXTERNAL'
EXPORTING
CURRENCY        = /A1F/YMNS0001-YM_SWAERS
AMOUNT_INTERNAL = O_KONP-KBETR
IMPORTING
AMOUNT_EXTERNAL = A1F_WL_TMP_VALUE.
**** START DEL 2014/08/27 ISID･喩 ****
*    IF SY-SUBRC = 0 .
**** END DEL 2014/08/27 ISID･喩 ****
/A1F/YMNS0001-YM_SKBETR_CH = A1F_WL_TMP_VALUE .
**** START DEL 2014/08/27 ISID･喩 ****
*    ELSE .
*      CLEAR /A1F/YMNS0001-YM_SKBETR_CH .
*    ENDIF .
**** END DEL 2014/08/27 ISID･喩 ****

*DMW4785 2012.11.15 MIS INSERT END
/A1F/YMNS0001-YM_SKPEIN = O_KONP-KPEIN.
/A1F/YMNS0001-YM_SKMEIN = O_KONP-KMEIN.
IF NOT /A1F/YMNS0001-YM_SKPEIN IS INITIAL.
/A1F/YMNS0001-YM_SKBETR_CH =
/A1F/YMNS0001-YM_SKBETR_CH /
/A1F/YMNS0001-YM_SKPEIN.
ENDIF.
ENDIF.

O_SUBRC = SY-SUBRC.

* 条件 (一次元の数量スケール)情報取得
SELECT KSTBM                   "条件スケール数量
KBETR                   "条件レート (条件金額/パーセント)
INTO TABLE I_KONM
FROM KONM
WHERE KNUMH = I_KNUMH.
O_SUBRC = SY-SUBRC.


ENDFORM.                    " GET_KONP_KONM
*&---------------------------------------------------------------------*
*&      Form  MATERIAL_MASTER_UPDATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MATERIAL_MASTER_UPDATE.

PERFORM DATA_SETTING.

PERFORM RUN_BAPI.

ENDFORM.                    " MATERIAL_MASTER_UPDATE
*&---------------------------------------------------------------------*
*&      Form  PURCHASE_MASETER_UPDATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM PURCHASE_MASETER_UPDATE.

*DMW4785 2012.11.15 MIS DELETE START
*  DATA : KBETR(13) TYPE N,
*         KBETR1(13) TYPE N,
*         KBETR2(13) TYPE N,
*         KBETR3(13) TYPE N,
*         KBETR4(13) TYPE N,
*         KBETR5(13) TYPE N,
*DMW4785 2012.11.15 MIS DELETE END
*DMW4785 2012.11.15 MIS INSERT START
DATA : KBETR(13) TYPE C,
KBETR1(13) TYPE C,
KBETR2(13) TYPE C,
KBETR3(13) TYPE C,
KBETR4(13) TYPE C,
KBETR5(13) TYPE C,
*DMW4785 2012.11.15 MIS INSERT END
A1F_WL_PSKSTBM1_CH13(13) ,
A1F_WL_PSKSTBM2_CH13(13) ,
A1F_WL_PSKSTBM3_CH13(13) ,
A1F_WL_PSKSTBM4_CH13(13) ,
A1F_WL_PSKSTBM5_CH13(13) .
DATA : KPEIN(5) TYPE N.
DATA : A1F_WL_EVERS1 LIKE EINE-EVERS.
DATA : A1F_WL_EVERS2 LIKE EINE-EVERS.
DATA : A1F_WL_APLFZ(3) TYPE N.

**** START ADD 2015/04/16 ISID･馮 ****
DATA : A1F_WL_PDATAB_CH10(10) ,
A1F_WL_PDATBI_CH10(10) .

WRITE /A1F/YMNS0001-YM_PDATAB TO A1F_WL_PDATAB_CH10 .
WRITE /A1F/YMNS0001-YM_PDATBI TO A1F_WL_PDATBI_CH10 .
**** END ADD 2015/04/16 ISID･馮 ****

WRITE /A1F/YMNS0001-YM_PSKSTBM1 UNIT /A1F/YMNS0001-YM_PSKONMS1
TO A1F_WL_PSKSTBM1_CH13 .
WRITE /A1F/YMNS0001-YM_PSKSTBM2 UNIT /A1F/YMNS0001-YM_PSKONMS1
TO A1F_WL_PSKSTBM2_CH13 .
WRITE /A1F/YMNS0001-YM_PSKSTBM3 UNIT /A1F/YMNS0001-YM_PSKONMS1
TO A1F_WL_PSKSTBM3_CH13 .
WRITE /A1F/YMNS0001-YM_PSKSTBM4 UNIT /A1F/YMNS0001-YM_PSKONMS1
TO A1F_WL_PSKSTBM4_CH13 .
WRITE /A1F/YMNS0001-YM_PSKSTBM5 UNIT /A1F/YMNS0001-YM_PSKONMS1
TO A1F_WL_PSKSTBM5_CH13 .

*DMW4785 2012.11.15 MIS DELETE START
*  KBETR = /A1F/YMNS0001-YM_PKBETR * 100.
*  KBETR1 = /A1F/YMNS0001-YM_PSKBETR1 * 100.
*  KBETR2 = /A1F/YMNS0001-YM_PSKBETR2 * 100.
*  KBETR3 = /A1F/YMNS0001-YM_PSKBETR3 * 100.
*  KBETR4 = /A1F/YMNS0001-YM_PSKBETR4 * 100.
*  KBETR5 = /A1F/YMNS0001-YM_PSKBETR5 * 100.
*DMW4785 2012.11.15 MIS DELETE END
*DMW4785 2012.11.15 MIS INSERT START
WRITE /A1F/YMNS0001-YM_PKBETR
CURRENCY /A1F/YMNS0001-YM_PWAERS TO KBETR .
WRITE /A1F/YMNS0001-YM_PSKBETR1
CURRENCY /A1F/YMNS0001-YM_PWAERS TO KBETR1 .
WRITE /A1F/YMNS0001-YM_PSKBETR2
CURRENCY /A1F/YMNS0001-YM_PWAERS TO KBETR2 .
WRITE /A1F/YMNS0001-YM_PSKBETR3
CURRENCY /A1F/YMNS0001-YM_PWAERS TO KBETR3 .
WRITE /A1F/YMNS0001-YM_PSKBETR4
CURRENCY /A1F/YMNS0001-YM_PWAERS TO KBETR4 .
WRITE /A1F/YMNS0001-YM_PSKBETR5
CURRENCY /A1F/YMNS0001-YM_PWAERS TO KBETR5 .
*DMW4785 2012.11.15 MIS INSERT END
KPEIN = /A1F/YMNS0001-YM_PKPEIN.
A1F_WL_APLFZ = /A1F/YMNS0001-YM_APLFZ .

IF NOT /A1F/YMNS0001-YM_BSTME IS INITIAL.
PERFORM BSTME_CHANGE.
ENDIF.

DATA : A1F_WL_PRICE_UNIT(3).

CLEAR : A1F_WL_PRICE_UNIT.
CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
EXPORTING
INPUT    = /A1F/YMNS0001-YM_PSKONMS1
LANGUAGE = SY-LANGU
IMPORTING
OUTPUT   = A1F_WL_PRICE_UNIT.

PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'SAPMM06I'        '0100'                 'X',
'BDC_OKCODE'      '/00'                  ' ',
'EINA-LIFNR'      /A1F/YMNS0001-YM_LIFNR ' ',
'EINA-MATNR'      /A1F/YMNS0001-YM_MATNR ' ',
'EINE-EKORG'      /A1F/YMNS0001-EKORG    ' ',
'EINE-WERKS'      /A1F/YMNS0001-WERKS    ' '.

PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'SAPMM06I'        '0101'                 'X',
'BDC_OKCODE'      '/00'                  ' ',
'EINA-IDNLF'      /A1F/YMNS0001-YM_INDLF ' ',
'EINA-URZTP'      /A1F/YMNS0001-YM_URZTP ' ',
'SAPMM06I'        '0102'                 'X',
'BDC_OKCODE'      '=KO'                  ' ',
'BDC_CURSOR'      'EINE-BPRME'           ' ',
'EINE-EKGRP'      /A1F/YMNS0001-YM_VKGRP ' ',
'EINE-MWSKZ'      /A1F/YMNS0001-YM_MWSKZ ' ',
'EINE-APLFZ'      A1F_WL_APLFZ ' '.

IF /A1F/YMNS0001-YM_SIRSKKBN2 IS INITIAL.
PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'EINE-EVERS'      SPACE   ' '.
ELSE.
PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'EINE-EVERS'      /A1F/YMNS0001-EVERS   ' '.
ENDIF.

PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'SAPLV14A'        '0102'                 'X',
'BDC_OKCODE'      '=NEWD'                ' '.

IF /A1F/YMNS0001-YM_PSKSTBM2 IS INITIAL .
PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'SAPMV13A'        '0201'              'X',
'BDC_OKCODE'      '=BACK'             ' ',
**** START ADD 2015/04/16 ISID･馮 ****
*             'RV13A-DATAB'      /A1F/YMNS0001-YM_PDATAB        ' ',
*             'RV13A-DATBI'      /A1F/YMNS0001-YM_PDATBI        ' ',
'RV13A-DATAB'      A1F_WL_PDATAB_CH10        ' ',
'RV13A-DATBI'      A1F_WL_PDATBI_CH10        ' ',
**** END ADD 2015/04/16 ISID･馮 ****
'KONP-KBETR(01)'       KBETR        ' ',
'KONP-KPEIN(01)'       KPEIN        ' ',
'SAPMM06I'        '0102'              'X',
'BDC_OKCODE'      '/00'               ' ',

'SAPMM06I'        '0105'              'X',
'BDC_OKCODE'      '/00'               ' ',
'SAPMM06I'        '0103'              'X',
'BDC_OKCODE'      '=BU'               ' ',
'RM06I-LTEX1(01)' /A1F/YMNS0001-YM_KUBIJUHUTYUK  ' ',
'RM06I-LTEX2(01)' /A1F/YMNS0001-YM_KUBIJUHUTYUK2 ' ',
'RM06I-LTEX1(02)' /A1F/YMNS0001-YM_KUBUJUHUTEXT  ' '.

ELSE .
PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'SAPMV13A'        '0201'              'X',
'BDC_OKCODE'      '=PSTF'             ' ',
'BDC_CURSOR'      'KONP-KBETR(01)'    ' ',
**** START ADD 2015/04/16 ISID･馮 ****
*             'RV13A-DATAB'      /A1F/YMNS0001-YM_PDATAB        ' ',
*             'RV13A-DATBI'      /A1F/YMNS0001-YM_PDATBI        ' ',
'RV13A-DATAB'      A1F_WL_PDATAB_CH10        ' ',
'RV13A-DATBI'      A1F_WL_PDATBI_CH10        ' ',
**** END ADD 2015/04/16 ISID･馮 ****
'KONP-KPEIN(01)'       KPEIN        ' ',
*             'KONP-KMEIN(01)'      /A1F/YMNS0001-YM_PSKONMS1    ' ',
'KONP-KMEIN(01)'      A1F_WL_PRICE_UNIT    ' ',
'SAPMV13A'        '0303'              'X',
'BDC_OKCODE'      '=BACK'             ' ',
'KONM-KSTBM(01)'      A1F_WL_PSKSTBM1_CH13   ' ',
*             'RV13A-KONMS(01)'     /A1F/YMNS0001-YM_PSKONMS1    ' ',
'RV13A-KONMS(01)'      A1F_WL_PRICE_UNIT    ' ',
'KONM-KSTBM(02)'      A1F_WL_PSKSTBM2_CH13   ' ',
'KONM-KSTBM(03)'      A1F_WL_PSKSTBM3_CH13   ' ',
'KONM-KSTBM(04)'      A1F_WL_PSKSTBM4_CH13  ' ',
'KONM-KSTBM(05)'      A1F_WL_PSKSTBM5_CH13   ' ',
'KONM-KBETR(01)'      KBETR1   ' ',
'KONM-KBETR(02)'      KBETR2   ' ',
'KONM-KBETR(03)'      KBETR3   ' ',
'KONM-KBETR(04)'      KBETR4   ' ',
'KONM-KBETR(05)'      KBETR5   ' ',
'SAPMV13A'        '0201'              'X',
'BDC_OKCODE'      '=BACK'             ' ',
'SAPMM06I'        '0102'              'X',
'BDC_OKCODE'      '/00'               ' ',

'SAPMM06I'        '0105'              'X',
'BDC_OKCODE'      '/00'               ' ',
'SAPMM06I'        '0103'              'X',
'BDC_OKCODE'      '=BU'               ' ',
'RM06I-LTEX1(01)' /A1F/YMNS0001-YM_KUBIJUHUTYUK  ' ',
'RM06I-LTEX2(01)' /A1F/YMNS0001-YM_KUBIJUHUTYUK2 ' ',
'RM06I-LTEX1(02)' /A1F/YMNS0001-YM_KUBUJUHUTEXT  ' '.

ENDIF .

CALL FUNCTION 'DEQUEUE_EMEINAE'
EXPORTING
MODE_EINA = 'E'
MANDT     = SY-MANDT
INFNR     = LW_INFNR.
**** START DEL 2014/08/27 ISID･喩 ****
*    EXCEPTIONS
*      FOREIGN_LOCK   = 1
*      SYSTEM_FAILURE = 2
*      OTHERS         = 3.
*
*  IF SY-SUBRC <> 0.
*    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
**** END DEL 2014/08/27 ISID･喩 ****

PERFORM A1F_CALL_TRANSCTION TABLES A1F_TL_BDCDATA
TL_BAPIRET2
USING 'ME12'.

LOOP AT TL_BAPIRET2 INTO WL_BAPIRET2
WHERE TYPE = 'E' .
MESSAGE ID WL_BAPIRET2-ID
TYPE WL_BAPIRET2-TYPE
NUMBER WL_BAPIRET2-NUMBER
WITH WL_BAPIRET2-MESSAGE_V1
WL_BAPIRET2-MESSAGE_V2
WL_BAPIRET2-MESSAGE_V3
WL_BAPIRET2-MESSAGE_V4 .
ENDLOOP .

MESSAGE I297(/A1F/YLMS0100) .

ENDFORM.                    " PURCHASE_MASETER_UPDATE
*&---------------------------------------------------------------------*
*&      Form  CUSTOMER_MASTER_UPDATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CUSTOMER_MASTER_UPDATE.

* 得意先品目マスタ更新
PERFORM CUSTOMER_MATERIAL.

* 販売価格更新
PERFORM CUSTOMER_PRICE.

ENDFORM.                    " CUSTOMER_MASTER_UPDATE
*&---------------------------------------------------------------------*
*&      Form  run_bapi
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM RUN_BAPI.

CALL FUNCTION 'BAPI_MATERIAL_SAVEDATA'
EXPORTING
HEADDATA             = WL_HEADDATE
CLIENTDATA           = WL_CLIENTDATA
CLIENTDATAX          = WL_CLIENTDATAX
PLANTDATA            = WL_PLANTDATE
PLANTDATAX           = WL_PLANTDATEX
STORAGELOCATIONDATA  = WL_STORAGELOCATIONDATA
STORAGELOCATIONDATAX = WL_STORAGELOCATIONDATAX
SALESDATA            = WL_SALESDATE
SALESDATAX           = WL_SALESDATEX
IMPORTING
RETURN               = WL_BAPIRET2
TABLES
MATERIALDESCRIPTION  = TL_MATERIALDESCRIPTION
UNITSOFMEASURE       = TL_UNITSOFMEASURE
UNITSOFMEASUREX      = TL_UNITSOFMEASUREX
**** START ADD 2015/05/28 ISID18 ****
TAXCLASSIFICATIONS   = TL_TAXCLASSIFICATIONS
**** END ADD 2015/05/28 ISID18 ****
**** START ADD 2015/07/13 ISID18 ****
MATERIALLONGTEXT     = TL_MATERIALLONGTEXT
**** END ADD 2015/07/13 ISID18 ****
RETURNMESSAGES       = TL_RETURNMESSAGES.

LOOP AT TL_RETURNMESSAGES INTO WL_RETURNMESSAGES
WHERE TYPE NE 'H'
**** START ADD 2015/08/04 ISID18 ****
AND TYPE NE SPACE.
**** END ADD 2015/08/04 ISID18 ****
MESSAGE ID WL_RETURNMESSAGES-ID
TYPE WL_RETURNMESSAGES-TYPE
NUMBER WL_RETURNMESSAGES-NUMBER
WITH WL_RETURNMESSAGES-MESSAGE_V1
WL_RETURNMESSAGES-MESSAGE_V2
WL_RETURNMESSAGES-MESSAGE_V3
WL_RETURNMESSAGES-MESSAGE_V4.
ENDLOOP .

COMMIT WORK AND WAIT.

CALL FUNCTION 'BAPI_MATERIAL_SAVEDATA'
EXPORTING
HEADDATA       = WL_HEADDATE
IMPORTING
RETURN         = WL_BAPIRET2
TABLES
UNITSOFMEASURE = TL_UNITSOFMEASURE2.

LOOP AT TL_RETURNMESSAGES INTO WL_RETURNMESSAGES
WHERE TYPE NE 'H'
**** START ADD 2015/08/04 ISID18 ****
AND TYPE NE SPACE.
**** END ADD 2015/08/04 ISID18 ****
MESSAGE ID WL_RETURNMESSAGES-ID
TYPE WL_RETURNMESSAGES-TYPE
NUMBER WL_RETURNMESSAGES-NUMBER
WITH WL_RETURNMESSAGES-MESSAGE_V1
WL_RETURNMESSAGES-MESSAGE_V2
WL_RETURNMESSAGES-MESSAGE_V3
WL_RETURNMESSAGES-MESSAGE_V4.
ENDLOOP .


COMMIT WORK AND WAIT.
MESSAGE I295(/A1F/YLMS0100) .
LST_MATNR-BSTME = /A1F/YMNS0001-YM_BSTME.
LST_MVKE-VRKME = /A1F/YMNS0001-YM_VRKME.

ENDFORM.                    " run_bapi
*&---------------------------------------------------------------------*
*&      Form  data_setting
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DATA_SETTING.

**** START ADD 2015/07/13 ISID18 ****
DATA LTH_STXH TYPE STXH.
**** END ADD 2015/07/13 ISID18 ****

WL_HEADDATE-MATERIAL = /A1F/YMNS0001-YM_MATNR.
WL_HEADDATE-MATL_TYPE     = 'X'.
WL_HEADDATE-BASIC_VIEW    = 'X'.
WL_HEADDATE-PURCHASE_VIEW = 'X'.
WL_HEADDATE-STORAGE_VIEW  = 'X'.
WL_HEADDATE-SALES_VIEW    = 'X'.
**** START ADD 2015/07/13 ISID18 ****
WL_HEADDATE-MRP_VIEW      = 'X'.
**** END ADD 2015/07/13 ISID18 ****

WL_CLIENTDATA-MATL_GROUP = /A1F/YMNS0001-YM_MATKL.
WL_CLIENTDATA-BASE_UOM   = /A1F/YMNS0001-YM_MEINS.
WL_CLIENTDATA-PO_UNIT    = /A1F/YMNS0001-YM_BSTME.
WL_CLIENTDATA-NET_WEIGHT = /A1F/YMNS0001-YM_NTGEW.
WL_CLIENTDATA-HAZ_MAT_NO = /A1F/YMNS0001-YM_STOFF.
WL_CLIENTDATA-DIVISION   = /A1F/YMNS0001-SPART.
WL_CLIENTDATA-PROD_HIER  = /A1F/YMNS0001-YM_PRDHA.

* Append By Mis-Ohno
*  WL_CLIENTDATA-BASIC_MATL = /A1F/YMNS0001-YM_WRKST . "主構成物質
*  WL_CLIENTDATA-STD_DESCR  = /A1F/YMNS0001-YM_NORMT . "標準テキスト
* End Append

WL_CLIENTDATAX-MATL_GROUP = 'X'.
WL_CLIENTDATAX-BASE_UOM   = 'X'.
WL_CLIENTDATAX-PO_UNIT    = 'X'.
WL_CLIENTDATAX-NET_WEIGHT = 'X'.
WL_CLIENTDATAX-HAZ_MAT_NO = 'X'.
WL_CLIENTDATAX-DIVISION   = 'X'.
WL_CLIENTDATAX-PROD_HIER  = 'X'.

* Append By Mis-Ohno
*  WL_CLIENTDATAX-BASIC_MATL = 'X' .
*  WL_CLIENTDATAX-STD_DESCR  = 'X' .
* End Append

WL_PLANTDATE-PLANT        = /A1F/YMNS0001-WERKS.
WL_PLANTDATE-GR_PR_TIME   = /A1F/YMNS0001-YM_WEBAZ.
WL_PLANTDATE-COUNTRYORI   = /A1F/YMNS0001-YM_HERKL.
WL_PLANTDATE-COMM_CODE    = /A1F/YMNS0001-YM_STAWN.
**** START ADD 2015/07/13 ISID18 ****
WL_PLANTDATE-MRP_TYPE     = A1F_CNS_DISMM.
WL_PLANTDATE-ISS_ST_LOC   = /A1F/YMNS0001-YM_LGPRO.
WL_PLANTDATE-SLOC_EXPRC   = /A1F/YMNS0001-YM_LGFSB.
**** END ADD 2015/07/13 ISID18 ****

WL_PLANTDATEX-PLANT        = /A1F/YMNS0001-WERKS.
WL_PLANTDATEX-GR_PR_TIME   = 'X'.
WL_PLANTDATEX-COUNTRYORI   = 'X'.
WL_PLANTDATEX-COMM_CODE    = 'X'.
**** START ADD 2015/07/13 ISID18 ****
WL_PLANTDATEX-MRP_TYPE     = 'X'.
WL_PLANTDATEX-ISS_ST_LOC   = 'X'.
WL_PLANTDATEX-SLOC_EXPRC   = 'X'.
**** END ADD 2015/07/13 ISID18 ****

* 販売ビューデータ設定
WL_SALESDATE-SALES_ORG     = /A1F/YMNS0001-VKORG.
WL_SALESDATE-DISTR_CHAN    = /A1F/YMNS0001-VTWEG.
WL_SALESDATE-SALES_UNIT    = /A1F/YMNS0001-YM_VRKME.
WL_SALESDATE-MATL_GRP_1    = /A1F/YMNS0001-YM_MVGR1.
WL_SALESDATE-MATL_GRP_2    = /A1F/YMNS0001-YM_MVGR2.
WL_SALESDATE-MATL_GRP_3    = /A1F/YMNS0001-YM_MVGR3.
WL_SALESDATE-MATL_GRP_4    = /A1F/YMNS0001-YM_KIHTBHBIJSK.
WL_SALESDATE-PROD_ATT_1    = /A1F/YMNS0001-PROD_ATT_1.
WL_SALESDATE-PROD_ATT_2    = /A1F/YMNS0001-PROD_ATT_2.
* 2010/10/14 DMW2286品目グループ5 - start
WL_SALESDATE-MATL_GRP_5    = /A1F/YMNS0001-YM_INITIAL.
* 2010/10/14 DMW2286品目グループ5 - end

*DMW1934 2010.6.4 MIS INSERT START
WL_SALESDATE-PROD_HIER     = /A1F/YMNS0001-YM_PRDHA.
*DMW1934 2010.6.4 MIS INSERT END

WL_SALESDATEX-SALES_ORG     = /A1F/YMNS0001-VKORG.
WL_SALESDATEX-DISTR_CHAN    = /A1F/YMNS0001-VTWEG.
WL_SALESDATEX-SALES_UNIT    = 'X'.
WL_SALESDATEX-MATL_GRP_1    = 'X'.
WL_SALESDATEX-MATL_GRP_2    = 'X'.
WL_SALESDATEX-MATL_GRP_3    = 'X'.
WL_SALESDATEX-MATL_GRP_4    = 'X'.
WL_SALESDATEX-PROD_ATT_1    = 'X'.
WL_SALESDATEX-PROD_ATT_2    = 'X'.
*DMW1934 2010.6.4 MIS INSERT START
WL_SALESDATEX-PROD_HIER     = 'X'.
*DMW1934 2010.6.4 MIS INSERT END
* 2010/10/14 DMW2286品目グループ5 - start
WL_SALESDATEX-MATL_GRP_5    = 'X'.
* 2010/10/14 DMW2286品目グループ5 - end

WL_STORAGELOCATIONDATA-PLANT    = /A1F/YMNS0001-WERKS.
WL_STORAGELOCATIONDATA-STGE_LOC = /A1F/YMNS0001-LGORT.
WL_STORAGELOCATIONDATA-STGE_BIN = /A1F/YMNS0001-YM_LGPBE.

WL_STORAGELOCATIONDATAX-PLANT    = /A1F/YMNS0001-WERKS.
WL_STORAGELOCATIONDATAX-STGE_LOC = /A1F/YMNS0001-LGORT.
WL_STORAGELOCATIONDATAX-STGE_BIN = 'X'.

REFRESH : TL_MATERIALDESCRIPTION.
**** START UPD 2015/07/13 ISID18 ****
*  WL_MATERIALDESCRIPTION-LANGU     = SY-LANGU.
WL_MATERIALDESCRIPTION-LANGU     = /A1F/YMNS0001-YM_MAKTX_LANG.
**** END UPD 2015/07/13 ISID18 ****
WL_MATERIALDESCRIPTION-MATL_DESC = /A1F/YMNS0001-YM_MAKTX.
APPEND WL_MATERIALDESCRIPTION TO TL_MATERIALDESCRIPTION.

IF NOT LST_MATNR-BSTME IS INITIAL.
WL_UNITSOFMEASURE-ALT_UNIT = LST_MATNR-BSTME.
WL_UNITSOFMEASURE-DEL_FLAG = 'X'.
APPEND WL_UNITSOFMEASURE TO TL_UNITSOFMEASURE2.
ENDIF.
IF NOT LST_MVKE-VRKME IS INITIAL.
WL_UNITSOFMEASURE-ALT_UNIT = LST_MVKE-VRKME.
WL_UNITSOFMEASURE-DEL_FLAG = 'X'.
APPEND WL_UNITSOFMEASURE TO TL_UNITSOFMEASURE2.
ENDIF.

CLEAR WL_UNITSOFMEASURE.
IF NOT ( /A1F/YMNS0001-YM_UMRENS IS INITIAL ) .
WL_UNITSOFMEASURE-ALT_UNIT = /A1F/YMNS0001-YM_VRKME .
WL_UNITSOFMEASURE-DENOMINATR = /A1F/YMNS0001-YM_UMRENS .
WL_UNITSOFMEASURE-NUMERATOR = /A1F/YMNS0001-YM_UMREZS .
APPEND WL_UNITSOFMEASURE TO TL_UNITSOFMEASURE .
WL_UNITSOFMEASUREX-ALT_UNIT = /A1F/YMNS0001-YM_VRKME .
WL_UNITSOFMEASUREX-DENOMINATR = 'X' .
WL_UNITSOFMEASUREX-NUMERATOR = 'X' .
APPEND WL_UNITSOFMEASUREX TO TL_UNITSOFMEASUREX .
ENDIF .
IF NOT ( /A1F/YMNS0001-YM_UMRENP IS INITIAL )
AND /A1F/YMNS0001-YM_VRKME NE /A1F/YMNS0001-YM_BSTME.
WL_UNITSOFMEASURE-ALT_UNIT = /A1F/YMNS0001-YM_BSTME .
WL_UNITSOFMEASURE-ALT_UNIT_ISO = /A1F/YMNS0001-YM_BSTME .
WL_UNITSOFMEASURE-DENOMINATR = /A1F/YMNS0001-YM_UMRENP .
WL_UNITSOFMEASURE-NUMERATOR = /A1F/YMNS0001-YM_UMREZP .
APPEND WL_UNITSOFMEASURE TO TL_UNITSOFMEASURE .
WL_UNITSOFMEASUREX-ALT_UNIT = /A1F/YMNS0001-YM_BSTME .
WL_UNITSOFMEASUREX-ALT_UNIT_ISO = /A1F/YMNS0001-YM_BSTME .
WL_UNITSOFMEASUREX-DENOMINATR = 'X' .
WL_UNITSOFMEASUREX-NUMERATOR = 'X' .
APPEND WL_UNITSOFMEASUREX TO TL_UNITSOFMEASUREX .
ENDIF .

**** START ADD 2015/05/28 ISID18 ****
IF NOT ( /A1F/YMNS0001-TAXCLASS_1  IS INITIAL ).
PERFORM SET_DEPCOUNTRY
USING    /A1F/YMNS0001-VKORG
CHANGING /A1F/YMNS0001-DEPCOUNTRY.
WL_TAXCLASSIFICATIONS-TAX_TYPE_1 = /A1F/YMNS0001-TAX_TYPE_1 .
WL_TAXCLASSIFICATIONS-TAXCLASS_1 = /A1F/YMNS0001-TAXCLASS_1 .
WL_TAXCLASSIFICATIONS-DEPCOUNTRY = /A1F/YMNS0001-DEPCOUNTRY .
APPEND WL_TAXCLASSIFICATIONS TO TL_TAXCLASSIFICATIONS.
ENDIF.
**** END ADD 2015/05/28 ISID18 ****

**** START ADD 2015/07/13 ISID18 ****
CLEAR:  WL_MATERIALLONGTEXT, LTH_STXH.
REFRESH TL_MATERIALLONGTEXT.
WL_MATERIALLONGTEXT-APPLOBJECT      = A1F_CNS_TDOBJECT3.
WL_MATERIALLONGTEXT-TEXT_NAME+0(18) = /A1F/YMNS0001-YM_MATNR.
WL_MATERIALLONGTEXT-TEXT_NAME+18(4) = /A1F/YMNS0001-VKORG.
WL_MATERIALLONGTEXT-TEXT_NAME+22(2) = /A1F/YMNS0001-VTWEG.
WL_MATERIALLONGTEXT-TEXT_ID         = CNS_0001.
WL_MATERIALLONGTEXT-LANGU           = /A1F/YMNS0001-YM_HANBAI_LANG.
WL_MATERIALLONGTEXT-FORMAT_COL      = '*'.
IF /A1F/YMNS0001-YM_HANBAI_TEXT IS NOT INITIAL.
WL_MATERIALLONGTEXT-TEXT_LINE     = /A1F/YMNS0001-YM_HANBAI_TEXT.
APPEND WL_MATERIALLONGTEXT TO TL_MATERIALLONGTEXT.
ELSE.
SELECT SINGLE *
FROM STXH
INTO LTH_STXH
WHERE TDOBJECT = A1F_CNS_TDOBJECT3
AND TDNAME   = WL_MATERIALLONGTEXT-TEXT_NAME
AND TDID     = CNS_0001
AND TDSPRAS  = /A1F/YMNS0001-YM_HANBAI_LANG.
IF SY-SUBRC = 0.
WL_MATERIALLONGTEXT-DEL_FLAG = ABAP_ON.
APPEND WL_MATERIALLONGTEXT TO TL_MATERIALLONGTEXT.
ENDIF.
ENDIF.
**** END ADD 2015/07/13 ISID18 ****

ENDFORM.                    " data_setting
*&---------------------------------------------------------------------*
*&      Form  A1F_GENERATE_BDCDATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_A1F_TL_BDCDATA  text
*      -->P_1510   text
*      -->P_1511   text
*      -->P_1512   text
*----------------------------------------------------------------------*
FORM A1F_GENERATE_BDCDATA
TABLES   P_A1F_TL_BDCDATA STRUCTURE BDCDATA
USING    P_PROGRAM P_DYNPRO P_DYNBEGIN.

CLEAR P_A1F_TL_BDCDATA.

IF P_DYNBEGIN = 'X'.
P_A1F_TL_BDCDATA-PROGRAM  = P_PROGRAM.
P_A1F_TL_BDCDATA-DYNPRO   = P_DYNPRO.
P_A1F_TL_BDCDATA-DYNBEGIN = P_DYNBEGIN.
APPEND P_A1F_TL_BDCDATA.
ELSEIF P_DYNBEGIN = ' '.
P_A1F_TL_BDCDATA-FNAM = P_PROGRAM.
P_A1F_TL_BDCDATA-FVAL = P_DYNPRO.
APPEND P_A1F_TL_BDCDATA.
ENDIF.

ENDFORM.                    " A1F_GENERATE_BDCDATA
*&---------------------------------------------------------------------*
*&      Form  A1F_CALL_TRANSCTION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_A1F_TL_BDCDATA  text
*      -->P_P_A1F_TL_EINA_RETURN  text
*      -->P_1965   text
*----------------------------------------------------------------------*
FORM A1F_CALL_TRANSCTION  TABLES   P_A1F_TL_BDCDATA
STRUCTURE BDCDATA
P_BAPIRET2
STRUCTURE BAPIRET2
USING  P_TCODE .

DATA : A1F_TL_BDCMSGCOLL LIKE TABLE OF BDCMSGCOLL
WITH HEADER LINE .

DATA A1F_WL_SY_SUBRC LIKE SY-SUBRC .

**** START ADD 2014/08/27 ISID・喩 ****
DATA LW_MODE TYPE CHAR1 VALUE 'N'.
**** END ADD 2014/08/27 ISID・喩 ****

CLEAR P_BAPIRET2 .
REFRESH P_BAPIRET2 .

CALL TRANSACTION P_TCODE
USING P_A1F_TL_BDCDATA
**** START UPD 2014/08/27 ISID・喩 ****
*       MODE 'N'
MODE LW_MODE
**** END UPD 2014/08/27 ISID・喩 ****
UPDATE 'S'
MESSAGES INTO A1F_TL_BDCMSGCOLL.


LOOP AT A1F_TL_BDCMSGCOLL .
P_BAPIRET2-TYPE = A1F_TL_BDCMSGCOLL-MSGTYP .
P_BAPIRET2-ID = A1F_TL_BDCMSGCOLL-MSGID.
P_BAPIRET2-NUMBER = A1F_TL_BDCMSGCOLL-MSGNR.
P_BAPIRET2-MESSAGE_V1 = A1F_TL_BDCMSGCOLL-MSGV1.
P_BAPIRET2-MESSAGE_V2 = A1F_TL_BDCMSGCOLL-MSGV2.
P_BAPIRET2-MESSAGE_V3 = A1F_TL_BDCMSGCOLL-MSGV3.
P_BAPIRET2-MESSAGE_V4 = A1F_TL_BDCMSGCOLL-MSGV4.
APPEND P_BAPIRET2 .
ENDLOOP.

ENDFORM.                    " A1F_CALL_TRANSCTION
*&---------------------------------------------------------------------*
*&      Form  AF1_CONV_VERPR_CHAR_TO_CURR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_/A1F/YMNS0001_YM_PWAERS  text
*      -->P_/A1F/YMNS0001_YM_PKBETR_CH  text
*      <--P_/A1F/YMNS0001_YM_PKPEIN  text
*      <--P_/A1F/YMNS0001_YM_PKBETR  text
*----------------------------------------------------------------------*
FORM AF1_CONV_VERPR_CHAR_TO_CURR USING    P_WAERS
P_VERPR_CH
CHANGING P_PEINH
P_VERPR.

DATA TMP_VERPR TYPE BAPICURR-BAPICURR .
DATA TMP_VERPR_DEC8(16) TYPE P DECIMALS 8 .
DATA TMP_INT_AMOUNT1(16) TYPE P .
DATA TMP_INT_AMOUNT2(16) TYPE P .
DATA TMP_DEC2_AMOUNT1(16) TYPE P DECIMALS 2 .
DATA TMP_DEC2_AMOUNT2(16) TYPE P DECIMALS 2 .
DATA TMP_DEC3_AMOUNT1(16) TYPE P DECIMALS 3 .
DATA TMP_DEC3_AMOUNT2(16) TYPE P DECIMALS 3 .
DATA TMP_DEC4_AMOUNT1(16) TYPE P DECIMALS 4 .
DATA TMP_DEC4_AMOUNT2(16) TYPE P DECIMALS 4 .
DATA TMP_DEC5_AMOUNT1(16) TYPE P DECIMALS 5 .
DATA TMP_DEC5_AMOUNT2(16) TYPE P DECIMALS 5 .
DATA TMP_DEC6_AMOUNT1(16) TYPE P DECIMALS 6 .
DATA TMP_DEC6_AMOUNT2(16) TYPE P DECIMALS 6 .
DATA TMP_DEC7_AMOUNT1(16) TYPE P DECIMALS 7 .
DATA TMP_DEC7_AMOUNT2(16) TYPE P DECIMALS 7 .
DATA S_DECIMALS_OF_CURRENCY TYPE TCURX.
DATA DEC_CHECK(12) VALUE ' 0123456789.' .
DATA DEC_CHECK2(16) TYPE P DECIMALS 8 .

** 入力項目に数値と少数点以外が含まれる場合のエラーチェック
IF P_VERPR_CH CN DEC_CHECK .
MESSAGE E225(/A1F/YLMS0100) WITH P_VERPR_CH .
EXIT .
ENDIF .

** 小数点が二つあるなど数値として変換できない場合のエラーチェック
CATCH SYSTEM-EXCEPTIONS CONVERSION_ERRORS = 4 .
DEC_CHECK2 = P_VERPR_CH .
ENDCATCH .
IF SY-SUBRC NE 0  .
MESSAGE E226(/A1F/YLMS0100) WITH P_VERPR_CH .
EXIT .
ENDIF .

SELECT SINGLE * FROM  TCURX
INTO S_DECIMALS_OF_CURRENCY
WHERE CURRKEY = P_WAERS.
IF SY-SUBRC = 0 .
ELSE .
S_DECIMALS_OF_CURRENCY-CURRDEC = 2 .
ENDIF .

** 最終的な金額に小数点が含まれないパターン（JPYなど）CURRDEC=0
IF S_DECIMALS_OF_CURRENCY-CURRDEC = 0 .
TMP_VERPR_DEC8 = P_VERPR_CH .

TMP_INT_AMOUNT1  = TMP_VERPR_DEC8 .
TMP_DEC2_AMOUNT1 = TMP_VERPR_DEC8 * 100 .
TMP_INT_AMOUNT2  = TMP_VERPR_DEC8 * 100 .

IF TMP_INT_AMOUNT1 = TMP_VERPR_DEC8 .
P_PEINH = '1' .
ELSE .
IF TMP_DEC2_AMOUNT1 = TMP_INT_AMOUNT2 .
P_PEINH = '100' .
TMP_VERPR_DEC8 = TMP_VERPR_DEC8 * 100 .
ELSE .
P_PEINH = '10000' .
TMP_VERPR_DEC8 = TMP_VERPR_DEC8 * 10000 .
ENDIF .
ENDIF .

TMP_VERPR = TMP_VERPR_DEC8 .
CALL FUNCTION 'BAPI_CURRENCY_CONV_TO_INTERNAL'
EXPORTING
CURRENCY             = P_WAERS
AMOUNT_EXTERNAL      = TMP_VERPR
MAX_NUMBER_OF_DIGITS = 10
IMPORTING
AMOUNT_INTERNAL      = P_VERPR.
**** START DEL 2014/08/27 ISID･喩 ****
*    IF SY-SUBRC = 0 .
*    ELSE .
*    ENDIF .
**** END DEL 2014/08/27 ISID･喩 ****

** 最終的な金額が小数点２桁のパターン（USDなど）
**                                   CURRDEC=2（取得できない）
ELSEIF S_DECIMALS_OF_CURRENCY-CURRDEC = 2 .
TMP_VERPR_DEC8 = P_VERPR_CH .

TMP_DEC2_AMOUNT1 = TMP_VERPR_DEC8 .
TMP_DEC4_AMOUNT1 = TMP_VERPR_DEC8 * 100 .
TMP_DEC2_AMOUNT2 = TMP_VERPR_DEC8 * 100 .

IF TMP_DEC2_AMOUNT1 = TMP_VERPR_DEC8 .
P_PEINH = '1' .
ELSE .
IF TMP_DEC4_AMOUNT1 = TMP_DEC2_AMOUNT2 .
P_PEINH = '100' .
TMP_VERPR_DEC8 = TMP_VERPR_DEC8 * 100 .
ELSE .
P_PEINH = '10000' .
TMP_VERPR_DEC8 = TMP_VERPR_DEC8 * 10000 .
ENDIF .
ENDIF .

TMP_VERPR = TMP_VERPR_DEC8 .
CALL FUNCTION 'BAPI_CURRENCY_CONV_TO_INTERNAL'
EXPORTING
CURRENCY             = P_WAERS
AMOUNT_EXTERNAL      = TMP_VERPR
MAX_NUMBER_OF_DIGITS = 10
IMPORTING
AMOUNT_INTERNAL      = P_VERPR.
**** START DEL 2014/08/27 ISID･喩 ****
*    IF SY-SUBRC = 0 .
*    ELSE .
*    ENDIF .
**** END DEL 2014/08/27 ISID･喩 ****

** 最終的な金額が小数点３桁のパターン
**                                   CURRDEC=3
ELSEIF S_DECIMALS_OF_CURRENCY-CURRDEC = 3 .
TMP_VERPR_DEC8 = P_VERPR_CH .

TMP_DEC3_AMOUNT1 = TMP_VERPR_DEC8 .
TMP_DEC5_AMOUNT1 = TMP_VERPR_DEC8 * 100 .
TMP_DEC3_AMOUNT2 = TMP_VERPR_DEC8 * 100 .

IF TMP_DEC3_AMOUNT1 = TMP_VERPR_DEC8 .
P_PEINH = '1' .
ELSE .
IF TMP_DEC5_AMOUNT1 = TMP_DEC3_AMOUNT2 .
P_PEINH = '100' .
TMP_VERPR_DEC8 = TMP_VERPR_DEC8 * 100 .
ELSE .
P_PEINH = '10000' .
TMP_VERPR_DEC8 = TMP_VERPR_DEC8 * 10000 .
ENDIF .
ENDIF .

TMP_VERPR = TMP_VERPR_DEC8 .
CALL FUNCTION 'BAPI_CURRENCY_CONV_TO_INTERNAL'
EXPORTING
CURRENCY             = P_WAERS
AMOUNT_EXTERNAL      = TMP_VERPR
MAX_NUMBER_OF_DIGITS = 10
IMPORTING
AMOUNT_INTERNAL      = P_VERPR.
**** START DEL 2014/08/27 ISID･喩 ****
*    IF SY-SUBRC = 0 .
*    ELSE .
*    ENDIF .
**** END DEL 2014/08/27 ISID･喩 ****

** 最終的な金額が小数点５桁のパターン
**                                   CURRDEC=5
ELSEIF S_DECIMALS_OF_CURRENCY-CURRDEC = 5 .
TMP_VERPR_DEC8 = P_VERPR_CH .

TMP_DEC5_AMOUNT1 = TMP_VERPR_DEC8 .
TMP_DEC7_AMOUNT1 = TMP_VERPR_DEC8 * 100 .
TMP_DEC5_AMOUNT2 = TMP_VERPR_DEC8 * 100 .

IF TMP_DEC5_AMOUNT1 = TMP_VERPR_DEC8 .
P_PEINH = '1' .
ELSE .
IF TMP_DEC7_AMOUNT1 = TMP_DEC5_AMOUNT2 .
P_PEINH = '100' .
TMP_VERPR_DEC8 = TMP_VERPR_DEC8 * 100 .
ELSE .
P_PEINH = '10000' .
TMP_VERPR_DEC8 = TMP_VERPR_DEC8 * 10000 .
ENDIF .
ENDIF .

TMP_VERPR = TMP_VERPR_DEC8 .
CALL FUNCTION 'BAPI_CURRENCY_CONV_TO_INTERNAL'
EXPORTING
CURRENCY             = P_WAERS
AMOUNT_EXTERNAL      = TMP_VERPR
MAX_NUMBER_OF_DIGITS = 10
IMPORTING
AMOUNT_INTERNAL      = P_VERPR.
**** START DEL 2014/08/27 ISID･喩 ****
*    IF SY-SUBRC = 0 .
*    ELSE .
*    ENDIF .
**** END DEL 2014/08/27 ISID･喩 ****

ENDIF .

ENDFORM.                    " af1_conv_verpr_char_to_curr
*&---------------------------------------------------------------------*
*&      Form  customer_material
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CUSTOMER_MATERIAL.

DATA : A1F_WL_VWPOS LIKE KNMT-VWPOS.

IF /A1F/YMNS0001-YM_TMPSRYHS IS INITIAL .
CLEAR A1F_WL_VWPOS .
ELSE .
A1F_WL_VWPOS = 'ZTMP' .
ENDIF .

REFRESH A1F_TL_BDCDATA.

PERFORM A1F_GENERATE_BDCDATA TABLES A1F_TL_BDCDATA
USING:
'RV10A001'               '1000'                     'X',
'BDC_OKCODE'             '=ONLI'                      ' ',
'KUNNR'            /A1F/YMNS0001-YM_KUNNR        ' ',
'VKORG'            /A1F/YMNS0001-VKORG        ' ',
'VTWEG'            /A1F/YMNS0001-VTWEG        ' ',
'SAPMV10A'               '0200'                     'X',
'BDC_CURSOR'             'MV10A-KDMAT(01)'          ' ',
'BDC_OKCODE'             '=SELE'                    ' ',
'MV10A-MATNR(01)'        /A1F/YMNS0001-YM_MATNR        ' ',
'MV10A-KDMAT(01)'        /A1F/YMNS0001-YM_KDMAT        ' ',
'SAPMV10A'               '0300'                     'X',
'BDC_OKCODE'             '=TEXT'                    ' ',
'MV10A-POSTX'            /A1F/YMNS0001-YM_POSTX        ' ',
'MV10A-VWPOS'            A1F_WL_VWPOS        ' ',
'SAPLV70T'               '0101'                     'X',
'BDC_OKCODE'             '=UPD'                    ' ',
'LV70T-LTX01(01)'        /A1F/YMNS0001-YM_SKSJBKU   ' ',
'LV70T-LTX01(03)'        /A1F/YMNS0001-YM_SUHNNAM   ' ',
'LV70T-LTX01(04)'        /A1F/YMNS0001-YM_YOUTO     ' ',
'SAPMV10A'               '0300'                     'X',
'BDC_OKCODE'             '=SICH'                    ' '.


CALL FUNCTION 'DEQUEUE_EVKNMT'
EXPORTING
MODE_KNMT = 'E'
MANDT     = SY-MANDT
VKORG     = /A1F/YMNS0001-VKORG
VTWEG     = /A1F/YMNS0001-VTWEG
KUNNR     = /A1F/YMNS0001-YM_KUNNR
MATNR     = /A1F/YMNS0001-YM_MATNR.
**** START DEL 2014/08/27 ISID･喩 ****
*    EXCEPTIONS
*      FOREIGN_LOCK   = 1
*      SYSTEM_FAILURE = 2
*      OTHERS         = 3.
*
*  IF SY-SUBRC <> 0.
*    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
**** END DEL 2014/08/27 ISID･喩 ****

PERFORM A1F_CALL_TRANSCTION TABLES A1F_TL_BDCDATA
TL_BAPIRET2
USING 'VD52'.

LOOP AT TL_BAPIRET2 INTO WL_BAPIRET2
WHERE TYPE = 'E' .
MESSAGE ID WL_BAPIRET2-ID
TYPE WL_BAPIRET2-TYPE
NUMBER WL_BAPIRET2-NUMBER
WITH WL_BAPIRET2-MESSAGE_V1
WL_BAPIRET2-MESSAGE_V2
WL_BAPIRET2-MESSAGE_V3
WL_BAPIRET2-MESSAGE_V4 .
ENDLOOP .

MESSAGE I299(/A1F/YLMS0100) .

ENDFORM.                    " customer_material
*&---------------------------------------------------------------------*
*&      Form  CUSTOMER_PRICE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CUSTOMER_PRICE.

DATA : A1F_TL_BDCDATA LIKE TABLE OF BDCDATA
WITH HEADER LINE .
DATA : A1F_WL_KPEIN_CH5(5) ,
A1F_WL_SKMEIN_CH3(3) ,
A1F_WL_NETPR_CH11(11) ,
A1F_WL_SSKSTBM1_CH13(13) ,
A1F_WL_SSKSTBM2_CH13(13) ,
A1F_WL_SSKSTBM3_CH13(13) ,
A1F_WL_SSKSTBM4_CH13(13) ,
A1F_WL_SSKSTBM5_CH13(13) ,
A1F_WL_SSKBETR1_CH11(11) ,
A1F_WL_SSKBETR2_CH11(11) ,
A1F_WL_SSKBETR3_CH11(11) ,
A1F_WL_SSKBETR4_CH11(11) ,
A1F_WL_SSKBETR5_CH11(11) ,
A1F_WL_SSKONMS1_CH3(3) .

**** START ADD 2015/04/16 ISID･馮 ****
DATA : A1F_WL_SDATAB_CH10(10) ,
A1F_WL_SDATBI_CH10(10) .

WRITE /A1F/YMNS0001-YM_SDATAB TO A1F_WL_SDATAB_CH10 .
WRITE /A1F/YMNS0001-YM_SDATBI TO A1F_WL_SDATBI_CH10 .
**** END ADD 2015/04/16 ISID･馮 ****

A1F_WL_KPEIN_CH5 = /A1F/YMNS0001-YM_SKPEIN .
WRITE /A1F/YMNS0001-YM_SKMEIN TO A1F_WL_SKMEIN_CH3 .
WRITE /A1F/YMNS0001-YM_SKBETR CURRENCY /A1F/YMNS0001-YM_SWAERS
TO A1F_WL_NETPR_CH11 .
WRITE /A1F/YMNS0001-YM_SSKONMS1 TO A1F_WL_SSKONMS1_CH3 .
WRITE /A1F/YMNS0001-YM_SSKSTBM1 UNIT /A1F/YMNS0001-YM_SSKONMS1
TO A1F_WL_SSKSTBM1_CH13 .
WRITE /A1F/YMNS0001-YM_SSKSTBM2 UNIT /A1F/YMNS0001-YM_SSKONMS1
TO A1F_WL_SSKSTBM2_CH13 .
WRITE /A1F/YMNS0001-YM_SSKSTBM3 UNIT /A1F/YMNS0001-YM_SSKONMS1
TO A1F_WL_SSKSTBM3_CH13 .
WRITE /A1F/YMNS0001-YM_SSKSTBM4 UNIT /A1F/YMNS0001-YM_SSKONMS1
TO A1F_WL_SSKSTBM4_CH13 .
WRITE /A1F/YMNS0001-YM_SSKSTBM5 UNIT /A1F/YMNS0001-YM_SSKONMS1
TO A1F_WL_SSKSTBM5_CH13 .
WRITE /A1F/YMNS0001-YM_SSKBETR1 CURRENCY /A1F/YMNS0001-YM_SWAERS
TO A1F_WL_SSKBETR1_CH11 .
WRITE /A1F/YMNS0001-YM_SSKBETR2 CURRENCY /A1F/YMNS0001-YM_SWAERS
TO A1F_WL_SSKBETR2_CH11 .
WRITE /A1F/YMNS0001-YM_SSKBETR3 CURRENCY /A1F/YMNS0001-YM_SWAERS
TO A1F_WL_SSKBETR3_CH11 .
WRITE /A1F/YMNS0001-YM_SSKBETR4 CURRENCY /A1F/YMNS0001-YM_SWAERS
TO A1F_WL_SSKBETR4_CH11 .
WRITE /A1F/YMNS0001-YM_SSKBETR5 CURRENCY /A1F/YMNS0001-YM_SWAERS
TO A1F_WL_SSKBETR5_CH11 .


CLEAR A1F_TL_BDCDATA.
REFRESH A1F_TL_BDCDATA.

IF /A1F/YMNS0001-YM_SSKSTBM2 IS INITIAL .
PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'SAPMV13A'        '0100'              'X',
'BDC_OKCODE'      '/00'               ' ',
'RV13A-KSCHL'      A1F_CNS_KSCHL      ' ',
'SAPMV13A'        '1901'              'X',
'BDC_OKCODE'      '=SICH'             ' ',
'KOMG-VKORGAU'      /A1F/YMNS0001-VKORG             ' ',
'KOMG-VTWEG'      /A1F/YMNS0001-VTWEG             ' ',
'KOMG-SPART'      /A1F/YMNS0001-SPART             ' ',
'KOMG-KUNNR'      /A1F/YMNS0001-YM_KUNNR          ' ',
'KOMG-ZZZKDMAT(01)'      /A1F/YMNS0001-YM_KDMAT      ' ',
'KONP-KBETR(01)'      A1F_WL_NETPR_CH11    ' ',
'KONP-KONWA(01)'      /A1F/YMNS0001-YM_SWAERS    ' ',
'KONP-KPEIN(01)'      A1F_WL_KPEIN_CH5     ' ',
'KONP-KMEIN(01)'      A1F_WL_SKMEIN_CH3    ' ',
**** START ADD 2015/04/16 ISID･馮 ****
*             'RV13A-DATAB(01)'      /A1F/YMNS0001-YM_SDATAB    ' ',
*             'RV13A-DATBI(01)'      /A1F/YMNS0001-YM_SDATBI    ' '.
'RV13A-DATAB(01)'      A1F_WL_SDATAB_CH10    ' ',
'RV13A-DATBI(01)'      A1F_WL_SDATBI_CH10    ' '.
**** END ADD 2015/04/16 ISID･馮 ****
ELSE .
PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:

'SAPMV13A'        '0100'              'X',
'BDC_OKCODE'      '/00'               ' ',
'RV13A-KSCHL'      A1F_CNS_KSCHL      ' ',
'SAPMV13A'        '1901'              'X',
'BDC_OKCODE'      '=PSTF'             ' ',
'BDC_CURSOR'      'KONP-KBETR(01)'    ' ',
'KOMG-VKORGAU'      /A1F/YMNS0001-VKORG             ' ',
'KOMG-VTWEG'      /A1F/YMNS0001-VTWEG             ' ',
'KOMG-SPART'      /A1F/YMNS0001-SPART             ' ',
'KOMG-KUNNR'      /A1F/YMNS0001-YM_KUNNR          ' ',
'KOMG-ZZZKDMAT(01)'      /A1F/YMNS0001-YM_KDMAT      ' ',
'KONP-KBETR(01)'      A1F_WL_NETPR_CH11    ' ',
'KONP-KONWA(01)'      /A1F/YMNS0001-YM_SWAERS    ' ',
'KONP-KPEIN(01)'      A1F_WL_KPEIN_CH5     ' ',
'KONP-KMEIN(01)'      A1F_WL_SKMEIN_CH3    ' ',
**** START ADD 2015/04/16 ISID･馮 ****
*             'RV13A-DATAB(01)'      /A1F/YMNS0001-YM_SDATAB    ' ',
*             'RV13A-DATBI(01)'      /A1F/YMNS0001-YM_SDATBI    ' ',
'RV13A-DATAB(01)'      A1F_WL_SDATAB_CH10    ' ',
'RV13A-DATBI(01)'      A1F_WL_SDATBI_CH10    ' ',
**** END ADD 2015/04/16 ISID･馮 ****
'SAPMV13A'        '0303'              'X',
'BDC_OKCODE'      '=SICH'             ' ',
'KONM-KSTBM(01)'      A1F_WL_SSKSTBM1_CH13   ' ',
'RV13A-KONMS(01)'     A1F_WL_SSKONMS1_CH3    ' ',
'KONM-KSTBM(02)'      A1F_WL_SSKSTBM2_CH13   ' ',
'KONM-KSTBM(03)'      A1F_WL_SSKSTBM3_CH13   ' ',
'KONM-KSTBM(04)'      A1F_WL_SSKSTBM4_CH13   ' ',
'KONM-KSTBM(05)'      A1F_WL_SSKSTBM5_CH13   ' ',
'KONM-KBETR(01)'      A1F_WL_SSKBETR1_CH11   ' ',
'KONM-KBETR(02)'      A1F_WL_SSKBETR2_CH11   ' ',
'KONM-KBETR(03)'      A1F_WL_SSKBETR3_CH11   ' ',
'KONM-KBETR(04)'      A1F_WL_SSKBETR4_CH11   ' ',
'KONM-KBETR(05)'      A1F_WL_SSKBETR5_CH11   ' '.
ENDIF .

PERFORM A1F_CALL_TRANSCTION TABLES A1F_TL_BDCDATA
TL_BAPIRET2
USING 'VK11'.

LOOP AT TL_BAPIRET2 INTO WL_BAPIRET2
WHERE TYPE = 'E' .
MESSAGE ID WL_BAPIRET2-ID
TYPE WL_BAPIRET2-TYPE
NUMBER WL_BAPIRET2-NUMBER
WITH WL_BAPIRET2-MESSAGE_V1
WL_BAPIRET2-MESSAGE_V2
WL_BAPIRET2-MESSAGE_V3
WL_BAPIRET2-MESSAGE_V4 .
ENDLOOP .

MESSAGE I301(/A1F/YLMS0100) .

ENDFORM.                    " CUSTOMER_PRICE
*&---------------------------------------------------------------------*
*&      Form  A1F_CALCULATION_MARGIN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CALCULATION_MARGIN.

DATA : A1F_WL_MARGIN1(16) TYPE P DECIMALS 4 ,
A1F_WL_MARGIN2(16) TYPE P ,
A1F_WL_TMP_VALUE LIKE BAPICURR-BAPICURR ,
A1F_WL_TMP_VALUE2 LIKE BAPICURR-BAPICURR ,
A1F_WL_NETPR TYPE F ,
A1F_WL_NETPR_C(20) .

IF /A1F/YMNS0001-YM_ARRRT IS INITIAL .
CLEAR /A1F/YMNS0001-YM_URKKK .
EXIT .
ENDIF .

CALL FUNCTION 'BAPI_CURRENCY_CONV_TO_EXTERNAL'
EXPORTING
CURRENCY        = /A1F/YMNS0001-YM_PWAERS
AMOUNT_INTERNAL = /A1F/YMNS0001-YM_PKBETR
IMPORTING
AMOUNT_EXTERNAL = A1F_WL_TMP_VALUE.

A1F_WL_NETPR = A1F_WL_TMP_VALUE .

IF /A1F/YMNS0001-YM_ARRRT < 100 .
IF /A1F/YMNS0001-YM_SYUSUTNHYUJ IS INITIAL .
A1F_WL_MARGIN2 = A1F_WL_NETPR
/ ( ( 100 - /A1F/YMNS0001-YM_ARRRT ) / 100 ) .
WRITE A1F_WL_MARGIN2 TO /A1F/YMNS0001-YM_URKKK .
ELSE .
A1F_WL_MARGIN1 = A1F_WL_NETPR
/ ( ( 100 - /A1F/YMNS0001-YM_ARRRT ) / 100 ) .
WRITE A1F_WL_MARGIN1 TO /A1F/YMNS0001-YM_URKKK .
ENDIF .
ELSE.
/A1F/YMNS0001-YM_URKKK = '*******************' .
ENDIF .


ENDFORM.                    " A1F_CALCULATION_MARGIN
*&---------------------------------------------------------------------*
*&      Form  A1F_CHECK_BEFORE_SAVE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CHECK_BEFORE_SAVE.

* 品目コードの入力値チェック（禁則文字のチェック）
* 品目テキストの入力値チェック（禁則文字のチェック）
* 得意先品目コードの入力値チェック（禁則文字のチェック）

* 品目マスタ登録時の入力値チェック
IF NOT /A1F/YMNS0001-YM_MATNR IS INITIAL .
PERFORM A1F_CHECK_MATERIAL_DATA .
ENDIF .
* 得意先品目情報マスタ登録時の入力値チェック
IF NOT ( /A1F/YMNS0001-YM_KUNNR IS INITIAL )  .
PERFORM A1F_CHECK_CUST_MAT_DATA .
ENDIF .
* 購買情報マスタ登録時のチェック
IF NOT ( /A1F/YMNS0001-YM_LIFNR IS INITIAL ) .
PERFORM A1F_CHECK_PURCHASE_INFO_DATA .
ENDIF .
* 販売価格マスタ登録時のチェック
IF NOT ( /A1F/YMNS0001-YM_KUNNR IS INITIAL )  .
PERFORM A1F_CHECK_SALES_PRICE_DATA .
ENDIF .



* 2010/03/19 DMW1521対応          -----               START
* 販売スケール金額大小チェック
IF ( /A1F/YMNS0001-YM_SSKBETR1 <
/A1F/YMNS0001-YM_SSKBETR2 )
OR ( /A1F/YMNS0001-YM_SSKBETR2 <
/A1F/YMNS0001-YM_SSKBETR3 )
OR ( /A1F/YMNS0001-YM_SSKBETR3 <
/A1F/YMNS0001-YM_SSKBETR4 )
OR ( /A1F/YMNS0001-YM_SSKBETR4 <
/A1F/YMNS0001-YM_SSKBETR5 ).
SET CURSOR FIELD '/A1F/YMNS0001-YM_SSKBETR1'.
MESSAGE E317(/A1F/YLMS0100) .
ENDIF.
* 2010/03/19 DMW1521対応          -----               E N D

ENDFORM.                    " A1F_CHECK_BEFORE_SAVE
*&---------------------------------------------------------------------*
*&      Form  A1F_CHECK_MATERIAL_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CHECK_MATERIAL_DATA.

* 266 品目タイプの必須チェック  YM_HNMKTYP
IF /A1F/YMNS0001-YM_HNMKTYP IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_HNMKTYP'.
MESSAGE E266(/A1F/YLMS0100) .
ENDIF .
* 267 品目コードの必須チェック  YM_MATNR
IF /A1F/YMNS0001-YM_MATNR IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_MATNR'.
MESSAGE E267(/A1F/YLMS0100) .
ENDIF .
*	268	品目テキストの必須チェック	YM_MAKTX
IF /A1F/YMNS0001-YM_MAKTX IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_MAKTX'.
MESSAGE E268(/A1F/YLMS0100) .
ENDIF .
*	269	基本数量単位の必須チェック	YM_MEINS
IF /A1F/YMNS0001-YM_MEINS IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_MEINS'.
MESSAGE E269(/A1F/YLMS0100) .
ENDIF .
*	270	品目グループの必須チェック	YM_MATKL
IF /A1F/YMNS0001-YM_MATKL IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_MATKL'.
MESSAGE E270(/A1F/YLMS0100) .
ENDIF .
*	271	品目階層の必須チェック	YM_PRDHA
IF /A1F/YMNS0001-YM_PRDHA IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_PRDHA'.
MESSAGE E271(/A1F/YLMS0100) .
ENDIF .
*	272	商品グループの必須チェック	YM_MVGR1
IF /A1F/YMNS0001-YM_MVGR1 IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_MVGR1'.
MESSAGE E272(/A1F/YLMS0100) .
ENDIF .
*	273	最終製品の必須チェック	YM_MVGR2
IF /A1F/YMNS0001-YM_MVGR2 IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_MVGR2'.
MESSAGE E273(/A1F/YLMS0100) .
ENDIF .
*	274	商品分類の必須チェック	YM_MVGR3
IF /A1F/YMNS0001-YM_MVGR3 IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_MVGR3'.
MESSAGE E274(/A1F/YLMS0100) .
ENDIF .
*	275	棚番の必須チェック	YM_LGPBE
IF /A1F/YMNS0001-YM_LGPBE IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_LGPBE'.
MESSAGE E275(/A1F/YLMS0100) .
ENDIF .
*	276	移動平均原価の必須チェック	YM_VERPR
IF /A1F/YMNS0001-YM_VERPR IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_VERPR'.
MESSAGE E276(/A1F/YLMS0100) .
ENDIF .
* 277 価格単位（原価用）の必須チェック  YM_PEINH
IF /A1F/YMNS0001-YM_PEINH IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_PEINH'.
MESSAGE E277(/A1F/YLMS0100) .
ENDIF .

* 入庫処理日数の入力値チェック
*  IF /A1F/YMNS0001-YM_SIRSKKBN2 IS INITIAL .
*    IF /A1F/YMNS0001-YM_WEBAZ BETWEEN 3 AND 4 .
*    ELSE .
*      SET CURSOR FIELD '/A1F/YMNS0001-YM_WEBAZ'.
*      MESSAGE W264(/A1F/YLMS0100) .
*    ENDIF .
*  ELSE .
*    IF NOT ( /A1F/YMNS0001-YM_WEBAZ BETWEEN 0 AND 0 ) .
*      SET CURSOR FIELD '/A1F/YMNS0001-YM_WEBAZ'.
*      MESSAGE W263(/A1F/YLMS0100) .
*    ENDIF .
*  ENDIF .

** 2007/07/20 INSERT START
** マスタメンテ項目追加
** 出荷指示備考、原産地、HSコード、危険物区分、該非判定、危険物コード
** 商品名、用途、重量、単位
IF /A1F/YMNS0001-YM_HERKL IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_HERKL'.
MESSAGE E312(/A1F/YLMS0100) .
ENDIF .
** 2007/07/20 INSERT END

**** START ADD 2015/05/28 ISID18 ****
IF /A1F/YMNS0001-TAXCLASS_1 IS INITIAL.
SET CURSOR FIELD '/A1F/YMNS0001-TAXCLASS_1'.
MESSAGE E115(ZMEGSD01).
ENDIF.
**** END ADD 2015/05/28 ISID18 ****

**** START ADD 2015/07/13 ISID18 ****
IF /A1F/YMNS0001-YM_MAKTX_LANG IS INITIAL AND
/A1F/YMNS0001-YM_MAKTX IS NOT INITIAL.
SET CURSOR FIELD '/A1F/YMNS0001-YM_MAKTX_LANG'.
MESSAGE E121(ZMEGSD01).
ENDIF.

IF /A1F/YMNS0001-YM_HANBAI_LANG IS INITIAL AND
/A1F/YMNS0001-YM_HANBAI_TEXT IS NOT INITIAL.
SET CURSOR FIELD '/A1F/YMNS0001-YM_HANBAI_LANG'.
MESSAGE E121(ZMEGSD01).
ENDIF.
**** END ADD 2015/07/13 ISID18 ****

ENDFORM.                    " A1F_CHECK_MATERIAL_DATA
*&---------------------------------------------------------------------*
*&      Form  A1F_CHECK_CUST_MAT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CHECK_CUST_MAT_DATA.

*	278	客先型番の必須チェック	YM_KDMAT
IF /A1F/YMNS0001-YM_KDMAT IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_KDMAT'.
MESSAGE E278(/A1F/YLMS0100) .
ENDIF .

ENDFORM.                    " A1F_CHECK_CUST_MAT_DATA
*&---------------------------------------------------------------------*
*&      Form  A1F_CHECK_PURCHASE_INFO_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CHECK_PURCHASE_INFO_DATA.

*	279	税コードの必須チェック	YM_MWSKZ
IF /A1F/YMNS0001-YM_MWSKZ IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_MWSKZ'.
MESSAGE E279(/A1F/YLMS0100) .
ENDIF .
*	280	正味価格（仕入）の必須チェック	YM_PKBETR
IF /A1F/YMNS0001-YM_PKBETR IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_PKBETR'.
MESSAGE E280(/A1F/YLMS0100) .
ENDIF .
*	281	価格単位（仕入）の必須チェック	YM_PKPEIN
IF /A1F/YMNS0001-YM_PKPEIN IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_PKPEIN'.
MESSAGE E281(/A1F/YLMS0100) .
ENDIF .
* 282 有効開始日（仕入）の必須チェック  YM_PDATAB
IF /A1F/YMNS0001-YM_PDATAB IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_PDATAB'.
MESSAGE E282(/A1F/YLMS0100) .
ENDIF .
* 283 有効終了日（仕入）の必須チェック  YM_PDATBI
IF /A1F/YMNS0001-YM_PDATBI IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_PDATBI'.
MESSAGE E283(/A1F/YLMS0100) .
ENDIF .
* 313 証明書区分の必須チェック  YM_URZTP
**** START DEL 2015/05/28 ISID18 ****
*  IF /A1F/YMNS0001-YM_URZTP IS INITIAL .
*    SET CURSOR FIELD '/A1F/YMNS0001-YM_URZTP'.
*    MESSAGE E313(/A1F/YLMS0100) .
*  ENDIF .
**** END DEL 2015/05/28 ISID18 ****

DATA : A1F_WL_TMP_MATNR LIKE MARC-MATNR .
IF NOT ( /A1F/YMNS0001-YM_MATNR IS INITIAL ) .
SELECT SINGLE MATNR FROM  MARC
INTO A1F_WL_TMP_MATNR
WHERE  MATNR  = /A1F/YMNS0001-YM_MATNR
AND    WERKS  = /A1F/YMNS0001-WERKS .
IF SY-SUBRC NE 0 .
MESSAGE E306(/A1F/YLMS0100) WITH /A1F/YMNS0001-YM_MATNR
/A1F/YMNS0001-WERKS.
ENDIF .
ENDIF .

ENDFORM.                    " A1F_CHECK_PURCHASE_INFO_DATA
*&---------------------------------------------------------------------*
*&      Form  A1F_CHECK_SALES_PRICE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM A1F_CHECK_SALES_PRICE_DATA.

*	287	正味価格（販売）の必須チェック	YM_SKBETR
IF /A1F/YMNS0001-YM_SKBETR IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_SKBETR'.
MESSAGE E287(/A1F/YLMS0100) .
ENDIF .
*	288	価格単位（販売）の必須チェック	YM_SKPEIN
IF /A1F/YMNS0001-YM_SKPEIN IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_SKPEIN'.
MESSAGE E288(/A1F/YLMS0100) .
ENDIF .
* 289 有効開始日（販売）の必須チェック  YM_SDATAB
IF /A1F/YMNS0001-YM_SDATAB IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_SDATAB'.
MESSAGE E289(/A1F/YLMS0100) .
ENDIF .
* 290 有効終了日（販売）の必須チェック  YM_SDATBI
IF /A1F/YMNS0001-YM_SDATBI IS INITIAL .
SET CURSOR FIELD '/A1F/YMNS0001-YM_SDATBI'.
MESSAGE E290(/A1F/YLMS0100) .
ENDIF .

ENDFORM.                    " A1F_CHECK_SALES_PRICE_DATA
*&---------------------------------------------------------------------*
*&      Form  relock
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM RELOCK.

IF SY-UCOMM = 'TC_MM02'.
CALL FUNCTION 'ENQUEUE_EMMARAE'
EXPORTING
MODE_MARA      = 'E'
MANDT          = SY-MANDT
MATNR          = /A1F/YMNS0001-YM_MATNR
EXCEPTIONS
FOREIGN_LOCK   = 1
SYSTEM_FAILURE = 2
OTHERS         = 3.
ELSEIF SY-UCOMM = 'TC_ME12'.
CALL FUNCTION 'ENQUEUE_EMEINAE'
EXPORTING
MODE_EINA      = 'E'
MANDT          = SY-MANDT
INFNR          = LW_INFNR
EXCEPTIONS
FOREIGN_LOCK   = 1
SYSTEM_FAILURE = 2
OTHERS         = 3.
ELSEIF SY-UCOMM = 'TC_VD52'.
CALL FUNCTION 'ENQUEUE_EVKNMT'
EXPORTING
MODE_KNMT      = 'E'
MANDT          = SY-MANDT
VKORG          = /A1F/YMNS0001-VKORG
VTWEG          = /A1F/YMNS0001-VTWEG
KUNNR          = /A1F/YMNS0001-YM_KUNNR
MATNR          = /A1F/YMNS0001-YM_MATNR
EXCEPTIONS
FOREIGN_LOCK   = 1
SYSTEM_FAILURE = 2
OTHERS         = 3.
ENDIF.


ENDFORM.                    " relock
*&---------------------------------------------------------------------*
*&      Form  bstme_change
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM BSTME_CHANGE.

REFRESH : A1F_TL_BDCDATA,
TL_BAPIRET2.

DATA : A1F_WL_NUMC5(5) TYPE N,
A1F_WL_NUMC55(5) TYPE N,
A1F_WL_UNIT(3).

CLEAR : A1F_WL_UNIT.
CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
EXPORTING
INPUT    = /A1F/YMNS0001-YM_BSTME
LANGUAGE = SY-LANGU
IMPORTING
OUTPUT   = A1F_WL_UNIT.

PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'SAPMM06I'        '0100'                 'X',
'BDC_OKCODE'      '/00'                  ' ',
'EINA-LIFNR'      /A1F/YMNS0001-YM_LIFNR ' ',
'EINA-MATNR'      /A1F/YMNS0001-YM_MATNR ' ',
'EINE-EKORG'      /A1F/YMNS0001-EKORG    ' ',
'EINE-WERKS'      /A1F/YMNS0001-WERKS    ' '.

IF /A1F/YMNS0001-YM_BSTME = /A1F/YMNS0001-YM_MEINS.
A1F_WL_NUMC55 = /A1F/YMNS0001-YM_UMREZP.
PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'SAPMM06I'        '0101'                 'X',
'BDC_OKCODE'      '/11'                  ' ',
'EINA-MEINS'      /A1F/YMNS0001-YM_MEINS ' ',
'EINA-UMREN'      '1' ' ',
'EINA-UMREZ'     A1F_WL_NUMC55 ' '.
ELSE.
A1F_WL_NUMC5 = /A1F/YMNS0001-YM_UMRENP.
A1F_WL_NUMC55 = /A1F/YMNS0001-YM_UMREZP.
PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'SAPMM06I'        '0101'                 'X',
'BDC_OKCODE'      '/11'                  ' ',
*             'EINA-MEINS'      /A1F/YMNS0001-YM_BSTME ' ',
'EINA-MEINS'      A1F_WL_UNIT ' ',
'EINA-UMREN'      A1F_WL_NUMC5 ' ',
'EINA-UMREZ'      A1F_WL_NUMC55 ' '.
ENDIF.

PERFORM A1F_GENERATE_BDCDATA
TABLES A1F_TL_BDCDATA
USING:
'SAPLSPO1'        '0100'                 'X',
'BDC_OKCODE'      '=YES'                  ' '.

CALL FUNCTION 'DEQUEUE_EMEINAE'
EXPORTING
MODE_EINA = 'E'
MANDT     = SY-MANDT
INFNR     = LW_INFNR.
**** START DEL 2014/08/27 ISID･喩 ****
*    EXCEPTIONS
*      FOREIGN_LOCK   = 1
*      SYSTEM_FAILURE = 2
*      OTHERS         = 3.
*
*  IF SY-SUBRC <> 0.
*    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
**** END DEL 2014/08/27 ISID･喩 ****

PERFORM A1F_CALL_TRANSCTION TABLES A1F_TL_BDCDATA
TL_BAPIRET2
USING 'ME12'.

LOOP AT TL_BAPIRET2 INTO WL_BAPIRET2
WHERE TYPE = 'E' .
MESSAGE ID WL_BAPIRET2-ID
TYPE WL_BAPIRET2-TYPE
NUMBER WL_BAPIRET2-NUMBER
WITH WL_BAPIRET2-MESSAGE_V1
WL_BAPIRET2-MESSAGE_V2
WL_BAPIRET2-MESSAGE_V3
WL_BAPIRET2-MESSAGE_V4 .
ENDLOOP .

REFRESH : A1F_TL_BDCDATA,
TL_BAPIRET2.

ENDFORM.                    " bstme_change
*&---------------------------------------------------------------------*
*&      Form  GET_A901_DATA2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_A901_DATA2.

* ローカルデータ宣言
DATA:
LST_A901 TYPE TYP_A901,
LST_KONP TYPE TYP_KONP,
LTD_KONM TYPE TABLE OF TYP_KONM,
LST_KONM TYPE TYP_KONM,
LW_SUBRC TYPE SY-SUBRC.

SELECT DATBI                                  "条件マスタ有効終了日
DATAB                                  "条件マスタ有効開始日
KNUMH                                  "条件レコード番号
INTO LST_A901
FROM A901
WHERE KAPPL    = CNS_V                    "アプリケーション
AND VTWEG    = /A1F/YMNS0001-VTWEG      "流通チャネル
AND SPART    = /A1F/YMNS0001-SPART      "製品部門
AND KUNNR    = /A1F/YMNS0001-YM_KUNNR   "得意先コード
AND ZZZKDMAT = /A1F/YMNS0001-YM_KDMAT   "客先型番
AND DATBI    >= SY-DATUM
AND DATAB    <= SY-DATUM
**** START ADD 2014/08/29 ISID･喩 ****
AND VKORGAU = /A1F/YMNS0001-VKORG.
**** END ADD 2014/08/29 ISID･喩 ****
ENDSELECT.

IF SY-SUBRC = 0.
/A1F/YMNS0001-YM_SDATAB = LST_A901-DATAB.      "有効開始（販売価格）
/A1F/YMNS0001-YM_SDATBI = LST_A901-DATBI.      "有効終了（販売価格）


* 条件情報取得
PERFORM GET_KONP_KONM TABLES   LTD_KONM
USING    LST_A901-KNUMH
'S'
CHANGING LST_KONP
LW_SUBRC.
IF LW_SUBRC = 0.
/A1F/YMNS0001-YM_SKPEIN   = LST_KONP-KPEIN.  "価格単位(販売)
/A1F/YMNS0001-YM_SKMEIN   = LST_KONP-KMEIN.  "単位(販売)
/A1F/YMNS0001-YM_SSKONMS1 = LST_KONP-KONMS.  "数量単位(販売スケール)
/A1F/YMNS0001-YM_SSKMEIN1 = LST_KONP-KMEIN.  "単位(販売スケール)
/A1F/YMNS0001-YM_SSKPEIN1 = LST_KONP-KPEIN.  "価格単位(販売スケール)

* スケール数量と条件レート
LOOP AT LTD_KONM INTO LST_KONM.
CASE SY-TABIX.
WHEN 1.
/A1F/YMNS0001-YM_SKBETR = LST_KONM-KBETR.      "正味価格(販売)
* 販売価格：簡易入力用
*          /A1F/YMNS0001-YM_SKBETR_CH = /A1F/YMNS0001-YM_SKBETR * 100.
/A1F/YMNS0001-YM_SSKSTBM1 = LST_KONM-KSTBM.    "スケール数量
/A1F/YMNS0001-YM_SSKBETR1 = LST_KONM-KBETR.    "条件レート
WHEN 2.
/A1F/YMNS0001-YM_SSKSTBM2 = LST_KONM-KSTBM.    "スケール数量
/A1F/YMNS0001-YM_SSKBETR2 = LST_KONM-KBETR.    "条件レート
WHEN 3.
/A1F/YMNS0001-YM_SSKSTBM3 = LST_KONM-KSTBM.    "スケール数量
/A1F/YMNS0001-YM_SSKBETR3 = LST_KONM-KBETR.    "条件レート
WHEN 4.
/A1F/YMNS0001-YM_SSKSTBM4 = LST_KONM-KSTBM.    "スケール数量
/A1F/YMNS0001-YM_SSKBETR4 = LST_KONM-KBETR.    "条件レート

WHEN 5.
/A1F/YMNS0001-YM_SSKSTBM5 = LST_KONM-KSTBM.    "スケール数量
/A1F/YMNS0001-YM_SSKBETR5 = LST_KONM-KBETR.    "条件レート
ENDCASE.
ENDLOOP.
ENDIF.
ELSE.
CLEAR : /A1F/YMNS0001-YM_SDATAB,
/A1F/YMNS0001-YM_SDATBI,
/A1F/YMNS0001-YM_SSKSTBM1,
/A1F/YMNS0001-YM_SSKSTBM2,
/A1F/YMNS0001-YM_SSKSTBM3,
/A1F/YMNS0001-YM_SSKSTBM4,
/A1F/YMNS0001-YM_SSKSTBM5,
/A1F/YMNS0001-YM_SKBETR,
/A1F/YMNS0001-YM_SSKBETR1,
/A1F/YMNS0001-YM_SSKBETR2,
/A1F/YMNS0001-YM_SSKBETR3,
/A1F/YMNS0001-YM_SSKBETR4,
/A1F/YMNS0001-YM_SSKBETR5,
/A1F/YMNS0001-YM_SKBETR_CH.
ENDIF.

ENDFORM.                    " GET_A901_DATA2
**** START ADD 2014/08/28 ISID･喩 ****
*&---------------------------------------------------------------------*
*&      Form  CHK_BUKRS
*&---------------------------------------------------------------------*
*       会社コードの関連チェック
*----------------------------------------------------------------------*
FORM CHK_BUKRS .

DATA: LW_BUKRS   TYPE BUKRS,
LW_VKORG   TYPE VKORG,
LW_EKORG   TYPE EKORG,
LW_WERKS   TYPE WERKS,
LW_LAND1   TYPE LAND1,
LW_KALSM   TYPE KALSM_D.

* 会社コードの存在チェック
SELECT SINGLE BUKRS
LAND1
INTO (LW_BUKRS, LW_LAND1)
FROM T001
WHERE BUKRS = /A1F/YMNS0001-BUKRS.

IF SY-SUBRC <> 0.
SET CURSOR FIELD '/A1F/YMNS0001-BUKRS'.
MESSAGE E016(Z3) WITH /A1F/YMNS0001-BUKRS.
ENDIF.

SELECT SINGLE KALSM
INTO LW_KALSM
FROM T005
WHERE LAND1 = LW_LAND1.

/A1F/YMNS0001-KALSM = LW_KALSM.

* 会社コードの権限チェック
AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
ID 'BUKRS' FIELD /A1F/YMNS0001-BUKRS
ID 'ACTVT' FIELD '03'.

IF SY-SUBRC <> 0.
SET CURSOR FIELD '/A1F/YMNS0001-BUKRS'.
MESSAGE E015(Z3) WITH /A1F/YMNS0001-BUKRS.
ENDIF.

IF /A1F/YMNS0001-WERKS IS NOT INITIAL.
LW_WERKS = /A1F/YMNS0001-WERKS.

*   会社コードとプラントの関連チェック
CALL FUNCTION 'ZEG_ZZ_WERKS_CHK'
EXPORTING
IMPBUKRS           = /A1F/YMNS0001-BUKRS
IMPWERKS           = LW_WERKS
*       IMPRNGWERKS        =
*      IMPORTING
*        EXPWERKS           =
*       EXPTABRET          =
EXCEPTIONS
WERKS_NOT_EXIST    = 1
WERKS_NO_AUTHORITY = 2
WERKS_BUKRS_ERROR  = 3
OTHERS             = 4.
IF SY-SUBRC <> 0.
SET CURSOR FIELD '/A1F/YMNS0001-WERKS'.
MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
ENDIF.

* 会社コードと販売組織の関連チェック
IF /A1F/YMNS0001-VKORG IS NOT INITIAL.
SELECT SINGLE VKORG
INTO LW_VKORG
FROM TVKO
WHERE BUKRS = /A1F/YMNS0001-BUKRS
AND VKORG = /A1F/YMNS0001-VKORG.

IF SY-SUBRC <> 0.
SET CURSOR FIELD '/A1F/YMNS0001-BUKRS'.
MESSAGE E077(Z3) WITH /A1F/YMNS0001-BUKRS /A1F/YMNS0001-VKORG.
ENDIF.
ENDIF.

* 会社コードと購買組織の関連チェック
IF /A1F/YMNS0001-EKORG IS NOT INITIAL.
SELECT SINGLE EKORG
INTO LW_EKORG
FROM T024E
WHERE BUKRS = /A1F/YMNS0001-BUKRS
AND EKORG = /A1F/YMNS0001-EKORG.

IF SY-SUBRC <> 0.
SET CURSOR FIELD '/A1F/YMNS0001-BUKRS'.
MESSAGE E078(Z3) WITH /A1F/YMNS0001-BUKRS /A1F/YMNS0001-EKORG.
ENDIF.
ENDIF.
ENDFORM.                    " CHK_BUKRS

*&---------------------------------------------------------------------*
*&      Form  CONV_CURR_TO_EXTER
*&---------------------------------------------------------------------*
*       外部金額へ変換
*----------------------------------------------------------------------*
*      -->P_WAERS         通貨
*      -->P_YM_PSKBETR1H  内部金額
*      <--P_LW_BAPICURR   外部金額
*----------------------------------------------------------------------*
FORM CONV_CURR_TO_EXTER  USING  P_WAERS         TYPE WAERS
P_YM_PSKBETR1H  TYPE /A1F/YMDE_VERPR
CHANGING P_LW_BAPICURR   TYPE BAPICURR-BAPICURR.

CALL FUNCTION 'BAPI_CURRENCY_CONV_TO_EXTERNAL'
EXPORTING
CURRENCY        = P_WAERS
AMOUNT_INTERNAL = P_YM_PSKBETR1H
IMPORTING
AMOUNT_EXTERNAL = P_LW_BAPICURR.

ENDFORM.                    " CONV_CURR_TO_EXTER
**** END ADD 2014/08/28 ISID･喩 ****
**** START ADD 2015/05/28 ISID18 ****
*&---------------------------------------------------------------------*
*&      Form  GET_MLAN_DATA
*&---------------------------------------------------------------------*
*       税分類情報取得
*----------------------------------------------------------------------*
FORM GET_MLAN_DATA .

DATA: LST_MLAN TYPE MLAN,
LW_ALAND TYPE MLAN-ALAND.

* 出荷国決定
PERFORM SET_DEPCOUNTRY
USING    /A1F/YMNS0001-VKORG
CHANGING LW_ALAND.

* 税分類取得
SELECT SINGLE * FROM MLAN
INTO LST_MLAN
WHERE MATNR = /A1F/YMNS0001-YM_MATNR
AND ALAND = LW_ALAND.

IF SY-SUBRC = 0.
/A1F/YMNS0001-TAXCLASS_1 = LST_MLAN-TAXM1.
ELSE.
CLEAR /A1F/YMNS0001-TAXCLASS_1.
ENDIF.

ENDFORM.                    " GET_MLAN_DATA
*&---------------------------------------------------------------------*
*&      Form  SET_DEPCOUNTRY
*&---------------------------------------------------------------------*
*       出荷国設定
*----------------------------------------------------------------------*
*      -->I_VKORG       販売組織
*      <--O_DEPCOUNTRY  出荷国
*----------------------------------------------------------------------*
FORM SET_DEPCOUNTRY
USING    I_VKORG      TYPE VKORG
CHANGING O_DEPCOUNTRY TYPE ALAND.

SELECT ADRC~COUNTRY
UP TO 1 ROWS
INTO O_DEPCOUNTRY
FROM TVKO AS TVKO
INNER JOIN ADRC AS ADRC
ON TVKO~ADRNR = ADRC~ADDRNUMBER
WHERE TVKO~VKORG = I_VKORG.
ENDSELECT.

ENDFORM.                    " SET_DEPCOUNTRY
**** END ADD 2015/05/28 ISID18 ****
**** START ADD 2015/07/13 ISID18 ****
*&---------------------------------------------------------------------*
*&      Form  GET_SALES_TEXT
*&---------------------------------------------------------------------*
*       販売テキスト取得
*----------------------------------------------------------------------*
*      -->I_MATNR  品目コード
*      -->I_VKORG  販売組織
*      -->I_VTWEG  流通チャンネル
*      -->I_LANGU  言語キー
*      <--O_TEXT   販売テキスト
*      <--O_FLAG   初回フラグ
*----------------------------------------------------------------------*
FORM GET_SALES_TEXT
USING    I_MATNR TYPE MATNR
I_VKORG TYPE MVKE-VKORG
I_VTWEG TYPE MVKE-VTWEG
CHANGING O_LANGU TYPE SY-LANGU
O_TEXT  TYPE TEXT100
O_FLAG  TYPE CHAR01.

DATA:
LTH_STXH   TYPE STXH,
LW_NAME    TYPE THEAD-TDNAME,
LTH_LINES  TYPE TLINE,
LTD_LINES  TYPE STANDARD TABLE OF TLINE.

LW_NAME+0(18) = I_MATNR.
LW_NAME+18(4) = I_VKORG.
LW_NAME+22(2) = I_VTWEG.

* Get Language
IF O_LANGU IS INITIAL AND
O_FLAG  IS INITIAL.
O_LANGU = SY-LANGU.
ENDIF.

IF SY-UCOMM <> 'ENTR' AND
O_FLAG IS NOT INITIAL.
RETURN.
ENDIF.

CLEAR O_TEXT.
SELECT SINGLE *
FROM STXH
INTO LTH_STXH
WHERE TDOBJECT = A1F_CNS_TDOBJECT3
AND TDNAME   = LW_NAME
AND TDID     = CNS_0001
AND TDSPRAS  = O_LANGU.
IF SY-SUBRC <> 0.
IF O_FLAG IS INITIAL.
SELECT *
UP TO 1 ROWS
FROM STXH
INTO LTH_STXH
WHERE TDOBJECT = A1F_CNS_TDOBJECT3
AND TDNAME   = LW_NAME
AND TDID     = CNS_0001.
EXIT.
ENDSELECT.
IF SY-SUBRC = 0.
O_LANGU = LTH_STXH-TDSPRAS.
ELSE.
O_FLAG = ABAP_ON.
RETURN.
ENDIF.
ELSE.
O_FLAG = ABAP_ON.
RETURN.
ENDIF.
ENDIF.
O_FLAG = ABAP_ON.

* Get text
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID                      = CNS_0001
LANGUAGE                = O_LANGU
NAME                    = LW_NAME
OBJECT                  = A1F_CNS_TDOBJECT3
TABLES
LINES                   = LTD_LINES
EXCEPTIONS
ID                      = 1
LANGUAGE                = 2
NAME                    = 3
NOT_FOUND               = 4
OBJECT                  = 5
REFERENCE_CHECK         = 6
WRONG_ACCESS_TO_ARCHIVE = 7
OTHERS                  = 8.

CASE SY-SUBRC.
WHEN 0.
LOOP AT LTD_LINES INTO LTH_LINES.
CONCATENATE O_TEXT LTH_LINES-TDLINE
INTO O_TEXT.
ENDLOOP.
WHEN 4.
WHEN OTHERS.
MESSAGE ID SY-MSGID
TYPE 'E'
NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDCASE.

ENDFORM.                    " GET_SALES_TEXT
*&---------------------------------------------------------------------*
*&      Form  GET_MAKTX_ACCOD_LANG
*&---------------------------------------------------------------------*
*       品目テキスト取得
*----------------------------------------------------------------------*
*      -->I_MATNR  品目コード
*      <--O_LANGU  言語
*      <--O_MAKTX  品目テキスト
*      <--O_FLAG   初回フラグ
*----------------------------------------------------------------------*
FORM GET_MAKTX_ACCOD_LANG
USING    I_MATNR TYPE MAKT-MATNR
CHANGING O_LANGU TYPE MAKT-SPRAS
O_MAKTX TYPE MAKT-MAKTX
O_FLAG  TYPE CHAR01.

IF O_FLAG IS INITIAL AND
O_LANGU IS INITIAL.
O_LANGU = SY-LANGU.
ENDIF.

IF SY-UCOMM <> 'ENTR' AND
O_FLAG IS NOT INITIAL.
RETURN.
ENDIF.

CLEAR O_MAKTX.
SELECT SINGLE MAKTX
INTO O_MAKTX
FROM MAKT
WHERE MATNR = I_MATNR
AND SPRAS = O_LANGU.
IF SY-SUBRC <> 0.
IF O_FLAG IS INITIAL.
SELECT MAKTX SPRAS
UP TO 1 ROWS
INTO (O_MAKTX, O_LANGU)
FROM MAKT
WHERE MATNR = I_MATNR.
EXIT.
ENDSELECT.
ENDIF.
ENDIF.
O_FLAG = ABAP_ON.

ENDFORM.                    " GET_MAKTX_ACCOD_LANG
**** END ADD 2015/07/13 ISID18 ****
