***********************************************************************
* [プログラム名]
*   PROGRAM ID :ZEGSDR0040(Copy from ZM012500)
*              :品目単価マスタ一覧（得意先別）スケール対応版
* [処理概要]
*   CONTENTS
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2002/07/27   PSD T.SAITOH      新規開発
*  2002/08/02   PSD T.SAITOH      選択基準日未入力時システム日付を設定
*  2002/08/02   PSD T.SAITOH      仕入先コード左寄せ
*  2002/11/12   NDSC T.SAITOH     ソート条件修正
*  2003/03/18   NDSC T.SAITOH     仕入先で絞るようにする
*               NDSC T.SAITOH     営業所が表示されていないバグ修正
*  2004/06/14   NDSC A.MASUDA     スケール対応
*  2005/03/22   DMC  A.MASUDA     スケール数量出力書式の修正
*  2005/04/21   DMC  A.MASUDA
*  2011/02/14   SOLFIS M.MURATA   発注数量単位の誤編集の修正
*  2012/09/06   ISID              ES-UP
*  2014/12/15   ISID18            グローバル化対応
*                                 単価6桁対応
***********************************************************************
* --- サイズ及びフッタなどの設定をここでする。
REPORT ZEGSDR0040
LINE-SIZE 255
LINE-COUNT 65(8) "()の中の数値ははフッタ割当行数
NO STANDARD PAGE HEADING.
*---------------------------------------------------------------------*
* データ宣言(グローバル)
*---------------------------------------------------------------------*
*--- 構造／テーブル型　宣言
*--- テーブル宣言
TABLES:T001W,T024,LFA1,MAKT,MARA,KNA1,KONH,TVKBT,TVGRT,KNMT.
* ALV用構造
TYPE-POOLS SLIS.

* MARA: 一般品目データ
TYPES: BEGIN OF TYP_MARA,
MATNR TYPE MARA-MATNR,"品目コード
MATKL TYPE MARA-MATKL,"品目グループ
END OF TYP_MARA.
*
DATA: GT_MARA TYPE TABLE OF TYP_MARA,
GF_MARA TYPE TYP_MARA.

* MAXX: 一般品目データ
TYPES: BEGIN OF TYP_MAXX,
MAKTX TYPE MAKT-MAKTX,"品目コード
MATKL TYPE MARA-MATKL,"品目グループ
END OF TYP_MAXX.
*
DATA: GT_MAXX TYPE TABLE OF TYP_MAXX,
GF_MAXX TYPE TYP_MAXX.


* KNMT MVKE
TYPES: BEGIN OF TYP_KNMT,
KDMAT TYPE KNMT-KDMAT, "得意先品目コード
KUNNR TYPE KNMT-KUNNR, "得意先コード
MATNR TYPE KNMT-MATNR, "品目コード
WERKS TYPE KNMT-WERKS, "プラントコード
MATKL TYPE MARA-MATKL, "品目グループ
MAKTX TYPE MAKT-MAKTX, "品目名
END OF TYP_KNMT.
* 品目と得意先品目の紐付け
DATA: GT_KNMT TYPE TABLE OF TYP_KNMT,
GF_KNMT TYPE TYP_KNMT.

* 得意先マスタ関連情報
TYPES: BEGIN OF TYP_KNVV,
KUNNR    TYPE KNVV-KUNNR,    "得意先コード
KNAME    TYPE KNA1-NAME1,    "得意先名
VKBUR    TYPE KNVV-VKBUR,    "営業所
VKGRP    TYPE KNVV-VKGRP,    "営業グループ
VKBUN    TYPE TVKBT-BEZEI,   "営業所名
VKGRN    TYPE TVGRT-BEZEI,   "営業グループ名
END OF TYP_KNVV.
* 優先度２：処理用
DATA: GT_KNVV TYPE TABLE OF TYP_KNVV,
GF_KNVV TYPE TYP_KNVV.
DATA: GT_KNXX TYPE TABLE OF TYP_KNVV,
GF_KNXX TYPE TYP_KNVV.

* A901（販売組織・・・得意先品目）
TYPES: BEGIN OF TYP_A901,
KAPPL    TYPE A901-KAPPL,   "アプリケーション
KSCHL    TYPE A901-KSCHL,   "条件タイプ
VKORGAU  TYPE A901-VKORGAU, "販売組織
VTWEG    TYPE A901-VTWEG,   "流通チャネル
SPART    TYPE A901-SPART,   "製品部門
KUNNR    TYPE A901-KUNNR,   "得意先コード
ZZZKDMAT TYPE A901-ZZZKDMAT,"得意先品目コード
DATBI    TYPE A901-DATBI,   "条件マスタ有効終了日
DATAB    TYPE A901-DATAB,   "条件マスタ有効開始日
KNUMH    TYPE A901-KNUMH,   "条件レコード番号
END OF TYP_A901.
* A901 （得意先主要内部ＴＢＬ・・・Ｌ1）
DATA: GT_A901 TYPE TABLE OF TYP_A901,
GF_A901 TYPE TYP_A901.

* A017(品目購買情報)
TYPES: BEGIN OF TYP_A017,
KAPPL TYPE A017-KAPPL,"アプリケーション
KSCHL TYPE A017-KSCHL,"条件タイプ
LIFNR TYPE A017-LIFNR,"仕入先勘定コード
MATNR TYPE A017-MATNR,"品目コード
EKORG TYPE A017-EKORG,"購買組織
ESOKZ TYPE A017-ESOKZ,"購買情報区分
WERKS TYPE A017-WERKS,"プラント
DATBI TYPE A017-DATBI,"条件マスタ有効終了日
DATAB TYPE A017-DATAB,"条件マスタ有効開始日
KNUMH TYPE A017-KNUMH,"条件レコード番号
END OF TYP_A017.
* A017 (仕入先主要内部ＴＢＬ・・・Ｌ１）
DATA: GT_A017 TYPE TABLE OF TYP_A017,
GF_A017 TYPE TYP_A017.

*** APPEND NDSC MASUDA 2004/06/14 START ***
* KONH KONP(条件) T006A
*TYPES: BEGIN OF TYP_KONH_KONP,
*  KNUMH TYPE  KONH-KNUMH,"条件レコード番号
*  KZBZG TYPE  KONP-KZBZG,"スケール区分
*  KBETR TYPE  KONP-KBETR,"発注単価
*  KONWA TYPE  KONP-KONWA,"発注通貨
*  KMEIN TYPE  KONP-KMEIN,"数量単位
*  KPEIN TYPE  KONP-KPEIN,"価格数量単位
*  VAKEY TYPE  KONH-VAKEY,"変数キー
*  MSEH3 TYPE T006A-MSEH3,"受注数量単位
TYPES: BEGIN OF TYP_KONH_KONP,
KNUMH TYPE KONH-KNUMH,"条件レコード番号
VAKEY TYPE KONH-VAKEY,"変数キー
KZBZG TYPE KONP-KZBZG,"スケール区分
KBETR TYPE KONP-KBETR,"発注単価
KONWA TYPE KONP-KONWA,"発注通貨
KPEIN TYPE KONP-KPEIN,"価格条件単位
MSEH3 TYPE T006A-MSEH3,"数量単位
KLFN1 TYPE KONM-KLFN1,"明細番号
KSTBM TYPE KONM-KSTBM,"スケール数量
KBET2 TYPE KONM-KBETR,"発注単価
END OF TYP_KONH_KONP.
*** APPEND NDSC MASUDA 2004/06/14 END   ***
* KONH KONP(条件内部ＴＢＬ・・・Ｌ２)
* 仕入先別
DATA: GT_KONX_M TYPE TABLE OF TYP_KONH_KONP,
GF_KONX_M TYPE TYP_KONH_KONP.
* KONH KONP(条件内部ＴＢＬ・・・Ｌ４)
* 得意先別
DATA: GT_KONX_V TYPE TABLE OF TYP_KONH_KONP,
GF_KONX_V TYPE TYP_KONH_KONP.

TYPES: BEGIN OF TYP_EINX,
IDNLF TYPE EINA-IDNLF,"仕入先品目コード
END OF TYP_EINX.
* 購買情報：仕入先品目
DATA: GF_EINX TYPE TYP_EINX.

TYPES: BEGIN OF TYP_LFXX,
LNAME TYPE LFA1-NAME1,"仕入先名
END OF TYP_LFXX.
* 仕入先
DATA: GF_LFXX TYPE TYP_LFXX.


* 内部テーブル
* ALV関連
DATA: GT_EXEC   TYPE TABLE OF ZMLIST_V14
WITH HEADER LINE,"処理用内部ＴＢＬ
GF_EXEC   TYPE ZMLIST_V14.         "処理出力用構造
* ---フラグ宣言
DATA: G_SUBRC LIKE SY-SUBRC."システムリターン値
* --- 抽出ロジックパターン
* 1:品目グループ
* 2:営業所／営業グループ
* 3:品目コード
* 4:その他
DATA: G_PRIORITY TYPE N.    "抽出ロジックパターン
* --- A017テーブル件数
DATA: G_REC_A017 TYPE I.
* --- A017内部TBLループ回数
DATA: G_CNT_A017 TYPE I.
*―――――――――――――――――――――――――――――――――――*
* リストビューア関連
*―――――――――――――――――――――――――――――――――――*
DATA: G_REPID     LIKE SY-REPID,            "レポートID
GF_LAYOUT   TYPE SLIS_LAYOUT_ALV.     "レイアウト構造

** REUSE_ALV_COMMENTARY_WRITE
DATA: GF_HEAD_ALV   TYPE SLIS_LISTHEADER,    "ヘッダ構造
GT_T_HEAD_ALV TYPE SLIS_T_LISTHEADER.  "ヘッダ用内部TBL

** ABAPリストビューアヘッダデータ保持
DATA: GF_HEADER_DATA TYPE ZMLIST_V14.         "ヘッダ表示情報

* ↓ APPEND 2002.02.21 PSD M.Arai 発注単価属性変更対応
DATA: GT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV, "フィールドカタログ
GF_FIELDCAT LIKE LINE OF GT_FIELDCAT. "フィールドカタログ(ヘッダ)
* ↑

* REUSE_ALV_LIST_DISPLAY
DATA: TOP_OF_PAGE TYPE SLIS_FORMNAME VALUE 'TOP_OF_PAGE'.

* REUSE_ALV_EVENT
DATA: GT_EVENT TYPE SLIS_T_EVENT,          "イベント情報内部TBL
GF_EVENT LIKE LINE OF GT_EVENT.      "イベント情報構造

* ALV用内部ＴＢＬ
DATA: GT_ALV     TYPE TABLE OF ZMLIST_V14
WITH HEADER LINE.

* 印刷設定対応
DATA: GF_PRINT TYPE SLIS_PRINT_ALV.


*---------------------------------------------------------------------*
* 選択画面
*---------------------------------------------------------------------*
* 会社コード
PARAMETERS: PR_BUKRS TYPE T001-BUKRS MEMORY ID BUK OBLIGATORY.
* 選択基準日
PARAMETERS: PR_DATUM LIKE SY-DATUM." DEFAULT SY-DATUM.

* 販売関連条件指定
SELECTION-SCREEN BEGIN OF BLOCK BK02 WITH FRAME TITLE TEXT-002.
*   販売組織
PARAMETERS: PR_VKORG TYPE TVKO-VKORG MEMORY ID VKO OBLIGATORY,
*   流通チャネル
PR_VTWEG TYPE TVTW-VTWEG MEMORY ID VTW OBLIGATORY,
*   製品部門
PR_SPART TYPE TSPA-SPART MEMORY ID SPA OBLIGATORY.
*   営業所コード
SELECT-OPTIONS: S_VKBUR FOR TVKBT-VKBUR,
*   営業グループ
S_VKGRP FOR TVGRT-VKGRP.

*   得意先
SELECT-OPTIONS: S_KUNNR FOR KNA1-KUNNR,
*   得意先品目コード
S_KDMAT FOR KNMT-KDMAT,
*   品目コード
S_MATNR FOR MAKT-MATNR,
*   品目グループ
S_MATKL FOR MARA-MATKL.


*   得意先条件タイプ
SELECT-OPTIONS: SV_KSCHL FOR KONH-KSCHL.
SELECTION-SCREEN END   OF BLOCK BK02.

* 購買関連条件指定
SELECTION-SCREEN BEGIN OF BLOCK BK01 WITH FRAME TITLE TEXT-001.
*   購買組織
PARAMETERS: PR_EKORG TYPE T024E-EKORG MEMORY ID EKO OBLIGATORY.
*   プラント
SELECT-OPTIONS: S_WERKS FOR T001W-WERKS.
*   仕入先
SELECT-OPTIONS: S_LIFNR FOR LFA1-LIFNR.
*   仕入先条件タイプ
SELECT-OPTIONS: SM_KSCHL FOR KONH-KSCHL.
SELECTION-SCREEN END   OF BLOCK BK01.

*--------------------------------------------------------------------
* INITIALIZATION（プログラム起動時）
*--------------------------------------------------------------------
INITIALIZATION.
*---------------------------------------------------------------------
* AT SELECTION-SCREEN OUTPUT(選択画面設定)
*---------------------------------------------------------------------
AT SELECTION-SCREEN OUTPUT.
*---------------------------------------------------------------------
* AT SELECTION-SCREEN(入力チェック時)
*---------------------------------------------------------------------
AT SELECTION-SCREEN.
**** START ADD 2014/12/15 ISID18 ****
PERFORM FRM_CHECK_INPUT.
**** END ADD 2014/12/15 ISID18 ****
* 選択オプションボタン押下時は入力チェック処理をしない
IF SY-UCOMM+0(1) <> '%'.
*   ここに入力チェック処理を記述
*---APPEND START PSD T.SAITOH 2002/08/02 ---------------------------*
*   選択基準日がブランクの時はシステム日付を設定する。
IF PR_DATUM IS INITIAL.
PR_DATUM = SY-DATUM.
ENDIF.
*---APPEND END   PSD T.SAITOH 2002/08/02 ---------------------------*
*   不正な入力を強制修正
PERFORM FRM_ILLEGAL_OPERATIONS_CHECK.
ENDIF.
*---------------------------------------------------------------------
* AT LINE-SELECTION(一覧出力行選択時)
*---------------------------------------------------------------------
AT LINE-SELECTION.
*---------------------------------------------------------------------
* AT USER-COMMAND(ユーザ定義の機能コードを実行時)
*---------------------------------------------------------------------
AT USER-COMMAND.
*---------------------------------------------------------------------
* TOP-OF-PAGE（改ページ時(ヘッダ等)）
*---------------------------------------------------------------------
TOP-OF-PAGE.
*---------------------------------------------------------------------
* END-OF-PAGE（改ページ時(フッタ等)）
*---------------------------------------------------------------------
END-OF-PAGE.
*---------------------------------------------------------------------
* START-OF-SELECTION(プログラム開始時)
*---------------------------------------------------------------------
START-OF-SELECTION.
* 抽出ロジックパターンの選定
PERFORM FRM_LOGIC_PATTERN_EXTRACTION.

* 優先度別  主要データ読込
PERFORM FRM_PRIORITY_SELECT.

* 共通　データ読込
PERFORM FRM_SELECT_COMMON.

*---APPEND START NDSC T.SAITOH 2003/03/18---*
DELETE GT_EXEC WHERE NOT ( LIFNR_KEY IN S_LIFNR ).
*---APPEND END   NDSC T.SAITOH 2003/03/18---*

* ソート
PERFORM FRM_SORT.

* DELETE DOUBLE KEY RECODES
PERFORM FRM_DELETE_DKEYREC.

* 出力
PERFORM FRM_OUTPUT.

*---------------------------------------------------------------------
* END-OF-SELECTION(プログラム終了時)
*---------------------------------------------------------------------
END-OF-SELECTION.

*&--------------------------------------------------------------------
*&      Form  FRM_OUTPUT
*&--------------------------------------------------------------------
*       出力
*---------------------------------------------------------------------
FORM FRM_OUTPUT.
* ALV用
GT_ALV[] = GT_EXEC[].
* 作業用内部ＴＢＬを開放
FREE GT_EXEC[].

* 印刷設定：ALV統計を印刷しない
GF_PRINT-NO_PRINT_LISTINFOS = 'X'.

GF_LAYOUT-GROUP_CHANGE_EDIT = 'X'.
* フィールドカタログの設定
GF_FIELDCAT-JUST = 'R'.
GF_FIELDCAT-FIELDNAME = 'KBETR_M'.
APPEND GF_FIELDCAT TO GT_FIELDCAT.
GF_FIELDCAT-FIELDNAME = 'KBETR_V'.
APPEND GF_FIELDCAT TO GT_FIELDCAT.

* 使用可能イベントのチェック
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
I_LIST_TYPE     = 0
IMPORTING
ET_EVENTS       = GT_EVENT  "使用可能なイベント取得
EXCEPTIONS
LIST_TYPE_WRONG = 1
OTHERS          = 2.

* 使用イベントに実行するサブルーチン名を設定

LOOP AT GT_EVENT INTO GF_EVENT.
CASE GF_EVENT-NAME.
WHEN 'TOP_OF_PAGE'.
GF_EVENT-FORM = 'FRM_TOP_OF_PAGE'.
MODIFY GT_EVENT FROM GF_EVENT.
WHEN 'CALLER_EXIT'.
GF_EVENT-FORM = 'FRM_CALLER_EXIT'.
MODIFY GT_EVENT FROM GF_EVENT.
ENDCASE.
ENDLOOP.


CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
EXPORTING
* 2011/02/14 Mod Start
*            I_CALLBACK_PROGRAM     = 'ZM012500'   "レポートID
I_CALLBACK_PROGRAM     = sy-cprog   "レポートID
* 2011/02/14 Mod End
* Del ES-UP 2012/09/06 -->
*            I_CALLBACK_TOP_OF_PAGE = TOP_OF_PAGE  "G_HEAD_FRM
* Del ES-UP 2012/09/06 <--
I_STRUCTURE_NAME       = 'ZMLIST_V14'  "構造
IS_LAYOUT              = GF_LAYOUT  "レイアウト設定
IT_FIELDCAT            = GT_FIELDCAT  "カタログ設定
I_SAVE                 = 'A'  "レイアウト保存
IT_EVENTS              = GT_EVENT[]  "イベント設定
IS_PRINT               = GF_PRINT  "印刷設定
TABLES
T_OUTTAB               = GT_ALV[]
EXCEPTIONS
PROGRAM_ERROR          = 1
OTHERS                 = 2.

ENDFORM.                    " FRM_TEST_OUTPUT
*&-------------------------------------------------------------------*
* ALV CALLER_EXIT
*&-------------------------------------------------------------------*
FORM FRM_CALLER_EXIT USING RS_DATA TYPE SLIS_DATA_CALLER_EXIT.
RS_DATA-CALLBACK_HEADER_TRANSPORT = 'FILITEXTS_TEXT_TRANSPORT'.
ENDFORM.

*&--------------------------------------------------------------------*
*&      Form  TOP_OF_PAGE
*&--------------------------------------------------------------------*
FORM FRM_TOP_OF_PAGE.

DATA: L_LIFNR TYPE LFA1-LIFNR.

DATA: L_SY-TABIX TYPE P.
L_SY-TABIX = SY-TABIX.

CASE SY-PAGNO.
WHEN 1.
READ TABLE GT_ALV INTO GF_HEADER_DATA INDEX 1.
WHEN OTHERS.
READ TABLE GT_ALV INTO GF_HEADER_DATA INDEX L_SY-TABIX.
ENDCASE.

L_LIFNR = GF_HEADER_DATA-LIFNR_KEY.
WRITE L_LIFNR TO L_LIFNR.
PERFORM FRM_RIGHT_JUSTIFIED USING L_LIFNR
CHANGING GF_HEADER_DATA-LIFNR.

* 帳票タイトル：**品目単価マスタ(得意先別)**
WRITE:0 TEXT-003.
SKIP.
* 選択基準日
WRITE: /0 TEXT-004,12 GF_HEADER_DATA-DATUM.
* 営業所
WRITE: 60 TEXT-006,70 GF_HEADER_DATA-VKBUR.

* 得意先
WRITE: /0 TEXT-005,12 GF_HEADER_DATA-KUNNR, 24 GF_HEADER_DATA-KNAME.
* 営業所名
*---APPEND START NDSC T.SAITOH 2003/03/18---*
SELECT SINGLE BEZEI
INTO GF_HEADER_DATA-VKBUN
FROM TVKBT
**** START UPD 2014/12/15 ISID18 ****
*               WHERE SPRAS = 'J'
WHERE SPRAS = SY-LANGU
**** END UPD 2014/12/15 ISID18 ****
AND VKBUR = GF_HEADER_DATA-VKBUR.
*---APPEND END   NDSC T.SAITOH 2003/03/18---*
WRITE: 60 TEXT-007,70 GF_HEADER_DATA-VKBUN.


ENDFORM.
*&--------------------------------------------------------------------*
*&      Form  FRM_RIGHT_JUSTIFIED
*&--------------------------------------------------------------------*
*       仕入先コード／得意先コード　右寄せ(コードは１０バイト固定)
*---------------------------------------------------------------------*
*      -->P_TEXT     ０埋め仕入先コード／得意先コード
*      <--P_NEW_TEXT 右寄せされたコード
*---------------------------------------------------------------------*
FORM FRM_RIGHT_JUSTIFIED USING    P_TEXT
CHANGING P_NEW_TEXT.

DATA: L_LEN   TYPE I,"文字サイズ
L_OFF   TYPE I."オフセット

CLEAR: P_NEW_TEXT.

IF P_TEXT IS INITIAL.
EXIT.
ENDIF.

L_LEN = STRLEN( P_TEXT ).
L_OFF = 10 - L_LEN.
P_NEW_TEXT+L_OFF(L_LEN) = P_TEXT.

ENDFORM.                    " FRM_RIGHT_JUSTIFIED
*&--------------------------------------------------------------------*
*&      Form  FRM_CURRENCY_AMOUNT
*&--------------------------------------------------------------------*
*       金額変換処理
*---------------------------------------------------------------------*
*      -->P_WAERS    通貨コード
*      -->P_BEFORE   変換前金額
*      <--P_AFTER    変換後金額
*---------------------------------------------------------------------*
FORM FRM_CURRENCY_AMOUNT             USING    P_WAERS
P_BEFORE
CHANGING P_AFTER.
DATA L_IDOC_AMOUNT(255) TYPE C.
*--- 汎用モジュール金額変換モジュール
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
EXPORTING
CURRENCY    = P_WAERS
SAP_AMOUNT  = P_BEFORE
IMPORTING
IDOC_AMOUNT = L_IDOC_AMOUNT
EXCEPTIONS
OTHERS      = 1.
IF SY-SUBRC <> 1.
P_AFTER = L_IDOC_AMOUNT.
ENDIF.

ENDFORM.                    " FRM_CURRENCY_AMOUNT
*&---------------------------------------------------------------------*
*&      Form  FRM_ILLEGAL_OPERATIONS_CHECK
*&---------------------------------------------------------------------*
*       不正な入力を強制修正
*----------------------------------------------------------------------*
FORM FRM_ILLEGAL_OPERATIONS_CHECK.
* 優先度に影響する項目はHIGHに'*'を許可しない。
CASE '*'.
WHEN S_MATKL-HIGH."品目グループ
REFRESH S_MATKL.
STOP.
WHEN S_VKBUR-HIGH."営業所
REFRESH S_VKBUR.
STOP.
WHEN S_VKGRP-HIGH."営業グループ
REFRESH S_VKGRP.
STOP.
WHEN S_MATNR-HIGH."品目コード
REFRESH S_MATNR.
STOP.
WHEN S_KUNNR-HIGH."得意先コード
REFRESH S_KUNNR.
STOP.
WHEN S_KDMAT-HIGH."得意先品目コード
REFRESH S_KDMAT.
STOP.
ENDCASE.


ENDFORM.                    " FRM_ILLEGAL_OPERATIONS_CHECK
*&---------------------------------------------------------------------*
*&      Form  FRM_LOGIC_PATTERN_EXTRACTION
*&---------------------------------------------------------------------*
*       抽出パターンの選定
*----------------------------------------------------------------------*
FORM FRM_LOGIC_PATTERN_EXTRACTION.

* 選択条件：得意先コードもしくは得意先品目コードが入力されている
*      AND ヘッダ部分に * を入力していない
IF NOT ( S_KUNNR[] IS INITIAL ) AND S_KUNNR-LOW <> '*'.
G_PRIORITY = 4.
EXIT.
ENDIF.
IF NOT ( S_KDMAT[] IS INITIAL ) AND S_KDMAT-LOW <> '*'.
G_PRIORITY = 4.
EXIT.
ENDIF.

* 選択条件：品目コードが入力されている
*      AND ヘッダ部分に * を入力していない
IF NOT ( S_MATNR[] IS INITIAL ) AND S_MATNR-LOW <> '*'.
G_PRIORITY = 3.
EXIT.
ENDIF.


* 選択条件：営業所もしくは営業グループが入力されている
*      AND ヘッダ部分に * を入力していない
IF NOT ( S_VKBUR[] IS INITIAL ) AND S_VKBUR-LOW <> '*'.
G_PRIORITY = 2.
EXIT.
ENDIF.
IF NOT ( S_VKGRP[] IS INITIAL ) AND S_VKGRP-LOW <> '*'.
G_PRIORITY = 2.
EXIT.
ENDIF.


* 選択条件：品目グループが入力されている AND
*      AND ヘッダ部分に * を入力していない
IF NOT ( S_MATKL[] IS INITIAL ) AND S_MATKL-LOW <> '*'.
G_PRIORITY = 1.
EXIT.
ENDIF.

* その他の選択条件
G_PRIORITY = 4.

ENDFORM.                    " FRM_LOGIC_PATTERN_EXTRACTION
*&---------------------------------------------------------------------*
*&      Form  FRM_PRIORITY_SELECT
*&---------------------------------------------------------------------*
*       優先度別主要テーブル読込
*----------------------------------------------------------------------*
FORM FRM_PRIORITY_SELECT.
* 優先度により抽出パターンを変動させる
CASE G_PRIORITY.
WHEN 1."品目グループ
PERFORM FRM_SELECT_PRIORITY_MATKL.
WHEN 2."営業所／営業グループ
PERFORM FRM_SELECT_PRIORITY_VKBUR.
WHEN 3."品目コード
PERFORM FRM_SELECT_PRIORITY_MATNR.
WHEN OTHERS."その他
PERFORM FRM_SELECT_PRIORITY_ETC.
ENDCASE.

ENDFORM.                    " FRM_PRIORITY_SELECT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_PRIORITY_MATKL
*&---------------------------------------------------------------------*
*       優先度１：品目グループを選択した場合の主要レコード抽出
*----------------------------------------------------------------------*
FORM FRM_SELECT_PRIORITY_MATKL.
* 一般品目データ→品目コード、品目グループ
PERFORM FRM_SELECT_01_MARA.
* 得意先品目マスタ→得意先コード、得意先品目コード
PERFORM FRM_SELECT_02_KNMT.
* 得意先品目→主要情報取得
PERFORM FRM_SELECT_03_A901.

* TEST -------------------------------------------------
*  LOOP AT GT_A901 INTO GF_A901.
*    WRITE:/ GF_A901-KUNNR.
*    WRITE:  GF_A901-ZZZKDMAT.
*  ENDLOOP.
* ------------------------------------------------------

ENDFORM.                    " FRM_SELECT_PRIORITY_MATKL
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_01_MARA
*&---------------------------------------------------------------------*
*       優先度１：一般品目データから品目コード、品目グループ読込
*----------------------------------------------------------------------*
FORM FRM_SELECT_01_MARA.

SELECT MATNR
MATKL
INTO CORRESPONDING FIELDS OF TABLE GT_MARA
FROM MARA
WHERE MATNR IN S_MATNR "品目コード
AND MATKL IN S_MATKL "品目グループ
AND LVORM = SPACE.   "削除フラグ

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
MESSAGE S616(Z1).  "対象データがありません
STOP.
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'MARA' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SELECT_01_MARA
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_02_KNMT
*&---------------------------------------------------------------------*
*       優先度１：得意先品目マスタから得意先コード、得意先品目コードを読
*----------------------------------------------------------------------*
FORM FRM_SELECT_02_KNMT.

SELECT KUNNR
KDMAT
INTO CORRESPONDING FIELDS OF TABLE GT_KNMT
FROM KNMT
FOR ALL ENTRIES IN GT_MARA
WHERE VKORG = PR_VKORG      "販売組織
AND VTWEG = PR_VTWEG      "流通チャネル
AND KUNNR IN S_KUNNR      "得意先コード
AND MATNR = GT_MARA-MATNR "品目コード
AND KDMAT IN S_KDMAT.     "得意先品目コード

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
MESSAGE S616(Z1).  "対象データがありません
STOP.
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'KNMT' SY-SUBRC.
ENDCASE.

FREE GT_MARA.

ENDFORM.                    " FRM_SELECT_02_KNMT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_03_A901
*&---------------------------------------------------------------------*
*       優先度１：品目グループごと：主要情報取得
*----------------------------------------------------------------------*
FORM FRM_SELECT_03_A901.

SELECT KAPPL    "アプリケーションキー
KSCHL    "条件タイプ
VKORGAU  "販売組織
VTWEG    "流通チャネル
SPART    "製品部門
KUNNR    "得意先コード
ZZZKDMAT "得意先品目コード
KNUMH    "条件レコード
INTO CORRESPONDING FIELDS OF TABLE GT_A901
FROM A901
FOR ALL ENTRIES IN GT_KNMT
WHERE KAPPL    =  'V'            "アプリケーション
AND KSCHL    IN SV_KSCHL       "条件タイプ
AND VKORGAU  =  PR_VKORG       "販売組織
AND VTWEG    =  PR_VTWEG       "流通チャネル
AND SPART    =  PR_SPART       "製品部門
AND KUNNR    =  GT_KNMT-KUNNR  "得意先コード
AND ZZZKDMAT =  GT_KNMT-KDMAT  "得意先品目コード
AND DATBI    >= PR_DATUM       "有効終了日
AND DATAB    <= PR_DATUM.      "有効開始日

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
MESSAGE S616(Z1).  "対象データがありません
STOP.
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'A901' SY-SUBRC.
ENDCASE.

FREE GT_KNMT.

ENDFORM.                    " FRM_SELECT_03_A901
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_PRIORITY_VKBUR
*&---------------------------------------------------------------------*
*       優先度２：営業所／営業グループを選択した場合の主要レコード抽出
*----------------------------------------------------------------------*
FORM FRM_SELECT_PRIORITY_VKBUR.
* 得意先マスタ（販売エリア）→得意先コード
PERFORM FRM_SELECT_04_KNVV.
* 得意先品目マスタ→得意先コード→得意先品目コード
PERFORM FRM_SELECT_05_KNMT.
* 得意先品目→主要情報取得
PERFORM FRM_SELECT_06_A901.

* TEST -------------------------------------------------
*  LOOP AT GT_A901 INTO GF_A901.
*    WRITE:/ GF_A901-KUNNR.
*    WRITE:  GF_A901-ZZZKDMAT.
*  ENDLOOP.
* ------------------------------------------------------

ENDFORM.                    " FRM_SELECT_PRIORITY_VKBUR
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_04_KNVV
*&---------------------------------------------------------------------*
*       優先度２：得意先マスタ（販売エリア）
*----------------------------------------------------------------------*
FORM FRM_SELECT_04_KNVV.

SELECT KNVV~KUNNR "得意先コード
INTO CORRESPONDING FIELDS OF TABLE GT_KNVV
FROM ( KNVV AS KNVV INNER JOIN KNA1 AS KNA1
ON   KNVV~KUNNR  =  KNA1~KUNNR )
INNER JOIN KNB1 AS KNB1
ON   KNVV~KUNNR  =  KNB1~KUNNR
WHERE   KNVV~KUNNR IN  S_KUNNR    "得意先コード
AND   KNVV~VKORG  =  PR_VKORG   "販売組織
AND   KNVV~VTWEG  =  PR_VTWEG   "流通チャネル
AND   KNVV~SPART  =  PR_SPART   "製品部門
AND   KNVV~LOEVM  =  SPACE      "削除フラグ
AND   KNVV~VKBUR IN  S_VKBUR    "営業所
AND   KNVV~VKGRP IN  S_VKGRP    "営業グループ
AND   KNB1~BUKRS  =  PR_BUKRS   "会社コード
AND   KNB1~LOEVM  =  SPACE      "削除フラグ
AND   KNA1~LOEVM  =  SPACE.     "削除フラグ

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
MESSAGE S616(Z1).  "対象データがありません
STOP.
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'KNVV&KNA1&KNB1' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SELECT_04_KNVV
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_05_KNMT
*&---------------------------------------------------------------------*
*       優先度２：得意先品目マスタ
*----------------------------------------------------------------------*
FORM FRM_SELECT_05_KNMT.

SELECT KUNNR
KDMAT
INTO CORRESPONDING FIELDS OF TABLE GT_KNMT
FROM KNMT
FOR ALL ENTRIES IN GT_KNVV
WHERE VKORG = PR_VKORG       "販売組織
AND VTWEG = PR_VTWEG       "流通チャネル
AND KUNNR = GT_KNVV-KUNNR  "得意先コード
AND KDMAT IN S_KDMAT.      "得意先品目コード

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
MESSAGE S616(Z1).  "対象データがありません
STOP.
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'KNMT' SY-SUBRC.
ENDCASE.

FREE GT_KNVV.

ENDFORM.                    " FRM_SELECT_05_KNMT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_06_A901
*&---------------------------------------------------------------------*
*       優先度２：営業所／営業グループ：主要情報取得
*----------------------------------------------------------------------*
FORM FRM_SELECT_06_A901.
* 同じなので再利用
PERFORM FRM_SELECT_03_A901.

ENDFORM.                    " FRM_SELECT_06_A901
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_PRIORITY_MATNR
*&---------------------------------------------------------------------*
*       優先度３：品目コードを選択した場合の主要レコード抽出
*----------------------------------------------------------------------*
FORM FRM_SELECT_PRIORITY_MATNR.
* 得意先品目マスタ→得意先コード→得意先品目コード
PERFORM FRM_SELECT_07_KNMT.
* 得意先品目→主要情報取得
PERFORM FRM_SELECT_08_A901.

* TEST -------------------------------------------------
*  LOOP AT GT_A901 INTO GF_A901.
*    WRITE:/ GF_A901-KUNNR.
*    WRITE:  GF_A901-ZZZKDMAT.
*  ENDLOOP.
* ------------------------------------------------------

ENDFORM.                    " FRM_SELECT_PRIORITY_MATNR
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_07_KNMT
*&---------------------------------------------------------------------*
*       優先度３：得意先品目マスタ
*----------------------------------------------------------------------*
FORM FRM_SELECT_07_KNMT.

SELECT KUNNR
KDMAT
INTO CORRESPONDING FIELDS OF TABLE GT_KNMT
FROM KNMT
WHERE VKORG  = PR_VKORG       "販売組織
AND VTWEG  = PR_VTWEG       "流通チャネル
AND KUNNR IN S_KUNNR        "得意先コード
AND MATNR IN S_MATNR        "品目コード
AND KDMAT IN S_KDMAT.       "得意先品目コード

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
MESSAGE S616(Z1).  "対象データがありません
STOP.
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'KNMT' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SELECT_07_KNMT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_08_A901
*&---------------------------------------------------------------------*
*       優先度３：品目コード：主要情報取得
*----------------------------------------------------------------------*
FORM FRM_SELECT_08_A901.
* 同じなので再利用
PERFORM FRM_SELECT_03_A901.

ENDFORM.                    " FRM_SELECT_08_A901
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_PRIORITY_ETC
*&---------------------------------------------------------------------*
*       優先度４：その他を選択した場合の主要レコード抽出
*----------------------------------------------------------------------*
FORM FRM_SELECT_PRIORITY_ETC.

PERFORM FRM_SELECT_09_A901.

* TEST -------------------------------------------------
*  LOOP AT GT_A901 INTO GF_A901.
*    WRITE:/ GF_A901-KUNNR.
*    WRITE:  GF_A901-ZZZKDMAT.
*  ENDLOOP.
* ------------------------------------------------------

ENDFORM.                    " FRM_SELECT_PRIORITY_ETC
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_09_A901
*&---------------------------------------------------------------------*
*       優先度４：ＥＴＣ：主要情報取得
*----------------------------------------------------------------------*
FORM FRM_SELECT_09_A901.

SELECT KAPPL    "アプリケーションキー
KSCHL    "条件タイプ
VKORGAU  "販売組織
VTWEG    "流通チャネル
SPART    "製品部門
KUNNR    "得意先コード
ZZZKDMAT "得意先品目コード
KNUMH    "条件レコード
INTO CORRESPONDING FIELDS OF TABLE GT_A901
FROM A901
WHERE KAPPL    =  'V'      "アプリケーション
AND KSCHL    IN SV_KSCHL "条件タイプ
AND VKORGAU  =  PR_VKORG "販売組織
AND VTWEG    =  PR_VTWEG "流通チャネル
AND SPART    =  PR_SPART "製品部門
AND KUNNR    IN S_KUNNR  "得意先コード
AND ZZZKDMAT IN S_KDMAT  "得意先品目コード
AND DATBI    >= PR_DATUM "有効終了日
AND DATAB    <= PR_DATUM."有効開始日

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
MESSAGE S616(Z1).  "対象データがありません
STOP.
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'A901' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SELECT_09_A901
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_COMMON
*&---------------------------------------------------------------------*
*       共通データ読込
*----------------------------------------------------------------------*
FORM FRM_SELECT_COMMON.

DATA:
L_COUNT_M TYPE I,
L_COUNT_V TYPE I.

LOOP AT GT_A901 INTO GF_A901.

*   SELECT 11 価格条件の取得
PERFORM FRM_SELECT_11_KONX_V.
*   対象データなしのばあい現A901レコードは対象外
IF G_SUBRC <> 0.
CONTINUE.
ENDIF.
DESCRIBE TABLE GT_KONX_V LINES L_COUNT_V.

*   SELECT 12 品目コード、プラントコードの取得
PERFORM FRM_SELECT_12_KNMT.
*   対象データなしのばあい現KNMTレコードは対象外
IF G_SUBRC <> 0.
CONTINUE.
ENDIF.

IF NOT GT_KNMT[] IS INITIAL.
*     SELECT 14 仕入先情報取得
PERFORM FRM_SELECT_14_A017.
*     対象データなしの場合仕入先情報無しで出力する
IF G_SUBRC <> 0.
CONTINUE.
ENDIF.
DESCRIBE TABLE GT_A017 LINES G_REC_A017.
ENDIF.

*   SELECT SINGLE 10 得意先マスタ存在チェック
*   得意先名、営業所、営業グループ、営業所名、営業グループ名設定
PERFORM FRM_SELECT_10_KNVV_SEC."→GF_KNXX

IF NOT GT_A017[] IS INITIAL.
*     SELECT 15 仕入先価格条件の取得
PERFORM FRM_SELECT_15_KONX_M.
*     対象データなしの場合仕入先情報無しで出力する
IF G_SUBRC <> 0.
CONTINUE.
ENDIF.
ENDIF.
DESCRIBE TABLE GT_KONX_M LINES L_COUNT_M.

*   KONX_V内部ＴＢＬを回す
*
IF L_COUNT_V > L_COUNT_M.
LOOP AT GT_KONX_V INTO GF_KONX_V.

IF  GF_KONX_V-KSTBM IS INITIAL
AND GF_KONX_V-KBET2 IS INITIAL
AND GF_KONX_V-KBETR IS INITIAL.
CONTINUE.
ENDIF.

*       PERFORM FRM_APPEND_EXEC_ITAB.
G_CNT_A017 = SY-TABIX.
*       設定項目設定
READ TABLE GT_KONX_M INTO GF_KONX_M INDEX SY-TABIX.
READ TABLE GT_KNMT   INTO GF_KNMT WITH KEY
KUNNR = GF_KONX_V-VAKEY+8(10)
KDMAT = GF_KONX_V-VAKEY+18(35)
WERKS = GF_KONX_M-VAKEY+32(4)
BINARY SEARCH.
IF SY-SUBRC <> 0.
CONTINUE.
ENDIF.
READ TABLE GT_A017   INTO GF_A017 WITH KEY
KNUMH = GF_KONX_M-KNUMH
WERKS = GF_KONX_M-VAKEY+32(4)
BINARY SEARCH.
IF SY-SUBRC <> 0.
CONTINUE.
ENDIF.
*       SELECT 18 仕入先チェック
PERFORM FRM_SELECT_18_LFXX.
*       SELECT 16 仕入先品目コードの設定及び購買情報存在チェック
PERFORM FRM_SELECT_16_EINX.
*       データを設定する
PERFORM FRM_M_DATA_SET.
PERFORM FRM_V_DATA_SET.
*       仕入先を設定し出力する
IF NOT GF_EXEC-KBETR_M IS INITIAL.
APPEND GF_EXEC TO GT_EXEC.
CLEAR:
GF_EXEC.
ENDIF.
ENDLOOP.
ELSE.
LOOP AT GT_KONX_M INTO GF_KONX_M.
*       設定項目設定
READ TABLE GT_KONX_V INTO GF_KONX_V INDEX SY-TABIX.

IF  GF_KONX_V-KSTBM IS INITIAL
AND GF_KONX_V-KBET2 IS INITIAL
AND GF_KONX_V-KBETR IS INITIAL.
CONTINUE.
ENDIF.
*
READ TABLE GT_KNMT   INTO GF_KNMT WITH KEY
KUNNR = GF_KONX_V-VAKEY+8(10)
KDMAT = GF_KONX_V-VAKEY+18(35)
WERKS = GF_KONX_M-VAKEY+32(4)
BINARY SEARCH.
IF SY-SUBRC <> 0.
CONTINUE.
ENDIF.
READ TABLE GT_A017   INTO GF_A017 WITH KEY
KNUMH = GF_KONX_M-KNUMH
WERKS = GF_KONX_M-VAKEY+32(4)
BINARY SEARCH.
IF SY-SUBRC <> 0.
CONTINUE.
ENDIF.
IF  GF_KONX_V-KSTBM IS INITIAL
AND GF_KONX_V-KBET2 IS INITIAL
AND GF_KONX_V-KBETR IS INITIAL.
CONTINUE.
ENDIF.
*        PERFORM FRM_APPEND_EXEC_ITAB.
G_CNT_A017 = SY-TABIX.

*       SELECT 18 仕入先チェック
PERFORM FRM_SELECT_18_LFXX.
*       SELECT 16 仕入先品目コードの設定及び購買情報存在チェック
PERFORM FRM_SELECT_16_EINX.
*       仕入先を設定し出力する
PERFORM FRM_M_DATA_SET.
PERFORM FRM_V_DATA_SET.
*       仕入先を設定し出力する
IF NOT GF_EXEC-KBETR_M IS INITIAL.
APPEND GF_EXEC TO GT_EXEC."廃止（中の一部とはコレのこと）
CLEAR:
GF_EXEC.
ENDIF.
ENDLOOP.
ENDIF.


ENDLOOP.

ENDFORM.                    " FRM_SELECT_COMMON
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_10_KNVV_SEC
*&---------------------------------------------------------------------*
*       得意先マスタ存在チェック兼名称取得
*----------------------------------------------------------------------*
*  名称→KNXX：構造：GF_KNXX
*----------------------------------------------------------------------*
FORM FRM_SELECT_10_KNVV_SEC.

CLEAR:GF_KNXX.

SELECT SINGLE KNA1~KUNNR           "得意先コード
KNA1~NAME1           "得意先名
KNVV~VKBUR           "営業所
KNVV~VKGRP           "営業グループ
TVKBT~BEZEI          "営業所名
TVGRT~BEZEI          "営業グループ名
INTO (GF_KNXX-KUNNR ,"得意先コード
GF_KNXX-KNAME ,"得意先名
GF_KNXX-VKBUR ,"営業所
GF_KNXX-VKGRP ,"営業グループ
GF_KNXX-VKBUN ,"営業所名
GF_KNXX-VKGRN) "営業グループ名
FROM ( ( ( KNVV AS KNVV INNER JOIN KNA1 AS KNA1
ON   KNVV~KUNNR = KNA1~KUNNR )
INNER   JOIN KNB1 AS KNB1
ON   KNVV~KUNNR = KNB1~KUNNR )
INNER   JOIN TVKBT AS TVKBT
ON   KNVV~VKBUR = TVKBT~VKBUR )
INNER   JOIN TVGRT AS TVGRT
ON   KNVV~VKGRP = TVGRT~VKGRP
WHERE   KNVV~KUNNR = GF_A901-KUNNR   "得意先コード
AND   KNA1~LOEVM = SPACE           "削除フラグ
AND   KNB1~BUKRS = PR_BUKRS        "会社コード
AND   KNB1~LOEVM = SPACE           "削除フラグ
AND   KNVV~VKORG = GF_A901-VKORGAU "販売組織
AND   KNVV~VTWEG = GF_A901-VTWEG   "流通チャネル
AND   KNVV~SPART = GF_A901-SPART   "製品部門
AND   KNVV~LOEVM = SPACE           "削除フラグ
AND   KNVV~VKBUR IN S_VKBUR        "営業所
AND   KNVV~VKGRP IN S_VKGRP        "営業グループ
**** START UPD 2014/12/15 ISID18 ****
*                 AND   TVGRT~SPRAS = 'J'            "言語（営業ＧＲ）
*                 AND   TVKBT~SPRAS = 'J'.           "言語（営業所）
AND   TVGRT~SPRAS = SY-LANGU       "言語（営業ＧＲ）
AND   TVKBT~SPRAS = SY-LANGU.      "言語（営業所）
**** END UPD 2014/12/15 ISID18 ****

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1)
WITH SY-REPID 'KNVV&KNA1&KNB1&TVBKT&TVGRT' SY-SUBRC.
ENDCASE.

G_SUBRC = SY-SUBRC.

*---APPEND START NDSC T.SAITOH 2003/03/18---*
SELECT SINGLE
VKBUR           "営業所
INTO (GF_KNXX-VKBUR "営業所
)
FROM KNVV
WHERE   KNVV~KUNNR = GF_A901-KUNNR   "得意先コード
**** START ADD 2014/12/15 ISID18 ****
AND   KNVV~VKORG = PR_VKORG        " 販売組織
AND   KNVV~VTWEG = PR_VTWEG        " 流通チャネル
AND   KNVV~SPART = PR_SPART.       " 製品部門
**** END ADD 2014/12/15 ISID18 ****
*---APPEND END   NDSC T.SAITOH 2003/03/18---*

ENDFORM.                    " FRM_SELECT_10_KNVV_SEC
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_11_KONX_V
*&---------------------------------------------------------------------*
*       得意先価格条件を取得
*----------------------------------------------------------------------*
FORM FRM_SELECT_11_KONX_V.

CLEAR:GT_KONX_V.

SELECT KONH~KNUMH  "条件レコード番号
KONH~VAKEY  "変数キー
KONP~KZBZG  "スケール区分
KONP~KBETR  "受注単価
KONP~KONWA  "受注通貨
KONP~KPEIN  "価格数量単位
T006A~MSEH3 "受注数量単位
*** APPEND NDSC MASUDA 2004/06/14 START ***
KONM~KLFN1 "明細番号
KONM~KSTBM "スケール数量
KONM~KBETR "発注単価
INTO TABLE GT_KONX_V
*** APPEND NDSC MASUDA 2004/06/14 END   ***
*         INTO CORRESPONDING FIELDS OF TABLE GT_KONX_V
FROM ( KONH AS KONH INNER JOIN KONP AS KONP
ON   KONH~KNUMH = KONP~KNUMH )
INNER  JOIN T006A AS T006A
ON   KONP~KMEIN    = T006A~MSEHI
*** APPEND NDSC MASUDA 2004/06/14 START ***
LEFT JOIN KONM AS KONM
ON KONM~KNUMH    = KONP~KNUMH "条件レコード番号
AND KONM~KOPOS    = KONP~KOPOS "条件レコード明細
*** APPEND NDSC MASUDA 2004/06/14 END   ***
WHERE  KONH~KNUMH    = GF_A901-KNUMH "条件レコード番号
AND  KONH~KVEWE    = 'A'           "条件テーブルの用途
AND  KONP~LOEVM_KO = SPACE         "削除フラグ
**** START UPD 2014/12/15 ISID18 ****
*           AND  T006A~SPRAS   = 'J'.         "言語
AND  T006A~SPRAS   = SY-LANGU.    "言語
**** END UPD 2014/12/15 ISID18 ****

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1)
WITH SY-REPID 'KONH&KONP&T006A' SY-SUBRC.
ENDCASE.

G_SUBRC = SY-SUBRC.

ENDFORM.                    " FRM_SELECT_11_KONX_V
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_12&13_KNMT&MAXX
*&---------------------------------------------------------------------*
*       複数品目の存在チェック及びデータの取得
*----------------------------------------------------------------------*
FORM FRM_SELECT_12_KNMT.

TYPES:
BEGIN OF TYP_KONX_V,
KUNNR LIKE KNMT-KUNNR,
KDMAT LIKE KNMT-KDMAT,
END   OF TYP_KONX_V.

DATA:
LT_KONX_V TYPE STANDARD TABLE OF TYP_KONX_V.
DATA:
LF_KONX_V TYPE TYP_KONX_V.

CLEAR:GT_KNMT.
REFRESH:
GT_KNMT,
LT_KONX_V.

LOOP AT GT_KONX_V INTO GF_KONX_V.
IF LF_KONX_V-KUNNR <> GF_KONX_V-VAKEY+8(10)
OR LF_KONX_V-KDMAT <> GF_KONX_V-VAKEY+18(35).
LF_KONX_V-KUNNR = GF_KONX_V-VAKEY+8(10).
LF_KONX_V-KDMAT = GF_KONX_V-VAKEY+18(35).
APPEND LF_KONX_V TO LT_KONX_V.
ENDIF.
ENDLOOP.

SELECT KNMT~KUNNR "得意先コード
KNMT~KDMAT "得意先品目コード
KNMT~MATNR "品目コード
MARC~WERKS "プラントコード
MAKT~MAKTX "品目名
MARA~MATKL "品目グループ
INTO CORRESPONDING FIELDS OF TABLE GT_KNMT
FROM ( ( ( ( KNMT AS KNMT INNER JOIN MVKE AS MVKE
ON KNMT~VKORG =  MVKE~VKORG             "販売組織
AND KNMT~VTWEG =  MVKE~VTWEG             "流通チャネル
AND KNMT~MATNR =  MVKE~MATNR )           "品目コード
INNER JOIN MAKT AS MAKT
ON KNMT~MATNR =  MAKT~MATNR )
INNER JOIN MARA AS MARA
ON MAKT~MATNR = MARA~MATNR  )
INNER JOIN MARC AS MARC
ON MAKT~MATNR = MARC~MATNR  )
INNER JOIN MARD AS MARD
ON MAKT~MATNR = MARD~MATNR
FOR ALL ENTRIES IN LT_KONX_V
WHERE KNMT~VKORG =  PR_VKORG               "販売組織
AND KNMT~VTWEG =  PR_VTWEG               "流通チャネル
AND KNMT~KUNNR =  LT_KONX_V-KUNNR        "得意先コード
AND KNMT~MATNR IN S_MATNR                "品目コード
AND KNMT~KDMAT =  LT_KONX_V-KDMAT        "得意先品目コード
AND MVKE~LVORM =  SPACE                  "削除フラグ
AND MAKT~MATNR IN S_MATNR       "品目コード
**** START UPD 2014/12/15 ISID18 ****
*           AND MAKT~SPRAS =  'J'           "言語
AND MAKT~SPRAS =  SY-LANGU      "言語
**** END UPD 2014/12/15 ISID18 ****
AND MARA~MATKL IN S_MATKL       "品目グループ
AND MARA~LVORM =  SPACE         "削除フラグ
AND MARC~WERKS IN S_WERKS       "プラント
AND MARC~LVORM =  SPACE         "削除フラグ
AND MARD~WERKS IN S_WERKS       "プラント
AND MARD~LVORM =  SPACE.        "削除フラグ


CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1)
WITH SY-REPID 'KNMT&MVKE' SY-SUBRC.
ENDCASE.

G_SUBRC = SY-SUBRC.

ENDFORM.                    " FRM_SELECT_12_KNMT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_13_MAXX
*&---------------------------------------------------------------------*
*       品目の存在チェック及び品目名、品目グループの取得
*----------------------------------------------------------------------*
FORM FRM_SELECT_13_MAXX.

* SELECT 12

*  SELECT SINGLE MAKT~MAKTX "品目名
*                MARA~MATKL "品目グループ
*                INTO CORRESPONDING FIELDS OF GF_MAXX
*                FROM ( ( MAKT AS MAKT INNER JOIN MARA AS MARA
*                  ON MAKT~MATNR = MARA~MATNR )
*               INNER JOIN MARC AS MARC
*                  ON MAKT~MATNR = MARC~MATNR )
*               INNER JOIN MARD AS MARD
*                  ON MAKT~MATNR = MARD~MATNR
*               WHERE MAKT~MATNR =  GF_KNMT-MATNR "品目コード
*                 AND MAKT~SPRAS =  'J'           "言語
*                 AND MARA~MATKL IN S_MATKL       "品目グループ
*                 AND MARA~LVORM =  SPACE         "削除フラグ
*                 AND MARC~WERKS =  GF_KNMT-WERKS "プラント
*                 AND MARC~LVORM =  SPACE         "削除フラグ
*                 AND MARD~WERKS =  GF_KNMT-WERKS "プラント
*                 AND MARD~LVORM =  SPACE.        "削除フラグ
*
*   CASE SY-SUBRC.
*     WHEN 0.
*     WHEN 4. " NO-DATA
*     WHEN 8. " SYSTEM ERROR
*       MESSAGE A603(Z1)
*       WITH SY-REPID 'MAKT&MARA&MARC&MARD' SY-SUBRC.
*   ENDCASE.
*
*   G_SUBRC = SY-SUBRC.

ENDFORM.                    " FRM_SELECT_13_MAXX
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_14_A017
*&---------------------------------------------------------------------*
*       仕入先情報（品目購買情報）取得
*----------------------------------------------------------------------*
FORM FRM_SELECT_14_A017.

REFRESH
:GT_A017.

SELECT KAPPL "アプリケーション
KSCHL "仕入先条件タイプ
LIFNR "仕入先コード
MATNR "品目コード
EKORG "購買組織
WERKS "プラント
ESOKZ "購買情報区分
KNUMH "条件レコード番号
INTO CORRESPONDING FIELDS OF TABLE GT_A017
FROM A017
FOR ALL ENTRIES IN GT_KNMT
WHERE KAPPL =  'M'                  "アプリケーション
AND KSCHL IN SM_KSCHL             "仕入先条件タイプ
AND LIFNR IN S_LIFNR              "仕入先コード
AND MATNR =  GT_KNMT-MATNR        "品目コード
AND EKORG =  PR_EKORG             "購買組織
AND WERKS =  GT_KNMT-WERKS        "プラント
AND ESOKZ IN ('0','3')            "購買情報区分
AND DATBI >= PR_DATUM             "有効終了日
AND DATAB <= PR_DATUM.            "有効開始日

CASE SY-SUBRC.
WHEN 0.
SORT GT_A017 BY KNUMH WERKS.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1)
WITH SY-REPID 'A017' SY-SUBRC.
ENDCASE.

G_SUBRC = SY-SUBRC.

ENDFORM.                    " FRM_SELECT_14_A017
*&---------------------------------------------------------------------*
*&      Form  FRM_APPEND_EXEC_ITAB
*&---------------------------------------------------------------------*
*       処理用レコードに追記する
*----------------------------------------------------------------------*
FORM FRM_APPEND_EXEC_ITAB.
* 得意先情報設定
PERFORM FRM_V_DATA_SET.
* 仕入先情報設定
IF G_SUBRC = 0.
PERFORM FRM_M_DATA_SET.
ENDIF.
IF NOT GF_EXEC-KBETR_M IS INITIAL.
APPEND GF_EXEC TO GT_EXEC."廃止（中の一部とはコレのこと）
ENDIF.
CLEAR GF_EXEC.

ENDFORM.                    " FRM_APPEND_EXEC_ITAB
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_15_KONX_M
*&---------------------------------------------------------------------*
*       仕入先価格条件の取得
*----------------------------------------------------------------------*
FORM FRM_SELECT_15_KONX_M.

CLEAR:GT_KONX_M.

SELECT KONH~KNUMH  "条件レコード番号
KONH~VAKEY  "変数キー
KONP~KZBZG  "スケール区分
KONP~KBETR  "受注単価
KONP~KONWA  "受注通貨
KONP~KPEIN  "価格数量単位
T006A~MSEH3 "受注数量単位
*** APPEND NDSC MASUDA 2004/06/14 START ***
KONM~KLFN1 "明細番号
KONM~KSTBM "スケール数量
KONM~KBETR "発注単価
INTO TABLE GT_KONX_M
*** APPEND NDSC MASUDA 2004/06/14 END   ***
*         INTO CORRESPONDING FIELDS OF TABLE GT_KONX_M
FROM ( KONH AS KONH INNER JOIN KONP AS KONP
ON   KONH~KNUMH = KONP~KNUMH )
INNER JOIN T006A AS T006A
ON   KONP~KMEIN    = T006A~MSEHI
*** APPEND NDSC MASUDA 2004/06/14 START ***
*** UPDATE DMC MASUDA 2005/04/21 START ***
LEFT JOIN KONM AS KONM
*        INNER JOIN KONM AS KONM
*** UPDATE DMC MASUDA 2005/04/21 END   ***
ON KONM~KNUMH    = KONP~KNUMH "条件レコード番号
AND KONM~KOPOS    = KONP~KOPOS "条件レコード明細
*** APPEND NDSC MASUDA 2004/06/14 END   ***
FOR ALL ENTRIES IN GT_A017
WHERE  KONH~KNUMH    = GT_A017-KNUMH "条件レコード番号
AND  KONH~KVEWE    = 'A'           "条件テーブルの用途
AND  KONP~LOEVM_KO = SPACE         "削除フラグ
*** DELETE DMC MASUDA 2005/04/21 START ***
*           AND  KONM~KSTBM    <> 0            "スケール数量
*** DELETE DMC MASUDA 2005/04/21 END   ***
**** START UPD 2014/12/15 ISID18 ****
*           AND  T006A~SPRAS   = 'J'.          "言語
AND  T006A~SPRAS   = SY-LANGU.     "言語
**** END UPD 2014/12/15 ISID18 ****

CASE SY-SUBRC.
WHEN 0.
*** APPEND DMC MASUDA 2005/04/21 START ***
DELETE GT_KONX_M WHERE KBETR = 0
AND KSTBM = 0
AND KBET2 = 0.
SY-SUBRC = 0.
*** APPEND DMC MASUDA 2005/04/21 END   ***
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1)
WITH SY-REPID 'KONH&KONP&T006A' SY-SUBRC.
ENDCASE.

G_SUBRC = SY-SUBRC.


ENDFORM.                    " FRM_SELECT_15_KONX_M
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_16_EINX
*&---------------------------------------------------------------------*
*       購買情報：仕入先品目の取得
*----------------------------------------------------------------------*
FORM FRM_SELECT_16_EINX.

CLEAR:GF_EINX.

SELECT SINGLE EINA~IDNLF "仕入先品目コード
INTO GF_EINX-IDNLF
FROM EINA AS EINA INNER JOIN EINE AS EINE
ON EINA~INFNR = EINE~INFNR
WHERE EINA~MATNR = GF_A017-MATNR
AND EINA~LIFNR = GF_A017-LIFNR
AND EINA~LOEKZ = SPACE
AND EINE~EKORG = GF_A017-EKORG
AND EINE~ESOKZ = GF_A017-ESOKZ
AND EINE~WERKS = GF_A017-WERKS
AND EINE~LOEKZ = SPACE.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.    " 対象データなし
WHEN OTHERS.  " システムエラー
MESSAGE A603(Z1) WITH 'EINA&EINE' SY-SUBRC.
ENDCASE.

*  リターン値設定
G_SUBRC = SY-SUBRC.

ENDFORM.                    " FRM_SELECT_16_EINX
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_17_T001W
*&---------------------------------------------------------------------*
*       プラント名の設定
*----------------------------------------------------------------------*
FORM FRM_SELECT_17_T001W.

SELECT SINGLE NAME1 "プラントテキスト
INTO GF_EXEC-WNAME
FROM T001W
WHERE WERKS = GF_KONX_M-VAKEY+32(4).

CASE SY-SUBRC.
WHEN 0.
WHEN 4.    " 対象データなし
WHEN OTHERS.  " システムエラー
MESSAGE A603(Z1) WITH 'T001W' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SELECT_17_T001W
*&---------------------------------------------------------------------*
*&      Form  FRM_V_DATA_SET
*&---------------------------------------------------------------------*
*       得意先データ設定
*----------------------------------------------------------------------*
FORM FRM_V_DATA_SET.

* 受注単価用ローカル変数
DATA: L_EBETR_V(9) TYPE P DECIMALS 2.
* 得意先コード変換用
DATA: L_KUNNR TYPE KNA1-KUNNR.
* 2005/03/22 A.MASUDA APPEND START -->
DATA: L_KSTBM TYPE I.      "スケール数量

CLEAR: L_KSTBM.
* 2005/03/22 A.MASUDA APPEND END   <--

**** START ADD 2014/12/15 ISID18 ****
DATA:
L_KBETR_D6(13) TYPE P DECIMALS 6,
L_AMOUNT       TYPE ZEZAMOUNT,
L_NOZERO       TYPE STRING.
**** END ADD 2014/12/15 ISID18 ****

* 選択基準日（出力項目：０１）
GF_EXEC-DATUM     = PR_DATUM.

* GF_KNXX
* 得意先名：０３
GF_EXEC-KNAME = GF_KNXX-KNAME.
* 営業所：２１
GF_EXEC-VKBUR     = GF_KNXX-VKBUR.
GF_EXEC-VKBUR_KEY = GF_KNXX-VKBUR.
* 営業グループ：２３
GF_EXEC-VKGRP = GF_KNXX-VKGRP.
* 営業所名：２２
GF_EXEC-VKBUN = GF_KNXX-VKBUN.
* 営業グループ名：２４
GF_EXEC-VKGRN = GF_KNXX-VKGRN.

* GF_KONX_V
* 得意先コード：０２
GF_EXEC-KUNNR_KEY = GF_KONX_V-VAKEY+8(10).
L_KUNNR = GF_KONX_V-VAKEY+8(10).
WRITE L_KUNNR TO L_KUNNR.
PERFORM FRM_RIGHT_JUSTIFIED USING L_KUNNR
CHANGING GF_EXEC-KUNNR.

* 得意先品目コード：０４
GF_EXEC-KDMAT     = GF_KONX_V-VAKEY+18(35).
GF_EXEC-KDMAT_KEY = GF_KONX_V-VAKEY+18(35).
* スケール区分：１０
CASE GF_KONX_V-KZBZG.
WHEN SPACE.
GF_EXEC-KZBZG_V   = SPACE.
WHEN OTHERS.
GF_EXEC-KZBZG_V   = '*'.
ENDCASE.

* 受注通貨：０７
GF_EXEC-KONWA_V = GF_KONX_V-KONWA.

*** UPDATE NDSC A.MASUDA 2004/06/14 START ***
** 受注単価：０８
*  PERFORM FRM_CURRENCY_AMOUNT USING GF_KONX_V-KONWA
*                                    GF_KONX_V-KBETR
*                           CHANGING L_EBETR_V.
*
IF  GF_KONX_V-KSTBM IS INITIAL
AND GF_KONX_V-KBET2 IS INITIAL.
*   発注単価（出力項目：１４）
PERFORM FRM_CURRENCY_AMOUNT USING GF_KONX_V-KONWA
GF_KONX_V-KBETR
CHANGING L_EBETR_V.
*   価格数量単位で割る
IF NOT GF_KONX_V-KPEIN IS INITIAL.
**** START UPD 2014/12/15 ISID18 ****
*      L_EBETR_V = L_EBETR_V / GF_KONX_V-KPEIN.
*    ENDIF.
*    WRITE L_EBETR_V TO GF_EXEC-KBETR_V.
L_KBETR_D6 = L_EBETR_V / GF_KONX_V-KPEIN.
ELSE.
L_KBETR_D6 = L_EBETR_V.
ENDIF.
CLEAR: L_AMOUNT,
L_NOZERO.
L_AMOUNT = L_KBETR_D6.
CALL FUNCTION 'ZEG_ZZ_RIGHTZERO_DETELE'
EXPORTING
IMPORIGINAL  = L_AMOUNT
IMPORTING
EXPOUTNOZERO = L_NOZERO.
WRITE L_NOZERO TO GF_EXEC-KBETR_V RIGHT-JUSTIFIED.
**** END UPD 2014/12/15 ISID18 ****
* スケール数量
L_KSTBM = L_KSTBM + 1.
WRITE L_KSTBM TO GF_EXEC-KSTBM_V.
ELSE.
* 発注単価（出力項目：１４）
PERFORM FRM_CURRENCY_AMOUNT USING GF_KONX_V-KONWA
GF_KONX_V-KBET2
CHANGING L_EBETR_V.
*   価格数量単位で割る
IF NOT GF_KONX_V-KPEIN IS INITIAL.
**** START UPD 2014/12/15 ISID18 ****
*      L_EBETR_V = L_EBETR_V / GF_KONX_V-KPEIN.
*    ENDIF.
*    WRITE L_EBETR_V TO GF_EXEC-KBETR_V.
L_KBETR_D6 = L_EBETR_V / GF_KONX_V-KPEIN.
ELSE.
L_KBETR_D6 = L_EBETR_V.
ENDIF.
CLEAR: L_AMOUNT,
L_NOZERO.
L_AMOUNT = L_KBETR_D6.
CALL FUNCTION 'ZEG_ZZ_RIGHTZERO_DETELE'
EXPORTING
IMPORIGINAL  = L_AMOUNT
IMPORTING
EXPOUTNOZERO = L_NOZERO.
WRITE L_NOZERO TO GF_EXEC-KBETR_V RIGHT-JUSTIFIED.
**** END UPD 2014/12/15 ISID18 ****
* 2005/03/22 A.MASUDA APPEND START -->
* スケール数量
L_KSTBM = L_KSTBM + GF_KONX_V-KSTBM.
WRITE L_KSTBM TO GF_EXEC-KSTBM_V.
*    WRITE GF_KONX_V-KSTBM TO GF_EXEC-KSTBM_V.
* 2005/03/22 A.MASUDA APPEND END   <--
ENDIF.
*** UPDATE NDSC A.MASUDA 2004/06/14 END   ***

*  WRITE L_EBETR_V TO GF_EXEC-KBETR_V.

* 受注数量単位：０９
GF_EXEC-MSEH3_V = GF_KONX_V-MSEH3.

* KNMT
* 品目コード：０５
GF_EXEC-MATNR_KEY = GF_KNMT-MATNR.
GF_EXEC-MATNR     = GF_KNMT-MATNR.

* 品目名：０６
GF_EXEC-MAKTX = GF_KNMT-MAKTX.
* 品目グループ：２５
GF_EXEC-MATKL = GF_KNMT-MATKL.

* プラント（出力項目：１８）
*  GF_EXEC-WERKS_KEY = GF_KONX_M-VAKEY+32(4).
*  GF_EXEC-WERKS     = GF_KONX_M-VAKEY+32(4).
GF_EXEC-WERKS_KEY = GF_KNMT-WERKS.
GF_EXEC-WERKS     = GF_KNMT-WERKS.

* SELECT SINGLE 17 プラント名設定
PERFORM FRM_SELECT_17_T001W.

ENDFORM.                    " FRM_V_DATA_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_M_DATA_SET
*&---------------------------------------------------------------------*
*       仕入先情報設定
*----------------------------------------------------------------------*
FORM FRM_M_DATA_SET.

* 発注単価用ローカル変数
DATA: L_EBETR_M(9) TYPE P DECIMALS 2.
* 仕入先コード変換用
DATA: L_LIFNR TYPE LFA1-LIFNR.
* 2005/03/22 A.MASUDA APPEND START -->
DATA: L_KSTBM TYPE I.      "スケール数量

CLEAR: L_KSTBM.
* 2005/03/22 A.MASUDA APPEND END   <--
**** START ADD 2014/12/15 ISID18 ****
DATA:
L_KBETR_D6(13) TYPE P DECIMALS 6,
L_AMOUNT       TYPE ZEZAMOUNT,
L_NOZERO       TYPE STRING.
**** END ADD 2014/12/15 ISID18 ****

* 仕入先コード（出力項目）
GF_EXEC-LIFNR_KEY = GF_KONX_M-VAKEY+0(10).
* 仕入先コード（出力項目：１６）
L_LIFNR           = GF_KONX_M-VAKEY+0(10).
*---MODIFY START PSD T.SAITOH 2002/08/02 ---------------------------*
*  WRITE L_LIFNR TO L_LIFNR.
*  PERFORM FRM_RIGHT_JUSTIFIED USING L_LIFNR
*                           CHANGING GF_EXEC-LIFNR.
WRITE L_LIFNR TO GF_EXEC-LIFNR.
*---MODIFY END   PSD T.SAITOH 2002/08/02 ---------------------------*
* 仕入先品目コード
GF_EXEC-IDNLF = GF_EINX-IDNLF.

* 仕入先名
GF_EXEC-LNAME = GF_LFXX-LNAME.

** プラント（出力項目：１８）
*  GF_EXEC-WERKS_KEY = GF_KONX_M-VAKEY+32(4).
*  GF_EXEC-WERKS     = GF_KONX_M-VAKEY+32(4).

* 品目コード（出力項目）
GF_EXEC-MATNR_KEY = GF_KONX_M-VAKEY+10(18).
* 品目コード（出力項目）
GF_EXEC-MATNR     = GF_KONX_M-VAKEY+10(18).
* 購買情報区分（出力項目）
GF_EXEC-ESOKZ_KEY = GF_KONX_M-VAKEY+36(1).
* 購買情報区分（出力項目：２１）
CASE GF_KONX_M-VAKEY+36(1).
WHEN '3'.
GF_EXEC-ESOKZ_M   = '*'.
WHEN OTHERS.
GF_EXEC-ESOKZ_M   = SPACE.
ENDCASE.
* スケール区分（出力項目：２２）
CASE GF_KONX_M-KZBZG.
WHEN SPACE.
GF_EXEC-KZBZG_M   = SPACE.
WHEN OTHERS.
GF_EXEC-KZBZG_M   = '*'.
ENDCASE.
* 発注通貨（出力項目：１９）
GF_EXEC-KONWA_M = GF_KONX_M-KONWA.
** 発注単価（出力項目：１８）
*  PERFORM FRM_CURRENCY_AMOUNT USING GF_KONX_M-KONWA
*                                    GF_KONX_M-KBETR
*                           CHANGING L_EBETR_M.
*** UPDATE NDSC A.MASUDA 2004/06/14 START ***
IF  GF_KONX_M-KSTBM IS INITIAL
AND GF_KONX_M-KBET2 IS INITIAL.
IF NOT GF_KONX_M-KBETR IS INITIAL.
*     発注単価
PERFORM FRM_CURRENCY_AMOUNT USING GF_KONX_M-KONWA
GF_KONX_M-KBETR
CHANGING L_EBETR_M.
*     価格数量単位で割る
IF NOT GF_KONX_M-KPEIN IS INITIAL.
**** START UPD 2014/12/15 ISID18 ****
*        L_EBETR_M = L_EBETR_M / GF_KONX_M-KPEIN.
*      ENDIF.
*
*      WRITE L_EBETR_M TO GF_EXEC-KBETR_M.
L_KBETR_D6 = L_EBETR_M / GF_KONX_M-KPEIN.
ELSE.
L_KBETR_D6 = L_EBETR_M.
ENDIF.
CLEAR: L_AMOUNT,
L_NOZERO.
L_AMOUNT = L_KBETR_D6.
CALL FUNCTION 'ZEG_ZZ_RIGHTZERO_DETELE'
EXPORTING
IMPORIGINAL  = L_AMOUNT
IMPORTING
EXPOUTNOZERO = L_NOZERO.
WRITE L_NOZERO TO GF_EXEC-KBETR_M RIGHT-JUSTIFIED.
**** END UPD 2014/12/15 ISID18 ****
ENDIF.
* スケール数量
* 2005/03/22 DMC A.MASUDA APPEND START -->
L_KSTBM = L_KSTBM + 1.
WRITE L_KSTBM TO GF_EXEC-KSTBM_M.
*    WRITE GF_KONX_M-KPEIN TO GF_EXEC-KSTBM_M.
* 2005/03/22 DMC A.MASUDA APPEND END   <--
ELSE.
*   発注単価
PERFORM FRM_CURRENCY_AMOUNT USING GF_KONX_M-KONWA
GF_KONX_M-KBET2
CHANGING L_EBETR_M.
*   価格数量単位で割る
IF NOT GF_KONX_M-KPEIN IS INITIAL.
**** START UPD 2014/12/15 ISID18 ****
*      L_EBETR_M = L_EBETR_M / GF_KONX_M-KPEIN.
*    ENDIF.
*
*    WRITE L_EBETR_M TO GF_EXEC-KBETR_M.
L_KBETR_D6 = L_EBETR_M / GF_KONX_M-KPEIN.
ELSE.
L_KBETR_D6 = L_EBETR_M.
ENDIF.
CLEAR: L_AMOUNT,
L_NOZERO.
L_AMOUNT = L_KBETR_D6.
CALL FUNCTION 'ZEG_ZZ_RIGHTZERO_DETELE'
EXPORTING
IMPORIGINAL  = L_AMOUNT
IMPORTING
EXPOUTNOZERO = L_NOZERO.
WRITE L_NOZERO TO GF_EXEC-KBETR_M RIGHT-JUSTIFIED.
**** END UPD 2014/12/15 ISID18 ****
* スケール数量
* 2005/03/22 DMC A.MASUDA APPEND START -->
L_KSTBM = L_KSTBM + GF_KONX_M-KSTBM.
WRITE L_KSTBM TO GF_EXEC-KSTBM_M.
*    WRITE GF_KONX_M-KSTBM TO GF_EXEC-KSTBM_M.
* 2005/03/22 DMC A.MASUDA APPEND END   <--
ENDIF.
*** UPDATE NDSC A.MASUDA 2004/06/14 END    ***

* 2011/02/14 Add Start
* 発注数量単位：
GF_EXEC-MSEH3_M = GF_KONX_M-MSEH3.
* 2011/02/14 Add End
* 2011/02/14 Delete Start
** 受注数量単位：
*  GF_EXEC-MSEH3_M = GF_KONX_V-MSEH3.
* 2011/02/14 Delete End

ENDFORM.                    " FRM_M_DATA_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_SORT
*&---------------------------------------------------------------------*
*       得意先ＣＤ／得意先品目ＣＤ／仕入先ＣＤ／加工賃／営業所
*----------------------------------------------------------------------*
FORM FRM_SORT.

SORT GT_EXEC BY KUNNR_KEY ASCENDING
KDMAT_KEY ASCENDING
LIFNR_KEY ASCENDING
ESOKZ_KEY ASCENDING
VKBUR_KEY ASCENDING
MATNR_KEY ASCENDING
*---APPEND START NDSC T.SAITOH 2002/11/12 ---------------------------*
*                 WERKS_KEY ASCENDING
*---APPEND END   NDSC T.SAITOH 2002/11/12 ---------------------------*
*** APPEND NDSC A.MASUDA 2004/06/14 START ***
KSTBM_V   ASCENDING
KSTBM_M   ASCENDING
*** APPEND NDSC A.MASUDA 2004/06/14 END   ***
.


ENDFORM.                    " FRM_SORT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_18_LFXX
*&---------------------------------------------------------------------*
*       仕入先チェック
*----------------------------------------------------------------------*
FORM FRM_SELECT_18_LFXX.

SELECT SINGLE LFA1~NAME1   "仕入先名
INTO   GF_LFXX-LNAME
FROM ( LFA1 AS LFA1 INNER JOIN LFB1 AS LFB1
ON   LFA1~LIFNR = LFB1~LIFNR )
INNER  JOIN LFM1 AS LFM1
ON   LFA1~LIFNR = LFM1~LIFNR
WHERE   LFA1~LIFNR = GF_KONX_M-VAKEY+0(10)
AND   LFA1~LOEVM = SPACE
AND   LFB1~BUKRS = PR_BUKRS
AND   LFB1~LOEVM = SPACE
AND   LFM1~EKORG = GF_A017-EKORG
AND   LFM1~LOEVM = SPACE.

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'LFA1&LFB1&LFM1' SY-SUBRC.
ENDCASE.
*  リターン値設定
G_SUBRC = SY-SUBRC.


ENDFORM.                    " FRM_SELECT_18_LFXX
*&--------------------------------------------------------------------*
*&      Form  FRM_DELETE_DKEYREC
*&--------------------------------------------------------------------*
*       重複キーレコードの名称削除（同一の名称は表示しない）
*---------------------------------------------------------------------*
FORM FRM_DELETE_DKEYREC.

*
DATA:
LW_EXEC    LIKE GF_EXEC,
LW_EXEC_ES LIKE GF_EXEC.

DATA: L_TMP_EXEC LIKE GF_EXEC.
*
FIELD-SYMBOLS <FS> LIKE GF_EXEC.
LOOP AT GT_EXEC ASSIGNING <FS>.

LW_EXEC_ES = <FS>.
*    IF L_TMP_EXEC = <FS>.
*      DELETE GT_EXEC INDEX SY-TABIX.
*      CONTINUE.
*    ENDIF.
**   前回のレコード確保
*    L_TMP_EXEC = <FS>.
*   得意先／得意先品目／品目コード／
*    AT NEW MATNR_KEY.

IF  LW_EXEC-KUNNR_KEY = LW_EXEC_ES-KUNNR_KEY
AND LW_EXEC-KDMAT_KEY = LW_EXEC_ES-KDMAT_KEY
AND LW_EXEC-MATNR_KEY = LW_EXEC_ES-MATNR_KEY.

*     表示項目削除
PERFORM FRM_DELETE_DISP_OF_SAME_KEY USING <FS>.

IF  LW_EXEC-KSTBM_V   = LW_EXEC_ES-KSTBM_V
AND LW_EXEC-KBETR_V   = LW_EXEC_ES-KBETR_V.
CLEAR:<FS>-KBETR_V,"発注単価
<FS>-KSTBM_V.
ENDIF.
IF  LW_EXEC-KSTBM_M   = LW_EXEC_ES-KSTBM_M
AND LW_EXEC-KBETR_M   = LW_EXEC_ES-KBETR_M
AND LW_EXEC-LIFNR     = LW_EXEC_ES-LIFNR
AND LW_EXEC-LNAME     = LW_EXEC_ES-LNAME.
CLEAR:<FS>-KBETR_M,"受注単価
<FS>-KSTBM_M,
<FS>-LIFNR,
<FS>-LNAME,
<FS>-KONWA_M,
<FS>-MSEH3_M.
* 2005/06/27 DELETE DMC A.MASUDA START -->
*        DELETE GT_EXEC.
* 2005/06/27 DELETE DMC A.MASUDA END   <--
ENDIF.
*      CONTINUE.
*    ENDAT.
ENDIF.
*   表示項目削除
*    PERFORM FRM_DELETE_DISP_OF_SAME_KEY USING <FS>.

LW_EXEC-KUNNR_KEY = LW_EXEC_ES-KUNNR_KEY.
LW_EXEC-KDMAT_KEY = LW_EXEC_ES-KDMAT_KEY.
LW_EXEC-MATNR_KEY = LW_EXEC_ES-MATNR_KEY.
LW_EXEC-KSTBM_V   = LW_EXEC_ES-KSTBM_V.
LW_EXEC-KBETR_V   = LW_EXEC_ES-KBETR_V.
LW_EXEC-KSTBM_M   = LW_EXEC_ES-KSTBM_M.
LW_EXEC-KBETR_M   = LW_EXEC_ES-KBETR_M.
LW_EXEC-LIFNR     = LW_EXEC_ES-LIFNR.
LW_EXEC-LNAME     = LW_EXEC_ES-LNAME.
ENDLOOP.


ENDFORM.                    " FRM_DELETE_DKEYREC
*&--------------------------------------------------------------------*
*&      Form  FRM_DELETE_DISP_OF_SAME_KEY
*&--------------------------------------------------------------------*
*       表示項目内容削除（非表示エリア）
*---------------------------------------------------------------------*
FORM FRM_DELETE_DISP_OF_SAME_KEY USING PF_EXEC LIKE GF_EXEC.

CLEAR: PF_EXEC-KDMAT,"得意先品目
PF_EXEC-MATNR,"品目コード
PF_EXEC-MATKL,"品目グループ
*         PF_EXEC-KBETR_V,"受注単価
PF_EXEC-KONWA_V,"受注通貨
PF_EXEC-MSEH3_V,"受注数量単位
PF_EXEC-MAKTX."品目名

ENDFORM.                    " FRM_DELETE_DISP_OF_SAME_KEY
**** START ADD 2014/12/15 ISID18 ****
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_INPUT
*&---------------------------------------------------------------------*
*      選択画面入力項目チェック
*----------------------------------------------------------------------*
FORM FRM_CHECK_INPUT .

DATA:
L_WAERS      TYPE T001-WAERS,            "通貨
L_VKORG      TYPE TVKO-VKORG,            "販売組織
L_EKORG      TYPE T024E-EKORG,           "購買組織
L_RNG_WERKS  TYPE RANGE_T_WERKS,         "プラント
LT_RNG_WERKS TYPE RANGE_T_WERKS.         "プラント

* 選択画面の会社コードの存在チェックを行う
SELECT SINGLE WAERS
INTO L_WAERS
FROM T001
WHERE BUKRS = PR_BUKRS.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'PR_BUKRS'.
MESSAGE E016(Z3) WITH PR_BUKRS.
*   会社コード & が存在しません
ENDIF.

* 選択画面の会社コードの権限チェックを行う
AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
ID 'BUKRS' FIELD PR_BUKRS          "対象会社コード
ID 'ACTVT' FIELD '03'.

IF SY-SUBRC <> 0.
SET CURSOR FIELD 'PR_BUKRS'.
MESSAGE E015(Z3) WITH PR_BUKRS.
*   会社コード & では実行する権限がありません。
ENDIF.

* 会社コードと販売組織の関連チェック
SELECT SINGLE VKORG
INTO L_VKORG
FROM TVKO
WHERE VKORG = PR_VKORG
AND BUKRS = PR_BUKRS.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'PR_VKORG'.
MESSAGE E077(Z3) WITH PR_BUKRS PR_VKORG.
*   会社コード&と販売組織&の組合せチェックが失敗しました。
ENDIF.

* 会社コードと購買組織の関連チェック
SELECT SINGLE EKORG
INTO L_EKORG
FROM T024E
WHERE EKORG = PR_EKORG
AND BUKRS = PR_BUKRS.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'PR_EKORG'.
MESSAGE E078(Z3) WITH PR_BUKRS PR_EKORG.
*   会社コード&と購買組織&の組合せチェックが失敗しました。
ENDIF.

* プラントチェック
CLEAR L_RNG_WERKS.
L_RNG_WERKS = S_WERKS[].
CALL FUNCTION 'ZEG_ZZ_WERKS_CHK'
EXPORTING
IMPBUKRS           = PR_BUKRS
IMPRNGWERKS        = L_RNG_WERKS
IMPORTING
EXPWERKS           = LT_RNG_WERKS
EXCEPTIONS
WERKS_NOT_EXIST    = 1
WERKS_NO_AUTHORITY = 2
WERKS_BUKRS_ERROR  = 3
OTHERS             = 4.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'S_WERKS-LOW' .
MESSAGE ID SY-MSGID TYPE 'E'  NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                    " FRM_CHECK_INPUT
**** END ADD 2014/12/15 ISID18 ****
*Text symbol text・
*001:Purchasing Item
*002:Sales Item
*003:MaterialPriceMaster(Customer)
*004:Key Date
*005:Customer
*006:SalOff
*007:SalOffNm
*Selection text・
*PR_BUKRS:        Company Code
*PR_DATUM:        Selection Key Date
*PR_EKORG:        Purchasing Organization
*PR_SPART:        Division
*PR_VKORG:        Sales Organization
*PR_VTWEG:        Distribution Channel
*SM_KSCHL:        Condition type(Vendor)
*SV_KSCHL:        Condition type(Customer)
*S_KDMAT:        Customer Material Number
*S_KUNNR:        Customer Code
*S_LIFNR:        Vendor Code
*S_MATKL:        Material Group
*S_MATNR:        Material Number
*S_VKBUR:        Sales Office
*S_VKGRP:        Sales Group
*S_WERKS:        Plant
