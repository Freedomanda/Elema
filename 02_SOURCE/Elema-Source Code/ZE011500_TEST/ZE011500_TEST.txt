***********************************************************************
* [プログラム名] EDI受注モニタリスト
*   PROGRAM ID :ZE011500
*
* [処理概要]
*   CONTENTS
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2002/07/30   PSD T.SAITOH      新規開発　
*  2002/08/08   PSD T.SAITOH      品名変更　
*& 2012/09/06   ISID              ES-UP
***********************************************************************
* --- サイズ及びフッタなどの設定をここでする。
REPORT ZE011500
LINE-SIZE 255
LINE-COUNT 65(1) "()の中の数値ははフッタ割当行数
NO STANDARD PAGE HEADING.
*---------------------------------------------------------------------*
* データ宣言(グローバル)
*---------------------------------------------------------------------*
*--- 定数項目を宣言する
* CONSTANTS

*--- 構造／テーブル型　宣言
* 型：TYP_XXX
*  TYPES: BEGIN OF TYP_VBXX,
*    VKBUR TYPE VBAK-VKBUR, "営業所
*    VKGRP TYPE VBAK-VKGRP, "営業グループ
*    KUNNR TYPE VBAK-KUNNR, "得意先コード
*    BSTKD TYPE VBKD-BSTKD, "得意先発注番号
*    VDATU TYPE VBAK-VDATU, "指定納期
*    VBELN TYPE VBAK-VBELN, "販売伝票番号
*    POSNR TYPE VBAP-POSNR, "販売伝票明細
*    MATNR TYPE VBAP-MATNR, "品目コード
*    KDMAT TYPE VBAP-KDMAT, "得意先品目コード
*    KWMENG TYPE VBAP-KWMENG, "数量
*    VRKME TYPE VBAP-VRKME, "数量単位
*    NETPR TYPE VBAP-NETPR, "単価
*    KPEIN TYPE VBAP-KPEIN, "価格数量単位
*    KURSK TYPE VBKD-KURSK, "換算レート
*    ERDAT TYPE VBAP-ERDAT, "登録日付
*    ERZET TYPE VBAP-ERZET, "登録時間
*    ERNAM TYPE VBAK-ERNAM, "ユーザー名
*    WAERK TYPE VBAP-WAERK, "通貨コード
*  END OF TYP_VBXX.
* 販売関連統合内部テーブル宣言
DATA: GT_VBXX TYPE TABLE OF ZELIST_V15 WITH HEADER LINE,
GF_VBXX TYPE ZELIST_V15,
GF_TMP_VBXX TYPE ZELIST_V15.

TABLES: VBAK,VBAP,VBKD.

*―――――――――――――――――――――――――――――――――――*
* リストビューア関連
*―――――――――――――――――――――――――――――――――――*
* ALV用構造
TYPE-POOLS SLIS.

DATA: G_REPID     LIKE SY-REPID,            "レポートID
GF_LAYOUT   TYPE SLIS_LAYOUT_ALV.     "レイアウト構造

** REUSE_ALV_COMMENTARY_WRITE
DATA: GF_HEAD_ALV   TYPE SLIS_LISTHEADER,    "ヘッダ構造
GT_T_HEAD_ALV TYPE SLIS_T_LISTHEADER.  "ヘッダ用内部TBL

** ABAPリストビューアヘッダデータ保持
DATA: GF_HEADER_DATA TYPE ZELIST_V15.         "ヘッダ表示情報

* ↓ APPEND 2002.02.21 PSD M.Arai 発注単価属性変更対応
DATA: GT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV, "フィールドカタログ
GF_FIELDCAT LIKE LINE OF GT_FIELDCAT. "フィールドカタログ(ヘッダ)
* ↑

* REUSE_ALV_LIST_DISPLAY
DATA: TOP_OF_PAGE TYPE SLIS_FORMNAME VALUE 'TOP_OF_PAGE'.

* REUSE_ALV_EVENT
DATA: GT_EVENT TYPE SLIS_T_EVENT,          "イベント情報内部TBL
GF_EVENT LIKE LINE OF GT_EVENT.      "イベント情報構造

* ALV用内部ＴＢＬ
DATA: GT_ALV     TYPE TABLE OF ZELIST_V15
WITH HEADER LINE.

* 印刷設定対応
DATA: GF_PRINT TYPE SLIS_PRINT_ALV.


*---------------------------------------------------------------------*
* 選択画面
*---------------------------------------------------------------------*
* PARAMETERS       PR_XXXXX
* 販売組織
PARAMETERS: PR_VKORG TYPE TVKO-VKORG MEMORY ID VKO OBLIGATORY,
* 流通チャネル
PR_VTWEG TYPE TVTW-VTWEG MEMORY ID VTW OBLIGATORY,
* 製品部門
PR_SPART TYPE TSPA-SPART MEMORY ID SPA OBLIGATORY.

* 登録日付
* SELECT-OPTIONS: S_ERDAT FOR VBAP-ERDAT OBLIGATORY,
SELECT-OPTIONS: S_ERDAT FOR VBAP-ERDAT NO INTERVALS,
* 登録時間
*                S_ERZET FOR VBAP-ERZET OBLIGATORY,
S_ERZET FOR VBAP-ERZET.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 3(48) TEXT-015.
SELECTION-SCREEN END   OF LINE.

* 営業所
*                S_VKBUR FOR VBAK-VKBUR OBLIGATORY,
SELECT-OPTIONS:  S_VKBUR FOR VBAK-VKBUR,
* 営業グループ
S_VKGRP FOR VBAK-VKGRP,
* 得意先
S_KUNNR FOR VBAK-KUNNR,
* 得意先発注番号
S_BSTKD FOR VBKD-BSTKD,
* 品目コード
S_MATNR FOR VBAP-MATNR,
* 得意先品目コード
S_KDMAT FOR VBAP-KDMAT,
* 指定納入先
S_VDATU FOR VBAK-VDATU,
* ユーザＩＤ
* Mod 2003.10.14 >>>>
*                 S_ERNAM FOR VBAK-ERNAM NO INTERVALS OBLIGATORY.
S_ERNAM FOR VBAK-ERNAM NO INTERVALS .
* Mod 2003.10.14 <<<<

*--------------------------------------------------------------------
* INITIALIZATION（プログラム起動時）
*--------------------------------------------------------------------
INITIALIZATION .
*---------------------------------------------------------------------
* AT SELECTION-SCREEN OUTPUT(選択画面設定)
*---------------------------------------------------------------------
AT SELECTION-SCREEN OUTPUT.
*---------------------------------------------------------------------
* AT SELECTION-SCREEN(入力チェック時)
*---------------------------------------------------------------------
AT SELECTION-SCREEN.
* 選択オプションボタン押下時は入力チェック処理をしない
IF SY-UCOMM+0(1) <> '%'.
*   ここに入力チェック処理を記述
*    PERFORM FRM_CHECK_S_ERDAT.
ENDIF.
*---------------------------------------------------------------------
* AT LINE-SELECTION(一覧出力行選択時)
*---------------------------------------------------------------------
AT LINE-SELECTION.
*---------------------------------------------------------------------
* AT USER-COMMAND(ユーザ定義の機能コードを実行時)
*---------------------------------------------------------------------
AT USER-COMMAND.
*---------------------------------------------------------------------
* TOP-OF-PAGE（改ページ時(ヘッダ等)）
*---------------------------------------------------------------------
TOP-OF-PAGE.
*  PERFORM FRM_HEADER.

*---------------------------------------------------------------------
* END-OF-PAGE（改ページ時(フッタ等)）
*---------------------------------------------------------------------
END-OF-PAGE.
*---------------------------------------------------------------------
* START-OF-SELECTION(プログラム開始時)
*---------------------------------------------------------------------
START-OF-SELECTION.
PERFORM FRM_CHECK_S_ERDAT.
* データ抽出
PERFORM FRM_SELECT_VBAK_VBAP_VBKD.

* ALV事前処理
PERFORM FRM_ALV_TABLE.

* 帳票出力
*  PERFORM FRM_OUTPUT.
PERFORM FRM_ALV_OUTPUT.

*---------------------------------------------------------------------
* END-OF-SELECTION(プログラム終了時)
*---------------------------------------------------------------------
END-OF-SELECTION.


*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_TVKBT
*&---------------------------------------------------------------------*
*       営業所
*----------------------------------------------------------------------*
*      <--P_L_VKBUR  営業所名
*----------------------------------------------------------------------*
FORM FRM_SELECT_TVKBT USING    P_L_VKBUR.

SELECT SINGLE BEZEI
INTO P_L_VKBUR
FROM TVKBT
WHERE VKBUR = GF_HEADER_DATA-VKBUR
AND SPRAS = 'J'.

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'TVKBT' SY-SUBRC.
ENDCASE.


ENDFORM.                    " FRM_SELECT_TVKBT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_TVGRT
*&---------------------------------------------------------------------*
*       営業グループ
*----------------------------------------------------------------------*
*      <--P_L_VKGRP  営業グループ
*----------------------------------------------------------------------*
FORM FRM_SELECT_TVGRT USING    P_L_VKGRP.

SELECT SINGLE BEZEI
INTO P_L_VKGRP
FROM TVGRT
WHERE VKGRP = GF_HEADER_DATA-VKGRP
AND SPRAS = 'J'.

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'TVGRT' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SELECT_TVGRT
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_S_ERDAT
*&---------------------------------------------------------------------*
*       登録日付が未入力の場合システム日付を代入する
*----------------------------------------------------------------------*
FORM FRM_CHECK_S_ERDAT.

IF S_ERDAT IS INITIAL.
S_ERDAT-LOW    = SY-DATUM.
S_ERDAT-SIGN   = 'I'.
S_ERDAT-OPTION = 'EQ'.
APPEND S_ERDAT.
ENDIF.

ENDFORM.                    " FRM_CHECK_S_ERDAT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_VBAK_VBAP_VBKD
*&---------------------------------------------------------------------*
*       販売データ抽出
*----------------------------------------------------------------------*
FORM FRM_SELECT_VBAK_VBAP_VBKD.

SELECT VBAK~VKBUR  "営業所
VBAK~VKGRP  "営業グループ
VBAK~KUNNR  "得意先コード
VBAK~VDATU  "希望納期
VBAK~VBELN  "販売伝票番号
VBAK~ERNAM  "ユーザ名
VBAP~POSNR  "明細番号
VBAP~MATNR  "品目コード
VBAP~KDMAT  "得意先品目コード
VBAP~KWMENG "受注数量
VBAP~VRKME  "数量単位
VBAP~NETPR  "受注単価
VBAP~KPEIN  "価格条件単位
VBKD~BSTKD  "得意先発注番号
VBKD~KURSK  "換算レート
VBAP~WAERK  "通貨コード
VBAK~ERDAT  "登録日付
VBAK~ERZET  "登録時間
VBUK~UVALL  "一般ヘッダの不完全ステータス
VBUK~UVALS  "全一般明細の不完全ステータス
VBAP~ABGRU  "拒否理由
VBAP~PSTYV  "明細カテゴリ
*---APPEND START PSD T.SAITOH 2002/08/15 ---------------------------*
VBAK~KNUMV  "伝票条件番号
*---APPEND END   PSD T.SAITOH 2002/08/15 ---------------------------*
INTO CORRESPONDING FIELDS OF TABLE GT_VBXX
FROM ( ( VBAK AS VBAK INNER JOIN VBAP AS VBAP
ON VBAK~VBELN = VBAP~VBELN ) INNER JOIN VBKD AS VBKD
ON VBAP~VBELN = VBKD~VBELN ) INNER JOIN VBUK AS VBUK
ON VBAK~VBELN = VBUK~VBELN
WHERE VBAK~VKBUR IN S_VKBUR  "営業所
AND VBAK~VKGRP IN S_VKGRP  "営業グループ
AND VBAK~KUNNR IN S_KUNNR  "得意先コード
AND VBAK~VDATU IN S_VDATU  "希望納期
AND VBAP~MATNR IN S_MATNR  "品目コード
AND VBAP~KDMAT IN S_KDMAT  "得意先品目コード
AND VBAP~ERDAT IN S_ERDAT  "登録日付
AND VBAP~ERZET IN S_ERZET  "登録時間
AND VBKD~BSTKD IN S_BSTKD  "得意先発注番号
AND VBAK~ERNAM IN S_ERNAM  "ユーザ名
AND VBAK~VKORG =  PR_VKORG "販売組織
AND VBAK~VTWEG =  PR_VTWEG "流通チャネル
AND VBAK~SPART =  PR_SPART "製品部門
* Add 2003.10.14 >>>>
And VBAK~BSARK EQ 'DFUE'
* Add 2003.10.14 <<<<
AND VBKD~POSNR = 0.        "販売ビジネスデータ：明細

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
MESSAGE S616(Z1).  "対象データがありません
STOP.
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'VBAK&VBAP&VBKD' SY-SUBRC.
ENDCASE.


ENDFORM.                    " FRM_SELECT_VBAK_VBAP_VBKD
*&---------------------------------------------------------------------*
*&      Form  FRM_OUTPUT
*&---------------------------------------------------------------------*
*       帳票出力
*----------------------------------------------------------------------*
FORM FRM_OUTPUT.

DATA:L_F_VBELN(10) TYPE C.
DATA:L_S_VBELN(10) TYPE C.
DATA:L_VRKME(3)    TYPE C.

SORT GT_VBXX BY VKBUR ASCENDING "営業所
VKGRP ASCENDING "営業グループ
KUNNR ASCENDING "得意先コード
BSTKD ASCENDING "得意先発注番号
VDATU ASCENDING "指定納期
VBELN ASCENDING "受注伝票番号
POSNR ASCENDING."受注明細番号

* 明細　色設定
FORMAT COLOR COL_HEADING ON INTENSIFIED OFF.

LOOP AT GT_VBXX INTO GF_VBXX.
*    GF_TMP_VBXX = GF_VBXX.
IF sy-tabix <> 1.
AT NEW VKGRP.
NEW-PAGE.
ENDAT.
ENDIF.
*   出力
WRITE:/0 GF_VBXX-KUNNR,
12 GF_VBXX-BSTKD,
49 GF_VBXX-VDATU.
WRITE  GF_VBXX-VBELN TO L_F_VBELN.
PERFORM FRM_RIGHT_JUSTIFIED USING L_F_VBELN
CHANGING L_S_VBELN.

WRITE:60 L_S_VBELN,
71 GF_VBXX-POSNR,
79 GF_VBXX-MATNR,
99 GF_VBXX-KDMAT,
134 GF_VBXX-KWMENG.


L_VRKME = GF_VBXX-VRKME.
WRITE:159 L_VRKME,
164 GF_VBXX-NETPR CURRENCY GF_VBXX-WAERK DECIMALS 2,
189 GF_VBXX-KPEIN.
*    WRITE 186 GF_VBXX-ERNAM.
WRITE 194(1) SPACE.

ENDLOOP.

* COLOR SET (OFF)
FORMAT COLOR OFF.


ENDFORM.                    " FRM_OUTPUT
*&--------------------------------------------------------------------*
*&      Form  FRM_RIGHT_JUSTIFIED
*&--------------------------------------------------------------------*
*       仕入先コード／得意先コード　右寄せ(コードは１０バイト固定)
*---------------------------------------------------------------------*
*      -->P_TEXT     ０埋め仕入先コード／得意先コード
*      <--P_NEW_TEXT 右寄せされたコード
*---------------------------------------------------------------------*
FORM FRM_RIGHT_JUSTIFIED USING    P_TEXT
CHANGING P_NEW_TEXT.

DATA: L_LEN   TYPE I,"文字サイズ
L_OFF   TYPE I."オフセット

IF P_TEXT IS INITIAL.
EXIT.
ENDIF.

CLEAR: P_NEW_TEXT.

L_LEN = STRLEN( P_TEXT ).
L_OFF = 10 - L_LEN.
P_NEW_TEXT+L_OFF(L_LEN) = P_TEXT.

ENDFORM.                    " FRM_RIGHT_JUSTIFIED
*&---------------------------------------------------------------------*
*&      Form  FRM_HEADER
*&---------------------------------------------------------------------*
*       ヘッダ
*----------------------------------------------------------------------*
FORM FRM_HEADER.

DATA: L_SY-TABIX TYPE P.
DATA: L_VKBUR TYPE TVKBT-BEZEI.
DATA: L_VKGRP TYPE TVGRT-BEZEI.

L_SY-TABIX = SY-TABIX.

CASE SY-PAGNO.
WHEN 1.
READ TABLE GT_VBXX INTO GF_HEADER_DATA INDEX 1.
WHEN OTHERS.
READ TABLE GT_VBXX INTO GF_HEADER_DATA INDEX L_SY-TABIX.
ENDCASE.
* 営業所名
PERFORM FRM_SELECT_TVKBT USING L_VKBUR.
* 営業グループ
PERFORM FRM_SELECT_TVGRT USING L_VKGRP.

* タイトル
WRITE:/90  TEXT-001.
* 営業所
WRITE:/0  TEXT-002,  14 GF_HEADER_DATA-VKBUR, 30 L_VKBUR.
* 営業グループ
WRITE:/0  TEXT-003,  14 GF_HEADER_DATA-VKGRP, 30 L_VKGRP.
SKIP 1.

** 色設定
*  FORMAT COLOR COL_HEADING ON INTENSIFIED.
** ヘッダ
*  WRITE:  /0 TEXT-004, "得意先
*          12 TEXT-005, "得意先発注番号
*          49 TEXT-006, "指定納期
*          62 TEXT-007, "受注伝票番号
*          71 TEXT-008, "受注明細
*          79 TEXT-009, "品目コード
*          99 TEXT-010, "得意先品目コード
*         148 TEXT-011, "数量
*         154 TEXT-012, "数量単位
*         175 TEXT-013, "単価
*         181 TEXT-014. "価格数量単位
*  WRITE 194(1) SPACE.
*  ULINE.
*
** COLOR SET (OFF)
*  FORMAT COLOR OFF.

ENDFORM.                    " FRM_HEADER

*&---------------------------------------------------------------------*
*&      Form  FRM_ALV_OUTPUT
*&---------------------------------------------------------------------*
*       ALV出力
*----------------------------------------------------------------------*
FORM FRM_ALV_OUTPUT.
** ALV用
*  GT_ALV[] = GT_EXEC[].
* 作業用内部ＴＢＬを開放
*  free gt_exec[].

* 印刷設定：ALV統計を印刷しない
GF_PRINT-NO_PRINT_LISTINFOS = 'X'.

GF_LAYOUT-GROUP_CHANGE_EDIT = 'X'.
* フィールドカタログの設定
GF_FIELDCAT-JUST = 'R'.
GF_FIELDCAT-FIELDNAME = 'KBETR_M'.
APPEND GF_FIELDCAT TO GT_FIELDCAT.
GF_FIELDCAT-FIELDNAME = 'KBETR_V'.
APPEND GF_FIELDCAT TO GT_FIELDCAT.

* 使用可能イベントのチェック
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
I_LIST_TYPE     = 0
IMPORTING
ET_EVENTS       = GT_EVENT  "使用可能なイベント取得
EXCEPTIONS
LIST_TYPE_WRONG = 1
OTHERS          = 2.

* 使用イベントに実行するサブルーチン名を設定

LOOP AT GT_EVENT INTO GF_EVENT.
CASE GF_EVENT-NAME.
WHEN 'TOP_OF_PAGE'.
GF_EVENT-FORM = 'FRM_HEADER'.
MODIFY GT_EVENT FROM GF_EVENT.
WHEN 'CALLER_EXIT'.
GF_EVENT-FORM = 'FRM_CALLER_EXIT'.
MODIFY GT_EVENT FROM GF_EVENT.
ENDCASE.
ENDLOOP.

*---APPEND START PSD T.SAITOH 2002/07/29 ---------------------------*
PERFORM FRM_SET_PRINT_PARAMETERS.
*---APPEND END   PSD T.SAITOH 2002/07/29 ---------------------------*

CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM             = 'ZE011500'    "レポートID
* Del ES-UP 2012/09/06 -->
*      I_CALLBACK_TOP_OF_PAGE         = TOP_OF_PAGE   "G_HEAD_FRM
* Del ES-UP 2012/09/06 <--
I_STRUCTURE_NAME               = 'ZELIST_V15'  "構造
IS_LAYOUT                      = GF_LAYOUT     "レイアウト設定
IT_FIELDCAT                    = GT_FIELDCAT   "カタログ設定
I_SAVE                         = 'A'           "レイアウト保存
IT_EVENTS                      = GT_EVENT[]    "イベント設定
IS_PRINT                       = GF_PRINT      "印刷設定
TABLES
T_OUTTAB                       = GT_VBXX[]
EXCEPTIONS
PROGRAM_ERROR                  = 1
OTHERS                         = 2.


ENDFORM.                    " FRM_TEST_OUTPUT
*&-------------------------------------------------------------------*
* ALV CALLER_EXIT
*&-------------------------------------------------------------------*
FORM FRM_CALLER_EXIT USING RS_DATA TYPE SLIS_DATA_CALLER_EXIT.
RS_DATA-CALLBACK_HEADER_TRANSPORT = 'FILITEXTS_TEXT_TRANSPORT'.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FRM_SET_PRINT_PARAMETERS
*&---------------------------------------------------------------------*
*       ALV用強制印刷設定
*----------------------------------------------------------------------*
FORM FRM_SET_PRINT_PARAMETERS.

DATA:LF_PRI_PARAMS LIKE PRI_PARAMS.
TABLES USR01.

SELECT SINGLE * FROM USR01 WHERE BNAME = SY-UNAME.

* プリンタ設定
LF_PRI_PARAMS-PDEST = USR01-SPLD.
* 書式設定
LF_PRI_PARAMS-PAART = 'X_65_255'.

CALL FUNCTION 'SET_PRINT_PARAMETERS'
EXPORTING
DESTINATION                 = LF_PRI_PARAMS-PDEST
IMMEDIATELY                 = 'X'
LAYOUT                      = LF_PRI_PARAMS-PAART
LINE_COUNT                  = 65
LINE_SIZE                   = 255
NEW_LIST_ID                 = 'X'
RELEASE                     = USR01-SPDA
.
* --- 使用すると落ちるため未使用
*  NEW-PAGE PRINT ON PARAMETERS LF_PRI_PARAMS NO DIALOG.

ENDFORM.                    " FRM_SET_PRINT_PARAMETERS
*&---------------------------------------------------------------------*
*&      Form  FRM_ALV_TABLE
*&---------------------------------------------------------------------*
*       ALV設定処理
*----------------------------------------------------------------------*
FORM FRM_ALV_TABLE.

*  DATA:L_F_VBELN(10) TYPE C.
*  DATA:L_S_VBELN(10) TYPE C.
*  DATA:L_VRKME(3)    TYPE C.
DATA:L_KBETR type p decimals 2.

* 内部テーブルに設定する
FIELD-SYMBOLS <fs> LIKE GF_VBXX.
LOOP AT GT_VBXX ASSIGNING <FS>.
*   金額変換
PERFORM FRM_CHANGE_COST USING <FS>-WAERK
<FS>-NETPR
CHANGING <FS>-NETPR.
<FS>-NETPR = <FS>-NETPR * <FS>-KURSK.
*   不完全伝票設定
IF NOT ( <FS>-UVALL = 'C'
AND   <FS>-UVALS = 'C' ).
*     不完全伝票には'X'を設定する
<FS>-UVALX = 'X'.
ENDIF.

*   得意先希望価格
CLEAR L_KBETR.
*---MODIFY START PSD T.SAITOH 2002/08/15 ---------------------------*
PERFORM FRM_SELECT_KONV     USING <FS>-KNUMV
<FS>-POSNR
'EDI1'
'V'
<FS>-KURSK "換算レート
CHANGING L_KBETR.

*    PERFORM FRM_SELECT_EDI1  USING 'V'        "アプリケーション
*                                   'EDI1'     "条件タイプ
*                                   <FS>-KUNNR "得意先
*                                   <FS>-KDMAT "得意先品目
*                                   <FS>-ERDAT "伝票登録日
*                                   <FS>-KURSK "換算レート
*                          CHANGING L_KBETR.   "得意先希望価格
<FS>-EDI1 = L_KBETR.

*   得意先予測額
CLEAR L_KBETR.
PERFORM FRM_SELECT_KONV     USING <FS>-KNUMV
<FS>-POSNR
'EDI2'
'V'
<FS>-KURSK "換算レート
CHANGING L_KBETR.
*   PERFORM FRM_SELECT_EDI1  USING 'V'        "アプリケーション
*                                   'EDI2'     "条件タイプ
*                                   <FS>-KUNNR "得意先
*                                   <FS>-KDMAT "得意先品目
*                                   <FS>-ERDAT "伝票登録日
*                                   <FS>-KURSK "換算レート
*                          CHANGING L_KBETR.   "得意先予測額
<FS>-EDI2 = L_KBETR.
*   得意先原価
CLEAR L_KBETR.
PERFORM FRM_SELECT_KONV USING <FS>-KNUMV
<FS>-POSNR
'VPRS'
'V'
<FS>-KURSK "換算レート
CHANGING L_KBETR.
*    PERFORM FRM_SELECT_EDI1  USING 'V'        "アプリケーション
*                                   'VPRS'     "条件タイプ
*                                   <FS>-KUNNR "得意先
*                                   <FS>-KDMAT "得意先品目
*                                   <FS>-ERDAT "伝票登録日
*                                   <FS>-KURSK "換算レート
*                          CHANGING L_KBETR.   "得意先原価
<FS>-VPRS = L_KBETR.

*   受注単価
CLEAR L_KBETR.
PERFORM FRM_SELECT_KONV USING <FS>-KNUMV
<FS>-POSNR
'ZPR0'
'V'
<FS>-KURSK "換算レート
CHANGING L_KBETR.

<FS>-ZPR0 = L_KBETR.

*---MODIFY END   PSD T.SAITOH 2002/08/15 ---------------------------*


*   得意先名の取得
PERFORM FRM_SELECT_KNAME USING <FS>-KUNNR
CHANGING <FS>-KNAME.

*   品目テキスト
*---MODIFY START PSD T.SAITOH 2002/08/08 ---------------------------*
*    PERFORM FRM_SELECT_MAKT USING <FS>-MATNR
*                         CHANGING <FS>-MAKTX.
PERFORM FRM_READ_TEXT USING    'Z018'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-MAKTX.
*---MODIFY END   PSD T.SAITOH 2002/08/08 ---------------------------*

*   Z001:発注部門コード
PERFORM FRM_READ_TEXT USING    'Z001'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z001.
*   Z002:訂正コード
PERFORM FRM_READ_TEXT USING    'Z002'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z002.
*   Z003:単価区分
PERFORM FRM_READ_TEXT USING    'Z003'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z003.

*   Z004:支給区分
PERFORM FRM_READ_TEXT USING    'Z004'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z004.
*   Z005:購買担当
PERFORM FRM_READ_TEXT USING    'Z005'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z005.
*   Z006:材質・規格・寸法
PERFORM FRM_READ_TEXT USING    'Z006'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z006.
*   Z007:受渡場所
PERFORM FRM_READ_TEXT USING    'Z007'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z007.
*   Z008:検査区分
PERFORM FRM_READ_TEXT USING    'Z008'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z008.
*   Z009:自由使用欄
PERFORM FRM_READ_TEXT USING    'Z009'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z009.
*   Z010:備考
PERFORM FRM_READ_TEXT USING    'Z010'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z010.
*   Z011:消費税区分
PERFORM FRM_READ_TEXT USING    'Z011'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z011.
*   Z012:納入先宛先名
PERFORM FRM_READ_TEXT USING    'Z012'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z012.
*   Z013:受渡場所名
PERFORM FRM_READ_TEXT USING    'Z013'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z013.
*   Z014:発注者用バーコード情報
PERFORM FRM_READ_TEXT USING    'Z014'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z014.
*   Z015:発注者用備考
PERFORM FRM_READ_TEXT USING    'Z015'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z015.
*   Z016:単価（外貨）
PERFORM FRM_READ_TEXT USING    'Z016'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z016.
*   Z017:直納区分
PERFORM FRM_READ_TEXT USING    'Z017'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z017.
*   Z018:品名（品名仕様）
PERFORM FRM_READ_TEXT USING    'Z018'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z018.
*   Z021:製造番号
PERFORM FRM_READ_TEXT USING    'Z021'
<FS>-VBELN
<FS>-POSNR
'VBBK'
CHANGING    <FS>-Z021.
*   Z901:納入番号
PERFORM FRM_READ_TEXT USING    'Z901'
<FS>-VBELN
<FS>-POSNR
'VBBP'
CHANGING    <FS>-Z901.
*   Z902:納品キー番号
PERFORM FRM_READ_TEXT USING    'Z902'
<FS>-VBELN
<FS>-POSNR
'VBBP'
CHANGING    <FS>-Z902.

ENDLOOP.

ENDFORM.                    " FRM_ALV_TABLE
*&---------------------------------------------------------------------*
*&      Form  FRM_CHANGE_COST
*&---------------------------------------------------------------------*
*       金額変換処理
*----------------------------------------------------------------------*
*      -->P_TSUKACD  通貨コード
*      -->P_KINGAKU  変換前金額
*      <--P_HENKAN   変換後金額
*----------------------------------------------------------------------*
FORM FRM_CHANGE_COST    USING    P_TSUKACD
P_KINGAKU
CHANGING P_HENKAN.
DATA : L_AMOUNT_DIS TYPE WMTO_S-AMOUNT,
L_AMOUNT_INT TYPE WMTO_S-AMOUNT.
L_AMOUNT_INT = P_KINGAKU.
*--- 汎用モジュール金額変換モジュール
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_DISPLAY'
EXPORTING
CURRENCY        = P_TSUKACD
AMOUNT_INTERNAL = L_AMOUNT_INT
IMPORTING
AMOUNT_DISPLAY  = L_AMOUNT_DIS
EXCEPTIONS
INTERNAL_ERROR  = 1
OTHERS          = 2.
IF SY-SUBRC <> 1.
P_HENKAN = L_AMOUNT_DIS.
ENDIF.

ENDFORM.                    " FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_MAKT
*&---------------------------------------------------------------------*
*       品目テキスト取得
*----------------------------------------------------------------------*
FORM FRM_SELECT_MAKT USING P_MATNR
CHANGING P_MAKTX.

SELECT SINGLE MAKTX
INTO P_MAKTX
FROM MAKT
WHERE MATNR = P_MATNR
AND SPRAS = 'J'.

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'MAKT' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SELECT_MAKT
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT
*&---------------------------------------------------------------------*
*       テキスト取得
*----------------------------------------------------------------------*
*      -->P_ID      テキストID
*      -->P_VBELN   販売伝票
*      -->P_POSNR   明細
*      -->P_OBJECT  オブジェクト VBBK:ヘッダ VBBP:明細
*      <--P_TDLINE  取得テキスト
*----------------------------------------------------------------------*
FORM FRM_READ_TEXT USING    P_ID
P_VBELN
P_POSNR
P_OBJECT
CHANGING P_TDLINE.

DATA: LT_TLINE    TYPE TABLE OF TLINE,
LF_TLINE    TYPE TLINE,
L_VBELN     LIKE THEAD-TDNAME.

CASE P_OBJECT.
WHEN 'VBBK'.
L_VBELN = P_VBELN.
WHEN 'VBBP'.
CONCATENATE P_VBELN P_POSNR INTO L_VBELN.
WHEN OTHERS.
EXIT.
ENDCASE.

*--- 汎用モジュール『READ_TEXT』
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID        = P_ID
LANGUAGE  = 'J'
NAME      = L_VBELN
OBJECT    = P_OBJECT
TABLES
LINES     = LT_TLINE
EXCEPTIONS
NOT_FOUND = 4
OTHERS    = 8.
CASE SY-SUBRC.
WHEN 0.
READ TABLE LT_TLINE INTO LF_TLINE INDEX 1.
P_TDLINE = LF_TLINE-TDLINE.
WHEN 8.
*--- エラーメッセージ出力処理
MESSAGE A502(Z1) WITH 'READ_TEXT'
SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_READ_TEXT
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_KNAME
*&---------------------------------------------------------------------*
*       得意先名の設定
*----------------------------------------------------------------------*
*      -->P_KUNNR  得意先コード
*      <--P_KNAME  得意先名
*----------------------------------------------------------------------*
FORM FRM_SELECT_KNAME USING P_KUNNR
CHANGING P_KNAME.

SELECT SINGLE NAME1
INTO P_KNAME
FROM KNA1
WHERE KUNNR = P_KUNNR
AND SPRAS = 'J'.

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'KNA1' SY-SUBRC.
ENDCASE.


ENDFORM.                    " FRM_SELECT_KNAME
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_EDI1
*&---------------------------------------------------------------------*
*       条件TBLから価格を取得
*----------------------------------------------------------------------*
*      -->P_KAPPL   アプリケーション
*      -->P_KSCHL   条件タイプ
*      -->P_KUNNR   得意先コード
*      -->P_KDMAT   得意先品目コード
*      -->P_ERDAT   登録時間
*      -->P_KURSK   換算レート
*      <--P_KBETR   金額
*----------------------------------------------------------------------*
FORM FRM_SELECT_EDI1 USING    VALUE(P_KAPPL)
VALUE(P_KSCHL)
P_KUNNR
P_KDMAT
P_ERDAT
P_KURSK
CHANGING P_KBETR.

DATA:L_KONWA TYPE KONP-KONWA."通貨

SELECT SINGLE KONP~KBETR
KONP~KONWA
INTO (P_KBETR,
L_KONWA)
FROM ( A901 AS A901 INNER JOIN KONH AS KONH
ON   A901~KNUMH = KONH~KNUMH ) INNER JOIN KONP AS KONP
ON   A901~KNUMH = KONP~KNUMH
WHERE   A901~KAPPL     = P_KAPPL
AND   A901~KSCHL     = P_KSCHL
AND   A901~VKORGAU   = PR_VKORG
AND   A901~VTWEG     = PR_VTWEG
AND   A901~SPART     = PR_SPART
AND   A901~KUNNR     = P_KUNNR
AND   A901~ZZZKDMAT  = P_KDMAT
AND   A901~DATBI    >= P_ERDAT
AND   A901~DATAB    <= P_ERDAT
AND   KONP~LOEVM_KO  = SPACE
AND   KONP~KOPOS     = '01'
AND   KONH~KVEWE     = 'A'.

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
EXIT.
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'A901&KONH&KONP' SY-SUBRC.
ENDCASE.

*  価格変換
PERFORM FRM_CHANGE_COST USING L_KONWA
P_KBETR
CHANGING P_KBETR.

*  換算レート
CASE P_KURSK.
WHEN 0.
P_KBETR = P_KBETR * 1.
WHEN OTHERS.
P_KBETR = P_KBETR * P_KURSK.
ENDCASE.


ENDFORM.                    " FRM_SELECT_EDI1
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_KONV
*&---------------------------------------------------------------------*
*       条件トランザクションテーブルからデータ取得
*----------------------------------------------------------------------*
*      -->P_<FS>_KNUMV  伝票条件番号
*      -->P_<FS>_POSNR  明細番号
*      -->P_KSCHL       条件タイプ
*      -->P_KAPPL       アプリケーション
*      -->P_KURSK       換算レート
*      <--P_L_KBETR  text
*----------------------------------------------------------------------*
FORM FRM_SELECT_KONV     USING    P_KNUMV
P_POSNR
VALUE(P_KSCHL)
VALUE(P_KAPPL)
P_KURSK
CHANGING P_KBETR type p.

DATA:L_WAERS TYPE KONV-WAERS."通貨

SELECT KBETR "条件レート
WAERS "通貨
INTO (P_KBETR,
L_WAERS )
FROM KONV
WHERE KNUMV = P_KNUMV "伝票条件番号
AND KPOSN = P_POSNR "伝票条件明細
AND KAPPL = P_KAPPL "アプリケーション
AND KSCHL = P_KSCHL."条件タイプ

*    価格変換
PERFORM FRM_CHANGE_COST USING L_WAERS
P_KBETR
CHANGING P_KBETR.

*    換算レート
CASE P_KURSK.
WHEN 0.
P_KBETR = P_KBETR * 1.
WHEN OTHERS.
P_KBETR = P_KBETR * P_KURSK.
ENDCASE.

EXIT.
ENDSELECT.

CASE SY-SUBRC.
WHEN 0.
WHEN 4. " NO-DATA
WHEN 8. " SYSTEM ERROR
MESSAGE A603(Z1) WITH SY-REPID 'KONV' SY-SUBRC.
ENDCASE.

ENDFORM.                    " FRM_SELECT_KONV
