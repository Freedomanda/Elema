*&---------------------------------------------------------------------*
*&  Include           ZEGSDR2040_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  INIT_SCREEN_CHK
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
*      <--O_RD_BUKRS   ITAB:対象会社コード
*      <--O_RD_DWERKS  ITAB:出荷プラント
*      <--O_RD_IWERKS  ITAB:入庫プラント
*----------------------------------------------------------------------*
FORM INIT_SCREEN_CHK  CHANGING O_RD_BUKRS  TYPE TYP_RD_BUKRS
O_RD_DWERKS TYPE TYP_RD_DWERKS
O_RD_RWERKS TYPE TYP_RD_RWERKS.

DATA:
LTD_BUKRS     TYPE STANDARD TABLE OF TYP_BUKRS,  "ITAB:会社
LTD_DWERKS    TYPE STANDARD TABLE OF TYP_DWERKS, "ITAB:出荷プラント
LTD_RWERKS    TYPE STANDARD TABLE OF TYP_DWERKS, "ITAB:入庫プラント
LW_WERKS      TYPE T001W-WERKS,                  "出荷プラント
LST_RD_BUKRS  TYPE TYP_RH_BUKRS,                 "STRU:会社
LST_RD_DWERKS TYPE TYP_RH_DWERKS,                "STRU:出荷プラント
LST_RD_RWERKS TYPE TYP_RH_RWERKS,                "STRU:入庫プラント
LST_BUKRS     TYPE TYP_BUKRS,                    "LOOP会社
LST_DWERKS    TYPE TYP_DWERKS,                   "LOO出荷プラント
LST_RWERKS    TYPE TYP_DWERKS.                   "LOO入庫プラント

* 入力チェック
CLEAR:
O_RD_BUKRS,
O_RD_DWERKS,
O_RD_RWERKS.

* 会社コ‐ド（Company Code）存在チェック
SELECT BUKRS                      "会社コ‐ド
INTO TABLE LTD_BUKRS
FROM T001
WHERE BUKRS IN S_BUKRS.

* （1）．存在しない場合、エラ‐メッセ‐ジを出力し処理を終了する
IF SY-SUBRC <> 0.

SET CURSOR FIELD 'S_BUKRS-LOW'.
MESSAGE E057(ZMEGSD01) WITH SPACE.
*   会社コード&1は存在しません

ENDIF.

* 出荷プラント(Delivering Plant)存在チェック
* プラント/支店(T001W)より、指定画面の出荷プラントの存在チェックをする
SELECT WERKS                      "プラント
INTO LW_WERKS
FROM T001W
UP TO 1 ROWS
WHERE WERKS IN S_DWERKS.         "出荷プラント
ENDSELECT.

* 存在しない場合、エラーメッセージを出力し処理を終了する
IF SY-SUBRC <> 0.

SET CURSOR FIELD 'S_DWERKS-LOW'.
MESSAGE E058(ZMEGSD01) WITH SPACE.
*   出荷プラント&1は存在しません

ENDIF.

* 入庫プラント(Receiving Plant)存在チェック
SELECT WERKS                      "プラント
INTO LW_WERKS
FROM T001W
UP TO 1 ROWS
WHERE WERKS IN S_RWERKS.         "入庫プラント
ENDSELECT.

* 存在しない場合、エラーメッセージを出力し処理を終了する
IF SY-SUBRC <> 0.

SET CURSOR FIELD 'S_RWERKS-LOW'.
MESSAGE E059(ZMEGSD01) WITH SPACE.
*   入庫プラント&1は存在しません

ENDIF.

* 処理区分の入力チェック
* 出庫確認(Delivery Issue)、出庫取消(Delivery Reverse)、
* 入庫取消(Receiving Cancel)ともチェックされてない場合
IF CB_ISSUE IS INITIAL
AND CB_REVER IS INITIAL
AND CB_CANCE IS INITIAL.

*   エラーメッセージを出力し処理を終了する
SET CURSOR FIELD 'CB_ISSUE'.
MESSAGE E063(ZMEGSD01).
*   3つ処理対象区分ともチェックされてない。
*   少なくても一つをチェックください

ENDIF.

* 権限チェック
* 会社コードの権限チェック

CLEAR LST_RD_BUKRS.

LST_RD_BUKRS-SIGN = CNS_RNG_SIGN.
LST_RD_BUKRS-OPTION = CNS_RNG_OPTION.

**** START DEL 2015/03/03 ISID11 ****
*  SORT LTD_BUKRS BY BUKRS ASCENDING.
*  DELETE ADJACENT DUPLICATES FROM LTD_BUKRS
*                        COMPARING BUKRS.
**** END DEL 2015/03/03 ISID11 ****

LOOP AT LTD_BUKRS INTO LST_BUKRS.

AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
ID 'BUKRS' FIELD LST_BUKRS-BUKRS
ID 'ACTVT' FIELD '01'.

IF SY-SUBRC = 0.

LST_RD_BUKRS-LOW = LST_BUKRS-BUKRS.
APPEND LST_RD_BUKRS TO O_RD_BUKRS.

ENDIF.

ENDLOOP.

* 全ての会社コードの権限がない場合
IF O_RD_BUKRS IS INITIAL.

SET CURSOR FIELD 'S_BUKRS-LOW'.
MESSAGE E001(ZMEGSD01).
*   会社コードに対する実行権限がありません

ENDIF.

* 整合性チェック
* 会社コードと出荷プラントの整合性チェック
* 割当プラント - 会社コード(V_T001K_ASSIGN)より、
* 指定画面の出荷プラントの存在チェックをする
SELECT T001W~WERKS
INTO TABLE LTD_DWERKS
FROM T001K
INNER JOIN T001W
ON T001K~BWKEY = T001W~BWKEY
WHERE T001W~WERKS IN S_DWERKS       "出荷プラント
AND T001K~BUKRS IN O_RD_BUKRS.    "ITAB:対象会社コード

*  SELECT werks
*    INTO TABLE LTD_dwerks
*    FROM V_T001K_ASSIGN
*   WHERE WERKS in S_DWERKS       "出荷プラント
*     and BUKRS in O_RD_BUKRS.    "ITAB:対象会社コード

* 存在しない場合、エラーメッセージを出力し処理を終了する
IF SY-SUBRC <> 0.

SET CURSOR FIELD 'S_DWERKS-LOW'.
MESSAGE E060(ZMEGSD01).
*   指定された会社コードと出荷プラントの整合性がありません

ENDIF.

SORT LTD_DWERKS BY WERKS ASCENDING.

LST_RD_DWERKS-SIGN = CNS_RNG_SIGN.
LST_RD_DWERKS-OPTION = CNS_RNG_OPTION.

* ITAB:出荷プラント作成
LOOP AT LTD_DWERKS INTO LST_DWERKS.

LST_RD_DWERKS-LOW = LST_DWERKS-WERKS.
APPEND LST_RD_DWERKS TO O_RD_DWERKS.

ENDLOOP.

* 会社コードと入庫プラントの整合性チェック
SELECT T001W~WERKS
INTO TABLE LTD_RWERKS
FROM T001K
INNER JOIN T001W
ON T001K~BWKEY = T001W~BWKEY
WHERE T001W~WERKS IN S_RWERKS       "入庫プラント
AND T001K~BUKRS IN O_RD_BUKRS.    "ITAB:対象会社コード

*  SELECT werks
*    INTO TABLE LTD_rwerks
*    FROM V_T001K_ASSIGN
*   WHERE WERKS in S_RWERKS       "入庫プラント
*     and BUKRS in O_RD_BUKRS.    "ITAB:対象会社コード

* 存在しない場合、エラーメッセージを出力し処理を終了する
IF SY-SUBRC <> 0.

SET CURSOR FIELD 'S_RWERKS-LOW'.
MESSAGE E061(ZMEGSD01).
*   指定された会社コードと入庫プラントの整合性がありません

ENDIF.

SORT LTD_RWERKS BY WERKS ASCENDING.

LST_RD_RWERKS-SIGN = CNS_RNG_SIGN.
LST_RD_RWERKS-OPTION = CNS_RNG_OPTION.

* ITAB:出荷プラント作成
LOOP AT LTD_RWERKS INTO LST_RWERKS.

LST_RD_RWERKS-LOW = LST_RWERKS-WERKS.
APPEND LST_RD_RWERKS TO O_RD_RWERKS.

ENDLOOP.

* 登録日付と登録時刻の整合性チェック
* 指定画面の登録時刻が初期値ではない場合、登録日付を確認する
IF S_CPUTM IS NOT INITIAL.

*   登録日付が初期値の場合、エラーメッセージを出力し処理を終了する
IF S_CPUDT IS INITIAL.

SET CURSOR FIELD 'S_CPUDT-LOW'.
MESSAGE E019(ZMEGSD01).
*     登録日付を指定してください

ENDIF.

ENDIF.

ENDFORM.                    " INIT_SCREEN_CHK
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_MAIN
*&---------------------------------------------------------------------*
*       データ抽出編集処理
*----------------------------------------------------------------------*
*      -->I_RD_BUKRS         ITAB:対象会社コード
*      -->I_RD_DWERKS        ITAB:出荷プラント
*      -->I_RD_RWERKS        ITAB:入庫プラント
*      -->I_SYST_DATE        システム日付
*      -->I_SYST_TIME        システム時刻
*      -->I_JOBID            ジョブID
*      <--O_SEQNO            連番
*      <--O_TD_DELIISSUE     ITAB:出庫確認連携データ
*      <--O_TD_DELIREVER     ITAB:出庫取消連携データ
*      <--O_TD_RECCANCEL     ITAB:出庫取消連携データ
*      <--O_TD_ERROR         ITAB:入庫取消連携データ
*----------------------------------------------------------------------*
FORM GET_DATA_MAIN USING
**** START DEL 2015/03/03 ISID11 ****
*                         I_RD_BUKRS      TYPE TYP_RD_BUKRS
*                         I_RD_DWERKS     TYPE TYP_RD_DWERKS
*                         I_RD_RWERKS     TYPE TYP_RD_RWERKS
**** END DEL 2015/03/03 ISID11 ****
I_SYST_DATE     TYPE SY-DATUM
I_SYST_TIME     TYPE SY-UZEIT
I_JOBID         TYPE ZTEGSDT202-JOBID
CHANGING O_SEQNO         TYPE ZTEGSDT202-SEQNO
O_TD_DELIISSUE  TYPE TYP_TD_STOCK
O_TD_DELIREVER  TYPE TYP_TD_STOCK
O_TD_RECCANCEL  TYPE TYP_TD_STOCK
O_TD_ERROR      TYPE TYP_TD_ERROR.

DATA:
**** START ADD 2015/03/03 ISID11 ****
LTD_BUKRS_FLG   TYPE TYP_TD_BUKRS_FLG,      "ITAB:明細基準
**** END ADD 2015/03/03 ISID11 ****
LW_JOB_DATE_F   TYPE ZTEGSDT202-JOB_DATE,   "実行日付From
LW_JOB_TIME_F   TYPE ZTEGSDT202-JOB_TIME,   "実行時刻From
LW_JOB_DATE_T   TYPE ZTEGSDT202-JOB_DATE,   "実行日付To
LW_JOB_TIME_T   TYPE ZTEGSDT202-JOB_TIME.   "実行時刻To

* 対象期間の取得処理
PERFORM GET_DATE_JOB USING I_SYST_DATE
I_SYST_TIME
I_JOBID
CHANGING O_SEQNO
LW_JOB_DATE_F
LW_JOB_TIME_F
LW_JOB_DATE_T
LW_JOB_TIME_T.

**** START ADD 2015/03/03 ISID11 ****
* 本社及び明細分割情報を取得する
PERFORM GET_SINGLE_FLG CHANGING LTD_BUKRS_FLG.
**** END ADD 2015/03/03 ISID11 ****

* 入出庫対象データの取得処理
PERFORM GET_DATA_STOCK USING LW_JOB_DATE_F
LW_JOB_TIME_F
LW_JOB_DATE_T
LW_JOB_TIME_T
**** START ADD 2015/03/03 ISID11 ****
LTD_BUKRS_FLG
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_DELIISSUE
O_TD_DELIREVER
O_TD_RECCANCEL
O_TD_ERROR.

ENDFORM.                    " GET_DATA_MAIN
*&---------------------------------------------------------------------*
*&      Form  GET_DATE_JOB
*&---------------------------------------------------------------------*
*       対象期間の取得処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE   システム日付
*      -->I_SYST_TIME   システム時刻
*      -->I_JOBID       ジョブID
*      <--O_SEQNO       連番
*      <--O_JOB_DATE_F  実行日付From
*      <--O_JOB_TIME_F  実行時刻From
*      <--O_JOB_DATE_T  実行日付To
*      <--O_JOB_TIME_T  実行時刻To
*----------------------------------------------------------------------*
FORM GET_DATE_JOB  USING I_SYST_DATE    TYPE SY-DATUM
I_SYST_TIME    TYPE SY-UZEIT
I_JOBID        TYPE ZTEGSDT202-JOBID
CHANGING O_SEQNO        TYPE ZTEGSDT202-SEQNO
O_JOB_DATE_F   TYPE ZTEGSDT202-JOB_DATE
O_JOB_TIME_F   TYPE ZTEGSDT202-JOB_TIME
O_JOB_DATE_T   TYPE ZTEGSDT202-JOB_DATE
O_JOB_TIME_T   TYPE ZTEGSDT202-JOB_TIME.

* 指定画面の登録日付(Create Date)が初期値の場合
IF S_CPUDT[] IS INITIAL.

*   ジョブ実行履歴テーブルのロック
PERFORM LOCK_ZTEGSDT202 USING I_JOBID
CHANGING O_SEQNO
O_JOB_DATE_F
O_JOB_TIME_F.

*   今回実行日付と時刻の設定
O_JOB_DATE_T = I_SYST_DATE.               "システム日付
O_JOB_TIME_T = I_SYST_TIME.               "システム時刻

ELSE.

O_JOB_DATE_F = S_CPUDT-LOW.
O_JOB_TIME_F = S_CPUTM-LOW.

*   指定画面の登録日付Fromのみ指定された場合
IF S_CPUDT-LOW IS NOT INITIAL AND
S_CPUDT-HIGH IS INITIAL.

O_JOB_DATE_T = S_CPUDT-LOW.

ELSE.

O_JOB_DATE_T = S_CPUDT-HIGH.

ENDIF.

*   指定画面の登録日付FromとToとも指定された場合
*   以下の通り、発注登録日付を設定する
IF S_CPUTM-HIGH IS INITIAL.
O_JOB_TIME_T = CNS_TIME_MAX.
ELSE.
O_JOB_TIME_T = S_CPUTM-HIGH.
ENDIF.

ENDIF.

ENDFORM.                    " GET_DATE_JOB
*&---------------------------------------------------------------------*
*&      Form  LOCK_ZTEGSDT202
*&---------------------------------------------------------------------*
*       ジョブ実行履歴テーブルのロック
*----------------------------------------------------------------------*
*      -->I_JOBID       ジョブID
*      <--O_SEQNO       連番
*      <--O_JOB_DATE_F  実行日付From
*      <--O_JOB_TIME_F  実行時刻From
*----------------------------------------------------------------------*
FORM LOCK_ZTEGSDT202 USING I_JOBID        TYPE ZTEGSDT202-JOBID
CHANGING O_SEQNO        TYPE ZTEGSDT202-SEQNO
O_JOB_DATE_F   TYPE ZTEGSDT202-JOB_DATE
O_JOB_TIME_F   TYPE ZTEGSDT202-JOB_TIME.

CALL FUNCTION 'ENQUEUE_EZZTEGSDT202'
EXPORTING
MODE_ZTEGSDT202 = 'E'
JOBID           = I_JOBID
EXCEPTIONS
FOREIGN_LOCK    = 1
SYSTEM_FAILURE  = 2
OTHERS          = 3.

IF SY-SUBRC <> 0.

MESSAGE ID SY-MSGID TYPE CNS_MSG_S NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
DISPLAY LIKE CNS_MSG_E.
LEAVE LIST-PROCESSING.

ENDIF.

* ジョブ実行履歴テーブルにより、前回実行日付と時刻を取得する
SELECT SEQNO      "連番
JOB_DATE   "実行日付
JOB_TIME   "実行時刻
INTO (O_SEQNO, O_JOB_DATE_F, O_JOB_TIME_F)
UP TO 1 ROWS
FROM ZTEGSDT202
WHERE JOBID = I_JOBID
ORDER BY SEQNO DESCENDING.
ENDSELECT.

**** START ADD 2015/03/03 ISID11 ****
IF SY-SUBRC <> 0.

CLEAR:
O_SEQNO,
O_JOB_DATE_F,
O_JOB_TIME_F.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

ENDFORM.                    " LOCK_ZTEGSDT202
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_JOB
*&---------------------------------------------------------------------*
*       ジョブ処理
*----------------------------------------------------------------------*
*      -->I_RD_BUKRS    ITAB:対象会社コード
*      -->I_RD_DWERKS   ITAB:出荷プラント
*      -->I_RD_RWERKS   ITAB:入庫プラント
*----------------------------------------------------------------------*
FORM EXCUTE_JOB.
**** START DEL 2015/03/03 ISID11 ****
*                 USING I_RD_BUKRS  TYPE TYP_RD_BUKRS
*                       I_RD_DWERKS TYPE TYP_RD_DWERKS
*                       I_RD_RWERKS TYPE TYP_RD_RWERKS.
**** END DEL 2015/03/03 ISID11 ****
DATA:
LW_ERROR_FLG    TYPE FLAG,                 "エラーフラグ
LW_SEQNO        TYPE ZTEGSDT202-SEQNO,     "連番
LW_SYST_DATE    TYPE SY-DATUM,             "システム日付
LW_SYST_TIME    TYPE SY-UZEIT,             "システム時刻
LW_JOBID        TYPE ZTEGSDT202-JOBID,     "ジョブID
**** START ADD BY ISID REN 2015/07/03 ****
LTD_D_C         TYPE TYP_TD_STOCK,         "出庫確認連携データ
**** END ADD BY ISID REN 2015/07/03 ****
LTD_DELIISSUE   TYPE TYP_TD_STOCK, "ITAB:出庫確認連携データ
LTD_DELIREVER   TYPE TYP_TD_STOCK, "ITAB:出庫取消連携データ
LTD_RECCANCEL   TYPE TYP_TD_STOCK, "ITAB:入庫取消連携データ
LTD_ERROR       TYPE TYP_TD_ERROR. "ITAB:入出庫連携エラーデータ


LW_SYST_DATE = SY-DATUM.                    "システム日付
LW_SYST_TIME = SY-UZEIT.                    "システム時刻

CONCATENATE SY-CPROG '-' SY-SLSET INTO LW_JOBID.

* データ抽出編集処理
PERFORM GET_DATA_MAIN USING
**** START DEL 2015/03/03 ISID11 ****
*                              I_RD_BUKRS      "ITAB:対象会社コード
*                              I_RD_DWERKS     "ITAB:出荷プラント
*                              I_RD_RWERKS     "ITAB:入庫プラント
**** END DEL 2015/03/03 ISID11 ****
LW_SYST_DATE    "システム日付
LW_SYST_TIME    "システム時刻
LW_JOBID        "ジョブID
CHANGING LW_SEQNO        "連番
LTD_DELIISSUE   "ITAB:出庫確認連携データ
LTD_DELIREVER   "ITAB:出庫取消連携データ
LTD_RECCANCEL   "ITAB:入庫取消連携データ
LTD_ERROR.  "ITAB:入出庫連携エラーデータ

* 入出庫更新処理
* 以下の内部テーブルともデータ存在しない場合、
* メッセージを出力し処理を終了する
IF LTD_DELIISSUE IS INITIAL                 "ITAB:出庫確認連携データ
AND LTD_DELIREVER IS INITIAL                "ITAB:出庫取消連携データ
AND LTD_RECCANCEL IS INITIAL                "ITAB:入庫取消連携データ
**** START ADD 2015/03/03 ISID11 ****
AND LTD_ERROR IS INITIAL.              "ITAB:入出庫連携エラーデータ
**** END ADD 2015/03/03 ISID11 ****


MESSAGE S064(ZMEGSD01).
*   対象データが存在しません

LEAVE LIST-PROCESSING.

ENDIF.

* 入出庫更新処理
PERFORM EDIT_DATA_MAIN USING LW_SYST_DATE    "システム日付
LW_SYST_TIME    "システム時刻
CHANGING LTD_DELIISSUE   "ITAB:出庫確認連携データ
LTD_DELIREVER   "ITAB:出庫取消連携データ
LTD_RECCANCEL   "ITAB:入庫取消連携データ
**** START ADD BY ISID REN 2015/07/03 ****
LTD_D_C         "出庫確認連携データ
**** END ADD BY ISID REN 2015/07/03 ****
LTD_ERROR   "ITAB:入出庫連携エラーデータ
LW_ERROR_FLG.

IF LW_ERROR_FLG IS NOT INITIAL.

**** START ADD 2015/03/03 ISID11 ****
*   ロックの解除
CALL FUNCTION 'DEQUEUE_ALL'.
**** END ADD 2015/03/03 ISID11 ****

LEAVE LIST-PROCESSING.

ENDIF.

* エラーデータ更新&出力処理
PERFORM UPDATE_ERROR_DATA
USING LW_SYST_DATE    "システム日付
LW_SYST_TIME    "システム時刻
LW_JOBID        "ジョブID
LW_SEQNO        "連番
**** START ADD BY ISID REN 2015/07/03 ****
LTD_D_C         "入庫連携されているデータ
**** END ADD BY ISID REN 2015/07/03 ****
CHANGING LTD_ERROR.      "ITAB:入出庫連携エラーデータ

ENDFORM.                    " EXCUTE_JOB
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_STOCK
*&---------------------------------------------------------------------*
*       入出庫対象データの取得処理
*----------------------------------------------------------------------*
*      -->I_JOB_DATE_F    実行日付From
*      -->I_JOB_TIME_F    実行時刻From
*      -->I_JOB_DATE_T    実行日付To
*      -->I_JOB_TIME_T    実行時刻To
*      <--O_TD_DELIISSUE  ITAB:出庫確認連携データ
*      <--O_TD_DELIREVER  ITAB:出庫取消連携データ
*      <--O_TD_RECCANCEL  ITAB:出庫取消連携データ
*      <--O_TD_ERROR      ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM GET_DATA_STOCK  USING  I_JOB_DATE_F   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_F   TYPE ZTEGSDT202-JOB_TIME
I_JOB_DATE_T   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_T   TYPE ZTEGSDT202-JOB_TIME
**** START ADD 2015/03/03 ISID11 ****
I_TD_BUKRS_FLG TYPE TYP_TD_BUKRS_FLG
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_DELIISSUE TYPE TYP_TD_STOCK
O_TD_DELIREVER TYPE TYP_TD_STOCK
O_TD_RECCANCEL TYPE TYP_TD_STOCK
O_TD_ERROR     TYPE TYP_TD_ERROR.

* 指定画面出庫確認(Delivery Issue)がONの場合のみ以下の通り
IF CB_ISSUE IS NOT INITIAL.
*   販売側出庫確認済の対象データを取得する
PERFORM GET_DELIVERYISSUE USING I_JOB_DATE_F
I_JOB_TIME_F
I_JOB_DATE_T
I_JOB_TIME_T
**** START ADD 2015/03/03 ISID11 ****
I_TD_BUKRS_FLG
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_DELIISSUE.

ENDIF.

* 指定画面出庫取消(Delivery Reverse)がONの場合のみ以下の通り
IF CB_REVER IS NOT INITIAL.
*   販売側出庫取消の対象データを取得する
PERFORM GET_DELIVERYREVERSE USING I_JOB_DATE_F
I_JOB_TIME_F
I_JOB_DATE_T
I_JOB_TIME_T
CHANGING O_TD_DELIREVER
O_TD_ERROR.
ENDIF.

* 指定画面入庫取消(Receiving Cancel)がONの場合のみ以下の通り
IF CB_CANCE IS NOT INITIAL.
*   購買側入庫取消の対象データを取得する
PERFORM GET_RECEIVINGCANCEL USING I_JOB_DATE_F
I_JOB_TIME_F
I_JOB_DATE_T
I_JOB_TIME_T
CHANGING O_TD_RECCANCEL
O_TD_ERROR.
ENDIF.

ENDFORM.                    " GET_DATA_STOCK
*&---------------------------------------------------------------------*
*&      Form  GET_DELIVERYISSUE
*&---------------------------------------------------------------------*
*       販売側出庫確認済の対象データを取得する
*----------------------------------------------------------------------*
*      -->I_JOB_DATE_F    実行日付From
*      -->I_JOB_TIME_F    実行時刻From
*      -->I_JOB_DATE_T    実行日付To
*      -->I_JOB_TIME_T    実行時刻To
*      -->I_TD_BUKRS_FLG  「ITAB:明細基準
*      <--O_TD_DELIISSUE  ITAB:出庫確認連携データ
*----------------------------------------------------------------------*
FORM GET_DELIVERYISSUE  USING I_JOB_DATE_F   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_F   TYPE ZTEGSDT202-JOB_TIME
I_JOB_DATE_T   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_T   TYPE ZTEGSDT202-JOB_TIME
**** START ADD 2015/03/03 ISID11 ****
I_TD_BUKRS_FLG TYPE TYP_TD_BUKRS_FLG
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_DELIISSUE TYPE TYP_TD_STOCK.

DATA:
LTD_LIPS        TYPE TYP_TD_LIPS,          "ITAB:販売出荷明細データ
LTD_ZTEGSDT203  TYPE TYP_TD_ZTEGSDT203,
"ITAB:SalesDataFromPurchOrder
LTD_EKPO        TYPE TYP_TD_EKPO,          "ITAB:購買伝票明細
**** START DEL 2015/03/03 ISID11 ****
*    LTD_LAND1       TYPE TYP_TD_LAND1,         "ITAB:出荷先の国コード
*    LTD_T001W       TYPE TYP_TD_T001W,         "ITAB:プラント/支店
**** END DEL 2015/03/03 ISID11 ****
**** START ADD 2015/03/03 ISID11 ****
LTD_ZTEGSDT001  TYPE TYP_TD_ZTEGSDT001,    "ITAB:TradeCommon
LTD_ZTEGSDT208  TYPE TYP_TD_ZTEGSDT208,    "ITAB:洋上保管場所
**** END ADD 2015/03/03 ISID11 ****

**** START DEL 2015/03/03 ISID11 ****
*    LTD_ZTEGSDT207  TYPE TYP_TD_ZTEGSDT207,
*                                   "ITAB:CountryCodeRelationshipMaster
**** END DEL 2015/03/03 ISID11 ****
LTD_ZTEGSDT206  TYPE TYP_TD_ZTEGSDT206.
"ITAB:StockLinkageBetweenCrossCompany

* 伝票セグメント: 品目
PERFORM GET_MSEG USING I_JOB_DATE_F
I_JOB_TIME_F
I_JOB_DATE_T
I_JOB_TIME_T
CHANGING O_TD_DELIISSUE.
* データが存在しない場合、販売側出庫取消の対象データの取得処理へ飛ぶ
IF O_TD_DELIISSUE IS INITIAL.

RETURN.

ENDIF.

* 出荷伝票により受注情報を取得
PERFORM GET_LIPS USING O_TD_DELIISSUE  "ITAB:出庫確認連携データ
CHANGING LTD_LIPS.       "ITAB:販売出荷明細データ

* 受発注連携テーブルから発注情報を取得
PERFORM GET_ZTEGSDT203 USING LTD_LIPS  "ITAB:販売出荷明細データ
CHANGING LTD_ZTEGSDT203.
"ITAB:SalesDataFromPurchOrder

* 発注明細から入庫プラントと保管場所の情報を取得
PERFORM GET_EKPO USING LTD_ZTEGSDT203  "ITAB:SalesDataFromPurchOrder
CHANGING LTD_EKPO.       "ITAB:購買伝票明細

**** START DEL 2015/03/03 ISID11 ****
** 国コードにより在庫タイプを決定
*  PERFORM GET_LAND1 USING LTD_LIPS       "ITAB:販売出荷明細データ
*                 CHANGING LTD_LAND1.     "ITAB:出荷先の国コード
*
** 販売側出荷プラントの国コードを取得する
*  PERFORM GET_T001W USING O_TD_DELIISSUE "ITAB:出庫確認連携データ
*                 CHANGING LTD_T001W.     "ITAB:プラント/支店
**** END DEL 2015/03/03 ISID11 ****

**** START ADD 2015/03/03 ISID11 ****
* TradeCommonの検索
PERFORM GET_ZTEGSDT001 USING O_TD_DELIISSUE  "ITAB:出庫確認連携データ
CHANGING LTD_ZTEGSDT001. "ITAB:TradeCommon

* Ocean Store Location Masterの検索
PERFORM GET_ZTEGSDT208 USING LTD_EKPO        "ITAB:購買伝票明細
CHANGING LTD_ZTEGSDT208. "ITAB:洋上保管場所
**** END ADD 2015/03/03 ISID11 ****

**** START DEL 2015/03/03 ISID11 ****
** 国コード関連マスタの検索
*  PERFORM GET_ZTEGSDT207 USING LTD_T001W "ITAB:プラント/支店
*                      CHANGING LTD_ZTEGSDT207.
*  "ITAB:CountryCodeRelationshipMaster
**** END DEL 2015/03/03 ISID11 ****

* 更新区分の検索
PERFORM GET_ZTEGSDT206 USING LTD_LIPS        "ITAB:販売出荷明細データ
CHANGING LTD_ZTEGSDT206.
"ITAB:StockLinkageBetweenCrossCompany

* 販売側出庫確認済の対象データ編集
PERFORM EDIT_DELIVERYISSUE USING LTD_LIPS
LTD_ZTEGSDT203
LTD_EKPO
**** START UPD 2015/03/03 ISID11 ****
*                                   LTD_LAND1
*                                   LTD_T001W
*                                   LTD_ZTEGSDT207
LTD_ZTEGSDT001
LTD_ZTEGSDT208
I_TD_BUKRS_FLG
**** END UPD 2015/03/03 ISID11 ****
LTD_ZTEGSDT206
CHANGING O_TD_DELIISSUE.

ENDFORM.                    " GET_DELIVERYISSUE
*&---------------------------------------------------------------------*
*&      Form  GET_MSEG
*&---------------------------------------------------------------------*
*       伝票セグメント: 品目
*----------------------------------------------------------------------*
*      -->I_JOB_DATE_F    実行日付From
*      -->I_JOB_TIME_F    実行時刻From
*      -->I_JOB_DATE_T    実行日付To
*      -->I_JOB_TIME_T    実行時刻To
*      <--O_TD_DELIISSUE  ITAB:出庫確認連携データ
*----------------------------------------------------------------------*
FORM GET_MSEG  USING I_JOB_DATE_F   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_F   TYPE ZTEGSDT202-JOB_TIME
I_JOB_DATE_T   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_T   TYPE ZTEGSDT202-JOB_TIME
CHANGING O_TD_DELIISSUE TYPE TYP_TD_STOCK.

**** START UPD 2015/03/03 ISID11 ****
*  IF S_CPUDT-LOW <> S_CPUDT-HIGH.
* 「W:発注登録日付（From）」 <> 「W:発注登録日付（To）」の場合
IF I_JOB_DATE_F <> I_JOB_DATE_T.
**** END UPD 2015/03/03 ISID11 ****

SELECT MBLNR                    "入出庫伝票番号
MJAHR                    "入出庫伝票年
ZEILE                    "入出庫伝票の明細
BUKRS                    "会社コード
WERKS AS WERK_OUTB       "プラント
VBELN_IM                 "出荷伝票
VBELP_IM                 "出荷明細
BUDAT_MKPF               "伝票の転記日付
**** START UPD BY ISID REN 2015/08/13 ****
*           MATNR                    "品目コード
*           MENGE                    "数量
ERFMG                    "入出庫数量
ERFME                    "販売数量単位
**** END UPD BY ISID REN 2015/08/13 ****
**** START ADD 2015/03/27 ISID11 ****
**** START DEL BY ISID REN 2015/08/13 ****
*           MEINS                    "基本数量単位
**** END DEL BY ISID REN 2015/08/13 ****
**** END ADD 2015/03/27 ISID11 ****
INTO CORRESPONDING FIELDS OF TABLE O_TD_DELIISSUE
FROM MSEG
WHERE WERKS IN S_DWERKS        "出荷プラント
AND BUKRS IN RD_BUKRS        "会社コード
AND ( BWART = '961' OR       "移動タイプ
BWART = '963' )
**** START ADD 2015/03/10 ISID11 ****
AND MBLNR IN S_OMBLNR        "Outbound Mat.Doc.
AND VBELN_IM IN S_VBELN      "Outbound Delivery
**** END ADD 2015/03/10 ISID11 ****
AND ( ( CPUDT_MKPF =  I_JOB_DATE_F   AND
CPUTM_MKPF >= I_JOB_TIME_F )
OR   ( CPUDT_MKPF >  I_JOB_DATE_F   AND
CPUDT_MKPF <  I_JOB_DATE_T )
OR   ( CPUDT_MKPF =  I_JOB_DATE_T   AND
CPUTM_MKPF <= I_JOB_TIME_T ) ).

* 「W:発注登録日付（From）」 = 「W:発注登録日付（To）」の場合
ELSE.

SELECT MBLNR                    "入出庫伝票番号
MJAHR                    "入出庫伝票年
ZEILE                    "入出庫伝票の明細
BUKRS                    "会社コード
WERKS AS WERK_OUTB       "プラント
VBELN_IM                 "出荷伝票
VBELP_IM                 "出荷明細
BUDAT_MKPF               "伝票の転記日付
**** START UPD BY ISID REN 2015/08/13 ****
MATNR AS MATNR_SD "販売品目コード
*           MENGE                    "数量
ERFMG                    "入出庫数量
ERFME                    "販売数量単位
CHARG                   "ロット番号
**** END UPD BY ISID REN 2015/08/13 ****
**** START ADD 2015/03/27 ISID11 ****
MEINS                    "基本数量単位
**** END ADD 2015/03/27 ISID11 ****
INTO CORRESPONDING FIELDS OF TABLE O_TD_DELIISSUE
FROM MSEG
WHERE WERKS IN S_DWERKS        "出荷プラント
AND BUKRS IN RD_BUKRS        "会社コード
AND ( BWART = '961' OR       "移動タイプ
BWART = '963' )
**** START ADD 2015/03/10 ISID11 ****
AND MBLNR IN S_OMBLNR        "Outbound Mat.Doc.
AND VBELN_IM IN S_VBELN      "Outbound Delivery
**** END ADD 2015/03/10 ISID11 ****
AND CPUDT_MKPF =  I_JOB_DATE_F
AND CPUTM_MKPF >= I_JOB_TIME_F
AND CPUTM_MKPF <= I_JOB_TIME_T.

ENDIF.

IF O_TD_DELIISSUE IS NOT INITIAL.
SORT O_TD_DELIISSUE BY VBELN_IM ASCENDING      "出荷伝票
VBELP_IM ASCENDING     "出荷明細
MJAHR  DESCENDING      "入出庫年
MBLNR DESCENDING.       "入出庫伝票番号

DELETE ADJACENT DUPLICATES FROM O_TD_DELIISSUE
COMPARING VBELN_IM  VBELP_IM.
ENDIF.

ENDFORM.                    " GET_MSEG
*&---------------------------------------------------------------------*
*&      Form  GET_LIPS
*&---------------------------------------------------------------------*
*       出荷伝票により受注情報を取得
*----------------------------------------------------------------------*
*      -->I_TD_DELIISSUE     ITAB:出庫確認連携データ
*      <--O_TD_LIPS          ITAB:販売出荷明細データ
*----------------------------------------------------------------------*
FORM GET_LIPS  USING    I_TD_DELIISSUE TYPE TYP_TD_STOCK
CHANGING O_TD_LIPS      TYPE TYP_TD_LIPS.

DATA:
LTD_DELIVERYISSUE TYPE TYP_TD_STOCK.

**** START ADD 2015/03/03 ISID11 ****
IF I_TD_DELIISSUE IS INITIAL.

RETURN.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

LTD_DELIVERYISSUE = I_TD_DELIISSUE.
DELETE ADJACENT DUPLICATES FROM LTD_DELIVERYISSUE
COMPARING VBELN_IM
VBELP_IM.

SELECT
**** START UPD BY ISID REN 2015/07/03 ****
*    VBELN               "出荷伝票
*    POSNR               "出荷明細
*    VGBEL               "参照伝票番号
*    VGPOS               "参照明細番号
LIPS~VBELN               "出荷伝票
LIPS~POSNR               "出荷明細
LIPS~VGBEL               "参照伝票番号
LIPS~VGPOS               "参照明細番号
**** END UPD BY ISID REN 2015/07/03 ****
INTO TABLE O_TD_LIPS
FROM LIPS
**** START ADD BY ISID REN 2015/07/03 ****
INNER JOIN VBUP "販売伝票: 明細ステータス
ON    LIPS~VBELN = VBUP~VBELN   "出荷伝票
AND LIPS~POSNR = VBUP~POSNR   "出荷明細
**** END ADD BY ISID REN 2015/07/03 ****
FOR ALL ENTRIES IN LTD_DELIVERYISSUE
WHERE
**** START UPD BY ISID REN 2015/07/03 ****
*         VBELN = LTD_DELIVERYISSUE-VBELN_IM  "出荷伝票
*     AND POSNR = LTD_DELIVERYISSUE-VBELP_IM. "出荷明細
LIPS~VBELN = LTD_DELIVERYISSUE-VBELN_IM  "出荷伝票
AND LIPS~POSNR = LTD_DELIVERYISSUE-VBELP_IM  "出荷明細
AND VBUP~WBSTA = CNS_WBSTA_C.                "処理完了
**** END UPD BY ISID REN 2015/07/03 ****

IF SY-SUBRC = 0.
SORT O_TD_LIPS BY VBELN ASCENDING   "出荷伝票
POSNR ASCENDING.  "出荷明細
ENDIF.

ENDFORM.                    " GET_LIPS
*&---------------------------------------------------------------------*
*&      Form  GET_ZTEGSDT203
*&---------------------------------------------------------------------*
*       受発注連携テーブルから発注情報を取得
*----------------------------------------------------------------------*
*      -->I_TD_LIPS        ITAB:販売出荷明細データ
*      <--O_TD_ZTEGSDT203  ITAB:SalesDataFromPurchOrder
*----------------------------------------------------------------------*
FORM GET_ZTEGSDT203  USING    I_TD_LIPS      TYPE TYP_TD_LIPS
CHANGING O_TD_ZTEGSDT203 TYPE TYP_TD_ZTEGSDT203.

**** START ADD 2015/03/03 ISID11 ****
IF I_TD_LIPS IS INITIAL.

RETURN.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

SELECT VBELN                        "販売伝票
POSNR                        "販売伝票明細
EBELN                        "購買伝票番号
EBELP                        "購買伝票の明細番号
KNTTP                        "勘定設定カテゴリ
**** START ADD 2015/03/26 ISID11 ****
**** START UPD 2015/03/30 ISID11 ****
*         VKBUR                        "購買グループ
VKGRP              "営業グループ (Sales Group)
**** END UPD 2015/03/30 ISID11 ****
EKGRP                        "購買グループ
**** END ADD 2015/03/26 ISID11 ****
**** START ADD BY ISID REN 2015/07/29 ****
BUKRS                        "会社コード
**** END ADD BY ISID REN 2015/07/29 ****
INTO TABLE O_TD_ZTEGSDT203
FROM ZTEGSDT203
FOR ALL ENTRIES IN I_TD_LIPS
**** START UPD 2015/03/03 ISID11 ****
*   WHERE VBELN = I_TD_LIPS-VBELN      "販売伝票
*     AND POSNR = I_TD_LIPS-POSNR      "販売伝票明細
WHERE VBELN = I_TD_LIPS-VGBEL      "受注伝票番号
AND POSNR = I_TD_LIPS-VGPOS      "受注明細番号
**** END UPD 2015/03/03 ISID11 ****
AND ZKBUNCC = CNS_ZKBUNCC_3      "固定値「3」(受注登録)
AND STATUS  = 'C'.               "固定値「C」(完了)

IF SY-SUBRC = 0.

SORT O_TD_ZTEGSDT203 BY VBELN ASCENDING
POSNR ASCENDING.

ENDIF.

ENDFORM.                    " GET_ZTEGSDT203
*&---------------------------------------------------------------------*
*&      Form  GET_EKPO
*&---------------------------------------------------------------------*
*       発注明細から入庫プラントと保管場所の情報を取得
*----------------------------------------------------------------------*
*      -->I_TD_ZTEGSDT203  ITAB:SalesDataFromPurchOrder
*      <--O_TD_EKPO        ITAB:購買伝票明細
*----------------------------------------------------------------------*
FORM GET_EKPO  USING    I_TD_ZTEGSDT203 TYPE TYP_TD_ZTEGSDT203
CHANGING O_TD_EKPO TYPE TYP_TD_EKPO.

DATA:
LTD_ZTEGSDT203 TYPE TYP_TD_ZTEGSDT203.

**** START ADD 2015/03/03 ISID11 ****
IF I_TD_ZTEGSDT203 IS INITIAL.

RETURN.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

LTD_ZTEGSDT203 = I_TD_ZTEGSDT203.
SORT LTD_ZTEGSDT203 BY EBELN ASCENDING
EBELP ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_ZTEGSDT203
COMPARING EBELN
EBELP.

SELECT EBELN               "購買伝票番号
EBELP               "購買伝票の明細番号
**** START ADD 2015/03/03 ISID11 ****
BUKRS               "会社コード
**** END ADD 2015/03/03 ISID11 ****
WERKS               "プラント
LGORT               "保管場所
**** START ADD 2015/03/03 ISID11 ****
EVERS               "出荷指示
**** END ADD 2015/03/03 ISID11 ****
**** START UPD BY ISID REN 2015/08/13 ****
*    INTO TABLE O_TD_EKPO
MATNR               "品目コード
MEINS               "発注単位
INTO CORRESPONDING FIELDS OF TABLE O_TD_EKPO
**** END UPD BY ISID REN 2015/08/13 ****
FROM EKPO
FOR ALL ENTRIES IN LTD_ZTEGSDT203
WHERE EBELN = LTD_ZTEGSDT203-EBELN    "購買伝票番号
AND EBELP = LTD_ZTEGSDT203-EBELP    "購買伝票の明細番号
**** START ADD 2015/03/03 ISID11 ****
AND BUKRS IN RD_BUKRS
**** END ADD 2015/03/03 ISID11 ****
*     AND WERKS IN S_DWERKS.
AND WERKS IN S_RWERKS.
**** START DEL 2015/03/03 ISID11 ****
*     AND LGORT IN RD_BUKRS.
**** END DEL 2015/03/03 ISID11 ****

IF SY-SUBRC = 0.

SORT O_TD_EKPO BY EBELN ASCENDING
EBELP ASCENDING.

ENDIF.

ENDFORM.                    " GET_EKPO
**** START DEL 2015/03/03 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  GET_LAND1
*&---------------------------------------------------------------------*
*       国コードにより在庫タイプを決定
*----------------------------------------------------------------------*
*      -->I_TD_LIPS   ITAB:販売出荷明細データ
*      <--O_TD_LAND1  ITAB:出荷先の国コード
*----------------------------------------------------------------------*
*FORM GET_LAND1  USING    I_TD_LIPS      TYPE TYP_TD_LIPS
*                CHANGING O_TD_LAND1     TYPE TYP_TD_LAND1.
*
*  DATA:
*   LTD_LIPS      TYPE TYP_TD_LIPS.
*
*  LTD_LIPS = I_TD_LIPS.
*  DELETE ADJACENT DUPLICATES FROM LTD_LIPS
*                 COMPARING VBELN.
*
*  SELECT LIKP~VBELN                   "出荷伝票
*         KNA1~LAND1                   "国コード
*    INTO TABLE O_TD_LAND1
*    FROM LIKP
*   INNER JOIN KNA1
*      ON LIKP~KUNNR = KNA1~KUNNR
*     FOR ALL ENTRIES IN LTD_LIPS
*   WHERE LIKP~VBELN = LTD_LIPS-VBELN. "出荷伝票
*
*  IF SY-SUBRC = 0.
*
*    SORT O_TD_LAND1 BY VBELN ASCENDING.
*
*  ENDIF.
*
*ENDFORM.                    " GET_LAND1
*&---------------------------------------------------------------------*
*&      Form  GET_T001W
*&---------------------------------------------------------------------*
*       販売側出荷プラントの国コードを取得する
*----------------------------------------------------------------------*
*      -->I_TD_DELIISSUE  ITAB:出庫確認連携データ
*      <--O_TD_T001W      ITAB:プラント/支店
*----------------------------------------------------------------------*
*FORM GET_T001W  USING    I_TD_DELIISSUE TYPE TYP_TD_STOCK
*                CHANGING O_TD_T001W TYPE TYP_TD_T001W.
*
*  DATA:
*    LTD_DELIVERYISSUE TYPE TYP_TD_STOCK.
*
*  LTD_DELIVERYISSUE = I_TD_DELIISSUE.
*  SORT LTD_DELIVERYISSUE BY WERK_OUTB ASCENDING.
*  DELETE ADJACENT DUPLICATES FROM LTD_DELIVERYISSUE
*                        COMPARING WERK_OUTB.
*
*  SELECT WERKS                 "プラント
*         LAND1                 "出荷プラントの国コード
*    INTO TABLE O_TD_T001W
*    FROM T001W
*     FOR ALL ENTRIES IN LTD_DELIVERYISSUE
*   WHERE WERKS = LTD_DELIVERYISSUE-WERK_OUTB.
*
*  IF SY-SUBRC = 0.
*
*    SORT O_TD_T001W BY WERKS ASCENDING.
*
*  ENDIF.
*
*ENDFORM.                    " GET_T001W
*&---------------------------------------------------------------------*
*&      Form  GET_ZTEGSDT207
*&---------------------------------------------------------------------*
*       国コード関連マスタの検索
*----------------------------------------------------------------------*
*      -->I_TD_T001W       ITAB:プラント/支店
*      <--O_TD_ZTEGSDT207  ITAB:CountryCodeRelationshipMaster
*----------------------------------------------------------------------*
*FORM GET_ZTEGSDT207  USING    I_TD_T001W TYPE TYP_TD_T001W
*                     CHANGING O_TD_ZTEGSDT207 TYPE TYP_TD_ZTEGSDT207.
*
*  DATA:
*    LTD_T001W TYPE TYP_TD_T001W.
*
*  LTD_T001W = I_TD_T001W.
*  SORT LTD_T001W BY LAND1 ASCENDING.
*  DELETE ADJACENT DUPLICATES FROM LTD_T001W
*                        COMPARING LAND1.
*
*  SELECT LAND1                     "国コード
*         ZLAND                     "関連国コード
*    INTO TABLE O_TD_ZTEGSDT207
*    FROM ZTEGSDT207
*     FOR ALL ENTRIES IN LTD_T001W
*   WHERE LAND1 = LTD_T001W-LAND1.  "出荷プラントの国コード
*
*  IF SY-SUBRC = 0.
*
*    SORT O_TD_ZTEGSDT207 BY LAND1 ASCENDING
*                            ZLAND ASCENDING.
*
*  ENDIF.
*
*ENDFORM.                    " GET_ZTEGSDT207
*&---------------------------------------------------------------------*
*&      Form  GET_ZTEGSDT206
*&---------------------------------------------------------------------*
*       更新区分の検索
*----------------------------------------------------------------------*
*      -->I_TD_LIPS        ITAB:販売出荷明細データ
*      <--O_TD_ZTEGSDT206  ITAB:StockLinkageBetweenCrossCompany
*----------------------------------------------------------------------*
FORM GET_ZTEGSDT206  USING    I_TD_LIPS      TYPE TYP_TD_LIPS
CHANGING O_TD_ZTEGSDT206 TYPE TYP_TD_ZTEGSDT206.

DATA:
LTD_LIPS  TYPE TYP_TD_LIPS.

**** START ADD 2015/03/03 ISID11 ****
IF I_TD_LIPS IS INITIAL.

RETURN.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

LTD_LIPS = I_TD_LIPS.
SORT LTD_LIPS BY VGBEL ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_LIPS
COMPARING VGBEL.

SELECT KDAUF                     "受注伝票番号
MBLNR_OUTB                "入出庫伝票番号(Outbound)
MJAHR_OUTB                "入出庫伝票年(Outbound)
EBELN                     "購買伝票番号
MBLNR_INB                 "入出庫伝票番号(Inbound)
MJAHR_INB                 "入出庫伝票年(Inbound)
STATUS                    "処理ステータス
INTO CORRESPONDING FIELDS OF TABLE O_TD_ZTEGSDT206
FROM ZTEGSDT206
FOR ALL ENTRIES IN LTD_LIPS
WHERE KDAUF = LTD_LIPS-VGBEL.   "受注伝票番号

IF SY-SUBRC = 0.

SORT O_TD_ZTEGSDT206 BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING.

ENDIF.

ENDFORM.                    " GET_ZTEGSDT206
*&---------------------------------------------------------------------*
*&      Form  EDIT_DELIVERYISSUE
*&---------------------------------------------------------------------*
*       販売側出庫確認済の対象データ編集
*----------------------------------------------------------------------*
*      -->I_TD_LIPS           ITAB:販売出荷明細データ
*      -->I_TD_ZTEGSDT203     ITAB:SalesDataFromPurchOrder
*      -->I_TD_EKPO           ITAB:購買伝票明細
*      -->I_TD_LAND1          ITAB:出荷先の国コード
*      -->I_TD_T001W          ITAB:プラント/支店
*      -->I_TD_ZTEGSDT001     ITAB:TradeCommon
*      -->I_TD_ZTEGSDT208     ITAB:洋上保管場所
*      -->I_TD_ZTEGSDT207     ITAB:CountryCodeRelationshipMaster
*      -->I_TD_ZTEGSDT206     ITAB:StockLinkageBetweenCrossCompany
*      <--O_TD_DELIISSUE      ITAB:出庫確認連携データ
*----------------------------------------------------------------------*
FORM EDIT_DELIVERYISSUE
USING I_TD_LIPS       TYPE TYP_TD_LIPS
I_TD_ZTEGSDT203 TYPE TYP_TD_ZTEGSDT203
I_TD_EKPO       TYPE TYP_TD_EKPO
**** START UPD 2015/03/03 ISID11 ****
*                        I_TD_LAND1      TYPE TYP_TD_LAND1
*                        I_TD_T001W      TYPE TYP_TD_T001W
*                        I_TD_ZTEGSDT207 TYPE TYP_TD_ZTEGSDT207
I_TD_ZTEGSDT001 TYPE TYP_TD_ZTEGSDT001
I_TD_ZTEGSDT208 TYPE TYP_TD_ZTEGSDT208
I_TD_BUKRS_FLG  TYPE TYP_TD_BUKRS_FLG
**** END UPD 2015/03/03 ISID11 ****
I_TD_ZTEGSDT206 TYPE TYP_TD_ZTEGSDT206
CHANGING O_TD_DELIISSUE  TYPE TYP_TD_STOCK.

DATA:
LW_TABIX       TYPE SY-TABIX,
LST_LIPS       TYPE TYP_LIPS,
LST_ZTEGSDT203 TYPE TYP_ZTEGSDT203,
LST_EKPO       TYPE TYP_EKPO,
**** START UPD 2015/03/03 ISID11 ****
*    LST_LAND1      TYPE TYP_LAND1,
*    LST_T001W      TYPE TYP_T001W,
*    LST_ZTEGSDT207 TYPE TYP_ZTEGSDT207,
LST_ZTEGSDT001 TYPE TYP_ZTEGSDT001,
LST_ZTEGSDT208 TYPE TYP_ZTEGSDT208,
LST_BUKRS_FLG  TYPE TYP_BUKRS_FLG,
**** START ADD 2015/03/30 ISID11 ****
LST_BUKRS_OUT_FLG  TYPE TYP_BUKRS_FLG,
**** END ADD 2015/03/30 ISID11 ****
LW_SUBRC       TYPE SY-SUBRC,
LTD_LINES      TYPE STANDARD TABLE OF TLINE,
LST_LINES      TYPE TLINE,
LW_NAME        TYPE THEAD-TDNAME,
**** END UPD 2015/03/03 ISID11 ****
LST_ZTEGSDT206 TYPE TYP_ZTEGSDT206.
**** START DEL 2015/03/03 ISID11 ****
*    LW_VBELN_LAND1 TYPE KNA1-LAND1,          "出荷先の国コード
*    LW_WERKS_LAND1 TYPE T001W-LAND1.         "出荷プラントの国コード
**** END DEL 2015/03/03 ISID11 ****

FIELD-SYMBOLS:
<FS_DELIISSUE>  TYPE TYP_STOCK.

LOOP AT O_TD_DELIISSUE ASSIGNING <FS_DELIISSUE>.

LW_TABIX = SY-TABIX.

*   販売側出庫確認済の対象データ編集
CLEAR:
LST_LIPS.

READ TABLE I_TD_LIPS INTO LST_LIPS
WITH KEY VBELN = <FS_DELIISSUE>-VBELN_IM        "出荷伝票
POSNR = <FS_DELIISSUE>-VBELP_IM        "出荷明細
BINARY SEARCH.

IF SY-SUBRC = 0.
<FS_DELIISSUE>-VGBEL = LST_LIPS-VGBEL.          "受注伝票番号
<FS_DELIISSUE>-VGPOS = LST_LIPS-VGPOS.          "受注明細番号
ELSE.
*     データが存在しない場合処理、該当レコードを削除、次のレコード処理へ
DELETE O_TD_DELIISSUE INDEX LW_TABIX.
CONTINUE.
ENDIF.

*   受発注連携テーブルから発注情報を取得する
CLEAR:
LST_ZTEGSDT203.

READ TABLE I_TD_ZTEGSDT203 INTO LST_ZTEGSDT203
**** START ADD 2015/03/03 ISID11 ****
*      WITH KEY VBELN = <FS_DELIISSUE>-VBELN_IM        "出荷伝票
*               POSNR = <FS_DELIISSUE>-VBELP_IM        "出荷明細
WITH KEY VBELN = <FS_DELIISSUE>-VGBEL            "受注伝票番号
POSNR = <FS_DELIISSUE>-VGPOS            "受注明細番号
**** END ADD 2015/03/03 ISID11 ****
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_DELIISSUE>-EBELN = LST_ZTEGSDT203-EBELN.   "購買伝票番号
<FS_DELIISSUE>-EBELP = LST_ZTEGSDT203-EBELP.   "購買伝票の明細番号

**** START ADD 2015/03/26 ISID11 ****
**** START UPD 2015/03/30 ISID11 ****
*      <FS_DELIISSUE>-VKBUR = LST_ZTEGSDT203-VKBUR.   "営業所
<FS_DELIISSUE>-VKGRP = LST_ZTEGSDT203-VKGRP.   "営業グループ
**** END UPD 2015/03/30 ISID11 ****
<FS_DELIISSUE>-EKGRP = LST_ZTEGSDT203-EKGRP.   "購買グループ
**** END ADD 2015/03/26 ISID11 ****

ELSE.

*     データが存在しない場合処理、該当レコードを削除、次のレコード処理へ
DELETE O_TD_DELIISSUE INDEX LW_TABIX.
CONTINUE.

ENDIF.

*   発注明細から入庫プラントと保管場所の情報を取得する
CLEAR:
LST_EKPO.

READ TABLE I_TD_EKPO INTO LST_EKPO
WITH KEY EBELN = <FS_DELIISSUE>-EBELN         "購買伝票番号
EBELP = <FS_DELIISSUE>-EBELP         "購買伝票の明細番号
BINARY SEARCH.

IF SY-SUBRC = 0.
<FS_DELIISSUE>-WERK_INB = LST_EKPO-WERKS.    "入庫プラント
<FS_DELIISSUE>-LGORT = LST_EKPO-LGORT.       "入庫保管場所
**** START ADD 2015/03/03 ISID11 ****
<FS_DELIISSUE>-BUKRS_INB = LST_EKPO-BUKRS.      "会社コード
<FS_DELIISSUE>-EVERS = LST_EKPO-EVERS.          "出荷指示
**** END ADD 2015/03/03 ISID11 ****
**** START ADD BY ISID REN 2015/08/13 ****
<FS_DELIISSUE>-MATNR = LST_EKPO-MATNR.      "品目コード
<FS_DELIISSUE>-MEINS = LST_EKPO-MEINS.      "発注単位
**** END ADD BY ISID REN 2015/08/13 ****
ELSE.

*     データが存在しない場合処理、該当レコードを削除、次のレコード処理へ
DELETE O_TD_DELIISSUE INDEX LW_TABIX.
CONTINUE.

ENDIF.

**** START UPD 2015/03/03 ISID11 ****
**   国コードにより在庫タイプを決定する
*    CLEAR:
*      LW_VBELN_LAND1.
*
*    READ TABLE I_TD_LAND1 INTO LST_LAND1
*      WITH KEY VBELN = <FS_DELIISSUE>-VBELN_IM      "出荷伝票
*               BINARY SEARCH.
*
*    IF SY-SUBRC = 0.
*
*      LW_VBELN_LAND1 = LST_LAND1-LAND1.             "W:出荷先の国コード
*
*    ENDIF.
*
**   販売側出荷プラントの国コードを取得する
*    CLEAR:
*      LW_WERKS_LAND1.
*
*    READ TABLE I_TD_T001W INTO LST_T001W
*      WITH KEY WERKS = <FS_DELIISSUE>-WERK_OUTB     "出荷プラント
*               BINARY SEARCH.
*
*    IF SY-SUBRC = 0.
*
*      LW_WERKS_LAND1 = LST_T001W-LAND1.     "W:出荷プラントの国コード
*
*    ENDIF.
*
**   在庫タイプを設定する
**   出荷側の国コード　=　出荷プラントの国コードの場合
*    IF LW_VBELN_LAND1 = LW_WERKS_LAND1.
*
*      <FS_DELIISSUE>-INSMK = SPACE.                 "利用可能
*
**   出荷側の国コード　≠　出荷プラントの国コードの場合
*    ELSE.
*
**     国コード関連マスタを検索し、在庫タイプを設定する
*      CLEAR:
*        LST_ZTEGSDT207.
*      READ TABLE I_TD_ZTEGSDT207 INTO LST_ZTEGSDT207
*        WITH KEY LAND1 = LW_WERKS_LAND1       "W:出荷プラントの国コード
*                 ZLAND = LW_VBELN_LAND1       "W:出荷先の国コード
*                 BINARY SEARCH.
*
**     データが存在しない場合、在庫保留を在庫タイプに設定する
*      IF SY-SUBRC <> 0.
*
*        <FS_DELIISSUE>-INSMK = '3'.                 "在庫保留
*
*      ELSE.
*
*        <FS_DELIISSUE>-INSMK = SPACE.               "利用可能
*
*      ENDIF.
*
*    ENDIF.

**** START ADD 2015/03/30 ISID11 ****
*   本社フラグと単一明細フラグを取得する
CLEAR:
LST_BUKRS_OUT_FLG.
READ TABLE I_TD_BUKRS_FLG INTO LST_BUKRS_OUT_FLG
WITH KEY BUKRS = <FS_DELIISSUE>-BUKRS
BINARY SEARCH.

IF LST_BUKRS_OUT_FLG-ZFLGHEADOFFICE = 'X'.
**** END ADD 2015/03/30 ISID11 ****

*   出荷伝票ヘッダテキスト Invoice Noを取得する
CLEAR:
LTD_LINES,
LST_LINES,
LW_SUBRC,
LW_NAME.

LW_NAME+0(10) = <FS_DELIISSUE>-VBELN_IM.

*   テキスト読込
PERFORM GET_READ_TEXT USING 'Z031'
*                                'J'
LW_NAME
'VBBK'
CHANGING LTD_LINES
LW_SUBRC.

CASE LW_SUBRC.
WHEN 0.

*       テキストを取得できた場合、1行目を品目テキストに設定する
READ TABLE LTD_LINES INTO LST_LINES INDEX 1.
<FS_DELIISSUE>-Z_INVOICE_NO = LST_LINES-TDLINE.  "納品書番号

WHEN OTHERS.

CLEAR:
<FS_DELIISSUE>-Z_INVOICE_NO.

ENDCASE.
**** START ADD 2015/03/30 ISID11 ****

**** START ADD 2015/09/10 ISID21 ****
*   Invoice No取得できない場合、社内用備考から再取得する。
IF <FS_DELIISSUE>-Z_INVOICE_NO IS INITIAL.
*     テキスト読込
PERFORM GET_READ_TEXT USING '0001'
*                                  'J'
LW_NAME
'VBBK'
CHANGING LTD_LINES
LW_SUBRC.

CASE LW_SUBRC.
WHEN 0.

*         テキストを取得できた場合、1行目を品目テキストに設定する
READ TABLE LTD_LINES INTO LST_LINES INDEX 1.
<FS_DELIISSUE>-Z_INVOICE_NO = LST_LINES-TDLINE.  "納品書番号

WHEN OTHERS.

CLEAR:
<FS_DELIISSUE>-Z_INVOICE_NO.

ENDCASE.
ENDIF.
*   2015/09/10 Add End
* 海外の場合
ELSE.

**** END ADD 2015/03/30 ISID11 ****
*   貿易テーブルの Invoice Noを取得する
CLEAR:
LST_ZTEGSDT001.

READ TABLE I_TD_ZTEGSDT001 INTO LST_ZTEGSDT001
WITH KEY VBELN = <FS_DELIISSUE>-VBELN_IM
BINARY SEARCH.

IF SY-SUBRC <> 0.

CLEAR:
<FS_DELIISSUE>-Z_INVOICE_NO.

ELSE.

<FS_DELIISSUE>-Z_INVOICE_NO =
LST_ZTEGSDT001-Z_INVOICE_NO.  "納品書番号

ENDIF.
**** START ADD 2015/03/30 ISID11 ****
ENDIF.
**** END ADD 2015/03/30 ISID11 ****
*   本社フラグと単一明細フラグを取得する
CLEAR:
LST_BUKRS_FLG.
READ TABLE I_TD_BUKRS_FLG INTO LST_BUKRS_FLG
WITH KEY BUKRS = <FS_DELIISSUE>-BUKRS_INB
BINARY SEARCH.

IF SY-SUBRC <> 0.

CLEAR:
<FS_DELIISSUE>-ZFLGHEADOFFICE,     "本社フラグ
<FS_DELIISSUE>-ZFLGINBSINGLE.      "入庫伝票単一明細FLG

ELSE.

<FS_DELIISSUE>-ZFLGHEADOFFICE =
LST_BUKRS_FLG-ZFLGHEADOFFICE.  "本社フラグ
<FS_DELIISSUE>-ZFLGINBSINGLE  =
LST_BUKRS_FLG-ZFLGINBSINGLE.   "入庫伝票単一明細FLG

ENDIF.

*   海外の場合（「FS:出庫確認連携データ」-本社フラグ　=　SPACE）のみ
IF <FS_DELIISSUE>-ZFLGHEADOFFICE IS INITIAL.
*     洋上保管場所を取得する
**** START DELETE　BY ISID21 2015/09/10 ****
*      IF <FS_DELIISSUE>-EVERS <> 'Z1'.    "海外の場合かつ直送以外の場合
**** END DELETE　BY ISID21 2015/09/10 ****

CLEAR:
LST_ZTEGSDT208.

READ TABLE I_TD_ZTEGSDT208 INTO LST_ZTEGSDT208
WITH KEY BUKRS = <FS_DELIISSUE>-BUKRS_INB
BINARY SEARCH.

IF SY-SUBRC <> 0.

*        CLEAR:
*          <FS_DELIISSUE>-LGORT.

ELSE.

<FS_DELIISSUE>-LGORT = LST_ZTEGSDT208-LGORT.  "入庫保管場所

ENDIF.
**** START DELETE　BY ISID21 2015/09/10 ****
*      ENDIF.
**** END DELETE　BY ISID21 2015/09/10 ****

**** START ADD BY ISID REN 2015/07/03 ****
*     海外の場合、利用在庫可能に設定する
<FS_DELIISSUE>-INSMK = SPACE.           "在庫タイプ

*   本社の場合、在庫保留に設定する
ELSE.
**** START UPD BY ISID21 2015/09/15 ****
*      <FS_DELIISSUE>-INSMK = CNS_INSMK_3.     "在庫保留
IF <FS_DELIISSUE>-EVERS = 'Z1'.
<FS_DELIISSUE>-INSMK = SPACE.                 "利用在庫可能
ELSE.
<FS_DELIISSUE>-INSMK = CNS_INSMK_3.     "在庫保留
ENDIF.

**** END UPD BY ISID21 2015/09/15 ****

**** END ADD BY ISID REN 2015/07/03 ****
ENDIF.
**** END UPD 2015/03/03 ISID11 ****

*   更新区分の決定処理
CLEAR:
LST_ZTEGSDT206.
READ TABLE I_TD_ZTEGSDT206 INTO LST_ZTEGSDT206
WITH KEY KDAUF      = <FS_DELIISSUE>-VGBEL    "受注伝票番号
MBLNR_OUTB = <FS_DELIISSUE>-MBLNR    "入出庫伝票番号(Od)
MJAHR_OUTB = <FS_DELIISSUE>-MJAHR    "入出庫伝票年(Od)
BINARY SEARCH.

IF SY-SUBRC <> 0.

<FS_DELIISSUE>-STATUS = 'I'.                  "新規登録

ELSE.

IF LST_ZTEGSDT206-STATUS = 'C'.               "完了

DELETE O_TD_DELIISSUE INDEX LW_TABIX.
CONTINUE.

ELSE.

<FS_DELIISSUE>-STATUS = 'U'.                "更新

ENDIF.

ENDIF.

**** START ADD 2015/03/03 ISID11 ****
*   「出庫確認連携データ」-入庫伝票単一明細フラグが固定値（SPACE)の場合
*   入出庫伝票番号(Outbound)、入出庫伝票年(Outbound)ごとで入庫処理を行う
IF <FS_DELIISSUE>-ZFLGINBSINGLE IS INITIAL.

<FS_DELIISSUE>-MBLNR_SKEY = <FS_DELIISSUE>-MBLNR.
<FS_DELIISSUE>-MJAHR_SKEY = <FS_DELIISSUE>-MJAHR.

*   購買伝票番号ごとで入庫処理を行う（単一明細処理）
ELSE.

<FS_DELIISSUE>-EBELN_SKEY = <FS_DELIISSUE>-EBELN.
<FS_DELIISSUE>-EBELP_SKEY = <FS_DELIISSUE>-EBELP.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

ENDLOOP.

**** START ADD 2015/03/03 ISID11 ****
SORT O_TD_DELIISSUE BY  EBELN_SKEY ASCENDING
EBELP_SKEY ASCENDING
MBLNR_SKEY ASCENDING
MJAHR_SKEY ASCENDING
ZEILE ASCENDING.
**** END ADD 2015/03/03 ISID11 ****

ENDFORM.                    " EDIT_DELIVERYISSUE
*&---------------------------------------------------------------------*
*&      Form  GET_DELIVERYREVERSE
*&---------------------------------------------------------------------*
*       販売側出庫取消の対象データを取得する
*----------------------------------------------------------------------*
*      -->I_JOB_DATE_F    実行日付From
*      -->I_JOB_TIME_F    実行時刻From
*      -->I_JOB_DATE_T    実行日付To
*      -->I_JOB_TIME_T    実行時刻To
*      <--O_TD_DELIREVER  ITAB:出庫取消連携データ
*      <--O_TD_ERROR`     ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM GET_DELIVERYREVERSE USING I_JOB_DATE_F   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_F   TYPE ZTEGSDT202-JOB_TIME
I_JOB_DATE_T   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_T   TYPE ZTEGSDT202-JOB_TIME
CHANGING O_TD_DELIREVER TYPE TYP_TD_STOCK
O_TD_ERROR     TYPE TYP_TD_ERROR.

DATA:
LTD_LIPS        TYPE TYP_TD_LIPS,          "ITAB:販売出荷明細データ
LTD_ZTEGSDT203  TYPE TYP_TD_ZTEGSDT203,
"ITAB:SalesDataFromPurchOrder
LTD_ZTEGSDT206  TYPE TYP_TD_ZTEGSDT206,
"ITAB:StockLinkageBetweenCrossCompany
**** START ADD 2015/03/03 ISID11 ****
LTD_WERK_INB    TYPE TYP_TD_WERK_INB.     "取消元入庫プラント
**** END ADD 2015/03/03 ISID11 ****

* 品目の検索
PERFORM GET_MSEG_REVERSE USING I_JOB_DATE_F
I_JOB_TIME_F
I_JOB_DATE_T
I_JOB_TIME_T
CHANGING O_TD_DELIREVER.

* データが存在しない場合、発注側入庫取消の対象データの取得処理へ飛ぶ
IF O_TD_DELIREVER IS INITIAL.

RETURN.

ENDIF.

* 出荷伝票により受注情報を取得
PERFORM GET_LIPS USING O_TD_DELIREVER  "ITAB:出庫確認連携データ
CHANGING LTD_LIPS.       "ITAB:販売出荷明細データ

* 更新区分の検索
PERFORM GET_ZTEGSDT206 USING LTD_LIPS        "ITAB:販売出荷明細データ
CHANGING LTD_ZTEGSDT206.
"ITAB:StockLinkageBetweenCrossCompany

* 受発注連携テーブルから発注情報を取得
PERFORM GET_ZTEGSDT203 USING LTD_LIPS  "ITAB:販売出荷明細データ
CHANGING LTD_ZTEGSDT203.
"ITAB:SalesDataFromPurchOrder

**** START ADD 2015/03/03 ISID11 ****
* 取消元入庫プラントを取得
PERFORM GET_WERK_INB USING O_TD_DELIREVER  "ITAB:出庫確認連携データ
CHANGING LTD_WERK_INB.   "取消元入庫プラント
**** END ADD 2015/03/03 ISID11 ****

* 販売側出庫取消の対象データ編集
PERFORM EDIT_DELIVERYREVERSE USING LTD_LIPS
LTD_ZTEGSDT206
LTD_ZTEGSDT203
**** START ADD 2015/03/03 ISID11 ****
LTD_WERK_INB
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_DELIREVER
O_TD_ERROR.

ENDFORM.                    " GET_DELIVERYREVERSE
*&---------------------------------------------------------------------*
*&      Form  GET_MSEG_REVERSE
*&---------------------------------------------------------------------*
*       品目の検索
*----------------------------------------------------------------------*
*      -->I_JOB_DATE_F    実行日付From
*      -->I_JOB_TIME_F    実行時刻From
*      -->I_JOB_DATE_T    実行日付To
*      -->I_JOB_TIME_T    実行時刻To
*      <--O_TD_DELIREVER  ITAB:出庫取消連携データ
*----------------------------------------------------------------------*
FORM GET_MSEG_REVERSE  USING I_JOB_DATE_F   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_F   TYPE ZTEGSDT202-JOB_TIME
I_JOB_DATE_T   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_T   TYPE ZTEGSDT202-JOB_TIME
CHANGING O_TD_DELIREVER TYPE TYP_TD_STOCK.

IF S_CPUDT-LOW <> S_CPUDT-HIGH.

SELECT MBLNR                    "入出庫伝票番号
MJAHR                    "入出庫伝票年
ZEILE                    "入出庫伝票の明細
BUKRS                    "会社コード
WERKS AS WERK_OUTB       "プラント
SMBLN                    "入出庫伝票番号
SJAHR                    "入出庫伝票年
SMBLP                    "入出庫伝票の明細
VBELN_IM                 "出荷伝票
VBELP_IM                 "出荷明細
BUDAT_MKPF               "伝票の転記日付
MATNR                    "品目コード
INTO CORRESPONDING FIELDS OF TABLE O_TD_DELIREVER
FROM MSEG
WHERE WERKS IN S_DWERKS        "出荷プラント
AND BUKRS IN RD_BUKRS        "会社コード
AND ( BWART = '962' OR       "移動タイプ
BWART = '964' )
**** START ADD 2015/03/10 ISID11 ****
AND MBLNR IN S_OMBLNR        "Outbound Mat.Doc.
AND VBELN_IM IN S_VBELN      "Outbound Delivery
**** END ADD 2015/03/10 ISID11 ****
AND ( ( CPUDT_MKPF =  I_JOB_DATE_F   AND
CPUTM_MKPF >= I_JOB_TIME_F )
OR   ( CPUDT_MKPF >  I_JOB_DATE_F   AND
CPUDT_MKPF <  I_JOB_DATE_T )
OR   ( CPUDT_MKPF =  I_JOB_DATE_T   AND
CPUTM_MKPF <= I_JOB_TIME_T ) ).

ELSE.

SELECT MBLNR                    "入出庫伝票番号
MJAHR                    "入出庫伝票年
ZEILE                    "入出庫伝票の明細
BUKRS                    "会社コード
WERKS AS WERK_OUTB       "プラント
SMBLN                    "入出庫伝票番号
SJAHR                    "入出庫伝票年
SMBLP                    "入出庫伝票の明細
VBELN_IM                 "出荷伝票
VBELP_IM                 "出荷明細
BUDAT_MKPF               "伝票の転記日付
MATNR                    "品目コード
INTO CORRESPONDING FIELDS OF TABLE O_TD_DELIREVER
FROM MSEG
WHERE WERKS IN S_DWERKS        "出荷プラント
AND BUKRS IN RD_BUKRS        "会社コード
AND ( BWART = '962' OR       "移動タイプ
BWART = '964' )
**** START ADD 2015/03/10 ISID11 ****
AND MBLNR IN S_OMBLNR        "Outbound Mat.Doc.
AND VBELN_IM IN S_VBELN      "Outbound Delivery
**** END ADD 2015/03/10 ISID11 ****
AND CPUDT_MKPF =  I_JOB_DATE_F
AND CPUTM_MKPF >= I_JOB_TIME_F
AND CPUTM_MKPF <= I_JOB_TIME_T.

ENDIF.

IF O_TD_DELIREVER IS NOT INITIAL.

SORT O_TD_DELIREVER BY VBELN_IM ASCENDING      "出荷伝票
VBELP_IM ASCENDING.     "出荷明細

ENDIF.

ENDFORM.                    " GET_MSEG_REVERSE
*&---------------------------------------------------------------------*
*&      Form  EDIT_DELIVERYREVERSE
*&---------------------------------------------------------------------*
*       販売側出庫取消の対象データ編集
*----------------------------------------------------------------------*
*      -->I_TD_LIPS           ITAB:販売出荷明細データ
*      -->I_TD_ZTEGSDT206     ITAB:StockLinkageBetweenCrossCompany
*      -->I_TD_ZTEGSDT203     ITAB:SalesDataFromPurchOrder
*      -->I_TD_WERK_INB       取消元入庫プラント
*      <--O_TD_DELIREVER      ITAB:出庫取消連携データ
*      <--O_TD_ERROR          ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM EDIT_DELIVERYREVERSE
USING I_TD_LIPS       TYPE TYP_TD_LIPS
I_TD_ZTEGSDT206 TYPE TYP_TD_ZTEGSDT206
I_TD_ZTEGSDT203 TYPE TYP_TD_ZTEGSDT203
**** START ADD 2015/03/03 ISID11 ****
I_TD_WERK_INB   TYPE TYP_TD_WERK_INB
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_DELIREVER  TYPE TYP_TD_STOCK
O_TD_ERROR      TYPE TYP_TD_ERROR.
DATA:
LW_TABIX       TYPE SY-TABIX,
LW_MSGTX       TYPE ZTEGSDT206-MSGTX,
LST_LIPS       TYPE TYP_LIPS,
LST_ZTEGSDT203 TYPE TYP_ZTEGSDT203,
**** START ADD 2015/03/03 ISID11 ****
LST_WERK_INB   TYPE TYP_WERK_INB,
**** END ADD 2015/03/03 ISID11 ****
LTD_ZTEGSDT206 TYPE TYP_TD_ZTEGSDT206,
LST_ZTEGSDT206 TYPE TYP_ZTEGSDT206.

FIELD-SYMBOLS:
<FS_DELIREVER>  TYPE TYP_STOCK.

LTD_ZTEGSDT206 = I_TD_ZTEGSDT206.

LOOP AT O_TD_DELIREVER ASSIGNING <FS_DELIREVER>.

LW_TABIX = SY-TABIX.

*   販売側出庫確認済の対象データ編集
CLEAR:
LST_LIPS.

READ TABLE I_TD_LIPS INTO LST_LIPS
WITH KEY VBELN = <FS_DELIREVER>-VBELN_IM        "出荷伝票
POSNR = <FS_DELIREVER>-VBELP_IM        "出荷明細
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_DELIREVER>-VGBEL = LST_LIPS-VGBEL.          "受注伝票番号
<FS_DELIREVER>-VGPOS = LST_LIPS-VGPOS.          "受注明細番号

ELSE.

*     データが存在しない場合処理、該当レコードを削除、次のレコード処理へ
DELETE O_TD_DELIREVER INDEX LW_TABIX.
CONTINUE.

ENDIF.

*   更新区分の決定処理
CLEAR:
LST_ZTEGSDT206.
READ TABLE I_TD_ZTEGSDT206 INTO LST_ZTEGSDT206
WITH KEY KDAUF      = <FS_DELIREVER>-VGBEL    "受注伝票番号
MBLNR_OUTB = <FS_DELIREVER>-MBLNR    "入出庫伝票番号(Od)
MJAHR_OUTB = <FS_DELIREVER>-MJAHR    "入出庫伝票年(Od)
BINARY SEARCH.

IF SY-SUBRC <> 0.

<FS_DELIREVER>-STATUS = 'I'.                  "新規登録

ELSE.

IF LST_ZTEGSDT206-STATUS = 'C'.               "完了

DELETE O_TD_DELIREVER INDEX LW_TABIX.
CONTINUE.

ELSE.

<FS_DELIREVER>-STATUS = 'U'.                "更新

ENDIF.

ENDIF.

**** START ADD 2015/03/03 ISID11 ****
CLEAR:
LST_WERK_INB.

READ TABLE I_TD_WERK_INB INTO LST_WERK_INB
WITH KEY MBLNR  = <FS_DELIREVER>-SMBLN "取消元の入出庫伝票番号
MJAHR  = <FS_DELIREVER>-SJAHR "取消元の入出庫伝票年
ZEILE  = <FS_DELIREVER>-SMBLP "取消元の入出庫伝票の明細
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_DELIREVER>-WERK_INB = LST_WERK_INB-WERKS.   "入庫プラント

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

*   受発注連携テーブルから発注情報を取得する
CLEAR:
LST_ZTEGSDT203.

READ TABLE I_TD_ZTEGSDT203 INTO LST_ZTEGSDT203
**** START UPD 2015/03/03 ISID11 ****
*      WITH KEY VBELN = <FS_DELIREVER>-VBELN_IM        "出荷伝票
*               POSNR = <FS_DELIREVER>-VBELP_IM        "出荷明細
WITH KEY VBELN = <FS_DELIREVER>-VGBEL            "受注伝票番号
POSNR = <FS_DELIREVER>-VGPOS            "受注明細番号
**** END UPD 2015/03/03 ISID11 ****
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_DELIREVER>-EBELN = LST_ZTEGSDT203-EBELN.    "購買伝票番号
<FS_DELIREVER>-EBELP = LST_ZTEGSDT203-EBELP.    "購買伝票明細番号

**** START ADD 2015/03/26 ISID11 ****
**** START UPD 2015/03/30 ISID11 ****
*      <FS_DELIREVER>-VKBUR = LST_ZTEGSDT203-VKBUR.   "営業所
<FS_DELIREVER>-VKGRP = LST_ZTEGSDT203-VKGRP.   "営業グループ
**** END UPD 2015/03/30 ISID11 ****
<FS_DELIREVER>-EKGRP = LST_ZTEGSDT203-EKGRP.   "購買グループ
**** END ADD 2015/03/26 ISID11 ****

*     データが存在する場合、入出庫連携テーブルを検索し取消元の
*     入出庫伝票(Inbound)を取得する
SORT LTD_ZTEGSDT206 BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING
EBELN      ASCENDING.

CLEAR:
LST_ZTEGSDT206.
READ TABLE LTD_ZTEGSDT206 INTO LST_ZTEGSDT206
WITH KEY KDAUF      = <FS_DELIREVER>-VGBEL  "受注伝票番号
MBLNR_OUTB = <FS_DELIREVER>-SMBLN  "入出庫伝票番号(Od)
MJAHR_OUTB = <FS_DELIREVER>-SJAHR  "入出庫伝票年(Od)
EBELN      = <FS_DELIREVER>-EBELN  "購買発注番号
BINARY SEARCH.

IF SY-SUBRC = 0.

**** START UPD 2015/03/03 ISID11 ****
*        <FS_DELIREVER>-MBLNR_INB = LST_ZTEGSDT206-MBLNR_INB.
*        "取消元の入出庫伝票番号(Inbound)
*        <FS_DELIREVER>-MJAHR_INB = LST_ZTEGSDT206-MJAHR_INB.
*        "取消元の入出庫伝票年(Inbound)
<FS_DELIREVER>-MBLNR_NEW = LST_ZTEGSDT206-MBLNR_INB.
"取消元の入出庫伝票番号(Inbound)
<FS_DELIREVER>-MJAHR_NEW = LST_ZTEGSDT206-MJAHR_INB.
"取消元の入出庫伝票年(Inbound)
**** END UPD 2015/03/03 ISID11 ****

ELSE.

MESSAGE E062(ZMEGSD01) WITH <FS_DELIREVER>-SMBLN
INTO LW_MSGTX.
*       エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_DELIREVER>
CNS_ZKBUNCC_2      "処理区分
'ZMEGSD01'         "メッセージクラス
'062'              "メッセージNo
**** START ADD 2015/04/24 ISID11 ****
<FS_DELIREVER>-SMBLN   "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX           "メッセージテキスト
SPACE
CHANGING O_TD_ERROR.

*       データが存在しない場合処理、該当レコードを削除次のレコード処理へ
DELETE O_TD_DELIREVER INDEX LW_TABIX.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

ELSE.

*     データが存在しない場合処理、該当レコードを削除、次のレコード処理へ
DELETE O_TD_DELIREVER INDEX LW_TABIX.
CONTINUE.

ENDIF.

**** START ADD 2015/03/03 ISID11 ****
<FS_DELIREVER>-MBLNR_SKEY = <FS_DELIREVER>-MBLNR_NEW.
<FS_DELIREVER>-MJAHR_SKEY = <FS_DELIREVER>-MJAHR_NEW.
**** END ADD 2015/03/03 ISID11 ****

ENDLOOP.

**** START ADD 2015/03/03 ISID11 ****
* ソート: 取消元の入出庫伝票番号（Inbound）
SORT O_TD_DELIREVER BY EBELN_SKEY ASCENDING
*                         EBELP_SKEY ASCENDING
MBLNR_SKEY ASCENDING
MJAHR_SKEY ASCENDING.
*                         ZEILE ASCENDING.
**** END ADD 2015/03/03 ISID11 ****

ENDFORM.                    " EDIT_DELIVERYREVERSE
*&---------------------------------------------------------------------*
*&      Form  GET_RECEIVINGCANCEL
*&---------------------------------------------------------------------*
*       購買側入庫取消の対象データを取得する
*----------------------------------------------------------------------*
*      -->I_JOB_DATE_F    実行日付From
*      -->I_JOB_TIME_F    実行時刻From
*      -->I_JOB_DATE_T    実行日付To
*      -->I_JOB_TIME_T    実行時刻To
*      <--O_TD_RECCANCEL  ITAB:出庫取消連携データ
*      <--O_TD_ERROR      ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM GET_RECEIVINGCANCEL USING I_JOB_DATE_F   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_F   TYPE ZTEGSDT202-JOB_TIME
I_JOB_DATE_T   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_T   TYPE ZTEGSDT202-JOB_TIME
CHANGING O_TD_RECCANCEL TYPE TYP_TD_STOCK
O_TD_ERROR     TYPE TYP_TD_ERROR.

DATA:
LTD_ZTEGSDT203  TYPE TYP_TD_ZTEGSDT203,
"ITAB:SalesDataFromPurchOrder
LTD_ZTEGSDT206  TYPE TYP_TD_ZTEGSDT206,
"ITAB:StockLinkageBetweenCrossCompany
LTD_ZTEGSDT206_CAN  TYPE TYP_TD_ZTEGSDT206,   "ITAB:入出庫出荷
**** START ADD 2015/03/03 ISID11 ****
LTD_WERK_INB    TYPE TYP_TD_WERK_INB.     "取消元入庫プラント
**** END ADD 2015/03/03 ISID11 ****


* 伝票セグメント: 品目の検索
PERFORM GET_MSEG_CANCEL USING I_JOB_DATE_F
I_JOB_TIME_F
I_JOB_DATE_T
I_JOB_TIME_T
CHANGING O_TD_RECCANCEL.

* データが存在しない場合、処理A-3入出庫連携更新処理へ飛ぶ
IF O_TD_RECCANCEL IS INITIAL.

RETURN.

ENDIF.

* 更新区分の検索
PERFORM GET_ZTEGSDT206_CANCEL USING O_TD_RECCANCEL
CHANGING LTD_ZTEGSDT206.

* 受発注連携テーブルから受注情報検索
PERFORM GET_ZTEGSDT203_CANCEL USING O_TD_RECCANCEL
CHANGING LTD_ZTEGSDT203.

* 入出庫連携テーブルの検索
**** START UPD 2015/03/03 ISID11 ****
*  PERFORM GET_LIKP_CANCEL USING
***** START UPD 2015/03/03 ISID11 ****
**                                LTD_ZTEGSDT206
*                                O_TD_RECCANCEL
***** END UPD 2015/03/03 ISID11 ****
PERFORM REGET_ZTEGSDT206_LIKP
USING LTD_ZTEGSDT203             "ITAB:販売データ
**** END UPD 2015/03/03 ISID11 ****
CHANGING LTD_ZTEGSDT206_CAN.

**** START ADD 2015/03/03 ISID11 ****
* 取消元入庫プラントを取得
PERFORM GET_WERK_INB USING O_TD_RECCANCEL  "ITAB:出庫取消連携データ
CHANGING LTD_WERK_INB.   "取消元入庫プラント
**** END ADD 2015/03/03 ISID11 ****

* 購買側入庫取消の対象データの編集
PERFORM EDIT_RECEIVINGCANCEL USING LTD_ZTEGSDT206
LTD_ZTEGSDT203
LTD_ZTEGSDT206_CAN
**** START ADD 2015/03/03 ISID11 ****
LTD_WERK_INB
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_RECCANCEL
O_TD_ERROR.

ENDFORM.                    " GET_RECEIVINGCANCEL
*&---------------------------------------------------------------------*
*&      Form  GET_MSEG_CANCEL
*&---------------------------------------------------------------------*
*       伝票セグメント: 品目の検索
*----------------------------------------------------------------------*
*      -->I_JOB_DATE_F    実行日付From
*      -->I_JOB_TIME_F    実行時刻From
*      -->I_JOB_DATE_T    実行日付To
*      -->I_JOB_TIME_T    実行時刻To
*      <--O_TD_RECCANCEL  ITAB:出庫取消連携データ
*----------------------------------------------------------------------*
FORM GET_MSEG_CANCEL  USING I_JOB_DATE_F   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_F   TYPE ZTEGSDT202-JOB_TIME
I_JOB_DATE_T   TYPE ZTEGSDT202-JOB_DATE
I_JOB_TIME_T   TYPE ZTEGSDT202-JOB_TIME
CHANGING O_TD_RECCANCEL TYPE TYP_TD_STOCK.

IF S_CPUDT-LOW <> S_CPUDT-HIGH.
SELECT MBLNR                   "入出庫伝票番号(Inbound)
MJAHR                   "入出庫伝票年(Inbound)
ZEILE                   "入出庫伝票の明細(Inbound)
BUKRS                   "会社コード(Inbound)
WERKS AS WERK_OUTB      "入庫プラント
SMBLN                   "取消元の入出庫伝票番号(Inbound)
SJAHR                   "取消元の入出庫伝票年(Inbound)
SMBLP                   "取消元の入出庫伝票の明細(Inbound)
EBELN                   "購買伝票番号
EBELP                   "購買伝票の明細番号
BUDAT_MKPF              "伝票の転記日付
MATNR                   "品目コード
INTO CORRESPONDING FIELDS OF TABLE O_TD_RECCANCEL
FROM MSEG
WHERE WERKS IN S_RWERKS       "入庫プラント
AND BUKRS IN RD_BUKRS       "会社コード
AND ( BWART = '102' OR      "移動タイプ
BWART = '162' )
**** START ADD 2015/03/10 ISID11 ****
AND MBLNR IN S_IMBLNR       "Inbound Mat.Doc.
**** END ADD 2015/03/10 ISID11 ****
AND ( ( CPUDT_MKPF =  I_JOB_DATE_F   AND
CPUTM_MKPF >= I_JOB_TIME_F )
OR   ( CPUDT_MKPF >  I_JOB_DATE_F   AND
CPUDT_MKPF <  I_JOB_DATE_T )
OR   ( CPUDT_MKPF =  I_JOB_DATE_T   AND
CPUTM_MKPF <= I_JOB_TIME_T ) ).

ELSE.

SELECT MBLNR                   "入出庫伝票番号(Inbound)
MJAHR                   "入出庫伝票年(Inbound)
ZEILE                   "入出庫伝票の明細(Inbound)
BUKRS                   "会社コード(Inbound)
WERKS AS WERK_OUTB      "入庫プラント
SMBLN                   "取消元の入出庫伝票番号(Inbound)
SJAHR                   "取消元の入出庫伝票年(Inbound)
SMBLP                   "取消元の入出庫伝票の明細(Inbound)
EBELN                   "購買伝票番号
EBELP                   "購買伝票の明細番号
BUDAT_MKPF              "伝票の転記日付
MATNR                   "品目コード
INTO CORRESPONDING FIELDS OF TABLE O_TD_RECCANCEL
FROM MSEG
WHERE WERKS IN S_RWERKS       "入庫プラント
AND BUKRS IN RD_BUKRS       "会社コード
AND ( BWART = '102' OR      "移動タイプ
BWART = '162' )
**** START ADD 2015/03/10 ISID11 ****
AND MBLNR IN S_IMBLNR       "Inbound Mat.Doc.
**** END ADD 2015/03/10 ISID11 ****
AND CPUDT_MKPF =  I_JOB_DATE_F
AND CPUTM_MKPF >= I_JOB_TIME_F
AND CPUTM_MKPF <= I_JOB_TIME_T.

ENDIF.

IF O_TD_RECCANCEL IS NOT INITIAL.

SORT O_TD_RECCANCEL BY EBELN ASCENDING
MBLNR ASCENDING
MJAHR ASCENDING.

ENDIF.

ENDFORM.                    " GET_MSEG_CANCEL
*&---------------------------------------------------------------------*
*&      Form  GET_ZTEGSDT206_CANCEL
*&---------------------------------------------------------------------*
*       更新区分の検索
*----------------------------------------------------------------------*
*      -->I_TD_RECCANCEL   ITAB:出庫取消連携データ
*      <--O_TD_ZTEGSDT206  ITAB:StockLinkageBetweenCrossCompany
*----------------------------------------------------------------------*
FORM GET_ZTEGSDT206_CANCEL
USING I_TD_RECCANCEL  TYPE TYP_TD_STOCK
CHANGING O_TD_ZTEGSDT206 TYPE TYP_TD_ZTEGSDT206.

DATA:
LTD_RECCANCEL  TYPE TYP_TD_STOCK.

LTD_RECCANCEL = I_TD_RECCANCEL.

DELETE ADJACENT DUPLICATES FROM LTD_RECCANCEL
COMPARING EBELN
MBLNR
MJAHR.

SELECT KDAUF                     "受注伝票番号
MBLNR_OUTB                "入出庫伝票番号(Outbound)
MJAHR_OUTB                "入出庫伝票年(Outbound)
EBELN                     "購買伝票番号
MBLNR_INB                 "入出庫伝票番号(Inbound)
MJAHR_INB                 "入出庫伝票年(Inbound)
STATUS                    "処理ステータス
INTO CORRESPONDING FIELDS OF TABLE O_TD_ZTEGSDT206
FROM ZTEGSDT206
FOR ALL ENTRIES IN LTD_RECCANCEL
WHERE EBELN     = LTD_RECCANCEL-EBELN  "購買伝票番号
AND MBLNR_INB = LTD_RECCANCEL-MBLNR  "入出庫伝票番号(Inbound)
AND MJAHR_INB = LTD_RECCANCEL-MJAHR. "入出庫伝票年(Inbound)

IF SY-SUBRC = 0.

SORT O_TD_ZTEGSDT206 BY EBELN      ASCENDING
MBLNR_INB  ASCENDING
MJAHR_INB  ASCENDING.

ENDIF.

ENDFORM.                    " GET_ZTEGSDT206_CANCEL
*&---------------------------------------------------------------------*
*&      Form  GET_ZTEGSDT203_CANCEL
*&---------------------------------------------------------------------*
*       受発注連携テーブルから受注情報検索
*----------------------------------------------------------------------*
*      -->I_TD_RECCANCEL   ITAB:出庫取消連携データ
*      <--O_TD_ZTEGSDT203  ITAB:SalesDataFromPurchOrder
*----------------------------------------------------------------------*
FORM GET_ZTEGSDT203_CANCEL
USING I_TD_RECCANCEL  TYPE TYP_TD_STOCK
CHANGING O_TD_ZTEGSDT203 TYPE TYP_TD_ZTEGSDT203.

DATA:
LTD_RECCANCEL TYPE TYP_TD_STOCK.

LTD_RECCANCEL = I_TD_RECCANCEL.
SORT LTD_RECCANCEL BY EBELN ASCENDING
EBELP ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_RECCANCEL
COMPARING EBELN
EBELP.

SELECT VBELN                        "販売伝票
POSNR                        "販売伝票明細
EBELN                        "購買伝票番号
EBELP                        "購買伝票の明細番号
KNTTP                        "勘定設定カテゴリ
**** START ADD 2015/03/26 ISID11 ****
**** START UPD 2015/03/30 ISID11 ****
*         VKBUR                        "購買グループ
VKGRP                        "営業グループ
**** END UPD 2015/03/30 ISID11 ****
EKGRP                        "購買グループ
**** END ADD 2015/03/26 ISID11 ****
INTO TABLE O_TD_ZTEGSDT203
FROM ZTEGSDT203
FOR ALL ENTRIES IN LTD_RECCANCEL
WHERE EBELN = LTD_RECCANCEL-EBELN  "購買伝票番号
AND EBELP = LTD_RECCANCEL-EBELP  "購買伝票の明細番号
AND ZKBUNCC = CNS_ZKBUNCC_3      "固定値「3」(受注登録)
AND STATUS  = 'C'.               "固定値「C」(完了)

IF SY-SUBRC = 0.

SORT O_TD_ZTEGSDT203 BY EBELN ASCENDING
EBELP ASCENDING.

ENDIF.

ENDFORM.                    " GET_ZTEGSDT203_CANCEL
**** START DEL 2015/03/03 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  GET_LIKP_CANCEL
*&---------------------------------------------------------------------*
*       入出庫連携テーブルの検索
*----------------------------------------------------------------------*
*      -->I_TD_ZTEGSDT206      ITAB:StockLinkageBetweenCrossCompany
*      <--O_TD_ZTEGSDT206_can  ITAB:入出庫出荷
*----------------------------------------------------------------------*
*FORM GET_LIKP_CANCEL USING
***** START UPD 2015/03/03 ISID11 ****
**               I_TD_ZTEGSDT206     TYPE TYP_TD_ZTEGSDT206
*               I_TD_RECCANCEL  TYPE TYP_TD_STOCK
***** END UPD 2015/03/03 ISID11 ****
*      CHANGING O_TD_ZTEGSDT206_CAN TYPE TYP_TD_ZTEGSDT206.
*
***** START UPD 2015/03/03 ISID11 ****
**  DATA:
**    LTD_ZTEGSDT206     TYPE TYP_TD_ZTEGSDT206.
**
****** START ADD 2015/03/03 ISID11 ****
**  IF I_TD_ZTEGSDT206 IS INITIAL.
**
**    RETURN.
**
**  ENDIF.
****** END ADD 2015/03/03 ISID11 ****
**
**  LTD_ZTEGSDT206 = I_TD_ZTEGSDT206.
**  SORT LTD_ZTEGSDT206 BY KDAUF     ASCENDING
**                         EBELN     ASCENDING
**                         MBLNR_INB ASCENDING
**                         MJAHR_INB ASCENDING.
**  DELETE ADJACENT DUPLICATES FROM LTD_ZTEGSDT206
**                        COMPARING KDAUF
**                                  EBELN
**                                  MBLNR_INB
**                                  MJAHR_INB.
*  DATA:
*    LTD_RECCANCEL  TYPE TYP_TD_STOCK.
*
*  LTD_RECCANCEL = I_TD_RECCANCEL.
*  SORT LTD_RECCANCEL by VGBEL ASCENDING
*                        EBELN ASCENDING
*                        SMBLN ASCENDING
*                        SJAHR ASCENDING.
*
*  DELETE ADJACENT DUPLICATES FROM LTD_RECCANCEL
*                        COMPARING VGBEL
*                                  EBELN
*                                  SMBLN
*                                  SJAHR.
***** END UPD 2015/03/03 ISID11 ****
*
*  SELECT ZTEGSDT206~KDAUF             "受注伝票番号
*         ZTEGSDT206~MBLNR_OUTB        "入出庫伝票番号(Outbound)
*         ZTEGSDT206~MJAHR_OUTB        "入出庫伝票年(Outbound)
*         ZTEGSDT206~EBELN             "購買伝票番号
*         ZTEGSDT206~MBLNR_INB         "入出庫伝票番号(Inbound)
*         ZTEGSDT206~MJAHR_INB         "入出庫伝票年(Inbound)
*         ZTEGSDT206~VBELN             "出荷伝票
*         LIKP~VBTYP                   "販売管理伝票カテゴリ
*    INTO CORRESPONDING FIELDS OF TABLE O_TD_ZTEGSDT206_CAN
*    FROM ZTEGSDT206
*   INNER JOIN LIKP
*      ON ZTEGSDT206~VBELN = LIKP~VBELN
*     FOR ALL ENTRIES IN
***** START UPD 2015/03/03 ISID11 ****
**                        LTD_ZTEGSDT206
**   WHERE KDAUF     = LTD_ZTEGSDT206-KDAUF      "受注伝票番号
**     AND EBELN     = LTD_ZTEGSDT206-EBELN      "購買伝票番号
**     AND MBLNR_INB = LTD_ZTEGSDT206-MBLNR_INB  "取消元の入出庫伝票番号I
**     AND MJAHR_INB = LTD_ZTEGSDT206-MJAHR_INB. "取消元の入出庫伝票年I
*                        LTD_RECCANCEL
*   WHERE
**         KDAUF     = LTD_RECCANCEL-VGBEL  "受注伝票番号
**     AND
*         EBELN     = LTD_RECCANCEL-EBELN  "購買伝票番号
*     AND MBLNR_INB = LTD_RECCANCEL-SMBLN  "取消元の入出庫伝票番号I
*     AND MJAHR_INB = LTD_RECCANCEL-SJAHR. "取消元の入出庫伝票年I
***** END UPD 2015/03/03 ISID11 ****
*
*  IF SY-SUBRC = 0.
*
*    SORT O_TD_ZTEGSDT206_CAN BY KDAUF     ASCENDING
*                                EBELN     ASCENDING
*                                MBLNR_INB ASCENDING
*                                MJAHR_INB ASCENDING.
*
*  ENDIF.
*
*ENDFORM.                    " GET_LIKP_CANCEL
**** END DEL 2015/03/03 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  EDIT_RECEIVINGCANCEL
*&---------------------------------------------------------------------*
*       購買側入庫取消の対象データの編集
*----------------------------------------------------------------------*
*      -->I_TD_ZTEGSDT206      ITAB:StockLinkageBetweenCrossCompany
*      -->I_TD_ZTEGSDT203      ITAB:SalesDataFromPurchOrder
*      -->I_TD_ZTEGSDT206_can  ITAB:入出庫出荷
*      -->I_TD_WERK_INB       取消元入庫プラント
*      <--O_TD_RECCANCEL       ITAB:出庫取消連携データ
*      <--O_TD_ERROR           ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM EDIT_RECEIVINGCANCEL
USING I_TD_ZTEGSDT206     TYPE TYP_TD_ZTEGSDT206
I_TD_ZTEGSDT203     TYPE TYP_TD_ZTEGSDT203
I_TD_ZTEGSDT206_CAN TYPE TYP_TD_ZTEGSDT206
**** START ADD 2015/03/03 ISID11 ****
I_TD_WERK_INB       TYPE TYP_TD_WERK_INB
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_RECCANCEL      TYPE TYP_TD_STOCK
O_TD_ERROR          TYPE TYP_TD_ERROR.

DATA:
LW_TABIX       TYPE SY-TABIX,
LW_MSGTX       TYPE ZTEGSDT206-MSGTX,
LST_ZTEGSDT203 TYPE TYP_ZTEGSDT203,
LST_ZTEGSDT206 TYPE TYP_ZTEGSDT206,
**** START ADD 2015/03/03 ISID11 ****
LST_WERK_INB   TYPE TYP_WERK_INB.
**** END ADD 2015/03/03 ISID11 ****

FIELD-SYMBOLS:
<FS_RECCANCEL>  TYPE TYP_STOCK.

LOOP AT O_TD_RECCANCEL ASSIGNING <FS_RECCANCEL>.

LW_TABIX = SY-TABIX.

*   更新区分の編集
CLEAR:
LST_ZTEGSDT206.

READ TABLE I_TD_ZTEGSDT206 INTO LST_ZTEGSDT206
WITH KEY EBELN     = <FS_RECCANCEL>-EBELN  "購買伝票番号
MBLNR_INB = <FS_RECCANCEL>-MBLNR  "入出庫伝票番号(I)
MJAHR_INB = <FS_RECCANCEL>-MJAHR  "入出庫伝票年(Inbound)
BINARY SEARCH.

IF SY-SUBRC <> 0.

<FS_RECCANCEL>-STATUS = 'I'.                  "新規登録

ELSE.

IF LST_ZTEGSDT206-STATUS = 'C'.               "完了

DELETE O_TD_RECCANCEL INDEX LW_TABIX.
CONTINUE.

ELSE.

<FS_RECCANCEL>-STATUS = 'U'.                "更新

ENDIF.

ENDIF.

*   受発注連携テーブルから受注情報を取得する
CLEAR:
LST_ZTEGSDT203.

READ TABLE I_TD_ZTEGSDT203 INTO LST_ZTEGSDT203
WITH KEY EBELN = <FS_RECCANCEL>-EBELN   "購買伝票番号
EBELP = <FS_RECCANCEL>-EBELP   "購買伝票の明細番号
BINARY SEARCH.

IF SY-SUBRC = 0.

IF LST_ZTEGSDT203-KNTTP = 'M'         "固定値「M」(在庫品)
**** START ADD 2015/03/03 ISID11 ****
OR LST_ZTEGSDT203-KNTTP IS INITIAL.
**** END ADD 2015/03/03 ISID11 ****

<FS_RECCANCEL>-VGBEL = LST_ZTEGSDT203-VBELN. "受注伝票番号
<FS_RECCANCEL>-VGPOS = LST_ZTEGSDT203-POSNR. "受注明細番号
<FS_RECCANCEL>-KNTTP = LST_ZTEGSDT203-KNTTP. "勘定設定カテゴリ

**** START ADD 2015/03/26 ISID11 ****
**** END UPD 2015/03/30 ISID11 ****
*        <FS_RECCANCEL>-VKBUR = LST_ZTEGSDT203-VKBUR. "営業所
<FS_RECCANCEL>-VKGRP = LST_ZTEGSDT203-VKGRP. "営業グループ
**** END UPD 2015/03/30 ISID11 ****
<FS_RECCANCEL>-EKGRP = LST_ZTEGSDT203-EKGRP. "購買グループ
**** END ADD 2015/03/26 ISID11 ****

*     勘定設定カテゴリが在庫品（空白と"M"）以外の場合
ELSE.

*       データが存在しない場合処理、該当レコードを削除、次のレコード
DELETE O_TD_RECCANCEL INDEX LW_TABIX.
CONTINUE.

ENDIF.

ELSE.

*     データが存在しない場合処理、該当レコードを削除、次のレコード処理へ
DELETE O_TD_RECCANCEL INDEX LW_TABIX.
CONTINUE.

ENDIF.

**** START ADD 2015/03/03 ISID11 ****
CLEAR:
LST_WERK_INB.

READ TABLE I_TD_WERK_INB INTO LST_WERK_INB
WITH KEY MBLNR  = <FS_RECCANCEL>-SMBLN "取消元の入出庫伝票番号
MJAHR  = <FS_RECCANCEL>-SJAHR "取消元の入出庫伝票年
ZEILE  = <FS_RECCANCEL>-SMBLP "取消元の入出庫伝票の明細
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_RECCANCEL>-WERK_INB = LST_WERK_INB-WERKS.   "入庫プラント

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

*   入出庫連携テーブルを検索し取消元の出荷伝票を取得する
CLEAR:
LST_ZTEGSDT206.

READ TABLE I_TD_ZTEGSDT206_CAN INTO LST_ZTEGSDT206
WITH KEY KDAUF     = <FS_RECCANCEL>-VGBEL "受注伝票番号
EBELN     = <FS_RECCANCEL>-EBELN "購買伝票番号
MBLNR_INB = <FS_RECCANCEL>-SMBLN "取消元の入出庫伝票番号I
MJAHR_INB = <FS_RECCANCEL>-SJAHR "取消元の入出庫伝票年I
BINARY SEARCH.
IF SY-SUBRC = 0.

**** START UPD 2015/03/03 ISID11 ****
<FS_RECCANCEL>-SMBLN    = LST_ZTEGSDT206-MBLNR_OUTB.
"取消元の入出庫伝票番号(Outbound)
<FS_RECCANCEL>-SJAHR    = LST_ZTEGSDT206-MJAHR_OUTB.
"取消元の入出庫伝票年(Outbound)
*      <FS_RECCANCEL>-MBLNR    = LST_ZTEGSDT206-MBLNR_OUTB.
*      "取消元の入出庫伝票番号(Outbound)
*      <FS_RECCANCEL>-MJAHR    = LST_ZTEGSDT206-MJAHR_OUTB.
*      "取消元の入出庫伝票年(Outbound)
**** END UPD 2015/03/03 ISID11 ****
<FS_RECCANCEL>-VBELN_IM = LST_ZTEGSDT206-VBELN.
"出荷伝票
<FS_RECCANCEL>-VBTYP    = LST_ZTEGSDT206-VBTYP.
"販売管理伝票カテゴリ

*   データが存在しない場合処理、該当データを削除し、次のレコード処理へ
ELSE.
MESSAGE E062(ZMEGSD01) WITH <FS_RECCANCEL>-SMBLN
INTO LW_MSGTX.       "メッセージテキスト
*     エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_RECCANCEL>
CNS_ZKBUNCC_3      "処理区分
'ZMEGSD01'         "メッセージクラス
'062'              "メッセージNo
**** START ADD 2015/04/24 ISID11 ****
<FS_RECCANCEL>-SMBLN   "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX           "メッセージテキスト
SPACE
CHANGING O_TD_ERROR.

*     データが存在しない場合処理、該当レコードを削除次のレコード処理へ
DELETE O_TD_RECCANCEL INDEX LW_TABIX.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

**** START ADD 2015/03/03 ISID11 ****
<FS_RECCANCEL>-EBELN_SKEY = <FS_RECCANCEL>-VBELN_IM.
*    <FS_RECCANCEL>-EBELP_skey = <FS_RECCANCEL>-VBELP_IM.
**** END ADD 2015/03/03 ISID11 ****

ENDLOOP.

**** START ADD 2015/03/03 ISID11 ****
* ソート: ITAB:出庫取消連携データ
SORT O_TD_RECCANCEL BY EBELN_SKEY ASCENDING
*                         EBELP_skey ASCENDING
MBLNR_SKEY ASCENDING
MJAHR_SKEY ASCENDING.
**** END ADD 2015/03/03 ISID11 ****

ENDFORM.                    " EDIT_RECEIVINGCANCEL
*&---------------------------------------------------------------------*
*&      Form  CONTROL_SELECT_OPTIONS
*&---------------------------------------------------------------------*
*       Create Date Time Control
*----------------------------------------------------------------------*
FORM CONTROL_SELECT_OPTIONS .

DATA:
LST_RESTRICT TYPE SSCR_RESTRICT,
LST_OPTLIST  TYPE SSCR_OPT_LIST,
LST_ASS TYPE SSCR_ASS.

LST_OPTLIST-NAME = 'OBJECTKEY1'.
LST_OPTLIST-OPTIONS-EQ = 'X'.
LST_OPTLIST-OPTIONS-BT = 'X'.
APPEND LST_OPTLIST TO LST_RESTRICT-OPT_LIST_TAB.
LST_ASS-KIND = 'S'.
LST_ASS-NAME = 'S_CPUDT'.
LST_ASS-SG_MAIN = 'I'.
LST_ASS-SG_ADDY = SPACE.
LST_ASS-OP_MAIN = 'OBJECTKEY1'.
APPEND LST_ASS TO LST_RESTRICT-ASS_TAB.

LST_ASS-NAME = 'S_CPUTM'.
APPEND LST_ASS TO LST_RESTRICT-ASS_TAB.

CALL FUNCTION 'SELECT_OPTIONS_RESTRICT'
EXPORTING
RESTRICTION            = LST_RESTRICT
EXCEPTIONS
TOO_LATE               = 1
REPEATED               = 2
SELOPT_WITHOUT_OPTIONS = 3
SELOPT_WITHOUT_SIGNS   = 4
INVALID_SIGN           = 5
EMPTY_OPTION_LIST      = 6
INVALID_KIND           = 7
REPEATED_KIND_A        = 8
OTHERS                 = 9.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                    " CONTROL_SELECT_OPTIONS
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA_MAIN
*&---------------------------------------------------------------------*
*       入出庫更新処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      <--O_TD_DELIISSUE  ITAB:出庫確認連携データ
*      <--O_TD_DELIREVER  ITAB:出庫取消連携データ
*      <--O_TD_RECCANCEL  ITAB:入庫取消連携データ
**** START ADD BY ISID REN 2015/07/03 ****
*      <--O_TD_D_C        入庫連携されているデータ
**** END ADD BY ISID REN 2015/07/03 ****
*      <--O_TD_ERROR      ITAB:入出庫連携エラーデータ
*      <--O_ERROR_FLG     エラーフラグ
*----------------------------------------------------------------------*
FORM EDIT_DATA_MAIN USING I_SYST_DATE     TYPE SY-DATUM
I_SYST_TIME     TYPE SY-UZEIT
CHANGING O_TD_DELIISSUE  TYPE TYP_TD_STOCK
O_TD_DELIREVER  TYPE TYP_TD_STOCK
O_TD_RECCANCEL  TYPE TYP_TD_STOCK
**** START ADD BY ISID REN 2015/07/03 ****
O_TD_D_C        TYPE TYP_TD_STOCK
**** END ADD BY ISID REN 2015/07/03 ****
O_TD_ERROR      TYPE TYP_TD_ERROR
O_ERROR_FLG     TYPE FLAG.

* 「ITAB:出庫確認連携データ」存在する場合のみ行う
IF O_TD_DELIISSUE IS NOT INITIAL.

*   入庫更新処理
PERFORM UPDATE_DELIVERYISSUE USING I_SYST_DATE
I_SYST_TIME
**** START ADD 2015/03/03 ISID11 ****
'X'
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_DELIISSUE
**** START ADD BY ISID REN 2015/07/03 ****
O_TD_D_C
**** END ADD BY ISID REN 2015/07/03 ****
O_TD_ERROR
O_ERROR_FLG.
ENDIF.

IF O_ERROR_FLG IS NOT INITIAL.

RETURN.

ENDIF.

* 「ITAB:出庫取消連携データ」存在する場合のみ行う
IF O_TD_DELIREVER IS NOT INITIAL.

*   出庫取消処理
PERFORM UPDATE_DELIVERYREVERSE USING I_SYST_DATE
I_SYST_TIME
**** START ADD 2015/03/03 ISID11 ****
'X'
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_DELIREVER
O_TD_ERROR
O_ERROR_FLG.

ENDIF.

IF O_ERROR_FLG IS NOT INITIAL.

RETURN.

ENDIF.

* 「ITAB:入庫取消連携データ」存在する場合のみ行う
IF O_TD_RECCANCEL IS NOT INITIAL.

*   入庫取消処理
PERFORM UPDATE_RECEIVINGCANCEL USING I_SYST_DATE
I_SYST_TIME
**** START ADD 2015/03/03 ISID11 ****
'X'
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_RECCANCEL
O_TD_ERROR
O_ERROR_FLG.

ENDIF.

ENDFORM.                    " EDIT_DATA_MAIN
*&---------------------------------------------------------------------*
*&      Form  UPDATE_DELIVERYISSUE
*&---------------------------------------------------------------------*
*       入庫更新処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      -->I_BATCH_FLG     BATCH FLAG
*      <--O_TD_DELIISSUE  ITAB:出庫確認連携データ
**** START ADD BY ISID REN 2015/07/03 ****
*      <--O_TD_D_C        入庫連携されているデータ
**** END ADD BY ISID REN 2015/07/03 ****
*      <--O_TD_ERROR      ITAB:入出庫連携エラーデータ
*      <--O_ERROR_FLG     エラーフラグ
*----------------------------------------------------------------------*
FORM UPDATE_DELIVERYISSUE USING I_SYST_DATE    TYPE SY-DATUM
I_SYST_TIME    TYPE SY-UZEIT
**** START ADD 2015/03/03 ISID11 ****
I_BATCH_FLG      TYPE FLAG
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_DELIISSUE TYPE TYP_TD_STOCK
**** START ADD BY ISID REN 2015/07/03 ****
O_TD_D_C       TYPE TYP_TD_STOCK
**** END ADD BY ISID REN 2015/07/03 ****
O_TD_ERROR     TYPE TYP_TD_ERROR
O_ERROR_FLG    TYPE FLAG.
DATA:
**** START UPD 2015/03/03 ISID11 ****
*    LTD_LOCK   TYPE TYP_TD_STOCK,
*    LST_LOCK   TYPE TYP_STOCK,
LTD_ZTEGSDT206_EXIST  TYPE TYP_TD_ZTEGSDT206_INSERT,
**** END UPD 2015/03/03 ISID11 ****
**** START ADD 2015/03/30 ISID11 ****
LTD_EBELN           TYPE TYP_TD_STOCK,
LST_EBELN           TYPE TYP_STOCK,
LST_EBELN_LOCK      TYPE TYP_STOCK,
LW_LOCKERR          TYPE FLAG,
**** END ADD 2015/03/30 ISID11 ****
**** START ADD 2015/10/08 ISID21 ****
LW_BSART    TYPE EKKO-BSART,
LW_TOTAL_INVCHECK TYPE I,
LW_ERRFLG_INVCHECK TYPE C,
LW_MENG_INV  TYPE  MSEG-MENGE,
LST_MSEG_INVCHECK TYPE TYP_MSEG_INVCHECK,
LTD_ERROR_INVCHECK TYPE TYP_TD_ERROR,
LTD_MSEG_INVCHECK TYPE TYP_TD_MSEG_INVCHECK,
**** END ADD 2015/10/08 ISID21 ****
LW_SUBRC   TYPE SY-SUBRC ,
LW_MSGTX   TYPE ZTEGSDT206-MSGTX,
LST_GOODSMVT_HEADER
TYPE BAPI2017_GM_HEAD_01, "入出庫伝票ヘッダデータ
LST_GOODSMVT_CODE
TYPE BAPI2017_GM_CODE, "在庫移動コードのトランザクションへの割当
LW_TESTRUN
TYPE BAPI2017_GM_GEN-TESTRUN, "在庫移動シミュレーション
LST_GOODSMVT_ITEM   TYPE BAPI2017_GM_ITEM_CREATE,
LTD_GOODSMVT_ITEM
TYPE STANDARD TABLE OF BAPI2017_GM_ITEM_CREATE, "入出庫伝票明細
LW_MATERIALDOCUMENT
TYPE BAPI2017_GM_HEAD_RET-MAT_DOC,              "入出庫伝票番号
LW_MATDOCUMENTYEAR
TYPE BAPI2017_GM_HEAD_RET-DOC_YEAR,             "入出庫伝票年度
LTD_RETURN TYPE STANDARD TABLE OF BAPIRET2, "リターンメッセージ
LST_RETURN          TYPE BAPIRET2.

FIELD-SYMBOLS:
<FS_DELIISSUE>  TYPE TYP_STOCK.

CLEAR:
O_ERROR_FLG.

**** START UPD 2015/03/03 ISID11 ****
** ソート:入出庫伝票番号(Outbound)
*  SORT O_TD_DELIISSUE BY MBLNR ASCENDING
*                         MJAHR ASCENDING.
* 存在レコード取得
PERFORM GET_EXIST_ZTEGSDT206 USING O_TD_DELIISSUE
'X'
CHANGING LTD_ZTEGSDT206_EXIST.
**** END UPD 2015/03/03 ISID11 ****

LOOP AT O_TD_DELIISSUE ASSIGNING <FS_DELIISSUE>.
CLEAR: LW_SUBRC.

*   処理区分追加QA.
<FS_DELIISSUE>-ZKBUNCC = CNS_ZKBUNCC_1.

**** START DEL 2015/03/03 ISID11 ****
**   入出庫連携テーブルのロック処理
*    PERFORM LOCK_EZZTEGSDT206 USING <FS_DELIISSUE>
*                           CHANGING LTD_LOCK
*                                    O_TD_ERROR
*                                    LW_SUBRC.
*
**   ロック失敗の場合、次のレコード処理へ
*    IF LW_SUBRC IS NOT INITIAL.
*      CONTINUE.
*    ENDIF.
**** END DEL 2015/03/03 ISID11 ****

**** START UPD 2015/03/03 ISID11 ****
*    AT NEW MJAHR.
AT NEW MJAHR_SKEY.

**** START ADD 2015/03/30 ISID11 ****
CLEAR: LTD_EBELN,
LW_LOCKERR.
**** END ADD 2015/03/30 ISID11 ****

**** START DEL 2015/03/30 ISID11 ****
**     入出庫連携テーブルのロック処理
*      PERFORM LOCK_EZZTEGSDT206 USING <FS_DELIISSUE>
*                             CHANGING
***** START DEL 2015/03/03 ISID11 ****
**                                      LTD_LOCK
***** END DEL 2015/03/03 ISID11 ****
*                                      O_TD_ERROR
*                                      LW_SUBRC.
*
**     ロック失敗の場合、次のレコード処理へ
*      IF LW_SUBRC IS NOT INITIAL.
*        ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
*        ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
***** START ADD 2015/03/30 ISID11 ****
*        LW_LOCKERR = 'X'.
***** END ADD 2015/03/30 ISID11 ****
*        CONTINUE.
*      ENDIF.
***** END UPD 2015/03/03 ISID11 ****
**** END DEL 2015/03/30 ISID11 ****

*     BAPIデータの編集
*     入出庫伝票ヘッダデータ
CLEAR: LST_GOODSMVT_HEADER,
LTD_GOODSMVT_ITEM[].

LST_GOODSMVT_HEADER-PSTNG_DATE
= <FS_DELIISSUE>-BUDAT_MKPF. "伝票の転記日付
LST_GOODSMVT_HEADER-DOC_DATE   = I_SYST_DATE.  "伝票の伝票日付
LST_GOODSMVT_HEADER-PR_UNAME   = SY-UNAME.     "ユーザ名
LST_GOODSMVT_HEADER-REF_DOC_NO
= <FS_DELIISSUE>-Z_INVOICE_NO. "納品書番号

*     在庫移動に対するコードのトランザクションへの割当
CLEAR: LST_GOODSMVT_CODE.

LST_GOODSMVT_CODE-GM_CODE = '01'.         "BAPI 在庫移動MB01

*     在庫移動シミュレーション
CLEAR: LW_TESTRUN.                        "本実行
ENDAT.

**** START ADD BY ISID REN 2015/08/13 ****
*  「出庫確認連携データ」-販売数量単位
*   <>「出庫確認連携データ」-発注数量単位のレコードが存在する場合
IF   <FS_DELIISSUE>-MEINS        "発注単位
<> <FS_DELIISSUE>-ERFME.       "販売数量単位
<FS_DELIISSUE>-MENEFLG = ABAP_TRUE. "受発注単位違いフラグ
ENDIF.
**** END ADD BY ISID REN 2015/08/13 ****

**** START ADD 2015/03/30 ISID11 ****
*   N 購買伝票
APPEND <FS_DELIISSUE> TO LTD_EBELN.
**** END ADD 2015/03/30 ISID11 ****

*   入出庫伝票明細
CLEAR: LST_GOODSMVT_ITEM.

LST_GOODSMVT_ITEM-MATERIAL  = <FS_DELIISSUE>-MATNR.    "品目コード
LST_GOODSMVT_ITEM-MATERIAL_EXTERNAL = <FS_DELIISSUE>-MATNR_SD.
"販売品目コード
LST_GOODSMVT_ITEM-PLANT     = <FS_DELIISSUE>-WERK_INB. "入庫プラント
LST_GOODSMVT_ITEM-STGE_LOC  = <FS_DELIISSUE>-LGORT.    "入庫保管場所
LST_GOODSMVT_ITEM-MOVE_TYPE = '101'.                 "固定値「101」
LST_GOODSMVT_ITEM-STCK_TYPE = <FS_DELIISSUE>-INSMK.  "在庫タイプ
**** START UPD BY ISID REN 2015/08/13 ****
*    LST_GOODSMVT_ITEM-ENTRY_QNT = <FS_DELIISSUE>-MENGE.  "入出庫数量
LST_GOODSMVT_ITEM-ENTRY_QNT = <FS_DELIISSUE>-ERFMG.  "入出庫数量
**** END UPD BY ISID REN 2015/08/13 ****
**** START ADD BY ISID21 2015/11/18 ****
LST_GOODSMVT_ITEM-BATCH = <FS_DELIISSUE>-CHARG.  "ロット番号
**** END ADD BY ISID21 2015/11/18****
**** START ADD 2015/03/27 ISID11 ****
LST_GOODSMVT_ITEM-ENTRY_UOM = <FS_DELIISSUE>-MEINS.  "入力単位
**** END ADD 2015/03/27 ISID11 ****
LST_GOODSMVT_ITEM-PO_NUMBER = <FS_DELIISSUE>-EBELN.  "購買発注番号
LST_GOODSMVT_ITEM-PO_ITEM   = <FS_DELIISSUE>-EBELP.  "購買伝票明細
LST_GOODSMVT_ITEM-MVT_IND   = 'B'.                   "固定値「B」

APPEND LST_GOODSMVT_ITEM TO LTD_GOODSMVT_ITEM.

*   BAPI　「BAPI_GOODSMVT_CREATE」をコールし、入庫処理を行う
**** START UPD 2015/03/03 ISID11 ****
*    AT END OF MJAHR.
AT END OF MJAHR_SKEY.
**** END UPD 2015/03/03 ISID11 ****

**** START ADD BY ISID REN 2015/08/13 ****
*     受発注の数量単位の一致性チェックを行う
CLEAR LST_EBELN.
READ TABLE LTD_EBELN INTO LST_EBELN
WITH KEY MENEFLG = ABAP_TRUE. "受発注単位違いフラグ
**** END ADD BY ISID REN 2015/08/13 ****

**** START ADD 2015/03/30 ISID11 ****
SORT LTD_EBELN BY VGBEL ASCENDING
MBLNR ASCENDING
MJAHR ASCENDING
EBELN ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_EBELN
COMPARING VGBEL
MBLNR
MJAHR
EBELN.

**** START ADD BY ISID REN 2015/08/13 ****
IF LST_EBELN-MENEFLG = ABAP_TRUE. "受発注単位違いフラグ
CLEAR LW_MSGTX.
*       品目コード変換
CALL FUNCTION 'CONVERSION_EXIT_MATN1_OUTPUT'
EXPORTING
INPUT  = LST_EBELN-MATNR
IMPORTING
OUTPUT = LST_EBELN-MATNR.

*       変換 Exit ALPHA:  内部 -> 外部
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_EBELN-VBELN_IM
IMPORTING
OUTPUT = LST_EBELN-VBELN_IM.

*       受発注単位が一致になっていない。（品目 =　&1　出荷伝票 =　&2）
MESSAGE E124(ZMEGSD01)
WITH LST_EBELN-MATNR       "品目コード
LST_EBELN-VBELN_IM    "出荷伝票
INTO LW_MSGTX.

LOOP AT LTD_EBELN INTO LST_EBELN.
*         エラーテーブル編集
PERFORM EDIT_ERROR USING LST_EBELN
LST_EBELN-ZKBUNCC
SY-MSGID
SY-MSGNO
SY-MSGV1          "メッセージ変数
SY-MSGV2          "メッセージ変数
SY-MSGV3          "メッセージ変数
SY-MSGV4          "メッセージ変数
LW_MSGTX
SPACE
CHANGING O_TD_ERROR.

ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ENDLOOP.

CONTINUE.
ENDIF.
**** END ADD BY ISID REN 2015/08/13 ****

*      IF LW_LOCKERR = 'X'.
*        CONTINUE.
*      ELSE.
**       ２つレコードのロック
*        IF LINES( LTD_EBELN ) > 1.
LOOP AT LTD_EBELN INTO LST_EBELN.
CLEAR: LW_SUBRC.

*       入出庫連携テーブルのロック処理
PERFORM LOCK_EZZTEGSDT206 USING LST_EBELN
CHANGING O_TD_ERROR
LW_SUBRC.

*       ロック失敗の場合、次のレコード処理へ
IF LW_SUBRC IS NOT INITIAL.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
LW_LOCKERR = 'X'.
CLEAR: LST_EBELN_LOCK.
LST_EBELN_LOCK = LST_EBELN.
EXIT.
ENDIF.
ENDLOOP.

IF LW_LOCKERR = 'X'.
CLEAR: LW_MSGTX.
MESSAGE ID SY-MSGID TYPE CNS_MSG_E NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
INTO LW_MSGTX.

LOOP AT LTD_EBELN INTO LST_EBELN.
IF LST_EBELN = LST_EBELN_LOCK.
CONTINUE.
ENDIF.

*         エラーテーブル編集
PERFORM EDIT_ERROR USING LST_EBELN
LST_EBELN-ZKBUNCC
SY-MSGID
SY-MSGNO
**** START ADD 2015/04/24 ISID11 ****
SY-MSGV1          "メッセージ変数
SY-MSGV2          "メッセージ変数
SY-MSGV3          "メッセージ変数
SY-MSGV4          "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
CNS_FLG_ON
CHANGING O_TD_ERROR.

ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ENDLOOP.

CONTINUE.
ENDIF.
*        ENDIF.
*      ENDIF.
**** END ADD 2015/03/30 ISID11 ****

**** START ADD 2015/09/10 ISID21 ****
IF LST_GOODSMVT_HEADER-REF_DOC_NO IS INITIAL.

*        伝票タイプを取得し、返品かを判断する。
SELECT SINGLE BSART FROM EKKO INTO LW_BSART
WHERE EBELN = <FS_DELIISSUE>-EBELN.

IF SY-SUBRC = 0 AND LW_BSART = CNS_BSART_ZB.
*           返品の場合納品書のチェックを行わない。
ELSE.
*        納品書番号がブランクの場合は、エラーにする。
MESSAGE E130(ZMEGSD01)
WITH <FS_DELIISSUE>-VBELN_IM
INTO LW_MSGTX.

LOOP AT LTD_EBELN INTO LST_EBELN.

*             エラーテーブル編集
PERFORM EDIT_ERROR USING LST_EBELN
LST_EBELN-ZKBUNCC
SY-MSGID
SY-MSGNO
*    *** START ADD 2015/04/24 ISID11 ****
SY-MSGV1          "メッセージ変数
SY-MSGV2          "メッセージ変数
SY-MSGV3          "メッセージ変数
SY-MSGV4          "メッセージ変数
*    *** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
CNS_FLG_ON
CHANGING O_TD_ERROR.

ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ENDLOOP.

CONTINUE.
ENDIF.
ELSE.
CLEAR: LW_TOTAL_INVCHECK,
LW_ERRFLG_INVCHECK,
LW_MENG_INV,
LTD_ERROR_INVCHECK[],
LTD_MSEG_INVCHECK[].
*        同一Invoiceで入庫されるかのチェックを行う
SELECT EBELN       "購買伝票番号
EBELP       "購買伝票の明細番号
MENGE      "数量
SHKZG      "借方/貸方フラグ
**** START ADD 2016/01/15 ISID19 ****
XBLNR_MKPF "参照伝票番号
**** END ADD 2016/01/15 ISID19 ****
FROM MSEG
INTO  TABLE LTD_MSEG_INVCHECK
WHERE EBELN = <FS_DELIISSUE>-EBELN.
**** START DEL 2016/01/15 ISID19 ****
*             AND XBLNR_MKPF =  LST_GOODSMVT_HEADER-REF_DOC_NO.
**** END DEL 2016/01/15 ISID19 ****

**** START ADD 2016/01/15 ISID19 ****
*         Invoiceチェック
PERFORM CHK_INV_NO
USING
LST_GOODSMVT_HEADER-REF_DOC_NO
CHANGING
LTD_MSEG_INVCHECK.
**** END ADD 2016/01/15 ISID19 ****

LOOP AT LTD_EBELN INTO LST_EBELN.
CLEAR: LW_MENG_INV.
*             貸し方／借り方を判断し、Invoice関連の数量を合計する。
LOOP AT LTD_MSEG_INVCHECK INTO LST_MSEG_INVCHECK
WHERE EBELN = LST_EBELN-EBELN
AND EBELP = LST_EBELN-EBELP.
IF LST_MSEG_INVCHECK-SHKZG = CNS_DEBIT.
LW_MENG_INV = LW_MENG_INV + LST_MSEG_INVCHECK-MENGE.
ELSE.
LW_MENG_INV = LW_MENG_INV - LST_MSEG_INVCHECK-MENGE.
ENDIF.
ENDLOOP.

IF LW_MENG_INV IS NOT INITIAL.
LW_ERRFLG_INVCHECK = ABAP_ON.
MESSAGE E131(ZMEGSD01)
WITH LST_GOODSMVT_HEADER-REF_DOC_NO
LST_EBELN-EBELN
INTO LW_MSGTX.
ELSE.
MESSAGE E000(ZMEGSD01)
INTO LW_MSGTX.
ENDIF.

*             エラーテーブル編集
PERFORM EDIT_ERROR USING LST_EBELN
LST_EBELN-ZKBUNCC
SY-MSGID
SY-MSGNO
*    *** START ADD 2015/04/24 ISID11 ****
SY-MSGV1          "メッセージ変数
SY-MSGV2          "メッセージ変数
SY-MSGV3          "メッセージ変数
SY-MSGV4          "メッセージ変数
*    *** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
CNS_FLG_ON
CHANGING LTD_ERROR_INVCHECK.
LW_TOTAL_INVCHECK = LW_TOTAL_INVCHECK + 1.
ENDLOOP.

IF LW_ERRFLG_INVCHECK = ABAP_ON.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + LW_TOTAL_INVCHECK.
ST_COUNT-ERROR = ST_COUNT-ERROR + LW_TOTAL_INVCHECK.
APPEND LINES OF LTD_ERROR_INVCHECK TO O_TD_ERROR.
CONTINUE.
ENDIF.
ENDIF.
**** END ADD 2015/09/10 ISID21 ****

**** START ADD 2015/11/15 ISID21 ****
* ロット対応
PERFORM SET_BATCH_NUMBER
USING  <FS_DELIISSUE>-WERK_OUTB
CHANGING  LTD_GOODSMVT_ITEM
LW_SUBRC.

IF LW_SUBRC <> 0.
*     エラーテーブル編集
PERFORM EDIT_ERROR USING
LST_EBELN
<FS_DELIISSUE>-ZKBUNCC
'ZMEGSD01'
'132'
LST_EBELN-EBELN   "メッセージ変数
SPACE         "メッセージ変数
SPACE        "メッセージ変数
SPACE        "メッセージ変数
LW_MSGTX
SPACE
CHANGING O_TD_ERROR.

ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
CONTINUE.
ENDIF.
**** END ADD 2015/11/15 ISID21 ****

CLEAR:
LW_MATERIALDOCUMENT,
LW_MATDOCUMENTYEAR,
LTD_RETURN.

CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
EXPORTING
GOODSMVT_HEADER  = LST_GOODSMVT_HEADER
GOODSMVT_CODE    = LST_GOODSMVT_CODE
TESTRUN          = LW_TESTRUN
IMPORTING
MATERIALDOCUMENT = LW_MATERIALDOCUMENT
MATDOCUMENTYEAR  = LW_MATDOCUMENTYEAR
TABLES
GOODSMVT_ITEM    = LTD_GOODSMVT_ITEM
RETURN           = LTD_RETURN.

**** START ADD 2015/03/03 ISID11 ****
CLEAR: LTD_GOODSMVT_ITEM.
**** END ADD 2015/03/03 ISID11 ****

*     入庫処理のリターン判定処理
LOOP AT LTD_RETURN INTO LST_RETURN
WHERE TYPE = CNS_MSG_E
OR TYPE = CNS_MSG_A.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

LW_MSGTX = LST_RETURN-MESSAGE.

**** START ADD 2015/03/30 ISID11 ****
LOOP AT LTD_EBELN INTO LST_EBELN.
**** END ADD 2015/03/30 ISID11 ****
*       エラーテーブル編集
PERFORM EDIT_ERROR USING
**** START UPD 2015/03/30 ISID11 ****
*                               <FS_DELIISSUE>
LST_EBELN
**** END UPD 2015/03/30 ISID11 ****
<FS_DELIISSUE>-ZKBUNCC
LST_RETURN-ID
LST_RETURN-NUMBER
**** START ADD 2015/04/24 ISID11 ****
LST_RETURN-MESSAGE_V1   "メッセージ変数
LST_RETURN-MESSAGE_V2   "メッセージ変数
LST_RETURN-MESSAGE_V3   "メッセージ変数
LST_RETURN-MESSAGE_V4   "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
SPACE
CHANGING O_TD_ERROR.

**** START UPD 2015/03/03 ISID11 ****
**** START ADD 2015/03/30 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
ENDLOOP.
**** END ADD 2015/03/30 ISID11 ****
EXIT.
**** END UPD 2015/03/03 ISID11 ****
ENDLOOP.

IF SY-SUBRC = 0.
**** START DEL 2015/03/30 ISID11 ****
*        ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
**** END DEL 2015/03/30 ISID11 ****
CONTINUE.
ELSE.
<FS_DELIISSUE>-MBLNR_INB
= LW_MATERIALDOCUMENT. "取消元の入出庫伝票番号(Inbound)
<FS_DELIISSUE>-MJAHR_INB
= LW_MATDOCUMENTYEAR.  "取消元の入出庫伝票年(Inbound)

ST_COUNT-NORMAL = ST_COUNT-NORMAL + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
ENDIF.

CLEAR: LW_SUBRC.

**** START ADD 2015/03/03 ISID11 ****
IF I_BATCH_FLG = 'X'.
**** END ADD 2015/03/03 ISID11 ****
**** START ADD 2015/03/30 ISID11 ****
IF LINES( LTD_EBELN ) > 1.
*         購買伝票番号の場合、対象追加処理
PERFORM UPDATE_ZTEGSDT206_ELELN USING I_SYST_DATE
I_SYST_TIME
<FS_DELIISSUE>
LTD_ZTEGSDT206_EXIST
LTD_EBELN
I_BATCH_FLG
CHANGING LW_SUBRC.
ELSE.
**** END ADD 2015/03/30 ISID11 ****
*         入出庫連携テーブルの更新処理
PERFORM UPDATE_ZTEGSDT206_DELIISSUE USING I_SYST_DATE
I_SYST_TIME
**** START UPD 2015/03/03 ISID11 ****
*                                                LTD_LOCK
<FS_DELIISSUE>
LTD_ZTEGSDT206_EXIST
**** END UPD 2015/03/03 ISID11 ****
CHANGING LW_SUBRC.
**** START ADD 2015/03/30 ISID11 ****
ENDIF.
**** END ADD 2015/03/30 ISID11 ****

IF LW_SUBRC IS NOT INITIAL.
O_ERROR_FLG = CNS_FLG_ON.
RETURN.
ENDIF.

**** START ADD 2015/03/03 ISID11 ****
ELSE.
**** START ADD 2015/03/30 ISID11 ****
IF LINES( LTD_EBELN ) > 1.
*         購買伝票番号の場合、対象追加処理
PERFORM UPDATE_ZTEGSDT206_ELELN USING I_SYST_DATE
I_SYST_TIME
<FS_DELIISSUE>
LTD_ZTEGSDT206_EXIST
LTD_EBELN
I_BATCH_FLG
CHANGING LW_SUBRC.
ELSE.
**** END ADD 2015/03/30 ISID11 ****
*       入出庫連携テーブルの更新処理
PERFORM UPDATE_ZTEGSDT206_REDELIISSUE
USING I_SYST_DATE
I_SYST_TIME
LTD_ZTEGSDT206_EXIST
<FS_DELIISSUE>.
**** START ADD 2015/03/30 ISID11 ****
ENDIF.
**** END ADD 2015/03/30 ISID11 ****
*       データ登録/更新に成功した場合、BAPIコミットし、
*       ロックの解除処理へ
CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
EXPORTING
WAIT = 'X'.
ENDIF.
**** END ADD 2015/03/03 ISID11 ****

**** START ADD BY ISID REN 2015/07/03 ****
APPEND <FS_DELIISSUE> TO O_TD_D_C.
**** END ADD BY ISID REN 2015/07/03 ****
ENDAT.
ENDLOOP.

ENDFORM.                    " UPDATE_DELIVERYISSUE
*&---------------------------------------------------------------------*
*&      Form  LOCK_EZZTEGSDT206
*&---------------------------------------------------------------------*
*       入出庫連携テーブルのロック処理
*----------------------------------------------------------------------*
*      -->I_ST_DELIISSUE  出庫確認連携データ
*      <--O_TD_LOCK       ロック
*      <--O_TD_ERROR      ITAB:入出庫連携エラーデータ
*      <--O_SUBRC         SUBRC
*----------------------------------------------------------------------*
FORM LOCK_EZZTEGSDT206 USING I_ST_DELIISSUE TYPE TYP_STOCK
CHANGING
**** START DEL 2015/03/03 ISID11 ****
*                             O_TD_LOCK  TYPE TYP_TD_STOCK
**** END DEL 2015/03/03 ISID11 ****
O_TD_ERROR TYPE TYP_TD_ERROR
O_SUBRC    TYPE SY-SUBRC.

DATA:
LW_MSGTX TYPE ZTEGSDT206-MSGTX.

CALL FUNCTION 'ENQUEUE_EZZTEGSDT206'
EXPORTING
MODE_ZTEGSDT206 = 'E'
KDAUF           = I_ST_DELIISSUE-VGBEL
MBLNR_OUTB      = I_ST_DELIISSUE-MBLNR
MJAHR_OUTB      = I_ST_DELIISSUE-MJAHR
EXCEPTIONS
FOREIGN_LOCK    = 1
SYSTEM_FAILURE  = 2
OTHERS          = 3.

IF SY-SUBRC <> 0.

O_SUBRC = SY-SUBRC.

MESSAGE ID SY-MSGID TYPE CNS_MSG_E NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
INTO LW_MSGTX.

*   エラーテーブル編集
PERFORM EDIT_ERROR USING I_ST_DELIISSUE
I_ST_DELIISSUE-ZKBUNCC
SY-MSGID
SY-MSGNO
**** START ADD 2015/04/24 ISID11 ****
SY-MSGV1   "メッセージ変数
SY-MSGV2   "メッセージ変数
SY-MSGV3   "メッセージ変数
SY-MSGV4   "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
CNS_FLG_ON
CHANGING O_TD_ERROR.

**** START DEL 2015/03/03 ISID11 ****
*  ELSE.
*
**   ロックのレコードをロックテーブルに格納する
*    APPEND I_ST_DELIISSUE TO O_TD_LOCK.
**** END DEL 2015/03/03 ISID11 ****

ENDIF.

ENDFORM.                    " LOCK_EZZTEGSDT206
*&---------------------------------------------------------------------*
*&      Form  EDIT_ERROR
*&---------------------------------------------------------------------*
*       エラーテーブル編集
*----------------------------------------------------------------------*
*      -->I_ST_DELIISSUE  出庫確認連携データ
*      -->I_ZKBUNCC       処理区分
*      -->I_MSGID         メッセージクラス
*      -->I_MSGNO         メッセージNo
*      -->I_MSGTX         メッセージテキスト
*      -->I_FLG_ON        ロック失敗フラグ
*      <--O_TD_ERROR      ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM EDIT_ERROR USING I_ST_STOCK     TYPE TYP_STOCK
I_ZKBUNCC      TYPE ZTEGSDT206-ZKBUNCC
I_MSGID        TYPE SY-MSGID
I_MSGNO        TYPE SY-MSGNO
**** START ADD 2015/04/24 ISID11 ****
I_MSGV1
I_MSGV2
I_MSGV3
I_MSGV4
**** END ADD 2015/04/24 ISID11 ****
I_MSGTX        TYPE ZTEGSDT206-MSGTX
I_FLG_ON       TYPE FLAG
CHANGING O_TD_ERROR     TYPE TYP_TD_ERROR.
DATA:
LST_ERROR      TYPE TYP_ERROR.

CLEAR:
LST_ERROR.

LST_ERROR-KDAUF      = I_ST_STOCK-VGBEL.      "受注伝票番号
LST_ERROR-MBLNR_OUTB = I_ST_STOCK-MBLNR.
"入出庫伝票番号(Outbound)
LST_ERROR-MJAHR_OUTB = I_ST_STOCK-MJAHR.
"入出庫伝票年(Outbound)
LST_ERROR-EBELN      = I_ST_STOCK-EBELN.      "購買伝票番号
LST_ERROR-MBLNR_INB  = I_ST_STOCK-MBLNR_INB.  "入出庫伝票番号(Inbound)
LST_ERROR-MJAHR_INB  = I_ST_STOCK-MJAHR_INB.  "入出庫伝票年(Inbound)
LST_ERROR-STATUS     = I_ST_STOCK-STATUS.     "更新区分
LST_ERROR-WERK_INB   = I_ST_STOCK-WERK_INB.   "入庫プラント
LST_ERROR-WERK_OUTB  = I_ST_STOCK-WERK_OUTB.  "出荷プラント
LST_ERROR-VBELN      = I_ST_STOCK-VBELN_IM.   "出荷伝票
LST_ERROR-ZKBUNCC    = I_ZKBUNCC.             "処理区分
LST_ERROR-MSGID      = I_MSGID.               "メッセージクラス
LST_ERROR-MSGNO      = I_MSGNO.               "メッセージNo
LST_ERROR-MSGTX      = I_MSGTX.               "メッセージテキスト
**** START ADD 2015/04/24 ISID11 ****
LST_ERROR-MSGV1      = I_MSGV1.               "メッセージ変数
LST_ERROR-MSGV2      = I_MSGV2.               "メッセージ変数
LST_ERROR-MSGV3      = I_MSGV3.               "メッセージ変数
LST_ERROR-MSGV4      = I_MSGV4.               "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LST_ERROR-LOCKFLG    = I_FLG_ON.              "ロック失敗フラグ

**** START ADD 2015/03/26 ISID11 ****
**** START UPD 2015/03/30 ISID11 ****
*  LST_ERROR-VKBUR      = I_ST_STOCK-VKBUR.      "営業所
LST_ERROR-VKGRP      = I_ST_STOCK-VKGRP.      "営業グループ
**** END UPD 2015/03/30 ISID11 ****
LST_ERROR-EKGRP      = I_ST_STOCK-EKGRP.      "購買グループ
**** END ADD 2015/03/26 ISID11 ****

APPEND LST_ERROR TO O_TD_ERROR.

ENDFORM.                    " EDIT_ERROR
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGSDT206_DELIISSUE
*&---------------------------------------------------------------------*
*       入出庫連携テーブルの更新処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      -->I_TD_LOCK       ロック
*      -->I_ST_DELIISSUE
*      -->I_TD_EBELN
*      -->O_TD_EXIST      存在レコード
*      <--O_SUBRC         SUBRC
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGSDT206_DELIISSUE USING I_SYST_DATE    TYPE SY-DATUM
I_SYST_TIME    TYPE SY-UZEIT
**** START UPD 2015/03/03 ISID11 ****
*                                       I_TD_LOCK      TYPE TYP_TD_STOCK
I_ST_DELIISSUE TYPE TYP_STOCK
I_TD_EXIST TYPE TYP_TD_ZTEGSDT206_INSERT
**** END UPD 2015/03/03 ISID11 ****
CHANGING O_SUBRC        TYPE SY-SUBRC.

DATA:
LST_STOCK             TYPE TYP_STOCK,
LST_ZTEGSDT206        TYPE ZTEGSDT206,
**** START DEL 2015/03/03 ISID11 ****
*    LTD_ZTEGSDT206_INSERT TYPE TYP_TD_ZTEGSDT206_INSERT,
**** END DEL 2015/03/03 ISID11 ****
LTD_ZTEGSDT206_UPDATE TYPE TYP_TD_ZTEGSDT206_INSERT,
LTD_ZTEGSDT206_EXIST  TYPE TYP_TD_ZTEGSDT206_INSERT.
*    LTD_TSATUS            TYPE TYP_TD_STOCK.

**** START DEL 2015/03/03 ISID11 ****
** 更新区分が固定値「U」(更新)の場合、存在レコード取得
*  PERFORM GET_STATUS_UPDATE USING
***** START UPD 2015/03/03 ISID11 ****
**                                  I_TD_LOCK
*                                  I_ST_DELIISSUE
***** END UPD 2015/03/03 ISID11 ****
*                         CHANGING
*                                  LTD_ZTEGSDT206_EXIST
*                                  O_SUBRC.
*
*  IF O_SUBRC <> 0.
*
*    RETURN.
*
*  ENDIF.
**** END DEL 2015/03/03 ISID11 ****

**** START UPD 2015/03/03 ISID11 ****
*  LOOP AT I_TD_LOCK INTO LST_STOCK.
LST_STOCK = I_ST_DELIISSUE.
**** END UPD 2015/03/03 ISID11 ****

CLEAR:
LST_ZTEGSDT206.

CASE I_ST_DELIISSUE-STATUS.
*     更新区分が固定値「I」(新規登録)の場合、登録処理を行う
WHEN 'I'.

LST_ZTEGSDT206-KDAUF        = LST_STOCK-VGBEL.
"受注伝票番号
LST_ZTEGSDT206-MBLNR_OUTB   = LST_STOCK-MBLNR.
"入出庫伝票番号(Outbound)
LST_ZTEGSDT206-MJAHR_OUTB   = LST_STOCK-MJAHR.
"入出庫伝票年(Outbound)
LST_ZTEGSDT206-EBELN        = LST_STOCK-EBELN.
"購買伝票番号
LST_ZTEGSDT206-MBLNR_INB    = LST_STOCK-MBLNR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-MJAHR_INB    = LST_STOCK-MJAHR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-WERK_INB     = LST_STOCK-WERK_INB.
"入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = LST_STOCK-WERK_OUTB.
"出荷プラント
LST_ZTEGSDT206-VBELN        = LST_STOCK-VBELN_IM.
"出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = LST_STOCK-ZKBUNCC.
"処理区分
LST_ZTEGSDT206-STATUS       = 'C'.
LST_ZTEGSDT206-Z_CRE_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_CRE_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_CRE_USERID = SY-UNAME.

*       登録処理
INSERT ZTEGSDT206 FROM LST_ZTEGSDT206.

*       データ登録に失敗した場合、BAPIロ‐ルバックし、ロックを解除し、
*       メッセージを出力し、処理を終了する
IF SY-SUBRC <> 0.

O_SUBRC = SY-SUBRC.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

**** START DEL 2015/03/03 ISID11 ****
**         ロックを解除し
*        PERFORM UNLOCK_ZTEGSDT206 USING I_ST_DELIISSUE.
**** END DEL 2015/03/03 ISID11 ****

MESSAGE S023(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*         データ登録に失敗しました(TBL = &1)
RETURN.

ENDIF.

**** START DEL 2015/03/03 ISID11 ****
*        APPEND LST_ZTEGSDT206 TO LTD_ZTEGSDT206_INSERT.
**** END DEL 2015/03/03 ISID11 ****

*     更新区分が固定値「U」(更新)の場合、更新処理を行う
WHEN 'U'.

**** START ADD 2015/03/03 ISID11 ****
*     更新区分が固定値「U」(更新)の場合、存在レコード取得
PERFORM GET_STATUS_UPDATE USING I_ST_DELIISSUE
I_TD_EXIST
CHANGING LTD_ZTEGSDT206_EXIST
O_SUBRC.

IF O_SUBRC <> 0.

RETURN.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

*       更新区分が固定値「U」(更新)の場合、更新処理を行う
PERFORM UPDATE_ZTEGSDT206_STATUS USING LST_STOCK
LTD_ZTEGSDT206_EXIST
I_SYST_DATE
I_SYST_TIME
CHANGING LTD_ZTEGSDT206_UPDATE.

**** START ADD 2015/03/03 ISID11 ****
*       更新処理
INSERT ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206_UPDATE
ACCEPTING DUPLICATE KEYS.


*       データ更新に失敗した場合、BAPIロールバックし、ロックを解除し、
*       メッセージを出力し、処理を終了する
IF SY-SUBRC <> 0.

O_SUBRC = SY-SUBRC.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

**** START DEL 2015/03/03 ISID11 ****
**         ロックを解除し
*        PERFORM UNLOCK_ZTEGSDT206 USING I_ST_DELIISSUE.
**** END DEL 2015/03/03 ISID11 ****

MESSAGE S024(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*         データ更新に失敗しました(TBL = &1)

RETURN.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

WHEN OTHERS.

ENDCASE.

**** START DEL 2015/03/03 ISID11 ****
*  ENDLOOP.
**** END DEL 2015/03/03 ISID11 ****

* データ登録/更新に成功した場合、BAPIコミットし、ロックの解除処理へ
CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
EXPORTING
WAIT = 'X'.

**** START DEL 2015/03/03 ISID11 ****
** ロックを解除し
*  PERFORM UNLOCK_ZTEGSDT206 USING
***** START UPD 2015/03/03 ISID11 ****
**                                  I_TD_LOCK.
*                                  I_ST_DELIISSUE.
***** END UPD 2015/03/03 ISID11 ****
**** END DEL 2015/03/03 ISID11 ****

ENDFORM.                    " UPDATE_ZTEGSDT206_DELIISSUE
*&---------------------------------------------------------------------*
*&      Form  UNLOCK_ZTEGSDT206
*&---------------------------------------------------------------------*
*       ロックを解除し
*----------------------------------------------------------------------*
*      -->I_TD_LOCK       ロック
*----------------------------------------------------------------------*
FORM UNLOCK_ZTEGSDT206.
**** START UPD 2015/03/03 ISID11 ****
*                         USING    I_TD_LOCK TYPE TYP_TD_STOCK.
*
*  DATA:
*    LST_LOCK    TYPE TYP_STOCK.
*
*  LOOP AT I_TD_LOCK INTO LST_LOCK.
*
*    CALL FUNCTION 'DEQUEUE_EZZTEGSDT206'
*      EXPORTING
*        MODE_ZTEGSDT206 = 'E'
*        KDAUF           = LST_LOCK-VGBEL  "受注伝票番号
*        MBLNR_OUTB      = LST_LOCK-MBLNR  "入出庫伝票番号(Outbound)
*        MJAHR_OUTB      = LST_LOCK-MJAHR. "入出庫伝票年(Outbound)
*
*  ENDLOOP.

*     ロックの解除
CALL FUNCTION 'DEQUEUE_ALL'.

**** END UPD 2015/03/03 ISID11 ****

ENDFORM.                    " UNLOCK_ZTEGSDT206
*&---------------------------------------------------------------------*
*&      Form  UPDATE_DELIVERYREVERSE
*&---------------------------------------------------------------------*
*       出庫取消処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      -->I_BATCH_FLG     BATCH FLAG
*      <--O_TD_DELIISSUE  ITAB:出庫取消連携データ
*      <--O_TD_ERROR      ITAB:入出庫連携エラーデータ
*      <--O_ERROR_FLG     エラーフラグ
*----------------------------------------------------------------------*
FORM UPDATE_DELIVERYREVERSE USING I_SYST_DATE    TYPE SY-DATUM
I_SYST_TIME    TYPE SY-UZEIT
**** START ADD 2015/03/03 ISID11 ****
I_BATCH_FLG      TYPE FLAG
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_DELIREVER TYPE TYP_TD_STOCK
O_TD_ERROR     TYPE TYP_TD_ERROR
O_ERROR_FLG    TYPE FLAG.

DATA:
LW_SUBRC   TYPE SY-SUBRC ,
**** START UPD 2015/03/03 ISID11 ****
*    LTD_LOCK   TYPE TYP_TD_STOCK,
*    LST_LOCK   TYPE TYP_STOCK,
LTD_ZTEGSDT206_EXIST  TYPE TYP_TD_ZTEGSDT206_INSERT,
**** END UPD 2015/03/03 ISID11 ****
LW_MSGTX   TYPE ZTEGSDT206-MSGTX,
**** START DEL 2015/03/03 ISID11 ****
*    LW_MBLNR_INB  TYPE ZTEGSDT206-MBLNR_INB,  "At Newの処理同じ
*    LW_MJAHR_INB  TYPE ZTEGSDT206-MJAHR_INB,  "At Newの処理同じ
**** END DEL 2015/03/03 ISID11 ****
LW_MATERIALDOCUMENT    TYPE BAPI2017_GM_HEAD_02-MAT_DOC,
"入出庫伝票番号
LW_MATDOCUMENTYEAR     TYPE BAPI2017_GM_HEAD_02-DOC_YEAR,
"入出庫伝票年度
LW_GOODSMVT_PSTNG_DATE TYPE BAPI2017_GM_HEAD_02-PSTNG_DATE,
"転記日付
LST_GOODSMVT_HEADRET   TYPE BAPI2017_GM_HEAD_RET,
"入出庫伝票番号/入出庫伝票会計年度
LTD_RETURN          TYPE STANDARD TABLE OF BAPIRET2,
"リターンメッセージ
LST_RETURN          TYPE BAPIRET2.

FIELD-SYMBOLS:
<FS_DELIREVER>  TYPE TYP_STOCK.

CLEAR:
O_ERROR_FLG.

**** START UPD 2015/03/03 ISID11 ****
** ソート: 取消元の入出庫伝票番号（Inbound）
*  SORT O_TD_DELIREVER BY MBLNR_INB ASCENDING
*                         MJAHR_INB ASCENDING.
* 存在レコード取得
PERFORM GET_EXIST_ZTEGSDT206 USING O_TD_DELIREVER
'X'
CHANGING LTD_ZTEGSDT206_EXIST.
**** END UPD 2015/03/03 ISID11 ****

LOOP AT O_TD_DELIREVER ASSIGNING <FS_DELIREVER>.

CLEAR:
LW_SUBRC.

**** START DEL 2015/03/03 ISID11 ****
**   前レコードの取消元の入出庫伝票番号（Inbound）を保存
*    AT FIRST.
*      LW_MBLNR_INB = <FS_DELIREVER>-MBLNR_INB.
*      LW_MJAHR_INB = <FS_DELIREVER>-MJAHR_INB.
*    ENDAT.
**** END DEL 2015/03/03 ISID11 ****

*   処理区分追加QA.
<FS_DELIREVER>-ZKBUNCC = CNS_ZKBUNCC_2.

**** START DEL 2015/03/03 ISID11 ****
**   出庫取消連携データテーブルのロック処理
*    PERFORM LOCK_EZZTEGSDT206 USING <FS_DELIREVER>
*                           CHANGING LTD_LOCK
*                                    O_TD_ERROR
*                                    LW_SUBRC.
*
**   ロック失敗の場合、次のレコード処理へ
*    IF LW_SUBRC IS NOT INITIAL.
*
*      CONTINUE.
*
*    ENDIF.
**** END DEL 2015/03/03 ISID11 ****

**** START UPD 2015/03/03 ISID11 ****
**   At end of
*    IF LW_MBLNR_INB <> <FS_DELIREVER>-MBLNR_INB
*    OR LW_MJAHR_INB <> <FS_DELIREVER>-MJAHR_INB.
AT END OF MJAHR_SKEY.

ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.

*     出庫取消連携データテーブルのロック処理
PERFORM LOCK_EZZTEGSDT206 USING <FS_DELIREVER>
CHANGING O_TD_ERROR
LW_SUBRC.

*     ロック失敗の場合、次のレコード処理へ
IF LW_SUBRC IS NOT INITIAL.

ST_COUNT-ERROR = ST_COUNT-ERROR + 1.

CONTINUE.

ENDIF.

**** END UPD 2015/03/03 ISID11 ****

**** START UPD 2015/03/03 ISID11 ****
CLEAR:
LW_MATERIALDOCUMENT,
LW_MATDOCUMENTYEAR,
LW_GOODSMVT_PSTNG_DATE.


LW_MATERIALDOCUMENT    = <FS_DELIREVER>-MBLNR_NEW.
"取消元の入出庫伝票番号（Inbound）
LW_MATDOCUMENTYEAR     = <FS_DELIREVER>-MJAHR_NEW.
"取消元の入出庫伝票年（Inbound）
**** END UPD 2015/03/03 ISID11 ****
LW_GOODSMVT_PSTNG_DATE = <FS_DELIREVER>-BUDAT_MKPF.
"伝票の転記日付
CLEAR:
LST_GOODSMVT_HEADRET,
LTD_RETURN.

CALL FUNCTION 'BAPI_GOODSMVT_CANCEL'
EXPORTING
MATERIALDOCUMENT    = LW_MATERIALDOCUMENT
MATDOCUMENTYEAR     = LW_MATDOCUMENTYEAR
GOODSMVT_PSTNG_DATE = LW_GOODSMVT_PSTNG_DATE
IMPORTING
GOODSMVT_HEADRET    = LST_GOODSMVT_HEADRET
TABLES
RETURN              = LTD_RETURN.

*     入庫処理のリターン判定処理
LOOP AT LTD_RETURN INTO LST_RETURN
WHERE TYPE = CNS_MSG_E
OR TYPE = CNS_MSG_A.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

LW_MSGTX = LST_RETURN-MESSAGE.
*       エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_DELIREVER>
<FS_DELIREVER>-ZKBUNCC
LST_RETURN-ID
LST_RETURN-NUMBER
**** START ADD 2015/04/24 ISID11 ****
LST_RETURN-MESSAGE_V1   "メッセージ変数
LST_RETURN-MESSAGE_V2   "メッセージ変数
LST_RETURN-MESSAGE_V3   "メッセージ変数
LST_RETURN-MESSAGE_V4   "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
SPACE
CHANGING O_TD_ERROR.

**** START ADD 2015/03/03 ISID11 ****
EXIT.
**** END ADD 2015/03/03 ISID11 ****

ENDLOOP.

IF SY-SUBRC = 0.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ELSE.

**** START UPD 2015/03/03 ISID11 ****
*        <FS_DELIREVER>-MBLNR_INB = LW_MATERIALDOCUMENT.
*        "取消元の入出庫伝票番号(Inbound)
*        <FS_DELIREVER>-MJAHR_INB = LW_MATDOCUMENTYEAR.
*        "取消元の入出庫伝票年(Inbound)
<FS_DELIREVER>-MBLNR_INB = LST_GOODSMVT_HEADRET-MAT_DOC.
"取消元の入出庫伝票番号(Inbound)
<FS_DELIREVER>-MJAHR_INB = LST_GOODSMVT_HEADRET-DOC_YEAR.
"取消元の入出庫伝票年(Inbound)
**** END UPD 2015/03/03 ISID11 ****

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-NORMAL = ST_COUNT-NORMAL + 1.
**** END ADD 2015/03/03 ISID11 ****

ENDIF.

*     入出庫連携テーブルの更新処理
CLEAR:
LW_SUBRC.

**** START ADD 2015/03/03 ISID11 ****
IF I_BATCH_FLG = 'X'.
**** END ADD 2015/03/03 ISID11 ****

*     入出庫連携テーブルの更新処理
PERFORM UPDATE_ZTEGSDT206_DELIISSUE USING I_SYST_DATE
I_SYST_TIME
**** START UPD 2015/03/03 ISID11 ****
*                                                LTD_LOCK
<FS_DELIREVER>
LTD_ZTEGSDT206_EXIST
**** END UPD 2015/03/03 ISID11 ****
CHANGING LW_SUBRC.

IF LW_SUBRC IS NOT INITIAL.

O_ERROR_FLG = CNS_FLG_ON.

RETURN.

ENDIF.

**** START UPD 2015/03/03 ISID11 ****
*      LW_MBLNR_INB = <FS_DELIREVER>-MBLNR_INB.
*      LW_MJAHR_INB = <FS_DELIREVER>-MJAHR_INB.
*
*    ENDIF.
ELSE.

*       入出庫連携テーブルの更新処理
PERFORM UPDATE_ZTEGSDT206_REDELIREVER USING I_SYST_DATE
I_SYST_TIME
LTD_ZTEGSDT206_EXIST
<FS_DELIREVER>.

ENDIF.
ENDAT.
**** END UPD 2015/03/03 ISID11 ****

ENDLOOP.

ENDFORM.                    " UPDATE_DELIVERYREVERSE
*&---------------------------------------------------------------------*
*&      Form  UPDATE_RECEIVINGCANCEL
*&---------------------------------------------------------------------*
*       入庫取消処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      -->I_BATCH_FLG     BATCH FLAG
*      <--O_TD_RECCANCEL  ITAB:入庫取消連携データ
*      <--O_TD_ERROR      ITAB:入出庫連携エラーデータ
*      <--O_ERROR_FLG     エラーフラグ
*----------------------------------------------------------------------*
FORM UPDATE_RECEIVINGCANCEL USING I_SYST_DATE    TYPE SY-DATUM
I_SYST_TIME    TYPE SY-UZEIT
**** START ADD 2015/03/03 ISID11 ****
I_BATCH_FLG    TYPE FLAG
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_RECCANCEL TYPE TYP_TD_STOCK
O_TD_ERROR     TYPE TYP_TD_ERROR
O_ERROR_FLG    TYPE FLAG.

DATA:
LW_SUBRC   TYPE SY-SUBRC ,
**** START UPD 2015/03/03 ISID11 ****
*    LTD_LOCK   TYPE TYP_TD_STOCK,
*    LST_LOCK   TYPE TYP_STOCK,
LTD_ZTEGSDT206_EXIST  TYPE TYP_TD_ZTEGSDT206_INSERT,
**** END UPD 2015/03/03 ISID11 ****
LW_MSGTX   TYPE ZTEGSDT206-MSGTX,
LW_MSGID   TYPE SY-MSGID,
LW_MSGNO   TYPE SY-MSGNO,
**** START DEL 2015/03/03 ISID11 ****
*    LW_VBELN_IM TYPE MSEG-VBELN_IM,
**** END DEL 2015/03/03 ISID11 ****
LW_VBELN   TYPE LIKP-VBELN,      "出荷伝票
LW_BUDAT   TYPE SY-DATLO,        "伝票の転記日付
LW_TCODE   TYPE SY-TCODE,        "トランザクションコード
LW_VBTYP   TYPE LIKP-VBTYP,      "販売管理伝票カテゴリ
LST_EMKPF  TYPE EMKPF,           "MMIM: 入出庫転記用の一般 FM
LTD_MESG   TYPE STANDARD TABLE OF MESG, "メッセージ集計先
LST_MESG   TYPE MESG.            "メッセージ集計先


FIELD-SYMBOLS:
<FS_RECCANCEL>  TYPE TYP_STOCK.

CLEAR:
O_ERROR_FLG.

**** START UPD 2015/03/03 ISID11 ****
** ソート: 出荷伝票
*  SORT O_TD_RECCANCEL BY VBELN_IM ASCENDING.
* 存在レコード取得
PERFORM GET_EXIST_ZTEGSDT206 USING O_TD_RECCANCEL
SPACE
CHANGING LTD_ZTEGSDT206_EXIST.
**** END UPD 2015/03/03 ISID11 ****

LOOP AT O_TD_RECCANCEL ASSIGNING <FS_RECCANCEL>.

CLEAR:
LW_SUBRC.

**** START DEL 2015/03/03 ISID11 ****
**   前レコードの出荷伝票を保存
*    AT FIRST.
*      LW_VBELN_IM = <FS_RECCANCEL>-VBELN_IM.
*    ENDAT.
**** END DEL 2015/03/03 ISID11 ****

*   処理区分追加QA.
<FS_RECCANCEL>-ZKBUNCC = CNS_ZKBUNCC_3.

**** START DEL 2015/03/03 ISID11 ****
**   入庫取消処理のロック処理
*    PERFORM LOCK_EZZTEGSDT206_CANCEL USING <FS_RECCANCEL>
*                                  CHANGING LTD_LOCK
*                                           O_TD_ERROR
*                                           LW_SUBRC.
*
**   ロック失敗の場合、次のレコード処理へ
*    IF LW_SUBRC IS NOT INITIAL.
*
*      CONTINUE.
*
*    ENDIF.
**** END DEL 2015/03/03 ISID11 ****

**** START UPD 2015/03/03 ISID11 ****
**   At end of
*    IF LW_VBELN_IM <> <FS_RECCANCEL>-VBELN_IM.
AT END OF EBELN_SKEY.

**** START ADD 2015/03/03 ISID11 ****
CLEAR:
LW_VBELN,
LW_BUDAT,
LW_TCODE,
LW_VBTYP,
LST_EMKPF,
LTD_MESG.

ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

*     入庫取消処理のロック処理
PERFORM LOCK_EZZTEGSDT206_CANCEL USING <FS_RECCANCEL>
CHANGING O_TD_ERROR
LW_SUBRC.

*     ロック失敗の場合、次のレコード処理へ
IF LW_SUBRC IS NOT INITIAL.

ST_COUNT-ERROR = ST_COUNT-ERROR + 1.

CONTINUE.

ENDIF.
**** END UPD 2015/03/03 ISID11 ****

LW_VBELN = <FS_RECCANCEL>-VBELN_IM.       "出荷伝票
LW_BUDAT = <FS_RECCANCEL>-BUDAT_MKPF.     "伝票の転記日付
LW_TCODE = 'VL09'.                        "トランザクションコード
LW_VBTYP = <FS_RECCANCEL>-VBTYP.          "販売管理伝票カテゴリ

CALL FUNCTION 'WS_REVERSE_GOODS_ISSUE'
EXPORTING
I_VBELN                   = LW_VBELN
I_BUDAT                   = LW_BUDAT
I_TCODE                   = LW_TCODE
I_VBTYP                   = LW_VBTYP
IMPORTING
ES_EMKPF                  = LST_EMKPF
TABLES
T_MESG                    = LTD_MESG
EXCEPTIONS
ERROR_REVERSE_GOODS_ISSUE = 1
OTHERS                    = 2.

IF SY-SUBRC <> 0.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

MESSAGE ID SY-MSGID TYPE CNS_MSG_E NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
INTO LW_MSGTX.

*       エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_RECCANCEL>
<FS_RECCANCEL>-ZKBUNCC
SY-MSGID
SY-MSGNO
**** START ADD 2015/04/24 ISID11 ****
SY-MSGV1          "メッセージ変数
SY-MSGV2          "メッセージ変数
SY-MSGV3          "メッセージ変数
SY-MSGV4          "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
SPACE
CHANGING O_TD_ERROR.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

LOOP AT LTD_MESG INTO LST_MESG
WHERE MSGTY = CNS_MSG_E
OR MSGTY = CNS_MSG_A.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

LW_MSGTX = LST_MESG-TEXT.
LW_MSGID  = LST_MESG-ARBGB.
LW_MSGNO  = LST_MESG-TXTNR.
*       エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_RECCANCEL>
<FS_RECCANCEL>-ZKBUNCC
LW_MSGID
LW_MSGNO
**** START ADD 2015/04/24 ISID11 ****
LST_MESG-MSGV1          "メッセージ変数
LST_MESG-MSGV2          "メッセージ変数
LST_MESG-MSGV3          "メッセージ変数
LST_MESG-MSGV4          "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
SPACE
CHANGING O_TD_ERROR.

**** START ADD 2015/03/03 ISID11 ****
EXIT.
**** END ADD 2015/03/03 ISID11 ****

ENDLOOP.

IF SY-SUBRC = 0.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ELSE.

<FS_RECCANCEL>-MBLNR_INB = LST_EMKPF-MBLNR.
"取消元の入出庫伝票番号(Inbound)
<FS_RECCANCEL>-MJAHR_INB = LST_EMKPF-MJAHR.
"取消元の入出庫伝票年(Inbound)

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-NORMAL = ST_COUNT-NORMAL + 1.
**** END ADD 2015/03/03 ISID11 ****

ENDIF.

*     入出庫連携テーブルの更新処理
CLEAR:
LW_SUBRC.

**** START ADD 2015/03/03 ISID11 ****
IF I_BATCH_FLG = 'X'.
**** END ADD 2015/03/03 ISID11 ****

*     入出庫連携テーブルの更新処理
PERFORM UPDATE_ZTEGSDT206_RECCANCEL USING I_SYST_DATE
I_SYST_TIME
**** START UPD 2015/03/03 ISID11 ****
*                                                LTD_LOCK
<FS_RECCANCEL>
LTD_ZTEGSDT206_EXIST
**** END UPD 2015/03/03 ISID11 ****
LW_SUBRC.

IF LW_SUBRC IS NOT INITIAL.

O_ERROR_FLG = CNS_FLG_ON.

RETURN.

ENDIF.

**** START UPD 2015/03/03 ISID11 ****
*      LW_VBELN_IM = <FS_RECCANCEL>-VBELN_IM.
*
*    ENDIF.
ELSE.

*     入出庫連携テーブルの更新処理
PERFORM UPDATE_ZTEGSDT206_RERECCANCEL USING I_SYST_DATE
I_SYST_TIME
LTD_ZTEGSDT206_EXIST
<FS_RECCANCEL>.

ENDIF.
ENDAT.
**** END UPD 2015/03/03 ISID11 ****

ENDLOOP.

ENDFORM.                    " UPDATE_RECEIVINGCANCEL
*&---------------------------------------------------------------------*
*&      Form  LOCK_EZZTEGSDT206_CANCEL
*&---------------------------------------------------------------------*
*       入庫取消処理のロック処理
*----------------------------------------------------------------------*
*      -->I_ST_RECCANCEL  入庫取消連携データ
*      <--O_TD_LOCK       ロック
*      <--O_TD_ERROR      ITAB:入出庫連携エラーデータ
*      <--O_SUBRC         SUBRC
*----------------------------------------------------------------------*
FORM LOCK_EZZTEGSDT206_CANCEL USING I_ST_RECCANCEL TYPE TYP_STOCK
CHANGING
**** START DEL 2015/03/03 ISID11 ****
*                                    O_TD_LOCK  TYPE TYP_TD_STOCK
**** END DEL 2015/03/03 ISID11 ****
O_TD_ERROR TYPE TYP_TD_ERROR
O_SUBRC    TYPE SY-SUBRC.

DATA:
LW_MSGTX TYPE ZTEGSDT206-MSGTX,
LST_RECCANCEL  TYPE TYP_STOCK.

CALL FUNCTION 'ENQUEUE_EZZTEGSDT206'
EXPORTING
MODE_ZTEGSDT206 = 'E'
EBELN           = I_ST_RECCANCEL-EBELN
**** START UPD 2015/03/03 ISID11 ****
*      MBLNR_INB       = I_ST_RECCANCEL-MBLNR_INB
*      MJAHR_INB       = I_ST_RECCANCEL-MJAHR_INB
MBLNR_INB       = I_ST_RECCANCEL-MBLNR
MJAHR_INB       = I_ST_RECCANCEL-MJAHR
**** END UPD 2015/03/03 ISID11 ****
EXCEPTIONS
FOREIGN_LOCK    = 1
SYSTEM_FAILURE  = 2
OTHERS          = 3.
IF SY-SUBRC <> 0.

MESSAGE ID SY-MSGID TYPE CNS_MSG_E NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
INTO LW_MSGTX.

**** START ADD 2015/03/03 ISID11 ****
LST_RECCANCEL = I_ST_RECCANCEL.
LST_RECCANCEL-MBLNR_INB = I_ST_RECCANCEL-MBLNR.
LST_RECCANCEL-MJAHR_INB = I_ST_RECCANCEL-MJAHR.
CLEAR:
LST_RECCANCEL-MBLNR,
LST_RECCANCEL-MJAHR.
**** END ADD 2015/03/03 ISID11 ****

*   エラーテーブル編集
PERFORM EDIT_ERROR USING LST_RECCANCEL
I_ST_RECCANCEL-ZKBUNCC
SY-MSGID
SY-MSGNO
**** START ADD 2015/04/24 ISID11 ****
SY-MSGV1          "メッセージ変数
SY-MSGV2          "メッセージ変数
SY-MSGV3          "メッセージ変数
SY-MSGV4          "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
CNS_FLG_ON
CHANGING O_TD_ERROR.

O_SUBRC = SY-SUBRC.

**** START DEL 2015/03/03 ISID11 ****
*  ELSE.
*
**   ロックのレコードをロックテーブルに格納する
*    APPEND I_ST_RECCANCEL TO O_TD_LOCK.
**** END DEL 2015/03/03 ISID11 ****

ENDIF.

ENDFORM.                    " LOCK_EZZTEGSDT206_CANCEL
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGSDT206_RECCANCEL
*&---------------------------------------------------------------------*
*       入出庫連携テーブルの更新処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      -->I_TD_LOCK       ロック
*      <--O_SUBRC         SUBRC
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGSDT206_RECCANCEL USING I_SYST_DATE    TYPE SY-DATUM
I_SYST_TIME    TYPE SY-UZEIT
**** START UPD 2015/03/03 ISID11 ****
*                                       I_TD_LOCK      TYPE TYP_TD_STOCK
I_ST_RECCANCEL TYPE TYP_STOCK
I_TD_EXIST TYPE TYP_TD_ZTEGSDT206_INSERT
**** END UPD 2015/03/03 ISID11 ****
O_SUBRC        TYPE SY-SUBRC.

DATA:
LST_STOCK             TYPE TYP_STOCK,
LST_ZTEGSDT206        TYPE ZTEGSDT206,
**** START DEL 2015/03/03 ISID11 ****
*    LTD_ZTEGSDT206_INSERT TYPE TYP_TD_ZTEGSDT206_INSERT,
**** END DEL 2015/03/03 ISID11 ****
LTD_ZTEGSDT206_UPDATE TYPE TYP_TD_ZTEGSDT206_INSERT,
LTD_ZTEGSDT206_EXIST  TYPE TYP_TD_ZTEGSDT206_INSERT.

**** START DEL 2015/03/03 ISID11 ****
** 更新区分が固定値「U」(更新)の場合、存在レコード取得
*  PERFORM GET_STATUS_RECCANCEL USING I_TD_LOCK
*                            CHANGING LTD_ZTEGSDT206_EXIST
*                                     O_SUBRC.
*
*  IF O_SUBRC <> 0.
*
*    RETURN.
*
*  ENDIF.
**** END DEL 2015/03/03 ISID11 ****

**** START UPD 2015/03/03 ISID11 ****
*  LOOP AT I_TD_LOCK INTO LST_STOCK.
LST_STOCK = I_ST_RECCANCEL.
**** END UPD 2015/03/03 ISID11 ****
CLEAR:
LST_ZTEGSDT206.

CASE LST_STOCK-STATUS.
*     更新区分が固定値「I」(新規登録)の場合、登録処理を行う
WHEN 'I'.

LST_ZTEGSDT206-KDAUF        = LST_STOCK-VGBEL.
"受注伝票番号
**** START UPD 2015/03/03 ISID11 ****
*      LST_ZTEGSDT206-MBLNR_OUTB   = LST_STOCK-MBLNR.
*      "入出庫伝票番号(Outbound)
*      LST_ZTEGSDT206-MJAHR_OUTB   = LST_STOCK-MJAHR.
*      "入出庫伝票年(Outbound)
LST_ZTEGSDT206-MBLNR_OUTB   = LST_STOCK-MBLNR_INB.
"入出庫伝票番号(Outbound)
LST_ZTEGSDT206-MJAHR_OUTB   = LST_STOCK-MJAHR_INB.
"入出庫伝票年(Outbound)
**** END UPD 2015/03/03 ISID11 ****
LST_ZTEGSDT206-EBELN        = LST_STOCK-EBELN.
"購買伝票番号
**** START UPD 2015/03/03 ISID11 ****
*      LST_ZTEGSDT206-MBLNR_INB    = LST_STOCK-MBLNR_INB.
*      "入出庫伝票番号(Inbound)
*      LST_ZTEGSDT206-MJAHR_INB    = LST_STOCK-MJAHR_INB.
*      "入出庫伝票番号(Inbound)
LST_ZTEGSDT206-MBLNR_INB    = LST_STOCK-MBLNR.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-MJAHR_INB    = LST_STOCK-MJAHR.
"入出庫伝票番号(Inbound)
**** END UPD 2015/03/03 ISID11 ****
LST_ZTEGSDT206-WERK_INB     = LST_STOCK-WERK_INB.
"入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = LST_STOCK-WERK_OUTB.
"出荷プラント
LST_ZTEGSDT206-VBELN        = LST_STOCK-VBELN_IM.
"出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = LST_STOCK-ZKBUNCC.
"処理区分
LST_ZTEGSDT206-STATUS       = 'C'.
LST_ZTEGSDT206-Z_CRE_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_CRE_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_CRE_USERID = SY-UNAME.

*       登録処理
INSERT ZTEGSDT206 FROM LST_ZTEGSDT206.

*       データ登録に失敗した場合、BAPIロ‐ルバックし、ロックを解除し、
*       メッセージを出力し、処理を終了する
IF SY-SUBRC <> 0.

O_SUBRC = SY-SUBRC.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

**** START DEL 2015/03/03 ISID11 ****
**         ロックを解除し
*        PERFORM UNLOCK_ZTEGSDT206_CANCEL USING I_ST_RECCANCEL.
**** END DEL 2015/03/03 ISID11 ****

MESSAGE S023(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*         データ登録に失敗しました(TBL = &1)
RETURN.

ENDIF.

*     更新区分が固定値「U」(更新)の場合、更新処理を行う
WHEN 'U'.

**** START ADD 2015/03/03 ISID11 ****
*     更新区分が固定値「U」(更新)の場合、存在レコード取得
PERFORM GET_STATUS_RECCANCEL USING I_ST_RECCANCEL
I_TD_EXIST
CHANGING LTD_ZTEGSDT206_EXIST
O_SUBRC.

IF O_SUBRC <> 0.

RETURN.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

*       更新区分が固定値「U」(更新)の場合、更新処理を行う
PERFORM UPDATE_ZTEGSDT206_STATUSREC
USING LST_STOCK
LTD_ZTEGSDT206_EXIST
I_SYST_DATE
I_SYST_TIME
CHANGING LTD_ZTEGSDT206_UPDATE.
**** START UPD 2015/03/03 ISID11 ****
*       更新処理
INSERT ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206_UPDATE
ACCEPTING DUPLICATE KEYS.

*       データ更新に失敗した場合、BAPIロールバックし、ロックを解除し、
*       メッセージを出力し、処理を終了する
IF SY-SUBRC <> 0.

O_SUBRC = SY-SUBRC.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
**** START DEL 2015/03/03 ISID11 ****
**         ロックを解除し
*        PERFORM UNLOCK_ZTEGSDT206_CANCEL USING I_ST_RECCANCEL.
**** END DEL 2015/03/03 ISID11 ****
MESSAGE S024(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*         データ更新に失敗しました(TBL = &1)
RETURN.

ENDIF.
**** END UPD 2015/03/03 ISID11 ****

WHEN OTHERS.

ENDCASE.

**** START DEL 2015/03/03 ISID11 ****
*  ENDLOOP.
**** END DEL 2015/03/03 ISID11 ****

* データ登録/更新に成功した場合、BAPIコミットし、ロックの解除処理へ
CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
EXPORTING
WAIT = 'X'.

**** START DEL 2015/03/03 ISID11 ****
** ロックを解除し
*  PERFORM UNLOCK_ZTEGSDT206_CANCEL USING
***** START UPD 2015/03/03 ISID11 ****
**                                         I_TD_LOCK.
*                                         I_ST_RECCANCEL.
***** END UPD 2015/03/03 ISID11 ****
**** END DEL 2015/03/03 ISID11 ****

ENDFORM.                    " UPDATE_ZTEGSDT206_RECCANCEL
*&---------------------------------------------------------------------*
*&      Form  UNLOCK_ZTEGSDT206_CANCEL
*&---------------------------------------------------------------------*
*       ロックを解除し
*----------------------------------------------------------------------*
*      -->I_TD_LOCK       ロック
*----------------------------------------------------------------------*
*FORM UNLOCK_ZTEGSDT206_CANCEL USING
***** START UPD 2015/03/03 ISID11 ****
**                                    I_TD_LOCK TYPE TYP_TD_STOCK.
**
**  DATA:
**    LST_LOCK    TYPE TYP_STOCK.
**
**  LOOP AT I_TD_LOCK INTO LST_LOCK.
**
**    CALL FUNCTION 'DEQUEUE_EZZTEGSDT206'
**      EXPORTING
**        MODE_ZTEGSDT206 = 'E'
**        EBELN           = LST_LOCK-EBELN
**        MBLNR_INB       = LST_LOCK-MBLNR_INB
**        MJAHR_INB       = LST_LOCK-MJAHR_INB.
**
**  ENDLOOP.
*                                I_ST_RECCANCEL TYPE TYP_STOCK.
*
*  CALL FUNCTION 'DEQUEUE_EZZTEGSDT206'
*    EXPORTING
*      MODE_ZTEGSDT206 = 'E'
*      EBELN           = I_ST_RECCANCEL-EBELN
*      MBLNR_INB       = I_ST_RECCANCEL-MBLNR_INB
*      MJAHR_INB       = I_ST_RECCANCEL-MJAHR_INB.
*
*ENDFORM.                    " UNLOCK_ZTEGSDT206_CANCEL
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ERROR_DATA
*&---------------------------------------------------------------------*
*       エラーデータ更新&出力処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      -->I_JOBID         ジョブID
*      -->I_SEQNO         連番
**** START ADD BY ISID REN 2015/07/03 ****
*      -->I_TD_D_C        入庫連携されているデータ
**** END ADD BY ISID REN 2015/07/03 ****
*      <--O_TD_ERROR      ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM UPDATE_ERROR_DATA USING I_SYST_DATE     TYPE SY-DATUM
I_SYST_TIME     TYPE SY-UZEIT
I_JOBID         TYPE ZTEGSDT202-JOBID
I_SEQNO         TYPE ZTEGSDT202-SEQNO
**** START ADD BY ISID REN 2015/07/03 ****
I_TD_D_C        TYPE TYP_TD_STOCK
**** END ADD BY ISID REN 2015/07/03 ****
CHANGING O_TD_ERROR      TYPE TYP_TD_ERROR.

DATA:
LTD_ERROR   TYPE TYP_TD_ERROR.
**** START DEL 2015/03/03 ISID11 ****
*    LTD_FILE    TYPE TYP_TD_FILE.    "ITAB:エラーファイル
**** END DEL 2015/03/03 ISID11 ****

* エラーデータのソート処理
* 以下順で「ITAB:入出庫連携エラーデータ」をソート
SORT O_TD_ERROR BY ZKBUNCC     ASCENDING    "処理区分
KDAUF       ASCENDING    "受注伝票番号
MBLNR_OUTB  ASCENDING    "入出庫伝票番号(販売)
MJAHR_OUTB  ASCENDING    "入出庫伝票年(販売)
EBELN       ASCENDING    "購買伝票番号
MBLNR_INB   ASCENDING    "入出庫伝票番号(購買)
MJAHR_INB   ASCENDING.   "入出庫伝票年(購買)

LTD_ERROR = O_TD_ERROR.

**** START DEL 2015/03/03 ISID11 ****
** 「ITAB:入出庫連携ロック以外のエラーデータ」を
** ロック失敗フラグ = 固定値「X」のレコードを削除する
*  DELETE LTD_ERROR WHERE LOCKFLG IS NOT INITIAL.
**** END DEL 2015/03/03 ISID11 ****

* 入出庫連携テーブルの更新処理
PERFORM UPDATE_ERROR_ZTEGSDT206 USING I_SYST_DATE
I_SYST_TIME
CHANGING LTD_ERROR.

**** START ADD BY ISID REN 2015/07/03 ****
* 入庫連携されているデータをバックグランドALVとして出力する
PERFORM OUTPUT_BG_ALV
USING I_TD_D_C        "入庫連携されているデータ
I_SYST_DATE     "システム日付
I_SYST_TIME.    "システム時刻
**** END ADD BY ISID REN 2015/07/03 ****

* ジョブ実行履歴テーブルの登録処理
PERFORM INSERT_ZTEGSDT202_JOB USING I_SYST_DATE
I_SYST_TIME
I_JOBID
I_SEQNO.

* ロックの解除
CALL FUNCTION 'DEQUEUE_ALL'.

* エラーファイルの出力処理を行う
PERFORM OUTPUT_FILE_ERR USING I_SYST_DATE
I_SYST_TIME
LTD_ERROR.
**** START DEL 2015/03/03 ISID11 ****
*                       CHANGING LTD_FILE.
**** END DEL 2015/03/03 ISID11 ****

* 終了メッセージの出力処理
IF LTD_ERROR IS NOT INITIAL.

*   エラーデ‐タ存在するメッセ‐ジを出力する
**** START UPD 2015/03/03 ISID11 ****
*    MESSAGE S026(ZMEGSD01).
**   エラーデータが存在し、エラーファイルを別途担当者へメール送付する
MESSAGE S086(ZMEGSD01) WITH ST_COUNT-TOTAL
ST_COUNT-NORMAL
ST_COUNT-ERROR .
*   エラーが存在し、エラーファイルを別途担当者へメール送付する
*   (処理&1件/正常&2件/エラー&3件)
**** END UPD 2015/03/03 ISID11 ****

ELSE.

**** START UPD 2015/03/03 ISID11 ****
*    MESSAGE S027(ZMEGSD01).
**   処理正常に終了しました
MESSAGE S087(ZMEGSD01) WITH ST_COUNT-TOTAL
ST_COUNT-NORMAL
ST_COUNT-ERROR .
**** END UPD 2015/03/03 ISID11 ****

ENDIF.

ENDFORM.                    " UPDATE_ERROR_DATA
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ERROR_ZTEGSDT206
*&---------------------------------------------------------------------*
*       入出庫連携テーブルの更新処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      <--O_TD_ERROR      ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM UPDATE_ERROR_ZTEGSDT206 USING I_SYST_DATE     TYPE SY-DATUM
I_SYST_TIME     TYPE SY-UZEIT
CHANGING O_TD_ERROR      TYPE TYP_TD_ERROR.

DATA:
LST_ERROR   TYPE TYP_ERROR,
LST_ZTEGSDT206        TYPE ZTEGSDT206,
LTD_ZTEGSDT206_INSERT TYPE TYP_TD_ZTEGSDT206_INSERT,
LTD_ZTEGSDT206_UPDATE TYPE TYP_TD_ZTEGSDT206_INSERT,
LTD_ERROR_OUT         TYPE TYP_TD_ZTEGSDT206_INSERT, "入庫取消
LTD_ERROR_IN          TYPE TYP_TD_ZTEGSDT206_INSERT. "出庫取消

*   入庫取消元のデータを再取得し
PERFORM GET_ZKBUNCC_OUT  USING O_TD_ERROR
CHANGING LTD_ERROR_OUT.

*   出庫取消元のデータを再取得し
PERFORM GET_ZKBUNCC_IN  USING O_TD_ERROR
CHANGING LTD_ERROR_IN.

LOOP AT O_TD_ERROR INTO LST_ERROR.

CASE LST_ERROR-STATUS.
*     更新区分が固定値「I」(新規登録)の場合、登録処理を行う
WHEN 'I'.

*       入出庫連携エラーデータ登録処理

LST_ZTEGSDT206-KDAUF      = LST_ERROR-KDAUF.
"受注伝票番号
LST_ZTEGSDT206-MBLNR_OUTB = LST_ERROR-MBLNR_OUTB.
"入出庫伝票番号(Outbound)
LST_ZTEGSDT206-MJAHR_OUTB = LST_ERROR-MJAHR_OUTB.
"入出庫伝票年(Outbound)
LST_ZTEGSDT206-EBELN      = LST_ERROR-EBELN.
"購買伝票番号
LST_ZTEGSDT206-MBLNR_INB  = LST_ERROR-MBLNR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-MJAHR_INB  = LST_ERROR-MJAHR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-WERK_INB   = LST_ERROR-WERK_INB.  "入庫プラント
LST_ZTEGSDT206-WERK_OUTB  = LST_ERROR-WERK_OUTB. "出荷プラント
LST_ZTEGSDT206-VBELN      = LST_ERROR-VBELN.     "出荷伝票
LST_ZTEGSDT206-ZKBUNCC    = LST_ERROR-ZKBUNCC.   "処理区分
LST_ZTEGSDT206-STATUS     = 'E'.
LST_ZTEGSDT206-MSGID      = LST_ERROR-MSGID. "メッセージクラス
LST_ZTEGSDT206-MSGNO      = LST_ERROR-MSGNO. "メッセージNo
**** START ADD 2015/04/24 ISID11 ****
"メッセージ変数
LST_ZTEGSDT206-MSGV1        = LST_ERROR-MSGV1.
LST_ZTEGSDT206-MSGV2        = LST_ERROR-MSGV2.
LST_ZTEGSDT206-MSGV3        = LST_ERROR-MSGV3.
LST_ZTEGSDT206-MSGV4        = LST_ERROR-MSGV4.
**** END ADD 2015/04/24 ISID11 ****
LST_ZTEGSDT206-MSGTX      = LST_ERROR-MSGTX. "メッセージテキスト
LST_ZTEGSDT206-Z_CRE_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_CRE_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_CRE_USERID = SY-UNAME.

APPEND LST_ZTEGSDT206 TO LTD_ZTEGSDT206_INSERT.

*     更新区分が固定値「U」(更新)の場合、更新処理を行う
WHEN 'U'.

*       入出庫連携エラーデータ更新処理
PERFORM UPDATE_ZTEGSDT206_ERROR USING I_SYST_DATE
I_SYST_TIME
LST_ERROR
LTD_ERROR_OUT
LTD_ERROR_IN
CHANGING LTD_ZTEGSDT206_UPDATE.

WHEN OTHERS.

ENDCASE.

ENDLOOP.

* 新規登録
IF LTD_ZTEGSDT206_INSERT IS NOT INITIAL.


INSERT ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206_INSERT
ACCEPTING DUPLICATE KEYS.

IF SY-SUBRC <> 0.

ROLLBACK WORK.

CALL FUNCTION 'DEQUEUE_ALL'.


MESSAGE S023(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*   データ登録に失敗しました(TBL = &1)
LEAVE LIST-PROCESSING.

ENDIF.

ENDIF.

* 更新処理
IF LTD_ZTEGSDT206_UPDATE IS NOT INITIAL.

MODIFY ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206_UPDATE.

IF SY-SUBRC <> 0.

ROLLBACK WORK.

CALL FUNCTION 'DEQUEUE_ALL'.


MESSAGE S024(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*   データ更新に失敗しました(TBL = &1)
LEAVE LIST-PROCESSING.

ENDIF.

ENDIF.

* データ登録に成功した場合、コミットし、処理続行
COMMIT WORK AND WAIT.

ENDFORM.                    " UPDATE_ERROR_ZTEGSDT206
*&---------------------------------------------------------------------*
*&      Form  GET_ZKBUNCC_OUT
*&---------------------------------------------------------------------*
*       入庫取消元のデータを再取得し
*----------------------------------------------------------------------*
*      -->I_TD_ERROR  入出庫連携エラーデータ
*      <--O_TD_OUT    入庫取消
*----------------------------------------------------------------------*
FORM GET_ZKBUNCC_OUT USING I_TD_ERROR TYPE TYP_TD_ERROR
CHANGING O_TD_OUT TYPE TYP_TD_ZTEGSDT206_INSERT.

DATA:
LTD_ERROR   TYPE TYP_TD_ERROR.

LTD_ERROR = I_TD_ERROR.
DELETE LTD_ERROR WHERE ZKBUNCC <> CNS_ZKBUNCC_3.

IF LTD_ERROR IS INITIAL.

RETURN.

ENDIF.

SORT LTD_ERROR BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING.

DELETE ADJACENT DUPLICATES FROM LTD_ERROR
COMPARING KDAUF
MBLNR_OUTB
MJAHR_OUTB.

* キー項目も更新したいので、元のデータを再取得し
SELECT *   "全て取得
INTO TABLE O_TD_OUT
FROM ZTEGSDT206
FOR ALL ENTRIES IN LTD_ERROR
WHERE KDAUF      = LTD_ERROR-KDAUF        "受注伝票番号
AND MBLNR_OUTB = SPACE   "入出庫伝票番号(Outbound)
AND MJAHR_OUTB = '0000'   "入出庫伝票年(Outbound)
**** START ADD 2015/03/03 ISID11 ****
AND EBELN        = LTD_ERROR-EBELN  "購買伝票番号
AND MBLNR_INB    = LTD_ERROR-MBLNR_INB
"取消元の入出庫伝票番号(Inbound)
AND MJAHR_INB    = LTD_ERROR-MJAHR_INB.
"取消元の入出庫伝票年(Inbound)
**** END ADD 2015/03/03 ISID11 ****

IF SY-SUBRC = 0.

**** START ADD 2015/03/03 ISID11 ****
SORT O_TD_OUT BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING
EBELN      ASCENDING
MBLNR_INB  ASCENDING
MJAHR_INB  ASCENDING.
**** END ADD 2015/03/03 ISID11 ****

*   テーブルから削除し
DELETE ZTEGSDT206 FROM TABLE
**** START UPD 2015/03/03 ISID11 ****
*                                 LTD_ERROR.
O_TD_OUT.
**** END UPD 2015/03/03 ISID11 ****

*   データ更新に失敗した場合、ロックを解除し、メッセージを出力し、
*   処理を終了する
IF SY-SUBRC <> 0.

ROLLBACK WORK.

CALL FUNCTION 'DEQUEUE_ALL'.


MESSAGE S024(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*     データ更新に失敗しました(TBL = &1)
LEAVE LIST-PROCESSING.

ENDIF.

ENDIF.

ENDFORM.                    " GET_ZKBUNCC_OUT
*&---------------------------------------------------------------------*
*&      Form  GET_ZKBUNCC_IN
*&---------------------------------------------------------------------*
*       出庫取消元のデータを再取得し
*----------------------------------------------------------------------*
*      -->I_TD_ERROR  入出庫連携エラーデータ
*      <--O_TD_IN     出庫取消
*----------------------------------------------------------------------*
FORM GET_ZKBUNCC_IN USING I_TD_ERROR TYPE TYP_TD_ERROR
CHANGING O_TD_IN TYPE TYP_TD_ZTEGSDT206_INSERT.

DATA:
LTD_ERROR   TYPE TYP_TD_ERROR.

LTD_ERROR = I_TD_ERROR.
DELETE LTD_ERROR WHERE
**** START ADD 2015/03/03 ISID11 ****
ZKBUNCC <> CNS_ZKBUNCC_1
**** END ADD 2015/03/03 ISID11 ****
AND ZKBUNCC <> CNS_ZKBUNCC_2.

IF LTD_ERROR IS INITIAL.

RETURN.

ENDIF.

SORT LTD_ERROR BY EBELN     ASCENDING
MBLNR_INB ASCENDING
MJAHR_INB ASCENDING.

DELETE ADJACENT DUPLICATES FROM LTD_ERROR
COMPARING EBELN
MBLNR_INB
MJAHR_INB.

* キー項目も更新したいので、元のデータを再取得し
SELECT *   "全て取得
INTO TABLE O_TD_IN
FROM ZTEGSDT206
FOR ALL ENTRIES IN LTD_ERROR
WHERE EBELN     = LTD_ERROR-EBELN       "購買伝票番号
AND MBLNR_INB = SPACE    "入出庫伝票番号(Inbound)
AND MJAHR_INB = '0000'   "入出庫伝票年(Inbound)
**** START ADD 2015/03/03 ISID11 ****
AND KDAUF        = LTD_ERROR-KDAUF  "受注伝票番号
AND MBLNR_OUTB   = LTD_ERROR-MBLNR_OUTB   "入出庫伝票番号(Outbound)
AND MJAHR_OUTB   = LTD_ERROR-MJAHR_OUTB.  "入出庫伝票年(Outbound)
**** END ADD 2015/03/03 ISID11 ****

IF SY-SUBRC = 0.

**** START ADD 2015/03/03 ISID11 ****
SORT O_TD_IN BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING
EBELN      ASCENDING
MBLNR_INB  ASCENDING
MJAHR_INB  ASCENDING.
**** END ADD 2015/03/03 ISID11 ****

*   テーブルから削除し
DELETE ZTEGSDT206 FROM TABLE
**** START UPD 2015/03/03 ISID11 ****
*                                 LTD_ERROR.
O_TD_IN.
**** END UPD 2015/03/03 ISID11 ****

*   データ更新に失敗した場合、ロックを解除し、メッセージを出力し、
*   処理を終了する
IF SY-SUBRC <> 0.

ROLLBACK WORK.

CALL FUNCTION 'DEQUEUE_ALL'.


MESSAGE S024(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*     データ更新に失敗しました(TBL = &1)
LEAVE LIST-PROCESSING.

ENDIF.

ENDIF.

ENDFORM.                    " GET_ZKBUNCC_IN
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGSDT206_ERROR
*&---------------------------------------------------------------------*
*       入出庫連携エラーデータ更新処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE   システム日付
*      -->I_SYST_TIME   システム時刻
*      -->I_ST_ERROR    入出庫連携エラーデータ
*      -->I_TD_OUT      入庫取消
*      -->I_TD_IN       出庫取消
*      <--O_TD_INSERT   登録
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGSDT206_ERROR
USING I_SYST_DATE    TYPE SY-DATUM
I_SYST_TIME    TYPE SY-UZEIT
I_ST_ERROR     TYPE TYP_ERROR
I_TD_OUT  TYPE TYP_TD_ZTEGSDT206_INSERT
I_TD_IN   TYPE TYP_TD_ZTEGSDT206_INSERT
CHANGING O_TD_INSERT TYPE TYP_TD_ZTEGSDT206_INSERT.

DATA:
LST_ZTEGSDT206   TYPE ZTEGSDT206.

CASE I_ST_ERROR-ZKBUNCC.
*   処理区分が固定値「3」(入庫取消)の場合
WHEN '3'.

**** START UPD 2015/03/03 ISID11 ****
*      LOOP AT I_TD_OUT INTO LST_ZTEGSDT206
*                  WHERE KDAUF      = I_ST_ERROR-KDAUF
*                    AND MBLNR_OUTB = I_ST_ERROR-MBLNR_OUTB
*                    AND MJAHR_OUTB = I_ST_ERROR-MJAHR_OUTB.
CLEAR:
LST_ZTEGSDT206.

READ TABLE I_TD_OUT INTO LST_ZTEGSDT206
WITH KEY KDAUF      = I_ST_ERROR-KDAUF
MBLNR_OUTB = SPACE
MJAHR_OUTB = '0000'
EBELN      = I_ST_ERROR-EBELN
MBLNR_INB  = I_ST_ERROR-MBLNR_INB
MJAHR_INB  = I_ST_ERROR-MJAHR_INB
BINARY SEARCH.

IF SY-SUBRC = 0.
**** END UPD 2015/03/03 ISID11 ****

LST_ZTEGSDT206-EBELN        = I_ST_ERROR-EBELN.   "購買伝票番号
LST_ZTEGSDT206-MBLNR_INB    = I_ST_ERROR-MBLNR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-MJAHR_INB    = I_ST_ERROR-MJAHR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-WERK_INB     = I_ST_ERROR-WERK_INB.
"入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = I_ST_ERROR-WERK_OUTB.
"出荷プラント
LST_ZTEGSDT206-VBELN        = I_ST_ERROR-VBELN.   "出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = I_ST_ERROR-ZKBUNCC. "処理区分
LST_ZTEGSDT206-STATUS       = 'E'.                "固定値「E」
LST_ZTEGSDT206-MSGID        = I_ST_ERROR-MSGID.
"メッセージクラス
LST_ZTEGSDT206-MSGNO        = I_ST_ERROR-MSGNO.
"メッセージNo
**** START ADD 2015/04/24 ISID11 ****
"メッセージ変数
LST_ZTEGSDT206-MSGV1        = I_ST_ERROR-MSGV1.
LST_ZTEGSDT206-MSGV2        = I_ST_ERROR-MSGV2.
LST_ZTEGSDT206-MSGV3        = I_ST_ERROR-MSGV3.
LST_ZTEGSDT206-MSGV4        = I_ST_ERROR-MSGV4.
**** END ADD 2015/04/24 ISID11 ****
LST_ZTEGSDT206-MSGTX        = I_ST_ERROR-MSGTX.
"メッセージテキスト
LST_ZTEGSDT206-Z_MOD_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_MOD_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_MOD_USERID = SY-UNAME.

APPEND LST_ZTEGSDT206 TO O_TD_INSERT.

**** START UPD 2015/03/03 ISID11 ****
*        CLEAR:
*          LST_ZTEGSDT206.

*      ENDLOOP.
ENDIF.
**** END UPD 2015/03/03 ISID11 ****

*   処理区分が固定値「1」(出庫確認)と固定値「2」(出庫取消)の場合
WHEN '1'
OR '2'.

**** START UPD 2015/03/03 ISID11 ****
*      LOOP AT I_TD_IN INTO LST_ZTEGSDT206
*                      WHERE EBELN     = I_ST_ERROR-EBELN
*                        AND MBLNR_INB = I_ST_ERROR-MBLNR_INB
*                        AND MJAHR_INB = I_ST_ERROR-MJAHR_INB.
CLEAR:
LST_ZTEGSDT206.

READ TABLE I_TD_IN INTO LST_ZTEGSDT206
WITH KEY KDAUF      = I_ST_ERROR-KDAUF
MBLNR_OUTB = I_ST_ERROR-MBLNR_OUTB
MJAHR_OUTB = I_ST_ERROR-MJAHR_OUTB
EBELN      = I_ST_ERROR-EBELN
MBLNR_INB  = SPACE
MJAHR_INB  = '0000'
BINARY SEARCH.

IF SY-SUBRC = 0.
**** END UPD 2015/03/03 ISID11 ****

LST_ZTEGSDT206-KDAUF        = I_ST_ERROR-KDAUF.   "受注伝票番号
LST_ZTEGSDT206-MBLNR_OUTB   = I_ST_ERROR-MBLNR_OUTB.
"入出庫伝票番号(Outbound)
LST_ZTEGSDT206-MJAHR_OUTB   = I_ST_ERROR-MJAHR_OUTB.
"入出庫伝票番号(Outbound)
LST_ZTEGSDT206-WERK_INB     = I_ST_ERROR-WERK_INB.
"入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = I_ST_ERROR-WERK_OUTB.
"出荷プラント
LST_ZTEGSDT206-VBELN        = I_ST_ERROR-VBELN.   "出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = I_ST_ERROR-ZKBUNCC. "処理区分
LST_ZTEGSDT206-STATUS       = 'E'.                "固定値「E」
LST_ZTEGSDT206-MSGID        = I_ST_ERROR-MSGID.
"メッセージクラス
LST_ZTEGSDT206-MSGNO        = I_ST_ERROR-MSGNO.
"メッセージNo
**** START ADD 2015/04/24 ISID11 ****
"メッセージ変数
LST_ZTEGSDT206-MSGV1        = I_ST_ERROR-MSGV1.
LST_ZTEGSDT206-MSGV2        = I_ST_ERROR-MSGV2.
LST_ZTEGSDT206-MSGV3        = I_ST_ERROR-MSGV3.
LST_ZTEGSDT206-MSGV4        = I_ST_ERROR-MSGV4.
**** END ADD 2015/04/24 ISID11 ****
LST_ZTEGSDT206-MSGTX        = I_ST_ERROR-MSGTX.
"メッセージテキスト
LST_ZTEGSDT206-Z_MOD_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_MOD_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_MOD_USERID = SY-UNAME.

APPEND LST_ZTEGSDT206 TO O_TD_INSERT.

**** START UPD 2015/03/03 ISID11 ****
*        CLEAR:
*          LST_ZTEGSDT206.
*
*      ENDLOOP.
ENDIF.
**** END UPD 2015/03/03 ISID11 ****

WHEN OTHERS.

ENDCASE.

ENDFORM.                    " UPDATE_ZTEGSDT206_ERROR
*&---------------------------------------------------------------------*
*&      Form  INSERT_ZTEGSDT202_JOB
*&---------------------------------------------------------------------*
*       ジョブ実行履歴テーブルの登録処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      -->I_JOBID         ジョブID
*      -->I_SEQNO         連番
*----------------------------------------------------------------------*
FORM INSERT_ZTEGSDT202_JOB USING I_SYST_DATE     TYPE SY-DATUM
I_SYST_TIME     TYPE SY-UZEIT
I_JOBID         TYPE ZTEGSDT202-JOBID
I_SEQNO         TYPE ZTEGSDT202-SEQNO.

DATA:
LST_ZTEGSDT202  TYPE ZTEGSDT202.

IF S_CPUDT IS INITIAL.
*   ジョブ実行履歴テーブルの実行日付と時刻を登録する
CLEAR:
LST_ZTEGSDT202.

LST_ZTEGSDT202-JOBID        = I_JOBID.
LST_ZTEGSDT202-SEQNO        = I_SEQNO + 1.
LST_ZTEGSDT202-JOB_DATE     = I_SYST_DATE.
LST_ZTEGSDT202-JOB_TIME     = I_SYST_TIME.
LST_ZTEGSDT202-JOB_USER     = SY-UNAME.
LST_ZTEGSDT202-Z_CRE_YMD    = I_SYST_DATE.
LST_ZTEGSDT202-Z_CRE_HMS    = I_SYST_TIME.
LST_ZTEGSDT202-Z_CRE_USERID = SY-UNAME.

INSERT ZTEGSDT202 FROM LST_ZTEGSDT202.

*   データ登録に失敗した場合、ロックを解除し、
*   メッセージを出力し、処理を終了する
IF SY-SUBRC <> 0.

ROLLBACK WORK.

CALL FUNCTION 'DEQUEUE_ALL'.

MESSAGE S023(ZMEGSD01) WITH 'ZTEGSDT202'
DISPLAY LIKE CNS_MSG_E.
*     データ登録に失敗しました(TBL = &1)
LEAVE LIST-PROCESSING.

ELSE.

COMMIT WORK AND WAIT.

ENDIF.

ENDIF.

ENDFORM.                    " INSERT_ZTEGSDT202_JOB
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_FILE_ERR
*&---------------------------------------------------------------------*
*       エラーファイルの出力処理を行う
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      -->I_TD_ERROR      ITAB:入出庫連携エラーデータ
*      <--O_TD_FILE       ITAB:エラーファイル
*----------------------------------------------------------------------*
FORM OUTPUT_FILE_ERR USING I_SYST_DATE     TYPE SY-DATUM
I_SYST_TIME     TYPE SY-UZEIT
I_TD_ERROR      TYPE TYP_TD_ERROR.
**** START DEL 2015/03/03 ISID11 ****
*                  CHANGING O_TD_FILE       TYPE TYP_TD_FILE.
**** END DEL 2015/03/03 ISID11 ****

DATA:
**** START DEL 2015/03/26 ISID11 ****
*    LTD_ERROR TYPE TYP_TD_ERROR,
**** END DEL 2015/03/26 ISID11 ****
LST_ERROR TYPE TYP_ERROR,
**** START DEL 2015/03/26 ISID11 ****
*    LTD_VBAK  TYPE TYP_TD_VBAK,
*    LST_VBAK  TYPE TYP_VBAK,
*    LTD_EKKO TYPE TYP_TD_EKKO,
*    LST_EKKO TYPE TYP_EKKO,
**** END DEL 2015/03/26 ISID11 ****
LW_OUTPUT TYPE STRING,
**** START ADD 2015/03/03 ISID11 ****
LW_COL1   TYPE STRING,
LW_DATE   TYPE CHAR10,
LW_TIME   TYPE CHAR8,
LW_STR_TOTAL   TYPE STRING,
LW_STR_NORMAL  TYPE STRING,
LW_STR_ERROR   TYPE STRING,
**** END ADD 2015/03/03 ISID11 ****
LW_PATH   TYPE RLGRAP-FILENAME.          "エラーファイルパース

**** START ADD 2015/03/03 ISID11 ****
IF I_TD_ERROR IS INITIAL.

RETURN.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

CLEAR:
LW_PATH.

CONCATENATE P_ERROR
I_SYST_DATE
I_SYST_TIME+0(4)
'.CSV'
INTO LW_PATH.

OPEN DATASET LW_PATH FOR OUTPUT
IN TEXT MODE ENCODING UTF-8
IGNORING CONVERSION ERRORS.

* エラーファイルOpenに失敗した場合

IF SY-SUBRC <> 0.

MESSAGE S025(ZMEGSD01) WITH LW_PATH
DISPLAY LIKE CNS_MSG_E.
*   エラーファイル出力に失敗しました(パス = &1)

LEAVE LIST-PROCESSING.

ENDIF.

**** START ADD 2015/03/03 ISID11 ****
* Header1
CLEAR:
LW_COL1,
LW_OUTPUT.

* PG-ID/Name: プログラムID / プログラムTitle
CONCATENATE SY-REPID
TEXT-W07
SY-TITLE
INTO LW_COL1
SEPARATED BY SPACE.

CONCATENATE TEXT-W01
LW_COL1
INTO LW_OUTPUT
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.

TRANSFER LW_OUTPUT TO LW_PATH.

* Header2
CLEAR:
LW_OUTPUT,
LW_COL1.

* Run Date/Time/User: Date / Time / User
WRITE I_SYST_DATE TO LW_DATE.
WRITE I_SYST_TIME TO LW_TIME.

CONCATENATE LW_DATE
TEXT-W07
LW_TIME
TEXT-W07
SY-UNAME
INTO LW_COL1
SEPARATED BY SPACE.

CONCATENATE TEXT-W02
LW_COL1
INTO LW_OUTPUT
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.

TRANSFER LW_OUTPUT TO LW_PATH.

* Header3
CLEAR:
LW_OUTPUT,
LW_STR_TOTAL,
LW_STR_NORMAL,
LW_STR_ERROR,
LW_COL1.

LW_STR_TOTAL  = ST_COUNT-TOTAL.
LW_STR_NORMAL = ST_COUNT-NORMAL.
LW_STR_ERROR  = ST_COUNT-ERROR.

CONDENSE LW_STR_TOTAL.
CONDENSE LW_STR_NORMAL.
CONDENSE LW_STR_ERROR.

CONCATENATE TEXT-W03
LW_STR_TOTAL
TEXT-W07
TEXT-W04
LW_STR_NORMAL
TEXT-W07
TEXT-W05
LW_STR_ERROR
INTO LW_COL1
SEPARATED BY SPACE.

* Records Info: Total  &1  /  Normal &2  /  Error &3
CONCATENATE TEXT-W06
LW_COL1
INTO LW_OUTPUT
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.

TRANSFER LW_OUTPUT TO LW_PATH.

CLEAR:
LW_OUTPUT.

TRANSFER LW_OUTPUT TO LW_PATH.
**** END ADD 2015/03/03 ISID11 ****

**** START DEL 2015/03/26 ISID11 ****
** Sales Officeを取得
*  LTD_ERROR = I_TD_ERROR.
*  SORT LTD_ERROR BY KDAUF ASCENDING.
*  DELETE ADJACENT DUPLICATES FROM LTD_ERROR
*                        COMPARING KDAUF.
*  DELETE LTD_ERROR WHERE VBELN IS INITIAL.
*  IF LTD_ERROR IS NOT INITIAL.
*
*    SELECT VBAK~VBELN     "受注伝票番号(Sales Doc.)
*           VBAK~VKORG     "販売組織 (Sales Org.)
*           VBAK~VTWEG     "流通チャネル (Channel)
*           VBAK~SPART     "製品部門 (Devision)
*           VBAK~VKGRP     "営業グループ (Sales Group)
*           VBAK~VKBUR     "営業所 (Sales Office)
*           TVKOT~VTEXT    "販売組織名称 (Name)
*      INTO TABLE LTD_VBAK
*      FROM VBAK
***** START UPD 2015/03/03 ISID11 ****
**     INNER JOIN TVKOT
*     LEFT JOIN TVKOT
***** END UPD 2015/03/03 ISID11 ****
*        ON VBAK~VKORG = TVKOT~VKORG
***** START ADD 2015/03/03 ISID11 ****
*       AND TVKOT~SPRAS = SY-LANGU
***** END ADD 2015/03/03 ISID11 ****
*       FOR ALL ENTRIES IN LTD_ERROR
*     WHERE VBAK~VBELN  = LTD_ERROR-KDAUF.  "受注伝票番号(Sales Doc.)
***** START DEL 2015/03/03 ISID11 ****
**       AND TVKOT~SPRAS = SY-LANGU.
***** END DEL 2015/03/03 ISID11 ****
*
**   データが存在した場合、「ITAB:販売伝票」をソートし、処理続行
*    IF SY-SUBRC = 0.
*
*      SORT LTD_VBAK BY VBELN ASCENDING.
*
*    ENDIF.
*
*  ENDIF.

** Purch.Grp.を取得
*  LTD_ERROR = I_TD_ERROR.
*  SORT LTD_ERROR BY EBELN ASCENDING.
*  DELETE ADJACENT DUPLICATES FROM LTD_ERROR
*                        COMPARING EBELN.
*  DELETE LTD_ERROR WHERE EBELN IS INITIAL.
*  IF LTD_ERROR IS NOT INITIAL.
*    SELECT EKKO~EBELN     "購買伝票番号(Purch.Doc.)
*           EKKO~EKORG     "購買組織 (Purch Org.)
*           EKKO~EKGRP     "購買グループ (Purch Grp.)
*           T024E~EKOTX    "購買組織名称 (Name)
*      INTO TABLE LTD_EKKO
*      FROM EKKO
*     INNER JOIN T024E
*        ON EKKO~EKORG = T024E~EKORG
*       FOR ALL ENTRIES IN LTD_ERROR
*     WHERE EKKO~EBELN = LTD_ERROR-EBELN.  "購買伝票番号(Purch.Doc.)
**   データが存在した場合、「ITAB:購買伝票」をソートし、処理続行
*    IF SY-SUBRC = 0.
*
*      SORT LTD_EKKO BY EBELN ASCENDING.
*
*    ENDIF.
*  ENDIF.
**** END DEL 2015/03/26 ISID11 ****

CLEAR:
LW_OUTPUT.

* データエレメントに対するテキストの取得

CALL FUNCTION 'ZEG_ZZ_DD04T_GET'
EXPORTING
IMPTSNAME    = 'ZSEGSD0020'
IMPORTING
EXPSCRTEXT_M = LW_OUTPUT.

TRANSFER LW_OUTPUT TO LW_PATH.

LOOP AT I_TD_ERROR INTO LST_ERROR.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_ERROR-KDAUF
IMPORTING
OUTPUT = LST_ERROR-KDAUF.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_ERROR-MBLNR_OUTB
IMPORTING
OUTPUT = LST_ERROR-MBLNR_OUTB.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_ERROR-MBLNR_INB
IMPORTING
OUTPUT = LST_ERROR-MBLNR_INB.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_ERROR-EBELN
IMPORTING
OUTPUT = LST_ERROR-EBELN.

**** START DEL 2015/03/26 ISID11 ****
*    CLEAR:
*      LST_VBAK.
*
*    READ TABLE LTD_VBAK INTO LST_VBAK
*                    WITH KEY VBELN = LST_ERROR-KDAUF
*                    BINARY SEARCH.
*
*    CLEAR:
*      LST_EKKO.
*    READ TABLE LTD_EKKO INTO LST_EKKO
*                    WITH KEY EBELN = LST_ERROR-EBELN
*                    BINARY SEARCH.
**** END DEL 2015/03/26 ISID11 ****

CLEAR:
LW_OUTPUT.

CONCATENATE
**** START UPD 2015/03/26 ISID11 ****
*                LST_VBAK-VKBUR          "Sales Office
**** START UPD 2015/03/30 ISID11 ****
*                LST_ERROR-VKBUR         "Sales Office
LST_ERROR-VKGRP         "Sales Group
**** END UPD 2015/03/30 ISID11 ****
**** END UPD 2015/03/26 ISID11 ****
LST_ERROR-KDAUF         "Sales.Doc.
LST_ERROR-MBLNR_OUTB    "Mat.Doc.(Out)
**** START UPD 2015/03/26 ISID11 ****
*                LST_EKKO-EKGRP          "Purch.Grp.
LST_ERROR-EKGRP         "Purch.Grp.
**** END UPD 2015/03/26 ISID11 ****
LST_ERROR-EBELN         "Purch.Doc.
LST_ERROR-MBLNR_INB     "Mat.Doc.(In)
LST_ERROR-MSGID         "Msg Cls.
LST_ERROR-MSGNO         "Msg No.
LST_ERROR-MSGTX         "Message
INTO LW_OUTPUT
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.

TRANSFER LW_OUTPUT TO LW_PATH.

IF SY-SUBRC <> 0.

ROLLBACK WORK.

MESSAGE S025(ZMEGSD01) WITH LW_PATH.
*     エラーファイル出力に失敗しました(パス = &1)

CLOSE DATASET
**** START UPD 2015/03/03 ISID11 ****
*                    P_ERROR.
LW_PATH.
**** END UPD 2015/03/03 ISID11 ****

LEAVE LIST-PROCESSING.

ENDIF.

ENDLOOP.

CLOSE DATASET
**** START UPD 2015/03/03 ISID11 ****
*                P_ERROR
LW_PATH.
**** END UPD 2015/03/03 ISID11 ****

ENDFORM.                    " OUTPUT_FILE_ERR
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_RECOVERY
*&---------------------------------------------------------------------*
*       リカバリー
*----------------------------------------------------------------------*
*      -->I_RD_DWERKS   ITAB:出荷プラント
*      -->I_RD_RWERKS   ITAB:入庫プラント
*----------------------------------------------------------------------*
FORM EXCUTE_RECOVERY.
**** START DEL 2015/03/03 ISID11 ****
*                     USING I_RD_DWERKS TYPE TYP_RD_DWERKS
*                           I_RD_RWERKS TYPE TYP_RD_RWERKS.
**** END DEL 2015/03/03 ISID11 ****

* データ抽出編集処理
PERFORM GET_ALV
**** START DEL 2015/03/03 ISID11 ****
*                  USING I_RD_DWERKS
*                        I_RD_RWERKS
**** END DEL 2015/03/03 ISID11 ****
CHANGING TD_ALV.

* 画面出力
PERFORM DISPLAY_ALV CHANGING TD_ALV.

ENDFORM.                    " EXCUTE_RECOVERY
*&---------------------------------------------------------------------*
*&      Form  GET_ALV
*&---------------------------------------------------------------------*
*       データ抽出編集処理
*----------------------------------------------------------------------*
*      -->I_RD_DWERKS   ITAB:出荷プラント
*      -->I_RD_RWERKS   ITAB:入庫プラント
*      <--O_TD_ALV      ITAB:ALV
*----------------------------------------------------------------------*
FORM GET_ALV
**** START DEL 2015/03/03 ISID11 ****
*            USING  I_RD_DWERKS TYPE TYP_RD_DWERKS
*                   I_RD_RWERKS TYPE TYP_RD_RWERKS
**** END DEL 2015/03/03 ISID11 ****
CHANGING O_TD_ALV TYPE TYP_TD_ALV.

DATA:
LTD_VBAK TYPE TYP_TD_VBAK,   "ITAB:販売伝票
LTD_EKKO TYPE TYP_TD_EKKO.   "ITAB:購買伝票

* 入出庫の連携データを取得する
PERFORM GET_ALV_ZTEGSDT206
**** START DEL 2015/03/03 ISID11 ****
*                             USING I_RD_DWERKS
*                                   I_RD_RWERKS
**** END DEL 2015/03/03 ISID11 ****
CHANGING O_TD_ALV.

* 販売組織情報の検索
PERFORM GET_VBAK USING O_TD_ALV
CHANGING LTD_VBAK.

* 購買組織情報の検索
PERFORM GET_EKKO USING O_TD_ALV
CHANGING LTD_EKKO.

* その他データの編集
PERFORM EDIT_ALV USING LTD_VBAK
LTD_EKKO
CHANGING O_TD_ALV.


ENDFORM.                    " GET_ALV
*&---------------------------------------------------------------------*
*&      Form  GET_ALV_ZTEGSDT206
*&---------------------------------------------------------------------*
*       入出庫の連携データを取得する
*----------------------------------------------------------------------*
*      -->I_RD_DWERKS   ITAB:出荷プラント
*      -->I_RD_RWERKS   ITAB:入庫プラント
*      <--O_TD_ALV      ITAB:ALV
*----------------------------------------------------------------------*
FORM GET_ALV_ZTEGSDT206
**** START DEL 2015/03/03 ISID11 ****
*                        USING I_RD_DWERKS TYPE TYP_RD_DWERKS
*                              I_RD_RWERKS TYPE TYP_RD_RWERKS
**** END DEL 2015/03/03 ISID11 ****
CHANGING O_TD_ALV TYPE TYP_TD_ALV.

DATA:
LRD_ZKBUNCC TYPE TYP_RD_ZKBUNCC,
LST_ZKBUNCC LIKE LINE OF LRD_ZKBUNCC,
**** START ADD 2015/04/24 ISID11 ****
LST_ALV            TYPE ZSEGSD0019,
LST_RECOVERY_LIST  TYPE TYP_RECOVERY_LIST,
LTD_RECOVERY_LIST  TYPE TABLE OF TYP_RECOVERY_LIST.

REFRESH O_TD_ALV.
**** START ADD 2015/04/24 ISID11 ****

LST_ZKBUNCC-SIGN   = CNS_RNG_SIGN.
LST_ZKBUNCC-OPTION = CNS_RNG_OPTION.

* 出庫確認(Delivery Issue)：　固定値「1」
IF CB_ISSUE IS NOT INITIAL.

LST_ZKBUNCC-LOW = CNS_ZKBUNCC_1.
APPEND LST_ZKBUNCC TO LRD_ZKBUNCC.

ENDIF.

* 出庫取消(Delivery Reverse)：固定値「2」
IF CB_REVER IS NOT INITIAL.

LST_ZKBUNCC-LOW = CNS_ZKBUNCC_2.
APPEND LST_ZKBUNCC TO LRD_ZKBUNCC.

ENDIF.

* 入庫取消(Receiving Cancel)： 固定値「3」
IF CB_CANCE IS NOT INITIAL.

LST_ZKBUNCC-LOW = CNS_ZKBUNCC_3.
APPEND LST_ZKBUNCC TO LRD_ZKBUNCC.

ENDIF.

SELECT KDAUF        "受注伝票番号(Sales Doc.)
VBELN        "出荷伝票(Delivery Doc.)
MBLNR_OUTB   "販売の入出庫伝票(Mat.Doc.(Out))
EBELN        "購買伝票番号(Purch.Doc.)
MBLNR_INB    "購買の入出庫伝票(Mat.Doc.(In))
STATUS       "ステータス(Status)
**** START ADD 2015/04/24 ISID11 ****
MSGID         "メッセージ ID
MSGNO        "システムメッセージ番号
MSGV1         "メッセージ変数
MSGV2         "メッセージ変数
MSGV3         "メッセージ変数
MSGV4         "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
MSGTX        "メッセージテキスト(Message)
Z_CRE_USERID "登録者(Create User)
Z_CRE_YMD    "ジョブ実行日付(Job Date)
Z_CRE_HMS    "ジョブ実行時刻(Job Time)
MJAHR_OUTB   "販売の入出庫伝票年(Mat. Doc. Year(Out))
WERK_OUTB    "出荷プラント(Delivery Plant)
MJAHR_INB    "購買の入出庫伝票年(Mat.Doc. Year(In))
WERK_INB     "入庫プラント(Recieving Plant)
ZKBUNCC      "処理区分(Type)
INTO  TABLE LTD_RECOVERY_LIST
FROM ZTEGSDT206
WHERE WERK_OUTB  IN
**** START UPD 2015/03/03 ISID11 ****
*                       I_RD_DWERKS   "出荷プラント
RD_DWERKS   "出荷プラント
**** END UPD 2015/03/03 ISID11 ****
AND VBELN      IN S_VBELN       "出荷伝票
AND MBLNR_OUTB IN S_OMBLNR      "入出庫伝票番号
AND WERK_INB   IN
**** START UPD 2015/03/03 ISID11 ****
*                       I_RD_RWERKS   "プラント(発注側)
RD_RWERKS   "プラント(発注側)
**** END UPD 2015/03/03 ISID11 ****
AND MBLNR_INB  IN S_IMBLNR      "入出庫伝票番号
AND ZKBUNCC    IN LRD_ZKBUNCC   "処理区分
AND STATUS     IN S_STATUS      "ステータス
AND Z_CRE_YMD  IN S_CREYMD      "登録年月日
AND Z_CRE_HMS  IN S_CREHMS.     "登録時分秒

* データが存在しない場合、メッセージを出力し処理を終了する
IF SY-SUBRC <> 0.

MESSAGE S064(ZMEGSD01).
*   対象データが存在しません
LEAVE LIST-PROCESSING.

ELSE.
**** START ADD 2015/04/24 ISID11 ****
* 登録言語でMessageを再取得する。
LOOP AT LTD_RECOVERY_LIST INTO LST_RECOVERY_LIST.
**** START ADD BY ISID REN 2015/07/03 ****
CLEAR LST_ALV.
**** END ADD BY ISID REN 2015/07/03 ****

MOVE-CORRESPONDING  LST_RECOVERY_LIST TO LST_ALV.

IF LST_RECOVERY_LIST-MSGNO IS NOT INITIAL.
MESSAGE ID          LST_RECOVERY_LIST-MSGID
TYPE     CNS_MSG_S
NUMBER  LST_RECOVERY_LIST-MSGNO
WITH       LST_RECOVERY_LIST-MSGV1
LST_RECOVERY_LIST-MSGV2
LST_RECOVERY_LIST-MSGV3
LST_RECOVERY_LIST-MSGV4
INTO       LST_ALV-MSGTX.
ENDIF.

APPEND LST_ALV TO O_TD_ALV.
ENDLOOP.
**** END ADD 2015/04/24 ISID11 ****


*   データが存在した場合、「ITAB:ALV」をソートし、処理続行
SORT O_TD_ALV
BY KDAUF      ASCENDING   "受注伝票番号(Sales Doc.)
VBELN      ASCENDING   "出荷伝票(Delivery Doc.)
MBLNR_OUTB ASCENDING   "販売の入出庫伝票(Mat.Doc.(Out))
EBELN      ASCENDING   "購買伝票番号(Purch.Doc.)
MBLNR_INB  ASCENDING.  "購買の入出庫伝票(Mat.Doc.(In))

ENDIF.

ENDFORM.                    " GET_ALV_ZTEGSDT206
*&---------------------------------------------------------------------*
*&      Form  GET_VBAK
*&---------------------------------------------------------------------*
*       販売組織情報の検索
*----------------------------------------------------------------------*
*      -->I_TD_ALV      ITAB:ALV
*      <--O_TD_VBAK     ITAB:販売伝票
*----------------------------------------------------------------------*
FORM GET_VBAK USING I_TD_ALV TYPE TYP_TD_ALV
CHANGING O_TD_VBAK TYPE TYP_TD_VBAK.

DATA:
LTD_ALV_VBELN  TYPE TYP_TD_ALV.

LTD_ALV_VBELN = I_TD_ALV.

DELETE LTD_ALV_VBELN WHERE KDAUF IS INITIAL.

IF LTD_ALV_VBELN IS INITIAL.

RETURN.

ENDIF.

SELECT VBAK~VBELN     "受注伝票番号(Sales Doc.)
VBAK~VKORG     "販売組織 (Sales Org.)
VBAK~VTWEG     "流通チャネル (Channel)
VBAK~SPART     "製品部門 (Devision)
VBAK~VKGRP     "営業グループ (Sales Group)
VBAK~VKBUR     "営業所 (Sales Office)
TVKOT~VTEXT    "販売組織名称 (Name)
INTO TABLE O_TD_VBAK
FROM VBAK
**** START UPD 2015/03/03 ISID11 ****
*   INNER JOIN TVKOT
LEFT JOIN TVKOT
**** END UPD 2015/03/03 ISID11 ****
ON VBAK~VKORG = TVKOT~VKORG
**** START ADD 2015/03/03 ISID11 ****
AND TVKOT~SPRAS = SY-LANGU
**** END ADD 2015/03/03 ISID11 ****
FOR ALL ENTRIES IN LTD_ALV_VBELN
WHERE VBAK~VBELN  = LTD_ALV_VBELN-KDAUF.  "受注伝票番号(Sales Doc.)
**** START DEL 2015/03/03 ISID11 ****
*     AND TVKOT~SPRAS = SY-LANGU.
**** END DEL 2015/03/03 ISID11 ****

* データが存在した場合、「ITAB:販売伝票」をソートし、処理続行
IF SY-SUBRC = 0.

SORT O_TD_VBAK BY VBELN ASCENDING.

ENDIF.

ENDFORM.                    " GET_VBAK
*&---------------------------------------------------------------------*
*&      Form  GET_EKKO
*&---------------------------------------------------------------------*
*       購買組織情報の検索
*----------------------------------------------------------------------*
*      -->I_TD_ALV      ITAB:ALV
*      <--O_TD_EKKO     ITAB:購買伝票
*----------------------------------------------------------------------*
FORM GET_EKKO USING I_TD_ALV TYPE TYP_TD_ALV
CHANGING O_TD_EKKO TYPE TYP_TD_EKKO.

DATA:
LTD_ALV_EBELN  TYPE TYP_TD_ALV.

LTD_ALV_EBELN = I_TD_ALV.

DELETE LTD_ALV_EBELN WHERE EBELN IS INITIAL.

IF LTD_ALV_EBELN IS INITIAL.

RETURN.

ENDIF.

SELECT EKKO~EBELN     "購買伝票番号(Purch.Doc.)
EKKO~EKORG     "購買組織 (Purch Org.)
EKKO~EKGRP     "購買グループ (Purch Grp.)
T024E~EKOTX    "購買組織名称 (Name)
INTO TABLE O_TD_EKKO
FROM EKKO
INNER JOIN T024E
ON EKKO~EKORG = T024E~EKORG
FOR ALL ENTRIES IN LTD_ALV_EBELN
WHERE EKKO~EBELN = LTD_ALV_EBELN-EBELN.  "購買伝票番号(Purch.Doc.)

* データが存在した場合、「ITAB:購買伝票」をソートし、処理続行
IF SY-SUBRC = 0.

SORT O_TD_EKKO BY EBELN ASCENDING.

ENDIF.

ENDFORM.                    " GET_EKKO
*&---------------------------------------------------------------------*
*&      Form  EDIT_ALV
*&---------------------------------------------------------------------*
*       その他データの編集
*----------------------------------------------------------------------*
*      -->I_TD_VBAK  ITAB:販売伝票
*      -->I_TD_EKKO  ITAB:購買伝票
*      <--O_TD_ALV   ITAB:ALV
*----------------------------------------------------------------------*
FORM EDIT_ALV USING I_TD_VBAK TYPE TYP_TD_VBAK
I_TD_EKKO TYPE TYP_TD_EKKO
CHANGING O_TD_ALV TYPE TYP_TD_ALV.

DATA:
LTD_VBAK TYPE TYP_VBAK,
LTD_EKKO TYPE TYP_EKKO.

FIELD-SYMBOLS:
<FS_ALV>   TYPE ZSEGSD0019.

LOOP AT O_TD_ALV ASSIGNING <FS_ALV>.
*   販売組織情報を取得する
IF <FS_ALV>-KDAUF IS NOT INITIAL.
READ TABLE I_TD_VBAK INTO LTD_VBAK
WITH KEY VBELN = <FS_ALV>-KDAUF
BINARY SEARCH.

IF SY-SUBRC = 0.
<FS_ALV>-VKORG  = LTD_VBAK-VKORG. "販売組織 (Sales Org.)
<FS_ALV>-VTWEG  = LTD_VBAK-VTWEG. "流通チャネル (Channel)
<FS_ALV>-SPART  = LTD_VBAK-SPART. "製品部門 (Devision)
<FS_ALV>-VKGRP  = LTD_VBAK-VKGRP. "営業グループ (Sales Group)
<FS_ALV>-VKBUR  = LTD_VBAK-VKBUR. "営業所 (Sales Office)
<FS_ALV>-VTEXT  = LTD_VBAK-VTEXT. "販売組織名称 (Name)
ENDIF.
ENDIF.

*   購買組織情報を取得する
IF <FS_ALV>-EBELN IS NOT INITIAL.

READ TABLE I_TD_EKKO INTO LTD_EKKO
WITH KEY EBELN = <FS_ALV>-EBELN
BINARY SEARCH.

IF SY-SUBRC = 0.
<FS_ALV>-EKORG  = LTD_EKKO-EKORG. "購買組織 (Purch Org.)
<FS_ALV>-EKGRP  = LTD_EKKO-EKGRP. "購買グループ (Purch Grp.)
<FS_ALV>-EKOTX  = LTD_EKKO-EKOTX. "購買組織名称 (Name)
ENDIF.
ENDIF.
ENDLOOP.

ENDFORM.                    " EDIT_ALV
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV
*&---------------------------------------------------------------------*
*       画面出力
*----------------------------------------------------------------------*
*      <--O_TD_ALV   ITAB:ALV
*----------------------------------------------------------------------*
FORM DISPLAY_ALV CHANGING O_TD_ALV TYPE TYP_TD_ALV.

DATA:
LTD_FIELDCAT TYPE LVC_T_FCAT,     "ITAB:FIELDCAT
**** START ADD BY ISID REN 2015/07/03 ****
LTH_PRINT    TYPE LVC_S_PRNT,
**** END ADD BY ISID REN 2015/07/03 ****
LST_LAYOUT   TYPE LVC_S_LAYO.     "ST:LAYOUT

**** START DEL 2015/03/03 ISID11 ****
*  FIELD-SYMBOLS:
*    <LFS_FIELDCAT> TYPE LVC_S_FCAT.
**** END DEL 2015/03/03 ISID11 ****

* FIELDCAT属性の設定
CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
EXPORTING
I_STRUCTURE_NAME       = 'ZSEGSD0019'
CHANGING
CT_FIELDCAT            = LTD_FIELDCAT
EXCEPTIONS
INCONSISTENT_INTERFACE = 1
PROGRAM_ERROR          = 2
OTHERS                 = 3.

IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE CNS_MSG_S NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
DISPLAY LIKE CNS_MSG_E.

LEAVE LIST-PROCESSING.
ENDIF.

* フィールドカタログ編集
PERFORM EDIT_FIELDCAT CHANGING LTD_FIELDCAT.

* レイアウト属性の設定
* ストライプ
LST_LAYOUT-ZEBRA = CNS_FLG_ON.
LST_LAYOUT-BOX_FNAME = 'SEL'.
LST_LAYOUT-SEL_MODE  = 'D'.

* ALV コントロール: 列幅の最適化
LST_LAYOUT-CWIDTH_OPT = CNS_FLG_ON.

**** START ADD BY ISID REN 2015/07/03 ****
* 印刷パラメータ取得
CASE SY-BATCH.
WHEN SPACE.
CLEAR LTH_PRINT.
WHEN ABAP_TRUE.
PERFORM GET_PRINT_PARAMETER
CHANGING LTH_PRINT.
ENDCASE.
**** END ADD BY ISID REN 2015/07/03 ****

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
EXPORTING
I_CALLBACK_PROGRAM       = SY-REPID
I_CALLBACK_PF_STATUS_SET = CNS_PF_STATUS
I_CALLBACK_USER_COMMAND  = CNS_USER_CMD
IS_LAYOUT_LVC            = LST_LAYOUT
IT_FIELDCAT_LVC          = LTD_FIELDCAT
**** START ADD BY ISID REN 2015/07/03 ****
IS_PRINT_LVC             = LTH_PRINT
**** END ADD BY ISID REN 2015/07/03 ****
TABLES
T_OUTTAB                 = O_TD_ALV
EXCEPTIONS
PROGRAM_ERROR            = 1
OTHERS                   = 2.

IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE CNS_MSG_S NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
DISPLAY LIKE CNS_MSG_E.

LEAVE LIST-PROCESSING.
ENDIF.

ENDFORM.                    " DISPLAY_ALV
*&---------------------------------------------------------------------*
*&      Form  EDIT_FIELDCAT
*&---------------------------------------------------------------------*
*       フィールドカタログ編集
*----------------------------------------------------------------------*
*      <--O_TD_FIELDCAT  ITAB:FIELDCAT
*----------------------------------------------------------------------*
FORM EDIT_FIELDCAT CHANGING O_TD_FIELDCAT TYPE LVC_T_FCAT.

FIELD-SYMBOLS:
<LFS_FIELDCAT> TYPE LVC_S_FCAT.

LOOP AT O_TD_FIELDCAT ASSIGNING <LFS_FIELDCAT>.

IF <LFS_FIELDCAT>-FIELDNAME = 'SEL'        "FIELDCAT属性SEL
OR <LFS_FIELDCAT>-FIELDNAME = 'MJAHR_OUTB' "販売の入出庫伝票年
OR <LFS_FIELDCAT>-FIELDNAME = 'WERK_OUTB'  "出荷プラント
OR <LFS_FIELDCAT>-FIELDNAME = 'MJAHR_INB'  "購買の入出庫伝票年
OR <LFS_FIELDCAT>-FIELDNAME = 'WERK_INB'   "入庫プラント
OR <LFS_FIELDCAT>-FIELDNAME = 'ZKBUNCC'.   "処理区分(Type)

*     表示しない項目
<LFS_FIELDCAT>-NO_OUT = 'X'.

ENDIF.

ENDLOOP.

ENDFORM.                    " EDIT_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  SET_STATUS
*&---------------------------------------------------------------------*
*       2000 ALV画面のステータスの設定
*----------------------------------------------------------------------*
FORM SET_STATUS USING UT_EXTAB TYPE SLIS_T_EXTAB.

REFRESH: UT_EXTAB.
SET TITLEBAR 'TTB_2000'.
SET PF-STATUS 'STT_2000' EXCLUDING UT_EXTAB.

ENDFORM.                    " SET_STATUS
*&---------------------------------------------------------------------*
*&      Form  USER_COMMAND
*&---------------------------------------------------------------------*
*       2000 ALV画面の事件
*----------------------------------------------------------------------*
FORM USER_COMMAND USING UCOMM    TYPE SY-UCOMM
SELFIELD TYPE SLIS_SELFIELD.

* ボタンイベント処理
CASE UCOMM.

*   「Re-Excu」ボタン押下時の処理
WHEN CNS_REEXCUTE.

*     選択された明細を再度取込む処理を行う
PERFORM EXCUTE_RECORD.

*   「Delete」ボタン押下時の処理
WHEN CNS_DELETE.

*     「Delete」ボタン押下時には、該当対象データのステータスを
*      「削除」に更新する
PERFORM DELETE_RECORD.

*   「Detail」ボタン押下時の処理
WHEN CNS_DETAIL
*     ダブルクリック
OR CNS_DOUBLE.

*     「Detail」ボタン押下とダブルクリック時には、
*     カーソル位置を判定して以下の処理を行う
PERFORM DETAIL_RECORD USING SELFIELD.

WHEN OTHERS.

ENDCASE.

SELFIELD-REFRESH = CNS_FLG_ON.

ENDFORM.                    " SET_STATUS
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_RECORD
*&---------------------------------------------------------------------*
*       選択された明細を再度取込む処理を行う
*----------------------------------------------------------------------*
FORM EXCUTE_RECORD .

DATA:
LW_SYST_DATE    TYPE SY-DATUM,            "システム日付
LW_SYST_TIME    TYPE SY-UZEIT,            "システム時刻
LTD_ALV_ERROR   TYPE TYP_TD_ERROR, "ITAB:入出庫連携エラーデータ
LTD_ALV_MANU  TYPE TYP_TD_ERROR, "ITAB:入出庫マニュアル処理済データ
LTD_RE_DELIISSUE   TYPE TYP_TD_STOCK,   "ITAB:出庫確認再取込データ
LTD_RE_DELIREVER   TYPE TYP_TD_STOCK,   "ITAB:出庫取消再取込データ
LTD_RE_RECCANCEL   TYPE TYP_TD_STOCK.   "ITAB:入庫取消再取込データ

LW_SYST_DATE = SY-DATUM.                    "システム日付
LW_SYST_TIME = SY-UZEIT.                    "システム時刻

* 初期処理
PERFORM INIT_PROCESS.

* データ抽出編集処理
PERFORM GET_DATA_SELECTED
**** START DEL 2015/03/03 ISID11 ****
*                            USING
*                                  LW_SYST_DATE
*                                  LW_SYST_TIME
**** END DEL 2015/03/03 ISID11 ****
CHANGING LTD_ALV_ERROR
LTD_ALV_MANU
LTD_RE_DELIISSUE
LTD_RE_DELIREVER
LTD_RE_RECCANCEL.

* 入出庫更新処理
PERFORM EDIT_DATA_SELECTED USING LW_SYST_DATE
LW_SYST_TIME
CHANGING LTD_RE_DELIISSUE
LTD_RE_DELIREVER
LTD_RE_RECCANCEL
LTD_ALV_ERROR.

* エラー&マニュアル取消のデータ更新
PERFORM UPDATE_ERROR_MANU
USING LW_SYST_DATE    "システム日付
LW_SYST_TIME    "システム時刻
CHANGING LTD_ALV_ERROR
LTD_ALV_MANU.

* ALV画面を再表示処理
PERFORM DISPLAY_ALV_AGAIN.
**** START DEL 2015/03/03 ISID11 ****
*                            USING LTD_RE_DELIISSUE
*                                  LTD_RE_DELIREVER
*                                  LTD_RE_RECCANCEL
*                                  LTD_ALV_ERROR
*                                  LTD_ALV_MANU.
**** END DEL 2015/03/03 ISID11 ****

ENDFORM.                    " EXCUTE_RECORD
*&---------------------------------------------------------------------*
*&      Form  INIT_PROCESS
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM INIT_PROCESS .

**** START ADD 2015/03/03 ISID11 ****
CLEAR:
ST_COUNT-TOTAL,
ST_COUNT-NORMAL,
ST_COUNT-ERROR,
ST_COUNT-OTHERS.
**** END ADD 2015/03/03 ISID11 ****

* 入力チェック
* 明細1行も選択されてない場合、メッセージを出力し処理を終了する
READ TABLE TD_ALV TRANSPORTING NO FIELDS
WITH KEY SEL = CNS_FLG_ON.

IF SY-SUBRC <> 0.

MESSAGE E028(ZMEGSD01).
*   明細を指定ください

ENDIF.

ENDFORM.                    " INIT_PROCESS
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_SELECTED
*&---------------------------------------------------------------------*
*       データ抽出編集処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE        システム日付
*      -->I_SYST_TIME        システム時刻
*      <--O_TD_ALV_ERROR     ITAB:入出庫連携エラーデータ
*      <--O_TD_ALV_MANU      ITAB:入出庫マニュアル処理済データ
*      <--O_TD_RE_DELIISSUE  ITAB:出庫確認再取込データ
*      <--O_TD_RE_DELIREVER  ITAB:出庫取消再取込データ
*      <--O_TD_RE_RECCANCEL  ITAB:入庫取消再取込データ
*----------------------------------------------------------------------*
FORM GET_DATA_SELECTED
**** START DEL 2015/03/03 ISID11 ****
*         USING I_SYST_DATE     TYPE SY-DATUM
*               I_SYST_TIME     TYPE SY-UZEIT
**** END DEL 2015/03/03 ISID11 ****
CHANGING O_TD_ALV_ERROR    TYPE TYP_TD_ERROR
O_TD_ALV_MANU     TYPE TYP_TD_ERROR
O_TD_RE_DELIISSUE TYPE TYP_TD_STOCK
O_TD_RE_DELIREVER TYPE TYP_TD_STOCK
O_TD_RE_RECCANCEL TYPE TYP_TD_STOCK.


DATA:
LW_COUNT            TYPE I.            "対象外(完了済、削除済)件数

* 再取込対象データの分類処理
PERFORM EDIT_REGET_STATUS CHANGING LW_COUNT
O_TD_RE_DELIISSUE
O_TD_RE_DELIREVER
O_TD_RE_RECCANCEL.

IF O_TD_RE_DELIISSUE IS NOT INITIAL.

*   出庫確認再取込データの情報を追加取得
PERFORM REGET_DELIVERYISSUE
**** START DEL 2015/03/03 ISID11 ****
*                                USING I_SYST_DATE
*                                      I_SYST_TIME
**** END DEL 2015/03/03 ISID11 ****
CHANGING O_TD_RE_DELIISSUE
O_TD_ALV_ERROR.

ENDIF.

IF O_TD_RE_DELIREVER IS NOT INITIAL.

*   出庫取消再取込データの情報を追加取得
PERFORM REGET_DELIVERYREVERSE
**** START DEL 2015/03/03 ISID11 ****
*                                  USING I_SYST_DATE
*                                        I_SYST_TIME
**** END DEL 2015/03/03 ISID11 ****
CHANGING O_TD_RE_DELIREVER
O_TD_ALV_ERROR
O_TD_ALV_MANU.



ENDIF.

IF O_TD_RE_RECCANCEL IS NOT INITIAL.

*   入庫取消再取込データの情報を追加取得
PERFORM REGET_RECEIVINGCANCEL
**** START DEL 2015/03/03 ISID11 ****
*                                  USING I_SYST_DATE
*                                        I_SYST_TIME
**** END DEL 2015/03/03 ISID11 ****
CHANGING O_TD_RE_RECCANCEL
O_TD_ALV_ERROR
O_TD_ALV_MANU.

ENDIF.

ENDFORM.                    " GET_DATA_SELECTED
*&---------------------------------------------------------------------*
*&      Form  EDIT_REGET_STATUS
*&---------------------------------------------------------------------*
*       再取込対象データの分類処理
*----------------------------------------------------------------------*
*      <--O_COUNT            対象外(完了済、削除済)件数
*      <--O_TD_RE_DELIISSUE  ITAB:出庫確認再取込データ
*      <--O_TD_RE_DELIREVER  ITAB:出庫取消再取込データ
*      <--O_TD_RE_RECCANCEL  ITAB:入庫取消再取込データ
*----------------------------------------------------------------------*
FORM EDIT_REGET_STATUS
CHANGING O_COUNT           TYPE I
O_TD_RE_DELIISSUE TYPE TYP_TD_STOCK
O_TD_RE_DELIREVER TYPE TYP_TD_STOCK
O_TD_RE_RECCANCEL TYPE TYP_TD_STOCK.

DATA:
LST_ALV   TYPE ZSEGSD0019.

LOOP AT TD_ALV INTO LST_ALV WHERE SEL = CNS_FLG_ON.

CASE LST_ALV-STATUS.

WHEN 'E'.    "エラー

CASE LST_ALV-ZKBUNCC.

WHEN CNS_ZKBUNCC_1.   "出庫確認連携データ

*           処理ステータス(Status)が固定値「E」(エラー) かつ
*           処理区分(Type)が固定値「1」(出庫確認)の場合
PERFORM CONVERT_ALV_INNER USING LST_ALV
CHANGING O_TD_RE_DELIISSUE.

WHEN CNS_ZKBUNCC_2.   "出庫取消連携データ

*           処理ステータス(Status)が固定値「E」(エラー) かつ
*           処理区分(Type)が固定値「2」(出庫取消)の場合
PERFORM CONVERT_ALV_INNER USING LST_ALV
CHANGING O_TD_RE_DELIREVER.

WHEN CNS_ZKBUNCC_3.   "入庫取消連携データ

*           処理ステータス(Status)が固定値「E」(エラー) かつ
*           処理区分(Type)が固定値「3」(入庫取消)の場合
PERFORM CONVERT_ALV_INNER USING LST_ALV
CHANGING O_TD_RE_RECCANCEL.

WHEN OTHERS.

ENDCASE.

WHEN 'C'     "完了
OR 'M'     "マニュアル取消
OR 'D'.    "削除

*       再取込対象外にし、「対象外(完了済、削除済)件数」
*       にカウントアップにする
O_COUNT = O_COUNT + 1.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-OTHERS = ST_COUNT-OTHERS + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

WHEN OTHERS.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

ENDCASE.

ENDLOOP.

ENDFORM.                    " EDIT_REGET_STATUS
*&---------------------------------------------------------------------*
*&      Form  REGET_DELIVERYISSUE
*&---------------------------------------------------------------------*
*       出庫確認再取込データの情報を追加取得
*----------------------------------------------------------------------*
*      -->I_SYST_DATE         システム日付
*      -->I_SYST_TIME         システム時刻
*      <--O_TD_RE_DELIISSUE   ITAB:伝票セグメント
*      <--O_TD_ALV_ERROR      ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM REGET_DELIVERYISSUE
**** START DEL 2015/03/03 ISID11 ****
*                         USING I_SYST_DATE     TYPE SY-DATUM
*                               I_SYST_TIME     TYPE SY-UZEIT
**** END DEL 2015/03/03 ISID11 ****
CHANGING O_TD_RE_DELIISSUE TYPE TYP_TD_STOCK
O_TD_ALV_ERROR    TYPE TYP_TD_ERROR.

DATA:
**** START ADD 2015/03/03 ISID11 ****
LTD_BUKRS_FLG   TYPE TYP_TD_BUKRS_FLG,     "ITAB:明細基準
LTD_ZTEGSDT001  TYPE TYP_TD_ZTEGSDT001,    "ITAB:TradeCommon
LTD_ZTEGSDT208  TYPE TYP_TD_ZTEGSDT208,    "ITAB:洋上保管場所
**** END ADD 2015/03/03 ISID11 ****
LTD_LIPS        TYPE TYP_TD_LIPS,          "ITAB:販売出荷
LTD_ZTEGSDT203  TYPE TYP_TD_ZTEGSDT203,    "ITAB:発注情報
LTD_EKPO        TYPE TYP_TD_EKPO,          "ITAB:購買伝票明細
**** START DEL 2015/03/03 ISID11 ****
*    LTD_LAND1       TYPE TYP_TD_LAND1,         "ITAB:販売管理伝票
*    LTD_T001W       TYPE TYP_TD_T001W,         "ITAB:プラント/支店
*    LTD_ZTEGSDT207  TYPE TYP_TD_ZTEGSDT207,    "ITAB:国コード関連マスタ
**** END DEL 2015/03/03 ISID11 ****
LTD_RE_DELIISSUE TYPE TYP_TD_STOCK.

**** START ADD 2015/03/03 ISID11 ****
* 本社及び明細分割情報を取得する
PERFORM GET_SINGLE_FLG CHANGING LTD_BUKRS_FLG.
**** END ADD 2015/03/03 ISID11 ****

* 出庫確認の入出庫伝票の明細情報検索
PERFORM REGET_MSEG USING O_TD_RE_DELIISSUE
CHANGING LTD_RE_DELIISSUE.

* 出荷伝票により受注情報検索
PERFORM GET_LIPS USING LTD_RE_DELIISSUE      "ITAB:伝票セグメント
CHANGING LTD_LIPS.             "ITAB:販売出荷

* 受発注連携テーブルから発注情報検索
PERFORM GET_ZTEGSDT203 USING LTD_LIPS        "ITAB:販売出荷
CHANGING LTD_ZTEGSDT203. "ITAB:発注情報

* 発注明細から入庫プラントと保管場所の情報を取得する
PERFORM GET_EKPO USING LTD_ZTEGSDT203        "ITAB:発注情報
CHANGING LTD_EKPO.             "ITAB:購買伝票明細

**** START ADD 2015/03/03 ISID11 ****
* TradeCommonの検索
PERFORM GET_ZTEGSDT001 USING O_TD_RE_DELIISSUE "ITAB:伝票セグメント
CHANGING LTD_ZTEGSDT001. "ITAB:TradeCommon

* Ocean Store Location Masterの検索
PERFORM GET_ZTEGSDT208 USING LTD_EKPO        "ITAB:購買伝票明細
CHANGING LTD_ZTEGSDT208. "ITAB:洋上保管場所
**** END ADD 2015/03/03 ISID11 ****

**** START DEL 2015/03/03 ISID11 ****
** 出荷先の国コード検索
** 国コードにより在庫タイプを決定
*  PERFORM GET_LAND1 USING LTD_LIPS             "ITAB:販売出荷
*                 CHANGING LTD_LAND1.           "ITAB:販売管理伝票
*
** 販売側出荷プラントの国コード検索
*  PERFORM GET_T001W USING LTD_RE_DELIISSUE     "ITAB:伝票セグメント
*                 CHANGING LTD_T001W.           "ITAB:プラント/支店
*
** 国コード関連マスタの検索
*  PERFORM GET_ZTEGSDT207 USING LTD_T001W       "ITAB:プラント/支店
*                      CHANGING LTD_ZTEGSDT207. "ITAB:国コード関連マスタ
**** END DEL 2015/03/03 ISID11 ****

* その他データの編集
PERFORM EDIT_DELIVERYISSUE_REGET USING LTD_RE_DELIISSUE
LTD_LIPS
LTD_ZTEGSDT203
LTD_EKPO
**** START UPD 2015/03/03 ISID11 ****
*                                         LTD_LAND1
*                                         LTD_T001W
*                                         LTD_ZTEGSDT207
*                                         I_SYST_DATE
*                                         I_SYST_TIME
LTD_ZTEGSDT001
LTD_ZTEGSDT208
LTD_BUKRS_FLG
**** END UPD 2015/03/03 ISID11 ****
CHANGING O_TD_RE_DELIISSUE
O_TD_ALV_ERROR.

ENDFORM.                    " REGET_DELIVERYISSUE
*&---------------------------------------------------------------------*
*&      Form  REGET_MSEG
*&---------------------------------------------------------------------*
*       出庫確認の入出庫伝票の明細情報検索
*----------------------------------------------------------------------*
*      -->I_TD_ALV_DELIISSUE  ITAB:出庫確認再取込データ
*      <--O_TD_RE_DELIISSUE   ITAB:伝票セグメント
*----------------------------------------------------------------------*
FORM REGET_MSEG USING I_TD_RE_DELIISSUE TYPE TYP_TD_STOCK
CHANGING O_TD_RE_DELIISSUE TYPE TYP_TD_STOCK.

DATA:
LTD_DELIISSUE TYPE TYP_TD_STOCK.

LTD_DELIISSUE = I_TD_RE_DELIISSUE.
SORT LTD_DELIISSUE BY MBLNR ASCENDING
MJAHR ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_DELIISSUE
COMPARING MBLNR
MJAHR.

SELECT MBLNR             "入出庫伝票番号(Outbound)
MJAHR             "入出庫伝票年(Outbound)
ZEILE             "入出庫伝票の明細(Outbound)
VBELN_IM          "出荷伝票
VBELP_IM          "出荷明細
BUDAT_MKPF        "伝票の転記日付
**** START UPD BY ISID REN 2015/08/14 ****
*         MATNR             "品目コード
*         MENGE             "入出庫数量
*         MEINS             "基本数量単位
MATNR AS MATNR_SD "販売品目コード
ERFMG                    "入出庫数量
ERFME                    "販売数量単位
BUKRS               "会社コード
CHARG                   "ロット番号
**** END UPD BY ISID REN 2015/08/14 ****
INTO CORRESPONDING FIELDS OF TABLE O_TD_RE_DELIISSUE
FROM MSEG
FOR ALL ENTRIES IN LTD_DELIISSUE
WHERE MBLNR = LTD_DELIISSUE-MBLNR  "入出庫伝票番号(Outbound)
AND MJAHR = LTD_DELIISSUE-MJAHR. "入出庫伝票年(Outbound)

IF SY-SUBRC = 0.

SORT O_TD_RE_DELIISSUE BY MBLNR ASCENDING
MJAHR ASCENDING
ZEILE ASCENDING.

ENDIF.

ENDFORM.                    " REGET_MSEG
*&---------------------------------------------------------------------*
*&      Form  GET_STATUS_UPDATE
*&---------------------------------------------------------------------*
*       更新区分が固定値「U」(更新)の場合、存在レコード取得
*----------------------------------------------------------------------*
*      -->I_TD_LOCK      ロック
*      <--O_TD_EXIST     新規登録
*      <--O_SUBRC        SUBRC
*----------------------------------------------------------------------*
FORM GET_STATUS_UPDATE USING
**** START UPD 2015/03/03 ISID11 ****
*                             I_TD_LOCK  TYPE TYP_TD_STOCK
I_ST_DELIISSUE TYPE TYP_STOCK
I_TD_EXIST TYPE TYP_TD_ZTEGSDT206_INSERT
**** END UPD 2015/03/03 ISID11 ****
CHANGING O_TD_EXIST TYPE TYP_TD_ZTEGSDT206_INSERT
O_SUBRC    TYPE SY-SUBRC.

**** START UPD 2015/03/03 ISID11 ****
*  DATA:
*    LTD_LOCK TYPE TYP_TD_STOCK.
*
*  LTD_LOCK = I_TD_LOCK.
*
*  DELETE LTD_LOCK WHERE STATUS <> 'U'.
*
*  IF LTD_LOCK IS INITIAL.
*
*    RETURN.
*
*  ENDIF.
*
*  SORT LTD_LOCK BY VGBEL ASCENDING
*                   MBLNR ASCENDING
*                   MJAHR ASCENDING.
*
*  DELETE ADJACENT DUPLICATES FROM LTD_LOCK
*                        COMPARING VGBEL
*                                  MBLNR
*                                  MJAHR.
*  IF I_ST_DELIISSUE-STATUS <> 'U'.
*
*    RETURN.
*
*  ENDIF.
*
*  SELECT *           "全てレコード
*    FROM ZTEGSDT206
*    INTO TABLE O_TD_EXIST
*     FOR ALL ENTRIES IN LTD_LOCK
*   WHERE KDAUF        = LTD_LOCK-VGBEL  "受注伝票番号
*     AND MBLNR_OUTB   = LTD_LOCK-MBLNR  "入出庫伝票番号(Outbound)
*     AND MJAHR_OUTB   = LTD_LOCK-MJAHR. "入出庫伝票年(Outbound)
*
*  IF SY-SUBRC = 0.

O_TD_EXIST = I_TD_EXIST.

DELETE O_TD_EXIST
WHERE KDAUF        <> I_ST_DELIISSUE-VGBEL  "受注伝票番号
OR MBLNR_OUTB   <> I_ST_DELIISSUE-MBLNR  "入出庫伝票番号(Outbound)
OR MJAHR_OUTB   <> I_ST_DELIISSUE-MJAHR  "入出庫伝票年(Outbound)
OR EBELN        <> I_ST_DELIISSUE-EBELN  "購買伝票番号
OR MBLNR_INB    <> SPACE  "取消元の入出庫伝票番号(Inbound)
OR MJAHR_INB    <> SPACE. "取消元の入出庫伝票年(Inbound)
IF O_TD_EXIST IS NOT INITIAL.
**** END UPD 2015/03/03 ISID11 ****
*   テーブルから削除し
DELETE ZTEGSDT206 FROM TABLE O_TD_EXIST.

*   データ更新に失敗した場合、ロックを解除し、メッセージを出力し、
*   処理を終了する
IF SY-SUBRC <> 0.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

**** START DEL 2015/03/03 ISID11 ****
**     ロックを解除し
*      PERFORM UNLOCK_ZTEGSDT206 USING
***** START UPD 2015/03/03 ISID11 ****
**                                      I_TD_LOCK.
*                                      I_ST_DELIISSUE.
***** END UPD 2015/03/03 ISID11 ****
**** END DEL 2015/03/03 ISID11 ****

MESSAGE S024(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*     データ更新に失敗しました(TBL = &1)

O_SUBRC = 4.

ENDIF.

ENDIF.

**** START ADD 2015/03/03 ISID11 ****
SORT O_TD_EXIST BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING
EBELN      ASCENDING
MBLNR_INB  ASCENDING
MJAHR_INB  ASCENDING.
**** END ADD 2015/03/03 ISID11 ****

ENDFORM.                    " GET_STATUS_UPDATE
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGSDT206_STATUS
*&---------------------------------------------------------------------*
*       更新区分が固定値「U」(更新)の場合、更新処理を行う
*----------------------------------------------------------------------*
*      -->I_ST_STOCK    ロック
*      -->I_TD_EXIST    存在レコード
*      -->I_SYST_DATE   システム日付
*      -->I_SYST_TIME   システム時刻
*      <--O_TD_UPDATE   更新対象
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGSDT206_STATUS
USING I_ST_STOCK  TYPE TYP_STOCK
I_TD_EXIST  TYPE TYP_TD_ZTEGSDT206_INSERT
I_SYST_DATE TYPE SY-DATUM
I_SYST_TIME TYPE SY-UZEIT
CHANGING O_TD_UPDATE TYPE TYP_TD_ZTEGSDT206_INSERT.

DATA:
LST_ZTEGSDT206  TYPE ZTEGSDT206.

**** START UPD 2015/03/03 ISID11 ****
*  LOOP AT I_TD_EXIST INTO LST_ZTEGSDT206.
*     WHERE KDAUF        = I_ST_STOCK-VGBEL  "受注伝票番号
*       AND MBLNR_OUTB   = I_ST_STOCK-MBLNR  "入出庫伝票番号(Outbound)
*       AND MJAHR_OUTB   = I_ST_STOCK-MJAHR. "入出庫伝票年(Outbound)
CLEAR:
LST_ZTEGSDT206.

READ TABLE I_TD_EXIST INTO LST_ZTEGSDT206
WITH KEY KDAUF      = I_ST_STOCK-VGBEL  "受注伝票番号
MBLNR_OUTB = I_ST_STOCK-MBLNR  "入出庫伝票番号(Outbound)
MJAHR_OUTB = I_ST_STOCK-MJAHR  "入出庫伝票年(Outbound)
EBELN      = I_ST_STOCK-EBELN  "購買伝票番号
MBLNR_INB  = SPACE             "入出庫伝票番号(In)
MJAHR_INB  = '0000'            "入出庫伝票番号(In)
BINARY SEARCH.
IF SY-SUBRC = 0.
**** END UPD 2015/03/03 ISID11 ****

*  LST_ZTEGSDT206-Z_CRE_YMD    = I_ST_STOCK-Z_CRE_YMD.    "登録年月日
*  LST_ZTEGSDT206-Z_CRE_HMS    = I_ST_STOCK-Z_CRE_HMS.    "登録時分秒
*  LST_ZTEGSDT206-Z_CRE_USERID = I_ST_STOCK-Z_CRE_USERID. "登録ユーザ

LST_ZTEGSDT206-EBELN        = I_ST_STOCK-EBELN.     "購買伝票番号
LST_ZTEGSDT206-MBLNR_INB    = I_ST_STOCK-MBLNR_INB.
"入出庫伝票番号(In)
LST_ZTEGSDT206-MJAHR_INB    = I_ST_STOCK-MJAHR_INB.
"入出庫伝票番号(In)
LST_ZTEGSDT206-WERK_INB     = I_ST_STOCK-WERK_INB.  "入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = I_ST_STOCK-WERK_OUTB. "出荷プラント
LST_ZTEGSDT206-VBELN        = I_ST_STOCK-VBELN_IM.  "出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = I_ST_STOCK-ZKBUNCC.   "処理区分
LST_ZTEGSDT206-STATUS       = 'C'.
LST_ZTEGSDT206-MSGID        = SPACE.
LST_ZTEGSDT206-MSGNO        = SPACE.
LST_ZTEGSDT206-MSGTX        = SPACE.
LST_ZTEGSDT206-Z_MOD_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_MOD_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_MOD_USERID = SY-UNAME.

APPEND LST_ZTEGSDT206 TO O_TD_UPDATE.

**** START UPD 2015/03/03 ISID11 ****
*    CLEAR:
*      LST_ZTEGSDT206.
*
*  ENDLOOP.
ENDIF.
**** END UPD 2015/03/03 ISID11 ****

ENDFORM.                    " UPDATE_ZTEGSDT206_STATUS
*&---------------------------------------------------------------------*
*&      Form  GET_STATUS_RECCANCEL
*&---------------------------------------------------------------------*
*       更新区分が固定値「U」(更新)の場合、存在レコード取得
*----------------------------------------------------------------------*
*      -->I_TD_LOCK      ロック
*      <--O_TD_EXIST     新規登録
*      <--O_SUBRC        SUBRC
*----------------------------------------------------------------------*
FORM GET_STATUS_RECCANCEL
USING
**** START UPD 2015/03/03 ISID11 ****
*             I_TD_LOCK  TYPE TYP_TD_STOCK
I_ST_RECCANCEL TYPE TYP_STOCK
I_TD_EXIST TYPE TYP_TD_ZTEGSDT206_INSERT
**** END UPD 2015/03/03 ISID11 ****
CHANGING O_TD_EXIST TYPE TYP_TD_ZTEGSDT206_INSERT
O_SUBRC    TYPE SY-SUBRC.

**** START UPD 2015/03/03 ISID11 ****
*  DATA:
*    LTD_LOCK TYPE TYP_TD_STOCK.
*
*  LTD_LOCK = I_TD_LOCK.
*
*  DELETE LTD_LOCK WHERE STATUS <> 'U'.
*
*  IF LTD_LOCK IS INITIAL.
*
*    RETURN.
*
*  ENDIF.
*
*  SORT LTD_LOCK BY EBELN     ASCENDING
*                   MBLNR_INB ASCENDING
*                   MJAHR_INB ASCENDING.
*
*  DELETE ADJACENT DUPLICATES FROM LTD_LOCK
*                        COMPARING EBELN
*                                  MBLNR_INB
*                                  MJAHR_INB.
*
*  SELECT *           "全てレコード
*    FROM ZTEGSDT206
*    INTO TABLE O_TD_EXIST
*     FOR ALL ENTRIES IN LTD_LOCK
*   WHERE EBELN       = LTD_LOCK-EBELN      "受注伝票番号
*     AND MBLNR_INB   = LTD_LOCK-MBLNR_INB  "入出庫伝票番号(Outbound)
*     AND MJAHR_INB   = LTD_LOCK-MJAHR_INB. "入出庫伝票年(Outbound)
*
*  IF SY-SUBRC = 0.
O_TD_EXIST = I_TD_EXIST.

DELETE O_TD_EXIST
WHERE KDAUF      <> I_ST_RECCANCEL-VGBEL  "受注伝票番号
OR MBLNR_OUTB <> SPACE   "入出庫伝票番号(Outbound)
OR MJAHR_OUTB <> '0000'  "入出庫伝票年(Outbound)
OR EBELN      <> I_ST_RECCANCEL-EBELN      "受注伝票番号
OR MBLNR_INB <> I_ST_RECCANCEL-MBLNR  "入出庫伝票番号(Outbound)
OR MJAHR_INB <> I_ST_RECCANCEL-MJAHR. "入出庫伝票年(Outbound)

IF O_TD_EXIST IS NOT INITIAL.
**** END UPD 2015/03/03 ISID11 ****

*   テーブルから削除し
DELETE ZTEGSDT206 FROM TABLE O_TD_EXIST.

*   データ更新に失敗した場合、ロックを解除し、メッセージを出力し、
*   処理を終了する
IF SY-SUBRC <> 0.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
**** START DEL 2015/03/03 ISID11 ****
**     ロックを解除し
*      PERFORM UNLOCK_ZTEGSDT206 USING
***** START UPD 2015/03/03 ISID11 ****
**                                      I_TD_LOCK.
*                                      I_ST_RECCANCEL.
***** END UPD 2015/03/03 ISID11 ****
**** END DEL 2015/03/03 ISID11 ****
MESSAGE S024(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*     データ更新に失敗しました(TBL = &1)

O_SUBRC = 4.

ENDIF.

ENDIF.

**** START ADD 2015/03/03 ISID11 ****
SORT O_TD_EXIST BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING
EBELN      ASCENDING
MBLNR_INB  ASCENDING
MJAHR_INB  ASCENDING.
**** END ADD 2015/03/03 ISID11 ****

ENDFORM.                    " GET_STATUS_RECCANCEL
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGSDT206_STATUSREC
*&---------------------------------------------------------------------*
*       更新区分が固定値「U」(更新)の場合、更新処理を行う
*----------------------------------------------------------------------*
*      -->I_ST_STOCK    ロック
*      -->I_TD_EXIST    存在レコード
*      -->I_SYST_DATE   システム日付
*      -->I_SYST_TIME   システム時刻
*      <--O_TD_UPDATE   更新対象
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGSDT206_STATUSREC
USING I_ST_STOCK  TYPE TYP_STOCK
I_TD_EXIST  TYPE TYP_TD_ZTEGSDT206_INSERT
I_SYST_DATE TYPE SY-DATUM
I_SYST_TIME TYPE SY-UZEIT
CHANGING O_TD_UPDATE TYPE TYP_TD_ZTEGSDT206_INSERT.

DATA:
LST_ZTEGSDT206  TYPE ZTEGSDT206.

**** START UPD 2015/03/03 ISID11 ****
*  LOOP AT I_TD_EXIST INTO LST_ZTEGSDT206.
*    WHERE EBELN        = I_ST_STOCK-EBELN      "受注伝票番号
*      AND MBLNR_INB    = I_ST_STOCK-MBLNR_INB  "入出庫伝票番号(In)
*      AND MJAHR_INB    = I_ST_STOCK-MJAHR_INB. "入出庫伝票年(In)
READ TABLE I_TD_EXIST INTO LST_ZTEGSDT206
WITH KEY KDAUF      = I_ST_STOCK-VGBEL  "受注伝票番号
MBLNR_OUTB = SPACE  "入出庫伝票番号(Outbound)
MJAHR_OUTB = '0000' "入出庫伝票年(Outbound)
EBELN      = I_ST_STOCK-EBELN      "受注伝票番号
MBLNR_INB  = I_ST_STOCK-MBLNR  "入出庫伝票番号(Outbound)
MJAHR_INB  = I_ST_STOCK-MJAHR  "入出庫伝票年(Outbound)
BINARY SEARCH.

IF SY-SUBRC = 0.
**** END UPD 2015/03/03 ISID11 ****
*  LST_ZTEGSDT206-Z_CRE_YMD    = I_ST_STOCK-Z_CRE_YMD.    "登録年月日
*  LST_ZTEGSDT206-Z_CRE_HMS    = I_ST_STOCK-Z_CRE_HMS.    "登録時分秒
*  LST_ZTEGSDT206-Z_CRE_USERID = I_ST_STOCK-Z_CRE_USERID. "登録ユーザ

LST_ZTEGSDT206-KDAUF        = I_ST_STOCK-VGBEL.     "購買伝票番号
LST_ZTEGSDT206-MBLNR_OUTB   = I_ST_STOCK-MBLNR_INB.
"入出庫伝票番号(Out)
LST_ZTEGSDT206-MJAHR_OUTB   = I_ST_STOCK-MJAHR_INB.
"入出庫伝票年(Out)
LST_ZTEGSDT206-WERK_INB     = I_ST_STOCK-WERK_INB.  "入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = I_ST_STOCK-WERK_OUTB. "出荷プラント
LST_ZTEGSDT206-VBELN        = I_ST_STOCK-VBELN_IM.  "出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = I_ST_STOCK-ZKBUNCC.   "処理区分
LST_ZTEGSDT206-STATUS       = 'C'.
LST_ZTEGSDT206-MSGID        = SPACE.
LST_ZTEGSDT206-MSGNO        = SPACE.
LST_ZTEGSDT206-MSGTX        = SPACE.
LST_ZTEGSDT206-Z_MOD_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_MOD_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_MOD_USERID = SY-UNAME.

APPEND LST_ZTEGSDT206 TO O_TD_UPDATE.

**** START UPD 2015/03/03 ISID11 ****
*    CLEAR:
*      LST_ZTEGSDT206.
*
*  ENDLOOP.
ENDIF.
**** END UPD 2015/03/03 ISID11 ****

ENDFORM.                    " UPDATE_ZTEGSDT206_STATUSREC
*&---------------------------------------------------------------------*
*&      Form  EDIT_DELIVERYISSUE_REGET
*&---------------------------------------------------------------------*
*       その他データの編集
*----------------------------------------------------------------------*
*      -->I_RE_DELIISSUE      ITAB:出庫確認再取込データ
*      -->I_TD_LIPS           ITAB:販売出荷
*      -->I_TD_ZTEGSDT203     ITAB:発注情報
*      -->I_TD_EKPO           ITAB:購買伝票明細
*      -->I_TD_LAND1          ITAB:販売管理伝票
*      -->I_TD_T001W          ITAB:プラント/支店
*      -->I_TD_ZTEGSDT207     ITAB:国コード関連マスタ
*      -->I_TD_ZTEGSDT001     ITAB:TradeCommon
*      -->I_TD_ZTEGSDT208     ITAB:洋上保管場所
*      -->I_TD_ZTEGSDT207     ITAB:CountryCodeRelationshipMaster
*      -->I_SYST_DATE         システム日付
*      -->I_SYST_TIME         システム時刻
*      <--O_TD_RE_DELIISSUE   ITAB:伝票セグメント
*      <--O_TD_ALV_ERROR      ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM EDIT_DELIVERYISSUE_REGET
USING I_RE_DELIISSUE     TYPE TYP_TD_STOCK
I_TD_LIPS          TYPE TYP_TD_LIPS
I_TD_ZTEGSDT203    TYPE TYP_TD_ZTEGSDT203
I_TD_EKPO          TYPE TYP_TD_EKPO
**** START UPD 2015/03/03 ISID11 ****
*                        I_TD_LAND1         TYPE TYP_TD_LAND1
*                        I_TD_T001W         TYPE TYP_TD_T001W
*                        I_TD_ZTEGSDT207    TYPE TYP_TD_ZTEGSDT207
*                        I_SYST_DATE        TYPE SY-DATUM
*                        I_SYST_TIME        TYPE SY-UZEIT
I_TD_ZTEGSDT001 TYPE TYP_TD_ZTEGSDT001
I_TD_ZTEGSDT208 TYPE TYP_TD_ZTEGSDT208
I_TD_BUKRS_FLG  TYPE TYP_TD_BUKRS_FLG
**** END UPD 2015/03/03 ISID11 ****
CHANGING O_TD_RE_DELIISSUE  TYPE TYP_TD_STOCK
O_TD_ALV_ERROR     TYPE TYP_TD_ERROR.

DATA:
LST_STOCK       TYPE TYP_STOCK,
LST_LIPS        TYPE TYP_LIPS,
LST_ZTEGSDT203  TYPE TYP_ZTEGSDT203,

**** START DEL BY ISID REN 2015/07/03 ****
*    LST_EKPO        TYPE TYP_EKPO,
**** END DEL BY ISID REN 2015/07/03 ****

**** START UPD 2015/03/03 ISID11 ****
*    LW_VBELN_LAND1  TYPE KNA1-LAND1,          "出荷先の国コード
*    LW_WERKS_LAND1  TYPE T001W-LAND1,         "出荷プラントの国コード
*    LST_LAND1       TYPE TYP_LAND1,
*    LST_T001W       TYPE TYP_T001W,
*    LST_ZTEGSDT207  TYPE TYP_ZTEGSDT207,

**** START DEL BY ISID REN 2015/07/03 ****
*    LST_ZTEGSDT001 TYPE TYP_ZTEGSDT001,
*    LST_ZTEGSDT208 TYPE TYP_ZTEGSDT208,
*    LST_BUKRS_FLG  TYPE TYP_BUKRS_FLG,
**** END DEL BY ISID REN 2015/07/03 ****

**** START ADD 2015/03/30 ISID11 ****
LST_BUKRS_OUT_FLG  TYPE TYP_BUKRS_FLG,
**** END ADD 2015/03/30 ISID11 ****

**** START DEL BY ISID REN 2015/07/03 ****
*    LW_SUBRC       TYPE SY-SUBRC,
*    LTD_LINES      TYPE STANDARD TABLE OF TLINE,
*    LST_LINES      TYPE TLINE,
*    LW_NAME        TYPE THEAD-TDNAME,
**** END DEL BY ISID REN 2015/07/03 ****

**** END UPD 2015/03/03 ISID11 ****
**** START ADD 2015/03/30 ISID11 ****
LTD_DELIISSUE  TYPE TYP_TD_STOCK,
**** END ADD 2015/03/30 ISID11 ****
**** START ADD BY ISID REN 2015/07/03 ****
LTD_RDD          TYPE TYP_TD_STOCK, "内循環テーブル
LTD_RE_DELIISSUE TYPE TYP_TD_STOCK, "結果テーブル
LST_DELIISSUE    TYPE TYP_STOCK,
LW_ERR_FLAG      TYPE FLAG,
**** END ADD BY ISID REN 2015/07/03 ****
LW_TABIX        TYPE SY-TABIX.

**** START DEL BY ISID REN 2015/07/03 ****
*    LW_MSGTX        TYPE ZTEGSDT206-MSGTX.
**** END DEL BY ISID REN 2015/07/03 ****

FIELD-SYMBOLS:
<FS_DELIISSUE>  TYPE TYP_STOCK.

**** START ADD 2015/03/30 ISID11 ****
LTD_DELIISSUE = I_RE_DELIISSUE.

LOOP AT LTD_DELIISSUE ASSIGNING <FS_DELIISSUE>.

CLEAR:
LST_LIPS.

READ TABLE I_TD_LIPS INTO LST_LIPS
WITH KEY VBELN = <FS_DELIISSUE>-VBELN_IM  "出荷伝票
POSNR = <FS_DELIISSUE>-VBELP_IM  "出荷明細
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_DELIISSUE>-VGBEL = LST_LIPS-VGBEL.          "受注伝票番号
<FS_DELIISSUE>-VGPOS = LST_LIPS-VGPOS.          "受注明細番号

ENDIF.

ENDLOOP.

SORT LTD_DELIISSUE BY MBLNR    ASCENDING
MJAHR    ASCENDING
VBELN_IM ASCENDING
VGBEL    ASCENDING.
**** END ADD 2015/03/30 ISID11 ****

LOOP AT O_TD_RE_DELIISSUE ASSIGNING <FS_DELIISSUE>.

LW_TABIX = SY-TABIX.

**** START ADD 2015/03/30 ISID11 ****
CLEAR:
**** START ADD BY ISID REN 2015/07/03 ****
LTD_RDD,    "内循環テーブル
LW_ERR_FLAG,
**** END ADD BY ISID REN 2015/07/03 ****
LST_STOCK.

**** START ADD BY ISID REN 2015/07/28 ****
* 受発注連携テーブルから発注情報を取得
CLEAR LST_ZTEGSDT203.
READ TABLE I_TD_ZTEGSDT203 INTO LST_ZTEGSDT203
WITH KEY VBELN = <FS_DELIISSUE>-VGBEL   "受注伝票番号
BINARY SEARCH.

* 本社フラグと単一明細フラグを取得する
CLEAR LST_BUKRS_OUT_FLG.
READ TABLE I_TD_BUKRS_FLG
INTO LST_BUKRS_OUT_FLG
WITH KEY BUKRS = LST_ZTEGSDT203-BUKRS
BINARY SEARCH.

*   単一明細の場合
IF LST_BUKRS_OUT_FLG-ZFLGINBSINGLE = 'X'.
**** END ADD BY ISID REN 2015/07/28 ****

**** START UPD BY ISID REN 2015/07/03 ****
*    READ TABLE LTD_DELIISSUE
LOOP AT LTD_DELIISSUE
**** END ADD BY ISID REN 2015/07/03 ****
INTO LST_STOCK
**** START UPD BY ISID REN 2015/07/03 ****
*      WITH KEY MBLNR    = <FS_DELIISSUE>-MBLNR
*               MJAHR    = <FS_DELIISSUE>-MJAHR
*               VBELN_IM = <FS_DELIISSUE>-VBELN_IM
*               VGBEL    = <FS_DELIISSUE>-VGBEL
*               BINARY SEARCH.
*    IF SY-SUBRC = 0.
*      <FS_DELIISSUE>-VBELN_IM   = LST_STOCK-VBELN_IM.   "出荷伝票
*      <FS_DELIISSUE>-VBELP_IM   = LST_STOCK-VBELP_IM.   "出荷明細
*      <FS_DELIISSUE>-BUDAT_MKPF = LST_STOCK-BUDAT_MKPF. "伝票の転記日付
*      <FS_DELIISSUE>-MATNR      = LST_STOCK-MATNR.      "品目コード
*      <FS_DELIISSUE>-MENGE      = LST_STOCK-MENGE.      "入出庫数量
*      <FS_DELIISSUE>-MEINS      = LST_STOCK-MEINS.      "基本数量単位
*      <FS_DELIISSUE>-VGBEL = LST_STOCK-VGBEL.           "受注伝票番号
*      <FS_DELIISSUE>-VGPOS = LST_STOCK-VGPOS.           "受注明細番号
*    ENDIF.
WHERE MBLNR    = <FS_DELIISSUE>-MBLNR "入出庫伝票番号(Outbound)
AND MJAHR    = <FS_DELIISSUE>-MJAHR
AND VBELN_IM = <FS_DELIISSUE>-VBELN_IM "出荷伝票
AND VGBEL    = <FS_DELIISSUE>-VGBEL.   "受注伝票番号

LST_DELIISSUE = <FS_DELIISSUE>.
LST_DELIISSUE-VBELN_IM   = LST_STOCK-VBELN_IM.   "出荷伝票
LST_DELIISSUE-VBELP_IM   = LST_STOCK-VBELP_IM.   "出荷明細
LST_DELIISSUE-BUDAT_MKPF = LST_STOCK-BUDAT_MKPF. "伝票の転記日付
**** START UPD BY ISID REN 2015/08/14 ****
*        LST_DELIISSUE-MATNR      = LST_STOCK-MATNR.      "品目コード
*        LST_DELIISSUE-MENGE      = LST_STOCK-MENGE.      "入出庫数量
*        LST_DELIISSUE-MEINS      = LST_STOCK-MEINS.      "基本数量単位
LST_DELIISSUE-ERFMG      = LST_STOCK-ERFMG.      "入出庫数量
LST_DELIISSUE-ERFME      = LST_STOCK-ERFME.      "販売数量単位
LST_DELIISSUE-CHARG      = LST_STOCK-CHARG.     "ロット番号
LST_DELIISSUE-MATNR_SD      = LST_STOCK-MATNR_SD.      "販売品目
**** END UPD BY ISID REN 2015/08/14 ****
LST_DELIISSUE-VGBEL      = LST_STOCK-VGBEL.      "受注伝票番号
LST_DELIISSUE-VGPOS      = LST_STOCK-VGPOS.      "受注明細番号

*     チェック処理
PERFORM    CHK_DELIISSUE
USING I_RE_DELIISSUE    "出庫確認再取込データ
I_TD_LIPS         "販売出荷
I_TD_ZTEGSDT203   "発注情報
I_TD_EKPO         "購買伝票明細
I_TD_BUKRS_FLG    "会社フラグ
I_TD_ZTEGSDT001   "TradeCommon
I_TD_ZTEGSDT208   "洋上保管場所
CHANGING LST_DELIISSUE     "伝票セグメント
O_TD_ALV_ERROR    "入出庫連携エラーデータ
LW_ERR_FLAG.      "エラーフラグ

*     エラーチェック
IF LW_ERR_FLAG = ABAP_TRUE.
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
EXIT.
ELSE.
APPEND LST_DELIISSUE TO LTD_RDD.
ENDIF.
ENDLOOP.

**** START ADD BY ISID REN 2015/07/28 ****
*   海外複数明細の場合
ELSE.
LOOP AT LTD_DELIISSUE
INTO LST_STOCK
WHERE MBLNR    = <FS_DELIISSUE>-MBLNR
AND MJAHR    = <FS_DELIISSUE>-MJAHR
AND VBELN_IM = <FS_DELIISSUE>-VBELN_IM.

LST_DELIISSUE = <FS_DELIISSUE>.
LST_DELIISSUE-VBELN_IM   = LST_STOCK-VBELN_IM.   "出荷伝票
LST_DELIISSUE-VBELP_IM   = LST_STOCK-VBELP_IM.   "出荷明細
LST_DELIISSUE-BUDAT_MKPF = LST_STOCK-BUDAT_MKPF. "伝票の転記日付
**** START UPD BY ISID REN 2015/08/14 ****
*        LST_DELIISSUE-MATNR      = LST_STOCK-MATNR.      "品目コード
*        LST_DELIISSUE-MENGE      = LST_STOCK-MENGE.      "入出庫数量
*        LST_DELIISSUE-MEINS      = LST_STOCK-MEINS.      "基本数量単位
LST_DELIISSUE-ERFMG      = LST_STOCK-ERFMG.      "入出庫数量
LST_DELIISSUE-ERFME      = LST_STOCK-ERFME.      "販売数量単位
LST_DELIISSUE-CHARG      = LST_STOCK-CHARG.     "ロット番号
LST_DELIISSUE-MATNR_SD      = LST_STOCK-MATNR_SD.      "販売品目
**** END UPD BY ISID REN 2015/08/14 ****
LST_DELIISSUE-VGBEL      = LST_STOCK-VGBEL.      "受注伝票番号
LST_DELIISSUE-VGPOS      = LST_STOCK-VGPOS.      "受注明細番号
LST_DELIISSUE-BUKRS      = LST_STOCK-BUKRS .       "会社コード

*     チェック処理
PERFORM    CHK_DELIISSUE
USING I_RE_DELIISSUE    "出庫確認再取込データ
I_TD_LIPS         "販売出荷
I_TD_ZTEGSDT203   "発注情報
I_TD_EKPO         "購買伝票明細
I_TD_BUKRS_FLG    "会社フラグ
I_TD_ZTEGSDT001   "TradeCommon
I_TD_ZTEGSDT208   "洋上保管場所
CHANGING LST_DELIISSUE     "伝票セグメント
O_TD_ALV_ERROR    "入出庫連携エラーデータ
LW_ERR_FLAG.      "エラーフラグ

*     エラーチェック
IF LW_ERR_FLAG = ABAP_TRUE.
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
EXIT.
ELSE.
APPEND LST_DELIISSUE TO LTD_RDD.
ENDIF.
ENDLOOP.
ENDIF.
**** END ADD BY ISID REN 2015/07/28 ****

*   存在した場合
IF SY-SUBRC = 0.
APPEND LINES OF LTD_RDD TO LTD_RE_DELIISSUE.
CONTINUE.
ELSE.
**** END UPD BY ISID REN 2015/07/03 ****
**** END ADD 2015/03/30 ISID11 ****

**** START UPD BY ISID REN 2015/07/03 ****
**   出庫確認の入出庫伝票の明細情報を取得する
*    CLEAR:
*      LST_STOCK.
*
*    READ TABLE I_RE_DELIISSUE INTO LST_STOCK
*          WITH KEY MBLNR = <FS_DELIISSUE>-MBLNR  "入出庫伝票番号(Out)
*                   MJAHR = <FS_DELIISSUE>-MJAHR  "入出庫伝票年(Out)
*                   BINARY SEARCH.
**   設計書未定
**               ZEILE = lst_ZSEGSD0019-
***** START UPD 2015/03/30 ISID11 ****
**    IF SY-SUBRC = 0.
**
**      <FS_DELIISSUE>-VBELN_IM   = LST_STOCK-VBELN_IM.   "出荷伝票
**      <FS_DELIISSUE>-VBELP_IM   = LST_STOCK-VBELP_IM.   "出荷明細
**    <FS_DELIISSUE>-BUDAT_MKPF = LST_STOCK-BUDAT_MKPF. "伝票の転記日付
**      <FS_DELIISSUE>-MATNR      = LST_STOCK-MATNR.      "品目コード
**      <FS_DELIISSUE>-MENGE      = LST_STOCK-MENGE.      "入出庫数量
**
**    ELSE.
*    IF SY-SUBRC <> 0.
***** END UPD 2015/03/30 ISID11 ****
*      CLEAR:
*        LW_MSGTX.
*
*      MESSAGE E067(ZMEGSD01) WITH <FS_DELIISSUE>-MBLNR
*                                  <FS_DELIISSUE>-MJAHR
*                             INTO LW_MSGTX.
**     入出庫伝票を取得できません(入出庫伝票 = &1 入出庫伝票年 = &2)
*
**     エラーテーブル編集
*      PERFORM EDIT_ERROR USING <FS_DELIISSUE>
*                               CNS_ZKBUNCC_1
*                               'ZMEGSD01'
*                               '067'
***** START ADD 2015/04/24 ISID11 ****
*                                 <FS_DELIISSUE>-MBLNR  "メッセージ変数
*                                 <FS_DELIISSUE>-MJAHR  "メッセージ変数
*                                 SPACE                "メッセージ変数
*                                 SPACE                "メッセージ変数
***** END ADD 2015/04/24 ISID11 ****
*                               LW_MSGTX
*                               SPACE
*                      CHANGING O_TD_ALV_ERROR.
*
***** START ADD 2015/03/03 ISID11 ****
*      ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
*      ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
***** END ADD 2015/03/03 ISID11 ****
*
**     データが存在しない場合処理、該当レコードを削除、
**     次のレコード処理へ
*      DELETE O_TD_RE_DELIISSUE INDEX LW_TABIX.
*
*      CONTINUE.
*    ENDIF.
*
**   出荷伝票により受注情報を取得
*    CLEAR:
*      LST_LIPS.
*
*    READ TABLE I_TD_LIPS INTO LST_LIPS
*      WITH KEY VBELN = <FS_DELIISSUE>-VBELN_IM        "出荷伝票
*               POSNR = <FS_DELIISSUE>-VBELP_IM        "出荷明細
*               BINARY SEARCH.
*
***** START UPD 2015/03/30 ISID11 ****
**    IF SY-SUBRC = 0.
**
**      <FS_DELIISSUE>-VGBEL = LST_LIPS-VGBEL.          "受注伝票番号
**      <FS_DELIISSUE>-VGPOS = LST_LIPS-VGPOS.          "受注明細番号
**
**    ELSE.
*    IF SY-SUBRC <> 0.
***** END UPD 2015/03/30 ISID11 ****
*      CLEAR:
*        LW_MSGTX.
*
*      MESSAGE E068(ZMEGSD01) WITH <FS_DELIISSUE>-VBELN_IM
*                             INTO LW_MSGTX.
**     出荷伝票を取得できません(出荷伝票 = &1)
**     エラーテーブル編集
*      PERFORM EDIT_ERROR USING <FS_DELIISSUE>
*                               CNS_ZKBUNCC_1
*                               'ZMEGSD01'
*                               '068'
***** START ADD 2015/04/24 ISID11 ****
*                                <FS_DELIISSUE>-VBELN_IM "メッセージ変数
*                                SPACE                "メッセージ変数
*                                SPACE                "メッセージ変数
*                                SPACE                "メッセージ変数
***** END ADD 2015/04/24 ISID11 ****
*                               LW_MSGTX
*                               SPACE
*                      CHANGING O_TD_ALV_ERROR.
*
***** START ADD 2015/03/03 ISID11 ****
*      ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
*      ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
***** END ADD 2015/03/03 ISID11 ****
*
**     データが存在しない場合処理、該当レコードを削除、
**     次のレコード処理へ
*      DELETE O_TD_RE_DELIISSUE INDEX LW_TABIX.
*
*      CONTINUE.
*
*    ENDIF.
*
**   受発注連携テーブルから発注情報を取得
*    CLEAR:
*      LST_ZTEGSDT203.
*
*    READ TABLE I_TD_ZTEGSDT203 INTO LST_ZTEGSDT203
***** START UPD 2015/03/03 ISID11 ****
**      WITH KEY VBELN = <FS_DELIISSUE>-VBELN_IM        "出荷伝票
**               POSNR = <FS_DELIISSUE>-VBELP_IM        "出荷明細
*      WITH KEY VBELN = <FS_DELIISSUE>-VGBEL           "受注伝票番号
*               POSNR = <FS_DELIISSUE>-VGPOS           "受注明細番号
***** END UPD 2015/03/03 ISID11 ****
*               BINARY SEARCH.
*
*    IF SY-SUBRC = 0.
*
*      <FS_DELIISSUE>-EBELN = LST_ZTEGSDT203-EBELN.   "購買伝票番号
*      <FS_DELIISSUE>-EBELP = LST_ZTEGSDT203-EBELP. "購買伝票の明細番号
*
*    ELSE.
*
*      CLEAR:
*        LW_MSGTX.
*
*      MESSAGE E069(ZMEGSD01) WITH <FS_DELIISSUE>-VGBEL
*                                  <FS_DELIISSUE>-VGPOS
*                             INTO LW_MSGTX.
**     受発注連携されてない(販売伝票 = &1 明細 = &2)
*
**     エラーテーブル編集
*      PERFORM EDIT_ERROR USING <FS_DELIISSUE>
*                               CNS_ZKBUNCC_1
*                               'ZMEGSD01'
*                               '069'
***** START ADD 2015/04/24 ISID11 ****
*                                <FS_DELIISSUE>-VGBEL  "メッセージ変数
*                                <FS_DELIISSUE>-VGPOS  "メッセージ変数
*                                SPACE                "メッセージ変数
*                                SPACE                "メッセージ変数
***** END ADD 2015/04/24 ISID11 ****
*                               LW_MSGTX
*                               SPACE
*                      CHANGING O_TD_ALV_ERROR.
*
***** START ADD 2015/03/03 ISID11 ****
*      ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
*      ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
***** END ADD 2015/03/03 ISID11 ****
*
**     データが存在しない場合処理、該当レコードを削除、
**     次のレコード処理へ
*      DELETE O_TD_RE_DELIISSUE INDEX LW_TABIX.
*      CONTINUE.
*
*    ENDIF.
*
**   発注明細から入庫プラントと保管場所の情報を取得
*    CLEAR:
*      LST_EKPO.
*
*    READ TABLE I_TD_EKPO INTO LST_EKPO
*      WITH KEY EBELN = <FS_DELIISSUE>-EBELN         "購買伝票番号
*               EBELP = <FS_DELIISSUE>-EBELP         "購買伝票の明細番号
*               BINARY SEARCH.
*
*    IF SY-SUBRC = 0.
*
*      <FS_DELIISSUE>-WERK_INB = LST_EKPO-WERKS.     "入庫プラント
*      <FS_DELIISSUE>-LGORT = LST_EKPO-LGORT.        "入庫保管場所
***** START ADD 2015/03/03 ISID11 ****
*      <FS_DELIISSUE>-BUKRS_INB = LST_EKPO-BUKRS.          "会社コード
*      <FS_DELIISSUE>-EVERS = LST_EKPO-EVERS.          "出荷指示
***** END ADD 2015/03/03 ISID11 ****
*
*    ELSE.
*
*      CLEAR:
*        LW_MSGTX.
*
*      MESSAGE E070(ZMEGSD01) WITH <FS_DELIISSUE>-EBELN
*                                  <FS_DELIISSUE>-EBELP
*                             INTO LW_MSGTX.
**     購買伝票を取得できません(購買伝票 = &1 明細 = &2)
*
**     エラーテーブル編集
*      PERFORM EDIT_ERROR USING <FS_DELIISSUE>
*                               CNS_ZKBUNCC_1
*                               'ZMEGSD01'
*                               '070'
***** START ADD 2015/04/24 ISID11 ****
*                               <FS_DELIISSUE>-EBELN   "メッセージ変数
*                               <FS_DELIISSUE>-EBELP   "メッセージ変数
*                               SPACE                "メッセージ変数
*                               SPACE                "メッセージ変数
***** END ADD 2015/04/24 ISID11 ****
*                               LW_MSGTX
*                               SPACE
*                      CHANGING O_TD_ALV_ERROR.
*
***** START ADD 2015/03/03 ISID11 ****
*      ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
*      ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
***** END ADD 2015/03/03 ISID11 ****
*
**     データが存在しない場合処理、該当レコードを削除、
**     次のレコード処理へ
*      DELETE O_TD_RE_DELIISSUE INDEX LW_TABIX.
*      CONTINUE.
*
*    ENDIF.
*
***** START UPD 2015/03/03 ISID11 ****
***   国コードにより在庫タイプを決定
**    CLEAR:
**      LW_VBELN_LAND1.
**
**    READ TABLE I_TD_LAND1 INTO LST_LAND1
**      WITH KEY VBELN = <FS_DELIISSUE>-VBELN_IM      "出荷伝票
**               BINARY SEARCH.
**
**    IF SY-SUBRC = 0.
**
**      LW_VBELN_LAND1 = LST_LAND1-LAND1.          "W:出荷先の国コード
**
**    ENDIF.
**
***   販売側出荷プラントの国コードを取得する
**    CLEAR:
**      LW_WERKS_LAND1.
**
**    READ TABLE I_TD_T001W INTO LST_T001W
**      WITH KEY WERKS = <FS_DELIISSUE>-WERK_OUTB     "出荷プラント
**               BINARY SEARCH.
**
**    IF SY-SUBRC = 0.
**
**      LW_WERKS_LAND1 = LST_T001W-LAND1.     "W:出荷プラントの国コード
**
**    ENDIF.
**
***   在庫タイプを設定
***   出荷側の国コード　=　出荷プラントの国コードの場合
**    IF LW_VBELN_LAND1 = LW_WERKS_LAND1.
**
**      <FS_DELIISSUE>-INSMK = SPACE.                 "利用可能
**
***   出荷側の国コード　≠　出荷プラントの国コードの場合
**    ELSE.
**
***     国コード関連マスタを検索し、在庫タイプを設定する
**      CLEAR:
**        LST_ZTEGSDT207.
**      READ TABLE I_TD_ZTEGSDT207 INTO LST_ZTEGSDT207
**        WITH KEY LAND1 = LW_WERKS_LAND1     "W:出荷プラントの国コード
**                 ZLAND = LW_VBELN_LAND1     "W:出荷先の国コード
**                 BINARY SEARCH.
**
***     データが存在しない場合、在庫保留を在庫タイプに設定する
**      IF SY-SUBRC <> 0.
**
**        <FS_DELIISSUE>-INSMK = '3'.                 "在庫保留
**
**      ELSE.
**
**        <FS_DELIISSUE>-INSMK = SPACE.               "利用可能
**
**      ENDIF.
**
**    ENDIF.
***** START ADD 2015/03/30 ISID11 ****
**   本社フラグと単一明細フラグを取得する
*    CLEAR:
*      LST_BUKRS_OUT_FLG.
*    READ TABLE I_TD_BUKRS_FLG INTO LST_BUKRS_OUT_FLG
*      WITH KEY BUKRS = <FS_DELIISSUE>-BUKRS
*               BINARY SEARCH.
*
*    IF LST_BUKRS_OUT_FLG-ZFLGHEADOFFICE = 'X'.
*
***** END ADD 2015/03/30 ISID11 ****
*
**   出荷伝票ヘッダテキスト Invoice Noを取得する
*      CLEAR:
*        LTD_LINES,
*        LST_LINES,
*        LW_SUBRC,
*        LW_NAME.
*
*      LW_NAME+0(10) = <FS_DELIISSUE>-VBELN_IM.
*
**   テキスト読込
*      PERFORM GET_READ_TEXT USING 'Z031'
**                                'JA'
*                                  LW_NAME
*                                  'VBBK'
*                         CHANGING LTD_LINES
*                                  LW_SUBRC.
*
*      CASE LW_SUBRC.
*        WHEN 0.
*
**       テキストを取得できた場合、1行目を品目テキストに設定する
*          READ TABLE LTD_LINES INTO LST_LINES INDEX 1.
*          <FS_DELIISSUE>-Z_INVOICE_NO = LST_LINES-TDLINE.  "納品書番号
*
*        WHEN OTHERS.
*
*          CLEAR:
*           <FS_DELIISSUE>-Z_INVOICE_NO.
*
*      ENDCASE.
*
***** START ADD 2015/03/30 ISID11 ****
*    ELSE.
***** END ADD 2015/03/30 ISID11 ****
**   貿易テーブルの Invoice Noを取得する
*      CLEAR:
*        LST_ZTEGSDT001.
*
*      READ TABLE I_TD_ZTEGSDT001 INTO LST_ZTEGSDT001
*        WITH KEY VBELN = <FS_DELIISSUE>-VBELN_IM
*                 BINARY SEARCH.
*
*      IF SY-SUBRC <> 0.
*
*        CLEAR:
*         <FS_DELIISSUE>-Z_INVOICE_NO.
*
*      ELSE.
*
*        <FS_DELIISSUE>-Z_INVOICE_NO =
*                        LST_ZTEGSDT001-Z_INVOICE_NO.  "納品書番号
*
*      ENDIF.
***** START ADD 2015/03/30 ISID11 ****
*    ENDIF.
***** END ADD 2015/03/30 ISID11 ****
**   本社フラグと単一明細フラグを取得する
*    CLEAR:
*      LST_BUKRS_FLG.
*    READ TABLE I_TD_BUKRS_FLG INTO LST_BUKRS_FLG
*      WITH KEY BUKRS = <FS_DELIISSUE>-BUKRS_INB
*               BINARY SEARCH.
*
*    IF SY-SUBRC <> 0.
*
*      CLEAR:
*        <FS_DELIISSUE>-ZFLGHEADOFFICE,     "本社フラグ
*        <FS_DELIISSUE>-ZFLGINBSINGLE.      "入庫伝票単一明細FLG
*
*    ELSE.
*
*      <FS_DELIISSUE>-ZFLGHEADOFFICE =
*                   LST_BUKRS_FLG-ZFLGHEADOFFICE.  "本社フラグ
*      <FS_DELIISSUE>-ZFLGINBSINGLE  =
*                   LST_BUKRS_FLG-ZFLGINBSINGLE.   "入庫伝票単一明細FLG
*
*    ENDIF.
*
**   海外の場合（「FS:出庫確認連携データ」-本社フラグ　=　SPACE）のみ
*    IF <FS_DELIISSUE>-ZFLGHEADOFFICE IS INITIAL.
*
**     洋上保管場所を取得する
*      IF <FS_DELIISSUE>-EVERS <> 'Z1'.    "海外の場合かつ直送以外の場合
*
*        CLEAR:
*          LST_ZTEGSDT208.
*
*        READ TABLE I_TD_ZTEGSDT208 INTO LST_ZTEGSDT208
*          WITH KEY BUKRS = <FS_DELIISSUE>-BUKRS_INB
*                   BINARY SEARCH.
*
*        IF SY-SUBRC <> 0.
*
*          CLEAR:
*            <FS_DELIISSUE>-LGORT.
*
*        ELSE.
*
*          <FS_DELIISSUE>-LGORT = LST_ZTEGSDT208-LGORT.  "入庫保管場所
*
*        ENDIF.
*
*      ENDIF.
*
*    ENDIF.
*
**   「出庫確認連携データ」-入庫伝票単一明細フラグが固定値（SPACE)の場合
**   入出庫伝票番号(Outbound)、
**   入出庫伝票年(Outbound)ごとで入庫処理を行う
*    IF <FS_DELIISSUE>-ZFLGINBSINGLE IS INITIAL.
*
*      <FS_DELIISSUE>-MBLNR_SKEY = <FS_DELIISSUE>-MBLNR.
*      <FS_DELIISSUE>-MJAHR_SKEY = <FS_DELIISSUE>-MJAHR.
*
**   購買伝票番号ごとで入庫処理を行う（単一明細処理）
*    ELSE.
*
*      <FS_DELIISSUE>-EBELN_SKEY = <FS_DELIISSUE>-EBELN.
*      <FS_DELIISSUE>-EBELP_SKEY = <FS_DELIISSUE>-EBELP.
*
*    ENDIF.
***** END UPD 2015/03/03 ISID11 ****
LST_DELIISSUE = <FS_DELIISSUE>.

*     チェック処理
PERFORM    CHK_DELIISSUE
USING I_RE_DELIISSUE    "出庫確認再取込データ
I_TD_LIPS         "販売出荷
I_TD_ZTEGSDT203   "発注情報
I_TD_EKPO         "購買伝票明細
I_TD_BUKRS_FLG    "会社フラグ
I_TD_ZTEGSDT001   "TradeCommon
I_TD_ZTEGSDT208   "洋上保管場所
CHANGING LST_DELIISSUE     "伝票セグメント
O_TD_ALV_ERROR    "入出庫連携エラーデータ
LW_ERR_FLAG.      "エラーフラグ

*     エラーチェック
IF LW_ERR_FLAG = ABAP_TRUE.
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
CONTINUE.
ELSE.
APPEND LST_DELIISSUE TO LTD_RE_DELIISSUE.
ENDIF.
ENDIF.
**** END UPD BY ISID REN 2015/07/03 ****
ENDLOOP.

**** START ADD BY ISID REN 2015/07/03 ****
CLEAR O_TD_RE_DELIISSUE.
APPEND LINES OF LTD_RE_DELIISSUE TO O_TD_RE_DELIISSUE.
**** END ADD BY ISID REN 2015/07/03 ****

**** START ADD 2015/03/03 ISID11 ****
SORT O_TD_RE_DELIISSUE
BY  EBELN_SKEY ASCENDING
EBELP_SKEY ASCENDING
MBLNR_SKEY ASCENDING
**** START UPD BY ISID REN 2015/07/02 ****
*        MJAHR_SKEY ASCENDING.
MJAHR_SKEY ASCENDING
ZEILE      ASCENDING.    "入出庫伝票の明細(Outbound)
**** END UPD BY ISID REN 2015/07/02 ****
**** END ADD 2015/03/03 ISID11 ****

ENDFORM.                    " EDIT_DELIVERYISSUE_REGET
*&---------------------------------------------------------------------*
*&      Form  REGET_DELIVERYREVERSE
*&---------------------------------------------------------------------*
*       出庫取消再取込データの情報を追加取得
*----------------------------------------------------------------------*
*      -->I_SYST_DATE         システム日付
*      -->I_SYST_TIME         システム時刻
*      <--O_TD_RE_DELIREVER   ITAB:出庫取消再取込データ
*      <--O_TD_ALV_ERROR      ITAB:入出庫連携エラーデータ
*      <--O_TD_ALV_MANU       ITAB:入出庫マニュアル処理済データ
*----------------------------------------------------------------------*
FORM REGET_DELIVERYREVERSE
**** START DEL 2015/03/03 ISID11 ****
*                     USING I_SYST_DATE        TYPE SY-DATUM
*                           I_SYST_TIME        TYPE SY-UZEIT
**** END DEL 2015/03/03 ISID11 ****
CHANGING O_TD_RE_DELIREVER  TYPE TYP_TD_STOCK
O_TD_ALV_ERROR     TYPE TYP_TD_ERROR
O_TD_ALV_MANU      TYPE TYP_TD_ERROR.

DATA:
LTD_LIPS        TYPE TYP_TD_LIPS,          "ITAB:販売出荷
LTD_ZTEGSDT203  TYPE TYP_TD_ZTEGSDT203,    "ITAB:発注情報
LTD_ZTEGSDT206  TYPE TYP_TD_ZTEGSDT206,
"ITAB:出庫取消元の入出庫伝票(Inbound)
LTD_DELIREVERINBOUND TYPE TYP_TD_STOCK,
"ITAB:出庫取消元の伝票セグメント
LTD_DELIREVER   TYPE TYP_TD_STOCK,  "ITAB:出庫取消元の伝票セグメント
**** START ADD 2015/03/03 ISID11 ****
LTD_WERK_INB    TYPE TYP_TD_WERK_INB.     "取消元入庫プラント
**** END ADD 2015/03/03 ISID11 ****

* 出庫確認の入出庫伝票の明細情報検索
PERFORM REGET_MSEG_REVERSE USING O_TD_RE_DELIREVER
CHANGING LTD_DELIREVER.

* 出荷伝票により受注情報検索
PERFORM GET_LIPS USING LTD_DELIREVER
CHANGING LTD_LIPS.          "ITAB:販売出荷

* 受発注連携テーブルから発注情報検索
PERFORM GET_ZTEGSDT203 USING LTD_LIPS        "ITAB:販売出荷
CHANGING LTD_ZTEGSDT203. "ITAB:発注情報

* 出庫取消元の入出庫伝票(Inbound)の検索
PERFORM GET_ZTEGSDT206 USING LTD_LIPS        "ITAB:販売出荷
CHANGING LTD_ZTEGSDT206.
"ITAB:出庫取消元の入出庫伝票(Inbound)

* 出庫取消元の入出庫伝票(Inbound)の情報検索
PERFORM REGET_MSEG_INBOUND USING LTD_ZTEGSDT206
CHANGING LTD_DELIREVERINBOUND.

**** START ADD 2015/03/03 ISID11 ****
* 取消元入庫プラントを取得
PERFORM GET_WERK_INB USING LTD_DELIREVER   "ITAB:出庫取消元の伝票
CHANGING LTD_WERK_INB.   "取消元入庫プラント
**** END ADD 2015/03/03 ISID11 ****

* 出庫取消再取込データの情報の編集
PERFORM EDIT_DELIVERYREVERSE_REGET USING LTD_DELIREVER
LTD_LIPS
LTD_ZTEGSDT203
LTD_ZTEGSDT206
LTD_DELIREVERINBOUND
**** START ADD 2015/03/03 ISID11 ****
LTD_WERK_INB
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_RE_DELIREVER
O_TD_ALV_ERROR.
*                                           O_TD_ALV_MANUAL.

* マニュアル入庫取消が有り無しの判定処理
PERFORM EDIT_DELIVERYREVERSE_MANU CHANGING O_TD_RE_DELIREVER
O_TD_ALV_MANU.

ENDFORM.                    " REGET_DELIVERYREVERSE
*&---------------------------------------------------------------------*
*&      Form  REGET_MSEG_REVERSE
*&---------------------------------------------------------------------*
*       出庫確認の入出庫伝票の明細情報検索
*----------------------------------------------------------------------*
*      -->I_TD_ALV_DELIREVER  ITAB:出庫取消再取込データ
*      <--O_TD_RE_DELIREVER   ITAB:出庫取消再取込データ
*----------------------------------------------------------------------*
FORM REGET_MSEG_REVERSE USING I_TD_ALV_DELIREVER TYPE TYP_TD_STOCK
CHANGING O_TD_RE_DELIREVER  TYPE TYP_TD_STOCK.

DATA:
LTD_STOCK  TYPE TYP_TD_STOCK.

LTD_STOCK = I_TD_ALV_DELIREVER.
SORT LTD_STOCK BY MBLNR ASCENDING
MJAHR ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_STOCK
COMPARING MBLNR
MJAHR.

SELECT MBLNR                    "入出庫伝票番号
MJAHR                    "入出庫伝票年
ZEILE                    "入出庫伝票の明細
SMBLN                    "入出庫伝票番号
SJAHR                    "入出庫伝票年
SMBLP                    "入出庫伝票の明細
VBELN_IM                 "出荷伝票
VBELP_IM                 "出荷明細
BUDAT_MKPF               "伝票の転記日付
MATNR                    "品目コード
INTO CORRESPONDING FIELDS OF TABLE O_TD_RE_DELIREVER
FROM MSEG
FOR ALL ENTRIES IN LTD_STOCK
WHERE MBLNR = LTD_STOCK-MBLNR    "入出庫伝票番号(Outbound)
AND MJAHR = LTD_STOCK-MJAHR.   "入出庫伝票年(Outbound)

* データが存在した場合、「ITAB:伝票セグメント」をソートし、処理続行
IF SY-SUBRC = 0.

SORT O_TD_RE_DELIREVER BY MBLNR ASCENDING   "入出庫伝票番号
MJAHR ASCENDING   "入出庫伝票年
ZEILE ASCENDING.  "入出庫伝票の明細

ENDIF.

ENDFORM.                    " REGET_MSEG_REVERSE
*&---------------------------------------------------------------------*
*&      Form  REGET_MSEG_INBOUND
*&---------------------------------------------------------------------*
*       出庫取消元の入出庫伝票(Inbound)の情報検索
*----------------------------------------------------------------------*
*      -->I_TD_ZTEGSDT206  ITAB:出庫取消元の入出庫伝票(Inbound)
*      <--O_TD_DELIREVER   ITAB:出庫取消元の伝票セグメント
*----------------------------------------------------------------------*
FORM REGET_MSEG_INBOUND USING I_TD_ZTEGSDT206 TYPE TYP_TD_ZTEGSDT206
CHANGING O_TD_DELIREVER TYPE TYP_TD_STOCK.

DATA:
LTD_ZTEGSDT206 TYPE TYP_TD_ZTEGSDT206.

**** START ADD 2015/03/03 ISID11 ****
IF I_TD_ZTEGSDT206 IS INITIAL.

RETURN.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

LTD_ZTEGSDT206 = I_TD_ZTEGSDT206.
SORT LTD_ZTEGSDT206 BY MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_ZTEGSDT206
COMPARING MBLNR_OUTB
MJAHR_OUTB.

SELECT MBLNR                    "入出庫伝票番号
MJAHR                    "入出庫伝票年
ZEILE                    "入出庫伝票の明細
SMBLN                    "入出庫伝票番号
SJAHR                    "入出庫伝票年
SMBLP                    "入出庫伝票の明細
BUDAT_MKPF               "伝票の転記日付
INTO CORRESPONDING FIELDS OF TABLE O_TD_DELIREVER
FROM MSEG
FOR ALL ENTRIES IN LTD_ZTEGSDT206
WHERE MBLNR = LTD_ZTEGSDT206-MBLNR_INB    "取消元の入出庫伝票番号(Inbound)
AND MJAHR = LTD_ZTEGSDT206-MJAHR_INB.   "取消元の入出庫伝票年(Inbound)

* データが存在した場合、「ITAB:伝票セグメント」をソートし、処理続行
IF SY-SUBRC = 0.

SORT O_TD_DELIREVER BY MBLNR ASCENDING   "入出庫伝票番号
MJAHR ASCENDING   "入出庫伝票年
ZEILE ASCENDING.  "入出庫伝票の明細

ENDIF.

ENDFORM.                    " REGET_MSEG_INBOUND
*&---------------------------------------------------------------------*
*&      Form  EDIT_DELIVERYREVERSE_REGET
*&---------------------------------------------------------------------*
*       出庫取消再取込データの情報の編集
*----------------------------------------------------------------------*
*      -->I_TD_ALV_DELIREVER  ITAB:出庫取消再取込データ
*      -->I_TD_LIPS           ITAB:販売出荷
*      -->I_TD_ZTEGSDT203     ITAB:発注情報
*      -->I_TD_ZTEGSDT206     ITAB:出庫取消元の入出庫伝票
*      -->I_TD_DELIREVER_IN   ITAB:出庫取消元の伝票セグメント
*      -->I_TD_WERK_INB       取消元入庫プラント
*      <--O_TD_RE_DELIREVER   ITAB:出庫取消元の伝票セグメント
*      <--O_TD_ALV_ERROR      ITAB:入出庫連携エラーデータ
*      <--O_TD_ALV_MANUAL     ITAB:入出庫マニュアル処理済データ
*----------------------------------------------------------------------*
FORM EDIT_DELIVERYREVERSE_REGET
USING I_TD_ALV_DELIREVER TYPE TYP_TD_STOCK
I_TD_LIPS          TYPE TYP_TD_LIPS
I_TD_ZTEGSDT203    TYPE TYP_TD_ZTEGSDT203
I_TD_ZTEGSDT206    TYPE TYP_TD_ZTEGSDT206
I_TD_DELIREVER_IN  TYPE TYP_TD_STOCK
**** START ADD 2015/03/03 ISID11 ****
I_TD_WERK_INB      TYPE TYP_TD_WERK_INB
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_RE_DELIREVER  TYPE TYP_TD_STOCK
O_TD_ALV_ERROR     TYPE TYP_TD_ERROR.
*             O_TD_ALV_MANUAL    TYPE TYP_TD_ERROR.

DATA:
LST_STOCK       TYPE TYP_STOCK,
LW_TABIX        TYPE SY-TABIX,
LW_MSGTX        TYPE ZTEGSDT206-MSGTX,
LST_LIPS        TYPE TYP_LIPS,
LST_ZTEGSDT203  TYPE TYP_ZTEGSDT203,
**** START ADD 2015/03/03 ISID11 ****
LST_WERK_INB   TYPE TYP_WERK_INB,
**** END ADD 2015/03/03 ISID11 ****
LTD_ZTEGSDT206  TYPE TYP_TD_ZTEGSDT206,
LST_ZTEGSDT206  TYPE TYP_ZTEGSDT206,
LST_DELIREVER   TYPE TYP_STOCK.
*    LST_ALV_MANUAL  TYPE TYP_ERROR,
*    LTD_ALV_DELIREVER TYPE TYP_TD_STOCK,
*    LTD_RE_DELIREVER  TYPE TYP_TD_STOCK,
*    LTD_RE_DEL        TYPE TYP_TD_STOCK,
*    LST_ALV_DELIREVER TYPE TYP_STOCK,
*    LST_RE_DELIREVER  TYPE TYP_TD_STOCK.

FIELD-SYMBOLS:
<FS_DELIREVER>    TYPE TYP_STOCK.

LTD_ZTEGSDT206 = I_TD_ZTEGSDT206.

SORT LTD_ZTEGSDT206 BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING
EBELN      ASCENDING.

LOOP AT O_TD_RE_DELIREVER ASSIGNING <FS_DELIREVER>.

LW_TABIX = SY-TABIX.

*   出庫確認の入出庫伝票の明細情報を取得
CLEAR:
LST_STOCK.

READ TABLE I_TD_ALV_DELIREVER INTO LST_STOCK
WITH KEY MBLNR = <FS_DELIREVER>-MBLNR  "入出庫伝票番号(Out)
MJAHR = <FS_DELIREVER>-MJAHR  "入出庫伝票年(Out)
**** START ADD 2015/03/03 ISID11 ****
*                   ZEILE = <FS_DELIREVER>-ZEILE  "入出庫伝票の明細(Out)
**** END ADD 2015/03/03 ISID11 ****
BINARY SEARCH.
*   設計書未定
*               ZEILE = lst_ZSEGSD0019-

IF SY-SUBRC = 0.

<FS_DELIREVER>-SMBLN      = LST_STOCK-SMBLN.
"取消元の入出庫伝票番号(Outbound)
<FS_DELIREVER>-SJAHR      = LST_STOCK-SJAHR.
"取消元の入出庫伝票年(Outbound)
<FS_DELIREVER>-SMBLP      = LST_STOCK-SMBLP.
"取消元の入出庫伝票の明細(Outbound)
<FS_DELIREVER>-VBELN_IM   = LST_STOCK-VBELN_IM.   "出荷伝票
<FS_DELIREVER>-VBELP_IM   = LST_STOCK-VBELP_IM.   "出荷明細
<FS_DELIREVER>-BUDAT_MKPF = LST_STOCK-BUDAT_MKPF. "伝票の転記日付
<FS_DELIREVER>-MATNR      = LST_STOCK-MATNR.      "品目コード

**** START ADD 2015/03/03 ISID11 ****
CLEAR:
LST_WERK_INB.

READ TABLE I_TD_WERK_INB INTO LST_WERK_INB
WITH KEY MBLNR  = <FS_DELIREVER>-SMBLN "取消元の入出庫伝票番号
MJAHR  = <FS_DELIREVER>-SJAHR "取消元の入出庫伝票年
*                 ZEILE  = <FS_DELIREVER>-SMBLP"取消元の入出庫伝票の明細
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_DELIREVER>-WERK_INB = LST_WERK_INB-WERKS.   "入庫プラント

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

ELSE.

CLEAR:
LW_MSGTX.

MESSAGE E067(ZMEGSD01) WITH <FS_DELIREVER>-MBLNR
<FS_DELIREVER>-MJAHR
INTO LW_MSGTX.
*     入出庫伝票を取得できません(入出庫伝票 = &1 入出庫伝票年 = &2)

*     エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_DELIREVER>
CNS_ZKBUNCC_2
'ZMEGSD01'
'067'
**** START ADD 2015/04/24 ISID11 ****
<FS_DELIREVER>-MBLNR   "メッセージ変数
<FS_DELIREVER>-MJAHR  "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****

LW_MSGTX
SPACE
CHANGING O_TD_ALV_ERROR.
*     データが存在しない場合処理、該当レコードを削除、次のレコード処理へ
DELETE O_TD_RE_DELIREVER INDEX LW_TABIX.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

*   出荷伝票により受注情報を取得
CLEAR:
LST_LIPS.

READ TABLE I_TD_LIPS INTO LST_LIPS
WITH KEY VBELN = <FS_DELIREVER>-VBELN_IM        "出荷伝票
POSNR = <FS_DELIREVER>-VBELP_IM        "出荷明細
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_DELIREVER>-VGBEL = LST_LIPS-VGBEL.          "受注伝票番号
<FS_DELIREVER>-VGPOS = LST_LIPS-VGPOS.          "受注明細番号

ELSE.

CLEAR:
LW_MSGTX.

MESSAGE E068(ZMEGSD01) WITH <FS_DELIREVER>-VBELN_IM
INTO LW_MSGTX.
*     出荷伝票を取得できません(出荷伝票 = &1)
*     エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_DELIREVER>
CNS_ZKBUNCC_2
'ZMEGSD01'
'068'
**** START ADD 2015/04/24 ISID11 ****
<FS_DELIREVER>-VBELN_IM   "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
SPACE
CHANGING O_TD_ALV_ERROR.

*     データが存在しない場合処理、該当レコードを削除、次のレコード処理へ
DELETE O_TD_RE_DELIREVER INDEX LW_TABIX.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

*   受発注連携テーブルから発注情報を取得
CLEAR:
LST_ZTEGSDT203.

READ TABLE I_TD_ZTEGSDT203 INTO LST_ZTEGSDT203
**** START UPD 2015/03/03 ISID11 ****
*      WITH KEY VBELN = <FS_DELIREVER>-VBELN_IM        "出荷伝票
*               POSNR = <FS_DELIREVER>-VBELP_IM        "出荷明細
WITH KEY VBELN = <FS_DELIREVER>-VGBEL        "受注伝票番号
POSNR = <FS_DELIREVER>-VGPOS        "受注明細番号
**** END UPD 2015/03/03 ISID11 ****
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_DELIREVER>-EBELN = LST_ZTEGSDT203-EBELN.  "購買伝票番号
<FS_DELIREVER>-EBELP = LST_ZTEGSDT203-EBELP.  "購買伝票の明細番号

ELSE.

CLEAR:
LW_MSGTX.

MESSAGE E069(ZMEGSD01) WITH <FS_DELIREVER>-VGBEL
<FS_DELIREVER>-VGPOS
INTO LW_MSGTX.
*     受発注連携されてない(販売伝票 = &1 明細 = &2)

*     エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_DELIREVER>
CNS_ZKBUNCC_2
'ZMEGSD01'
'069'
**** START ADD 2015/04/24 ISID11 ****
<FS_DELIREVER>-VGBEL   "メッセージ変数
<FS_DELIREVER>-VGPOS  "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
SPACE
CHANGING O_TD_ALV_ERROR.

*     データが存在しない場合処理、該当レコードを削除、次のレコード処理へ
DELETE O_TD_RE_DELIREVER INDEX LW_TABIX.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

*   出庫取消元の入出庫伝票(Inbound)を取得
CLEAR:
LST_ZTEGSDT206.
READ TABLE LTD_ZTEGSDT206 INTO LST_ZTEGSDT206
WITH KEY KDAUF      = <FS_DELIREVER>-VGBEL  "受注伝票番号
MBLNR_OUTB = <FS_DELIREVER>-SMBLN  "入出庫伝票番号(Od)
MJAHR_OUTB = <FS_DELIREVER>-SJAHR  "入出庫伝票年(Od)
EBELN      = <FS_DELIREVER>-EBELN  "購買発注番号
BINARY SEARCH.

IF SY-SUBRC = 0.

**** START UPD 2015/03/03 ISID11 ****
*      <FS_DELIREVER>-MBLNR_INB = LST_ZTEGSDT206-MBLNR_INB.
*      "取消元の入出庫伝票番号(Inbound)
*      <FS_DELIREVER>-MJAHR_INB = LST_ZTEGSDT206-MJAHR_INB.
*      "取消元の入出庫伝票年(Inbound)
<FS_DELIREVER>-MBLNR_NEW = LST_ZTEGSDT206-MBLNR_INB.
"取消元の入出庫伝票番号(Inbound)
<FS_DELIREVER>-MJAHR_NEW = LST_ZTEGSDT206-MJAHR_INB.
"取消元の入出庫伝票年(Inbound)
**** END UPD 2015/03/03 ISID11 ****

ELSE.

MESSAGE E071(ZMEGSD01) WITH <FS_DELIREVER>-VGBEL
<FS_DELIREVER>-SMBLN
INTO LW_MSGTX.
*     入出庫連携されてない(入出庫伝票 = &1 入出庫伝票年 = &2)
*     エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_DELIREVER>
CNS_ZKBUNCC_2      "処理区分
'ZMEGSD01'         "メッセージクラス
'071'              "メッセージNo
**** START ADD 2015/04/24 ISID11 ****
<FS_DELIREVER>-VGBEL   "メッセージ変数
<FS_DELIREVER>-SMBLN  "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX           "メッセージテキスト
SPACE
CHANGING O_TD_ALV_ERROR.

*     データが存在しない場合処理、該当レコードを削除次のレコード処理へ
DELETE O_TD_RE_DELIREVER INDEX LW_TABIX.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

*   出庫取消元の入出庫伝票(Inbound)の情報を取得
CLEAR:
LST_DELIREVER.

READ TABLE I_TD_DELIREVER_IN INTO LST_DELIREVER
**** START UPD 2015/03/03 ISID11 ****
*      WITH KEY MBLNR = <FS_DELIREVER>-MBLNR_INB
*                        "取消元の入出庫伝票番号(Inbound)
*               MJAHR = <FS_DELIREVER>-MJAHR_INB
WITH KEY MBLNR = <FS_DELIREVER>-MBLNR_NEW
"取消元の入出庫伝票番号(Inbound)
MJAHR = <FS_DELIREVER>-MJAHR_NEW
**** END UPD 2015/03/03 ISID11 ****
BINARY SEARCH.
"取消元の入出庫伝票年(Inbound)

IF SY-SUBRC = 0.

**** START UPD 2015/03/03 ISID11 ****
*      <FS_DELIREVER>-MBLNR_NEW  = LST_DELIREVER-SMBLN.
*      "入出庫伝票番号(Inbound)
*      <FS_DELIREVER>-MJAHR_NEW  = LST_DELIREVER-SJAHR.
*      "入出庫伝票年(Inbound)
<FS_DELIREVER>-MBLNR_INB  = LST_DELIREVER-SMBLN.
"入出庫伝票番号(Inbound)
<FS_DELIREVER>-MJAHR_INB  = LST_DELIREVER-SJAHR.
"入出庫伝票年(Inbound)
**** END UPD 2015/03/03 ISID11 ****
<FS_DELIREVER>-BUDAT_MKPF = LST_DELIREVER-BUDAT_MKPF.
"伝票の転記日付

ELSE.

MESSAGE E067(ZMEGSD01) WITH
*                                  <FS_DELIREVER>-MBLNR_INB
*                                  <FS_DELIREVER>-MJAHR_INB
<FS_DELIREVER>-MBLNR_NEW
<FS_DELIREVER>-MJAHR_NEW
INTO LW_MSGTX.
*     入出庫伝票を取得できません(入出庫伝票 = &1 入出庫伝票年 = &2)
*     エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_DELIREVER>
CNS_ZKBUNCC_2      "処理区分
'ZMEGSD01'         "メッセージクラス
'067'              "メッセージNo
**** START ADD 2015/04/24 ISID11 ****
<FS_DELIREVER>-MBLNR_NEW   "メッセージ変数
<FS_DELIREVER>-MJAHR_NEW  "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX           "メッセージテキスト
SPACE
CHANGING O_TD_ALV_ERROR.

*     データが存在しない場合処理、該当レコードを削除次のレコード処理へ
DELETE O_TD_RE_DELIREVER INDEX LW_TABIX.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

**** START ADD 2015/03/03 ISID11 ****
<FS_DELIREVER>-MBLNR_SKEY = <FS_DELIREVER>-MBLNR_INB.
<FS_DELIREVER>-MJAHR_SKEY = <FS_DELIREVER>-MJAHR_INB.
**** END ADD 2015/03/03 ISID11 ****

**    append <FS_DELIREVER> to Ltd_ALV_MANUAL.
*
*    AT END OF MJAHR.
**     マニュアル入庫取消が有り無しの判定処理
*
*      READ TABLE Ltd_ALV_MANUAL TRANSPORTING NO FIELDS
*        WITH KEY MBLNR <>
*                 MJAHR
**      LST_ALV_MANUAL
*
**     入庫取消処理されてない場合。
**     (全て明細の入出庫伝票番号(Inbound)が初期値であること)
*      IF <FS_DELIREVER>-MBLNR_NEW IS INITIAL.
*
*        CONTINUE.
*
*      ENDIF.
*
*
*    ENDAT.

ENDLOOP.

**** START ADD 2015/03/03 ISID11 ****
* ソート: 取消元の入出庫伝票番号（Inbound）
SORT O_TD_RE_DELIREVER BY EBELN_SKEY ASCENDING
MBLNR_SKEY ASCENDING
MJAHR_SKEY ASCENDING.
**** END ADD 2015/03/03 ISID11 ****

ENDFORM.                    " EDIT_DELIVERYREVERSE_REGET
*&---------------------------------------------------------------------*
*&      Form  CONVERT_ALV_INNER
*&---------------------------------------------------------------------*
*       取得ALVレコード編集
*----------------------------------------------------------------------*
*      -->I_ST_ALV       ALV
*      <--O_TD_RE_STOCK  再取込データ
*----------------------------------------------------------------------*
FORM CONVERT_ALV_INNER USING I_ST_ALV TYPE ZSEGSD0019
CHANGING O_TD_RE_STOCK  TYPE TYP_TD_STOCK.

DATA:
LST_STOCK   TYPE TYP_STOCK.

LST_STOCK-MBLNR      = I_ST_ALV-MBLNR_OUTB. "入出庫伝票番号(Outbound)
LST_STOCK-MJAHR      = I_ST_ALV-MJAHR_OUTB. "入出庫伝票年(Outbound)
LST_STOCK-ZEILE      = SPACE.   "入出庫伝票の明細(Outbound)
LST_STOCK-BUKRS      = SPACE.   "会社コード(Outbound)
LST_STOCK-WERK_OUTB  = I_ST_ALV-WERK_OUTB.   "出荷プラント
LST_STOCK-SMBLN      = SPACE.   "取消元の入出庫伝票番号(Outbound)
LST_STOCK-SJAHR      = SPACE.   "取消元の入出庫伝票年(Outbound)
LST_STOCK-MBLNR_INB  = I_ST_ALV-MBLNR_INB.
"取消元の入出庫伝票番号(Inbound)
LST_STOCK-MJAHR_INB  = I_ST_ALV-MJAHR_INB.
"取消元の入出庫伝票年(Inbound)
LST_STOCK-SMBLP      = SPACE.   "取消元の入出庫伝票の明細(Outbound)
LST_STOCK-MBLNR_NEW  = SPACE.   "入出庫伝票番号(Inbound)
LST_STOCK-MJAHR_NEW  = SPACE.   "入出庫伝票年(Inbound)
LST_STOCK-VBELN_IM   = I_ST_ALV-VBELN.   "出荷伝票
LST_STOCK-VBELP_IM   = SPACE.   "出荷明細
LST_STOCK-BUDAT_MKPF = SPACE.   "伝票の転記日付
LST_STOCK-MATNR      = SPACE.   "品目コード
LST_STOCK-MENGE      = SPACE.   "入出庫数量
LST_STOCK-VGBEL      = I_ST_ALV-KDAUF. "受注伝票番号 KDAUF
LST_STOCK-VGPOS      = SPACE.   "受注明細番号
LST_STOCK-EBELN      = I_ST_ALV-EBELN.   "購買伝票番号
LST_STOCK-EBELP      = SPACE.   "購買伝票の明細番号
LST_STOCK-WERK_INB   = I_ST_ALV-WERK_INB.   "入庫プラント
LST_STOCK-LGORT      = SPACE.   "入庫保管場所
LST_STOCK-INSMK      = SPACE.   "在庫タイプ
LST_STOCK-ZKBUNCC    = I_ST_ALV-ZKBUNCC. "処理区分
LST_STOCK-STATUS     = I_ST_ALV-STATUS.  "更新区分
LST_STOCK-KNTTP      = SPACE.            "勘定設定カテゴリ
LST_STOCK-VBTYP      = SPACE.            "販売管理伝票カテゴリ
LST_STOCK-MEINS      = SPACE.            "基本数量単位
LST_STOCK-MSGTX      = I_ST_ALV-MSGTX.   "メッセージテキスト(Message)
LST_STOCK-ERNAM      = I_ST_ALV-Z_CRE_USERID.  "登録者(Create User)
LST_STOCK-Z_CRE_YMD  = I_ST_ALV-Z_CRE_YMD. "ジョブ実行日付(Job Date)
LST_STOCK-Z_CRE_HMS  = I_ST_ALV-Z_CRE_HMS. "ジョブ実行時刻(Job Time)
LST_STOCK-VKORG      = I_ST_ALV-VKORG.     "販売組織 (Sales Org.)
LST_STOCK-VTWEG      = I_ST_ALV-VTWEG.     "流通チャネル (Channel)
LST_STOCK-SPART      = I_ST_ALV-SPART.     "製品部門 (Devision)
LST_STOCK-VKGRP      = I_ST_ALV-VKGRP.     "営業グループ (Sales Group)
LST_STOCK-VKBUR      = I_ST_ALV-VKBUR.     "営業所 (Sales Office)
LST_STOCK-VTEXT      = I_ST_ALV-VTEXT.     "販売組織名称 (Name)
LST_STOCK-EKORG      = I_ST_ALV-EKORG.     "購買組織 (Purch Org.)
LST_STOCK-EKGRP      = I_ST_ALV-EKGRP.     "購買グループ (Purch Grp.)
LST_STOCK-EKOTX      = I_ST_ALV-EKOTX.     "購買組織名称 (Name)

APPEND LST_STOCK TO O_TD_RE_STOCK.

ENDFORM.                    " CONVERT_ALV_INNER
*&---------------------------------------------------------------------*
*&      Form  EDIT_DELIVERYREVERSE_MANU
*&---------------------------------------------------------------------*
*       マニュアル入庫取消が有り無しの判定処理
*----------------------------------------------------------------------*
*      <--O_TD_RE_DELIREVER   ITAB:出庫取消元の伝票セグメント
*      <--O_TD_ALV_MANU       ITAB:入出庫マニュアル処理済データ
*----------------------------------------------------------------------*
FORM EDIT_DELIVERYREVERSE_MANU
CHANGING O_TD_RE_DELIREVER  TYPE TYP_TD_STOCK
O_TD_ALV_MANU    TYPE TYP_TD_ERROR.

DATA:
LST_STOCK    TYPE TYP_STOCK,
LST_RE_STOCK TYPE TYP_STOCK,
LTD_STOCK    TYPE TYP_TD_STOCK,
LTD_RE_STOCK TYPE TYP_TD_STOCK,
LW_MSGTX     TYPE ZTEGSDT206-MSGTX.

LTD_RE_STOCK = O_TD_RE_DELIREVER.
SORT LTD_RE_STOCK BY  MBLNR ASCENDING
MJAHR ASCENDING
ZEILE ASCENDING.

CLEAR:
O_TD_RE_DELIREVER.

LOOP AT LTD_RE_STOCK INTO LST_STOCK.

LST_RE_STOCK = LST_STOCK.

APPEND LST_RE_STOCK TO LTD_STOCK.

AT END OF MJAHR.

*     入庫取消処理一部された場合(入出庫伝票番号(Inbound)が同一ではない
DELETE LTD_STOCK WHERE MBLNR = LST_RE_STOCK-MBLNR
AND MJAHR = LST_RE_STOCK-MJAHR
AND ( MBLNR_NEW <> LST_RE_STOCK-MBLNR_NEW
OR MJAHR_NEW <> LST_RE_STOCK-MJAHR_NEW ).

IF SY-SUBRC <> 0.

*       入庫取消処理に転記日の月が不一致の場合
*       (入出庫伝票番号(Inbound)の転記日の年月が同一ではない場合)
DELETE LTD_STOCK
WHERE MBLNR = LST_RE_STOCK-MBLNR
AND MJAHR = LST_RE_STOCK-MJAHR
AND BUDAT_MKPF+0(6) <> LST_RE_STOCK-BUDAT_MKPF+0(6).
IF SY-SUBRC <> 0.

*         入庫取消処理されてない場合
**** START UPD 2015/03/03 ISID11 ****
*          IF LST_RE_STOCK-MBLNR_NEW IS INITIAL.
IF LST_RE_STOCK-MBLNR_INB IS INITIAL.
**** END UPD 2015/03/03 ISID11 ****
APPEND LINES OF LTD_STOCK TO O_TD_RE_DELIREVER.

ELSE.

*           ITAB:入出庫マニュアル処理済データ編集
PERFORM EDIT_MANU USING LST_RE_STOCK
CNS_ZKBUNCC_2
'M'
SPACE
000
SPACE
CHANGING O_TD_ALV_MANU.

ENDIF.

ELSE.

CLEAR:
LW_MSGTX.
MESSAGE E073(ZMEGSD01) WITH LST_RE_STOCK-MBLNR
LST_RE_STOCK-MJAHR
INTO LW_MSGTX.
*         マニュアルで部分入庫取消をしました(入出庫伝票 = &1
*         入出庫伝票年 = &2)

*         ITAB:入出庫マニュアル処理済データ編集
PERFORM EDIT_MANU USING LST_RE_STOCK
CNS_ZKBUNCC_2
'M'
'ZMEGSD01'
'073'
LW_MSGTX
CHANGING O_TD_ALV_MANU.

ENDIF.

ELSE.

CLEAR:
LW_MSGTX.

MESSAGE E072(ZMEGSD01) WITH LST_RE_STOCK-MBLNR
LST_RE_STOCK-MJAHR
INTO LW_MSGTX.
*       マニュアルで部分入庫取消をしました(入出庫伝票 = &1
*       入出庫伝票年 = &2)

*       ITAB:入出庫マニュアル処理済データ編集
PERFORM EDIT_MANU USING LST_RE_STOCK
CNS_ZKBUNCC_2
'M'
'ZMEGSD01'
'072'
LW_MSGTX
CHANGING O_TD_ALV_MANU.

ENDIF.

CLEAR:
LTD_STOCK.

ENDAT.

ENDLOOP.

ENDFORM.                    " EDIT_DELIVERYREVERSE_MANU
*&---------------------------------------------------------------------*
*&      Form  EDIT_MANU
*&---------------------------------------------------------------------*
*       ITAB:入出庫マニュアル処理済データ編集
*----------------------------------------------------------------------*
*      -->I_ST_STOCK        出庫確認データ
*      -->I_ZKBUNCC         処理区分
*      -->I_STATUS          更新区分
*      -->I_MSGID           メッセージクラス
*      -->I_MSGNO           メッセージNo
*      -->I_MSGTX           メッセージテキスト
*      <--O_TD_ALV_MANUAL   ITAB:入出庫マニュアル処理済データ
*----------------------------------------------------------------------*
FORM EDIT_MANU USING I_ST_STOCK      TYPE TYP_STOCK
I_ZKBUNCC       TYPE ZTEGSDT206-ZKBUNCC
I_STATUS        TYPE ZTEGSDT206-STATUS
I_MSGID         TYPE SY-MSGID
I_MSGNO         TYPE SY-MSGNO
I_MSGTX         TYPE ZTEGSDT206-MSGTX
CHANGING O_TD_ALV_MANU   TYPE TYP_TD_ERROR.

DATA:
LST_MANU      TYPE TYP_ERROR.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-OTHERS = ST_COUNT-OTHERS + 1.
**** END ADD 2015/03/03 ISID11 ****

CLEAR:
LST_MANU.

LST_MANU-KDAUF      = I_ST_STOCK-VGBEL.      "受注伝票番号
LST_MANU-MBLNR_OUTB = I_ST_STOCK-MBLNR.
"入出庫伝票番号(Outbound)
LST_MANU-MJAHR_OUTB = I_ST_STOCK-MJAHR.
"入出庫伝票年(Outbound)
LST_MANU-EBELN      = I_ST_STOCK-EBELN.      "購買伝票番号
LST_MANU-MBLNR_INB  = I_ST_STOCK-MBLNR_INB.  "入出庫伝票番号(Inbound)
LST_MANU-MJAHR_INB  = I_ST_STOCK-MJAHR_INB.  "入出庫伝票年(Inbound)
LST_MANU-STATUS     = I_STATUS.              "更新区分
LST_MANU-WERK_INB   = I_ST_STOCK-WERK_INB.   "入庫プラント
LST_MANU-WERK_OUTB  = I_ST_STOCK-WERK_OUTB.  "出荷プラント
LST_MANU-VBELN      = I_ST_STOCK-VBELN_IM.   "出荷伝票
LST_MANU-ZKBUNCC    = I_ZKBUNCC.             "処理区分
LST_MANU-MSGID      = I_MSGID.               "メッセージクラス
LST_MANU-MSGNO      = I_MSGNO.               "メッセージNo
LST_MANU-MSGTX      = I_MSGTX.               "メッセージテキスト

APPEND LST_MANU TO O_TD_ALV_MANU.

ENDFORM.                    " EDIT_MANU
*&---------------------------------------------------------------------*
*&      Form  REGET_RECEIVINGCANCEL
*&---------------------------------------------------------------------*
*       入庫取消再取込データの情報を追加取得
*----------------------------------------------------------------------*
*      -->I_SYST_DATE         システム日付
*      -->I_SYST_TIME         システム時刻
*      <--O_TD_RE_RECCANCEL   ITAB:入庫取消再取込データ
*      <--O_TD_ALV_ERROR      ITAB:入出庫連携エラーデータ
*      <--O_TD_ALV_MANU       ITAB:入出庫マニュアル処理済データ
*----------------------------------------------------------------------*
FORM REGET_RECEIVINGCANCEL
**** START DEL 2015/03/03 ISID11 ****
*         USING I_SYST_DATE        TYPE SY-DATUM
*               I_SYST_TIME        TYPE SY-UZEIT
**** END DEL 2015/03/03 ISID11 ****
CHANGING O_TD_RE_RECCANCEL  TYPE TYP_TD_STOCK
O_TD_ALV_ERROR     TYPE TYP_TD_ERROR
O_TD_ALV_MANU      TYPE TYP_TD_ERROR.

DATA:
LTD_CANCEL   TYPE TYP_TD_STOCK,  "ITAB:出庫取消元の伝票セグメント
LTD_ZTEGSDT203  TYPE TYP_TD_ZTEGSDT203,  "ITAB:販売データ
LTD_ZTEGSDT206  TYPE TYP_TD_ZTEGSDT206,  "ITAB:入出庫連携テーブル
LTD_DELIREVERINBOUND TYPE TYP_TD_STOCK,
"ITAB:入庫取消元の入出庫伝票(Outbound)
**** START ADD 2015/03/03 ISID11 ****
LTD_WERK_INB    TYPE TYP_TD_WERK_INB.     "取消元入庫プラント
**** END ADD 2015/03/03 ISID11 ****

* 入庫取消の入出庫伝票の明細情報検索
PERFORM REGET_MSEG_CANCEL USING O_TD_RE_RECCANCEL
CHANGING LTD_CANCEL.     "ITAB:伝票セグメント

* 受発注連携テーブルから受注情報検索
PERFORM REGET_ZTEGSDT203 USING LTD_CANCEL       "ITAB:販売出荷
CHANGING LTD_ZTEGSDT203.  "ITAB:販売データ

* 入出庫連携テーブルを検索し取消元の出荷伝票検索
PERFORM REGET_ZTEGSDT206_LIKP
USING LTD_ZTEGSDT203             "ITAB:販売データ
CHANGING LTD_ZTEGSDT206.            "ITAB:入出庫連携テーブル

* 入庫取消元の入出庫伝票(Outbound)の情報検索
PERFORM REGET_MSEG_INBOUND USING LTD_ZTEGSDT206
CHANGING LTD_DELIREVERINBOUND.

**** START ADD 2015/03/03 ISID11 ****
* 取消元入庫プラントを取得
PERFORM GET_WERK_INB USING LTD_CANCEL      "ITAB:伝票セグメント
CHANGING LTD_WERK_INB.   "取消元入庫プラント
**** END ADD 2015/03/03 ISID11 ****

* 入庫取消再取込データの情報の編集
PERFORM EDIT_RECEIVINGCANCEL_REGET USING LTD_CANCEL
LTD_ZTEGSDT203
LTD_ZTEGSDT206
LTD_DELIREVERINBOUND
**** START ADD 2015/03/03 ISID11 ****
LTD_WERK_INB
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_RE_RECCANCEL
O_TD_ALV_ERROR.

* マニュアル入庫取消が有り無しの判定処理を行う
PERFORM EDIT_RECEIVINGCANCEL_MANU CHANGING O_TD_RE_RECCANCEL
O_TD_ALV_MANU.

ENDFORM.                    " REGET_RECEIVINGCANCEL
*&---------------------------------------------------------------------*
*&      Form  REGET_MSEG_CANCEL
*&---------------------------------------------------------------------*
*       入庫取消の入出庫伝票の明細情報検索
*----------------------------------------------------------------------*
*      -->I_TD_RE_RECCANCEL  ITAB:出庫取消元の伝票セグメント
*      <--O_TD_CANCEL        ITAB:伝票セグメント
*----------------------------------------------------------------------*
FORM REGET_MSEG_CANCEL USING I_TD_RE_RECCANCEL TYPE TYP_TD_STOCK
CHANGING O_TD_CANCEL TYPE TYP_TD_STOCK.

DATA:
LTD_STOCK  TYPE TYP_TD_STOCK.

LTD_STOCK = I_TD_RE_RECCANCEL.
SORT LTD_STOCK BY MBLNR_INB ASCENDING
MJAHR_INB ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_STOCK
COMPARING MBLNR_INB
MJAHR_INB.

SELECT MBLNR                    "入出庫伝票番号
MJAHR                    "入出庫伝票年
ZEILE                    "入出庫伝票の明細
SMBLN                    "入出庫伝票番号
SJAHR                    "入出庫伝票年
SMBLP                    "入出庫伝票の明細
EBELN                    "購買伝票番号
EBELP                    "購買伝票の明細番号
BUDAT_MKPF               "伝票の転記日付
MATNR                    "品目コード
INTO CORRESPONDING FIELDS OF TABLE O_TD_CANCEL
FROM MSEG
FOR ALL ENTRIES IN LTD_STOCK
WHERE MBLNR = LTD_STOCK-MBLNR_INB    "入出庫伝票番号(Inbound)
AND MJAHR = LTD_STOCK-MJAHR_INB.   "入出庫伝票年(Inbound)

* データが存在した場合、「ITAB:伝票セグメント」をソートし、処理続行
IF SY-SUBRC = 0.

SORT O_TD_CANCEL BY MBLNR ASCENDING   "入出庫伝票番号
MJAHR ASCENDING   "入出庫伝票年
ZEILE ASCENDING.  "入出庫伝票の明細

ENDIF.

ENDFORM.                    " REGET_MSEG_CANCEL
*&---------------------------------------------------------------------*
*&      Form  REGET_ZTEGSDT203
*&---------------------------------------------------------------------*
*       受発注連携テーブルから受注情報検索
*----------------------------------------------------------------------*
*      -->I_TD_CANCEL      ITAB:伝票セグメント
*      <--O_TD_ZTEGSDT203  ITAB:販売データ
*----------------------------------------------------------------------*
FORM REGET_ZTEGSDT203 USING I_TD_CANCEL TYPE TYP_TD_STOCK
CHANGING O_TD_ZTEGSDT203 TYPE TYP_TD_ZTEGSDT203.

DATA:
LTD_CANCEL   TYPE TYP_TD_STOCK.

IF I_TD_CANCEL IS INITIAL.

RETURN.

ENDIF.

LTD_CANCEL = I_TD_CANCEL.
SORT LTD_CANCEL BY EBELN ASCENDING
EBELP ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_CANCEL
COMPARING EBELN
EBELP.

SELECT VBELN                        "販売伝票
POSNR                        "販売伝票明細
EBELN                        "購買伝票番号
EBELP                        "購買伝票の明細番号
KNTTP                        "勘定設定カテゴリ
INTO TABLE O_TD_ZTEGSDT203
FROM ZTEGSDT203
FOR ALL ENTRIES IN LTD_CANCEL
WHERE EBELN = LTD_CANCEL-EBELN     "購買伝票番号
AND EBELP = LTD_CANCEL-EBELP     "購買伝票の明細番号
AND ZKBUNCC = CNS_ZKBUNCC_3      "固定値「3」(受注登録)
AND STATUS  = 'C'.               "固定値「C」(完了)

IF SY-SUBRC = 0.

SORT O_TD_ZTEGSDT203 BY EBELN ASCENDING
EBELP ASCENDING.

ENDIF.

ENDFORM.                    " REGET_ZTEGSDT203
*&---------------------------------------------------------------------*
*&      Form  REGET_ZTEGSDT206_LIKP
*&---------------------------------------------------------------------*
*       入出庫連携テーブルを検索し取消元の出荷伝票検索
*----------------------------------------------------------------------*
*      -->I_TD_ZTEGSDT203  ITAB:販売データ
*      <--O_TD_ZTEGSDT206  ITAB:入出庫連携テーブル
*----------------------------------------------------------------------*
FORM REGET_ZTEGSDT206_LIKP
USING I_TD_ZTEGSDT203 TYPE TYP_TD_ZTEGSDT203
CHANGING O_TD_ZTEGSDT206 TYPE TYP_TD_ZTEGSDT206.

DATA:
LTD_ZTEGSDT203 TYPE TYP_TD_ZTEGSDT203.

IF I_TD_ZTEGSDT203 IS INITIAL.

RETURN.

ENDIF.

LTD_ZTEGSDT203 = I_TD_ZTEGSDT203.
SORT LTD_ZTEGSDT203 BY VBELN ASCENDING
EBELN ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_ZTEGSDT203
COMPARING VBELN
EBELN.

SELECT ZTEGSDT206~KDAUF             "受注伝票番号
ZTEGSDT206~MBLNR_OUTB        "入出庫伝票番号(Outbound)
ZTEGSDT206~MJAHR_OUTB        "入出庫伝票年(Outbound)
ZTEGSDT206~EBELN             "購買伝票番号
ZTEGSDT206~MBLNR_INB         "入出庫伝票番号(Inbound)
ZTEGSDT206~MJAHR_INB         "入出庫伝票年(Inbound)
ZTEGSDT206~VBELN             "出荷伝票
LIKP~VBTYP                   "販売管理伝票カテゴリ
INTO CORRESPONDING FIELDS OF TABLE O_TD_ZTEGSDT206
FROM ZTEGSDT206
INNER JOIN LIKP
ON ZTEGSDT206~VBELN = LIKP~VBELN
FOR ALL ENTRIES IN LTD_ZTEGSDT203
WHERE KDAUF     = LTD_ZTEGSDT203-VBELN      "受注伝票番号
AND EBELN     = LTD_ZTEGSDT203-EBELN.     "購買伝票番号

IF SY-SUBRC = 0.

SORT O_TD_ZTEGSDT206 BY KDAUF     ASCENDING
EBELN     ASCENDING
MBLNR_INB ASCENDING
MJAHR_INB ASCENDING.

ENDIF.

ENDFORM.                    " REGET_ZTEGSDT206_LIKP
*&---------------------------------------------------------------------*
*&      Form  EDIT_RECEIVINGCANCEL_REGET
*&---------------------------------------------------------------------*
*       入庫取消再取込データの情報の編集
*----------------------------------------------------------------------*
*      -->I_TD_CANCEL         ITAB:出庫取消元の伝票セグメント
*      -->I_TD_ZTEGSDT203     ITAB:販売データ
*      -->I_TD_ZTEGSDT206     ITAB:入出庫連携テーブル
*      -->I_TD_DELIREVER      ITAB:入庫取消元の入出庫伝票(Outbound)
*      <--O_TD_RE_RECCANCEL   ITAB:入庫取消再取込データ
*      <--O_TD_ALV_ERROR      ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM EDIT_RECEIVINGCANCEL_REGET
USING I_TD_CANCEL        TYPE TYP_TD_STOCK
I_TD_ZTEGSDT203    TYPE TYP_TD_ZTEGSDT203
I_TD_ZTEGSDT206    TYPE TYP_TD_ZTEGSDT206
I_TD_DELIREVER     TYPE TYP_TD_STOCK
**** START ADD 2015/03/03 ISID11 ****
I_TD_WERK_INB      TYPE TYP_TD_WERK_INB
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_RE_RECCANCEL  TYPE TYP_TD_STOCK
O_TD_ALV_ERROR     TYPE TYP_TD_ERROR.

DATA:
LST_STOCK       TYPE TYP_STOCK,
LW_TABIX        TYPE SY-TABIX,
LW_MSGTX        TYPE ZTEGSDT206-MSGTX,
LST_ZTEGSDT203  TYPE TYP_ZTEGSDT203,
LST_ZTEGSDT206  TYPE TYP_ZTEGSDT206,
**** START ADD 2015/03/03 ISID11 ****
LST_WERK_INB    TYPE TYP_WERK_INB,
**** END ADD 2015/03/03 ISID11 ****
LST_DELIREVER   TYPE TYP_STOCK.

FIELD-SYMBOLS:
<FS_CANCEL>    TYPE TYP_STOCK.

LOOP AT O_TD_RE_RECCANCEL ASSIGNING <FS_CANCEL>.

LW_TABIX = SY-TABIX.

*   入庫取消の入出庫伝票の明細情報を取得
CLEAR:
LST_STOCK.

READ TABLE I_TD_CANCEL INTO LST_STOCK
WITH KEY MBLNR = <FS_CANCEL>-MBLNR_INB  "入出庫伝票番号(I)
MJAHR = <FS_CANCEL>-MJAHR_INB  "入出庫伝票年(I)
**** START ADD 2015/03/03 ISID11 ****
*                   ZEILE = <FS_CANCEL>-ZEILE_INB  "入出庫伝票の明細
**** END ADD 2015/03/03 ISID11 ****
BINARY SEARCH.
*   設計書未定
*               ZEILE = lst_ZSEGSD0019-

IF SY-SUBRC = 0.

**** START UPD 2015/03/03 ISID11 ****
*      <FS_CANCEL>-MBLNR_INB      = LST_STOCK-SMBLN.
*      "取消元の入出庫伝票番号(Inbound)
*      <FS_CANCEL>-MJAHR_INB      = LST_STOCK-SJAHR.
*      "取消元の入出庫伝票年(Inbound)
<FS_CANCEL>-MBLNR_NEW      = LST_STOCK-SMBLN.
"取消元の入出庫伝票番号(Inbound)
<FS_CANCEL>-MJAHR_NEW      = LST_STOCK-SJAHR.
"取消元の入出庫伝票年(Inbound)
**** END UPD 2015/03/03 ISID11 ****

<FS_CANCEL>-ZEILE_INB      = LST_STOCK-SMBLP.
"取消元の入出庫伝票の明細(Inbound)
<FS_CANCEL>-EBELN   = LST_STOCK-EBELN.   "購買伝票番号
<FS_CANCEL>-EBELP   = LST_STOCK-EBELP.   "購買伝票の明細番号
<FS_CANCEL>-BUDAT_MKPF = LST_STOCK-BUDAT_MKPF. "伝票の転記日付
<FS_CANCEL>-MATNR      = LST_STOCK-MATNR.      "品目コード

**** START ADD 2015/03/03 ISID11 ****
CLEAR:
LST_WERK_INB.

READ TABLE I_TD_WERK_INB INTO LST_WERK_INB
WITH KEY MBLNR  = LST_STOCK-SMBLN "取消元の入出庫伝票番号
MJAHR  = LST_STOCK-SJAHR "取消元の入出庫伝票年
*                 ZEILE  = LST_STOCK-SMBLP "取消元の入出庫伝票の明細
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_CANCEL>-WERK_INB = LST_WERK_INB-WERKS.   "入庫プラント

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

ELSE.

CLEAR:
LW_MSGTX.

MESSAGE E067(ZMEGSD01) WITH <FS_CANCEL>-MBLNR_INB
<FS_CANCEL>-MJAHR_INB
INTO LW_MSGTX.
*     入出庫伝票を取得できません(入出庫伝票 = &1 入出庫伝票年 = &2)

*     エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_CANCEL>
CNS_ZKBUNCC_3
'ZMEGSD01'
'067'
**** START ADD 2015/04/24 ISID11 ****
<FS_CANCEL>-MBLNR_INB   "メッセージ変数
<FS_CANCEL>-MJAHR_INB   "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
SPACE
CHANGING O_TD_ALV_ERROR.

*     データが存在しない場合処理、該当レコードを削除次のレコード処理へ
DELETE O_TD_RE_RECCANCEL INDEX LW_TABIX.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

*   受発注連携テーブルから受注情報を取得
CLEAR:
LST_ZTEGSDT203.

READ TABLE I_TD_ZTEGSDT203 INTO LST_ZTEGSDT203
WITH KEY EBELN = <FS_CANCEL>-EBELN        "購買伝票番号
EBELP = <FS_CANCEL>-EBELP        "購買伝票の明細番号
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_CANCEL>-VGBEL = LST_ZTEGSDT203-VBELN.    "受注伝票番号
<FS_CANCEL>-VGPOS = LST_ZTEGSDT203-POSNR.    "受注明細番号
<FS_CANCEL>-KNTTP = LST_ZTEGSDT203-KNTTP.    "受注明細番号

ELSE.

CLEAR:
LW_MSGTX.

MESSAGE E074(ZMEGSD01) WITH <FS_CANCEL>-EBELN
<FS_CANCEL>-EBELP
INTO LW_MSGTX.
*     受発注連携されてない(購買伝票 = &1 明細 = &2)

*     エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_CANCEL>
CNS_ZKBUNCC_3
'ZMEGSD01'
'074'
**** START ADD 2015/04/24 ISID11 ****
<FS_CANCEL>-EBELN   "メッセージ変数
<FS_CANCEL>-EBELP   "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX
SPACE
CHANGING O_TD_ALV_ERROR.

*     データが存在しない場合処理、該当レコードを削除、次のレコード処理へ
DELETE O_TD_RE_RECCANCEL INDEX LW_TABIX.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

*   入出庫連携テーブルを検索し取消元の出荷伝票を取得
CLEAR:
LST_ZTEGSDT206.
READ TABLE I_TD_ZTEGSDT206 INTO LST_ZTEGSDT206
WITH KEY KDAUF     = <FS_CANCEL>-VGBEL      "受注伝票番号
EBELN     = <FS_CANCEL>-EBELN      "購買伝票番号
**** START UPD 2015/03/03 ISID11 ****
*               MBLNR_INB = <FS_CANCEL>-MBLNR_INB
*                                   "取消元の入出庫伝票番号(Inbound)
*               MJAHR_INB = <FS_CANCEL>-MJAHR_INB
*                                   "取消元の入出庫伝票年(Inbound)
MBLNR_INB = <FS_CANCEL>-MBLNR_NEW
"取消元の入出庫伝票番号(Inbound)
MJAHR_INB = <FS_CANCEL>-MJAHR_NEW
"取消元の入出庫伝票年(Inbound)
**** END UPD 2015/03/03 ISID11 ****
BINARY SEARCH.

IF SY-SUBRC = 0.

<FS_CANCEL>-SMBLN    = LST_ZTEGSDT206-MBLNR_OUTB.
"取消元の入出庫伝票番号(Outbound)
<FS_CANCEL>-SJAHR    = LST_ZTEGSDT206-MJAHR_OUTB.
"取消元の入出庫伝票年(Outbound)
<FS_CANCEL>-VBELN_IM = LST_ZTEGSDT206-VBELN. "出荷伝票
<FS_CANCEL>-VBTYP    = LST_ZTEGSDT206-VBTYP. "販売管理伝票カテゴリ

ELSE.

MESSAGE E071(ZMEGSD01) WITH
**** START UPD 2015/03/03 ISID11 ****
*                                  <FS_CANCEL>-MBLNR_INB
*                                  <FS_CANCEL>-MJAHR_INB
<FS_CANCEL>-MBLNR_NEW
<FS_CANCEL>-MJAHR_NEW
**** END UPD 2015/03/03 ISID11 ****
INTO LW_MSGTX.
*     入出庫連携されてない(入出庫伝票 = &1 入出庫伝票年 = &2)
*     エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_CANCEL>
CNS_ZKBUNCC_3      "処理区分
'ZMEGSD01'         "メッセージクラス
'071'              "メッセージNo
**** START ADD 2015/04/24 ISID11 ****
<FS_CANCEL>-MBLNR_NEW   "メッセージ変数
<FS_CANCEL>-MJAHR_NEW  "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX           "メッセージテキスト
SPACE
CHANGING O_TD_ALV_ERROR.

*     データが存在しない場合処理、該当レコードを削除次のレコード処理へ
DELETE O_TD_RE_RECCANCEL INDEX LW_TABIX.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

*   入庫取消元の入出庫伝票(Outbound)の情報を取得
CLEAR:
LST_DELIREVER.

READ TABLE I_TD_DELIREVER INTO LST_DELIREVER
WITH KEY
*             MBLNR = <FS_CANCEL>-SMBLN  "取消元の入出庫伝票番号(Out)
*             MJAHR = <FS_CANCEL>-SJAHR  "取消元の入出庫伝票年(Out)
*             ZEILE = <FS_CANCEL>-SMBLP  "取消元の入出庫伝票の明細(Out)
MBLNR = <FS_CANCEL>-MBLNR_INB "取消元の入出庫伝票番号(Out)
MJAHR = <FS_CANCEL>-MJAHR_INB "取消元の入出庫伝票年(Out)
BINARY SEARCH.

IF SY-SUBRC = 0.

*      <FS_CANCEL>-MBLNR      = LST_DELIREVER-SMBLN.
*      <FS_CANCEL>-MJAHR      = LST_DELIREVER-SJAHR.
*      <FS_CANCEL>-ZEILE      = LST_DELIREVER-SMBLP.
<FS_CANCEL>-MBLNR      = LST_DELIREVER-MBLNR.
<FS_CANCEL>-MJAHR      = LST_DELIREVER-MJAHR.

CLEAR:
<FS_CANCEL>-MBLNR_INB,
<FS_CANCEL>-MJAHR_INB.

<FS_CANCEL>-BUDAT_MKPF = LST_DELIREVER-BUDAT_MKPF.

ELSE.

MESSAGE E067(ZMEGSD01) WITH
*                                  <FS_CANCEL>-SMBLN
*                                  <FS_CANCEL>-SJAHR
<FS_CANCEL>-MBLNR_INB
<FS_CANCEL>-MJAHR_INB
INTO LW_MSGTX.
*     入出庫伝票を取得できません(入出庫伝票 = &1 入出庫伝票年 = &2)
*     エラーテーブル編集
PERFORM EDIT_ERROR USING <FS_CANCEL>
CNS_ZKBUNCC_3      "処理区分
'ZMEGSD01'         "メッセージクラス
'067'              "メッセージNo
**** START ADD 2015/04/24 ISID11 ****
<FS_CANCEL>-MBLNR_INB   "メッセージ変数
<FS_CANCEL>-MJAHR_INB   "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
**** END ADD 2015/04/24 ISID11 ****
LW_MSGTX           "メッセージテキスト
SPACE
CHANGING O_TD_ALV_ERROR.

*     データが存在しない場合処理、該当レコードを削除次のレコード処理へ
DELETE O_TD_RE_RECCANCEL INDEX LW_TABIX.

**** START ADD 2015/03/03 ISID11 ****
ST_COUNT-ERROR = ST_COUNT-ERROR + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.
**** END ADD 2015/03/03 ISID11 ****

CONTINUE.

ENDIF.

ENDLOOP.

ENDFORM.                    " EDIT_RECEIVINGCANCEL_REGET
*&---------------------------------------------------------------------*
*&      Form  EDIT_RECEIVINGCANCEL_MANU
*&---------------------------------------------------------------------*
*       マニュアル入庫取消が有り無しの判定処理を行う
*----------------------------------------------------------------------*
*      <--O_TD_RE_RECCANCEL   ITAB:入庫取消再取込データ
*      <--O_TD_ALV_MANU       ITAB:入出庫マニュアル処理済データ
*----------------------------------------------------------------------*
FORM EDIT_RECEIVINGCANCEL_MANU
CHANGING O_TD_RE_RECCANCEL  TYPE TYP_TD_STOCK
O_TD_ALV_MANU    TYPE TYP_TD_ERROR.

DATA:
LST_STOCK    TYPE TYP_STOCK,
LST_RE_STOCK TYPE TYP_STOCK,
LTD_STOCK    TYPE TYP_TD_STOCK,
LTD_RE_STOCK TYPE TYP_TD_STOCK,
LW_MSGTX     TYPE ZTEGSDT206-MSGTX.

LTD_RE_STOCK = O_TD_RE_RECCANCEL.
SORT LTD_RE_STOCK BY  MBLNR ASCENDING
MJAHR ASCENDING
ZEILE ASCENDING.

CLEAR:
O_TD_RE_RECCANCEL.

LOOP AT LTD_RE_STOCK INTO LST_STOCK.

LST_RE_STOCK = LST_STOCK.

APPEND LST_RE_STOCK TO LTD_STOCK.

AT END OF MJAHR.


*     入庫取消処理に転記日の月が不一致の場合
*     (入出庫伝票番号(Inbound)の転記日の年月が同一ではない場合)
DELETE LTD_STOCK
WHERE MBLNR = LST_RE_STOCK-MBLNR
AND MJAHR = LST_RE_STOCK-MJAHR
AND BUDAT_MKPF+0(6) <> LST_RE_STOCK-BUDAT_MKPF+0(6).
IF SY-SUBRC <> 0.

*       入庫取消処理されてない場合
**** START UPD 2015/03/03 ISID11 ****
*        IF LST_RE_STOCK-MBLNR IS INITIAL.
IF LST_RE_STOCK-MBLNR_INB IS INITIAL.
**** END UPD 2015/03/03 ISID11 ****
APPEND LINES OF LTD_STOCK TO O_TD_RE_RECCANCEL.

ELSE.

*         ITAB:入出庫マニュアル処理済データ編集
PERFORM EDIT_MANU USING LST_RE_STOCK
CNS_ZKBUNCC_3
'M'
SPACE
000
SPACE
CHANGING O_TD_ALV_MANU.

ENDIF.

ELSE.

CLEAR:
LW_MSGTX.
MESSAGE E073(ZMEGSD01) WITH LST_RE_STOCK-MBLNR
LST_RE_STOCK-MJAHR
INTO LW_MSGTX.
*       マニュアルで部分入庫取消をしました(入出庫伝票 = &1
*       入出庫伝票年 = &2)

*       ITAB:入出庫マニュアル処理済データ編集
PERFORM EDIT_MANU USING LST_RE_STOCK
CNS_ZKBUNCC_3
'M'
'ZMEGSD01'
'073'
LW_MSGTX
CHANGING O_TD_ALV_MANU.

ENDIF.

CLEAR:
LTD_STOCK.

ENDAT.

ENDLOOP.

ENDFORM.                    " EDIT_RECEIVINGCANCEL_MANU
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA_SELECTED
*&---------------------------------------------------------------------*
*       入出庫更新処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE         システム日付
*      -->I_SYST_TIME         システム時刻
*      <--O_TD_RE_DELIISSUE   ITAB:出庫確認再取込データ
*      <--O_TD_RE_DELIREVER   ITAB:出庫取消再取込データ
*      <--O_TD_RE_RECCANCEL   ITAB:入庫取消再取込データ
*      <--O_TD_ALV_ERROR      ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM EDIT_DATA_SELECTED
USING I_SYST_DATE       TYPE SY-DATUM
I_SYST_TIME       TYPE SY-UZEIT
CHANGING O_TD_RE_DELIISSUE TYPE TYP_TD_STOCK
O_TD_RE_DELIREVER TYPE TYP_TD_STOCK
O_TD_RE_RECCANCEL TYPE TYP_TD_STOCK
O_TD_ALV_ERROR    TYPE TYP_TD_ERROR.

**** START ADD 2015/03/03 ISID11 ****
DATA:
**** START ADD BY ISID REN 2015/07/06 ****
LTD_D_C       TYPE TYP_TD_STOCK,
**** END ADD BY ISID REN 2015/07/06 ****
LW_ERROR_FLG TYPE FLAG.
**** END ADD 2015/03/03 ISID11 ****

* 「ITAB:出庫確認再取込データ」存在する場合のみ行う
IF O_TD_RE_DELIISSUE IS NOT INITIAL.

*   入庫更新処理
**** START UPD 2015/03/03 ISID11 ****
*    PERFORM UPDATE_RE_DELIVERYISSUE USING I_SYST_DATE
*                                          I_SYST_TIME
*                                 CHANGING O_TD_RE_DELIISSUE
*                                          O_TD_ALV_ERROR.
PERFORM UPDATE_DELIVERYISSUE USING I_SYST_DATE
I_SYST_TIME
**** START ADD 2015/03/03 ISID11 ****
SPACE
**** END ADD 2015/03/03 ISID11 ****
CHANGING O_TD_RE_DELIISSUE
**** START ADD BY ISID REN 2015/07/06 ****
LTD_D_C
**** END ADD BY ISID REN 2015/07/06 ****
O_TD_ALV_ERROR
LW_ERROR_FLG.
**** END UPD 2015/03/03 ISID11 ****

ENDIF.

* 「ITAB:出庫取消再取込データ」存在する場合のみ行う
IF O_TD_RE_DELIREVER IS NOT INITIAL.

*   出庫取消処理
**** START UPD 2015/03/03 ISID11 ****
*    PERFORM UPDATE_RE_DELIVERYREVERSE USING I_SYST_DATE
*                                            I_SYST_TIME
*                                   CHANGING O_TD_RE_DELIREVER
*                                            O_TD_ALV_ERROR.
PERFORM UPDATE_DELIVERYREVERSE USING I_SYST_DATE
I_SYST_TIME
SPACE
CHANGING O_TD_RE_DELIREVER
O_TD_ALV_ERROR
LW_ERROR_FLG.
**** END ADD 2015/03/03 ISID11 ****

ENDIF.

* 「ITAB:入庫取消再取込データ」存在する場合のみ行う
IF O_TD_RE_RECCANCEL IS NOT INITIAL.

*   入庫取消処理
**** START UPD 2015/03/03 ISID11 ****
*    PERFORM UPDATE_RE_RECEIVINGCANCEL USING I_SYST_DATE
*                                            I_SYST_TIME
*                                   CHANGING O_TD_RE_RECCANCEL
*                                            O_TD_ALV_ERROR.
PERFORM UPDATE_RECEIVINGCANCEL USING I_SYST_DATE
I_SYST_TIME
SPACE
CHANGING O_TD_RE_RECCANCEL
O_TD_ALV_ERROR
LW_ERROR_FLG.
**** END ADD 2015/03/03 ISID11 ****

ENDIF.

ENDFORM.                    " EDIT_DATA_SELECTED
**** START DEL 2015/03/03 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  UPDATE_RE_DELIVERYISSUE
*&---------------------------------------------------------------------*
*       入庫更新処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE        システム日付
*      -->I_SYST_TIME        システム時刻
*      <--O_TD_RE_DELIISSUE  ITAB:出庫確認再取込データ
*      <--O_TD_ALV_ERROR     ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
*FORM UPDATE_RE_DELIVERYISSUE
*                USING I_SYST_DATE       TYPE SY-DATUM
*                      I_SYST_TIME       TYPE SY-UZEIT
*             CHANGING O_TD_RE_DELIISSUE TYPE TYP_TD_STOCK
*                      O_TD_ALV_ERROR    TYPE TYP_TD_ERROR.
*
*  DATA:
*    LTD_LOCK   TYPE TYP_TD_STOCK,
*    LST_LOCK   TYPE TYP_STOCK,
*    LW_SUBRC   TYPE SY-SUBRC ,
*    LW_MSGTX   TYPE ZTEGSDT206-MSGTX,
*    LST_GOODSMVT_HEADER TYPE BAPI2017_GM_HEAD_01,
*                             "入出庫伝票ヘッダデータ
*    LST_GOODSMVT_CODE   TYPE BAPI2017_GM_CODE,
*                   "在庫移動に対するコードのトランザクションへの割当
*    LW_TESTRUN          TYPE BAPI2017_GM_GEN-TESTRUN,
*                   "在庫移動シミュレーション
*    LST_GOODSMVT_ITEM   TYPE BAPI2017_GM_ITEM_CREATE,
*    LTD_GOODSMVT_ITEM   TYPE STANDARD TABLE OF BAPI2017_GM_ITEM_CREATE,
*                   "入出庫伝票明細
*    LW_MATERIALDOCUMENT TYPE BAPI2017_GM_HEAD_RET-MAT_DOC,
*                   "入出庫伝票番号
*    LW_MATDOCUMENTYEAR  TYPE BAPI2017_GM_HEAD_RET-DOC_YEAR,
*                   "入出庫伝票年度
*    LTD_RETURN          TYPE STANDARD TABLE OF BAPIRET2,
*                   "リターンメッセージ
*    LST_RETURN          TYPE BAPIRET2.
*
*  FIELD-SYMBOLS:
*    <FS_DELIISSUE>  TYPE TYP_STOCK.
*
***** START DEL 2015/03/03 ISID11 ****
*** ソート:入出庫伝票番号(Outbound)
**  SORT O_TD_RE_DELIISSUE BY MBLNR ASCENDING
**                         MJAHR ASCENDING.
***** END DEL 2015/03/03 ISID11 ****
*
*  LOOP AT O_TD_RE_DELIISSUE ASSIGNING <FS_DELIISSUE>.
*    CLEAR:
*      LW_SUBRC.
*
**   処理区分追加QA.
*    <FS_DELIISSUE>-ZKBUNCC = CNS_ZKBUNCC_1.
*
**   入出庫連携テーブルのロック処理
*    PERFORM LOCK_EZZTEGSDT206 USING <FS_DELIISSUE>
*                           CHANGING LTD_LOCK
*                                    O_TD_ALV_ERROR
*                                    LW_SUBRC.
*
**   ロック失敗の場合、次のレコード処理へ
*    IF LW_SUBRC IS NOT INITIAL.
*
*      CONTINUE.
*
*    ENDIF.
*
***** START UPD 2015/03/03 ISID11 ****
**    AT NEW MJAHR.
*    AT NEW MJAHR_skey.
***** END UPD 2015/03/03 ISID11 ****
*
**     BAPIデータの編集
**     入出庫伝票ヘッダデータ
*      CLEAR:
*        LST_GOODSMVT_HEADER.
*
*      LST_GOODSMVT_HEADER-PSTNG_DATE = <FS_DELIISSUE>-BUDAT_MKPF.
*      "伝票の転記日付
*      LST_GOODSMVT_HEADER-DOC_DATE   = I_SYST_DATE.  "伝票の伝票日付
*      LST_GOODSMVT_HEADER-PR_UNAME   = SY-UNAME.     "ユーザ名
*
**     在庫移動に対するコードのトランザクションへの割当
*      CLEAR:
*        LST_GOODSMVT_CODE.
*
*      LST_GOODSMVT_CODE-GM_CODE      = '01'.         "BAPI 在庫移動MB01
*
**     在庫移動シミュレーション
*      CLEAR:
*        LW_TESTRUN.                                  "本実行
*
*    ENDAT.
*
**   入出庫伝票明細
*    CLEAR:
*      LST_GOODSMVT_ITEM.
*
*  LST_GOODSMVT_ITEM-MATERIAL  = <FS_DELIISSUE>-MATNR.    "品目コード
*  LST_GOODSMVT_ITEM-PLANT     = <FS_DELIISSUE>-WERK_INB. "入庫プラント
*  LST_GOODSMVT_ITEM-STGE_LOC  = <FS_DELIISSUE>-LGORT.    "入庫保管場所
*  LST_GOODSMVT_ITEM-MOVE_TYPE = '101'.                 "固定値「101」
*  LST_GOODSMVT_ITEM-STCK_TYPE = <FS_DELIISSUE>-INSMK.  "在庫タイプ
*  LST_GOODSMVT_ITEM-ENTRY_QNT = <FS_DELIISSUE>-MENGE.  "入出庫数量
*  LST_GOODSMVT_ITEM-PO_NUMBER = <FS_DELIISSUE>-EBELN.  "購買発注番号
*  LST_GOODSMVT_ITEM-PO_ITEM   = <FS_DELIISSUE>-EBELP.  "購買伝票明細
*  LST_GOODSMVT_ITEM-MVT_IND   = 'B'.                   "固定値「B」
*
*    APPEND LST_GOODSMVT_ITEM TO LTD_GOODSMVT_ITEM.
*
**   BAPI　「BAPI_GOODSMVT_CREATE」をコールし、入庫処理を行う
***** START UPD 2015/03/03 ISID11 ****
**    AT END OF MJAHR.
*    AT END OF MJAHR_skey.
***** END UPD 2015/03/03 ISID11 ****
*
*      CLEAR:
*        LW_MATERIALDOCUMENT,
*        LW_MATDOCUMENTYEAR,
*        LTD_RETURN.
*
*      CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
*        EXPORTING
*          GOODSMVT_HEADER  = LST_GOODSMVT_HEADER
*          GOODSMVT_CODE    = LST_GOODSMVT_CODE
*          TESTRUN          = LW_TESTRUN
*        IMPORTING
*          MATERIALDOCUMENT = LW_MATERIALDOCUMENT
*          MATDOCUMENTYEAR  = LW_MATDOCUMENTYEAR
*        TABLES
*          GOODSMVT_ITEM    = LTD_GOODSMVT_ITEM
*          RETURN           = LTD_RETURN.
*
**     入庫処理のリターン判定処理
*      LOOP AT LTD_RETURN INTO LST_RETURN
*                         WHERE TYPE = CNS_MSG_E
*                            OR TYPE = CNS_MSG_A.
*
*        CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*
*        LW_MSGTX = LST_RETURN-MESSAGE.
**       エラーテーブル編集
*        PERFORM EDIT_ERROR USING <FS_DELIISSUE>
*                                 <FS_DELIISSUE>-ZKBUNCC
*                                 LST_RETURN-ID
*                                 LST_RETURN-NUMBER
*                                 LW_MSGTX
*                                 SPACE
*                        CHANGING O_TD_ALV_ERROR.
*
*      ENDLOOP.
*
*      IF SY-SUBRC = 0.
*
*        CONTINUE.
*
*      ELSE.
*
*        <FS_DELIISSUE>-MBLNR_INB = LW_MATERIALDOCUMENT.
*        "取消元の入出庫伝票番号(Inbound)
*        <FS_DELIISSUE>-MJAHR_INB = LW_MATDOCUMENTYEAR.
*        "取消元の入出庫伝票年(Inbound)
*
*      ENDIF.
*
**     入出庫連携テーブルの更新処理
*      PERFORM UPDATE_ZTEGSDT206_REDELIISSUE USING I_SYST_DATE
*                                                  I_SYST_TIME
*                                                  LTD_LOCK.
*
*    ENDAT.
*
*  ENDLOOP.
*
*ENDFORM.                    " UPDATE_RE_DELIVERYISSUE
**** END DEL 2015/03/03 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGSDT206_REDELIISSUE
*&---------------------------------------------------------------------*
*       入出庫連携テーブルの更新処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      -->I_TD_LOCK       ロック
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGSDT206_REDELIISSUE USING I_SYST_DATE TYPE SY-DATUM
I_SYST_TIME TYPE SY-UZEIT
**** START UPD 2015/03/03 ISID11 ****
*                                         I_TD_LOCK   TYPE TYP_TD_STOCK.
I_TD_EXIST TYPE TYP_TD_ZTEGSDT206_INSERT
I_ST_REDELIISSUE TYPE TYP_STOCK.
**** END UPD 2015/03/03 ISID11 ****

DATA:
**** START UPD 2015/03/03 ISID11 ****
*    LTD_LOCK        TYPE TYP_TD_STOCK,
*    LST_STOCK       TYPE TYP_STOCK.
*  LTD_LOCK = I_TD_LOCK.
*  SORT LTD_LOCK BY VGBEL ASCENDING
*                   MBLNR ASCENDING
*                   MJAHR ASCENDING.
*
*  DELETE ADJACENT DUPLICATES FROM LTD_LOCK
*                        COMPARING VGBEL
*                                  MBLNR
*                                  MJAHR.
*
*  SELECT *
*    INTO TABLE LTD_ZTEGSDT206
*    FROM ZTEGSDT206
*     FOR ALL ENTRIES IN LTD_LOCK
*   WHERE KDAUF      = LTD_LOCK-VGBEL    "受注伝票番号
*     AND MBLNR_OUTB = LTD_LOCK-MBLNR    "入出庫伝票番号(Outbound)
*     AND MJAHR_OUTB = LTD_LOCK-MJAHR.   "入出庫伝票年(Outbound)

*  IF SY-SUBRC = 0.

LTD_ZTEGSDT206  TYPE TYP_TD_ZTEGSDT206_INSERT,
LTD_ZTEGSDT206_UPDATE  TYPE TYP_TD_ZTEGSDT206_INSERT.

LTD_ZTEGSDT206 = I_TD_EXIST.
DELETE LTD_ZTEGSDT206
WHERE KDAUF      <> I_ST_REDELIISSUE-VGBEL  "受注伝票番号
OR MBLNR_OUTB <> I_ST_REDELIISSUE-MBLNR  "入出庫伝票番号(Outbound)
OR MJAHR_OUTB <> I_ST_REDELIISSUE-MJAHR  "入出庫伝票年(Outbound)
OR EBELN      <> I_ST_REDELIISSUE-EBELN  "購買伝票番号
OR MBLNR_INB  <> SPACE  "取消元の入出庫伝票番号(Inbound)
OR MJAHR_INB  <> SPACE. "取消元の入出庫伝票年(Inbound)

IF LTD_ZTEGSDT206 IS NOT INITIAL.
**** END UPD 2015/03/03 ISID11 ****

*   テーブルから削除し
DELETE ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206.

*   データ更新に失敗した場合、ロックを解除し、メッセージを出力し、
*   処理を終了する
IF SY-SUBRC <> 0.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*     ロックを解除し
PERFORM UNLOCK_ZTEGSDT206.
**** START DEL 2015/03/03 ISID11 ****
*                                USING  I_TD_LOCK.
**** END DEL 2015/03/03 ISID11 ****
MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*     データ更新に失敗しました(TBL = &1)

ENDIF.

ENDIF.

**** START DEL 2015/03/03 ISID11 ****
*  LOOP AT I_TD_LOCK INTO LST_STOCK.
**** END DEL 2015/03/03 ISID11 ****

*   更新処理を行う
PERFORM UPDATE_ZTEGSDT206_STATUS USING
**** START UPD 2015/03/03 ISID11 ****
*                                           LST_STOCK
I_ST_REDELIISSUE
**** END UPD 2015/03/03 ISID11 ****
LTD_ZTEGSDT206
I_SYST_DATE
I_SYST_TIME
CHANGING LTD_ZTEGSDT206_UPDATE.
**** START DEL 2015/03/03 ISID11 ****
*
*  ENDLOOP.
*
**** END DEL 2015/03/03 ISID11 ****

* 更新処理
IF LTD_ZTEGSDT206_UPDATE IS NOT INITIAL.

INSERT ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206_UPDATE
ACCEPTING DUPLICATE KEYS.

* データ更新に失敗した場合、BAPIロールバックし、ロックを解除し、
* メッセージを出力し、処理を終了する
IF SY-SUBRC <> 0.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*   ロックを解除し
PERFORM UNLOCK_ZTEGSDT206.
**** START DEL 2015/03/03 ISID11 ****
*                               USING I_TD_LOCK.
**** END DEL 2015/03/03 ISID11 ****

MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*   データ更新に失敗しました(TBL = &1)

ENDIF.

ENDIF.

**** START DEL 2015/03/30 ISID11 ****
** データ登録/更新に成功した場合、BAPIコミットし、ロックの解除処理へ
*  CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*    EXPORTING
*      WAIT = 'X'.
*
** ロックを解除し
*  PERFORM UNLOCK_ZTEGSDT206.
**** END DEL 2015/03/30 ISID11 ****
**** START DEL 2015/03/03 ISID11 ****
*                            USING  I_TD_LOCK.
**** END DEL 2015/03/03 ISID11 ****

ENDFORM.                    " UPDATE_ZTEGSDT206_REDELIISSUE
**** START DEL 2015/03/03 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  UPDATE_RE_DELIVERYREVERSE
*&---------------------------------------------------------------------*
*       出庫取消処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE        システム日付
*      -->I_SYST_TIME        システム時刻
*      <--O_TD_RE_DELIREVER  ITAB:出庫取消再取込データ
*      <--O_TD_ALV_ERROR     ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
*FORM UPDATE_RE_DELIVERYREVERSE
*      USING I_SYST_DATE       TYPE SY-DATUM
*            I_SYST_TIME       TYPE SY-UZEIT
*   CHANGING O_TD_RE_DELIREVER TYPE TYP_TD_STOCK
*            O_TD_ALV_ERROR    TYPE TYP_TD_ERROR.
*
*  DATA:
*    LW_SUBRC   TYPE SY-SUBRC ,
*    LTD_LOCK   TYPE TYP_TD_STOCK,
*    LST_LOCK   TYPE TYP_STOCK,
*    LW_MSGTX   TYPE ZTEGSDT206-MSGTX,
*    LW_MBLNR_INB  TYPE ZTEGSDT206-MBLNR_INB,  "At Newの処理同じ
*    LW_MJAHR_INB  TYPE ZTEGSDT206-MJAHR_INB,  "At Newの処理同じ
*    LW_MATERIALDOCUMENT    TYPE BAPI2017_GM_HEAD_02-MAT_DOC,
*                                "入出庫伝票番号
*    LW_MATDOCUMENTYEAR     TYPE BAPI2017_GM_HEAD_02-DOC_YEAR,
*                                "入出庫伝票年度
*    LW_GOODSMVT_PSTNG_DATE TYPE BAPI2017_GM_HEAD_02-PSTNG_DATE,
*                                "転記日付
*    LST_GOODSMVT_HEADRET   TYPE BAPI2017_GM_HEAD_RET,
*                                "入出庫伝票番号/入出庫伝票会計年度
*    LTD_RETURN          TYPE STANDARD TABLE OF BAPIRET2,
*                                "リターンメッセージ
*    LST_RETURN          TYPE BAPIRET2.
*
*  FIELD-SYMBOLS:
*    <FS_DELIREVER>  TYPE TYP_STOCK.
*
** ソート: 取消元の入出庫伝票番号（Inbound）
*  SORT O_TD_RE_DELIREVER BY MBLNR_INB ASCENDING
*                            MJAHR_INB ASCENDING.
*
*  LOOP AT O_TD_RE_DELIREVER ASSIGNING <FS_DELIREVER>.
*
*    CLEAR:
*      LW_SUBRC.
*
**   前レコードの取消元の入出庫伝票番号（Inbound）を保存
*    AT FIRST.
*      LW_MBLNR_INB = <FS_DELIREVER>-MBLNR_INB.
*      LW_MJAHR_INB = <FS_DELIREVER>-MJAHR_INB.
*    ENDAT.
**   処理区分追加QA.
*    <FS_DELIREVER>-ZKBUNCC = CNS_ZKBUNCC_2.
*
**   出庫取消連携データテーブルのロック処理
*    PERFORM LOCK_EZZTEGSDT206 USING <FS_DELIREVER>
*                           CHANGING LTD_LOCK
*                                    O_TD_ALV_ERROR
*                                    LW_SUBRC.
*
**   ロック失敗の場合、次のレコード処理へ
*    IF LW_SUBRC IS NOT INITIAL.
*
*      CONTINUE.
*
*    ENDIF.
*
**   At end of
*    IF LW_MBLNR_INB <> <FS_DELIREVER>-MBLNR_INB
*    OR LW_MJAHR_INB <> <FS_DELIREVER>-MJAHR_INB.
*
*      LW_MATERIALDOCUMENT    = <FS_DELIREVER>-MBLNR_INB.
*      "取消元の入出庫伝票番号（Inbound）
*      LW_MATDOCUMENTYEAR     = <FS_DELIREVER>-MJAHR_INB.
*      "取消元の入出庫伝票年（Inbound）
*      LW_GOODSMVT_PSTNG_DATE = <FS_DELIREVER>-BUDAT_MKPF.
*      "伝票の転記日付
*      CLEAR:
*        LST_GOODSMVT_HEADRET,
*        LTD_RETURN.
*
*      CALL FUNCTION 'BAPI_GOODSMVT_CANCEL'
*        EXPORTING
*          MATERIALDOCUMENT    = LW_MATERIALDOCUMENT
*          MATDOCUMENTYEAR     = LW_MATDOCUMENTYEAR
*          GOODSMVT_PSTNG_DATE = LW_GOODSMVT_PSTNG_DATE
*        IMPORTING
*          GOODSMVT_HEADRET    = LST_GOODSMVT_HEADRET
*        TABLES
*          RETURN              = LTD_RETURN.
*
**     入庫処理のリターン判定処理
*      LOOP AT LTD_RETURN INTO LST_RETURN
*                         WHERE TYPE = CNS_MSG_E
*                            OR TYPE = CNS_MSG_A.
*
*        CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*
*        LW_MSGTX = LST_RETURN-MESSAGE.
**       エラーテーブル編集
*        PERFORM EDIT_ERROR USING <FS_DELIREVER>
*                                 <FS_DELIREVER>-ZKBUNCC
*                                 LST_RETURN-ID
*                                 LST_RETURN-NUMBER
*                                 LW_MSGTX
*                                 SPACE
*                        CHANGING O_TD_ALV_ERROR.
*
*      ENDLOOP.
*
*      IF SY-SUBRC = 0.
*
*        CONTINUE.
*
*      ELSE.
*
*        <FS_DELIREVER>-MBLNR_INB = LW_MATERIALDOCUMENT.
*        "取消元の入出庫伝票番号(Inbound)
*        <FS_DELIREVER>-MJAHR_INB = LW_MATDOCUMENTYEAR.
*        "取消元の入出庫伝票年(Inbound)
*
*      ENDIF.
*
**     入出庫連携テーブルの更新処理
*      PERFORM UPDATE_ZTEGSDT206_REDELIREVER USING I_SYST_DATE
*                                                  I_SYST_TIME
*                                                  LTD_LOCK.
*
*      LW_MBLNR_INB = <FS_DELIREVER>-MBLNR_INB.
*      LW_MJAHR_INB = <FS_DELIREVER>-MJAHR_INB.
*
*    ENDIF.
*
*  ENDLOOP.
*
*ENDFORM.                    " UPDATE_RE_DELIVERYREVERSE
*&---------------------------------------------------------------------*
*&      Form  UPDATE_RE_RECEIVINGCANCEL
*&---------------------------------------------------------------------*
*       入庫取消処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE        システム日付
*      -->I_SYST_TIME        システム時刻
*      <--O_TD_RE_RECCANCEL  ITAB:入庫取消再取込データ
*      <--O_TD_ALV_ERROR     ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
*FORM UPDATE_RE_RECEIVINGCANCEL
*     USING I_SYST_DATE       TYPE SY-DATUM
*           I_SYST_TIME       TYPE SY-UZEIT
*  CHANGING O_TD_RE_RECCANCEL TYPE TYP_TD_STOCK
*           O_TD_ALV_ERROR    TYPE TYP_TD_ERROR.
*
*  DATA:
*    LW_SUBRC   TYPE SY-SUBRC ,
*    LTD_LOCK   TYPE TYP_TD_STOCK,
*    LST_LOCK   TYPE TYP_STOCK,
*    LW_MSGTX   TYPE ZTEGSDT206-MSGTX,
*    LW_MSGID   TYPE SY-MSGID,
*    LW_MSGNO   TYPE SY-MSGNO,
*    LW_VBELN_IM TYPE MSEG-VBELN_IM,
*    LW_VBELN   TYPE LIKP-VBELN,      "出荷伝票
*    LW_BUDAT   TYPE SY-DATLO,        "伝票の転記日付
*    LW_TCODE   TYPE SY-TCODE,        "トランザクションコード
*    LW_VBTYP   TYPE LIKP-VBTYP,      "販売管理伝票カテゴリ
*    LST_EMKPF  TYPE EMKPF,           "MMIM: 入出庫転記用の一般 FM
*    LTD_MESG   TYPE STANDARD TABLE OF MESG, "メッセージ集計先
*    LST_MESG   TYPE MESG.            "メッセージ集計先
*
*
*  FIELD-SYMBOLS:
*    <FS_RECCANCEL>  TYPE TYP_STOCK.
*
** ソート: 出荷伝票
*  SORT O_TD_RE_RECCANCEL BY VBELN_IM ASCENDING.
*
*  LOOP AT O_TD_RE_RECCANCEL ASSIGNING <FS_RECCANCEL>.
*
*    CLEAR:
*      LW_SUBRC.
*
**   前レコードの出荷伝票を保存
*    AT FIRST.
*      LW_VBELN_IM = <FS_RECCANCEL>-VBELN_IM.
*    ENDAT.
*
**   処理区分追加QA.
*    <FS_RECCANCEL>-ZKBUNCC = CNS_ZKBUNCC_3.
*
**   入庫取消処理のロック処理
*    PERFORM LOCK_EZZTEGSDT206_CANCEL USING <FS_RECCANCEL>
*                                  CHANGING LTD_LOCK
*                                           O_TD_ALV_ERROR
*                                           LW_SUBRC.
*
**   ロック失敗の場合、次のレコード処理へ
*    IF LW_SUBRC IS NOT INITIAL.
*
*      CONTINUE.
*
*    ENDIF.
*
**   At end of
*    IF LW_VBELN_IM <> <FS_RECCANCEL>-VBELN_IM.
*
*      LW_VBELN = <FS_RECCANCEL>-VBELN_IM.       "出荷伝票
*      LW_BUDAT = <FS_RECCANCEL>-BUDAT_MKPF.     "伝票の転記日付
*      LW_TCODE = 'VL09'.                        "トランザクションコード
*      LW_VBTYP = <FS_RECCANCEL>-VBTYP.          "販売管理伝票カテゴリ
*
*      CALL FUNCTION 'WS_REVERSE_GOODS_ISSUE'
*        EXPORTING
*          I_VBELN                   = LW_VBELN
*          I_BUDAT                   = LW_BUDAT
*          I_TCODE                   = LW_TCODE
*          I_VBTYP                   = LW_VBTYP
*        IMPORTING
*          ES_EMKPF                  = LST_EMKPF
*        TABLES
*          T_MESG                    = LTD_MESG
*        EXCEPTIONS
*          ERROR_REVERSE_GOODS_ISSUE = 1
*          OTHERS                    = 2.
*
*      IF SY-SUBRC <> 0.
*
*        CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*
*        MESSAGE ID SY-MSGID TYPE CNS_MSG_E NUMBER SY-MSGNO
*                   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
*                   INTO LW_MSGTX.
*
**       エラーテーブル編集
*        PERFORM EDIT_ERROR USING <FS_RECCANCEL>
*                                 <FS_RECCANCEL>-ZKBUNCC
*                                 SY-MSGID
*                                 SY-MSGNO
*                                 LW_MSGTX
*                                 SPACE
*                        CHANGING O_TD_ALV_ERROR.
*
*        CONTINUE.
*
*      ENDIF.
*
*      LOOP AT LTD_MESG INTO LST_MESG
*                       WHERE MSGTY = CNS_MSG_E
*                          OR MSGTY = CNS_MSG_A.
*
*        CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*
*        LW_MSGTX = LST_MESG-TEXT.
*        LW_MSGID  = LST_MESG-ARBGB.
*        LW_MSGNO  = LST_MESG-TXTNR.
**       エラーテーブル編集
*        PERFORM EDIT_ERROR USING <FS_RECCANCEL>
*                                 <FS_RECCANCEL>-ZKBUNCC
*                                 LW_MSGID
*                                 LW_MSGNO
*                                 LW_MSGTX
*                                 SPACE
*                        CHANGING O_TD_ALV_ERROR.
*
*      ENDLOOP.
*
*      IF SY-SUBRC = 0.
*
*        CONTINUE.
*
*      ELSE.
*
*        <FS_RECCANCEL>-MBLNR_INB = LST_EMKPF-MBLNR.
*        "取消元の入出庫伝票番号(Inbound)
*        <FS_RECCANCEL>-MJAHR_INB = LST_EMKPF-MJAHR.
*        "取消元の入出庫伝票年(Inbound)
*
*      ENDIF.
*
**     入出庫連携テーブルの更新処理
*      PERFORM UPDATE_ZTEGSDT206_RERECCANCEL USING I_SYST_DATE
*                                                  I_SYST_TIME
*                                                  LTD_LOCK.
*
*      LW_VBELN_IM = <FS_RECCANCEL>-VBELN_IM.
*
*    ENDIF.
*
*  ENDLOOP.
*
*ENDFORM.                    " UPDATE_RE_RECEIVINGCANCEL
**** END DEL 2015/03/03 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGSDT206_REDELIREVER
*&---------------------------------------------------------------------*
*       入出庫連携テーブルの更新処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      -->I_TD_LOCK       ロック
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGSDT206_REDELIREVER USING I_SYST_DATE TYPE SY-DATUM
I_SYST_TIME TYPE SY-UZEIT
**** START UPD 2015/03/03 ISID11 ****
*                                         I_TD_LOCK   TYPE TYP_TD_STOCK.
I_TD_EXIST TYPE TYP_TD_ZTEGSDT206_INSERT
I_ST_REDELIISSUE TYPE TYP_STOCK.
**** END UPD 2015/03/03 ISID11 ****

DATA:
**** START UPD 2015/03/03 ISID11 ****
*    LTD_LOCK        TYPE TYP_TD_STOCK,
*    LST_STOCK       TYPE TYP_STOCK.
*  LTD_LOCK = I_TD_LOCK.
*  SORT LTD_LOCK BY EBELN     ASCENDING
*                   MBLNR_NEW ASCENDING
*                   MJAHR_NEW ASCENDING.
*
*  DELETE ADJACENT DUPLICATES FROM LTD_LOCK
*                        COMPARING EBELN
*                                  MBLNR_NEW
*                                  MJAHR_NEW.
*
*  SELECT *
*    INTO TABLE LTD_ZTEGSDT206
*    FROM ZTEGSDT206
*     FOR ALL ENTRIES IN LTD_LOCK
*   WHERE EBELN     = LTD_LOCK-EBELN        "購買伝票番号
*     AND MBLNR_INB = LTD_LOCK-MBLNR_NEW    "入出庫伝票番号(Inbound)
*     AND MJAHR_INB = LTD_LOCK-MJAHR_NEW.   "入出庫伝票番号(Inbound)
*
*  IF SY-SUBRC = 0.

LTD_ZTEGSDT206  TYPE TYP_TD_ZTEGSDT206_INSERT,
LTD_ZTEGSDT206_UPDATE  TYPE TYP_TD_ZTEGSDT206_INSERT.

LTD_ZTEGSDT206 = I_TD_EXIST.
DELETE LTD_ZTEGSDT206
WHERE KDAUF      <> I_ST_REDELIISSUE-VGBEL  "受注伝票番号
OR MBLNR_OUTB <> I_ST_REDELIISSUE-MBLNR  "入出庫伝票番号(Outbound)
OR MJAHR_OUTB <> I_ST_REDELIISSUE-MJAHR  "入出庫伝票年(Outbound)
OR EBELN      <> I_ST_REDELIISSUE-EBELN  "購買伝票番号
OR MBLNR_INB <> SPACE   "入出庫伝票番号Inbound
OR MJAHR_INB <> '0000'. "入出庫伝票番号Inbound

IF LTD_ZTEGSDT206 IS NOT INITIAL.
**** END UPD 2015/03/03 ISID11 ****

*   テーブルから削除し
DELETE ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206.

*   データ更新に失敗した場合、ロックを解除し、メッセージを出力し、
*   処理を終了する
IF SY-SUBRC <> 0.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*     ロックを解除し
PERFORM UNLOCK_ZTEGSDT206.
**** START DEL 2015/03/03 ISID11 ****
*                                USING  I_TD_LOCK.
**** END DEL 2015/03/03 ISID11 ****

MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*     データ更新に失敗しました(TBL = &1)

ENDIF.

**** START ADD 2015/03/03 ISID11 ****
SORT LTD_ZTEGSDT206 BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING
EBELN      ASCENDING
MBLNR_INB  ASCENDING
MJAHR_INB  ASCENDING.
**** END ADD 2015/03/03 ISID11 ****

ENDIF.

**** START DEL 2015/03/03 ISID11 ****
*  LOOP AT I_TD_LOCK INTO LST_STOCK.
**** END DEL 2015/03/03 ISID11 ****

*   更新処理を行う
PERFORM UPDATE_ZTEGSDT206_EBELN USING
**** START UPD 2015/03/03 ISID11 ****
*                                          LST_STOCK
I_ST_REDELIISSUE
**** END UPD 2015/03/03 ISID11 ****
LTD_ZTEGSDT206
I_SYST_DATE
I_SYST_TIME
CHANGING LTD_ZTEGSDT206_UPDATE.

**** START DEL 2015/03/03 ISID11 ****
*  ENDLOOP.
**** END DEL 2015/03/03 ISID11 ****

* 更新処理
IF LTD_ZTEGSDT206_UPDATE IS NOT INITIAL.
INSERT ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206_UPDATE
ACCEPTING DUPLICATE KEYS.

* データ更新に失敗した場合、BAPIロールバックし、ロックを解除し、
* メッセージを出力し、処理を終了する
IF SY-SUBRC <> 0.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*   ロックを解除し
PERFORM UNLOCK_ZTEGSDT206.
**** START UPD 2015/03/03 ISID11 ****
*                            USING I_TD_LOCK.
**** END UPD 2015/03/03 ISID11 ****

MESSAGE S024(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*   データ更新に失敗しました(TBL = &1)

LEAVE LIST-PROCESSING.

ENDIF.
ENDIF.
* データ登録/更新に成功した場合、BAPIコミットし、ロックの解除処理へ
CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
EXPORTING
WAIT = 'X'.

* ロックを解除し
PERFORM UNLOCK_ZTEGSDT206.
**** START UPD 2015/03/03 ISID11 ****
*                          USING I_TD_LOCK.
**** END UPD 2015/03/03 ISID11 ****

ENDFORM.                    " UPDATE_ZTEGSDT206_REDELIREVER
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGSDT206_EBELN
*&---------------------------------------------------------------------*
*       更新処理を行う
*----------------------------------------------------------------------*
*      -->I_ST_STOCK    ロック
*      -->I_TD_EXIST    存在レコード
*      -->I_SYST_DATE   システム日付
*      -->I_SYST_TIME   システム時刻
*      <--O_TD_UPDATE   更新対象
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGSDT206_EBELN
USING I_ST_STOCK  TYPE TYP_STOCK
I_TD_EXIST  TYPE TYP_TD_ZTEGSDT206_INSERT
I_SYST_DATE TYPE SY-DATUM
I_SYST_TIME TYPE SY-UZEIT
CHANGING O_TD_UPDATE TYPE TYP_TD_ZTEGSDT206_INSERT.

DATA:
LST_ZTEGSDT206  TYPE ZTEGSDT206.

**** START UPD 2015/03/03 ISID11 ****
*  LOOP AT I_TD_EXIST INTO LST_ZTEGSDT206.
CLEAR:
LST_ZTEGSDT206.

READ TABLE I_TD_EXIST INTO LST_ZTEGSDT206
WITH KEY KDAUF      = I_ST_STOCK-VGBEL  "受注伝票番号
MBLNR_OUTB = I_ST_STOCK-MBLNR  "入出庫伝票番号(Outbound)
MJAHR_OUTB = I_ST_STOCK-MJAHR  "入出庫伝票年(Outbound)
EBELN      = I_ST_STOCK-EBELN  "購買伝票番号
MBLNR_INB  = SPACE             "入出庫伝票番号Inbound
MJAHR_INB  = '0000'            "入出庫伝票番号Inbound
BINARY SEARCH.

IF SY-SUBRC = 0.
**** END UPD 2015/03/03 ISID11 ****
*    WHERE EBELN     = I_ST_STOCK-EBELN      "購買伝票番号
*      AND MBLNR_INB = I_ST_STOCK-MBLNR_NEW  "入出庫伝票番号(Inbound)
*      AND MJAHR_INB = I_ST_STOCK-MJAHR_NEW. "入出庫伝票番号(Inbound)

LST_ZTEGSDT206-KDAUF        = I_ST_STOCK-VGBEL.
"受注伝票番号
LST_ZTEGSDT206-MBLNR_OUTB   = I_ST_STOCK-MBLNR.
"入出庫伝票番号(Outbound)
LST_ZTEGSDT206-MJAHR_OUTB   = I_ST_STOCK-MJAHR.
"入出庫伝票年(Outbound)
LST_ZTEGSDT206-MBLNR_INB    = I_ST_STOCK-MBLNR_INB.
"入出庫伝票番号(In)
LST_ZTEGSDT206-MJAHR_INB    = I_ST_STOCK-MJAHR_INB.
"入出庫伝票番号(In)
LST_ZTEGSDT206-WERK_INB     = I_ST_STOCK-WERK_INB.
"入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = I_ST_STOCK-WERK_OUTB.
"出荷プラント
LST_ZTEGSDT206-VBELN        = I_ST_STOCK-VBELN_IM.
"出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = I_ST_STOCK-ZKBUNCC.
"処理区分
LST_ZTEGSDT206-STATUS       = 'C'.
LST_ZTEGSDT206-MSGID        = SPACE.
LST_ZTEGSDT206-MSGNO        = SPACE.
LST_ZTEGSDT206-MSGTX        = SPACE.
LST_ZTEGSDT206-Z_MOD_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_MOD_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_MOD_USERID = SY-UNAME.

APPEND LST_ZTEGSDT206 TO O_TD_UPDATE.

**** START UPD 2015/03/03 ISID11 ****
*    CLEAR:
*      LST_ZTEGSDT206.
*
*  ENDLOOP.
ENDIF.
**** END UPD 2015/03/03 ISID11 ****

ENDFORM.                    " UPDATE_ZTEGSDT206_EBELN
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGSDT206_RERECCANCEL
*&---------------------------------------------------------------------*
*       入出庫連携テーブルの更新処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      -->I_TD_LOCK       ロック
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGSDT206_RERECCANCEL USING I_SYST_DATE TYPE SY-DATUM
I_SYST_TIME TYPE SY-UZEIT
**** START UPD 2015/03/03 ISID11 ****
*                                         I_TD_LOCK   TYPE TYP_TD_STOCK.
I_TD_EXIST TYPE TYP_TD_ZTEGSDT206_INSERT
I_ST_RECCANCEL TYPE TYP_STOCK.
**** END UPD 2015/03/03 ISID11 ****

DATA:
**** START UPD 2015/03/03 ISID11 ****
*    LTD_LOCK        TYPE TYP_TD_STOCK,
*    LST_STOCK       TYPE TYP_STOCK,
*  LTD_LOCK = I_TD_LOCK.
*  SORT LTD_LOCK BY VGBEL ASCENDING
*                   MBLNR ASCENDING
*                   MJAHR ASCENDING.
*
*  DELETE ADJACENT DUPLICATES FROM LTD_LOCK
*                        COMPARING VGBEL
*                                  MBLNR
*                                  MJAHR.
*
*  SELECT *
*    INTO TABLE LTD_ZTEGSDT206
*    FROM ZTEGSDT206
**     FOR ALL ENTRIES IN LTD_LOCK
*   WHERE KDAUF      = LTD_LOCK-VGBEL    "受注伝票番号
*     AND MBLNR_OUTB = LTD_LOCK-MBLNR    "入出庫伝票番号(Outbound)
*     AND MJAHR_OUTB = LTD_LOCK-MJAHR.   "入出庫伝票年(Outbound)
*
*  IF SY-SUBRC = 0.
LTD_ZTEGSDT206  TYPE TYP_TD_ZTEGSDT206_INSERT,
LTD_ZTEGSDT206_UPDATE  TYPE TYP_TD_ZTEGSDT206_INSERT.

LTD_ZTEGSDT206 = I_TD_EXIST.

DELETE LTD_ZTEGSDT206
WHERE KDAUF      <> I_ST_RECCANCEL-VGBEL  "受注伝票番号
OR MBLNR_OUTB <> SPACE  "入出庫伝票番号(Outbound)
OR MJAHR_OUTB <> '0000'  "入出庫伝票年(Outbound)
OR EBELN      <> I_ST_RECCANCEL-EBELN  "受注伝票番号
OR MBLNR_INB  <> I_ST_RECCANCEL-MBLNR  "入出庫伝票番号(Outbound)
OR MJAHR_INB  <> I_ST_RECCANCEL-MJAHR. "入出庫伝票年(Outbound)

IF LTD_ZTEGSDT206 IS NOT INITIAL.
**** END UPD 2015/03/03 ISID11 ****

*   テーブルから削除し
DELETE ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206.

*   データ更新に失敗した場合、ロックを解除し、メッセージを出力し、
*   処理を終了する
IF SY-SUBRC <> 0.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*     ロックを解除し
PERFORM UNLOCK_ZTEGSDT206.
**** START DEL 2015/03/03 ISID11 ****
*                               USING  I_TD_LOCK.
**** END DEL 2015/03/03 ISID11 ****

MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*     データ更新に失敗しました(TBL = &1)

ENDIF.

ENDIF.

**** START UPD 2015/03/03 ISID11 ****
*  LOOP AT I_TD_LOCK INTO LST_STOCK.

**   更新処理を行う
*  PERFORM UPDATE_ZTEGSDT206_STATUS USING
*                                           LST_STOCK
*                                         LTD_ZTEGSDT206
*                                         I_SYST_DATE
*                                         I_SYST_TIME
*                                CHANGING LTD_ZTEGSDT206_UPDATE.
**** START DEL 2015/03/03 ISID11 ****
*  ENDLOOP.
*       更新区分が固定値「U」(更新)の場合、更新処理を行う
PERFORM UPDATE_ZTEGSDT206_STATUSREC
USING I_ST_RECCANCEL
LTD_ZTEGSDT206
I_SYST_DATE
I_SYST_TIME
CHANGING LTD_ZTEGSDT206_UPDATE.
**** END UPD 2015/03/03 ISID11 ****

* 更新処理
IF LTD_ZTEGSDT206_UPDATE IS NOT INITIAL.

INSERT ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206_UPDATE
ACCEPTING DUPLICATE KEYS.

* データ更新に失敗した場合、BAPIロールバックし、ロックを解除し、
* メッセージを出力し、処理を終了する
IF SY-SUBRC <> 0.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*   ロックを解除し
**** START UPD 2015/03/03 ISID11 ****
*      PERFORM UNLOCK_ZTEGSDT206_CANCEL USING  I_TD_LOCK.
*                                             I_ST_RECCANCEL.
PERFORM UNLOCK_ZTEGSDT206.
**** END UPD 2015/03/03 ISID11 ****

MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*   データ更新に失敗しました(TBL = &1)

ENDIF.

ENDIF.

* データ登録/更新に成功した場合、BAPIコミットし、ロックの解除処理へ
CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
EXPORTING
WAIT = 'X'.

* ロックを解除し
PERFORM UNLOCK_ZTEGSDT206.
**** START DEL 2015/03/03 ISID11 ****
*                                 USING I_TD_LOCK.
**** END DEL 2015/03/03 ISID11 ****

ENDFORM.                    " UPDATE_ZTEGSDT206_RERECCANCEL
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ERROR_MANU
*&---------------------------------------------------------------------*
*       エラー&マニュアル取消のデータ更新
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      <--O_TD_ALV_ERROR  ITAB:入出庫連携エラーデータ
*      <--O_TD_ALV_MANU   ITAB:入出庫マニュアル処理済データ
*----------------------------------------------------------------------*
FORM UPDATE_ERROR_MANU USING I_SYST_DATE     TYPE SY-DATUM
I_SYST_TIME     TYPE SY-UZEIT
CHANGING O_TD_ALV_ERROR  TYPE TYP_TD_ERROR
O_TD_ALV_MANU   TYPE TYP_TD_ERROR.

* エラーデータを入出庫連携テーブルに更新する
PERFORM UPDATE_ERROR_REGET USING I_SYST_DATE
I_SYST_TIME
CHANGING O_TD_ALV_ERROR.

* マニュアル入庫取消したデータを入出庫連携テーブルに更新する
PERFORM UPDATE_MANU_REGET USING I_SYST_DATE
I_SYST_TIME
CHANGING O_TD_ALV_ERROR
O_TD_ALV_MANU.

CALL FUNCTION 'DEQUEUE_ALL'.

ENDFORM.                    " UPDATE_ERROR_MANU
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ERROR_REGET
*&---------------------------------------------------------------------*
*       エラーデータを入出庫連携テーブルに更新する
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      <--O_TD_ALV_ERROR  ITAB:入出庫連携エラーデータ
*----------------------------------------------------------------------*
FORM UPDATE_ERROR_REGET USING I_SYST_DATE     TYPE SY-DATUM
I_SYST_TIME     TYPE SY-UZEIT
CHANGING O_TD_ALV_ERROR  TYPE TYP_TD_ERROR.

DATA:
LST_ERROR             TYPE TYP_ERROR,
LST_ZTEGSDT206        TYPE ZTEGSDT206,
LTD_ZTEGSDT206_UPDATE TYPE TYP_TD_ZTEGSDT206_INSERT,
LTD_ERROR_OUT         TYPE TYP_TD_ZTEGSDT206_INSERT, "入庫取消
LTD_ERROR_IN          TYPE TYP_TD_ZTEGSDT206_INSERT. "出庫取消

**** START ADD 2015/03/03 ISID11 ****
IF O_TD_ALV_ERROR IS INITIAL.

RETURN.

ENDIF.
**** END ADD 2015/03/03 ISID11 ****

* 処理区分が固定値「3」(入庫取消)の場合
PERFORM GET_ZKBUNCC_CANCEL  USING O_TD_ALV_ERROR
CHANGING LTD_ERROR_OUT.

* 処理区分が固定値「1」(出庫確認)と固定値「2」(出庫取消)の場合
PERFORM GET_ZKBUNCC_DELI  USING O_TD_ALV_ERROR
CHANGING LTD_ERROR_IN.

LOOP AT O_TD_ALV_ERROR INTO LST_ERROR.

CASE LST_ERROR-ZKBUNCC.
*     処理区分が固定値「3」(入庫取消)の場合
WHEN '3'.
**** START UPD 2015/03/03 ISID11 ****
*        LOOP AT LTD_ERROR_OUT INTO LST_ZTEGSDT206
*                        WHERE EBELN     = LST_ERROR-EBELN
*                          AND MBLNR_INB = LST_ERROR-MBLNR_INB
*                          AND MJAHR_INB = LST_ERROR-MJAHR_INB.
CLEAR:
LST_ZTEGSDT206.

READ TABLE LTD_ERROR_OUT INTO LST_ZTEGSDT206
WITH KEY KDAUF      = LST_ERROR-KDAUF
MBLNR_OUTB = SPACE
MJAHR_OUTB = '0000'
EBELN      = LST_ERROR-EBELN
MBLNR_INB  = LST_ERROR-MBLNR_INB
MJAHR_INB  = LST_ERROR-MJAHR_INB
BINARY SEARCH.

IF SY-SUBRC = 0.
**** END UPD 2015/03/03 ISID11 ****


LST_ZTEGSDT206-KDAUF        = LST_ERROR-KDAUF. "受注伝票番号

LST_ZTEGSDT206-MBLNR_OUTB   = LST_ERROR-MBLNR_OUTB.
"入出庫伝票番号(Outbound)
LST_ZTEGSDT206-MJAHR_OUTB   = LST_ERROR-MJAHR_OUTB.
"入出庫伝票番号(Outbound)
LST_ZTEGSDT206-WERK_INB     = LST_ERROR-WERK_INB.
"入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = LST_ERROR-WERK_OUTB.
"出荷プラント
LST_ZTEGSDT206-VBELN        = LST_ERROR-VBELN.   "出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = LST_ERROR-ZKBUNCC. "処理区分
LST_ZTEGSDT206-STATUS       = 'E'.                "固定値「E」
LST_ZTEGSDT206-MSGID        = LST_ERROR-MSGID.
"メッセージクラス
LST_ZTEGSDT206-MSGNO        = LST_ERROR-MSGNO.
"メッセージNo
**** START ADD 2015/04/24 ISID11 ****
"メッセージ変数
LST_ZTEGSDT206-MSGV1        = LST_ERROR-MSGV1.
LST_ZTEGSDT206-MSGV2        = LST_ERROR-MSGV2.
LST_ZTEGSDT206-MSGV3        = LST_ERROR-MSGV3.
LST_ZTEGSDT206-MSGV4        = LST_ERROR-MSGV4.
**** END ADD 2015/04/24 ISID11 ****
LST_ZTEGSDT206-MSGTX        = LST_ERROR-MSGTX.
"メッセージテキスト
LST_ZTEGSDT206-Z_MOD_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_MOD_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_MOD_USERID = SY-UNAME.

APPEND LST_ZTEGSDT206 TO LTD_ZTEGSDT206_UPDATE.

**** START UPD 2015/03/03 ISID11 ****
*          CLEAR:
*            LST_ZTEGSDT206.
*
*        ENDLOOP.
ENDIF.
**** END UPD 2015/03/03 ISID11 ****

*     処理区分が固定値「1」(出庫確認)と固定値「2」(出庫取消)の場合
WHEN '1'
OR '2'.

**** START UPD 2015/03/03 ISID11 ****
*        LOOP AT LTD_ERROR_IN INTO LST_ZTEGSDT206
*                    WHERE KDAUF      = LST_ERROR-KDAUF
*                      AND MBLNR_OUTB = LST_ERROR-MBLNR_OUTB
*                      AND MJAHR_OUTB = LST_ERROR-MJAHR_OUTB.
CLEAR:
LST_ZTEGSDT206.

READ TABLE LTD_ERROR_IN INTO LST_ZTEGSDT206
WITH KEY KDAUF      = LST_ERROR-KDAUF
MBLNR_OUTB = LST_ERROR-MBLNR_OUTB
MJAHR_OUTB = LST_ERROR-MJAHR_OUTB
EBELN      = LST_ERROR-EBELN
MBLNR_INB  = SPACE
MJAHR_INB  = '0000'
BINARY SEARCH.
IF SY-SUBRC = 0.
**** END UPD 2015/03/03 ISID11 ****

LST_ZTEGSDT206-EBELN        = LST_ERROR-EBELN. "購買伝票番号
LST_ZTEGSDT206-MBLNR_INB    = LST_ERROR-MBLNR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-MJAHR_INB    = LST_ERROR-MJAHR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-WERK_INB     = LST_ERROR-WERK_INB.
"入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = LST_ERROR-WERK_OUTB.
"出荷プラント
LST_ZTEGSDT206-VBELN        = LST_ERROR-VBELN.   "出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = LST_ERROR-ZKBUNCC. "処理区分
LST_ZTEGSDT206-STATUS       = 'E'.                "固定値「E」
LST_ZTEGSDT206-MSGID        = LST_ERROR-MSGID.
"メッセージクラス
LST_ZTEGSDT206-MSGNO        = LST_ERROR-MSGNO.
"メッセージNo
**** START ADD 2015/04/24 ISID11 ****
"メッセージ変数
LST_ZTEGSDT206-MSGV1        = LST_ERROR-MSGV1.
LST_ZTEGSDT206-MSGV2        = LST_ERROR-MSGV2.
LST_ZTEGSDT206-MSGV3        = LST_ERROR-MSGV3.
LST_ZTEGSDT206-MSGV4        = LST_ERROR-MSGV4.
**** END ADD 2015/04/24 ISID11 ****
LST_ZTEGSDT206-MSGTX        = LST_ERROR-MSGTX.
"メッセージテキスト
LST_ZTEGSDT206-Z_MOD_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_MOD_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_MOD_USERID = SY-UNAME.

APPEND LST_ZTEGSDT206 TO LTD_ZTEGSDT206_UPDATE.

**** START UPD 2015/03/03 ISID11 ****
*          CLEAR:
*            LST_ZTEGSDT206.
*
*        ENDLOOP.
ENDIF.
**** END UPD 2015/03/03 ISID11 ****

WHEN OTHERS.
ENDCASE.

ENDLOOP.

** 更新処理
*  IF LTD_ZTEGSDT206_UPDATE IS INITIAL.
*
*    ROLLBACK WORK.
*
*    CALL FUNCTION 'DEQUEUE_ALL'.
*
*    MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
**   データ更新に失敗しました(TBL = &1)
**    LEAVE LIST-PROCESSING.
*
*  ENDIF.

INSERT ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206_UPDATE
ACCEPTING DUPLICATE KEYS.

IF SY-SUBRC <> 0.

ROLLBACK WORK.

CALL FUNCTION 'DEQUEUE_ALL'.

MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*   データ更新に失敗しました(TBL = &1)
*    LEAVE LIST-PROCESSING.

ENDIF.

* データ登録に成功した場合、コミットし、処理続行
COMMIT WORK AND WAIT.

ENDFORM.                    " UPDATE_ERROR_REGET
*&---------------------------------------------------------------------*
*&      Form  GET_ZKBUNCC_CANCEL
*&---------------------------------------------------------------------*
*       処理区分が固定値「3」(入庫取消)の場合
*----------------------------------------------------------------------*
*      -->I_TD_ERROR  入出庫連携エラーデータ
*      <--O_TD_OUT    入庫取消
*----------------------------------------------------------------------*
FORM GET_ZKBUNCC_CANCEL USING I_TD_ALV_ERROR  TYPE TYP_TD_ERROR
CHANGING O_TD_OUT TYPE TYP_TD_ZTEGSDT206_INSERT.

DATA:
LTD_ERROR   TYPE TYP_TD_ERROR.

LTD_ERROR = I_TD_ALV_ERROR.
DELETE LTD_ERROR WHERE ZKBUNCC <> CNS_ZKBUNCC_3.
**** START DEL 2015/03/03 ISID11 ****
*                     AND LOCKFLG = CNS_FLG_ON.
**** END DEL 2015/03/03 ISID11 ****

IF LTD_ERROR IS INITIAL.

RETURN.

ENDIF.

SORT LTD_ERROR BY EBELN     ASCENDING
MBLNR_INB ASCENDING
MJAHR_INB ASCENDING.

DELETE ADJACENT DUPLICATES FROM LTD_ERROR
COMPARING EBELN
MBLNR_INB
MJAHR_INB.

* キー項目も更新したいので、元のデータを再取得し
SELECT *   "全て取得
INTO TABLE O_TD_OUT
FROM ZTEGSDT206
FOR ALL ENTRIES IN LTD_ERROR
WHERE KDAUF      = LTD_ERROR-KDAUF  "受注伝票番号
AND MBLNR_OUTB = SPACE  "入出庫伝票番号(Outbound)
AND MJAHR_OUTB = '0000' "入出庫伝票年(Outbound)
AND EBELN     = LTD_ERROR-EBELN       "購買伝票番号
AND MBLNR_INB = LTD_ERROR-MBLNR_INB   "入出庫伝票番号(Inbound)
AND MJAHR_INB = LTD_ERROR-MJAHR_INB.  "入出庫伝票年(Inbound)

IF SY-SUBRC = 0.

**** START ADD 2015/03/03 ISID11 ****
SORT O_TD_OUT BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING
EBELN      ASCENDING
MBLNR_INB  ASCENDING
MJAHR_INB  ASCENDING.
**** END ADD 2015/03/03 ISID11 ****

*   テーブルから削除し
DELETE ZTEGSDT206 FROM TABLE O_TD_OUT.

*   データ更新に失敗した場合、ロックを解除し、メッセージを出力し、
*   処理を終了する
IF SY-SUBRC <> 0.

ROLLBACK WORK.

CALL FUNCTION 'DEQUEUE_ALL'.


MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*     データ更新に失敗しました(TBL = &1)
*      LEAVE LIST-PROCESSING.

ENDIF.

ENDIF.

ENDFORM.                    " GET_ZKBUNCC_CANCEL
*&---------------------------------------------------------------------*
*&      Form  GET_ZKBUNCC_DELI
*&---------------------------------------------------------------------*
*       処理区分が固定値「1」(出庫確認)と固定値「2」(出庫取消)の場合
*----------------------------------------------------------------------*
*      -->I_TD_ERROR  入出庫連携エラーデータ
*      <--O_TD_IN     出庫
*----------------------------------------------------------------------*
FORM GET_ZKBUNCC_DELI USING I_TD_ALV_ERROR TYPE TYP_TD_ERROR
CHANGING O_TD_IN TYPE TYP_TD_ZTEGSDT206_INSERT.

DATA:
LTD_ERROR   TYPE TYP_TD_ERROR.

LTD_ERROR = I_TD_ALV_ERROR.
DELETE LTD_ERROR WHERE ZKBUNCC <> CNS_ZKBUNCC_1
AND ZKBUNCC <> CNS_ZKBUNCC_2.
**** START DEL 2015/03/03 ISID11 ****
*                     AND LOCKFLG = CNS_FLG_ON.
**** END DEL 2015/03/03 ISID11 ****

IF LTD_ERROR IS INITIAL.

RETURN.

ENDIF.

SORT LTD_ERROR BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING.

DELETE ADJACENT DUPLICATES FROM LTD_ERROR
COMPARING KDAUF
MBLNR_OUTB
MJAHR_OUTB.

* キー項目も更新したいので、元のデータを再取得し
SELECT *   "全て取得
INTO TABLE O_TD_IN
FROM ZTEGSDT206
FOR ALL ENTRIES IN LTD_ERROR
WHERE KDAUF      = LTD_ERROR-KDAUF        "受注伝票番号
AND MBLNR_OUTB = LTD_ERROR-MBLNR_OUTB   "入出庫伝票番号(Outbound)
AND MJAHR_OUTB = LTD_ERROR-MJAHR_OUTB   "入出庫伝票年(Outbound)
**** START ADD 2015/03/03 ISID11 ****
AND EBELN      = LTD_ERROR-EBELN      "受注伝票番号
AND MBLNR_INB  = SPACE                "入出庫伝票番号(Outbound)
AND MJAHR_INB  = SPACE.               "入出庫伝票年(Outbound)

**** END ADD 2015/03/03 ISID11 ****

IF SY-SUBRC = 0.

**** START ADD 2015/03/03 ISID11 ****
SORT O_TD_IN BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING
EBELN      ASCENDING
MBLNR_INB  ASCENDING
MJAHR_INB  ASCENDING.
**** END ADD 2015/03/03 ISID11 ****

*   テーブルから削除し
DELETE ZTEGSDT206 FROM TABLE O_TD_IN.

*   データ更新に失敗した場合、ロックを解除し、メッセージを出力し、
*   処理を終了する
IF SY-SUBRC <> 0.

ROLLBACK WORK.

CALL FUNCTION 'DEQUEUE_ALL'.


MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*     データ更新に失敗しました(TBL = &1)
*      LEAVE LIST-PROCESSING.

ENDIF.

ENDIF.

ENDFORM.                    " GET_ZKBUNCC_DELI
*&---------------------------------------------------------------------*
*&      Form  UPDATE_MANU_REGET
*&---------------------------------------------------------------------*
*       マニュアル入庫取消したデータを入出庫連携テーブルに更新する
*----------------------------------------------------------------------*
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*      <--O_TD_ALV_ERROR  ITAB:入出庫連携エラーデータ
*      <--O_TD_ALV_MANU   ITAB:入出庫マニュアル処理済データ
*----------------------------------------------------------------------*
FORM UPDATE_MANU_REGET USING I_SYST_DATE     TYPE SY-DATUM
I_SYST_TIME     TYPE SY-UZEIT
CHANGING O_TD_ALV_ERROR  TYPE TYP_TD_ERROR
O_TD_ALV_MANU   TYPE TYP_TD_ERROR.

DATA:
LW_SUBRC              TYPE SY-SUBRC,
LW_TABIX              TYPE SY-TABIX,
LST_ERROR             TYPE TYP_ERROR,
LST_ZTEGSDT206        TYPE ZTEGSDT206,
**** START DEL 2015/03/03 ISID11 ****
*    LTD_LOCK              TYPE TYP_TD_STOCK,
**** END DEL 2015/03/03 ISID11 ****
LST_MANU              TYPE TYP_ERROR,
LST_MANU_ZKBUNCC      TYPE TYP_STOCK,
LTD_MANU_CANCEL       TYPE TYP_TD_ERROR,
LTD_MANU_DELI         TYPE TYP_TD_ERROR,
LTD_ZTEGSDT206_UPDATE TYPE TYP_TD_ZTEGSDT206_INSERT,
LTD_ERROR_OUT         TYPE TYP_TD_ZTEGSDT206_INSERT, "入庫取消
LTD_ERROR_IN          TYPE TYP_TD_ZTEGSDT206_INSERT. "出庫取消

SORT O_TD_ALV_MANU BY MBLNR_INB ASCENDING
MJAHR_INB ASCENDING.

LOOP AT O_TD_ALV_MANU INTO LST_MANU.

LW_TABIX     = SY-TABIX.

CASE LST_MANU-ZKBUNCC.
*     処理区分が固定値「3」(入庫取消)の場合
WHEN '3'.

*       入出庫連携テーブルのロック処理
LST_MANU_ZKBUNCC-EBELN = LST_MANU-EBELN.
LST_MANU_ZKBUNCC-MBLNR_NEW = LST_MANU-MBLNR_INB.
LST_MANU_ZKBUNCC-MJAHR_NEW = LST_MANU-MJAHR_INB.
LST_MANU_ZKBUNCC-ZKBUNCC = CNS_ZKBUNCC_1.
PERFORM LOCK_EZZTEGSDT206_CANCEL USING LST_MANU_ZKBUNCC
CHANGING
**** START DEL 2015/03/03 ISID11 ****
*                                               LTD_LOCK
**** END DEL 2015/03/03 ISID11 ****
O_TD_ALV_ERROR
LW_SUBRC.
*       ロック失敗の場合、次のレコード処理へ
IF LW_SUBRC IS NOT INITIAL.

DELETE O_TD_ALV_MANU INDEX LW_TABIX.

CONTINUE.

ENDIF.

APPEND LST_MANU TO LTD_MANU_CANCEL.

*     処理区分が固定値「1」(出庫確認)と固定値「2」(出庫取消)の場合
WHEN '1'
OR '2'.
*       入出庫連携テーブルのロック処理
LST_MANU_ZKBUNCC-VGBEL = LST_MANU-KDAUF.
LST_MANU_ZKBUNCC-MBLNR = LST_MANU-MBLNR_OUTB.
LST_MANU_ZKBUNCC-MJAHR = LST_MANU-MJAHR_OUTB.
LST_MANU_ZKBUNCC-ZKBUNCC = CNS_ZKBUNCC_1.
PERFORM LOCK_EZZTEGSDT206 USING LST_MANU_ZKBUNCC
CHANGING
**** START DEL 2015/03/03 ISID11 ****
*                                        LTD_LOCK
**** END DEL 2015/03/03 ISID11 ****
O_TD_ALV_ERROR
LW_SUBRC.
*       ロック失敗の場合、次のレコード処理へ
IF LW_SUBRC IS NOT INITIAL.

DELETE O_TD_ALV_MANU INDEX LW_TABIX.

CONTINUE.

ENDIF.

APPEND LST_MANU TO LTD_MANU_DELI.

WHEN OTHERS.

ENDCASE.

ENDLOOP.
* 処理区分が固定値「3」(入庫取消)の場合
PERFORM GET_MANU_CANCEL  USING LTD_MANU_CANCEL
CHANGING LTD_ERROR_OUT.

* 処理区分が固定値「1」(出庫確認)と固定値「2」(出庫取消)の場合
PERFORM GET_MANU_DELI  USING LTD_MANU_DELI
CHANGING LTD_ERROR_IN.

LOOP AT O_TD_ALV_MANU INTO LST_MANU.

CASE LST_MANU-ZKBUNCC.
*     処理区分が固定値「3」(入庫取消)の場合
WHEN '3'.
LOOP AT LTD_ERROR_OUT INTO LST_ZTEGSDT206
WHERE EBELN     = LST_MANU-EBELN
AND MBLNR_INB = LST_MANU-MBLNR_INB
AND MJAHR_INB = LST_MANU-MJAHR_INB.

LST_ZTEGSDT206-KDAUF        = LST_MANU-KDAUF. "受注伝票番号
LST_ZTEGSDT206-MBLNR_OUTB   = LST_MANU-MBLNR_OUTB.
"入出庫伝票番号(Outbound)
LST_ZTEGSDT206-MJAHR_OUTB   = LST_MANU-MJAHR_OUTB.
"入出庫伝票番号(Outbound)
LST_ZTEGSDT206-WERK_INB     = LST_MANU-WERK_INB.
"入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = LST_MANU-WERK_OUTB.
"出荷プラント
LST_ZTEGSDT206-VBELN        = LST_MANU-VBELN.   "出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = LST_MANU-ZKBUNCC. "処理区分
LST_ZTEGSDT206-STATUS       = 'M'.              "固定値「M」
LST_ZTEGSDT206-MSGID        = LST_MANU-MSGID.
"メッセージクラス
LST_ZTEGSDT206-MSGNO        = LST_MANU-MSGNO.
"メッセージNo
**** START ADD 2015/04/24 ISID11 ****
"メッセージ変数
LST_ZTEGSDT206-MSGV1        = LST_MANU-MSGV1.
LST_ZTEGSDT206-MSGV2        = LST_MANU-MSGV2.
LST_ZTEGSDT206-MSGV3        = LST_MANU-MSGV3.
LST_ZTEGSDT206-MSGV4        = LST_MANU-MSGV4.
**** END ADD 2015/04/24 ISID11 ****
LST_ZTEGSDT206-MSGTX        = LST_MANU-MSGTX.
"メッセージテキスト
LST_ZTEGSDT206-Z_MOD_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_MOD_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_MOD_USERID = SY-UNAME.

APPEND LST_ZTEGSDT206 TO LTD_ZTEGSDT206_UPDATE.

CLEAR:
LST_ZTEGSDT206.

ENDLOOP.

*     処理区分が固定値「1」(出庫確認)と固定値「2」(出庫取消)の場合
WHEN '1'
OR '2'.
LOOP AT LTD_ERROR_IN INTO LST_ZTEGSDT206
WHERE KDAUF      = LST_MANU-KDAUF
AND MBLNR_OUTB = LST_MANU-MBLNR_OUTB
AND MJAHR_OUTB = LST_MANU-MJAHR_OUTB.

LST_ZTEGSDT206-EBELN        = LST_MANU-EBELN. "購買伝票番号
LST_ZTEGSDT206-MBLNR_INB    = LST_MANU-MBLNR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-MJAHR_INB    = LST_MANU-MJAHR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-WERK_INB     = LST_MANU-WERK_INB.
"入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = LST_MANU-WERK_OUTB.
"出荷プラント
LST_ZTEGSDT206-VBELN        = LST_MANU-VBELN.   "出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = LST_MANU-ZKBUNCC. "処理区分
LST_ZTEGSDT206-STATUS       = 'M'.                "固定値「M」
LST_ZTEGSDT206-MSGID        = LST_MANU-MSGID.
"メッセージクラス
LST_ZTEGSDT206-MSGNO        = LST_MANU-MSGNO.
"メッセージNo
**** START ADD 2015/04/24 ISID11 ****
"メッセージ変数
LST_ZTEGSDT206-MSGV1        = LST_MANU-MSGV1.
LST_ZTEGSDT206-MSGV2        = LST_MANU-MSGV2.
LST_ZTEGSDT206-MSGV3        = LST_MANU-MSGV3.
LST_ZTEGSDT206-MSGV4        = LST_MANU-MSGV4.
**** END ADD 2015/04/24 ISID11 ****
LST_ZTEGSDT206-MSGTX        = LST_MANU-MSGTX.
"メッセージテキスト
LST_ZTEGSDT206-Z_MOD_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_MOD_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_MOD_USERID = SY-UNAME.

APPEND LST_ZTEGSDT206 TO LTD_ZTEGSDT206_UPDATE.

CLEAR:
LST_ZTEGSDT206.

ENDLOOP.

WHEN OTHERS.

ENDCASE.

ENDLOOP.

* 更新処理
INSERT ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206_UPDATE
ACCEPTING DUPLICATE KEYS.

IF SY-SUBRC <> 0.

ROLLBACK WORK.

CALL FUNCTION 'DEQUEUE_ALL'.


MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*   データ更新に失敗しました(TBL = &1)
*    LEAVE LIST-PROCESSING.

ENDIF.

* データ登録に成功した場合、コミットし、処理続行
COMMIT WORK AND WAIT.

ENDFORM.                    " UPDATE_MANU_REGET
*&---------------------------------------------------------------------*
*&      Form  GET_MANU_CANCEL
*&---------------------------------------------------------------------*
*       処理区分が固定値「3」(入庫取消)の場合
*----------------------------------------------------------------------*
*      -->I_TD_ALV_MANU   ITAB:入出庫マニュアル処理済データ
*      <--O_TD_OUT        入庫
*----------------------------------------------------------------------*
FORM GET_MANU_CANCEL  USING I_TD_ALV_MANU  TYPE TYP_TD_ERROR
CHANGING O_TD_OUT TYPE TYP_TD_ZTEGSDT206_INSERT.

DATA:
LTD_MANU   TYPE TYP_TD_ERROR.

LTD_MANU = I_TD_ALV_MANU.
DELETE LTD_MANU WHERE ZKBUNCC <> CNS_ZKBUNCC_3.

IF LTD_MANU IS INITIAL.

RETURN.

ENDIF.

SORT LTD_MANU BY EBELN     ASCENDING
MBLNR_INB ASCENDING
MJAHR_INB ASCENDING.

DELETE ADJACENT DUPLICATES FROM LTD_MANU
COMPARING EBELN
MBLNR_INB
MJAHR_INB.

* キー項目も更新したいので、元のデータを再取得し
SELECT *   "全て取得
INTO TABLE O_TD_OUT
FROM ZTEGSDT206
FOR ALL ENTRIES IN LTD_MANU
WHERE EBELN     = LTD_MANU-EBELN       "購買伝票番号
AND MBLNR_INB = LTD_MANU-MBLNR_INB   "入出庫伝票番号(Inbound)
AND MJAHR_INB = LTD_MANU-MJAHR_INB.  "入出庫伝票年(Inbound)

IF SY-SUBRC = 0.

*   テーブルから削除し
DELETE ZTEGSDT206 FROM TABLE O_TD_OUT.

*   データ更新に失敗した場合、ロックを解除し、メッセージを出力し、
*   処理を終了する
IF SY-SUBRC <> 0.

ROLLBACK WORK.

CALL FUNCTION 'DEQUEUE_ALL'.


MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*     データ更新に失敗しました(TBL = &1)
*      LEAVE LIST-PROCESSING.

ENDIF.

ENDIF.

ENDFORM.                    " GET_MANU_CANCEL
*&---------------------------------------------------------------------*
*&      Form  GET_MANU_DELI
*&---------------------------------------------------------------------*
*       処理区分が固定値「1」(出庫確認)と固定値「2」(出庫取消)の場合
*----------------------------------------------------------------------*
*      -->I_TD_ALV_MANU  ITAB:入出庫マニュアル処理済データ
*      <--O_TD_IN        出庫
*----------------------------------------------------------------------*
FORM GET_MANU_DELI  USING I_TD_ALV_MANU  TYPE TYP_TD_ERROR
CHANGING O_TD_IN TYPE TYP_TD_ZTEGSDT206_INSERT.

DATA:
LTD_MANU   TYPE TYP_TD_ERROR.

LTD_MANU = I_TD_ALV_MANU.
DELETE LTD_MANU WHERE ZKBUNCC <> CNS_ZKBUNCC_1
AND ZKBUNCC <> CNS_ZKBUNCC_2.

IF LTD_MANU IS INITIAL.

RETURN.

ENDIF.

SORT LTD_MANU BY KDAUF      ASCENDING
MBLNR_OUTB ASCENDING
MJAHR_OUTB ASCENDING.

DELETE ADJACENT DUPLICATES FROM LTD_MANU
COMPARING KDAUF
MBLNR_OUTB
MJAHR_OUTB.

* キー項目も更新したいので、元のデータを再取得し
SELECT *   "全て取得
INTO TABLE O_TD_IN
FROM ZTEGSDT206
FOR ALL ENTRIES IN LTD_MANU
WHERE KDAUF      = LTD_MANU-KDAUF        "受注伝票番号
AND MBLNR_OUTB = LTD_MANU-MBLNR_OUTB   "入出庫伝票番号(Outbound)
AND MJAHR_OUTB = LTD_MANU-MJAHR_OUTB.  "入出庫伝票年(Outbound)

IF SY-SUBRC = 0.

*   テーブルから削除し
DELETE ZTEGSDT206 FROM TABLE O_TD_IN.

*   データ更新に失敗した場合、ロックを解除し、メッセージを出力し、
*   処理を終了する
IF SY-SUBRC <> 0.

ROLLBACK WORK.

CALL FUNCTION 'DEQUEUE_ALL'.

MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*     データ更新に失敗しました(TBL = &1)
*      LEAVE LIST-PROCESSING.

ENDIF.

ENDIF.

ENDFORM.                    " GET_MANU_DELI
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_AGAIN
*&---------------------------------------------------------------------*
*       ALV画面を再表示処理
*----------------------------------------------------------------------*
*      -->I_TD_RE_DELIISSUE  ITAB:出庫確認再取込データ
*      -->I_TD_RE_DELIREVER  ITAB:出庫取消再取込データ
*      -->I_TD_RE_RECCANCEL  ITAB:入庫取消再取込データ
*      -->I_TD_ALV_ERROR     ITAB:入出庫連携エラーデータ
*      -->I_TD_ALV_MANU      ITAB:入出庫マニュアル処理済データ
*----------------------------------------------------------------------*
FORM DISPLAY_ALV_AGAIN.
**** START DEL 2015/03/03 ISID11 ****
*        USING I_TD_RE_DELIISSUE TYPE TYP_TD_STOCK
*              I_TD_RE_DELIREVER TYPE TYP_TD_STOCK
*              I_TD_RE_RECCANCEL TYPE TYP_TD_STOCK
*              I_TD_ALV_ERROR    TYPE TYP_TD_ERROR
*         USING I_TD_ALV_MANU     TYPE TYP_TD_ERROR.
*  DATA:
*    LW_SELECTED  TYPE I,
*    LW_PROCESS   TYPE I,
*    Lst_count-error     TYPE I,
**** END DEL 2015/03/03 ISID11 ****
*    Lst_count-others      TYPE I,
*    LTD_ALV      TYPE TYP_TD_ALV.
*
*  LTD_ALV = TD_ALV.
*  DELETE LTD_ALV WHERE SEL IS INITIAL.
*  LW_SELECTED = LINES( LTD_ALV ).
*  LW_PROCESS = LINES( I_TD_RE_DELIISSUE ) + LINES( I_TD_RE_DELIREVER )
*             + LINES( I_TD_RE_RECCANCEL ).
*  Lst_count-error   = LINES( I_TD_ALV_ERROR ).
*  Lst_count-others    = LINES( I_TD_ALV_MANU ).
**** END DEL 2015/03/03 ISID11 ****

* データ抽出編集処理
PERFORM GET_ALV
**** START DEL 2015/03/03 ISID11 ****
*                  USING RD_DWERKS
*                        RD_RWERKS
**** END DEL 2015/03/03 ISID11 ****
CHANGING TD_ALV.

MESSAGE S066(ZMEGSD01) WITH
**** START UPD 2015/03/03 ISID11 ****
*                              LW_SELECTED
*                              LW_PROCESS
*                              Lst_count-error
*                              Lst_count-others.
ST_COUNT-TOTAL
ST_COUNT-NORMAL
ST_COUNT-ERROR
ST_COUNT-OTHERS.
**** END UPD 2015/03/03 ISID11 ****
* 入出庫再取込が完了(指定件数：&1件 処理：&2件 エラー：&3件
* 対象外：&4件)

ENDFORM.                    " DISPLAY_ALV_AGAIN
*&---------------------------------------------------------------------*
*&      Form  DELETE_RECORD
*&---------------------------------------------------------------------*
*       「削除」に更新する
*----------------------------------------------------------------------*
FORM DELETE_RECORD .

DATA:
LW_QUESTION   TYPE CHAR72,
LW_ANSWER     TYPE CHAR1.

* 明細1行も選択されてない場合、メッセ‐ジを出力し処理を終了する
PERFORM INIT_PROCESS.

* D-1-3．削除確認
CLEAR:
LW_QUESTION,
LW_ANSWER.

MESSAGE S034(ZMEGSD01) INTO LW_QUESTION.
* 削除しますか？

CALL FUNCTION 'POPUP_TO_CONFIRM'
EXPORTING
TITLEBAR              = TEXT-B01
TEXT_QUESTION         = LW_QUESTION
TEXT_BUTTON_1         = TEXT-B02
TEXT_BUTTON_2         = TEXT-B03
DISPLAY_CANCEL_BUTTON = SPACE
IMPORTING
ANSWER                = LW_ANSWER
EXCEPTIONS
TEXT_NOT_FOUND        = 1
OTHERS                = 2.

IF SY-SUBRC <> 0.

MESSAGE ID SY-MSGID TYPE CNS_MSG_E NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.

ENDIF.

IF LW_ANSWER <> '1'.
RETURN.
ENDIF.

* データ更新処理
PERFORM UPDATE_ZTEGSDT206_DELFLG.

* ALV画面を再表示処理
PERFORM GET_ALV
**** START DEL 2015/03/03 ISID11 ****
*                  USING RD_DWERKS
*                        RD_RWERKS
**** END DEL 2015/03/03 ISID11 ****
CHANGING TD_ALV.

ENDFORM.                    " DELETE_RECORD
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGSDT206_DELFLG
*&---------------------------------------------------------------------*
*       データ更新処理
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGSDT206_DELFLG .

DATA:
LTD_LOCK   TYPE TYP_TD_ALV,
LST_LOCK   TYPE ZSEGSD0019,
LW_DATUM   TYPE SY-DATUM,                   "更新年月日
LW_UZEIT   TYPE SY-UZEIT.                   "更新時分秒

LTD_LOCK = TD_ALV.

DELETE LTD_LOCK WHERE SEL <> CNS_FLG_ON.

LOOP AT LTD_LOCK INTO LST_LOCK.

CASE LST_LOCK-ZKBUNCC.

WHEN CNS_ZKBUNCC_3.

CALL FUNCTION 'ENQUEUE_EZZTEGSDT206'
EXPORTING
MODE_ZTEGSDT206 = 'E'
EBELN           = LST_LOCK-EBELN
MBLNR_INB       = LST_LOCK-MBLNR_INB
MJAHR_INB       = LST_LOCK-MJAHR_INB
EXCEPTIONS
FOREIGN_LOCK    = 1
SYSTEM_FAILURE  = 2
OTHERS          = 3.
IF SY-SUBRC <> 0.
*         ロックの解除
CALL FUNCTION 'DEQUEUE_ALL'.
MESSAGE ID SY-MSGID TYPE CNS_MSG_E NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.

ENDIF.

WHEN CNS_ZKBUNCC_1
OR CNS_ZKBUNCC_2.

CALL FUNCTION 'ENQUEUE_EZZTEGSDT206'
EXPORTING
MODE_ZTEGSDT206 = 'E'
KDAUF           = LST_LOCK-KDAUF
MBLNR_OUTB      = LST_LOCK-MBLNR_OUTB
MJAHR_OUTB      = LST_LOCK-MJAHR_OUTB
EXCEPTIONS
FOREIGN_LOCK    = 1
SYSTEM_FAILURE  = 2
OTHERS          = 3.

IF SY-SUBRC <> 0.
*         ロックの解除
CALL FUNCTION 'DEQUEUE_ALL'.
MESSAGE ID SY-MSGID TYPE CNS_MSG_E NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

WHEN OTHERS.

ENDCASE.

ENDLOOP.

LW_DATUM   = SY-DATUM.
LW_UZEIT   = SY-UZEIT.

LOOP AT LTD_LOCK INTO LST_LOCK.

CASE LST_LOCK-ZKBUNCC.

WHEN CNS_ZKBUNCC_3.


UPDATE ZTEGSDT206
SET STATUS       = 'D'              "ステータス
Z_MOD_YMD    = LW_DATUM         "更新年月日
Z_MOD_HMS    = LW_UZEIT         "更新時分秒
Z_MOD_USERID = SY-UNAME         "ユーザ名
WHERE EBELN           = LST_LOCK-EBELN
AND MBLNR_INB       = LST_LOCK-MBLNR_INB
AND MJAHR_INB       = LST_LOCK-MJAHR_INB.

*       メッセージを出力し処理を終了する
IF SY-SUBRC <> 0.

ROLLBACK WORK.

*         ロックの解除
CALL FUNCTION 'DEQUEUE_ALL'.

MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*         データ更新に失敗しました(TBL = &1)

ENDIF.

WHEN CNS_ZKBUNCC_1
OR CNS_ZKBUNCC_2.

UPDATE ZTEGSDT206
SET STATUS       = 'D'              "ステータス
Z_MOD_YMD    = LW_DATUM         "更新年月日
Z_MOD_HMS    = LW_UZEIT         "更新時分秒
Z_MOD_USERID = SY-UNAME         "ユーザ名
WHERE KDAUF           = LST_LOCK-KDAUF
AND MBLNR_OUTB      = LST_LOCK-MBLNR_OUTB
AND MJAHR_OUTB      = LST_LOCK-MJAHR_OUTB.

*       メッセージを出力し処理を終了する
IF SY-SUBRC <> 0.

ROLLBACK WORK.

*         ロックの解除
CALL FUNCTION 'DEQUEUE_ALL'.

MESSAGE E024(ZMEGSD01) WITH 'ZTEGSDT206'.
*         データ更新に失敗しました(TBL = &1)

ENDIF.

WHEN OTHERS.

ENDCASE.

ENDLOOP.

* （2）．データ更新に成功した場合、コミットし、次の処理へ
COMMIT WORK AND WAIT.

* ロックの解除
CALL FUNCTION 'DEQUEUE_ALL'.

ENDFORM.                    " UPDATE_ZTEGSDT206_DELFLG
*&---------------------------------------------------------------------*
*&      Form  DETAIL_RECORD
*&---------------------------------------------------------------------*
*   「Detail」ボタン押下時には、カーソル位置を判定して以下の処理を行う
*----------------------------------------------------------------------*
*      -->I_SELFIELD
*----------------------------------------------------------------------*
FORM DETAIL_RECORD USING I_SELFIELD TYPE SLIS_SELFIELD.

DATA:
LST_ZSEGSD0019   TYPE ZSEGSD0019.
READ TABLE TD_ALV INTO LST_ZSEGSD0019
INDEX I_SELFIELD-TABINDEX.

IF SY-SUBRC <> 0.

RETURN.

ENDIF.

CASE I_SELFIELD-FIELDNAME.
*   カーソルが「受注伝票番号(Sales Doc.)」項目で、
*   受注伝票番号が初期値以外の場合
WHEN 'KDAUF'.
*     販売伝票照会画面(VA03)の第二画面へ飛ぶ
IF LST_ZSEGSD0019-KDAUF IS NOT INITIAL.

SET PARAMETER ID: 'AUN' FIELD LST_ZSEGSD0019-KDAUF.

CALL TRANSACTION 'VA03' AND SKIP FIRST SCREEN.

ENDIF.

*   カーソルが「出荷伝票番号(Delivery Doc.)」項目で、
*   出荷伝票番号が初期値以外の場合
WHEN 'VBELN'.
*     出荷伝票照会画面(VL03N)の第二画面へ飛ぶ
IF LST_ZSEGSD0019-VBELN IS NOT INITIAL.

SET PARAMETER ID: 'VL' FIELD LST_ZSEGSD0019-VBELN.

CALL TRANSACTION 'VL03N' AND SKIP FIRST SCREEN.

ENDIF.

*   カーソルが「入出庫伝票番号(Mat.Doc.(Out))」項目で、
*   入出庫伝票番号(Mat.Doc.(Out))が初期値以外の場合
WHEN 'MBLNR_OUTB'.
*     入出庫伝票照会画面(MB03)の第二画面へ飛ぶ
IF LST_ZSEGSD0019-MBLNR_OUTB IS NOT INITIAL.

SET PARAMETER ID: 'MBN' FIELD LST_ZSEGSD0019-MBLNR_OUTB.
SET PARAMETER ID: 'MJA' FIELD LST_ZSEGSD0019-MJAHR_OUTB.

CALL TRANSACTION 'MB03' AND SKIP FIRST SCREEN.

ENDIF.

*   カーソルが「購買伝票番号(Purch.Doc.)」項目で、
*   購買伝票番号が初期値以外の場合
WHEN 'EBELN'.
*     購買伝票番号照会画面(ME23N)の第一画面へ飛ぶ
IF LST_ZSEGSD0019-EBELN IS NOT INITIAL.

SET PARAMETER ID: 'BES' FIELD LST_ZSEGSD0019-EBELN.

CALL TRANSACTION 'ME23N' AND SKIP FIRST SCREEN.

ENDIF.

*   カーソルが「入出庫伝票番号(Mat.Doc.(In))」項目で、
*   入出庫伝票番号(Mat.Doc.(In))が初期値以外の場合
WHEN 'MBLNR_INB'.
*     入出庫伝票照会画面(MB03)の第二画面へ飛ぶ
IF LST_ZSEGSD0019-MBLNR_INB IS NOT INITIAL.

SET PARAMETER ID: 'MBN' FIELD LST_ZSEGSD0019-MBLNR_INB.
SET PARAMETER ID: 'MJA' FIELD LST_ZSEGSD0019-MJAHR_INB.

CALL TRANSACTION 'MB03' AND SKIP FIRST SCREEN.

ENDIF.

*   上記以外の場合、メッセージを出力し処理を終了する
WHEN OTHERS.

MESSAGE E065(ZMEGSD01).
*     伝票番号を指定してください

ENDCASE.

ENDFORM.                    " DETAIL_RECORD
**** START ADD 2015/03/03 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  GET_SINGLE_FLG
*&---------------------------------------------------------------------*
*       本社及び明細分割情報を取得する
*----------------------------------------------------------------------*
*      <--O_TD_BUKRS_FLG  ITAB:明細基準
*----------------------------------------------------------------------*
FORM GET_SINGLE_FLG CHANGING O_TD_BUKRS_FLG TYPE TYP_TD_BUKRS_FLG.

SELECT BUKRS           "会社コード
ZFLGHEADOFFICE  "本社フラグ
ZFLGINBSINGLE   "入庫伝票単一明細FLG
INTO TABLE O_TD_BUKRS_FLG
FROM ZTEGSDT204
WHERE BUKRS IN S_BUKRS.

IF SY-SUBRC <> 0.

MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDT204'.
*   対象データが存在しません。(TBL = &1)
LEAVE LIST-PROCESSING.

ELSE.

SORT O_TD_BUKRS_FLG BY BUKRS ASCENDING.

ENDIF.

ENDFORM.                    " GET_SINGLE_FLG
*&---------------------------------------------------------------------*
*&      Form  GET_ZTEGSDT001
*&---------------------------------------------------------------------*
*       TradeCommonの検索
*----------------------------------------------------------------------*
*      -->I_TD_DELIISSUE     ITAB:出庫確認連携データ
*      <--P_LTD_ZTEGSDT001   ITAB:TradeCommon
*----------------------------------------------------------------------*
FORM GET_ZTEGSDT001 USING I_TD_DELIISSUE TYPE TYP_TD_STOCK
CHANGING O_TD_ZTEGSDT001 TYPE TYP_TD_ZTEGSDT001.

DATA:
LTD_DELIVERYISSUE TYPE TYP_TD_STOCK.

LTD_DELIVERYISSUE = I_TD_DELIISSUE.
*  DELETE ADJACENT DUPLICATES FROM LTD_DELIVERYISSUE
*                        COMPARING VBELN_IM.

SELECT VBELN           "出荷伝票
**** START ADD 2015/03/03 ISID11 ****
ERDAT           "レコード登録日
**** END ADD 2015/03/03 ISID11 ****
Z_INVOICE_NO    "納品書番号
INTO TABLE O_TD_ZTEGSDT001
FROM ZTEGSDT001
FOR ALL ENTRIES IN LTD_DELIVERYISSUE
WHERE VBELN = LTD_DELIVERYISSUE-VBELN_IM.

IF SY-SUBRC = 0.

SORT O_TD_ZTEGSDT001 BY VBELN ASCENDING.

ENDIF.

ENDFORM.                    " GET_ZTEGSDT001
*&---------------------------------------------------------------------*
*&      Form  GET_ZTEGSDT208
*&---------------------------------------------------------------------*
*       Ocean Store Location Masterの検索
*----------------------------------------------------------------------*
*      -->I_TD_EKPO        ITAB:購買伝票明細
*      <--O_TD_ZTEGSDT208  ITAB:洋上保管場所
*----------------------------------------------------------------------*
FORM GET_ZTEGSDT208 USING I_TD_EKPO TYPE TYP_TD_EKPO
CHANGING O_TD_ZTEGSDT208 TYPE TYP_TD_ZTEGSDT208.

DATA:
LTD_EKPO TYPE TYP_TD_EKPO.

IF I_TD_EKPO IS INITIAL.

RETURN.

ENDIF.
LTD_EKPO = I_TD_EKPO.
SORT LTD_EKPO BY BUKRS ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_EKPO
COMPARING BUKRS.

SELECT BUKRS           "会社コード
LGORT           "保管場所
INTO TABLE O_TD_ZTEGSDT208
FROM ZTEGSDT208
FOR ALL ENTRIES IN LTD_EKPO
WHERE BUKRS = LTD_EKPO-BUKRS.

IF SY-SUBRC = 0.

SORT O_TD_ZTEGSDT208 BY BUKRS ASCENDING.

ENDIF.

ENDFORM.                    " GET_ZTEGSDT208
*&---------------------------------------------------------------------*
*&      Form  GET_READ_TEXT
*&---------------------------------------------------------------------*
*       テキスト読込
*----------------------------------------------------------------------*
*      -->I_ID
*      -->I_LANGUAGE
*      -->I_NAME
*      -->I_OBJECT
*      <--O_TD_LINES    ITAB:返り値のテキスト
*      <--O_SUBRC       例外
*----------------------------------------------------------------------*
FORM GET_READ_TEXT USING I_ID       TYPE THEAD-TDID
*                         I_LANGUAGE TYPE THEAD-TDSPRAS
I_NAME     TYPE THEAD-TDNAME
I_OBJECT   TYPE THEAD-TDOBJECT
CHANGING O_TD_LINES TYPE STANDARD TABLE
O_SUBRC    TYPE SY-SUBRC.

CALL FUNCTION 'READ_TEXT'
EXPORTING
ID                      = I_ID
LANGUAGE                = 'J'       "I_LANGUAGE
NAME                    = I_NAME
OBJECT                  = I_OBJECT
TABLES
LINES                   = O_TD_LINES
EXCEPTIONS
ID                      = 1
LANGUAGE                = 2
NAME                    = 3
NOT_FOUND               = 4
OBJECT                  = 5
REFERENCE_CHECK         = 6
WRONG_ACCESS_TO_ARCHIVE = 7
OTHERS                  = 8.

O_SUBRC = SY-SUBRC.

ENDFORM.                    " GET_READ_TEXT
*&---------------------------------------------------------------------*
*&      Form  GET_WERK_INB
*&---------------------------------------------------------------------*
*       取消元入庫プラントを取得
*----------------------------------------------------------------------*
*      -->I_TD_DELIISSUE     ITAB:出庫確認連携データ
*      <--O_TD_WERK_INB      取消元入庫プラント
*----------------------------------------------------------------------*
FORM GET_WERK_INB USING I_TD_DELIISSUE TYPE TYP_TD_STOCK
CHANGING O_TD_WERK_INB TYPE TYP_TD_WERK_INB.

DATA:
LTD_DELIISSUE TYPE TYP_TD_STOCK.

LTD_DELIISSUE = I_TD_DELIISSUE.
SORT LTD_DELIISSUE BY SMBLN ASCENDING
SJAHR ASCENDING
SMBLP ASCENDING.

DELETE ADJACENT DUPLICATES FROM LTD_DELIISSUE
COMPARING SMBLN
SJAHR
SMBLP.

SELECT MBLNR        "入出庫伝票番号
MJAHR        "入出庫伝票年
ZEILE        "入出庫伝票の明細
WERKS        "プラント
INTO TABLE O_TD_WERK_INB
FROM MSEG
FOR ALL ENTRIES IN LTD_DELIISSUE
WHERE MBLNR = LTD_DELIISSUE-SMBLN
AND MJAHR = LTD_DELIISSUE-SJAHR
AND ZEILE = LTD_DELIISSUE-SMBLP.

IF SY-SUBRC = 0.

SORT O_TD_WERK_INB BY MBLNR
MJAHR
ZEILE.

ENDIF.

ENDFORM.                    " GET_WERK_INB
*&---------------------------------------------------------------------*
*&      Form  GET_EXIST_ZTEGSDT206
*&---------------------------------------------------------------------*
*       存在レコード取得
*----------------------------------------------------------------------*
*      -->I_TD_DELIISSUE  連携データ
*      -->I_OUT_FLG       FLAG
*      <--O_TD_EXIST      存在レコード
*----------------------------------------------------------------------*
FORM GET_EXIST_ZTEGSDT206
USING I_TD_DELIISSUE TYPE TYP_TD_STOCK
I_OUT_FLG      TYPE FLAG
CHANGING O_TD_EXIST TYPE TYP_TD_ZTEGSDT206_INSERT.

IF I_OUT_FLG IS INITIAL.

SELECT *           "全てレコード
FROM ZTEGSDT206
INTO TABLE O_TD_EXIST
FOR ALL ENTRIES IN I_TD_DELIISSUE
WHERE KDAUF        = I_TD_DELIISSUE-VGBEL "受注伝票番号
AND MBLNR_OUTB   = SPACE  "入出庫伝票番号(Outbound)
AND MJAHR_OUTB   = '0000' "入出庫伝票年(Outbound)
AND EBELN     = I_TD_DELIISSUE-EBELN    "受注伝票番号
AND MBLNR_INB = I_TD_DELIISSUE-MBLNR "入出庫伝票番号(Outbound)
AND MJAHR_INB = I_TD_DELIISSUE-MJAHR.
"入出庫伝票年(Outbound)

ELSE.

SELECT *           "全てレコード
FROM ZTEGSDT206
INTO TABLE O_TD_EXIST
FOR ALL ENTRIES IN I_TD_DELIISSUE
WHERE KDAUF      = I_TD_DELIISSUE-VGBEL  "受注伝票番号
AND MBLNR_OUTB = I_TD_DELIISSUE-MBLNR  "入出庫伝票番号(Outbound)
AND MJAHR_OUTB = I_TD_DELIISSUE-MJAHR  "入出庫伝票年(Outbound)
AND EBELN      = I_TD_DELIISSUE-EBELN  "購買伝票番号
AND MBLNR_INB  = SPACE   "取消元の入出庫伝票番号(Inbound)
AND MJAHR_INB  = '0000'. "取消元の入出庫伝票年(Inbound)

ENDIF.

ENDFORM.                    " GET_EXIST_ZTEGSDT206
**** END ADD 2015/03/03 ISID11 ****
**** START ADD 2015/03/30 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGSDT206_ELELN
*&---------------------------------------------------------------------*
*       購買伝票番号の場合、対象追加処理
*----------------------------------------------------------------------*
*      -->I_SYST_DATE
*      -->I_SYST_TIME
*      -->I_ST_DELIISSUE
*      -->I_TD_EXIST
*      -->I_TD_EBELN
*      -->I_BATCH_FLG
*      <--O_SUBRC
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGSDT206_ELELN
USING I_SYST_DATE    TYPE SY-DATUM
I_SYST_TIME    TYPE SY-UZEIT
I_ST_DELIISSUE TYPE TYP_STOCK
I_TD_EXIST     TYPE TYP_TD_ZTEGSDT206_INSERT
I_TD_EBELN     TYPE TYP_TD_STOCK
I_BATCH_FLG    TYPE FLAG
CHANGING O_SUBRC        TYPE SY-SUBRC.

DATA:
LST_STOCK TYPE TYP_STOCK,
LST_ZTEGSDT206        TYPE ZTEGSDT206,
LTD_ZTEGSDT206_EXIST  TYPE TYP_TD_ZTEGSDT206_INSERT,
LTD_ZTEGSDT206_INSERT TYPE TYP_TD_ZTEGSDT206_INSERT,
LTD_ZTEGSDT206_UPDATE TYPE TYP_TD_ZTEGSDT206_INSERT.

IF I_BATCH_FLG = 'X'.

LOOP AT I_TD_EBELN INTO LST_STOCK.

ST_COUNT-NORMAL = ST_COUNT-NORMAL + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.

CASE LST_STOCK-STATUS.
WHEN 'I'.

CLEAR:
LST_ZTEGSDT206.

LST_ZTEGSDT206-KDAUF        = LST_STOCK-VGBEL.
"受注伝票番号
LST_ZTEGSDT206-MBLNR_OUTB   = LST_STOCK-MBLNR.
"入出庫伝票番号(Outbound)
LST_ZTEGSDT206-MJAHR_OUTB   = LST_STOCK-MJAHR.
"入出庫伝票年(Outbound)
LST_ZTEGSDT206-EBELN        = LST_STOCK-EBELN.
"購買伝票番号
LST_ZTEGSDT206-MBLNR_INB    = I_ST_DELIISSUE-MBLNR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-MJAHR_INB    = I_ST_DELIISSUE-MJAHR_INB.
"入出庫伝票番号(Inbound)
LST_ZTEGSDT206-WERK_INB     = LST_STOCK-WERK_INB.
"入庫プラント
LST_ZTEGSDT206-WERK_OUTB    = LST_STOCK-WERK_OUTB.
"出荷プラント
LST_ZTEGSDT206-VBELN        = LST_STOCK-VBELN_IM.
"出荷伝票
LST_ZTEGSDT206-ZKBUNCC      = LST_STOCK-ZKBUNCC.
"処理区分
LST_ZTEGSDT206-STATUS       = 'C'.
LST_ZTEGSDT206-Z_CRE_YMD    = I_SYST_DATE.
LST_ZTEGSDT206-Z_CRE_HMS    = I_SYST_TIME.
LST_ZTEGSDT206-Z_CRE_USERID = SY-UNAME.

APPEND LST_ZTEGSDT206 TO LTD_ZTEGSDT206_INSERT.

WHEN 'U'.

*         更新区分が固定値「U」(更新)の場合、存在レコード取得
PERFORM GET_STATUS_UPDATE USING LST_STOCK
I_TD_EXIST
CHANGING LTD_ZTEGSDT206_EXIST
O_SUBRC.

IF O_SUBRC <> 0.

RETURN.

ENDIF.

*         更新区分が固定値「U」(更新)の場合、更新処理を行う
*         BAPI返し
LST_STOCK-MBLNR_INB = I_ST_DELIISSUE-MBLNR_INB.
LST_STOCK-MJAHR_INB = I_ST_DELIISSUE-MJAHR_INB.
PERFORM UPDATE_ZTEGSDT206_STATUS USING LST_STOCK
LTD_ZTEGSDT206_EXIST
I_SYST_DATE
I_SYST_TIME
CHANGING LTD_ZTEGSDT206_UPDATE.

WHEN OTHERS.

ENDCASE.

ENDLOOP.

IF LTD_ZTEGSDT206_INSERT IS NOT INITIAL.

*       登録処理
INSERT ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206_INSERT.

*       データ登録に失敗した場合、BAPIロ‐ルバックし、ロックを解除し、
*       メッセージを出力し、処理を終了する
IF SY-SUBRC <> 0.

O_SUBRC = SY-SUBRC.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

MESSAGE S023(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*         データ登録に失敗しました(TBL = &1)
RETURN.

ENDIF.

ENDIF.

IF LTD_ZTEGSDT206_UPDATE IS NOT INITIAL.

*       更新処理
INSERT ZTEGSDT206 FROM TABLE LTD_ZTEGSDT206_UPDATE
ACCEPTING DUPLICATE KEYS.


*       データ更新に失敗した場合、BAPIロールバックし、ロックを解除し、
*       メッセージを出力し、処理を終了する
IF SY-SUBRC <> 0.

O_SUBRC = SY-SUBRC.

CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

MESSAGE S024(ZMEGSD01) WITH 'ZTEGSDT206'
DISPLAY LIKE CNS_MSG_E.
*         データ更新に失敗しました(TBL = &1)

RETURN.

ENDIF.

ENDIF.

*   データ登録/更新に成功した場合、BAPIコミットし、ロックの解除処理へ
CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
EXPORTING
WAIT = 'X'.

ELSE.

LOOP AT I_TD_EBELN INTO LST_STOCK.

ST_COUNT-NORMAL = ST_COUNT-NORMAL + 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL + 1.

*     更新区分が固定値「U」(更新)の場合、更新処理を行う
*     BAPI返し
LST_STOCK-MBLNR_INB = I_ST_DELIISSUE-MBLNR_INB.
LST_STOCK-MJAHR_INB = I_ST_DELIISSUE-MJAHR_INB.

*     入出庫連携テーブルの更新処理
PERFORM UPDATE_ZTEGSDT206_REDELIISSUE USING I_SYST_DATE
I_SYST_TIME
I_TD_EXIST
LST_STOCK.

ENDLOOP.


ENDIF.

ST_COUNT-NORMAL = ST_COUNT-NORMAL - 1.
ST_COUNT-TOTAL = ST_COUNT-TOTAL - 1.

ENDFORM.                    " UPDATE_ZTEGSDT206_ELELN
**** END ADD 2015/03/30 ISID11 ****
**** START ADD 2015/03/30 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  MODIFY_SCREEN
*&---------------------------------------------------------------------*
*       画面変更
*----------------------------------------------------------------------*
FORM MODIFY_SCREEN .

LOOP AT SCREEN.

CASE SCREEN-GROUP1.

WHEN 'M1'.

SCREEN-ACTIVE  = '0'.

WHEN OTHERS.

ENDCASE.

MODIFY SCREEN.

ENDLOOP.

ENDFORM.                    " MODIFY_SCREEN
**** END ADD 2015/03/30 ISID11 ****
**** START ADD BY ISID REN 2015/07/03 ****
*&---------------------------------------------------------------------*
*&      Form  CHK_DELIISSUE
*&---------------------------------------------------------------------*
*       チェック処理
*----------------------------------------------------------------------*
*      -->I_RE_DELIISSUE      出庫確認再取込データ
*      -->I_TD_LIPS           販売出荷
*      -->I_TD_ZTEGSDT203     発注情報
*      -->I_TD_EKPO           購買伝票明細
*      -->I_TD_BUKRS_FLG      会社フラグ
*      -->I_TD_ZTEGSDT001     TradeCommon
*      -->I_TD_ZTEGSDT208     洋上保管場所
*      <--LST_DELIISSUE       出庫確認再取込データ
*      <--O_TD_ALV_ERROR      入出庫連携エラーデータ
*      <--O_W_ERR_FLAG        エラーフラグ
*----------------------------------------------------------------------*
FORM CHK_DELIISSUE
USING I_RE_DELIISSUE     TYPE TYP_TD_STOCK
I_TD_LIPS          TYPE TYP_TD_LIPS
I_TD_ZTEGSDT203    TYPE TYP_TD_ZTEGSDT203
I_TD_EKPO          TYPE TYP_TD_EKPO
I_TD_BUKRS_FLG     TYPE TYP_TD_BUKRS_FLG
I_TD_ZTEGSDT001    TYPE TYP_TD_ZTEGSDT001
I_TD_ZTEGSDT208    TYPE TYP_TD_ZTEGSDT208
CHANGING O_ST_DELIISSUE     TYPE TYP_STOCK
O_TD_ALV_ERROR     TYPE TYP_TD_ERROR
O_W_ERR_FLAG       TYPE FLAG.
* ローカル変数定義
DATA:
LST_ZTEGSDT203     TYPE TYP_ZTEGSDT203,
LST_EKPO           TYPE TYP_EKPO,
LST_ZTEGSDT001     TYPE TYP_ZTEGSDT001,
LST_ZTEGSDT208     TYPE TYP_ZTEGSDT208,
LST_BUKRS_FLG      TYPE TYP_BUKRS_FLG,
LW_SUBRC           TYPE SY-SUBRC,
LTD_LINES          TYPE STANDARD TABLE OF TLINE,
LST_LINES          TYPE TLINE,
LW_NAME            TYPE THEAD-TDNAME,
LST_BUKRS_OUT_FLG  TYPE TYP_BUKRS_FLG,
LW_MSGTX           TYPE ZTEGSDT206-MSGTX.

* 出庫確認の入出庫伝票の明細情報を取得する
READ TABLE I_RE_DELIISSUE
TRANSPORTING NO FIELDS
WITH KEY MBLNR = O_ST_DELIISSUE-MBLNR  "入出庫伝票番号(Out)
MJAHR = O_ST_DELIISSUE-MJAHR  "入出庫伝票年(Out)
BINARY SEARCH.

IF SY-SUBRC <> 0.
MESSAGE E067(ZMEGSD01) WITH O_ST_DELIISSUE-MBLNR
O_ST_DELIISSUE-MJAHR
INTO LW_MSGTX.
*   入出庫伝票を取得できません(入出庫伝票 = &1 入出庫伝票年 = &2)

*   エラーテーブル編集
PERFORM EDIT_ERROR USING O_ST_DELIISSUE
CNS_ZKBUNCC_1
'ZMEGSD01'
'067'
O_ST_DELIISSUE-MBLNR  "メッセージ変数
O_ST_DELIISSUE-MJAHR  "メッセージ変数
SPACE                 "メッセージ変数
SPACE                 "メッセージ変数
LW_MSGTX
SPACE
CHANGING O_TD_ALV_ERROR.
O_W_ERR_FLAG = ABAP_TRUE.
RETURN.
ENDIF.

* 出荷伝票により受注情報を取得
READ TABLE I_TD_LIPS TRANSPORTING NO FIELDS
WITH KEY VBELN = O_ST_DELIISSUE-VBELN_IM        "出荷伝票
POSNR = O_ST_DELIISSUE-VBELP_IM        "出荷明細
BINARY SEARCH.

IF SY-SUBRC <> 0.
MESSAGE E068(ZMEGSD01) WITH O_ST_DELIISSUE-VBELN_IM
INTO LW_MSGTX.
*   出荷伝票を取得できません(出荷伝票 = &1)
*   エラーテーブル編集

PERFORM EDIT_ERROR USING O_ST_DELIISSUE
CNS_ZKBUNCC_1
'ZMEGSD01'
'068'
O_ST_DELIISSUE-VBELN_IM   "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
SPACE                "メッセージ変数
LW_MSGTX
SPACE
CHANGING O_TD_ALV_ERROR.

O_W_ERR_FLAG = ABAP_TRUE.
RETURN.
ENDIF.

* 受発注連携テーブルから発注情報を取得
READ TABLE I_TD_ZTEGSDT203 INTO LST_ZTEGSDT203
WITH KEY VBELN = O_ST_DELIISSUE-VGBEL           "受注伝票番号
POSNR = O_ST_DELIISSUE-VGPOS           "受注明細番号
BINARY SEARCH.

IF SY-SUBRC = 0.
O_ST_DELIISSUE-EBELN = LST_ZTEGSDT203-EBELN.   "購買伝票番号
O_ST_DELIISSUE-EBELP = LST_ZTEGSDT203-EBELP.   "購買伝票の明細番号
ELSE.
MESSAGE E069(ZMEGSD01) WITH O_ST_DELIISSUE-VGBEL
O_ST_DELIISSUE-VGPOS
INTO LW_MSGTX.
*   受発注連携されてない(販売伝票 = &1 明細 = &2)

*   エラーテーブル編集
PERFORM EDIT_ERROR USING O_ST_DELIISSUE
CNS_ZKBUNCC_1
'ZMEGSD01'
'069'
O_ST_DELIISSUE-VGBEL   "メッセージ変数
O_ST_DELIISSUE-VGPOS   "メッセージ変数
SPACE                  "メッセージ変数
SPACE                  "メッセージ変数
LW_MSGTX
SPACE
CHANGING O_TD_ALV_ERROR.

O_W_ERR_FLAG = ABAP_TRUE.
RETURN.
ENDIF.

* 発注明細から入庫プラントと保管場所の情報を取得
READ TABLE I_TD_EKPO INTO LST_EKPO
WITH KEY EBELN = O_ST_DELIISSUE-EBELN         "購買伝票番号
EBELP = O_ST_DELIISSUE-EBELP         "購買伝票の明細番号
BINARY SEARCH.

IF SY-SUBRC = 0.
O_ST_DELIISSUE-WERK_INB  = LST_EKPO-WERKS.     "入庫プラント
O_ST_DELIISSUE-LGORT     = LST_EKPO-LGORT.     "入庫保管場所
O_ST_DELIISSUE-BUKRS_INB = LST_EKPO-BUKRS.     "会社コード
O_ST_DELIISSUE-EVERS     = LST_EKPO-EVERS.     "出荷指示
**** START ADD BY ISID REN 2015/08/14 ****
O_ST_DELIISSUE-MATNR = LST_EKPO-MATNR.      "品目コード
O_ST_DELIISSUE-MEINS = LST_EKPO-MEINS.      "発注単位
**** END ADD BY ISID REN 2015/08/14 ****
ELSE.
MESSAGE E070(ZMEGSD01) WITH O_ST_DELIISSUE-EBELN
O_ST_DELIISSUE-EBELP
INTO LW_MSGTX.
*   購買伝票を取得できません(購買伝票 = &1 明細 = &2)

*   エラーテーブル編集
PERFORM EDIT_ERROR USING O_ST_DELIISSUE
CNS_ZKBUNCC_1
'ZMEGSD01'
'070'
O_ST_DELIISSUE-EBELN   "メッセージ変数
O_ST_DELIISSUE-EBELP   "メッセージ変数
SPACE                  "メッセージ変数
SPACE                  "メッセージ変数
LW_MSGTX
SPACE
CHANGING O_TD_ALV_ERROR.

O_W_ERR_FLAG = ABAP_TRUE.
RETURN.
ENDIF.

* 本社フラグと単一明細フラグを取得する
CLEAR LST_BUKRS_OUT_FLG.
READ TABLE I_TD_BUKRS_FLG
INTO LST_BUKRS_OUT_FLG
WITH KEY BUKRS = O_ST_DELIISSUE-BUKRS
BINARY SEARCH.

IF LST_BUKRS_OUT_FLG-ZFLGHEADOFFICE = 'X'.
*   出荷伝票ヘッダテキスト Invoice Noを取得する
LW_NAME+0(10) = O_ST_DELIISSUE-VBELN_IM.

*   テキスト読込
PERFORM GET_READ_TEXT USING 'Z031'
LW_NAME
'VBBK'
CHANGING LTD_LINES
LW_SUBRC.
CASE LW_SUBRC.
WHEN 0.
*       テキストを取得できた場合、1行目を品目テキストに設定する
CLEAR LST_LINES.
READ TABLE LTD_LINES INTO LST_LINES INDEX 1.
O_ST_DELIISSUE-Z_INVOICE_NO = LST_LINES-TDLINE.  "納品書番号

WHEN OTHERS.
CLEAR O_ST_DELIISSUE-Z_INVOICE_NO.
ENDCASE.

**** START ADD 2015/09/10 ISID21 ****
*   Invoice No取得できない場合、社内用備考から再取得する。
IF O_ST_DELIISSUE-Z_INVOICE_NO IS INITIAL.
*     テキスト読込
PERFORM GET_READ_TEXT USING '0001'
*                                  'J'
LW_NAME
'VBBK'
CHANGING LTD_LINES
LW_SUBRC.

CASE LW_SUBRC.
WHEN 0.

*         テキストを取得できた場合、1行目を品目テキストに設定する
READ TABLE LTD_LINES INTO LST_LINES INDEX 1.
O_ST_DELIISSUE-Z_INVOICE_NO = LST_LINES-TDLINE.  "納品書番号

WHEN OTHERS.

CLEAR:
O_ST_DELIISSUE-Z_INVOICE_NO.

ENDCASE.
ENDIF.
*   2015/09/10 Add End

ELSE.
*   貿易テーブルの Invoice Noを取得する
READ TABLE I_TD_ZTEGSDT001
INTO LST_ZTEGSDT001
WITH KEY VBELN = O_ST_DELIISSUE-VBELN_IM
BINARY SEARCH.

IF SY-SUBRC <> 0.
CLEAR O_ST_DELIISSUE-Z_INVOICE_NO.
ELSE.
O_ST_DELIISSUE-Z_INVOICE_NO
= LST_ZTEGSDT001-Z_INVOICE_NO.  "納品書番号
ENDIF.
ENDIF.

* 本社フラグと単一明細フラグを取得する
READ TABLE I_TD_BUKRS_FLG
INTO LST_BUKRS_FLG
WITH KEY BUKRS = O_ST_DELIISSUE-BUKRS_INB
BINARY SEARCH.

IF SY-SUBRC <> 0.
CLEAR:
O_ST_DELIISSUE-ZFLGHEADOFFICE,     "本社フラグ
O_ST_DELIISSUE-ZFLGINBSINGLE.      "入庫伝票単一明細FLG
ELSE.
O_ST_DELIISSUE-ZFLGHEADOFFICE
= LST_BUKRS_FLG-ZFLGHEADOFFICE.  "本社フラグ
O_ST_DELIISSUE-ZFLGINBSINGLE
= LST_BUKRS_FLG-ZFLGINBSINGLE.   "入庫伝票単一明細FLG
ENDIF.

* 海外の場合（「FS:出庫確認連携データ」-本社フラグ　=　SPACE）のみ
IF O_ST_DELIISSUE-ZFLGHEADOFFICE IS INITIAL.
*   洋上保管場所を取得する
**** START　DELETE　BY ISID21 2015/09/10 ****
*    IF O_ST_DELIISSUE-EVERS <> 'Z1'.    "海外の場合かつ直送以外の場合
**** END DELETE　BY ISID21 2015/09/10 ****
READ TABLE I_TD_ZTEGSDT208
INTO LST_ZTEGSDT208
WITH KEY BUKRS = O_ST_DELIISSUE-BUKRS_INB
BINARY SEARCH.

IF SY-SUBRC <> 0.
CLEAR O_ST_DELIISSUE-LGORT.
ELSE.
O_ST_DELIISSUE-LGORT = LST_ZTEGSDT208-LGORT.  "入庫保管場所
ENDIF.
**** START　DELETE　BY ISID21 2015/09/10 ****
*    ENDIF.
**** END DELETE　BY ISID21 2015/09/10 ****

*   海外の場合、利用在庫可能に設定する
O_ST_DELIISSUE-INSMK = SPACE.             "在庫タイプ

*   本社の場合、在庫保留に設定する
ELSE.
**** START UPD BY ISID21 2015/09/15 ****
*    O_ST_DELIISSUE-INSMK = CNS_INSMK_3.     "在庫保留
*      <FS_DELIISSUE>-INSMK = CNS_INSMK_3.     "在庫保留
IF O_ST_DELIISSUE-EVERS = 'Z1'.
O_ST_DELIISSUE-INSMK = SPACE.                 "利用在庫可能
ELSE.
O_ST_DELIISSUE-INSMK = CNS_INSMK_3.     "在庫保留
ENDIF.
**** END UPD BY ISID21 2015/09/15 ****
ENDIF.

*「出庫確認連携データ」-入庫伝票単一明細フラグが固定値（SPACE)の場合
* 入出庫伝票番号(Outbound)、入出庫伝票年(Outbound)ごとで入庫処理を行う
IF O_ST_DELIISSUE-ZFLGINBSINGLE IS INITIAL.
O_ST_DELIISSUE-MBLNR_SKEY = O_ST_DELIISSUE-MBLNR.
O_ST_DELIISSUE-MJAHR_SKEY = O_ST_DELIISSUE-MJAHR.

* 購買伝票番号ごとで入庫処理を行う（単一明細処理）
ELSE.
O_ST_DELIISSUE-EBELN_SKEY = O_ST_DELIISSUE-EBELN.
O_ST_DELIISSUE-EBELP_SKEY = O_ST_DELIISSUE-EBELP.
ENDIF.

ENDFORM.                    " CHK_DELIISSUE
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_BG_ALV
*&---------------------------------------------------------------------*
*       入庫連携されているデータをバックグランドALVとして出力する
*----------------------------------------------------------------------*
*      -->I_TD_D_C        入庫連携されているデータ
*      -->I_SYST_DATE     システム日付
*      -->I_SYST_TIME     システム時刻
*----------------------------------------------------------------------*
FORM OUTPUT_BG_ALV
USING I_TD_D_C        TYPE TYP_TD_STOCK
I_SYST_DATE     TYPE SY-DATUM
I_SYST_TIME     TYPE SY-UZEIT.
* ローカル変数定義
DATA: LTD_VBAK  TYPE TYP_TD_VBAK,   "販売伝票
LTD_EKKO  TYPE TYP_TD_EKKO,   "購買伝票
LST_ALV   TYPE ZSEGSD0019,
LST_STOCK TYPE TYP_STOCK.

* クリア
CLEAR TD_ALV.

IF SY-BATCH = SPACE.
RETURN.
ENDIF.

* ALV編集
LOOP AT I_TD_D_C INTO LST_STOCK.
*   クリア
CLEAR LST_ALV.

LST_ALV-KDAUF        = LST_STOCK-VGBEL.     "受注伝票番号
LST_ALV-VBELN        = LST_STOCK-VBELN_IM.  "出荷伝票
LST_ALV-MBLNR_OUTB   = LST_STOCK-MBLNR.     "販売の入出庫伝票
LST_ALV-EBELN        = LST_STOCK-EBELN.     "購買発注番号
LST_ALV-MBLNR_INB    = LST_STOCK-MBLNR_INB. "購買の入出庫伝票
LST_ALV-STATUS       = CNS_STATUS_C.        "ステータス
LST_ALV-Z_CRE_YMD    = I_SYST_DATE.         "ジョブ実行日付
LST_ALV-Z_CRE_HMS    = I_SYST_TIME.         "ジョブ実行時刻
LST_ALV-Z_CRE_USERID = SY-UNAME.            "登録者
LST_ALV-MJAHR_OUTB   = LST_STOCK-MJAHR.     "販売の入出庫伝票年
LST_ALV-WERK_OUTB    = LST_STOCK-WERK_OUTB. "出荷プラント
LST_ALV-MJAHR_INB    = LST_STOCK-MJAHR_INB. "購買の入出庫伝票年
LST_ALV-WERK_INB     = LST_STOCK-WERK_INB.  "入庫プラント
LST_ALV-ZKBUNCC      = CNS_ZKBUNCC_1.       "処理区分
APPEND LST_ALV TO TD_ALV.
ENDLOOP.

* 販売組織情報の検索
PERFORM GET_VBAK USING TD_ALV
CHANGING LTD_VBAK.

* 購買組織情報の検索
PERFORM GET_EKKO USING TD_ALV
CHANGING LTD_EKKO.

* その他データの編集
PERFORM EDIT_ALV USING LTD_VBAK
LTD_EKKO
CHANGING TD_ALV.

* ALVバックグランド出力
* 印刷パラメータ取得
PERFORM    DISPLAY_ALV
CHANGING TD_ALV.

ENDFORM.                    " OUTPUT_BG_ALV
*&---------------------------------------------------------------------*
*&      Form  GET_PRINT_PARAMETER
*&---------------------------------------------------------------------*
*       印刷パラメータ取得
*----------------------------------------------------------------------*
*      <--O_TH_PRINT  印刷パラメータ
*----------------------------------------------------------------------*
FORM GET_PRINT_PARAMETER
CHANGING O_TH_PRINT TYPE LVC_S_PRNT.

DATA LTH_PARA TYPE PRI_PARAMS.

CALL FUNCTION 'GET_PRINT_PARAMETERS'
EXPORTING
IMMEDIATELY            = SPACE
**** START DEL BY ISID REN 2015/07/31 ****
*      LAYOUT                 = 'X_58_170"'
*      LINE_COUNT             = '58'
*      LINE_SIZE              = '1024'
**** START DEL BY ISID REN 2015/07/31 ****
NO_DIALOG              = ABAP_TRUE
*     DESTINATION            = P_PADEST
IMPORTING
OUT_PARAMETERS         = LTH_PARA
EXCEPTIONS
ARCHIVE_INFO_NOT_FOUND = 1
INVALID_PRINT_PARAMS   = 2
INVALID_ARCHIVE_PARAMS = 3
OTHERS                 = 4.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
DISPLAY LIKE 'E'.
ELSE.
O_TH_PRINT-PRINT = ABAP_TRUE.
O_TH_PRINT-PRINT_CTRL-PRI_PARAMS = LTH_PARA.
O_TH_PRINT-PRNT_INFO = 'N'.
ENDIF.

ENDFORM.                    " GET_PRINT_PARAMETER
**** END ADD BY ISID REN 2015/07/03 ****


**** START ADD 2015/11/15 ISID21 ****

*&---------------------------------------------------------------------*
*&      SET_BATCH_NUMBER
*&---------------------------------------------------------------------*
*       ロット番号の設定処理
*----------------------------------------------------------------------*
*      -->I_WERK_OUTB  出荷プラント
*      <--O_TD_GM_ITEM  入庫明細
*      <--O_W_SUBRC  リターンコード
*----------------------------------------------------------------------*
FORM SET_BATCH_NUMBER
USING  I_WERK_OUTB TYPE MARC-WERKS
CHANGING O_TD_GM_ITEM TYPE TYP_TD_GM_ITEM
O_W_SUBRC TYPE SY-SUBRC.
* ローカル変数定義
DATA:
L_TH_GM_ITEM TYPE BAPI2017_GM_ITEM_CREATE,
LW_SUBRC TYPE SY-SUBRC,
LW_XCHPF TYPE MARC-XCHPF,
LW_CHARG_INB TYPE MSEG-CHARG,
LST_ZTEGSDT209 TYPE ZTEGSDT209.

* 初期クリア
CLEAR: O_W_SUBRC,
LW_XCHPF.

LOOP AT O_TD_GM_ITEM INTO L_TH_GM_ITEM.

IF SY-TABIX = 1.
*     品目のロット管理有り無しのチェック
SELECT SINGLE XCHPF INTO LW_XCHPF FROM MARC
WHERE MATNR = L_TH_GM_ITEM-MATERIAL
AND WERKS = L_TH_GM_ITEM-PLANT.
ENDIF.

*    クリア処理
CLEAR LW_CHARG_INB.

IF LW_XCHPF IS NOT INITIAL AND L_TH_GM_ITEM-BATCH IS NOT INITIAL.
*　　連動ロットかをチェックする。
SELECT SINGLE CHARG_INB INTO LW_CHARG_INB
FROM ZTEGSDT209
WHERE WERK_OUTB = I_WERK_OUTB
AND CHARG_OUTB = L_TH_GM_ITEM-BATCH
AND WERK_INB = L_TH_GM_ITEM-PLANT.

*     連動ロットが存在しない場合は、新規登録する。
IF SY-SUBRC <> 0.
*         入庫プラントに同じロット番号が存在するかをチェックする。
IF L_TH_GM_ITEM-MATERIAL = L_TH_GM_ITEM-MATERIAL_EXTERNAL.
SELECT SINGLE  CHARG INTO LW_CHARG_INB
FROM MCHA
WHERE MATNR = L_TH_GM_ITEM-MATERIAL
AND WERKS = L_TH_GM_ITEM-PLANT
AND CHARG = L_TH_GM_ITEM-BATCH.

IF SY-SUBRC = 0.
CLEAR LW_CHARG_INB.
ELSE.
LW_CHARG_INB = L_TH_GM_ITEM-BATCH.
ENDIF.
ELSE.
CLEAR LW_CHARG_INB.
ENDIF.

*        ロットのコピー作成BDC
PERFORM COPY_BATCH_BDC
USING I_WERK_OUTB
L_TH_GM_ITEM
CHANGING  LW_CHARG_INB
LW_SUBRC.

*        リターン判定
IF LW_SUBRC <> 0.
O_W_SUBRC = LW_SUBRC.
RETURN.
ELSE.
*          ロット連携テーブルに更新
LST_ZTEGSDT209-WERK_OUTB = I_WERK_OUTB.    "出荷プラント
LST_ZTEGSDT209-CHARG_OUTB = L_TH_GM_ITEM-BATCH. "出荷ロット
LST_ZTEGSDT209-WERK_INB = L_TH_GM_ITEM-PLANT. "入庫プラント
LST_ZTEGSDT209-CHARG_INB = LW_CHARG_INB. "入庫ロット
LST_ZTEGSDT209-Z_CRE_YMD = SY-DATUM.   "日付
LST_ZTEGSDT209-Z_CRE_HMS = SY-UZEIT.   "時刻
LST_ZTEGSDT209-Z_CRE_USERID = SY-UNAME.   "ユーザ
INSERT ZTEGSDT209 FROM LST_ZTEGSDT209.

IF SY-SUBRC = 0.
COMMIT WORK.
ELSE.
O_W_SUBRC = SY-SUBRC.
RETURN.
ENDIF.
ENDIF.
ENDIF.
ENDIF.

*   ロット情報更新
CLEAR L_TH_GM_ITEM-MATERIAL_EXTERNAL.
L_TH_GM_ITEM-BATCH = LW_CHARG_INB.
MODIFY O_TD_GM_ITEM FROM L_TH_GM_ITEM
TRANSPORTING BATCH MATERIAL_EXTERNAL.

ENDLOOP.

ENDFORM.                    "SET_BATCH_NUMBER

*&---------------------------------------------------------------------*
*&      COPY_BATCH_BDC
*&---------------------------------------------------------------------*
*       ロット番号の設定処理
*----------------------------------------------------------------------*
*      -->I_WERK_OUTB  出荷プラント
*      -->I_ST_GM_ITEM  入庫明細情報
*      <--O_CHARG_INB  入庫プラント
*      <--O_W_SUBRC  リターンコード
*----------------------------------------------------------------------*
FORM COPY_BATCH_BDC
USING I_WERK_OUTB TYPE MARC-WERKS
I_ST_GM_ITEM TYPE BAPI2017_GM_ITEM_CREATE
CHANGING  O_CHARG_INB TYPE MSEG-CHARG
O_SUBRC TYPE SY-SUBRC.

* ローカル変数
DATA: LTD_BDCDATA TYPE TABLE OF BDCDATA,
LTD_MESSAGE TYPE TABLE OF BDCMSGCOLL,
LTH_MESSAGE TYPE BDCMSGCOLL,
LST_OPTION TYPE CTU_PARAMS.

* 初期クリア
CLEAR: O_SUBRC,
LST_OPTION,
LTD_BDCDATA[].

** ロット番号再番
*  IF O_CHARG_INB IS INITIAL.
*    CALL FUNCTION 'NUMBER_GET_NEXT'
*      EXPORTING
*        NR_RANGE_NR                =  '01'
*        OBJECT                        = 'BATCH_CLT'
**         QUANTITY                      = '1'
**         SUBOBJECT                     = ' '
**         TOYEAR                        = '0000'
**         IGNORE_BUFFER                 = ' '
*       IMPORTING
*        NUMBER                        = O_CHARG_INB
**         QUANTITY                      =
**         RETURNCODE                    =
*     EXCEPTIONS
*       INTERVAL_NOT_FOUND            = 1
*       NUMBER_RANGE_NOT_INTERN       = 2
*       OBJECT_NOT_FOUND              = 3
*       QUANTITY_IS_0                 = 4
*       QUANTITY_IS_NOT_1             = 5
*       INTERVAL_OVERFLOW             = 6
*       BUFFER_OVERFLOW               = 7
*       OTHERS                        = 8
*              .
*
*    IF SY-SUBRC <> 0 OR O_CHARG_INB IS INITIAL.
*      O_SUBRC = 4.
*      RETURN.
*    ENDIF.
*  ENDIF.

* 第1画面
PERFORM SET_BDC_SCREEN
USING 'SAPLCHRG'
'1000'
CHANGING LTD_BDCDATA.

* Enter
PERFORM SET_BDC_FIELD
USING 'BDC_OKCODE'
'=ENTR'
CHANGING LTD_BDCDATA.

* Cursor
PERFORM SET_BDC_FIELD
USING 'BDC_CURSOR'
'DFBATCH-CHARG'
CHANGING LTD_BDCDATA.

* Material
PERFORM SET_BDC_FIELD
USING 'DFBATCH-MATNR'
I_ST_GM_ITEM-MATERIAL
CHANGING LTD_BDCDATA.

* Ref Material
PERFORM SET_BDC_FIELD
USING 'DFBATCH-REF_MATNR'
I_ST_GM_ITEM-MATERIAL_EXTERNAL
CHANGING LTD_BDCDATA.

* Plant
PERFORM SET_BDC_FIELD
USING 'DFBATCH-WERKS'
I_ST_GM_ITEM-PLANT
CHANGING LTD_BDCDATA.

* Ref Plant
PERFORM SET_BDC_FIELD
USING 'DFBATCH-REF_WERKS'
I_WERK_OUTB
CHANGING LTD_BDCDATA.

* Batch number
PERFORM SET_BDC_FIELD
USING 'DFBATCH-CHARG'
O_CHARG_INB
CHANGING LTD_BDCDATA.

* Ref batch number
PERFORM SET_BDC_FIELD
USING 'DFBATCH-REF_CHARG'
I_ST_GM_ITEM-BATCH
CHANGING LTD_BDCDATA.

* Stock loc.
PERFORM SET_BDC_FIELD
USING 'DFBATCH-LGORT'
I_ST_GM_ITEM-STGE_LOC
CHANGING LTD_BDCDATA.

* 第2画面
PERFORM SET_BDC_SCREEN
USING 'SAPLCHRG'
'1000'
CHANGING LTD_BDCDATA.

* Save
PERFORM SET_BDC_FIELD
USING 'BDC_OKCODE'
'=SAVE'
CHANGING LTD_BDCDATA.

* Cursor
PERFORM SET_BDC_FIELD
USING 'BDC_CURSOR'
'MCHA-HSDAT'
CHANGING LTD_BDCDATA.

* Call MSC1N
LST_OPTION-DISMODE = 'N'.
LST_OPTION-UPDMODE = 'S'.
LST_OPTION-DEFSIZE = 'X'.
CALL TRANSACTION 'MSC1N' USING LTD_BDCDATA
OPTIONS FROM LST_OPTION
MESSAGES INTO LTD_MESSAGE.

*  Error check
LOOP AT  LTD_MESSAGE INTO LTH_MESSAGE
WHERE MSGTYP = 'E' OR MSGTYP = 'A'.
O_SUBRC = 4.
RETURN.
ENDLOOP.

IF SY-SUBRC = 4 AND O_CHARG_INB IS INITIAL.
GET PARAMETER ID 'CHA' FIELD O_CHARG_INB.

IF O_CHARG_INB IS INITIAL.
O_SUBRC = 4.
ENDIF.
ENDIF.

ENDFORM.                    "COPY_BATCH_BDC

*&---------------------------------------------------------------------*
*&      SET_BDC_SCREEN
*&---------------------------------------------------------------------*
*       BDCの画面情報の設定
*----------------------------------------------------------------------*
*      -->I_PROGRAM  プログラム
*      -->I_DYNPRO  画面ID
*      <--O_TD_BDCDATA　BDCデータ
*----------------------------------------------------------------------*
FORM SET_BDC_SCREEN
USING  I_PROGRAM TYPE BDCDATA-PROGRAM
I_DYNPRO    TYPE BDCDATA-DYNPRO
CHANGING O_TD_BDCDATA TYPE TYP_TD_BDCDATA.

* ローカル変数定義
DATA LST_BDCDATA TYPE BDCDATA.

* 初期クリア
CLEAR LST_BDCDATA.

* 設定処理
LST_BDCDATA-PROGRAM = I_PROGRAM.
LST_BDCDATA-DYNPRO = I_DYNPRO.
LST_BDCDATA-DYNBEGIN = ABAP_ON.
APPEND LST_BDCDATA TO O_TD_BDCDATA.

ENDFORM.                    "SET_BDC_SCREEN

*&---------------------------------------------------------------------*
*&      SET_BDC_FIELD
*&---------------------------------------------------------------------*
*       BDCの画面項目の設定
*----------------------------------------------------------------------*
*      -->I_FNAM  項目ID
*      -->I_FVAL  項目値
*      <--O_TD_BDCDATA　BDCデータ
*----------------------------------------------------------------------*
FORM SET_BDC_FIELD
USING  I_FNAM TYPE BDCDATA-FNAM
I_FVAL  TYPE ANY
CHANGING O_TD_BDCDATA TYPE TYP_TD_BDCDATA.

* ローカル変数定義
DATA LST_BDCDATA TYPE BDCDATA.

* 初期クリア
CLEAR LST_BDCDATA.

* 設定処理
LST_BDCDATA-FNAM = I_FNAM.
LST_BDCDATA-FVAL = I_FVAL.
APPEND LST_BDCDATA TO O_TD_BDCDATA.

ENDFORM.                    "SET_BDC_FIELD
**** END ADD 2015/11/15 ISID21 ****
**** START ADD 2016/01/15 ISID19 ****
*&---------------------------------------------------------------------*
*&      Form  CHK_INV_NO
*&---------------------------------------------------------------------*
*       Invoiceチェック
*----------------------------------------------------------------------*
*      -->I_DOCNO             Invoice No.
*      <--O_TD_MSEG_INVCHECK  チェック対象テーブル
*----------------------------------------------------------------------*
FORM CHK_INV_NO
USING
I_DOCNO TYPE BAPI2017_GM_HEAD_01-REF_DOC_NO
CHANGING
O_TD_MSEG_INVCHECK TYPE TYP_TD_MSEG_INVCHECK.

DATA:
LW_REF_DOC_NO     TYPE BAPI2017_GM_HEAD_01-REF_DOC_NO,
LST_MSEG_INVCHECK TYPE TYP_MSEG_INVCHECK,
LTD_MSEG_INVCHECK TYPE TYP_TD_MSEG_INVCHECK.

APPEND LINES OF O_TD_MSEG_INVCHECK TO LTD_MSEG_INVCHECK.
CLEAR O_TD_MSEG_INVCHECK.
MOVE I_DOCNO TO LW_REF_DOC_NO.
CONDENSE LW_REF_DOC_NO NO-GAPS.

LOOP AT LTD_MSEG_INVCHECK INTO LST_MSEG_INVCHECK.
CONDENSE LST_MSEG_INVCHECK-XBLNR_MKPF NO-GAPS.

IF LST_MSEG_INVCHECK-XBLNR_MKPF =  LW_REF_DOC_NO.
APPEND LST_MSEG_INVCHECK TO O_TD_MSEG_INVCHECK.
ENDIF.
ENDLOOP.

ENDFORM.                    " CHK_INV_NO
**** END ADD 2016/01/15 ISID19 ****
