REPORT YB020100 NO STANDARD PAGE HEADING
MESSAGE-ID Y1
LINE-SIZE 120 LINE-COUNT 55.
************************************************************************
* プログラムID  :YB020100
* プログラム名  :ﾛｰｶﾙ／ｻｰﾊﾞｰﾌｧｲﾙ照会
* 処理概要      :ﾌｧｲﾙの照会/ダウンロードを行うツール
* 作成者        :R.TOMOEDA(NDSC) 元PGMは S.IDEGUCHI
* 作成日        :2000.06.05
* 更新履歴
************************************************************************
***初期画面
PARAMETERS: "UPLOAD   RADIOBUTTON GROUP RAD1,
"DOWNLOAD RADIOBUTTON GROUP RAD1 DEFAULT 'X',
LCLDISP  RADIOBUTTON GROUP RAD1,
UPLOAD   RADIOBUTTON GROUP RAD1.
SELECTION-SCREEN ULINE.
PARAMETERS:SAVDISP  RADIOBUTTON GROUP RAD1,
SAVDOWN  RADIOBUTTON GROUP RAD1,
DELSAV   RADIOBUTTON GROUP RAD1.
*PARAMETERS DSN(128) DEFAULT '\\TECR3AP01\R3COMMON\WORK\'.
SELECTION-SCREEN ULINE.
PARAMETERS:SAVDLCT  RADIOBUTTON GROUP RAD1.
PARAMETERS:P_DATE(10).
SELECTION-SCREEN ULINE.
PARAMETERS p_lfile(128) DEFAULT 'C:\TEMP\'.
PARAMETERS DSN(128) DEFAULT '\\TECR3AP01\R3COMMON\WORK\'.


*
*SELECT-OPTIONS PROGRAM FOR SY-REPID OBLIGATORY NO INTERVALS.
*PARAMETERS PGMX     LIKE SY-PAGNO DEFAULT 0.
CONSTANTS: P_DIR(10) VALUE 'C:\TEMP\',  " ローカルディレクトリ
P_EXT(4)  VALUE '.TXT',      " ソース
P_ELT(4)  VALUE '.ELT',      " テキストエレメント
P_CSV(4)  VALUE '.CSV'.      " データファイル
***DATAｴﾚﾒﾝﾄ定義
DATA: BEGIN OF CODE OCCURS 0, L(72), END OF CODE.
DATA: BEGIN OF TAB  OCCURS 0.
INCLUDE STRUCTURE TEXTPOOL.
DATA: END OF TAB.
DATA  P_FILE(128).
*
DATA: BEGIN OF INREC OCCURS 0.
DATA  L(5000).
DATA: END OF INREC.
DATA:LIN TYPE P.
DATA:BEGIN OF DTAB OCCURS 0,
DATA(3072),
END OF DTAB.

DATA: WK_FILEDATA(3072) TYPE C,
ITAB_FILEDATA LIKE TABLE OF WK_FILEDATA.

DATA:G_COMMANDNAME LIKE SXPGCOLIST-NAME,
WA_BTCXPM  TYPE BTCXPM VALUE IS INITIAL,
G_PARA LIKE SXPGCOLIST-PARAMETERS.
DATA G_STATUS      LIKE EXTCMDEXEX-STATUS.
DATA G_TAB_EXEC_PROTOCOL LIKE STANDARD TABLE OF BTCXPM.
********************************************************************
* メイン
START-OF-SELECTION.
*  IF DOWNLOAD = 'X'. PERFORM L_DOWNLOAD.
IF UPLOAD   = 'X'. PERFORM L_UPLOAD.
ELSEIF SAVDOWN  = 'X'. PERFORM SAV_DOWNLOAD.
ELSEIF DELSAV   = 'X'. PERFORM SAV_DELETE.
ELSEIF SAVDISP  = 'X'. PERFORM DISP.
ELSEIF LCLDISP  = 'X'. PERFORM L_DISP.
ELSEIF SAVDLCT  = 'X'. PERFORM CALL_SAXG.
ENDIF.
END-OF-SELECTION.
************************************************************************
* ダウンロード(REPORT PROGRAM)
************************************************************************
FORM L_DOWNLOAD.
OPEN DATASET DSN FOR INPUT IN TEXT MODE.
do.
read dataset DSN into wk_filedata.
if sy-subrc <> 0.
exit.
endif.
append wk_filedata to itab_filedata.

enddo.
CLOSE DATASET DSN.
CALL FUNCTION 'WS_DOWNLOAD'
EXPORTING  FILENAME = P_LFILE
FILETYPE = 'DAT'
TABLES     DATA_TAB = itab_filedata.
ENDFORM.
************************************************************************
* アップロード(REPORT PROGRAM)
************************************************************************
FORM L_UPLOAD.
REFRESH DTAB.
CLEAR :LIN.
CALL FUNCTION 'WS_UPLOAD'
EXPORTING  FILENAME = P_LFILE
*                 FILETYPE = 'DAT'
TABLES     DATA_TAB = DTAB
EXCEPTIONS OTHERS   = 1.
CHECK SY-SUBRC = 0.
SORT TAB BY ID KEY.
IF SY-SUBRC <> 0.
MESSAGE S400 WITH 'E:FILE NOT FOUND'. STOP.
ELSE.
DESCRIBE TABLE DTAB LINES LIN.
ENDIF.

DELETE DATASET  DSN.
OPEN DATASET DSN FOR OUTPUT IN TEXT MODE.

IF SY-SUBRC <> 0.
MESSAGE I401 WITH 'ファイルオープンエラー' DSN. STOP.
ENDIF.

LOOP AT DTAB.
TRANSFER DTAB TO DSN.
ENDLOOP.

IF SY-SUBRC = 0.
MESSAGE I402 WITH LIN '件、ダウンロードしました'.
ENDIF.
ENDFORM.
************************************************************************
* サーバファイルダウンロード
************************************************************************
FORM SAV_DOWNLOAD.
CLEAR:LIN.
REFRESH INREC.
* OPEN DATASET DSN FOR INPUT IN BINARY MODE.
OPEN DATASET DSN FOR INPUT IN TEXT MODE.
CHECK SY-SUBRC = 0.
READ DATASET DSN INTO INREC.
WHILE SY-SUBRC = 0.
APPEND INREC.
READ DATASET DSN INTO INREC.
ENDWHILE.
CLOSE DATASET DSN.
DESCRIBE TABLE INREC LINES LIN.
*  READ TABLE PROGRAM INDEX 1.
*  CONCATENATE P_DIR PROGRAM-LOW P_CSV INTO P_FILE.
CALL FUNCTION 'WS_DOWNLOAD'
EXPORTING  FILENAME = P_LFILE
FILETYPE = 'DAT'
TABLES     DATA_TAB = INREC.
IF SY-SUBRC = 0.
MESSAGE I402 WITH LIN '件、ダウンロードしました'.
ENDIF.
ENDFORM.
************************************************************************
* サーバファイル削除
************************************************************************
FORM SAV_DELETE.
DELETE DATASET DSN.
ENDFORM.
************************************************************************
* サーバファイルの表示
************************************************************************
FORM DISP.
DATA: LEN TYPE P,
ROW TYPE P.
OPEN DATASET DSN FOR INPUT IN TEXT MODE.
CHECK SY-SUBRC = 0.
READ DATASET DSN INTO INREC.
WHILE SY-SUBRC = 0.
LEN = STRLEN( INREC ).
ROW = CEIL( LEN / 100 ).
ROW = ROW + 3.
RESERVE ROW LINES.
SKIP 1.
WRITE: / '№', SY-INDEX LEFT-JUSTIFIED,
/ '....+....1....+....2....+....3....+....4....+....5' NO-GAP,
'....+....6....+....7....+....8....+....9....+....0'.
WHILE INREC <> ''.
WRITE / INREC(100).
INREC = INREC+100.
ENDWHILE.
READ DATASET DSN INTO INREC.
ENDWHILE.
CLOSE DATASET DSN.
ENDFORM.
************************************************************************
*
************************************************************************
TOP-OF-PAGE.
*IF PGMX <> 0 AND SY-PAGNO > PGMX.
*  STOP.
*  ENDIF.
IF SAVDISP = 'X'.
WRITE / 'サーバファイル表示 >>>>>'.
ELSEIF LCLDISP = 'X'.
WRITE / 'ローカルファイル表示 >>>>>'.
ENDIF.
WRITE: "'プログラムＩＤ：', PROGRAM-LOW,
'( 日時 :', SY-DATUM, SY-UZEIT, ')',
SY-PAGNO, '頁'.
ULINE.
************************************************************************
* クライアントファイルの表示
************************************************************************
FORM L_DISP.
DATA: LEN TYPE P,
ROW TYPE P.
*  CONCATENATE P_DIR PROGRAM-LOW P_CSV INTO P_FILE.
CALL FUNCTION 'WS_UPLOAD'
EXPORTING  FILENAME = P_lFILE
*               FILETYPE = 'DAT'
TABLES     DATA_TAB = INREC
EXCEPTIONS OTHERS   = 1.
CHECK SY-SUBRC = 0.
LOOP AT INREC.
LEN = STRLEN( INREC ).
ROW = CEIL( LEN / 100 ).
ROW = ROW + 3.
RESERVE ROW LINES.
SKIP 1.
WRITE: / '№', SY-TABIX LEFT-JUSTIFIED,
/ '....+....1....+....2....+....3....+....4....+....5' NO-GAP,
'....+....6....+....7....+....8....+....9....+....0'.
WHILE INREC <> ''.
WRITE / INREC(100).
INREC = INREC+100.
ENDWHILE.
ENDLOOP.
ENDFORM.
************************************************************************
*** サーバのディレクトリを照会する
************************************************************************
FORM CALL_SAXG.
DATA:CNT TYPE P.
G_COMMANDNAME = 'ZCMD'.
G_PARA+0(4) = 'DIR'.
G_PARA+4(30) = DSN.
CALL FUNCTION 'SXPG_CALL_SYSTEM'
EXPORTING
COMMANDNAME                      = G_COMMANDNAME
ADDITIONAL_PARAMETERS            = G_PARA
*   IMPORTING
*     STATUS                           =
*     EXITCODE                         =
TABLES
EXEC_PROTOCOL                    = G_TAB_EXEC_PROTOCOL
*   EXCEPTIONS
*     NO_PERMISSION                    = 1
*     COMMAND_NOT_FOUND                = 2
*     PARAMETERS_TOO_LONG              = 3
*     SECURITY_RISK                    = 4
*     WRONG_CHECK_CALL_INTERFACE       = 5
*     PROGRAM_START_ERROR              = 6
*     PROGRAM_TERMINATION_ERROR        = 7
*     X_ERROR                          = 8
*     PARAMETER_EXPECTED               = 9
*     TOO_MANY_PARAMETERS              = 10
*     ILLEGAL_COMMAND                  = 11
*     OTHERS                           = 12
.
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
CLEAR CNT.
CNT = 1.
LOOP AT G_TAB_EXEC_PROTOCOL INTO WA_BTCXPM.
IF CNT = 1 OR CNT = 2.
CNT = CNT + 1.
CONTINUE.
ELSEIF CNT = 5.
ULINE.
WRITE:/000 '作成日時',
033 'ﾊﾞｲﾄ数',
050 'ファイル名'.
ULINE.
ENDIF.
IF WA_BTCXPM-MESSAGE+24(5) = '<DIR>'.
CNT = CNT + 1.
CONTINUE.
ENDIF.
IF WA_BTCXPM-MESSAGE+0(1) = SPACE.
WRITE:/000 WA_BTCXPM-MESSAGE.
CNT = CNT + 1.
CONTINUE.
ENDIF.
IF P_DATE <> SPACE.
IF WA_BTCXPM-MESSAGE+0(10) = P_DATE.
WRITE:/000 WA_BTCXPM-MESSAGE+0(38),
050 WA_BTCXPM-MESSAGE+38(50).
ELSE.
ENDIF.
ELSE.
WRITE:/000 WA_BTCXPM-MESSAGE+0(38),
050 WA_BTCXPM-MESSAGE+38(50).
ENDIF.
CNT = CNT + 1.
ENDLOOP.

ENDFORM.
*** END OF PROGRAM ***
