*&---------------------------------------------------------------------*
*& Report  ZTEST_GSL20140217_01
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ZTEST_GSL20140217_01.

*-- 命名規則
* テキストシンボル
* 選択画面　　：S01〜S99
* リストヘッダ：H01〜H99
* リスト明細　：D01〜D99
* メッセージ　：M01〜M99

*-- 推奨メッセージ
* メッセージクラス：NI
* メッセージ番号  ：143
* 汎用モジュール&1で予期せぬエラーが発生しました。(エラーコード&2)
* メッセージクラス：NI
* メッセージ番号  ：136
* データが選択されませんでした

*-- ALVで参照型が違うパラメータ
*REUSE_ALV_GRID_DISPLAY_LVC
* IS_LAYOUT_LVC	TYPE	LVC_S_LAYO
* IT_FIELDCAT_LVC	TYPE	LVC_T_FCAT
* IT_SPECIAL_GROUPS_LVC	TYPE	LVC_T_SGRP
* IT_SORT_LVC	TYPE	LVC_T_SORT
* IT_FILTER_LVC	TYPE	LVC_T_FILT
* IS_PRINT_LVC	TYPE	LVC_S_PRNT
* IS_REPREP_ID_LVC	TYPE	LVC_S_RPRP

*REUSE_ALV_GRID_DISPLAY
* IS_LAYOUT	TYPE	SLIS_LAYOUT_ALV
* IT_FIELDCAT	TYPE	SLIS_T_FIELDCAT_ALV
* IT_SPECIAL_GROUPS	TYPE	SLIS_T_SP_GROUP_ALV
* IT_SORT	TYPE	SLIS_T_SORTINFO_ALV
* IT_FILTER	TYPE	SLIS_T_FILTER_ALV
* IS_PRINT	TYPE	SLIS_PRINT_ALV
* IS_REPREP_ID	TYPE	SLIS_REPREP_ID

*-----------------------------------------------------------------------
* INCLUDE宣言
*-----------------------------------------------------------------------
*INCLUDE

*-----------------------------------------------------------------------
* テーブル宣言
*-----------------------------------------------------------------------
TABLES:
* SELECT-OPTIONSを使用するために必要
VBAK,
VBAP.

*-----------------------------------------------------------------------
* データ型グループ
*-----------------------------------------------------------------------
TYPE-POOLS:
SSCR, "選択画面制御のインクルード
SLIS. "ALVのインクルード

*-----------------------------------------------------------------------
* 構造定義
*-----------------------------------------------------------------------
*TYPES:

*-----------------------------------------------------------------------
* ワークエリア定義
*-----------------------------------------------------------------------
DATA:
GW_SY           TYPE SY,                "ｼｽﾃﾑ変数用
GW_DISVARIANT   TYPE DISVARIANT,        "ﾚｲｱｳﾄ取得用
GW_LAYOUT       TYPE SLIS_LAYOUT_ALV,   "ALVﾚｲｱｳﾄ
GW_LAYOUT_LVC   TYPE LVC_S_LAYO,        "ALVﾚｲｱｳﾄ(LVC用)
GW_FIELDCAT     TYPE SLIS_FIELDCAT_ALV, "ﾌｨｰﾙﾄﾞｶﾀﾛｸﾞ編集用
* 汎用モジュールパラメータの参照型は、LVC_T_FCATなので間違えないように
GW_FIELDCAT_LVC TYPE LVC_S_FCAT,        "ﾌｨｰﾙﾄﾞｶﾀﾛｸﾞ編集用(LVC用)
GW_KEYINFO     TYPE SLIS_KEYINFO_ALV,   "HIERSEQキー設定
GW_SCOL         TYPE LVC_S_SCOL,        "ｶﾗｰﾘﾝｸﾞ
GW_PRINT        TYPE SLIS_PRINT_ALV,    "印刷ﾊﾟﾗﾒｰﾀ
GW_PRINT_LVC    TYPE LVC_S_PRNT.        "印刷ﾊﾟﾗﾒｰﾀ(LVC用)

DATA:
* ALV出力用
* データを宣言する際、ディクショナリ参照型の場合はTYPE命令が
* 普通だが、ALV出力するためのカタログを作成する際、TYPEで
* 宣言されている変数のカタログは汎用モジュールで生成されない。
* また、生成されない場合、ABAPメモリを使用しているときがあるので、
* TA_ALV_TYPEで作成している構造と出力構造が違う場合は、
* トランザクションSE38を完全に抜けてから再度実行してみると
* 正しい結果になる場合がある。
* ALVからイベント(ダブルクリック)を起こして処理する場合、
* ALV側で呼出元のソースを一旦読込む。その際Char72バイトの領域に
* 格納するため72文字以上を使用してコードを書いていると
* ショートダンプを起こすので注意が必要
BEGIN OF T_ALV_ITEM,
ICON       LIKE ICON-ID,           "信号機
CHKBX(1)   TYPE C,                 "チェックボックス
AUART      LIKE VBAK-AUART,        "伝票タイプ
PSTYV      LIKE VBAP-PSTYV,        "明細カテゴリ
END   OF T_ALV_ITEM,

* REUSE_ALV_HIERSEQ_LIST_DISPLAY ヘッダ用
BEGIN OF T_ALV_H_HEADER,
EXPAND(1)  TYPE C,                 "選択ボタン
AUART      TYPE VBAK-AUART,        "伝票タイプ
END   OF T_ALV_H_HEADER,

* REUSE_ALV_HIERSEQ_LIST_DISPLAY 明細
BEGIN OF T_ALV_H_ITEM,
CHKBX(1)   TYPE C,                 "チェックボックス
AUART      TYPE VBAK-AUART,        "伝票タイプ
PSTYV      TYPE VBAP-PSTYV,        "明細カテゴリ
END   OF T_ALV_H_ITEM.

*-----------------------------------------------------------------------
* 内部テーブル定義
*-----------------------------------------------------------------------
DATA:
GI_FIELDCAT TYPE STANDARD TABLE OF SLIS_FIELDCAT_ALV,  "ﾌｨｰﾙﾄﾞｶﾀﾛｸﾞ用
* LVC_T_FCATが行データ型なので、STANDARD TABLE OF は不要
GI_FIELDCAT_LVC TYPE LVC_T_FCAT, "ﾌｨｰﾙﾄﾞｶﾀﾛｸﾞ用(LVC)
GI_SCOL         TYPE LVC_T_SCOL, "ｶﾗｰﾘﾝｸﾞ
GI_HEADERS  TYPE SLIS_T_LISTHEADER,                    "ALVﾍｯﾀﾞ編集用
GI_EVENT    TYPE SLIS_T_EVENT,                         "ｲﾍﾞﾝﾄ設定用
GI_ALV_DATA LIKE STANDARD TABLE OF T_ALV_ITEM,         "ALV出力用
GI_ALV_H_HEADER LIKE STANDARD TABLE OF T_ALV_H_HEADER, "ALV出力用(ﾍｯﾀﾞ)
GI_ALV_H_ITEM   LIKE STANDARD TABLE OF T_ALV_H_ITEM.   "ALV出力用(明細)


*-----------------------------------------------------------------------
* 変数定義
*-----------------------------------------------------------------------
DATA:
GV_TITLE      TYPE LVC_TITLE,  "ﾀｲﾄﾙ
GV_HEIGHT_TOP TYPE I.          "ﾍｯﾀﾞ高

*-----------------------------------------------------------------------
* 定数定義
*-----------------------------------------------------------------------
CONSTANTS:
*-- 共通メッセージタイプ定数一覧
BEGIN OF GC_COM_MSG_TYPE,

*   エラーメッセージを出力します。
*   全てのプログラムを強制終了します。
*   JOB実行の場合、ステータスがエラーになります。
ABEND  TYPE SY-MSGTY VALUE 'A',

*   エラーメッセージを出力します。
*   AT SELECTION-SCREENで使用した場合は、制御を選択画面に戻すことが
*   できます。
*   START-OF-SELECTION以降に使用するとプログラムが強制終了するので
*   注意が必要です。
*   JOB実行の場合、ステータスがエラーになります。
ERROR  TYPE SY-MSGTY VALUE 'E',

*   情報メッセージを出力します。
*   ENTERを押下すると処理を続行します。
INFO   TYPE SY-MSGTY VALUE 'I',

*   正常メッセージを出力します。
STATUS TYPE SY-MSGTY VALUE 'S',

*   警告メッセージを出力します。
*   AT SELECTION-SCREENで使用した場合は、制御を選択画面に戻すことが
*   できます。(ENTERを押下すると処理を続行させることが可能)
*   START-OF-SELECTION以降に使用するとプログラムが強制終了するので
*   注意が必要です。
*   JOB実行の場合、ステータスがエラーになります。
WARN   TYPE SY-MSGTY VALUE 'W',

*   ショートダンプを起こすことができますが、通常は使用しないでください。
EXIT   TYPE SY-MSGTY VALUE 'X',
END   OF GC_COM_MSG_TYPE,

*-- 汎用モジュールエラーメッセージ
* 主にエラー予測をおこなっていない汎用モジュールを対象に、
* エラーとなった汎用モジュール名およびリターンコードを
* メッセージタイプ'S'で表示するエラー時の処理用に使用する。
BEGIN OF GC_MSG,
F_SELECT_OPTIONS(23) TYPE C VALUE 'SELECT_OPTIONS_RESTRICT',
F_REUSE_ALV_GRID(22) TYPE C VALUE 'REUSE_ALV_GRID_DISPLAY',
F_REUSE_ALV_FIEL(28) TYPE C VALUE 'REUSE_ALV_FIELDCATALOG_MERGE',
F_REUSE_ALV_LVC(26)  TYPE C
VALUE 'REUSE_ALV_GRID_DISPLAY_LVC',
F_REUSE_ALV_HIER(30) TYPE C
VALUE 'REUSE_ALV_HIERSEQ_LIST_DISPLAY',
END   OF GC_MSG,

*-- ALV表示用
BEGIN OF GC_ALV_VIEW,
S_NAME    TYPE TABNAME       VALUE 'T_ALV_ITEM',
S_NAME_H  TYPE TABNAME       VALUE 'T_ALV_H_HEADER',
S_NAME_I  TYPE TABNAME       VALUE 'T_ALV_H_ITEM',
T_NAME    TYPE TABNAME       VALUE 'GI_ALV_DATA',      "ALV表示TAB名
TABNAME   TYPE TABNAME       VALUE 'T_ALV_FIELDCAT',
PF_PROG   TYPE TRDIR-NAME    VALUE 'SAPLSETB',            "ﾌﾟﾛｸﾞﾗﾑ名
PF_PROG_H TYPE TRDIR-NAME    VALUE 'ZTEST_ALV_01_DISPLAY',
*    RF_INCL   TYPE TRDIR-NAME    VALUE SY-REPID,
BOXNAME   TYPE FIELDNAME     VALUE 'CHKBX',
EXPANDNAME TYPE FIELDNAME    VALUE 'EXPAND',
PF_STATUS TYPE GUI_STATUS    VALUE 'STANDARD_FULLSCREEN', "GUIｽﾃｰﾀｽ
PF_STATUS_H TYPE GUI_STATUS  VALUE 'STANDARD',
NM_ST_SET TYPE SLIS_FORMNAME VALUE 'F_SET_PF_STATUS',     "GUIｽﾃｰﾀｽ
NM_ST_SET_H TYPE SLIS_FORMNAME VALUE 'F_SET_PF_STATUS_HIERSEQ',
NM_U_COMD TYPE SLIS_FORMNAME VALUE 'F_EXEC_USER_COMMAND', "
NM_U_COMD_H TYPE SLIS_FORMNAME VALUE 'F_EXEC_USER_COMMAND_HIERSEQ',
NM_T_HEAD TYPE SLIS_FORMNAME VALUE 'F_ALV_CALL_HEADER',   "ﾍｯﾀﾞCALL
END   OF GC_ALV_VIEW,

*-- ALV
BEGIN OF GC_ALV_FLG,
X    TYPE XFELD VALUE 'X',
A(1) TYPE C     VALUE 'A',
H(1) TYPE C     VALUE 'H',
S(1) TYPE C     VALUE 'S',
END   OF GC_ALV_FLG,

*-- ALV項目名
BEGIN OF GC_ALV_FIELD,
ICON       TYPE STRING VALUE 'ICON',
CHKBX      TYPE STRING VALUE 'CHKBX',
AUART      TYPE STRING VALUE 'AUART',
PSTYV      TYPE STRING VALUE 'PSTYV',
LINE_COLOR TYPE STRING VALUE 'L_COLOR',
CELL_COLOR TYPE STRING VALUE 'C_COLOR',
CELL_TAB   TYPE STRING VALUE 'C_TAB',
END   OF GC_ALV_FIELD,

*-- ALV機能コード名
BEGIN OF GC_ALV_FUNC,
CHECK_ALL  TYPE SY-UCOMM VALUE 'C_ALL',
CHECK_SAL  TYPE SY-UCOMM VALUE 'C_SAL',
END   OF GC_ALV_FUNC,

*-- 選択画面制御
GC_SR_KIND_S TYPE RSSCR-KIND      VALUE 'S', "列名SIGN
GC_SR_SIGN_I TYPE RSRESTRICT-SIGN VALUE 'I', "列名SIGNのI(選択)
GC_SR_SIGN_E TYPE RSRESTRICT-SIGN VALUE 'E', "列名SIGNのE(除外)
GC_SR_OPT_1  TYPE RSRESTRICT-OPTIONLIST VALUE '1',
GC_SR_ON     TYPE XFELD VALUE 'X', "使用可能オプション選択区分
GC_SNAME1    TYPE RSRESTRICT-OBJECTNAME VALUE 'S_CAID09',

*-- 変数項目値判定用
BEGIN OF GC_CHECK_FLG,
X          TYPE XFELD VALUE 'X',
END   OF GC_CHECK_FLG.

*-----------------------------------------------------------------------
* 選択画面定義(PARAMETERS&SELECT-OPTIONS)
*-----------------------------------------------------------------------
*PARAMETERS: 単一入力項目を定義
PARAMETERS:
* ラジオボタン
* REUSE_ALV_GRID_DISPLAY
P_CAID09 TYPE CHAR1 RADIOBUTTON GROUP RB01,
* REUSE_ALV_GRID_DISPLAY_LVC
P_CAID10 TYPE CHAR1 RADIOBUTTON GROUP RB01,
* REUSE_ALV_HIERSEQ_LIST_DISPLAY(未実装)
P_CAID11 TYPE CHAR1 RADIOBUTTON GROUP RB01.


*SELECT-OPTIONS: 複数入力項目を定義(From-To形式の入力項目)
SELECT-OPTIONS:
* 標準(テーブル項目参照のみ)
S_AUART FOR VBAK-AUART,
S_PSTYV FOR VBAP-PSTYV.

*-- ALV
* ALVレイアウトの指定
SELECTION-SCREEN BEGIN OF BLOCK BL02 WITH FRAME TITLE TEXT-S03.
PARAMETERS P_LAYOUT TYPE DISVARIANT-VARIANT.  "ﾚｲｱｳﾄ
SELECTION-SCREEN END   OF BLOCK BL02.

*-----------------------------------------------------------------------
* INITIALIZATION
*-----------------------------------------------------------------------
INITIALIZATION.
* プログラム実行直後、選択画面表示前に実行される。
* 変数のクリアなどの初期設定処理を記載する。
* 選択項目に初期値をセットしたい場合はこのイベントで指定する。

** 選択画面制御
*  PERFORM F_SELECT_OPTIONS_RESTRICT.

*-----------------------------------------------------------------------
* AT SELECTION-SCREEN
*-----------------------------------------------------------------------
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_LAYOUT.
*-- ALVバリアントヘルプ呼出
PERFORM F_ALV_CALL_VARI CHANGING P_LAYOUT.

AT SELECTION-SCREEN.
* 選択画面で機能コードを指定された場合にこのイベントが実行される。
* 入力パラメータチェックなどで使用する。

*-----------------------------------------------------------------------
*START-OF-SELECTION
*-----------------------------------------------------------------------
START-OF-SELECTION.
* 選択画面から実行ボタンを押された場合にこのイベントが実行される。
* START-OF-SELECTIONを省略した場合は全てがSTART-OF-SELECTIONイベント内
* であると定義される。

*-- ALV出力用データ取得
PERFORM F_GET_DATA_SAMPLE.

*-- ALV出力
PERFORM F_OUTPUT_ALV.

*-----------------------------------------------------------------------
*END-OF-SELECTION
*-----------------------------------------------------------------------
END-OF-SELECTION.
* 最終処理。全ての処理が終了した場合にこのイベントが実行される。
* 一覧画面の出力(WRITE命令)や変数のクリアなどで使用する。
* また、プログラム処理でSTOP命令を使用するとこのイベントまでジャンプ
* する。

*-----------------------------------------------------------------------
*TOP-OF-PAGE
*-----------------------------------------------------------------------
TOP-OF-PAGE.
* WRITE命令などで、新しいページが始まるときにこのイベントが実行される。
* ヘッダ出力などで使用することがある。

*-----------------------------------------------------------------------
*END-OF-PAGE
*-----------------------------------------------------------------------
END-OF-PAGE.
* WRITE命令などで、頁の最終行に達したときにこのイベントが実行される。
* あまり多用されない。

*-----------------------------------------------------------------------
*AT LINE-SELECTION
*-----------------------------------------------------------------------
AT LINE-SELECTION.
* WRITE命令で出力した一覧で、機能コードPICK(行のダブルクリック OR
* F2ボタンを押下)をトリガーとしてこのイベントが実行される。
* 伝票番号を出力し、それをダブルクリックしたら伝票照会画面にジャンプする
* などの操作が可能になる。

*-----------------------------------------------------------------------
*AT USER-COMMAND
*-----------------------------------------------------------------------
AT USER-COMMAND.
* ABAP一覧上に対してさらに実行ボタンなどを付けることができる。
* この実行ボタン押下した際に処理されるイベントがAT USER-COMMANDである。
* 実行ボタンが押下された場合、チェックボックスが選択されている行を
* 処理する。
* 全選択ボタンが押下された場合、全てのチェックボックスをONにする。
* 全選択解除ボタンが押下された場合、全てのチェックボックスをOFFにする。

*&---------------------------------------------------------------------*
*&      Form  F_ALV_CALL_VARI
*&---------------------------------------------------------------------*
*       Display variant selection dialog box
*----------------------------------------------------------------------*
*  <--  AO_VARI  ALVレイアウト
*----------------------------------------------------------------------*
FORM F_ALV_CALL_VARI CHANGING VALUE(AO_VARI) TYPE ANY.

DATA:  LW_DISVARIANT TYPE DISVARIANT.
CLEAR: LW_DISVARIANT.

LW_DISVARIANT-REPORT = SY-REPID.

CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
EXPORTING
IS_VARIANT                = LW_DISVARIANT
*     I_TABNAME_HEADER          =
*     I_TABNAME_ITEM            =
*     IT_DEFAULT_FIELDCAT       =
I_SAVE                    = GC_ALV_FLG-A
I_DISPLAY_VIA_GRID        = GC_ALV_FLG-X
IMPORTING
*     E_EXIT                    =
ES_VARIANT                = LW_DISVARIANT
EXCEPTIONS
NOT_FOUND                 = 1
PROGRAM_ERROR             = 2
OTHERS                    = 3
.
IF SY-SUBRC = 0.
AO_VARI = LW_DISVARIANT-VARIANT.
ELSE.
CLEAR: GW_SY.
GW_SY = SY.
PERFORM F_EXIT_ERROR USING GC_CHECK_FLG-X.
ENDIF.

ENDFORM.                    " F_ALV_CALL_VARI
*&---------------------------------------------------------------------*
*&      Form  f_exit_error
*&---------------------------------------------------------------------*
*       エラー処理
*----------------------------------------------------------------------*
*      -->ai_stop    stop フラグ
*----------------------------------------------------------------------*
FORM F_EXIT_ERROR USING VALUE(AI_STOP) TYPE ANY.

IF GW_SY-MSGTY IS INITIAL.
GW_SY-MSGTY = GC_COM_MSG_TYPE-ERROR.
ENDIF.

CASE SY-BATCH.
WHEN SPACE.  "オンライン実行の場合
MESSAGE ID GW_SY-MSGID TYPE GC_COM_MSG_TYPE-STATUS
NUMBER GW_SY-MSGNO DISPLAY LIKE GW_SY-MSGTY
WITH GW_SY-MSGV1 GW_SY-MSGV2 GW_SY-MSGV3 GW_SY-MSGV4.
WHEN OTHERS. "バックグラウンド実行の場合
MESSAGE ID GW_SY-MSGID TYPE GW_SY-MSGTY
NUMBER GW_SY-MSGNO
WITH GW_SY-MSGV1 GW_SY-MSGV2 GW_SY-MSGV3 GW_SY-MSGV4.
ENDCASE.

IF AI_STOP IS NOT INITIAL.
*    STOP.
*STOP命令廃止の為
LEAVE LIST-PROCESSING.
ENDIF.

ENDFORM.                    " F_EXIT_ERROR
*&---------------------------------------------------------------------*
*&      Form  F_OUTPUT_ALV
*&---------------------------------------------------------------------*
*       ALV出力
*----------------------------------------------------------------------*
FORM F_OUTPUT_ALV .

*-- ALVヘッダ設定　サンプル(※ヘッダ付の場合のみ)
PERFORM F_ALV_SET_HEADERS CHANGING GI_HEADERS.

IF P_CAID09 = GC_CHECK_FLG-X.
*-- ALV項目カタログ作成
PERFORM F_ALV_SET_FIELDCAT USING GC_ALV_VIEW-S_NAME
CHANGING GI_FIELDCAT.
ENDIF.

IF P_CAID10 = GC_CHECK_FLG-X.
*-- ALV項目カタログ作成(LVC用)
PERFORM F_ALV_SET_FIELDCAT_LVC USING GC_ALV_VIEW-S_NAME
CHANGING GI_FIELDCAT_LVC.
ENDIF.

IF P_CAID11 = GC_CHECK_FLG-X.
*-- ALV項目カタログ作成(HIERSEQ用)
PERFORM F_ALV_SET_FIELDCAT USING GC_ALV_VIEW-S_NAME_H
CHANGING GI_FIELDCAT.
PERFORM F_ALV_SET_FIELDCAT USING GC_ALV_VIEW-S_NAME_I
CHANGING GI_FIELDCAT.
ENDIF.

IF P_CAID09 = GC_CHECK_FLG-X.
*-- ALV項目カタログ編集　サンプル(※カタログ値編集必要な場合のみ)
PERFORM F_ALV_EDIT_FIELDCAT CHANGING GI_FIELDCAT.
ENDIF.

IF P_CAID10 = GC_CHECK_FLG-X.
*-- ALV項目カタログ編集(LVC用)
PERFORM F_ALV_EDIT_FIELDCAT_LVC CHANGING GI_FIELDCAT_LVC.
ENDIF.

IF P_CAID11 = GC_CHECK_FLG-X.
*-- ALV項目カタログ編集(HIERSEQ用)
PERFORM F_ALV_EDIT_FIELDCAT_HIERSEQ CHANGING GI_FIELDCAT.
ENDIF.

*-- ALVイベント設定
PERFORM F_ALV_SET_EVENT CHANGING GI_EVENT.

IF P_CAID09 = GC_CHECK_FLG-X.
*-- ALVレイアウト設定
PERFORM F_ALV_SET_LAYOUT CHANGING GW_LAYOUT.
ENDIF.

IF P_CAID10 = GC_CHECK_FLG-X.
*-- ALVレイアウト設定(LVC用)
PERFORM F_ALV_SET_LAYOUT_LVC CHANGING GW_LAYOUT_LVC.
ENDIF.

IF P_CAID11 = GC_CHECK_FLG-X.
*-- ALVレイアウト設定(HIERSEQ用)
PERFORM F_ALV_SET_LAYOUT_HIERSEQ CHANGING GW_LAYOUT.
*-- 紐付
GW_KEYINFO-HEADER01 = 'CARRID'.
GW_KEYINFO-HEADER02 = SPACE.
GW_KEYINFO-HEADER03 = SPACE.
GW_KEYINFO-HEADER04 = SPACE.
GW_KEYINFO-HEADER05 = SPACE.
GW_KEYINFO-ITEM01   = 'CARRID'.
GW_KEYINFO-ITEM02   = SPACE.
GW_KEYINFO-ITEM03   = SPACE.
GW_KEYINFO-ITEM04   = SPACE.
GW_KEYINFO-ITEM05   = SPACE.
ENDIF.

*-- ALVタイトル設定
PERFORM F_ALV_SET_TITILE CHANGING GW_DISVARIANT-VARIANT
GV_TITLE.
*-- ALV出力件数チェック
PERFORM F_ALV_COUNT_DATA USING GI_ALV_DATA.

IF P_CAID09 = GC_CHECK_FLG-X.
*-- 印刷パラメータ設定
PERFORM F_ALV_COM_PRINT CHANGING GW_PRINT.
ENDIF.

IF P_CAID10 = GC_CHECK_FLG-X.
*-- 印刷パラメータ設定(LVC用)
PERFORM F_ALV_COM_PRINT_LVC CHANGING GW_PRINT_LVC.
ENDIF.

IF P_CAID09 = GC_CHECK_FLG-X.
*-- ALV出力
PERFORM F_ALV_GRID_DISPLAY USING GV_TITLE
GW_LAYOUT
GI_FIELDCAT
GW_DISVARIANT
GV_HEIGHT_TOP
GI_ALV_DATA
GW_PRINT.
ENDIF.

IF P_CAID10 = GC_CHECK_FLG-X.
*-- ALV出力(編集可能)
PERFORM F_ALV_GRID_DISPLAY_LVC USING GV_TITLE
GW_LAYOUT_LVC
GI_FIELDCAT_LVC
GW_DISVARIANT
GV_HEIGHT_TOP
GI_ALV_DATA
GI_EVENT
GW_PRINT_LVC.
ENDIF.

IF P_CAID11 = GC_CHECK_FLG-X.
*-- ALV出力
PERFORM F_ALV_GRID_DISPLAY_HIERSEQ USING GV_TITLE
GW_LAYOUT
GI_FIELDCAT
GW_DISVARIANT
GV_HEIGHT_TOP
GI_ALV_DATA
GW_PRINT.
ENDIF.

ENDFORM.                    " F_OUTPUT_ALV

*&---------------------------------------------------------------------*
*&      Form  F_ALV_SET_HEADERS
*&---------------------------------------------------------------------*
*       ALVヘッダ設定　サンプル
*----------------------------------------------------------------------*
*  <--  AO_GI_HEADERS
*----------------------------------------------------------------------*
FORM F_ALV_SET_HEADERS CHANGING VALUE(AO_GI_HEADERS)
TYPE SLIS_T_LISTHEADER.
DATA:
L_W_LINE TYPE SLIS_LISTHEADER. "ﾍｯﾀﾞﾜｰｸ

*-- Header
CLEAR L_W_LINE.
L_W_LINE-TYP  = GC_ALV_FLG-H.
L_W_LINE-KEY  = 1.
L_W_LINE-INFO = 'HEADER'.
APPEND L_W_LINE TO AO_GI_HEADERS.

*-- Selection
CLEAR L_W_LINE.
L_W_LINE-TYP  = GC_ALV_FLG-S.
L_W_LINE-KEY  = 1.
L_W_LINE-INFO = 'SELECTION'.
APPEND L_W_LINE TO AO_GI_HEADERS.

*-- Action
CLEAR L_W_LINE.
L_W_LINE-TYP  = GC_ALV_FLG-A.
L_W_LINE-KEY  = 1.
L_W_LINE-INFO = 'ACTION'.
APPEND L_W_LINE TO AO_GI_HEADERS.

ENDFORM.                    " F_ALV_SET_HEADERS

*&---------------------------------------------------------------------*
*&      Form  F_ALV_SET_LAYOUT
*&---------------------------------------------------------------------*
*       レイアウト設定
*----------------------------------------------------------------------*
*  <--  AO_GW_LAYOUT  レイアウト
*----------------------------------------------------------------------*
FORM F_ALV_SET_LAYOUT CHANGING VALUE(AO_GW_LAYOUT) TYPE SLIS_LAYOUT_ALV.

*レイアウトパラメータ一覧
* NO_COLHEAD       ：ヘッダ行なし
* ZEBRA            ：しまうまにしたいときは'X'
* NO_VLINE         ：垂直グリッド線なし
* NO_HLINE         ：水平グリッド線なし
* COLWIDTH_OPTIMIZE：列幅の最適化

AO_GW_LAYOUT-COLWIDTH_OPTIMIZE = GC_ALV_FLG-X. "行の自動調整
AO_GW_LAYOUT-ZEBRA             = GC_ALV_FLG-X. "行のストライプ化

ENDFORM.                    " F_ALV_SET_LAYOUT

*&---------------------------------------------------------------------*
*&      Form  F_ALV_SET_LAYOUT_LVC
*&---------------------------------------------------------------------*
*       レイアウト設定(LVC用)
*----------------------------------------------------------------------*
*  <--  AO_GW_LAYOUT_LVC  レイアウト
*----------------------------------------------------------------------*
FORM F_ALV_SET_LAYOUT_LVC CHANGING VALUE(AO_GW_LAYOUT_LVC)
TYPE LVC_S_LAYO.

*レイアウトパラメータ一覧
* ZEBRA            ：しまうまにしたいときは'X'
* CWIDTH_OPT       ：列幅の最適化
* INFO_FNAME       ：着色設定(行)
* CTAB_FNAME       ：着色設定(セル)
* STYLEFNAME       ：入力可否設定(セル)

AO_GW_LAYOUT_LVC-CWIDTH_OPT = GC_ALV_FLG-X. "行の自動調整
AO_GW_LAYOUT_LVC-INFO_FNAME = GC_ALV_FIELD-LINE_COLOR.
*  AO_GW_LAYOUT_LVC-CTAB_FNAME = GC_ALV_FIELD-CELL_COLOR.
*  AO_GW_LAYOUT_LVC-STYLEFNAME = GC_ALV_FIELD-CELL_TAB.
**  AO_GW_LAYOUT_LVC-ZEBRA      = GC_ALV_FLG-X. "行のストライプ化

ENDFORM.                    " F_ALV_SET_LAYOUT_LVC

*&---------------------------------------------------------------------*
*&      Form  F_ALV_SET_LAYOUT_HIERSEQ
*&---------------------------------------------------------------------*
*       レイアウト設定(HIERSEQ用)
*----------------------------------------------------------------------*
*  <--  AO_GW_LAYOUT  レイアウト
*----------------------------------------------------------------------*
FORM F_ALV_SET_LAYOUT_HIERSEQ
CHANGING VALUE(AO_GW_LAYOUT) TYPE SLIS_LAYOUT_ALV.

*-- 列幅の最適化
AO_GW_LAYOUT-COLWIDTH_OPTIMIZE = GC_CHECK_FLG-X.
*-- 行ストライプ化
AO_GW_LAYOUT-ZEBRA = GC_CHECK_FLG-X.
*-- チェックボックス項目ＩＤ指定
AO_GW_LAYOUT-BOX_FIELDNAME = GC_ALV_VIEW-BOXNAME.
*-- チェックボックス付加対象構造指定
AO_GW_LAYOUT-BOX_TABNAME = GC_ALV_VIEW-S_NAME_I.
*-- 展開ボタン項目ＩＤ指定
AO_GW_LAYOUT-EXPAND_FIELDNAME = GC_ALV_VIEW-EXPANDNAME.
*-- 展開ボタン初期状態(X:展開)
AO_GW_LAYOUT-EXPAND_ALL = GC_CHECK_FLG-X.

ENDFORM.                    " F_ALV_SET_LAYOUT_HIERSEQ

*&---------------------------------------------------------------------*
*&      Form  F_ALV_SET_FIELDCAT
*&---------------------------------------------------------------------*
*       フィールドカタログ作成
*----------------------------------------------------------------------*
*  -->  AI_TABNAME     表示構造名
*  <--  AO_GI_FIELDCAT カタログテーブル
*----------------------------------------------------------------------*
FORM F_ALV_SET_FIELDCAT USING VALUE(AI_TABNAME)     TYPE TABNAME
CHANGING VALUE(AO_GI_FIELDCAT) LIKE GI_FIELDCAT.

*ALVを表示する際のフィールドカタログ(列情報)を取得する。
*汎用モジュール'REUSE_ALV_FIELDCATALOG_MERGE'を使用する場合
*以下のパラメータを与える。
*A.SAP DBの情報を出力する場合
*   I_STRUCTURE_NAME = テーブル名
*B.内部テーブルの情報を出力する場合
*   I_PROGRAM_NAME         = プログラムID
*   I_INTERNAL_TABNAME     = 内部テーブル名
*   I_CLIENT_NEVER_DISPLAY = 'X'(クライアントを出さない)
*   I_INCLNAME             = プログラムID(or Include名)

*汎用モジュールを使用しなくてもカタログをセットすることはできます。

*注意：内部メモリあたりに情報が残っているらしく（未確認）
*      テーブルの構造を直してもカタログが正常にとれない場合がある。
*      一旦、SE38を抜ける or 再度ログインする必要がある。

CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
EXPORTING
I_PROGRAM_NAME               = SY-REPID
I_INTERNAL_TABNAME           = AI_TABNAME
*     I_STRUCTURE_NAME             =
I_CLIENT_NEVER_DISPLAY       = GC_ALV_FLG-X
I_INCLNAME                   = SY-REPID
*     I_BYPASSING_BUFFER           =
*     I_BUFFER_ACTIVE              =
CHANGING
CT_FIELDCAT                  = AO_GI_FIELDCAT
EXCEPTIONS
INCONSISTENT_INTERFACE       = 1
PROGRAM_ERROR                = 2
OTHERS                       = 3
.
IF SY-SUBRC <> 0.
CLEAR: GW_SY.
GW_SY-MSGID = '00'.
GW_SY-MSGNO = '398'.
GW_SY-MSGV1 = GC_MSG-F_REUSE_ALV_FIEL.
GW_SY-MSGV2 = SY-SUBRC.
PERFORM F_EXIT_ERROR USING GC_CHECK_FLG-X.
ENDIF.

ENDFORM.                    " F_ALV_SET_FIELDCAT

*&---------------------------------------------------------------------*
*&      Form  F_ALV_SET_FIELDCAT_LVC
*&---------------------------------------------------------------------*
*       フィールドカタログ作成(LVC用)
*----------------------------------------------------------------------*
*  -->  AI_TABNAME         表示構造名
*  <--  AO_GI_FIELDCAT_LVC カタログテーブル
*----------------------------------------------------------------------*
FORM F_ALV_SET_FIELDCAT_LVC USING VALUE(AI_TABNAME)     TYPE TABNAME
CHANGING VALUE(AO_GI_FIELDCAT_LVC)
LIKE GI_FIELDCAT_LVC.

*REUSE_ALV_GRID_DISPLAY_LVCを使用するときは、
*汎用モジュールを使ってフィールドカタログは作れないっぽい
*CT_FIELDCATの参照型が一致しないため

GW_FIELDCAT_LVC-COL_POS   = GW_FIELDCAT_LVC-COL_POS + 1 .
GW_FIELDCAT_LVC-FIELDNAME = 'ICON'.
APPEND GW_FIELDCAT_LVC TO AO_GI_FIELDCAT_LVC.
CLEAR  GW_FIELDCAT_LVC.

GW_FIELDCAT_LVC-COL_POS   = GW_FIELDCAT_LVC-COL_POS + 1 .
GW_FIELDCAT_LVC-FIELDNAME = 'CHKBX'.
APPEND GW_FIELDCAT_LVC TO AO_GI_FIELDCAT_LVC.
CLEAR  GW_FIELDCAT_LVC.

GW_FIELDCAT_LVC-COL_POS   = GW_FIELDCAT_LVC-COL_POS + 1 .
GW_FIELDCAT_LVC-FIELDNAME = 'AUART'.
APPEND GW_FIELDCAT_LVC TO AO_GI_FIELDCAT_LVC.
CLEAR  GW_FIELDCAT_LVC.

GW_FIELDCAT_LVC-COL_POS   = GW_FIELDCAT_LVC-COL_POS + 1 .
GW_FIELDCAT_LVC-FIELDNAME = 'PSTYV'.
APPEND GW_FIELDCAT_LVC TO AO_GI_FIELDCAT_LVC.
CLEAR  GW_FIELDCAT_LVC.

*  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
*    EXPORTING
**     I_BUFFER_ACTIVE              =
**     I_STRUCTURE_NAME             =
*      I_CLIENT_NEVER_DISPLAY       = GC_ALV_FLG-X
**     I_BYPASSING_BUFFER           =
*      I_INTERNAL_TABNAME           = GC_ALV_VIEW-S_NAME
*    CHANGING
*      CT_FIELDCAT                  = AO_GI_FIELDCAT_LVC
*    EXCEPTIONS
*      INCONSISTENT_INTERFACE       = 1
*      PROGRAM_ERROR                = 2
*      OTHERS                       = 3
*            .
*  IF SY-SUBRC <> 0.
** Implement suitable error handling here
*  ENDIF.


ENDFORM.                    " F_ALV_SET_FIELDCAT_LVC

*&---------------------------------------------------------------------*
*&      Form  F_ALV_EDIT_FIELDCAT
*&---------------------------------------------------------------------*
*       フィールドカタログ編集
*----------------------------------------------------------------------*
*  <--  AO_GI_FIELDCAT カタログテーブル
*----------------------------------------------------------------------*
FORM F_ALV_EDIT_FIELDCAT CHANGING VALUE(AO_GI_FIELDCAT)
LIKE GI_FIELDCAT.

*フィールドカタログ一覧
*--slis_fieldcat_main0
** ROW_POS    :不明
* COL_POS    :出力の順番(列)
* FIELDNAME  :参照フィールド名
* TABNAME    :LVCタブ名
* CURRENCY   :ALVコントロール：通貨単位
* CFIELDNAME :ALVコントロール：参照通貨単位の項目名
* CTABNAME   :CFIELDNAMEを使用するときのテーブル名
** IFIELDNAME :不明
* QUANTITY   :ALVコントロール：数量単位
* QFIELDNAME :ALVコントロール：参照数量単位の項目名
* QTABNAME   :IFIELDNAMEを使用するときのテーブル名
* ROUND      :ALVコントロール：ROUND値
** EXPONET    :不明
* KEY        :ALVコントロール：キー項目
* ICON       :ALVコントロール：アイコンとして出力
* SYMBOL     :ALVコントロール：シンボルとして出力
* CHECKBOX   :チェックボックスの変数名
* JUST       :セル内の表示位置を指定(R)ight(L)fet(C)enter
* LZERO      :leading zero(0埋め)
* NO_SIGN    :ALVコントロール：出力記号非表示
* NO_ZERO    :ALVコントロール：出力のゼロを非表示
** NO_CONVEXT :不明
* EDIT_MASK  :ALVコントロール：出力の編集マスク'V__,___,___,__'や
*                              '==JPDAT'など
* FIX_COLUMN :ALVコントロール：列固定
** EMPHASIZE  :不明
** FIX_COLUMN :不明
** DO_SUM     :不明
* NO_OUT     :ALVコントロール：列は出力されません
** TECH       :不明
** OUTPUTLEN  :不明
** OFFSET     :不明
* SELTEXT_L  :テキスト長
* SELTEXT_M  :テキスト中
* SELTEXT_S  :テキスト短
* DDICTXT    :列名の表示に使用するテキスト長、中、短を明示的に指定
*             (S)hort(M)iddle(L)ong
** ROLLNAME   :不明
** DATATYPE   :不明
** INTTYPE    :不明
** INTLEN     :不明
** LOWERCASE  :不明
*--slis_fieldcat_main1
* REF_FIELDNAME :参照項目
* REF_TABNAME   :参照テーブル
** ROUNDFIELDNAME    :不明
** ROUNDTABNAME      :不明
** DECIMALSFIELDNAME :不明
** DECIMALSTABNAME   :不明
** DECIMALS_OUT      :不明
** TEXT_FIELDNAME    :不明
* REPTEXT_DDIC  :タイトルバーの名前（マウスをのっけたとき）
** DDIC_OUTPUTLEN    :不明
*--slis_fieldcat_alv_spec
** KEY_SEL       :不明
* NO_SUM        :ALVコントロール：列の値の集計なし
** SP_GROUP      :不明
** REPREP        :不明
** INPUT         :不明
** EDIT          :不明
* HOTSPOT       :ALVコントロール：シングルクリック対応

FIELD-SYMBOLS:
<FS_FIELDCAT> TYPE SLIS_FIELDCAT_ALV.

LOOP AT AO_GI_FIELDCAT ASSIGNING <FS_FIELDCAT>.
CASE <FS_FIELDCAT>-FIELDNAME.
WHEN GC_ALV_FIELD-ICON.


WHEN GC_ALV_FIELD-CHKBX.
<FS_FIELDCAT>-CHECKBOX = GC_ALV_FLG-X.
<FS_FIELDCAT>-EDIT     = GC_ALV_FLG-X.
WHEN OTHERS.
ENDCASE.
ENDLOOP.


ENDFORM.                    " F_ALV_EDIT_FIELDCAT

*&---------------------------------------------------------------------*
*&      Form  F_ALV_EDIT_FIELDCAT_LVC
*&---------------------------------------------------------------------*
*       フィールドカタログ編集(LVC用)
*----------------------------------------------------------------------*
*  <--  AO_GI_FIELDCAT_LVC カタログテーブル
*----------------------------------------------------------------------*
FORM F_ALV_EDIT_FIELDCAT_LVC CHANGING VALUE(AO_GI_FIELDCAT_LVC)
LIKE GI_FIELDCAT_LVC.

*フィールドカタログ一覧
*--LVC_S_FCAT
*ROW_POS : ALV コントロール: 出力行 (INTERNAL USE)
*COL_POS : ALV コントロール: 出力列
*FIELDNAME : ALV コントロール: 内部テーブル項目の項目名
*TABNAME : LVC タブ名
*CURRENCY : ALV コントロール: 通貨単位
*CFIELDNAME : ALV コントロール: 参照通貨単位の項目名
*QUANTITY : ALV コントロール: 数量単位
*QFIELDNAME : ALV コントロール: 参照数量単位の項目名
*IFIELDNAME : ALV コントロール: 内部テーブル項目の項目名
*ROUND : ALV コントロール: ROUND 値
*EXPONENT : ALV コントロール: 浮動表示の指数
*KEY : ALV コントロール: キー項目
*KEY_SEL : ALV コントロール: 非表示にできるキー列
*ICON : ALV コントロール: アイコンとして出力
*SYMBOL : ALV コントロール: シンボルとして出力
*CHECKBOX : ALV コントロール: チェックボックスとして出力
*JUST : ALV コントロール: 整列
*LZERO : ALV コントロール: 左ゼロ詰め出力
*NO_SIGN : ALV コントロール: 出力記号非表示
*NO_ZERO : ALV コントロール: 出力のゼロを非表示
*NO_CONVEXT : ALV コントロール: 出力用変換 Exit を無視
*EDIT_MASK : ALV コントロール: 出力の編集マスク
*EMPHASIZE : ALV コントロール: 色で列を強調表示
*FIX_COLUMN : ALV コントロール: 列固定
*DO_SUM : ALV コントロール: 列の値を集計
*NO_SUM : ALV コントロール: 列の値の集計なし
*NO_OUT : ALV コントロール: 列は出力されません
*TECH : ALV コントロール: 技術項目
*OUTPUTLEN : ALV コントロール: 文字の列幅
*CONVEXIT : 変換ルーチン
*SELTEXT : ALV コントロール: ダイアログ機能の列 ID
*TOOLTIP : ALV コントロール: 列ヘッダのツールのヒント
*ROLLNAME : ALV コントロール: F1 ヘルプのデータエレメント
*DATATYPE : ABAP ディクショナリのデータ型
*INTTYPE : ABAP データ型 (C,D,N,...)
*INTLEN : 内部長 (バイト)
*LOWERCASE : 小文字使用の可否
*REPTEXT : ヘッダ
*HIER_LEVEL : ALV コントロール: 内部使用
*REPREP : ALV コントロール: 値は Rep./Rep.Intf.に対する選択基準
*DOMNAME : ドメイン名
*SP_GROUP : グループキー
*HOTSPOT : ALV コントロール: シングルクリック対応
*DFIELDNAME : ALV コントロール: データベースの列グループに対する項目名
*COL_ID : ALV コントロール: 列 ID
*F4AVAILABL : フラグ: 項目に入力ヘルプがあるか
*AUTO_VALUE : ALV コントロール: 自動値コピー
*CHECKTABLE : テーブル名
*VALEXI : 固定値あり
*WEB_FIELD : ALV コントロール: 内部テーブル項目の項目名
*HREF_HNDL : 自然数
*STYLE : ALV コントロール: スタイル
*STYLE2 : ALV コントロール: スタイル
*STYLE3 : ALV コントロール: スタイル
*STYLE4 : ALV コントロール: スタイル
*DRDN_HNDL : 自然数
*DRDN_FIELD : ALV コントロール: 内部テーブル項目の項目名
*NO_MERGING : 文字項目長 1
*H_FTYPE : ALV ツリー control: 機能タイプ (合計、平均、最大、最少...)
*COL_OPT : オプションの列最適化のエントリ
*NO_INIT_CH : 文字項目長 1
*DRDN_ALIAS : 文字項目長 1
*REF_FIELD : ALV コントロール:内部テーブル項目の参照項目名
*REF_TABLE : ALV コントロール: 内部テーブル項目の参照テーブル名
*TXT_FIELD : ALV コントロール: 内部テーブル項目の項目名
*ROUNDFIELD : ALV コントロール: ROUND 指定の項目名
*DECIMALS_O : ALV コントロール: 出力長の小数点以下桁数
*DECMLFIELD : ALV コントロール: DECIMALS 設定の項目名
*DD_OUTLEN : ALV コントロール: 文字の出力長
*DECIMALS : 小数点以下桁数
*COLTEXT : ALV コントロール: 列ヘッダ
*SCRTEXT_L : 項目ラベル (長)
*SCRTEXT_M : 項目ラベル (中)
*SCRTEXT_S : 項目テキスト (短)
*COLDDICTXT : ALV コントロール: DDIC テキスト参照の設定
*SELDDICTXT : ALV コントロール: DDIC テキスト参照の設定
*TIPDDICTXT : ALV コントロール: DDIC テキスト参照の設定
*EDIT : ALV コントロール: 入力可能
*TECH_COL : ALV コントロール: 内部使用
*TECH_FORM : ALV コントロール: 内部使用
*TECH_COMP : ALV コントロール: 内部使用
*HIER_CPOS : ALV コントロール: 階層列位置
*H_COL_KEY : ツリーコントロール: 列名またはアイテム名
*H_SELECT : ツリーコントロールで列が選択できるときに通知
*DD_ROLL : データエレメント（意味ドメイン）
*DRAGDROPID : ALV コントロール: DragDrop オブジェクトの Drag & Drop 処理
*MAC : 文字項目長 1
*INDX_FIELD : 自然数
*INDX_CFIEL : 自然数
*INDX_QFIEL : 自然数
*INDX_IFIEL : 自然数
*INDX_ROUND : 自然数
*INDX_DECML : 自然数
*GET_STYLE : 文字項目長 1
*MARK : 文字項目長 1

FIELD-SYMBOLS:
<FS_FIELDCAT> TYPE LVC_S_FCAT.

LOOP AT AO_GI_FIELDCAT_LVC ASSIGNING <FS_FIELDCAT>.
CASE <FS_FIELDCAT>-FIELDNAME.
WHEN GC_ALV_FIELD-ICON.
PERFORM F_MODIFY_FIELDCAT USING 'ICON'
4
SPACE
SPACE
SPACE
SPACE
SPACE
SPACE
SPACE
CHANGING <FS_FIELDCAT>.

WHEN GC_ALV_FIELD-CHKBX.
*      -->AI_TEXT     項目テキスト
*      -->AI_LENGTH   出力長
*      -->AI_TABLE    参照テーブル
*      -->AI_FIELD    参照項目
*      -->AI_KEY      キー項目
*      -->AI_EDIT     編集可
*      -->AI_CHECK    チェックボックス
*      -->AI_QUAN     数量単位参照項目
*      -->AI_OUT      列非表示
PERFORM F_MODIFY_FIELDCAT USING 'CHECK'
4
SPACE
SPACE
GC_ALV_FLG-X
GC_ALV_FLG-X
GC_ALV_FLG-X
SPACE
SPACE
CHANGING <FS_FIELDCAT>.

WHEN GC_ALV_FIELD-AUART.
*      -->AI_TEXT     項目テキスト
*      -->AI_LENGTH   出力長
*      -->AI_TABLE    参照テーブル
*      -->AI_FIELD    参照項目
*      -->AI_KEY      キー項目
*      -->AI_EDIT     編集可
*      -->AI_CHECK    チェックボックス
*      -->AI_QUAN     数量単位参照項目
*      -->AI_OUT      列非表示
PERFORM F_MODIFY_FIELDCAT USING '伝票タイプ'
4
SPACE
SPACE
GC_ALV_FLG-X
SPACE
SPACE
SPACE
SPACE
CHANGING <FS_FIELDCAT>.
PERFORM F_APPEND_COLOR USING <FS_FIELDCAT>-FIELDNAME
4
1
0.

WHEN GC_ALV_FIELD-PSTYV.
PERFORM F_MODIFY_FIELDCAT USING '明細カテゴリ'
4
SPACE
SPACE
GC_ALV_FLG-X
GC_ALV_FLG-X
SPACE
SPACE
SPACE
CHANGING <FS_FIELDCAT>.
WHEN OTHERS.
ENDCASE.
ENDLOOP.

ENDFORM.                    " F_ALV_EDIT_FIELDCAT_LVC

*&---------------------------------------------------------------------*
*&      Form  F_ALV_EDIT_FIELDCAT_HIERSEQ
*&---------------------------------------------------------------------*
*       フィールドカタログ編集
*----------------------------------------------------------------------*
*  <--  AO_GI_FIELDCAT カタログテーブル
*----------------------------------------------------------------------*
FORM F_ALV_EDIT_FIELDCAT_HIERSEQ CHANGING VALUE(AO_GI_FIELDCAT)
LIKE GI_FIELDCAT.

FIELD-SYMBOLS:
<FS_FIELDCAT> TYPE SLIS_FIELDCAT_ALV.

LOOP AT AO_GI_FIELDCAT ASSIGNING <FS_FIELDCAT>.
CASE <FS_FIELDCAT>-FIELDNAME.
WHEN OTHERS.
ENDCASE.
ENDLOOP.

ENDFORM.                    " F_ALV_EDIT_FIELDCAT_HIERSEQ

*&---------------------------------------------------------------------*
*&      Form  F_MODIFY_FIELDCAT
*&---------------------------------------------------------------------*
*       カタログテーブルの作成
*----------------------------------------------------------------------*
*      -->AI_TEXT     項目テキスト
*      -->AI_LENGTH   出力長
*      -->AI_TABLE    参照テーブル
*      -->AI_FIELD    参照項目
*      -->AI_KEY      キー項目
*      -->AI_EDIT     編集可
*      -->AI_CHECK    チェックボックス
*      -->AI_QUAN     数量単位参照項目
*      -->AI_OUT      列非表示
*      <--AO_FIELDCAT カタログ構造
*----------------------------------------------------------------------*
FORM F_MODIFY_FIELDCAT USING VALUE(AI_TEXT)     TYPE ANY
VALUE(AI_LENGTH)   TYPE ANY
VALUE(AI_TABLE)    TYPE ANY
VALUE(AI_FIELD)    TYPE ANY
VALUE(AI_KEY)      TYPE ANY
VALUE(AI_EDIT)     TYPE ANY
VALUE(AI_CHECK)    TYPE ANY
VALUE(AI_QUAN)     TYPE ANY
VALUE(AI_OUT)      TYPE ANY
CHANGING VALUE(AO_FIELDCAT) TYPE LVC_S_FCAT.

*-- タブ名
AO_FIELDCAT-TABNAME = GC_ALV_VIEW-TABNAME.

*-- 一覧ヘッダテキスト
AO_FIELDCAT-COLTEXT   = AI_TEXT.
AO_FIELDCAT-SCRTEXT_S = AI_TEXT.
AO_FIELDCAT-SCRTEXT_M = AI_TEXT.
AO_FIELDCAT-SCRTEXT_L = AI_TEXT.

*-- 出力長
AO_FIELDCAT-OUTPUTLEN = AI_LENGTH.

*-- 参照テーブル名
AO_FIELDCAT-REF_TABLE = AI_TABLE.

*-- 参照項目名
AO_FIELDCAT-REF_FIELD = AI_FIELD.

*-- キー項目
AO_FIELDCAT-KEY       = AI_KEY.

*-- 編集項目
AO_FIELDCAT-EDIT      = AI_EDIT.

*-- チェックボックス
AO_FIELDCAT-CHECKBOX  = AI_CHECK.

*-- 数量単位参照項目
AO_FIELDCAT-QFIELDNAME = AI_QUAN.

*-- 列非表示
AO_FIELDCAT-NO_OUT     = AI_OUT.

ENDFORM.                    " F_MODIFY_FIELDCAT

*&---------------------------------------------------------------------*
*&      Form  F_ALV_COUNT_DATA
*&---------------------------------------------------------------------*
*       ALV出力件数チェック
*----------------------------------------------------------------------*
*      -->AI_GI_ALV_DATA  ALV出力用
*----------------------------------------------------------------------*
FORM F_ALV_COUNT_DATA USING VALUE(AI_GI_ALV_DATA) LIKE GI_ALV_DATA.

*-- 0件の場合は、エラーメッセージを出力し処理を終了する
IF AI_GI_ALV_DATA[] IS INITIAL.
CLEAR: GW_SY.
GW_SY-MSGID = 'NI'.
GW_SY-MSGNO = '136'.
PERFORM F_EXIT_ERROR USING GC_CHECK_FLG-X.
ENDIF.

ENDFORM.                    " F_ALV_COUNT_DATA
*&---------------------------------------------------------------------*
*&      Form  F_ALV_GRID_DISPLAY
*&---------------------------------------------------------------------*
*       ALV出力
*----------------------------------------------------------------------*
*      -->AI_GV_TITLE  text
*      -->AI_GW_LAYOUT  text
*      -->AI_GI_FIELDCAT  text
*      -->AI_GW_DISVARIANT  text
*      -->AI_GV_HEIGHT_TOP  text
*      -->AI_GI_ALV_DATA  text
*      -->AI_GW_PRINT     test
*----------------------------------------------------------------------*
FORM F_ALV_GRID_DISPLAY USING VALUE(AI_GV_TITLE)    TYPE LVC_TITLE
VALUE(AI_GW_LAYOUT)   TYPE SLIS_LAYOUT_ALV
VALUE(AI_GI_FIELDCAT) LIKE GI_FIELDCAT
VALUE(AI_GW_DISVARIANT) TYPE DISVARIANT
VALUE(AI_GV_HEIGHT_TOP) TYPE I
VALUE(AI_GI_ALV_DATA)   LIKE GI_ALV_DATA
VALUE(AI_GW_PRINT) TYPE SLIS_PRINT_ALV.

*-- ALV出力
* IS_LAYOUT レイアウトの指定
* IT_FIELDCAT フィールドカタログの指定
* IT_EXCLUING 除外したい機能コードの指定
* I_SAVE ALVレイアウトの保存設定の指定
*  ''  レイアウト保存不可
*  'A' ユーザ依存、ユーザ非依存のレイアウト
*      保存の保存可(通常はこれを使用したほうが無難)
*  'X' ユーザ非依存のレイアウトのみ保存可
*  'U' ユーザ依存のレイアウトのみ保存可
* IS_VARIANT ALVレイアウトIDを指定する
* IS_PRINT   印刷パラメータ設定
* I_CALLBACK_PROGRAM ALV出力後の動作設定をするサブルーチンを指定
* I_CALLBACK_USER_COMMAND 同上
CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
*     I_INTERFACE_CHECK                 = ' '
*     I_BYPASSING_BUFFER                = ' '
*     I_BUFFER_ACTIVE                   = ' '
I_CALLBACK_PROGRAM                = SY-REPID
I_CALLBACK_PF_STATUS_SET          = GC_ALV_VIEW-NM_ST_SET
I_CALLBACK_USER_COMMAND           = GC_ALV_VIEW-NM_U_COMD
I_CALLBACK_TOP_OF_PAGE            = GC_ALV_VIEW-NM_T_HEAD
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
I_STRUCTURE_NAME                  = GC_ALV_VIEW-T_NAME
*     I_BACKGROUND_ID                   = ' '
*     I_GRID_TITLE                      =
*     I_GRID_SETTINGS                   =
IS_LAYOUT                         = AI_GW_LAYOUT
IT_FIELDCAT                       = AI_GI_FIELDCAT
*     IT_EXCLUDING                      =
*     IT_SPECIAL_GROUPS                 =
*     IT_SORT                           =
*     IT_FILTER                         =
*     IS_SEL_HIDE                       =
*     I_DEFAULT                         = 'X'
I_SAVE                            = GC_ALV_FLG-A
IS_VARIANT                        = AI_GW_DISVARIANT
*     IT_EVENTS                         =
*     IT_EVENT_EXIT                     =
IS_PRINT                          = GW_PRINT
*     IS_REPREP_ID                      =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE                 = 0
I_HTML_HEIGHT_TOP                 = AI_GV_HEIGHT_TOP
*     I_HTML_HEIGHT_END                 = 0
*     IT_ALV_GRAPHICS                   =
*     IT_HYPERLINK                      =
*     IT_ADD_FIELDCAT                   =
*     IT_EXCEPT_QINFO                   =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
TABLES
T_OUTTAB                          = AI_GI_ALV_DATA
EXCEPTIONS
PROGRAM_ERROR                     = 1
OTHERS                            = 2
.
IF SY-SUBRC <> 0.
CLEAR: GW_SY.
GW_SY-MSGID = '00'.
GW_SY-MSGNO = '398'.
GW_SY-MSGV1 = GC_MSG-F_REUSE_ALV_GRID.
GW_SY-MSGV2 = SY-SUBRC.
PERFORM F_EXIT_ERROR USING GC_CHECK_FLG-X.
ENDIF.

ENDFORM.                    " F_ALV_GRID_DISPLAY

*&---------------------------------------------------------------------*
*&      Form  F_ALV_GRID_DISPLAY_HIERSEQ
*&---------------------------------------------------------------------*
*       ALV出力
*----------------------------------------------------------------------*
*      -->AI_GV_TITLE  text
*      -->AI_GW_LAYOUT  text
*      -->AI_GI_FIELDCAT  text
*      -->AI_GW_DISVARIANT  text
*      -->AI_GV_HEIGHT_TOP  text
*      -->AI_GI_ALV_DATA  text
*      -->AI_GW_PRINT     test
*----------------------------------------------------------------------*
FORM F_ALV_GRID_DISPLAY_HIERSEQ
USING VALUE(AI_GV_TITLE)      TYPE LVC_TITLE
VALUE(AI_GW_LAYOUT)     TYPE SLIS_LAYOUT_ALV
VALUE(AI_GI_FIELDCAT)   LIKE GI_FIELDCAT
VALUE(AI_GW_DISVARIANT) TYPE DISVARIANT
VALUE(AI_GV_HEIGHT_TOP) TYPE I
VALUE(AI_GI_ALV_DATA)   LIKE GI_ALV_DATA
VALUE(AI_GW_PRINT)      TYPE SLIS_PRINT_ALV.


CALL FUNCTION 'REUSE_ALV_HIERSEQ_LIST_DISPLAY'
EXPORTING
*     I_INTERFACE_CHECK              = ' '
I_CALLBACK_PROGRAM             = SY-REPID
I_CALLBACK_PF_STATUS_SET       = GC_ALV_VIEW-NM_ST_SET_H
I_CALLBACK_USER_COMMAND        = GC_ALV_VIEW-NM_U_COMD_H
IS_LAYOUT                      = AI_GW_LAYOUT
IT_FIELDCAT                    = AI_GI_FIELDCAT
*     IT_EXCLUDING                   =
*     IT_SPECIAL_GROUPS              =
*     IT_SORT                        =
*     IT_FILTER                      =
*     IS_SEL_HIDE                    =
*     I_SCREEN_START_COLUMN          = 0
*     I_SCREEN_START_LINE            = 0
*     I_SCREEN_END_COLUMN            = 0
*     I_SCREEN_END_LINE              = 0
*     I_DEFAULT                      = 'X'
I_SAVE                         = GC_ALV_FLG-A
*     IS_VARIANT                     =
*     IT_EVENTS                      =
*     IT_EVENT_EXIT                  =
I_TABNAME_HEADER               = GC_ALV_VIEW-S_NAME_H
I_TABNAME_ITEM                 = GC_ALV_VIEW-S_NAME_I
*     I_STRUCTURE_NAME_HEADER        =
*     I_STRUCTURE_NAME_ITEM          =
IS_KEYINFO                     = GW_KEYINFO
*     IS_PRINT                       =
*     IS_REPREP_ID                   =
*     I_BYPASSING_BUFFER             =
*     I_BUFFER_ACTIVE                =
*     IR_SALV_HIERSEQ_ADAPTER        =
*     IT_EXCEPT_QINFO                =
*     I_SUPPRESS_EMPTY_DATA          = ABAP_FALSE
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER        =
*     ES_EXIT_CAUSED_BY_USER         =
TABLES
T_OUTTAB_HEADER                = GI_ALV_H_HEADER
T_OUTTAB_ITEM                  = GI_ALV_H_ITEM
EXCEPTIONS
PROGRAM_ERROR                  = 1
OTHERS                         = 2
.

IF SY-SUBRC <> 0.
*-- 「汎用モジュール&1で予期せぬエラーが発生しました。
*--  (エラーコード&2)」
CLEAR: GW_SY.
GW_SY-MSGID = 'NI'.
GW_SY-MSGNO = '143'.
GW_SY-MSGV1 = GC_MSG-F_REUSE_ALV_HIER.
GW_SY-MSGV2 = SY-SUBRC.
PERFORM F_EXIT_ERROR USING GC_CHECK_FLG-X.
ENDIF.

ENDFORM.                    " F_ALV_GRID_DISPLAY_HIERSEQ


*&---------------------------------------------------------------------*
*&      Form  F_SET_PF_STATUS
*&---------------------------------------------------------------------*
*       標準ALV表示のボタン詳細設定
*----------------------------------------------------------------------*
*      <--AO_I_EXTAB  ボタン非表示用作業領域
*----------------------------------------------------------------------*
FORM F_SET_PF_STATUS CHANGING VALUE(AO_I_EXTAB) TYPE SLIS_T_EXTAB.

REFRESH: AO_I_EXTAB.

* 機能コードの削除
APPEND:
'ANL2'     TO AO_I_EXTAB, "登録
'AEN2'     TO AO_I_EXTAB, "変更
'ANZ2'     TO AO_I_EXTAB, "照会
*    '&ETA'     TO AO_I_EXTAB, "詳細
'REFR'     TO AO_I_EXTAB, "リフレッシュ
'PURE'     TO AO_I_EXTAB, "チェック
*    '&ALL'     TO AO_I_EXTAB, "全選択
*    '&SAL'     TO AO_I_EXTAB, "全選択解除
*    '&OUP'     TO AO_I_EXTAB, "昇順ソート
*    '&ODN'     TO AO_I_EXTAB, "降順ソート
*    '&ILT'     TO AO_I_EXTAB, "フィルタ
*    '&UMC'     TO AO_I_EXTAB, "合計
*    '&RNT_PREV TO AO_I_EXTAB, "プレビュー
*    '&XXL'     TO AO_I_EXTAB, "EXCEL出力
'&AQW'     TO AO_I_EXTAB, "WORD出力
*    '%PC'      TO AO_I_EXTAB, "ローカルファイル出力
'%SL'      TO AO_I_EXTAB, "メール送信
*    '&OL0'     TO AO_I_EXTAB, "レイアウト変更
*    '&OAD'     TO AO_I_EXTAB, "レイアウト選択
*    '&AVE'     TO AO_I_EXTAB, "レイアウト保存
'&LFO'     TO AO_I_EXTAB, "一覧ステータス
'&CRB'     TO AO_I_EXTAB, "第一列
'&CRL'     TO AO_I_EXTAB, "左列
'&CRR'     TO AO_I_EXTAB, "右列
'&CRE'     TO AO_I_EXTAB, "最終列
SPACE      TO AO_I_EXTAB. "ダミー

* ステータス設定
SET PF-STATUS  GC_ALV_VIEW-PF_STATUS
OF PROGRAM GC_ALV_VIEW-PF_PROG
EXCLUDING  AO_I_EXTAB.

ENDFORM.                    " F_SET_PF_STATUS

*&---------------------------------------------------------------------*
*&      Form  F_EXEC_USER_COMMAND
*&---------------------------------------------------------------------*
*       ALV用独自処理
*----------------------------------------------------------------------*
*      -->AI_UCOMM     機能コード
*      <--AO_SELFIELD  選択されたレコードの表示情報
*----------------------------------------------------------------------*
FORM F_EXEC_USER_COMMAND USING VALUE(AI_UCOMM)    TYPE SY-UCOMM
CHANGING VALUE(AO_SELFIELD) TYPE SLIS_SELFIELD.

DATA:  L_GRID TYPE REF TO CL_GUI_ALV_GRID.
CLEAR: L_GRID,
AO_SELFIELD.

FIELD-SYMBOLS:
<FS_ALV_DATA> LIKE T_ALV_ITEM.

*-- 画面設定値→内部テーブル設定値への上書き処理
CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
IMPORTING
E_GRID = L_GRID.
CALL METHOD L_GRID->CHECK_CHANGED_DATA.

CASE AI_UCOMM.

*-- 【全選択ボタン】押下時
WHEN GC_ALV_FUNC-CHECK_ALL.
*    PERFORM F_PUSH_ALL_SELECT.
LOOP AT GI_ALV_DATA INTO <FS_ALV_DATA>.
<FS_ALV_DATA>-CHKBX = GC_CHECK_FLG-X.
ENDLOOP.

*-- 【全解除ボタン】押下時
WHEN GC_ALV_FUNC-CHECK_SAL.
*    PERFORM F_PUSH_ALL_RELEASE.
LOOP AT GI_ALV_DATA INTO <FS_ALV_DATA>.
<FS_ALV_DATA>-CHKBX = SPACE.
ENDLOOP.

*-- 【チェックボタン】押下時

*-- 【実行ボタン】押下時

*-- 【ダブルクリックボタン】押下時

WHEN '&1C1'.  "ダブルクリックorホットスポットクリック

WHEN OTHERS.

ENDCASE.
*-- 入力値反映
* リフレッシュの設定、パラメータを設定しないと内部テーブルの値を
* いくらいじっても更新されない
AO_SELFIELD-REFRESH = GC_ALV_FLG-X.  "処理終了後、ALVリフレッシュ

* ALV処理後、レポート画面(WRITE)に遷移したい場合はALV汎用モジュールを
* 終了させる必要がある。EXITにチェックを入れておくと意図的に終了させる
* ことができる(通常はF3などを押下しないと終了できない)
* AO_SELFIELD-EXIT = GC_ALV_FLG-X.

ENDFORM.                    " F_EXEC_USER_COMMAND

*&---------------------------------------------------------------------*
*&      Form  F_SET_PF_STATUS_HIERSEQ
*&---------------------------------------------------------------------*
*       標準ALV表示のボタン詳細設定
*----------------------------------------------------------------------*
*      <--AO_I_EXTAB  ボタン非表示用作業領域
*----------------------------------------------------------------------*
FORM F_SET_PF_STATUS_HIERSEQ
CHANGING VALUE(AO_I_EXTAB) TYPE SLIS_T_EXTAB
.

REFRESH: AO_I_EXTAB.

*-- 機能コード削除
APPEND:
'ANL2'      TO AO_I_EXTAB,       " 登録
'AEN2'      TO AO_I_EXTAB,       " 変更
'ANZ2'      TO AO_I_EXTAB,       " 照会
'&ETA'      TO AO_I_EXTAB,       " 詳細
*    'ONLI'      TO AO_I_EXTAB,       " 実行
'REFR'      TO AO_I_EXTAB,       " リフレッシュ
'PRUE'      TO AO_I_EXTAB,       " チェック
*    '&ALL'      TO AO_I_EXTAB,       " 全選択
*    '&SAL'      TO AO_I_EXTAB,       " 全選択解除
'&OUP'      TO AO_I_EXTAB,       " 昇順ソート
'&ODN'      TO AO_I_EXTAB,       " 降順ソート
'&ILT'      TO AO_I_EXTAB,       " フィルタ
'&UMC'      TO AO_I_EXTAB,       " 合計
'&RNT_PREV' TO AO_I_EXTAB,       " プレビュー
'&XXL'      TO AO_I_EXTAB,       " EXCEL出力
'&AQW'      TO AO_I_EXTAB,       " WORD出力
'%PC'       TO AO_I_EXTAB,       " ローカルファイル保存
'%SL'       TO AO_I_EXTAB,       " メール送信
'&OL0'      TO AO_I_EXTAB,       " レイアウト変更
'&OAD'      TO AO_I_EXTAB,       " レイアウト選択
'&AVE'      TO AO_I_EXTAB,       " レイアウト保存
'&LFO'      TO AO_I_EXTAB,       " 一覧ステータス
'&CRB'      TO AO_I_EXTAB,       " 第一列
'&CRL'      TO AO_I_EXTAB,       " 左列
'&CRR'      TO AO_I_EXTAB,       " 右列
'&CRE'      TO AO_I_EXTAB,       " 最終列
*    '&EXX'      TO AO_I_EXTAB,       " 全展開
*    '&CXX'      TO AO_I_EXTAB,       " 全圧縮
*    'VIEW'      TO AO_I_EXTAB,       " 照会
SPACE       TO AO_I_EXTAB.       " ダミー

* ステータス設定
SET PF-STATUS  GC_ALV_VIEW-PF_STATUS_H
OF PROGRAM GC_ALV_VIEW-PF_PROG_H
EXCLUDING  AO_I_EXTAB.

ENDFORM.                    " F_SET_PF_STATUS_HIERSEQ

*&---------------------------------------------------------------------*
*&      Form  F_EXEC_USER_COMMAND_HIERSEQ
*&---------------------------------------------------------------------*
*       ALV用独自処理
*----------------------------------------------------------------------*
*      -->AI_UCOMM     機能コード
*      <--AO_SELFIELD  選択されたレコードの表示情報
*----------------------------------------------------------------------*
FORM F_EXEC_USER_COMMAND_HIERSEQ
USING    VALUE(AI_UCOMM) TYPE SY-UCOMM
CHANGING VALUE(AO_SELFIELD) TYPE SLIS_SELFIELD.

CASE AI_UCOMM.

* Rev.XXX
*    WHEN 'VIEW'.  " 照会
*      LOOP AT IT_ALV_DATA_HEADER INTO WA_ALV_DATA_HEADER.
*        IF WA_ALV_DATA_HEADER-BOX = C_CHECK.
**-- SAPメモリに値をセットしてトランザクション呼出し
*          SET PARAMETER ID 'BES' FIELD WA_ALV_DATA_HEADER-EBELN.
*          CALL TRANSACTION 'ME23N' AND SKIP FIRST SCREEN.
*          EXIT.
*        ENDIF.
*      ENDLOOP.
* Rev.XXX

WHEN OTHERS.

ENDCASE.

AO_SELFIELD-REFRESH = GC_CHECK_FLG-X.    " 処理終了後、ALVリフレッシュ

ENDFORM.                    " F_EXEC_USER_COMMAND_HIERSEQ


*&---------------------------------------------------------------------*
*&      Form  F_ALV_CALL_HEADER
*&---------------------------------------------------------------------*
*       ALVヘッダの出力
*----------------------------------------------------------------------*
FORM F_ALV_CALL_HEADER.

CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
EXPORTING
IT_LIST_COMMENTARY       = GI_HEADERS
*     I_LOGO                   =
*     I_END_OF_LIST_GRID       =
*     I_ALV_FORM               =
.

ENDFORM.                    " F_ALV_CALL_HEADER

*&---------------------------------------------------------------------*
*&      Form  F_GET_DATA_SAMPLE
*&---------------------------------------------------------------------*
*       データ取得サンプル
*----------------------------------------------------------------------*
FORM F_GET_DATA_SAMPLE .

SELECT H~AUART     "伝票タイプ
M~PSTYV     "明細カテゴリ
FROM VBAK AS H
INNER JOIN VBAP AS M
ON H~VBELN = M~VBELN
INTO CORRESPONDING FIELDS OF TABLE GI_ALV_DATA
WHERE H~AUART IN S_AUART
AND M~PSTYV IN S_PSTYV.

* ソート(昇順)
SORT GI_ALV_DATA BY AUART ASCENDING  "伝票タイプ
PSTYV ASCENDING. "明細カテゴリ
* 重複レコード削除
DELETE ADJACENT DUPLICATES FROM GI_ALV_DATA.

IF P_CAID11 = GC_CHECK_FLG-X.

DATA:  LW_ALV_H_HEADER LIKE T_ALV_H_HEADER,
LW_ALV_H_ITEM   LIKE T_ALV_H_ITEM.

FIELD-SYMBOLS:
<FS_ALV_DATA> LIKE T_ALV_ITEM.

LOOP AT GI_ALV_DATA ASSIGNING <FS_ALV_DATA>.
* HEADER
LW_ALV_H_HEADER-AUART  = <FS_ALV_DATA>-AUART.
APPEND: LW_ALV_H_HEADER TO GI_ALV_H_HEADER.
CLEAR:  LW_ALV_H_HEADER.
* ITEM
LW_ALV_H_ITEM-AUART    = <FS_ALV_DATA>-AUART.
LW_ALV_H_ITEM-PSTYV    = <FS_ALV_DATA>-PSTYV.
APPEND: LW_ALV_H_ITEM TO GI_ALV_H_ITEM.
CLEAR:  LW_ALV_H_ITEM.

ENDLOOP.
* HEADER
SORT GI_ALV_H_HEADER
BY AUART ASCENDING.
DELETE ADJACENT DUPLICATES
FROM GI_ALV_H_HEADER
COMPARING AUART.
* ITEM
SORT GI_ALV_H_ITEM
BY AUART ASCENDING
PSTYV ASCENDING.

ENDIF.

ENDFORM.                    " F_GET_DATA_SAMPLE

*&---------------------------------------------------------------------*
*&      Form  F_ALV_COM_PRINT
*&---------------------------------------------------------------------*
*       印刷パラメータ設定
*----------------------------------------------------------------------*
*      <--AO_GW_PRINT 印刷パラメータ情報
*----------------------------------------------------------------------*
FORM F_ALV_COM_PRINT CHANGING VALUE(AO_GW_PRINT)
TYPE SLIS_PRINT_ALV.

CLEAR: AO_GW_PRINT.

AO_GW_PRINT-NO_PRINT_LISTINFOS = GC_ALV_FLG-X.  "ALV統計情報

ENDFORM.                    " F_ALV_COM_PRINT
*&---------------------------------------------------------------------*
*&      Form  F_ALV_COM_PRINT_LVC
*&---------------------------------------------------------------------*
*       印刷パラメータ設定(LVC用)
*----------------------------------------------------------------------*
*      <--AO_GW_PRINT_LVC 印刷パラメータ情報
*----------------------------------------------------------------------*
FORM F_ALV_COM_PRINT_LVC CHANGING VALUE(AO_GW_PRINT_LVC)
TYPE LVC_S_PRNT.

CLEAR: AO_GW_PRINT_LVC.

AO_GW_PRINT_LVC-PRNTLSTINF = GC_ALV_FLG-X.  "ALV統計情報

ENDFORM.                    " F_ALV_COM_PRINT_LVC
*&---------------------------------------------------------------------*
*&      Form  F_ALV_GRID_DISPLAY_LVC
*&---------------------------------------------------------------------*
*       ALV出力(編集可能)
*----------------------------------------------------------------------*
*      -->AI_GV_TITLE  text
*      -->AI_GW_LAYOUT_LVC  text
*      -->AI_GI_FIELDCAT_LVC  text
*      -->AI_GW_DISVARIANT  text
*      -->AI_GV_HEIGHT_TOP  text
*      -->AI_GI_ALV_DATA  text
*      -->AI_GI_EVENT     text
*      -->AI_GW_PRINT_LVC     text
*----------------------------------------------------------------------*
FORM F_ALV_GRID_DISPLAY_LVC USING VALUE(AI_GV_TITLE)    TYPE LVC_TITLE
VALUE(AI_GW_LAYOUT_LVC)
TYPE LVC_S_LAYO
VALUE(AI_GI_FIELDCAT_LVC)
LIKE GI_FIELDCAT_LVC
VALUE(AI_GW_DISVARIANT)
TYPE DISVARIANT
VALUE(AI_GV_HEIGHT_TOP) TYPE I
VALUE(AI_GI_ALV_DATA) LIKE GI_ALV_DATA
VALUE(AI_GI_EVENT) TYPE SLIS_T_EVENT
VALUE(AI_GW_PRINT_LVC)
TYPE LVC_S_PRNT.

DATA:
LW_GRID TYPE LVC_S_GLAY.

CLEAR:
LW_GRID.

* 編集項目を内部テーブルに反映するための設定
LW_GRID-EDT_CLL_CB = GC_ALV_FLG-X.

CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
EXPORTING
*     I_INTERFACE_CHECK                 = ' '
*     I_BYPASSING_BUFFER                =
*     I_BUFFER_ACTIVE                   =
I_CALLBACK_PROGRAM                = SY-REPID
I_CALLBACK_PF_STATUS_SET          = GC_ALV_VIEW-NM_ST_SET
I_CALLBACK_USER_COMMAND           = GC_ALV_VIEW-NM_U_COMD
I_CALLBACK_TOP_OF_PAGE            = GC_ALV_VIEW-NM_T_HEAD
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME                  =
*     I_BACKGROUND_ID                   = ' '
*     I_GRID_TITLE                      =
I_GRID_SETTINGS                   = LW_GRID
IS_LAYOUT_LVC                     = AI_GW_LAYOUT_LVC
IT_FIELDCAT_LVC                   = AI_GI_FIELDCAT_LVC
*     IT_EXCLUDING                      =
*     IT_SPECIAL_GROUPS_LVC             =
*     IT_SORT_LVC                       =
*     IT_FILTER_LVC                     =
*     IT_HYPERLINK                      =
*     IS_SEL_HIDE                       =
*     I_DEFAULT                         = 'X'
I_SAVE                            = GC_ALV_FLG-A
IS_VARIANT                        = AI_GW_DISVARIANT
IT_EVENTS                         = AI_GI_EVENT
*     IT_EVENT_EXIT                     =
IS_PRINT_LVC                      = AI_GW_PRINT_LVC
*     IS_REPREP_ID_LVC                  =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE                 = 0
I_HTML_HEIGHT_TOP                 = AI_GV_HEIGHT_TOP
*     I_HTML_HEIGHT_END                 =
*     IT_ALV_GRAPHICS                   =
*     IT_EXCEPT_QINFO_LVC               =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
TABLES
T_OUTTAB                          = AI_GI_ALV_DATA
EXCEPTIONS
PROGRAM_ERROR                     = 1
OTHERS                            = 2
.
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

ENDFORM.                    " F_ALV_GRID_DISPLAY_LVC
*&---------------------------------------------------------------------*
*&      Form  F_ALV_SET_EVENT
*&---------------------------------------------------------------------*
*       イベント設定
*----------------------------------------------------------------------*
*      <--AO_EVENT  イベントテーブル
*----------------------------------------------------------------------*
FORM F_ALV_SET_EVENT CHANGING VALUE(AO_EVENT) TYPE SLIS_T_EVENT.

CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
I_LIST_TYPE           = 0
IMPORTING
ET_EVENTS             = AO_EVENT
EXCEPTIONS
LIST_TYPE_WRONG       = 1
OTHERS                = 2
.
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

ENDFORM.                    " F_ALV_SET_EVENT
*&---------------------------------------------------------------------*
*&      Form  F_ALV_SET_TITILE
*&---------------------------------------------------------------------*
*       ALVタイトル設定
*----------------------------------------------------------------------*
*      <--AO_GW_DISVARIANT-VARIANT ALVレイアウト
*      <--AO_GV_TITLE              ALVタイトル
*----------------------------------------------------------------------*
FORM F_ALV_SET_TITILE CHANGING VALUE(AO_GW_DISVARIANT-VARIANT)
TYPE DISVARIANT-VARIANT
VALUE(AO_GV_TITLE)
TYPE LVC_TITLE.

AO_GW_DISVARIANT-VARIANT = P_LAYOUT.
AO_GV_TITLE              = SY-TITLE.

ENDFORM.                    " F_ALV_SET_TITILE
*&---------------------------------------------------------------------*
*&      Form  F_APPEND_COLOR
*&---------------------------------------------------------------------*
*       着色設定
*----------------------------------------------------------------------*
*      -->AI_FIELDNAME  項目名
*      -->AI_COL        色
*      -->AI_INT        濃淡
*      -->AI_INV        反転
*----------------------------------------------------------------------*
FORM F_APPEND_COLOR  USING VALUE(AI_FIELDNAME) TYPE LVC_S_SCOL-FNAME
VALUE(AI_COL) TYPE LVC_S_COLO-COL
VALUE(AI_INT) TYPE LVC_S_COLO-INT
VALUE(AI_INV) TYPE LVC_S_COLO-INV.

CLEAR GW_SCOL.

GW_SCOL-FNAME     = AI_FIELDNAME.
GW_SCOL-COLOR-COL = AI_COL.
GW_SCOL-COLOR-INT = AI_INT.
GW_SCOL-COLOR-INV = AI_INV.
APPEND GW_SCOL TO GI_SCOL.

ENDFORM.                    " F_APPEND_COLOR
