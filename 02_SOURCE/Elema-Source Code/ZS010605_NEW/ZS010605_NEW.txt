************************************************************************
* [プログラム名]
*   ZS010605       売上一覧表_外貨対応
*
* [処理概要]
*   売上状況の把握
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2001/12/20   PSD H.Tanaka      新規開発　
*  2002/01/10   PSD H.Tanaka      ＡＬＶヘッダー表示
*  2002/01/15   PSD H.Tanaka      金額設定
*  2002/01/21   PSD H.Tanaka      数量マイナス編集
*  2002/01/23   PSD H.Tanaka      原価計算対応
*  2002/02/22   PSD M.Arai        売上単価不具合対応
*  2002/03/13   PSD T.SAITOH      ALVステータス印刷拒否設定
*  2002/04/01   PSD T.SAITOH      ショートダンプ可能性個所修正
*  2002/05/01   PSD T.SAITOH      テキスト不具合修正
*  2002/05/02   PSD T.SAITOH      会計伝票番号取得廃止
*  2002/05/02   PSD T.SAITOH      粗利金額（円建て）をLISと同様とする
*  2003/05/29   PSD K.MURATA      円建て金額を伝票通貨で出力する
*                                 新規構造を作成。
*  2004/04/07   NDSC A.MASUDA     テキストの再取得処理追加
*  2007/02/06   DMC R.HATA        出荷先名追加
*  2007/10/03   DMC R.Hata            テキスト再取得条件変更
*  2007/11/13   D.YI              出荷済未出庫/消費税金額追加
*  2007/12/20   DMC               出荷済未出庫出力対象修正
*  2008/02/04   DMC               出力項目に出荷先コードを追加
*  2008/06/19   DMC               出荷済未出庫データ取得方法修正
*  2011/12/05   SOLFIS C.MARUTA   DMW3765
*                                 抽出区分に登録日追加(これまでは転記日)
*                                 ヘッダにどちらの抽出か印字
*                                 抽出区分によってALVレイアウト分岐追加
************************************************************************
report  zs010605.

*---------------------------------------------------------------------
* TYPES
*---------------------------------------------------------------------
type-pools slis.
*--- 請求伝票データ型
types: begin of typ_info,
vbeln   type vbrp-vbeln,     " 請求伝票
posnr   type vbrp-posnr,     " 明細
fkimg   type vbrp-fkimg,     " 請求数量
vrkme   type vbrp-vrkme,     " 販売単位
kursk   type vbrp-kursk,     " 換算レート
aubel   type vbrp-aubel,     " 販売伝票
aupos   type vbrp-aupos,     " 販売伝票明細
matnr   type vbrp-matnr,     " 品目コード
arktx   type vbrp-arktx,     " テキスト
pstyv   type vbrp-pstyv,     " 明細カテゴリ
matkl   type vbrp-matkl,     " 品目グループ
prodh   type vbrp-prodh,     " 品目階層
vstel   type vbrp-vstel,     " 出荷ポイント
vkgrp   type vbrp-vkgrp,     " 営業グループ
vkbur   type vbrp-vkbur,     " 営業所
wavwr   type vbrp-wavwr,     " 原価
mvgr1   type vbrp-mvgr1,     " 商品グループ
mvgr2   type vbrp-mvgr2,     " 最終製品
mvgr3   type vbrp-mvgr3,     " 商品分類
mvgr4   type vbrp-mvgr4,     " 開発部販売実績
* ↓ MODIFY 2002.02.26 PSD M.ARAI 売上計上日不具合対応
*         ERDAT   TYPE VBRP-ERDAT,     " 登録日
fkdat   type vbrk-fkdat,     " 請求日
* ↑
netwra  type vbrp-netwr,     " 正味額
waerk   type vbrk-waerk,     " 伝票通貨
*---DELETE START PSD T.SAITOH 2002/05/02 ---------------------------*
*         BELNR   TYPE VBRK-BELNR,     " 伝票番号
*---DELETE END   PSD T.SAITOH 2002/05/02 ---------------------------*
kdgrp   type vbrk-kdgrp,     " 得意先グループ
zterm   type vbrk-zterm,     " 支払条件
kunnra  type vbrk-kunrg,     " 支払人
kunag   type vbrk-kunag,     " 受注先
fkart   type vbrk-fkart,     " 請求タイプ
* 2002/01/16 PSD H.Tanaka DEL ↓
*         BSTNK   TYPE VBRK-BSTNK_VF,  " 得意先受注番号
* 2002/01/16 PSD H.Tanaka DEL ↑
vbtyp   type vbrk-vbtyp,     " 販売伝票カテゴリ
vtext   type tvstt-vtext,    " 出荷ポイント名
* 2002/01/15 PSD H.Tanaka MOD ↓
bezeib  type tvkbt-bezei,    " 営業署名
bezeia  type tvgrt-bezei,    " 営業グループ名
* 2002/01/15 PSD H.Tanaka MOD ↑
*---APPEND START D.YI 2007/11/13 ---------------------------*
mwsbp   type vbrp-mwsbp,     " 消費税金額
*---APPEND END   D.YI 2007/11/13 ---------------------------*
*   insert 2011/12/5 C.MARUTA DMW3765{
erdat   type vbrk-erdat,     " 伝票登録日
* } insert 2011/12/5 C.MARUTA DMW3765
end   of typ_info.
*---APPEND START D.YI 2007/11/13 ---------------------------*
types: begin of typ_likp,
fkdat     type likp-fkdat,     " 売上計上日
vbeln     type likp-vbeln,     " 出荷伝票
lfimg     type lips-lfimg,     " 出荷数量
end   of typ_likp.
*---APPEND END   D.YI 2007/11/13 ---------------------------*

*--- 販売伝票データ型
types: begin of typ_vbap,
* 2002/01/16 PSD H.Tanaka ADD ↓
*         VBELN  TYPE VBAP-VBELN,   " 販売伝票
*         POSNR  TYPE VBAP-POSNR,   " 販売伝票明細
aubel  type vbap-vbeln,   " 販売伝票
aupos  type vbap-posnr,   " 販売伝票明細
* 2002/01/16 PSD H.Tanaka ADD ↑
kwmeng type vbap-kwmeng,  " 受注数量
kdmat  type vbap-kdmat,   " 得意先品目コード
audat  type vbak-audat,   " 伝票日付
* 2002/01/16 PSD H.Tanaka ADD ↓
bstnk  type vbak-bstnk,   " 得意先発注番号
* 2002/01/16 PSD H.Tanaka ADD ↑
* ↓ append 2002.02.22 psd m.arai 売上単価不具合対応
netpr  type vbap-netpr,   " 正味額
kpein  type vbap-kpein,   " 価格条件単位
* ↑
end   of typ_vbap.
*---APPEND START DMC 2007/12/20 ---------------------------*
types: begin of typ_vbup,
vbeln     type vbup-vbeln,     " 販売管理伝票番号
posnr     type vbup-posnr,     " 明細番号 (販売管理伝票)
rfsta     type vbup-rfsta,     " 参照ステータス
gbsta     type vbup-gbsta,     " 明細の全処理ステータス
matnr     type vbap-matnr,     "品目コード
vrkme     type vbap-vrkme,     "販売単位
vkgrp     type vbak-vkgrp,     "営業グループ
vkbur     type vbak-vkbur,     "営業所
bstnk     type vbak-bstnk,     "得意先発注番号
kunnra    type kna1-kunnr,     "支払人
kuntx     type kna1-name1,     "支払人名
maktx     type makt-maktx,     "品目テキスト
bezeia    type tvgrt-bezei,    "営業グループ名
bezeib    type tvkbt-bezei,    "営業所名
datfm     type sy-datum,       "選択処理年月日（Ｆｒｏｍ）
datto     type sy-datum,       "選択処理年月日（Ｔｏ）
end   of typ_vbup.
*---APPEND END DMC 2007/12/20---------------------------*

*---------------------------------------------------------------------
* DATA
*---------------------------------------------------------------------
*--- 購買伝票内部テーブル
data: gf_info  type          typ_info,
gt_info  type table of typ_info.

*--- 販売伝票内部テーブル
data: gf_vbap  type          typ_vbap,
gt_vbap  type table of typ_vbap.

*--- 帳票出力用内部テーブル
data: gf_write   type          zslist_v0605_new,   "20030529 構造変更
gt_write   like table of zslist_v0605_new.   "20030529 構造変更
* 2002/01/10 PSD H.Tanaka ADD ↓
data: gt_alv     type table of zslist_v0605_new    "20030529 構造変更
with header line.
* 2002/01/10 PSD H.Tanaka ADD ↑

*--- REUSE_ALV_EVENTS_GET 用
data: gt_event type slis_t_event.
data: gf_event type slis_alv_event.
data: gf_layout   type slis_layout_alv,     "レイアウト構造
gf_variant   like disvariant,          "バリアント
g_top_of_page type slis_formname value 'TOP_OF_PAGE'.
*---
data: g_repid        type sy-repid,        " プログラムＩＤ
g_data         type sy-datum,        " システム日付
g_edatu        like vbep-edatu,      " 出荷日付
g_adrnr        like vbpa-adrnr,      " 住所
g_bstdk_e      like vbkd-bstdk_e,    " 得意先回答納期
g_flg_exit(1)  type c value '0',     " ＬＯＯＰ終了フラグ
g_kunnra       type vbrk-kunrg.

* 2002/03/12  PSD T.SAITOH ADD ↓----------------------------------- *
data: gf_print type slis_print_alv.
* 2002/03/12  PSD T.SAITOH ADD ↑----------------------------------- *

*---APPEND START DMC 2007/12/20 ---------------------------*
*--- 販売伝票: 明細ステータス内部テーブル
data: gf_vbup  type          typ_vbup,
gt_vbup  type table of typ_vbup.
data: g_lfsta(1) type c value 'A',
g_gbsta(1) type c value 'C',
g_flg      type c .
*---APPEND END DMC 2007/12/20---------------------------*
*2008/06/19 ADD START
data: g_wbsta(1) type c value 'C'.
*2008/06/19 ADD END
*---------------------------------------------------------------------
* 定数宣言
*---------------------------------------------------------------------
constants: cns_vbrp(4)    type c value 'VBRP',
cns_vbpa(4)    type c value 'VBPA',
cns_vbep(4)    type c value 'VBEP',
cns_vbbp(4)    type c value 'VBBP',
cns_ekpo(4)    type c value 'EKPO',
cns_vbap(4)    type c value 'VBAP',
cns_vbkd(4)    type c value 'VBKD',
cns_vbfa(4)    type c value 'VBFA',
cns_tvstt(5)   type c value 'TVSTT',
cns_a(1)       type c value 'A',
cns_n(1)       type c value 'N',
cns_h(1)       type c value 'H',
*           CNS_I(1)       TYPE C VALUE 'I',
cns_k(1)       type c value 'K',
cns_l(1)       type c value 'L',
cns_m(1)       type c value 'M',
cns_o(1)       type c value 'O',
cns_c(1)       type c value 'C',
cns_j(1)       type c value 'J',
cns_s(1)       type c value 'S',
cns_x(1)       type c value 'X',
cns_p(1)       type c value 'P',
cns_py(2)      type c value 'PY',
cns_ag(2)      type c value 'AG',
cns_f2(2)      type c value 'F2',
cns_ka(2)      type c value 'KA',
cns_kb(2)      type c value 'KB',
cns_l2(2)      type c value 'L2',
cns_g2(2)      type c value 'G2',
cns_sp(2)      type c value 'SP',
cns_s1(2)      type c value 'S1',
cns_s2(2)      type c value 'S2',
cns_pe(2)      type c value 'PE',
cns_re(2)      type c value 'RE',
cns_tan(3)     type c value 'TAN',
cns_ztan(4)    type c value 'ZTAN',
cns_ztmp(4)    type c value 'ZTMP',
cns_zero(1)    type c value '0',
cns_zseo(4)    type c value 'ZSEO',
cns_zsek(4)    type c value 'ZSEK',
cns_onli(4)    type c value 'ONLI',
cns_0001(4)    type c value '0001',
cns_*(1)       type c value '*'
.
*---------------------------------------------------------------------
* 選択画面定義
*---------------------------------------------------------------------
*   insert 2011/12/5 C.MARUTA DMW3765{
selection-screen begin of line.
selection-screen comment (8) text-022.
selection-screen position 35.
parameters r_fkdat radiobutton group gr1 default 'X'. "売上計上日
selection-screen comment 37(10) text-023 for field r_fkdat.
selection-screen position 60.
parameters r_erdat radiobutton group gr1.             "登録日
selection-screen comment 62(6) text-024 for field r_erdat.
selection-screen end of line.
* } insert 2011/12/5 C.MARUTA DMW3765
*--- 抽出年月日
* ↓ MODIFY 2002.02.26 PSD M.Arai 売上計上日変更対応
*SELECT-OPTIONS: S_ERDAT FOR GF_INFO-ERDAT OBLIGATORY.
select-options: s_erdat for gf_info-fkdat obligatory.
* ↑
*--- 営業所コード
select-options: s_vkbur for gf_info-vkbur obligatory.
*--- 営業グループ
select-options: s_vkgrp for gf_info-vkgrp.
*--- 得意先コード
select-options: s_kunrg for g_kunnra.

* Add 2006.10.27 --->
*--- 品目コード
select-options: s_matnr for gf_info-matnr .
* Add 2006.10.27 <---

*---------------------------------------------------------------------
* START-OF-SELECTION
*---------------------------------------------------------------------
start-of-selection.
*--- 初期処理
perform frm_init.

*--- 帳票出力用内部テーブル設定処理
perform frm_make_data.

*--- 帳票出力処理
perform frm_write_data.

************************************************************************
* TOP-OF-PAGE
***********************************************************************
form frm_top_of_page.
*--- ヘッダー出力処理
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WRITE:  50      TEXT-001,
*            /1      TEXT-002,GF_WRITE-VKBUR,TEXT-004,GF_WRITE-BEZEIA,
*                    TEXT-003,GF_WRITE-VKGRP,TEXT-004,GF_WRITE-BEZEIB,
*                    TEXT-005,GF_WRITE-DATFM,        " 日付
*                    TEXT-006,GF_WRITE-DATTO.        " 日付
write:  50      text-001,
/1      text-002,gt_alv-vkbur,text-004,gt_alv-bezeia,
text-003,gt_alv-vkgrp,text-004,gt_alv-bezeib,
text-005,gt_alv-datfm,        " 日付
text-006,gt_alv-datto.        " 日付
* 2002/01/10 PSD H.Tanaka MOD ↑
*   insert 2011/12/5 C.MARUTA DMW3765{
IF R_FKDAT = 'X'.      "売上計上日で抽出
WRITE 123 TEXT-025.
ELSE.
WRITE 123 TEXT-026.
ENDIF.
* } insert 2011/12/5 C.MARUTA DMW3765
endform.
************************************************************************
* ALV CALLER_EXIT（ 2002/01/10 PSD H.Tanaka ADD ）
***********************************************************************
form frm_caller_exit using rs_data type slis_data_caller_exit.
rs_data-callback_header_transport = 'FILITEXTS_TEXT_TRANSPORT'.
endform.
************************************************************************
* Form
***********************************************************************
*&---------------------------------------------------------------------*
*&      Form  FRM_INIT
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_init.

g_repid = sy-repid.   " プログラムＩＤ取得
g_data  = sy-datum.   " システム日付取得

endform.                    " FRM_INIT
*&---------------------------------------------------------------------
*&      Form  FRM_MAKE_DATA
*&---------------------------------------------------------------------
*       帳票出力用内部テーブル設定処理
*----------------------------------------------------------------------
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------
form frm_make_data.

*---APPEND START DMC 2007/12/20 ---------------------------*
* 出荷済未出庫対象データ取得処理
perform frm_vbup_get.
* 出荷済未出庫対象データ編集処理
perform frm_vbup_set.
*---APPEND END DMC 2007/12/20---------------------------*

*--- 請求伝票情報取得処理
perform frm_vbrk_get.

*--- 帳票出力情報設定処理
loop at gt_info into gf_info.
*--- 請求伝票情報設定処理
perform frm_vbrk_set.
*--- 販売伝票情報取得処理
perform frm_vbap_get.
*--- 販売伝票情報設定処理
perform frm_vbap_set.
* 2002/01/21 PSD H.Tanaka ADD ↓
*--- 数量のマイナス設定処理
perform frm_data_set.
*--- 選択処理年月日設定処理
perform frm_date_set.
*--- 計算処理
perform frm_keisan_set.
*--- 帳票用内部テーブル更新処理
append gf_write to gt_write.
endloop.
*---APPEND START D.YI 2007/11/13 ---------------------------*
*--- 出荷済未出庫
perform frm_likp_set.
*---APPEND END   D.YI 2007/11/13 ---------------------------*

endform.                    " FRM_MAKE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_VBRK_GET
*&---------------------------------------------------------------------*
*       請求伝票情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbrk_get.
clear   gf_info.
refresh gt_info.

*--- 販売伝票情報取得
*   insert 2011/12/5 C.MARUTA DMW3765{
if r_fkdat = 'X'.      "売上計上日で抽出
* } insert 2011/12/5 C.MARUTA DMW3765
select a~vbeln a~posnr a~fkimg a~vrkme a~kursk
a~aubel a~aupos a~matnr a~arktx a~pstyv
a~matkl a~prodh a~vstel a~vkgrp a~vkbur
a~wavwr a~mvgr1 a~mvgr2 a~mvgr3 a~mvgr4
* ↓ MODIFY  2002.02.26 PSD M.Arai 売上計上日不具合対応
*         A~ERDAT A~NETWR
b~fkdat a~netwr
* ↑
*---MODIFY START PSD T.SAITOH 2002/05/02 ---------------------------*
*        B~WAERK B~BELNR B~KDGRP B~ZTERM
b~waerk         b~kdgrp b~zterm
*---MODIFY END   PSD T.SAITOH 2002/05/02 ---------------------------*
* 2002/01/16 PSD H.Tanaka MOD ↓
b~kunrg b~kunag b~fkart
*         B~BSTNK_VF
b~vbtyp
*         C~BEZEI D~BEZEI E~VTEXT
* 2002/01/16 PSD H.Tanaka MOD ↑
c~vtext d~bezei e~bezei
*---APPEND START D.YI 2007/11/13 ---------------------------*
a~mwsbp     " 消費税金額
*---APPEND END   D.YI 2007/11/13 ---------------------------*
*   insert 2011/12/5 C.MARUTA DMW3765{
b~erdat
* } insert 2011/12/5 C.MARUTA DMW3765
into table gt_info
from ( ( ( vbrp as a inner join vbrk as b
on       a~vbeln  = b~vbeln ) inner join tvstt as c
on       a~vstel  = c~vstel ) inner join tvgrt as d
on       a~vkgrp  = d~vkgrp ) inner join tvkbt as e
on       a~vkbur  = e~vkbur
where     a~vkgrp in s_vkgrp
and     a~vkbur in s_vkbur
* ↓ MODIFY 2002.02.26 M.Arai 売上計上日変更対応
*     AND     A~ERDAT IN S_ERDAT
and     b~fkdat in s_erdat

* Add 2006.10.27 --->
and matnr in s_matnr
* Add 2006.10.27 <---

* ↑
and     b~kunrg in s_kunrg
and ( ( b~fkart =  cns_f2
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_m )
or   ( b~fkart =  cns_re
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_o )
or   ( b~fkart =  cns_s2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_s )
or   ( b~fkart =  cns_s2
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_s )
or   ( b~fkart =  cns_s1
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_n )
or   ( b~fkart =  cns_s1
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_n )
or   ( b~fkart =  cns_l2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_p )
or   ( b~fkart =  cns_g2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_o ) )
and     c~spras =  cns_j
and     d~spras =  cns_j
and     e~spras =  cns_j.
*   insert 2011/12/5 C.MARUTA DMW3765{
else.                  "登録日で抽出
select a~vbeln a~posnr a~fkimg a~vrkme a~kursk
a~aubel a~aupos a~matnr a~arktx a~pstyv
a~matkl a~prodh a~vstel a~vkgrp a~vkbur
a~wavwr a~mvgr1 a~mvgr2 a~mvgr3 a~mvgr4
b~fkdat a~netwr b~waerk b~kdgrp b~zterm
b~kunrg b~kunag b~fkart b~vbtyp c~vtext
d~bezei e~bezei a~mwsbp     " 消費税金額
b~erdat
into table gt_info
from ( ( ( vbrp as a inner join vbrk as b
on       a~vbeln  = b~vbeln ) inner join tvstt as c
on       a~vstel  = c~vstel ) inner join tvgrt as d
on       a~vkgrp  = d~vkgrp ) inner join tvkbt as e
on       a~vkbur  = e~vkbur
where     a~vkgrp in s_vkgrp
and     a~vkbur in s_vkbur
and     b~erdat in s_erdat      "←変更
and     a~matnr in s_matnr
and     b~kunrg in s_kunrg
and ( ( b~fkart =  cns_f2
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_m )
or   ( b~fkart =  cns_re
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_o )
or   ( b~fkart =  cns_s2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_s )
or   ( b~fkart =  cns_s2
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_s )
or   ( b~fkart =  cns_s1
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_n )
or   ( b~fkart =  cns_s1
and     b~fktyp =  cns_l
and     b~vbtyp =  cns_n )
or   ( b~fkart =  cns_l2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_p )
or   ( b~fkart =  cns_g2
and     b~fktyp =  cns_a
and     b~vbtyp =  cns_o ) )
and     c~spras =  cns_j
and     d~spras =  cns_j
and     e~spras =  cns_j.
endif.
* } insert 2011/12/5 C.MARUTA DMW3765

*--- エラー処理
case sy-subrc.
when 0.
when 4.         " 対象データなし
*---APPEND START DMC 2007/12/20 ---------------------------*
check: not g_flg is initial.
*---APPEND END DMC 2007/12/20 ---------------------------*
message s600(z1) with text-007.
stop.
when others.    " システムエラー
message a603(z1) with g_repid
cns_vbrp
sy-subrc.
endcase.

endform.                    " FRM_VBRK_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBRK_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbrk_set.
clear: gf_write,        " 帳票出力用構造クリア
g_flg_exit.      " ＬＯＯＰ終了フラグクリア
*--- 共通項目設定
move-corresponding gf_info to gf_write.

*--- 区・在（在庫品）設定
if gf_write-pstyv = cns_zseo.
gf_write-ku = text-008.
elseif gf_write-pstyv = cns_zsek or
gf_write-pstyv = cns_tan  or
gf_write-pstyv = cns_ztan or
gf_write-pstyv = cns_ztmp.
gf_write-zai = cns_*.
if gf_write-pstyv = cns_zsek.
gf_write-ku  = text-009.
endif.
endif.

*--- 伝区設定
if gf_write-fkart = cns_re.
gf_write-denku = text-010.
elseif gf_write-fkart = cns_g2.
gf_write-denku = text-011.
elseif gf_write-fkart = cns_l2.
gf_write-denku = text-012.
elseif gf_write-fkart = cns_s1.
gf_write-denku = text-013.
elseif gf_write-fkart = cns_s2.
gf_write-denku = text-014.
endif.

endform.                    " FRM_VBRK_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_GET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbap_get.
clear   gf_vbap.
refresh gt_vbap.

*--- 販売伝票情報取得
select a~vbeln a~posnr a~kwmeng a~kdmat
b~audat
* 2002/01/16 PSD H.Tanaka ADD ↓
b~bstnk
* 2002/01/16 PSD H.Tanaka ADD ↑
* ↓ 2002.02.22 psd m.arai 売上単価不具合対応
a~netpr
a~kpein
* ↑
*    INTO CORRESPONDING FIELDS OF TABLE GT_VBAP
into table gt_vbap
from vbap as a inner join vbak as b
on a~vbeln = b~vbeln
where a~vbeln = gf_info-aubel
and a~posnr = gf_info-aupos.

*--- エラー処理
case sy-subrc.
when 0.
*      SORT GT_VBAP BY VBELN POSNR.
sort gt_vbap by aubel aupos.
when 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-015.
when others.    " システムエラー
message a603(z1) with g_repid
cns_vbap
sy-subrc.
endcase.

endform.                    " FRM_VBAP_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBAP_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbap_set.

loop at gt_vbap into gf_vbap.
if sy-tabix = 1.
*--- 販売情報設定
move-corresponding gf_vbap to gf_write.
*---APPEND START PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 出荷指示備考設定
perform frm_read_text_forwarding.
*---APPEND END   PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 社内用備考設定
perform frm_read_text.
*--- 販売伝票納入日程行情報取得
perform frm_vbep_get.
*--- 販売伝票ビジネスデータ情報取得
perform frm_vbkd_get.


*2008/02/04 MOD START
*--- 出荷先コード・出荷先名設定
perform frm_vbpa_get1 using    'WE'
'出荷先'
gf_vbap-aubel
changing gf_write-shukkacd
gf_write-shukka.
** Add 2007.02.06 --->
**--- 出荷先名設定
*      PERFORM FRM_VBPA_GET USING   'WE'
*                                    '出荷先名'
*                           CHANGING GF_WRITE-SHUKKA.
**--- 出荷先名設定
*      PERFORM FRM_ADDR_GET USING    GF_WRITE-SHUKKA
*                           CHANGING GF_WRITE-SHUKKA.
** Add 2007.02.06 <---
*2008/02/04 MOD END

*--- 販売伝票取引先取得（受注先名取得用）
* 2002/01/11 PSD H.Tanaka MOD ↓
*      PERFORM FRM_VBPA_GET USING    CNS_SP
perform frm_vbpa_get using    cns_ag
* 2002/01/11 PSD H.Tanaka MOD ↑
text-019
*                           CHANGING GF_WRITE-KUNAG.
changing gf_write-kunnrb.
*--- 受注先名設定
*      PERFORM FRM_ADDR_GET USING    GF_WRITE-KUNAG
perform frm_addr_get using    gf_write-kunnrb
changing gf_write-kunnrb.
*--- 販売伝票取引先取得（得意先名取得用）
* 2002/01/11 PSD H.Tanaka MOD ↓
*      PERFORM FRM_VBPA_GET USING    CNS_PY
perform frm_vbpa_get using    cns_ag
* 2002/01/11 PSD H.Tanaka MOD ↑
text-018
*                           CHANGING GF_WRITE-KUNNRA.
changing gf_write-kuntx.
*--- 得意先名設定
*      PERFORM FRM_ADDR_GET USING    GF_WRITE-KUNNRA
perform frm_addr_get using    gf_write-kuntx
changing gf_write-kuntx.
else.
*--- 受注数量設定
gf_write-kwmeng = gf_write-kwmeng + gf_vbap-kwmeng.
endif.
endloop.

endform.                    " FRM_VBAP_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT
*&---------------------------------------------------------------------*
*       社内用備考取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_read_text.
data: lt_tline    type table of tline,
lf_tline    type tline,
l_vbeln     like thead-tdname.

*  CONCATENATE GF_VBAP-VBELN
*              GF_VBAP-POSNR
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
*  ヘッダ単位のためヘッダのみ
*  CONCATENATE GF_VBAP-AUBEL
*              GF_VBAP-AUPOS
*              INTO L_VBELN.
* Modified 2003.08.08 >>>
* L_VBELN = GF_VBAP-AUBEL.
select single vgbel
from vbrp
into l_vbeln
where vbeln eq gf_info-vbeln
and  posnr eq gf_info-posnr
.

* Modified 2003.08.08 <<<
*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
*--- 汎用モジュール『READ_TEXT』
call function 'READ_TEXT'
exporting
id        = '0001'
language  = 'J'
name      = l_vbeln
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
* 設計書どおりに記述していないため修正
*            OBJECT    = 'VBBP'
object    = 'VBBK'
*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
tables
lines     = lt_tline
exceptions
not_found = 4
others    = 8.
case sy-subrc.
when 0.
read table lt_tline into lf_tline index 1.
*---MODIFY START PSD T.SAITOH 2002/05/01 ---------------------------*
*     GF_WRITE-ETCB = LF_TLINE+0(40).
gf_write-etcb = lf_tline-tdline.
*---MODIFY END   PSD T.SAITOH 2002/05/01 ---------------------------*
* Mod 2007.10.03 --->
*    WHEN 8.
when others .
* Mod 2007.10.03 <---

*---APPEND START NDSC A.MASUDA 2004/04/07---------------------------*
l_vbeln = gf_vbap-aubel.
*--- 汎用モジュール『READ_TEXT』
call function 'READ_TEXT'
exporting
id        = '0001'
language  = 'J'
name      = l_vbeln
object    = 'VBBK'
tables
lines     = lt_tline
exceptions
not_found = 4
others    = 8.
case sy-subrc.
when 0.
read table lt_tline into lf_tline index 1.
gf_write-etcb = lf_tline-tdline.
when 8.
* Mod 2006.05.23 --->
*           MESSAGE E001(Z1) WITH TEXT-016
message s001(z1) with text-016
sy-subrc.
* Mod 2006.05.23 <---
endcase.
*---APPEND END   NDSC A.MASUDA 2004/04/07---------------------------*
*---DELETE STRAT NDSC A.MASUDA 2004/04/07---------------------------*
*      MESSAGE E001(Z1) WITH TEXT-016
*                            SY-SUBRC.
*---DELETE END   NDSC A.MASUDA 2004/04/07---------------------------*
endcase.

endform.                    " FRM_READ_TEXT
*&---------------------------------------------------------------------*
*&      Form  FRM_VBEP_GET
*&---------------------------------------------------------------------*
*       販売伝票納入日程行情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbep_get.
*--- 販売伝票納入日程行取得
select single edatu
into (gf_write-edatu)
from vbep
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR
where vbeln = gf_vbap-aubel
and posnr = gf_vbap-aupos
and etenr = cns_0001.

*--- エラー処理
case sy-subrc.
when 0.
when 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-017.
when others.    " システムエラー
message a603(z1) with g_repid
cns_vbep
sy-subrc.
endcase.

endform.                    " FRM_VBEP_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBKD_GET
*&---------------------------------------------------------------------*
*       販売伝票ビジネスデータ情報取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_vbkd_get.
*--- 販売伝票ビジネスデータ情報取得
select single bstdk_e
into (gf_write-tknk)
from vbkd
* 2002/01/22 PSD H.Tanaka MOD ↓
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR.
where vbeln = gf_vbap-aubel
*     AND POSNR = GF_VBAP-AUPOS
and posnr = '000000'.

*--- エラー処理
case sy-subrc.
when 0.
when 4.         " 対象データなし
*      MESSAGE S600(Z1) WITH TEXT-020.
when others.    " システムエラー
message a603(z1) with g_repid
cns_vbkd
sy-subrc.
endcase.

endform.                    " FRM_VBKD_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET
*&---------------------------------------------------------------------*
*       販売伝票取引先取得処理
*----------------------------------------------------------------------*
*      -->P_PAEVW  取引先機能
*      -->P_TEXT   エラー時出力用テーブル名
*      <--P_ADRNR  住所
*----------------------------------------------------------------------*
form frm_vbpa_get using    p_paevw
p_text
changing p_adrnr.
*--- 販売伝票取引情報取得
select single adrnr
into (p_adrnr)
from vbpa
* 2002/01/11 PSD H.Tanaka MOD ↓
*   WHERE VBELN = GF_VBAP-VBELN
*     AND POSNR = GF_VBAP-POSNR
where vbeln = gf_vbap-aubel
and posnr = '000000'
* 2002/01/11 PSD H.Tanaka MOD ↑
and parvw = p_paevw.

*--- エラー処理
case sy-subrc.
when 0.
when 4.         " 対象データなし
message s600(z1) with p_text.
when others.    " システムエラー
message a603(z1) with g_repid
cns_vbpa
sy-subrc.
endcase.

endform.                    " FRM_VBPA_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_DATE_SET
*&---------------------------------------------------------------------*
*       選択処理年月日設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_date_set.
gf_write-datfm = s_erdat-low.
gf_write-datto = s_erdat-high.
endform.                    " FRM_DATE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_KEISAN_SET
*&---------------------------------------------------------------------*
*       計算処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_keisan_set.
data: l_netwra type zslist_v0605_new-kwmeng,       "20030529 構造変更
l_wavwr  type zslist_v0605_new-netpra.       "20030529 構造変更
*--- 売上金額設定
* 2002/01/22 PSD H.Tanaka MOD ↓
perform frm_kingaku_henkan using    gf_write-waerk
*                                      GF_WRITE-NETWRA
**                             CHANGING GF_WRITE-NETWRB.
*                             CHANGING GF_WRITE-NETWRA.
* ↓ modify 2002.02.22 psd m.arai 売上単価不具合対応
*                                      GF_INFO-NETWRA
gf_vbap-netpr
changing l_netwra.
gf_write-netwra = l_netwra.
if gf_vbap-kpein <> 0.

gf_write-netwra = ( gf_write-netwra * gf_write-fkimg )
/ gf_vbap-kpein.
else.
gf_write-netwra = 0.
endif.
* ↑

*--- 原価設定
* 2002/01/22 PSD H.Tanaka MOD ↓
perform frm_kingaku_henkan using    gf_write-waerk
*                                      GF_WRITE-WAVWR
gf_info-wavwr
*                             CHANGING GF_WRITE-WAVWRA.
*                             CHANGING GF_WRITE-WAVWR.
changing l_wavwr.
*--- 原価計算
* 2002/01/24 PSD H.Tanaka MOD ↓
*  IF GF_WRITE-KWMENG <> CNS_ZERO.
if gf_info-fkimg <> cns_zero.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_WRITE-KWMENG.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_VBAP-KWMENG.
*    GF_WRITE-WAVWR = GF_WRITE-WAVWR / GF_INFO-FKIMG.
gf_write-wavwr = l_wavwr / gf_info-fkimg.
gf_write-wavwra = ( l_wavwr / gf_info-fkimg ) * gf_write-kursk.
endif.
*--- 原価（円建て）計算
*  GF_WRITE-WAVWRA = GF_WRITE-WAVWR * GF_WRITE-KURSK.

*--- 原価金額計算
*  GF_WRITE-GYENA = GF_WRITE-WAVWR.
*  GF_WRITE-GYENA = L_WAVWR.
if gf_info-vbtyp = cns_n or
gf_info-vbtyp = cns_o.
*    GF_WRITE-GYENA = GF_WRITE-GYENA * -1.
l_wavwr = l_wavwr * -1.
endif.
gf_write-gyena = l_wavwr.
*--- 原価金額（円建て）計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*  GF_WRITE-GYENB  = GF_WRITE-WAVWRA * GF_WRITE-FKIMG.
*  GF_WRITE-GYENB = GF_WRITE-GYENA * GF_WRITE-KURSK.
gf_write-gyenb = l_wavwr * gf_write-kursk.

*--- 売上単価計算
*---MODIFY START PSD T.SAITOH 2002/04/01 ---------------------------*
*  IF GF_WRITE-FKIMG <> CNS_ZERO. "チェックする内容が違うのでは？
*                                  とりあえず、修正する。
if gf_vbap-kpein <> cns_zero.
*---MODIFY END   PSD T.SAITOH 2002/04/01 ---------------------------*
* 2002/01/22 PSD H.Tanaka MOD ↓
*    GF_WRITE-NETPRA = GF_WRITE-NETWRB / GF_WRITE-FKIMG.
*    GF_WRITE-NETPRA = L_NETWRA / GF_WRITE-FKIMG.
gf_write-netpra = l_netwra / gf_vbap-kpein."売上単価算出
*---DELETE START PSD T.SAITOH 2002/04/01 ---------------------------*
*  ENDIF.
*---DELETE END   PSD T.SAITOH 2002/04/01 ---------------------------*

*--- 売上単価（円建て）計算
* ↓ MODIFY 2002/02/22 PSD M.Arai 売上単価不具合対応
*  GF_WRITE-NETPRB = GF_WRITE-NETPRA * GF_WRITE-KURSK.
gf_write-netprb = ( l_netwra / gf_vbap-kpein )  * gf_write-kursk.
* ↑
*---MODIFY START PSD T.SAITOH 2002/04/01 ---------------------------*
endif.
*---MODIFY END   PSD T.SAITOH 2002/04/01 ---------------------------*


*--- 売上金額（円建て）計算
gf_write-netwrb = gf_write-fkimg * gf_write-netprb.
* 2002/01/11 PSD H.Tanaka MOD ↑
*--- 粗利金額計算
*---MODIFY START PSD T.SAITOH 2002/05/02 ---------------------------*
*  GF_WRITE-ARAEYN = GF_WRITE-NETWRB - GF_WRITE-GYENB.

* 粗利金額 = （売上金額（外貨）−原価金額（外貨））＊ 換算レート
* 20030529 MODIFY-S >>>
gf_write-araeyn = gf_write-netwra - l_wavwr.
*  GF_WRITE-ARAEYN
*           = ( GF_WRITE-NETWRA - L_WAVWR ) * GF_WRITE-KURSK.
* 20030529 MODIFY-E <<<

*---MODIFY END   PSD T.SAITOH 2002/05/02 ---------------------------*

*--- 粗利率計算
* 2002/01/11 PSD H.Tanaka MOD ↓
*    GF_WRITE-ARAPER = GF_WRITE-ARAEYN / GF_WRITE-NETWRA.
*  IF GF_WRITE-NETWRA <> CNS_ZERO.

** 20030529 MODIFY-S >>> 円建て不使用
if gf_write-netwra <> cns_zero.
gf_write-araper = gf_write-araeyn / gf_write-netwra * 100.
*  IF GF_WRITE-NETWRB <> CNS_ZERO.
*    GF_WRITE-ARAPER = GF_WRITE-ARAEYN / GF_WRITE-NETWRB * 100.
** 20030529 MODIFY-E <<<

* 2002/01/11 PSD H.Tanaka MOD ↑
endif.

endform.                    " FRM_KEISAN_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_ADDR_GET
*&---------------------------------------------------------------------*
*       受注先名／得意先名取得処理
*----------------------------------------------------------------------*
*      -->P_ADRNR  住所
*      <--P_NAME2  受注先名／得意先名
*----------------------------------------------------------------------*
form frm_addr_get using    p_adrnr
changing p_name2.
data l_addr1_sel type addr1_sel.
data l_sadr      type sadr.

l_addr1_sel-addrnumber = p_adrnr.
*--- 汎用モジュール『ADDR_GET』
call function 'ADDR_GET'
exporting
address_selection = l_addr1_sel
importing
sadr              = l_sadr
exceptions
parameter_error   = 1
address_not_exist = 2
version_not_exist = 3
internal_error    = 4
others            = 5.
if sy-subrc <> 0.
*    P_KUNNR = ''.
else.
p_name2 = l_sadr-name1.
endif.

endform.                    " FRM_ADDR_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_write_data.
*--- 帳票設定処理
perform frm_write_set.

*--- リストの出力
call function 'REUSE_ALV_LIST_DISPLAY'
exporting
i_callback_program             = g_repid        "レポートID
*   I_CALLBACK_TOP_OF_PAGE          = G_TOP_OF_PAGE  "TOP_OF_PAGE
i_structure_name = 'ZSLIST_V0605_NEW'         "20030529構造変更
is_layout                      = gf_layout      "レイアウト設定
i_save                         = 'A'            "レイアウト保存
is_variant                     = gf_variant
it_events                      = gt_event[]     "イベント設定
* 2002/03/13  PSD T.SAITOH ADD ↓-------------------------------------*
is_print                       = gf_print      "印刷設定
* 2002/03/13  PSD T.SAITOH ADD ↑-------------------------------------*
tables
* 2002/01/10 PSD H.Tanaka MOD ↓
*    T_OUTTAB                       = GT_WRITE  " 帳票出力用内部テーブル
t_outtab                       = gt_alv  " 帳票出力用内部テーブル
* 2002/01/10 PSD H.Tanaka MOD ↑
exceptions
program_error                  = 1
others                         = 2
.
if sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
endif.

endform.                    " FRM_WRITE_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_SET
*&---------------------------------------------------------------------*
*       帳票設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_write_set.
* 2002/02/06 PSD H.Tanaka ADD ↓
*--- 内部テーブル存在チェック
if gt_write is initial.
message s204(z1).
stop.
endif.
* 2002/02/06 PSD H.Tanaka ADD ↑
* 2002/01/10 PSD H.Tanaka ADD ↓
*--- 内部テーブル変換処理
gt_alv[] = gt_write[].
* 2002/01/10 PSD H.Tanaka ADD ↑
* 2002/03/12  PSD T.SAITOH ADD ↓-------------------------------------*
gf_print-no_print_listinfos = 'X'.
* 2002/03/12  PSD T.SAITOH ADD ↑-------------------------------------*

*--- イベント取得処理
perform frm_event_get.

*--- ページ切り替え設定
gf_layout-group_change_edit = cns_x.

*--- バリアント保存設定
*   modify 2011/12/5 C.MARUTA DMW3765{
*  GF_VARIANT-VARIANT = '/ZS010600_01'.
if r_fkdat = 'X'.      "売上計上日
gf_variant-variant = '/ZS010600_01'.
else.                  "登録日
gf_variant-variant = '/ZS010600_03'.
endif.
* } modify 2011/12/5 C.MARUTA DMW3765
endform.                    " FRM_WRITE_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_EVENT_GET
*&---------------------------------------------------------------------*
*       イベント取得処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_event_get.
*--- イベント取得
call function 'REUSE_ALV_EVENTS_GET'
exporting
i_list_type     = 0
importing
et_events       = gt_event
exceptions
list_type_wrong = 1
others          = 2.
if sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
endif.

*--- 使用イベントに実行するサブルーチン名を設定
loop at gt_event into gf_event.
* 2002/01/10 PSD H.Tanaka MOD ↓
*    WHERE NAME = 'TOP_OF_PAGE'.
*      GF_EVENT-FORM = 'FRM_TOP_OF_PAGE'.
*      MODIFY GT_EVENT FROM GF_EVENT.
case gf_event-name.
when 'TOP_OF_PAGE'.
gf_event-form = 'FRM_TOP_OF_PAGE'.
modify gt_event from gf_event.
when 'CALLER_EXIT'.
gf_event-form = 'FRM_CALLER_EXIT'.
modify gt_event from gf_event.
endcase.
* 2002/01/10 PSD H.Tanaka MOD ↑
endloop.

endform.                    " FRM_EVENT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*       金額変換処理
*----------------------------------------------------------------------*
*      -->P_TSUKACD  通貨コード
*      -->P_KINGAKU  変換前金額
*      <--P_HENKAN   変換後金額
*----------------------------------------------------------------------*
form frm_kingaku_henkan using    p_tsukacd
p_kingaku
changing p_henkan.
data l_idoc_amount(255) type c.
*--- 汎用モジュール金額変換モジュール
call function 'CURRENCY_AMOUNT_SAP_TO_IDOC'
exporting
currency    = p_tsukacd
sap_amount  = p_kingaku
importing
idoc_amount = l_idoc_amount
exceptions
others      = 1.
if sy-subrc <> 1.
p_henkan = l_idoc_amount.
endif.

endform.                    " FRM_KINGAKU_HENKAN
*&---------------------------------------------------------------------*
*&      Form  FRM_DATA_SET
*&---------------------------------------------------------------------*
*       数量のマイナス設定処理
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form frm_data_set.
* 2002/01/15 PSD H.Tanaka ADD ↓
*--- 売上金額・売上数量・受注数量変換
if gf_info-vbtyp = cns_n or
gf_info-vbtyp = cns_o.
* 2002/01/24 PSD H.Tanaka MOD ↓
*    GF_WRITE-NETWRA = GF_WRITE-NETWRA * -1. " 売上金額
gf_info-netwra = gf_info-netwra * -1. " 売上金額
* 2002/01/21 PSD H.Tanaka MOD ↓
*    GF_WRITE-WAVWR  = GF_WRITE-WAVWR  * -1.
gf_write-fkimg  = gf_write-fkimg  * -1. " 売上数量
gf_write-kwmeng = gf_write-kwmeng * -1. " 受注数量
endif.
* 2002/01/15 PSD H.Tanaka ADD ↑

endform.                    " FRM_DATA_SET
*---APPEND START PSD T.SAITOH 2002/05/01 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_READ_TEXT_forwarding
*&---------------------------------------------------------------------*
*       出荷指示備考取得処理
*----------------------------------------------------------------------*
form frm_read_text_forwarding.
data: lt_tline    type table of tline,
lf_tline    type tline,
l_vbeln     like thead-tdname.

* Modified 2003.08.08 >>>
*  CONCATENATE GF_VBAP-AUBEL
*              GF_VBAP-AUPOS
*              INTO L_VBELN.
*
select single vgbel vgpos
from vbrp
into (l_vbeln+0(10),l_vbeln+10(6) )
where vbeln eq gf_info-vbeln
and  posnr eq gf_info-posnr
.
* Modified 2003.08.08 <<<
*--- 汎用モジュール『READ_TEXT』
call function 'READ_TEXT'
exporting
id        = '9001'
language  = 'J'
name      = l_vbeln
object    = 'VBBP'
tables
lines     = lt_tline
exceptions
not_found = 4
others    = 8.
case sy-subrc.
when 0.
read table lt_tline into lf_tline index 1.
gf_write-etca = lf_tline-tdline.
when 8.
*---APPEND START NDSC A.MASUDA 2004/04/07---------------------------*
concatenate gf_vbap-aubel
gf_vbap-aupos
into l_vbeln.
*--- 汎用モジュール『READ_TEXT』
call function 'READ_TEXT'
exporting
id        = '9001'
language  = 'J'
name      = l_vbeln
object    = 'VBBP'
tables
lines     = lt_tline
exceptions
not_found = 4
others    = 8.
case sy-subrc.
when 0.
read table lt_tline into lf_tline index 1.
gf_write-etca = lf_tline-tdline.
when 8.
* Mod 2006.05.23 --->
*           MESSAGE E001(Z1) WITH TEXT-016
message s001(z1) with text-016
sy-subrc.
* Mod 2006.05.23 <---
endcase.
*---APPEND END   NDSC A.MASUDA 2004/04/07---------------------------*
*---DELETE START NDSC A.MASUDA 2004/04/07---------------------------*
*      MESSAGE E001(Z1) WITH TEXT-016
*                            SY-SUBRC.
*---DELETE END   NDSC A.MASUDA 2004/04/07---------------------------*
endcase.

endform.                    " FRM_READ_TEXT_forwarding
*---APPEND END   PSD T.SAITOH 2002/05/01 ---------------------------*

*---APPEND START D.YI 2007/11/13 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_LIKP_SET
*&---------------------------------------------------------------------*
*       出荷済未出庫
*----------------------------------------------------------------------*
form frm_likp_set.

data: lt_alv    type standard table of zslist_v0605_new,
*---DEL START DMC 2007/12/20 ---------------------------*
*        LF_ALV_H  TYPE ZSLIST_V0605_NEW,
*        LF_ALV_T  TYPE ZSLIST_V0605_NEW,
*---DEL END DMC 2007/12/20 ---------------------------*
lf_alv_w  type zslist_v0605_new,
lt_likp   type standard table of typ_likp,
lf_likp   type typ_likp,
lf_likp_t type typ_likp,
l_lfimg   type lips-lfimg,
l_wavwr   type vbap-wavwr,
l_wavwr_w type zslist_v0605_new-gyenb,
l_kwmeng  type vbap-kwmeng,
l_waerk   type vbap-waerk,
l_kursk   type vbkd-kursk.
*---APPEND START DMC 2007/12/20 ---------------------------*
data:
lf_alv_h  type typ_vbup,
lf_alv_t  type typ_vbup.
*---APPEND END DMC 2007/12/20 ---------------------------*
*---MOD START DMC 2007/12/20 ---------------------------*
*  LT_ALV[] = GT_WRITE[].
*
*  SORT LT_ALV BY AUBEL.
*
*  LOOP AT LT_ALV
*     INTO LF_ALV_H.
*
*    IF LF_ALV_T-AUBEL <> LF_ALV_H-AUBEL.
*      LF_ALV_T = LF_ALV_H.

sort gt_vbup by vbeln posnr.

loop at gt_vbup
into lf_alv_h .

check: lf_alv_h-vkbur in s_vkbur.

if lf_alv_t-vbeln <> lf_alv_h-vbeln.
lf_alv_t = lf_alv_h.
*---MOD END DMC 2007/12/20---------------------------*

* 原価金額円の取得
clear: l_kwmeng,
l_wavwr,
l_waerk,
l_wavwr_w.

select single
a~wavwr
a~waerk
a~kwmeng
b~kursk
into (l_wavwr, l_waerk, l_kwmeng, l_kursk)
from ( vbap as a inner join vbkd as b
on  a~vbeln  = b~vbeln )
*---MOD START DMC 2007/12/20 ---------------------------*
*       WHERE A~VBELN = LF_ALV_T-AUBEL.
where a~vbeln = lf_alv_t-vbeln.
*---MOD END DMC 2007/12/20---------------------------*

perform frm_kingaku_henkan using  l_waerk
l_wavwr
changing l_wavwr_w.

* 出荷数量、売上予定日の取得
clear: lt_likp[].
select c~vbeln
c~fkdat
d~lfimg
into corresponding fields of table lt_likp
from ( ( ( vbfa as a inner join vbup as b
on     a~vbeln  = b~vbeln ) inner join likp as c
on     b~vbeln  = c~vbeln ) inner join lips as d
on     c~vbeln  = d~vbeln )
*---MOD START DMC 2007/12/20 ---------------------------*
*     WHERE     A~VBELV = LF_ALV_T-AUBEL
where     a~vbelv = lf_alv_t-vbeln
*---MOD END DMC 2007/12/20---------------------------*
and     b~wbsta = 'A'.

sort lt_likp by fkdat.
loop at lt_likp
into lf_likp.

l_lfimg = l_lfimg + lf_likp-lfimg.
lf_likp_t = lf_likp.

at end of fkdat.
clear: lf_alv_w.
lf_alv_w-kunnra = lf_alv_t-kunnra.            " 得意先コード
lf_alv_w-kuntx  = lf_alv_t-kuntx.             " 得意先名
*---MOD START DMC 2007/12/20 ---------------------------*
*          LF_ALV_W-AUBEL  = LF_ALV_T-AUBEL.             " 受注番号
lf_alv_w-aubel  = lf_alv_t-vbeln.             " 受注番号
*---MOD END DMC 2007/12/20---------------------------*
lf_alv_w-denku  = text-021.                   " 伝区
lf_alv_w-bstnk  = lf_alv_t-bstnk.             " 得意先発注番号
lf_alv_w-matnr  = lf_alv_t-matnr.             " 品目コード
*---MOD START DMC 2007/12/20 ---------------------------*
*          LF_ALV_W-ARKTX  = LF_ALV_T-ARKTX.             " 品名
lf_alv_w-arktx  = lf_alv_t-maktx.             " 品名
*---MOD END DMC 2007/12/20---------------------------*
lf_alv_w-vrkme  = lf_alv_t-vrkme.             " 数量単位
lf_alv_w-vkbur  = lf_alv_t-vkbur.             " 営業所
lf_alv_w-bezeia = lf_alv_t-bezeia.            " 営業所名
lf_alv_w-vkgrp  = lf_alv_t-vkgrp.             " 営業グループ
lf_alv_w-bezeib = lf_alv_t-bezeib.            " 営業グループ名
lf_alv_w-datfm  = lf_alv_t-datfm.             " Ｆｒｏｍ
lf_alv_w-datto  = lf_alv_t-datto.             " Ｔｏ
lf_alv_w-fkdat2 = lf_likp_t-fkdat.            " 売上予定日
lf_alv_w-lfimg   = l_lfimg.                   " 出荷数量
lf_alv_w-kursk   = l_kursk.                   " 換算レート
l_wavwr_w = l_wavwr_w * l_lfimg * l_kursk / l_kwmeng.
lf_alv_w-gyenb   = l_wavwr_w.                 " 原価金額円
append lf_alv_w to gt_write.
clear:l_lfimg.
endat.
endloop.
endif.

endloop.

endform.                    " FRM_LIKP_SET
*---APPEND END   D.YI 2007/11/13 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_VBUP_GET
*&---------------------------------------------------------------------*
*       出荷済未出庫対象データ取得処理
*----------------------------------------------------------------------*
form frm_vbup_get.

*2008/06/19 ADD START
data : l_vbelv type vbfa-vbelv.
*2008/06/19 ADD END

select a~vbeln a~posnr a~rfsta a~gbsta b~matnr
b~vrkme c~vkgrp c~vkbur c~bstnk
into corresponding fields of table gt_vbup
from ( ( vbup as a inner join vbap as b
on a~vbeln = b~vbeln
and a~posnr = b~posnr ) inner join vbak as c
on b~vbeln = c~vbeln )
*2008/06/19 MOD START
where a~lfsta <> g_lfsta.
*   WHERE A~LFSTA <> G_LFSTA
*     AND A~GBSTA <> G_GBSTA.
*2008/06/19 MOD END

*--- エラー処理
case sy-subrc.
when 0.
*2008/06/19 ADD START
*     受注に紐付く出荷のステータスをチェックする
loop at gt_vbup into gf_vbup.
select vbfa~vbelv
into l_vbelv
from vbfa
inner join vbup
on vbfa~vbeln    = vbup~vbeln
and vbfa~posnn    = vbup~posnr
up to 1 rows
where vbfa~vbelv    = gf_vbup-vbeln
and vbfa~posnv    = gf_vbup-posnr
and vbfa~vbtyp_n  = 'J'
and vbup~wbsta   <> g_wbsta.
endselect.

case sy-subrc.
when 0.
when 4.      " 対象データなし
*           出荷伝票の在庫移動ステータスが全てCのデータは削除
delete gt_vbup.
when others. " システムエラー
message a603(z1) with g_repid
'VBUP'
sy-subrc.
endcase.
endloop.
*     出荷のステータスチェック後の対象データが無い場合
if gt_vbup is initial.
g_flg = 'X'.
endif.
*2008/06/19 ADD END
when 4.         " 対象データなし
g_flg = 'X'.
*      MESSAGE S600(Z1) WITH '出荷済未出庫伝票'.
*      STOP.
when others.    " システムエラー
message a603(z1) with g_repid
'VBUP'
sy-subrc.
endcase.
endform.                    " FRM_VBUP_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBUP_SET
*&---------------------------------------------------------------------*
*       出荷済未出庫対象データ編集処理
*----------------------------------------------------------------------*
form frm_vbup_set.

loop at gt_vbup into gf_vbup.
*--- 支払人設定
perform frm_vbpa_get1 using   'RG'
'支払人'
gf_vbup-vbeln
changing gf_vbup-kunnra
gf_vbup-kuntx.
*--- 品目テキスト設定
perform frm_makt_get using gf_vbup-matnr
changing gf_vbup-maktx.
*--- 営業所名設定
perform frm_tvkbt_get using gf_vbup-vkbur
changing gf_vbup-bezeia.
*--- 営業グループ名設定
perform frm_tvgrt_get using gf_vbup-vkgrp
changing gf_vbup-bezeib.
*--- 選択処理年月日設定処理
gf_vbup-datfm = s_erdat-low.
gf_vbup-datto = s_erdat-high.

modify gt_vbup from gf_vbup.
endloop.
endform.                    " FRM_VBUP_SET
*&---------------------------------------------------------------------*
*&      Form  FRM_MAKT_GET
*&---------------------------------------------------------------------*
*       品目テキスト設定
*----------------------------------------------------------------------*
*      -->P_GF_VBUP_MATNR  品目コード
*      <--P_GF_VBUP_MAKTX  品目テキスト
*----------------------------------------------------------------------*
form frm_makt_get using    p_matnr
changing p_maktx.

select single maktx into p_maktx
from makt
where matnr = p_matnr and spras = cns_j.

endform.                    " FRM_MAKT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_TVGRT_GET
*&---------------------------------------------------------------------*
*       営業グループ名設定
*----------------------------------------------------------------------*
*      -->P_VKGRP  営業グループ
*      <--P_BEZEIB  営業グループ名
*----------------------------------------------------------------------*
form frm_tvgrt_get using    p_vkgrp
changing p_bezeib.

select single bezei into p_bezeib
from tvgrt
where spras = cns_j and vkgrp = p_vkgrp.

endform.                    " FRM_TVGRT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_TVKBT_GET
*&---------------------------------------------------------------------*
*       営業所名設定
*----------------------------------------------------------------------*
*      -->P_VKBUR   営業所
*      <--P_BEZEIA  営業所名
*----------------------------------------------------------------------*
form frm_tvkbt_get using    p_vkbur
changing p_bezeia.

select single bezei into p_bezeia
from tvkbt
where spras = cns_j and vkbur = p_vkbur.

endform.                    " FRM_TVKBT_GET
*&---------------------------------------------------------------------*
*&      Form  FRM_VBPA_GET1
*&---------------------------------------------------------------------*
*       販売伝票取引先取得処理1
*----------------------------------------------------------------------*
*      -->P_PAEVW  取引先機能
*      -->P_TEXT   エラー時出力用テーブル名
*      -->P_VBELN  販売伝票
*      <--P_KUNNRA 支払人
*      <--P_KUNTX  支払人名
*----------------------------------------------------------------------*
form frm_vbpa_get1 using    p_paevw
p_text
p_vbeln
changing p_kunnra
p_kuntx.
data: l_adrnr  like  vbpa-adrnr.

*--- 販売伝票取引情報取得
select single kunnr adrnr
into (p_kunnra,l_adrnr)
from vbpa
where vbeln = p_vbeln
and posnr = '000000'
and parvw = p_paevw.

*--- エラー処理
case sy-subrc.
when 0.
when 4.         " 対象データなし
message s600(z1) with p_text.
when others.    " システムエラー
message a603(z1) with g_repid
cns_vbpa
sy-subrc.
endcase.

*--- 支払人名設定
perform frm_addr_get using    l_adrnr
changing p_kuntx.

endform.                    " FRM_VBPA_GET1
