*&---------------------------------------------------------------------*
*&  REPORT ZEGMMR0020                                                  *
*&         帳簿棚卸ロット別在庫一覧                                    *
*&---------------------------------------------------------------------*
*&  機能     :既存帳簿棚卸一覧機能を参照し、
*&            ロット別の帳簿棚卸一覧を新規追加する。
*&  作成日   :2015/12/28
*&  作成者   :J.JIANG(ISID)
*&  変更履歴 :
*&---------------------------------------------------------------------*
REPORT  ZEGMMR0020 MESSAGE-ID  Z1
NO STANDARD PAGE HEADING.
*----------------------------------------------------------------------*
*  型定義
*----------------------------------------------------------------------*
* 受注在庫情報格納用
TYPES:
* 在庫情報格納用
BEGIN OF T_MARC,
MATNR TYPE MARC-MATNR,         "品目コード
WERKS TYPE MARC-WERKS,         "プラント
LGORT TYPE MARD-LGORT,         "保管場所
EKGRP TYPE MARC-EKGRP,         "購買グループ
TRAME TYPE MARC-TRAME,         "積送中在庫
XCHPF TYPE MARC-XCHPF,         "ロット管理所要量区分
LABST TYPE MARD-LABST,         "利用可能在庫数量
SPEME TYPE MARD-SPEME,         "保留在庫
LGPBE TYPE MARD-LGPBE,         "棚番
END OF T_MARC,

BEGIN OF T_MSKA,
MATNR TYPE MSKA-MATNR,         "品目コード
WERKS TYPE MSKA-WERKS,         "プラント
LGORT TYPE MSKA-LGORT,         "保管場所
CHARG TYPE MSKA-CHARG,         "ロット番号
SOBKZ TYPE MSKA-SOBKZ,         "特殊在庫区分
VBELN TYPE MSKA-VBELN,         "販売伝票
POSNR TYPE MSKA-POSNR,         "明細番号
KALAB TYPE MSKA-KALAB,         "利用可能評価在庫
KASPE TYPE MSKA-KASPE,         "保留在庫
END OF T_MSKA,

* 預託在庫格納用
BEGIN OF T_MSKU,
MATNR TYPE MSKU-MATNR,         "品目コード
WERKS TYPE MSKU-WERKS,         "プラント
CHARG TYPE MSKU-CHARG,         "ロット番号
SOBKZ TYPE MSKU-SOBKZ,         "特殊在庫区分
KUNNR TYPE MSKU-KUNNR,         "得意先
KULAB TYPE MSKU-KULAB,         "利用可能評価在庫
END OF T_MSKU,

* 支給在庫格納用
BEGIN OF T_MSLB,
MATNR TYPE MSLB-MATNR,         "品目コード
WERKS TYPE MSLB-WERKS,         "プラント
CHARG TYPE MSLB-CHARG,         "ロット番号
SOBKZ TYPE MSLB-SOBKZ,         "特殊在庫区分
LIFNR TYPE MSLB-LIFNR,         "仕入先
LBLAB TYPE MSLB-LBLAB,         "利用可能評価在庫
END OF T_MSLB,

* 受注伝票情報格納用
BEGIN OF T_VBAK,
VBELN TYPE VBAK-VBELN,         "販売伝票番号
BSTNK TYPE VBAK-BSTNK,         "得意先発注番号
KUNNR TYPE VBAK-KUNNR,         "受注先
END OF T_VBAK,

* 購買伝票情報格納用
BEGIN OF T_EKKO,
VBELV TYPE VBFA-VBELV,         "先行販売伝票
POSNV TYPE VBFA-POSNV,         "販売伝票前明細
VBELN TYPE VBFA-VBELN,         "後続販売伝票
POSNN TYPE VBFA-POSNN,         "販売伝票次明細
LIFNR TYPE EKKO-LIFNR,         "仕入先
END OF T_EKKO,

* 入庫日格納用
BEGIN OF T_EKBE,
EBELN TYPE EKBE-EBELN,         "購買伝票番号
EBELP TYPE EKBE-EBELP,         "購買伝票明細
ZEKKN TYPE EKBE-ZEKKN,         "連続番号
VGABE TYPE EKBE-VGABE,         "履歴取引タイプ
GJAHR TYPE EKBE-GJAHR,         "入出庫伝票年度
BELNR TYPE EKBE-BELNR,         "入出庫伝票番号
BUZEI TYPE EKBE-BUZEI,         "入出庫明細番号
BLDAT TYPE EKBE-BLDAT,         "伝票日付
END OF T_EKBE,

* 受注納期格納用
BEGIN OF T_VBEP,
VBELN TYPE VBEP-VBELN,         "販売伝票番号
POSNR TYPE VBEP-POSNR,         "販売明細番号
EDATU TYPE VBEP-EDATU,         "納入日程日付
END OF T_VBEP,

* 出済未出庫格納用(在庫データ)
BEGIN OF T_ZS0020,
MATNR    TYPE ZS0020-MATNR,    "品目コード
WERKS    TYPE ZS0020-WERKS,    "プラント
LFIMG    TYPE ZS0020-LFIMG,    "出荷数量実績
LFIMG_KB TYPE ZS0020-LFIMG_KB, "出荷数量実績(KB)
LFIMG_KE TYPE ZS0020-LFIMG_KE, "出荷数量実績(KE)
END OF T_ZS0020,

* ロット在庫
BEGIN OF T_MCHB,
MATNR TYPE MCHB-MATNR,        "品目コード
WERKS TYPE MCHB-WERKS,        "プラント
LGORT TYPE MCHB-LGORT,        "保管場所
CHARG TYPE MCHB-CHARG,        "ロット番号
CLABS TYPE MCHB-CLABS,        "利用可能評価在庫
CSPEM TYPE MCHB-CSPEM,        "保留在庫
END OF T_MCHB,

* 品目情報格納用
BEGIN OF T_MARA,
MATNR TYPE MAKT-MATNR,         "品目コード
SPRAS TYPE MAKT-SPRAS,         "言語キー
MAKTX TYPE MAKT-MAKTX,         "品目テキスト
MEINS TYPE MARA-MEINS,         "単位
WRKST TYPE MARA-WRKST,         "主構成物質
NORMT TYPE MARA-NORMT,         "標準テキスト
END OF T_MARA,

* 単価算出情報格納用
BEGIN OF T_MBEW,
MATNR TYPE MBEW-MATNR,         "品目コード
WERKS TYPE MBEW-BWKEY,         "評価レベル
LBKUM TYPE MBEW-LBKUM,         "評価在庫合計
SALK3 TYPE MBEW-SALK3,         "評価在庫合計額
VERPR TYPE MBEW-VERPR,         "移動平均原価
PEINH TYPE MBEW-PEINH,         "価格単位
END OF T_MBEW,

* 購買Grテキスト格納用
BEGIN OF T_T024,
EKGRP TYPE T024-EKGRP,         "購買グループ
EKNAM TYPE T024-EKNAM,         "購買グループテキスト
END OF T_T024,

* 通貨格納用
BEGIN OF T_T001K,
WERKS  TYPE T001K-BWKEY,      "プラント
WAERS  TYPE T001-WAERS,       "通貨コード
END OF T_T001K,

* 得意先名称
BEGIN OF T_KNA1,
KUNNR TYPE KNA1-KUNNR,        "得意先コード
NAME1 TYPE KNA1-NAME1,        "得意先名称
END OF T_KNA1,

* 仕入先名称
BEGIN OF T_LFA1,
LIFNR TYPE LFA1-KUNNR,        "仕入先コード
NAME1 TYPE LFA1-NAME1,        "仕入先名称
END OF T_LFA1,

* ロット情報
BEGIN OF T_MCHA,
MATNR TYPE MCHA-MATNR,        "品目コード
WERKS TYPE MCHA-WERKS,        "プラント
CHARG TYPE MCHA-CHARG,        "ロット番号
VFDAT TYPE MCHA-VFDAT,        "有効期限
LICHA TYPE MCHA-LICHA,        "仕入先ロット
LWEDT TYPE MCHA-LWEDT,        "前回入庫日付
HSDAT TYPE MCHA-HSDAT,        "製造日付
END OF T_MCHA.
*----------------------------------------------------------------------*
*  内部テーブル・構造定義
*----------------------------------------------------------------------*
*
DATA:
RT_WERKS  TYPE RANGE_T_WERKS,
IT_MARC   TYPE STANDARD TABLE OF T_MARC,        "在庫情報
IT_MSKA   TYPE STANDARD TABLE OF T_MSKA,        "受注在庫
IT_MSKU   TYPE STANDARD TABLE OF T_MSKU,        "預託在庫
IT_MSLB   TYPE STANDARD TABLE OF T_MSLB,        "支給在庫
IT_VBAK   TYPE STANDARD TABLE OF T_VBAK,        "受注伝票
IT_EKKO   TYPE STANDARD TABLE OF T_EKKO,        "購買伝票
IT_VBEP   TYPE STANDARD TABLE OF T_VBEP,        "受注納期
IT_EKBE   TYPE STANDARD TABLE OF T_EKBE,        "入庫日
IT_MCHB   TYPE STANDARD TABLE OF T_MCHB,        "ロット在庫
IT_ZS0020 TYPE STANDARD TABLE OF T_ZS0020,      "出済未出庫格納
IT_MARA   TYPE STANDARD TABLE OF T_MARA,        "品目
IT_T001K  TYPE STANDARD TABLE OF T_T001K,       "通貨格
IT_T024   TYPE STANDARD TABLE OF T_T024,        "購買Grテキスト
IT_MBEW   TYPE STANDARD TABLE OF T_MBEW,        "単価算出
IT_KNA1   TYPE STANDARD TABLE OF T_KNA1,        "得意先名称
IT_LFA1   TYPE STANDARD TABLE OF T_LFA1,        "得意先名称
IT_MCHA   TYPE STANDARD TABLE OF T_MCHA,        "得意先名称
IT_ZTEGMMT013 TYPE STANDARD TABLE OF ZTEGMMT013."帳簿棚卸ロット別在庫

*----------------------------------------------------------------------*
*  変数定義
*----------------------------------------------------------------------*
DATA:
WA_WERKS TYPE T001W-WERKS,                      "プラント
WA_MATNR TYPE MARC-MATNR,                       "品目コード
WA_EKGRP TYPE MARC-EKGRP,                       "購買グループ
WA_LGPBE TYPE MARD-LGPBE,                       "棚番
WA_LGORT TYPE T001L-LGORT.                      "保管場所

*----------------------------------------------------------------------*
*  定数定義
*----------------------------------------------------------------------*
CONSTANTS:
CNS_MONTH_01(2)   TYPE N VALUE '01',                   "一月
CNS_MONTH_12(2)   TYPE N VALUE '12',                   "十二月
CNS_VBTYP_V(1)    TYPE C VALUE 'V',                    "購買受注
CNS_BWART_101(3)  TYPE C VALUE '101',                  "購買受注入庫
CNS_ETENR_0001(4) TYPE N VALUE '0001',                 "納入日程行
CNS_SOBKZ_W(1)    TYPE C VALUE 'W',                    "預託品
CNS_SOBKZ_O(1)    TYPE C VALUE 'O',                    "支給品
CNS_OVERF_P13 TYPE LIFMG VALUE '9999999999.999',       "オーバーフロー
CNS_P_BUK     TYPE CHAR7 VALUE 'P_BUKRS',              "会社コード
CNS_S_LGT     TYPE CHAR7 VALUE 'S_LGORT',              "倉庫
CNS_P_MON     TYPE CHAR7 VALUE 'P_MONTH',              "月
CNS_MSGTY_E   TYPE SY-MSGTY         VALUE 'E',         "エラー
CNS_LGORT_TAL TYPE ZTEGMMT013-LGORT VALUE 'ZZZZZZZZZZ',"倉庫
CNS_WK_SPACE  TYPE AQADEF-WSID      VALUE 'G',         "作業領域 ID
CNS_US_GROUP  TYPE AQADEF-BGNAME    VALUE 'ZEGMM0001', "ユーザグループ
CNS_QUE_NAME  TYPE AQADEF-QUNAME    VALUE 'ZEGMMQR006',"クエリ名
CNS_SIGN_I    TYPE CHAR01           VALUE 'I',          "サイン
CNS_OPTI_EQ   TYPE CHAR2            VALUE 'EQ'.         "イコール
*----------------------------------------------------------------------*
*  選択画面定義
*----------------------------------------------------------------------*
*
PARAMETERS:
P_BUKRS TYPE T001-BUKRS MEMORY ID BUK OBLIGATORY,"会社
P_YEAR  TYPE ZTEGMMT013-ZYEAR  OBLIGATORY,       "年
P_MONTH TYPE ZTEGMMT013-ZMONTH OBLIGATORY.       "月

SELECT-OPTIONS:
S_WERKS FOR  WA_WERKS   MEMORY ID WRK OBLIGATORY,"プラント
S_MATNR FOR  WA_MATNR,                           "品目コード
S_EKGRP FOR  WA_EKGRP   MEMORY ID EKG,           "購買グループ
S_LGPBE FOR  WA_LGPBE,                           "棚番
S_LGORT FOR  WA_LGORT.                           "保管場所

*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
* 会社コード、プラントのチェック
PERFORM CHK_BUK_WRK.

* 保管場所と工場の依存チェック
PERFORM CHECK_LGORT_INPUT.

* 月のチェック
PERFORM CHK_MONTH_INPUT.

*----------------------------------------------------------------------*
*  START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.

* 初期化
PERFORM INIT_DATA.

* 主処理
PERFORM PROC_MAIN.

*&---------------------------------------------------------------------*
*&      Form  INIT_DATA
*&---------------------------------------------------------------------*
*       初期化
*----------------------------------------------------------------------*
FORM INIT_DATA .

CLEAR:
IT_MARC,
IT_MSKA,
IT_MSKU,
IT_MSLB,
IT_VBAK,
IT_EKKO,
IT_VBEP,
IT_EKBE,
IT_MCHB,
IT_ZS0020,
IT_MARA,
IT_T001K,
IT_T024,
IT_MBEW,
IT_KNA1,
IT_LFA1,
IT_MCHA,
IT_ZTEGMMT013.

ENDFORM.                    " INIT_DATA
*&---------------------------------------------------------------------*
*&      Form  PROC_MAIN
*&---------------------------------------------------------------------*
*       主処理
*----------------------------------------------------------------------*
FORM PROC_MAIN.

DATA:
LV_LINES TYPE I.

* キー項目の編集
PERFORM EDIT_KEY_FIELD.

IF IT_ZTEGMMT013[] IS INITIAL.
*   帳簿棚卸ロット別在庫一覧表に該当するデータがありません
MESSAGE S600 WITH TEXT-M02.
LEAVE LIST-PROCESSING.
ENDIF.

* 非キー項目と合計行の編集
PERFORM REEDIT_STOCK_DATA.

* テーブル更新
PERFORM UPDATE_ZTEGMMT013.

* クエリの呼出し
PERFORM SBUMIT_QUERY.

DESCRIBE TABLE IT_ZTEGMMT013 LINES LV_LINES.
* 結果出力
MESSAGE S618 WITH LV_LINES.
* MSG: X件登録しました

ENDFORM.                    " PROC_MAIN
*&---------------------------------------------------------------------*
*&      Form  CHK_BUK_WRK
*&---------------------------------------------------------------------*
*       会社コード、プラントなどのチェック
*----------------------------------------------------------------------*
FORM CHK_BUK_WRK .
DATA:
LW_WAERS     TYPE WAERS,
LW_RNG_WERKS TYPE RANGE_T_WERKS.

CLEAR: RT_WERKS.

* 会社コードの存在チェック
SELECT SINGLE WAERS
INTO LW_WAERS
FROM T001
WHERE BUKRS = P_BUKRS.

IF SY-SUBRC <> 0.
SET CURSOR FIELD CNS_P_BUK.
MESSAGE E016(Z3) WITH P_BUKRS.
ENDIF.

* 会社コードの権限チェック
AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
ID 'BUKRS' FIELD P_BUKRS
ID 'ACTVT' FIELD '03'.

IF SY-SUBRC <> 0.
SET CURSOR FIELD CNS_P_BUK.
MESSAGE E015(Z3) WITH P_BUKRS.
ENDIF.

CLEAR LW_RNG_WERKS.
LW_RNG_WERKS = S_WERKS[].
* 会社コードとプラントの関連チェック
CALL FUNCTION 'ZEG_ZZ_WERKS_CHK'
EXPORTING
IMPBUKRS           = P_BUKRS
IMPRNGWERKS        = LW_RNG_WERKS
IMPORTING
EXPWERKS           = RT_WERKS
EXCEPTIONS
WERKS_NOT_EXIST    = 1
WERKS_NO_AUTHORITY = 2
WERKS_BUKRS_ERROR  = 3
OTHERS             = 4.

IF SY-SUBRC <> 0.
SET CURSOR FIELD CNS_P_BUK.
MESSAGE ID SY-MSGID TYPE CNS_MSGTY_E NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                    " CHK_BUK_WRK
**&---------------------------------------------------------------------
*
*&      Form  CHECK_LGORT_INPUT
*&---------------------------------------------------------------------
*       保管場所と工場の依存チェック
*----------------------------------------------------------------------
FORM CHECK_LGORT_INPUT .

DATA: LV_LGORT TYPE LGORT_D.

SELECT LGORT UP TO 1 ROWS
INTO LV_LGORT
FROM T001L
WHERE WERKS IN S_WERKS
AND LGORT IN S_LGORT.
ENDSELECT.

IF SY-SUBRC <> 0.
SET CURSOR FIELD CNS_S_LGT.
MESSAGE E009 WITH TEXT-M04.
LEAVE LIST-PROCESSING.
ENDIF.

ENDFORM.                    " CHECK_LGORT_INPUT
*&---------------------------------------------------------------------*
*&      Form  CHK_MONTH_INPUT
*&---------------------------------------------------------------------*
*       月のチェック
*----------------------------------------------------------------------*
FORM CHK_MONTH_INPUT.

IF P_MONTH NOT BETWEEN CNS_MONTH_01 AND CNS_MONTH_12.
*   月 が正しくありません
SET CURSOR FIELD CNS_P_MON.
MESSAGE E009 WITH TEXT-M01.
ENDIF.

ENDFORM.                    " CHK_MONTH_INPUT
*&---------------------------------------------------------------------*
*&      Form  GET_MARC
*&---------------------------------------------------------------------*
*       品目の保管場所、プラント情報
*----------------------------------------------------------------------*
FORM GET_MARC.

SELECT MARC~MATNR         "品目コード
MARC~WERKS         "プラント
MARD~LGORT         "保管場所
MARC~EKGRP         "購買グループ
MARC~TRAME         "積送中在庫
MARC~XCHPF         "ロット管理所要量区分
MARD~LABST         "利用可能在庫数量
MARD~SPEME         "保留在庫
MARD~LGPBE         "棚番
INTO TABLE IT_MARC
FROM MARC
INNER JOIN MARD
ON MARC~MATNR = MARD~MATNR
AND MARC~WERKS = MARD~WERKS
WHERE MARC~MATNR IN S_MATNR  "品目コード
AND MARC~WERKS IN RT_WERKS "プラント
AND MARD~LGORT IN S_LGORT  "保管場所
AND MARC~EKGRP IN S_EKGRP  "購買グループ
AND MARD~LGPBE IN S_LGPBE. "棚番

IF SY-SUBRC <> 0.
RETURN.
ENDIF.

SORT IT_MARC BY MATNR ASCENDING
WERKS ASCENDING
LGORT ASCENDING.

ENDFORM.                    " GET_MARC
*&---------------------------------------------------------------------*
*&      Form  EDIT_KEY_FIELD
*&---------------------------------------------------------------------*
*       キー項目の編集
*----------------------------------------------------------------------*
FORM EDIT_KEY_FIELD.

* 品目の保管場所、プラント情報
PERFORM GET_MARC.

* 個別購買データ
PERFORM PROCESS_KOBETSU.

* 在庫データ
PERFORM PROCESS_ZAIKO.

* 出荷済未出庫データ
PERFORM PROCESS_SYUKKAZUMI.

ENDFORM.                    " EDIT_KEY_FIELD
*&---------------------------------------------------------------------*
*&      Form  PROCESS_KOBETSU
*&---------------------------------------------------------------------*
*       個別購買データ
*----------------------------------------------------------------------*
FORM PROCESS_KOBETSU.

* データ取得
PERFORM GET_DATA_KOBETSU.

* 編集
PERFORM EDIT_DATA_KOBETSU.

ENDFORM.                    " PROCESS_KOBETSU
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_KOBETSU
*&---------------------------------------------------------------------*
*       個別購買データ取得
*----------------------------------------------------------------------*
FORM GET_DATA_KOBETSU.

* 受注在庫情報
PERFORM GET_MSKA.

IF IT_MSKA[] IS INITIAL.
RETURN.
ENDIF.

* 受注伝票情報
PERFORM GET_VBAK.

* 購買伝票情報
PERFORM GET_EKKO.

* 入庫日
PERFORM GET_EKBE.

* 受注納期
PERFORM GET_VBEP.

ENDFORM.                    " GET_DATA_KOBETSU
*&---------------------------------------------------------------------*
*&      Form  GET_MSKA
*&---------------------------------------------------------------------*
*       受注在庫情報
*----------------------------------------------------------------------*
FORM GET_MSKA.

SELECT MATNR         "品目コード
WERKS         "プラント
LGORT         "保管場所
CHARG         "ロット番号
SOBKZ         "特殊在庫区分
VBELN         "販売伝票
POSNR         "明細番号
KALAB         "利用可能評価在庫
KASPE         "保留在庫
INTO TABLE IT_MSKA
FROM MSKA
WHERE MATNR IN S_MATNR
AND WERKS IN RT_WERKS
AND LGORT IN S_LGORT
AND ( KALAB <> 0
OR   KASPE <> 0 ).

IF SY-SUBRC = 0.
SORT IT_MSKA BY MATNR ASCENDING        "品目コード
WERKS ASCENDING        "プラント
LGORT ASCENDING        "保管場所
CHARG ASCENDING        "ロット番号
VBELN ASCENDING        "販売伝票
POSNR ASCENDING.       "明細番号
ENDIF.

ENDFORM.                    " GET_MSKA
*&---------------------------------------------------------------------*
*&      Form  GET_VBAK
*&---------------------------------------------------------------------*
*       受注伝票情報
*----------------------------------------------------------------------*
FORM GET_VBAK.

DATA:
LT_MSKA TYPE STANDARD TABLE OF T_MSKA.

APPEND LINES OF IT_MSKA TO LT_MSKA.
SORT LT_MSKA BY VBELN.
DELETE ADJACENT DUPLICATES FROM LT_MSKA COMPARING VBELN.

SELECT VBELN         "販売伝票番号
BSTNK         "得意先発注番号
KUNNR         "受注先
INTO TABLE IT_VBAK
FROM VBAK
FOR ALL ENTRIES IN LT_MSKA
WHERE VBELN = LT_MSKA-VBELN.

IF SY-SUBRC = 0.
SORT IT_VBAK BY VBELN ASCENDING.
ENDIF.

ENDFORM.                    " GET_VBAK
*&---------------------------------------------------------------------*
*&      Form  GET_EKKO
*&---------------------------------------------------------------------*
*       購買伝票情報
*----------------------------------------------------------------------*
FORM GET_EKKO.

DATA:
LT_MSKA TYPE STANDARD TABLE OF T_MSKA.

APPEND LINES OF IT_MSKA TO LT_MSKA.
SORT LT_MSKA BY VBELN ASCENDING
POSNR ASCENDING.

DELETE ADJACENT DUPLICATES FROM LT_MSKA
COMPARING VBELN
POSNR.

SELECT VBFA~VBELV         "先行販売伝票
VBFA~POSNV         "販売伝票前明細
VBFA~VBELN         "後続販売伝票
VBFA~POSNN         "販売伝票次明細
EKKO~LIFNR         "仕入先
INTO TABLE IT_EKKO
FROM VBFA
INNER JOIN EKKO
ON VBFA~VBELN = EKKO~EBELN
FOR ALL ENTRIES IN LT_MSKA
WHERE VBFA~VBELV   = LT_MSKA-VBELN
AND VBFA~POSNV   = LT_MSKA-POSNR
AND VBFA~VBTYP_N = CNS_VBTYP_V
AND EKKO~BUKRS   = P_BUKRS.

IF SY-SUBRC = 0.
SORT IT_EKKO BY VBELV ASCENDING
POSNV ASCENDING.
ENDIF.

ENDFORM.                    " GET_EKKO
*&---------------------------------------------------------------------*
*&      Form  GET_EKBE
*&---------------------------------------------------------------------*
*       入庫日
*----------------------------------------------------------------------*
FORM GET_EKBE.

IF IT_EKKO[] IS INITIAL.
RETURN.
ENDIF.

SELECT EBELN              "購買伝票番号
EBELP              "購買伝票明細番号
ZEKKN              "連続番号
VGABE              "取引タイプ
GJAHR              "入出庫伝票年度
BELNR              "入出庫伝票番号
BUZEI              "入出庫明細番号
BLDAT              "伝票日付
INTO TABLE IT_EKBE
FROM EKBE
FOR ALL ENTRIES IN IT_EKKO
WHERE EBELN = IT_EKKO-VBELN     "購買伝票番号
AND BWART = CNS_BWART_101.    "移動タイプ

IF SY-SUBRC = 0.
SORT IT_EKBE BY EBELN ASCENDING.
ENDIF.

ENDFORM.                    " GET_EKBE
*&---------------------------------------------------------------------*
*&      Form  GET_VBEP
*&---------------------------------------------------------------------*
*       受注納期
*----------------------------------------------------------------------*
FORM GET_VBEP.
DATA:
LT_MSKA TYPE STANDARD TABLE OF T_MSKA.

APPEND LINES OF IT_MSKA TO LT_MSKA.
SORT LT_MSKA BY VBELN ASCENDING
POSNR ASCENDING.

DELETE ADJACENT DUPLICATES FROM LT_MSKA
COMPARING VBELN
POSNR.

SELECT VBELN                    "販売伝票番号
POSNR                    "販売明細番号
EDATU                    "納入日程日付
INTO TABLE IT_VBEP
FROM VBEP
FOR ALL ENTRIES IN LT_MSKA
WHERE VBELN = LT_MSKA-VBELN    "販売伝票番号
AND POSNR = LT_MSKA-POSNR    "販売明細番号
AND ETENR = CNS_ETENR_0001.  "納入日程行

IF SY-SUBRC = 0.
SORT IT_VBEP BY VBELN ASCENDING
POSNR ASCENDING.
ENDIF.

ENDFORM.                    " GET_VBEP
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA_KOBETSU
*&---------------------------------------------------------------------*
*       個別購買データ編集
*----------------------------------------------------------------------*
FORM EDIT_DATA_KOBETSU.

DATA:
LW_MARD   TYPE T_MARC,            "在庫情報(棚番用)
LW_MARC   TYPE T_MARC,            "在庫情報(購買グループ)
LW_MSKALP TYPE T_MSKA,
LW_MSKA   TYPE T_MSKA,
LW_VBAK   TYPE T_VBAK,
LW_EKKO   TYPE T_EKKO,
LW_EKBE   TYPE T_EKBE,
LW_VBEP   TYPE T_VBEP,
LW_ZTEGMMT013 TYPE ZTEGMMT013.

LOOP AT IT_MSKA INTO LW_MSKALP.
CLEAR LW_MSKA.
LW_MSKA  = LW_MSKALP.

*   個別購買在庫
TRY.
LW_ZTEGMMT013-SPLAB = LW_ZTEGMMT013-SPLAB + LW_MSKA-KALAB.
CATCH CX_SY_ARITHMETIC_OVERFLOW.
LW_ZTEGMMT013-SPLAB = CNS_OVERF_P13.
ENDTRY.

*   保留在庫(日本仕入積送)
TRY.
LW_ZTEGMMT013-SPEME = LW_ZTEGMMT013-SPEME + LW_MSKA-KASPE.
CATCH CX_SY_ARITHMETIC_OVERFLOW.
LW_ZTEGMMT013-SPEME = CNS_OVERF_P13.
ENDTRY.

AT NEW LGORT.
CLEAR LW_MARD.
*     棚番
READ TABLE IT_MARC INTO LW_MARD
WITH KEY MATNR = LW_MSKA-MATNR
WERKS = LW_MSKA-WERKS
LGORT = LW_MSKA-LGORT
BINARY SEARCH.
ENDAT.
AT NEW WERKS.
CLEAR LW_MARC.
*     購買グループ
READ TABLE IT_MARC INTO LW_MARC
WITH KEY MATNR = LW_MSKA-MATNR
WERKS = LW_MSKA-WERKS
BINARY SEARCH.
ENDAT.

AT END OF POSNR.
*     購買伝票情報
READ TABLE IT_EKKO  INTO LW_EKKO
WITH KEY VBELV = LW_MSKA-VBELN
POSNV = LW_MSKA-POSNR
BINARY SEARCH.

*     棚番が選択画面パラメータに存在しない場合、処理対象外とする
IF ( S_LGPBE IS INITIAL
OR    LW_MARD-LGPBE IN S_LGPBE )
AND ( S_EKGRP IS INITIAL
OR    LW_MARC-EKGRP IN S_EKGRP ).

*       受注伝票情報検索
READ TABLE IT_VBAK  INTO LW_VBAK
WITH KEY VBELN = LW_MSKA-VBELN
BINARY SEARCH.
*       入庫日
READ TABLE IT_EKBE INTO LW_EKBE
WITH KEY EBELN = LW_EKKO-VBELN
BINARY SEARCH.
*       受注納期
READ TABLE IT_VBEP  INTO LW_VBEP
WITH KEY VBELN = LW_MSKA-VBELN
POSNR = LW_MSKA-POSNR
BINARY SEARCH.

LW_ZTEGMMT013-WERKS = LW_MSKA-WERKS.   "プラント
LW_ZTEGMMT013-LGORT = LW_MSKA-LGORT.   "倉庫
LW_ZTEGMMT013-MATNR = LW_MSKA-MATNR.   "品目コード
LW_ZTEGMMT013-SOBKZ = LW_MSKA-SOBKZ.   "特殊在庫区分
LW_ZTEGMMT013-VBELN = LW_MSKA-VBELN.   "受注番号
LW_ZTEGMMT013-POSNR = LW_MSKA-POSNR.   "明細番号
LW_ZTEGMMT013-LGPBE = LW_MARD-LGPBE.   "棚番
LW_ZTEGMMT013-EKGRP = LW_MARC-EKGRP.   "購買グループ
LW_ZTEGMMT013-KUNNR = LW_VBAK-KUNNR.   "得意先
LW_ZTEGMMT013-BSTNK = LW_VBAK-BSTNK.   "得意先発注番号
LW_ZTEGMMT013-LIFNR = LW_EKKO-LIFNR.   "仕入先
LW_ZTEGMMT013-BLDAT = LW_EKBE-BLDAT.   "入庫日
LW_ZTEGMMT013-EDATU = LW_VBEP-EDATU.   "受注納期
LW_ZTEGMMT013-CHARG = LW_MSKA-CHARG.   "ロット番号

APPEND LW_ZTEGMMT013 TO IT_ZTEGMMT013.
ENDIF.

CLEAR:
LW_VBAK,
LW_EKKO,
LW_EKBE,
LW_VBEP,
LW_ZTEGMMT013.
ENDAT.
ENDLOOP.

ENDFORM.                    " EDIT_DATA_KOBETSU
*&---------------------------------------------------------------------*
*&      Form  PROCESS_ZAIKO
*&---------------------------------------------------------------------*
*       在庫データ
*----------------------------------------------------------------------*
FORM PROCESS_ZAIKO.

IF IT_MARC IS INITIAL.
RETURN.
ENDIF.

* データ取得
PERFORM GET_DATA_ZAIKO.

* 編集
PERFORM EDIT_DATA_ZAIKO.

ENDFORM.                    " PROCESS_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_ZAIKO
*&---------------------------------------------------------------------*
*       在庫データ取得
*----------------------------------------------------------------------*
FORM GET_DATA_ZAIKO.

* 預託在庫
PERFORM GET_MSKU.

* 支給在庫
PERFORM GET_MSLB.

* ロット在庫情報(通常在庫用)
PERFORM GET_MCHB.

ENDFORM.                    " GET_DATA_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  GET_MSKU
*&---------------------------------------------------------------------*
*       預託在庫
*----------------------------------------------------------------------*
FORM GET_MSKU.

DATA:
LT_MARC TYPE STANDARD TABLE OF T_MARC.

APPEND LINES OF IT_MARC TO LT_MARC.
SORT LT_MARC BY MATNR ASCENDING
WERKS ASCENDING.
DELETE ADJACENT DUPLICATES FROM LT_MARC
COMPARING MATNR
WERKS.

SELECT MATNR                    "品目コード
WERKS                    "プラント
CHARG                    "ロット番号
SOBKZ                    "特殊在庫区分
KUNNR                    "得意先
KULAB                    "利用可能評価在庫
INTO TABLE IT_MSKU
FROM MSKU
FOR ALL ENTRIES IN LT_MARC
WHERE MATNR =  LT_MARC-MATNR   "品目コード
AND WERKS =  LT_MARC-WERKS   "プラント
AND SOBKZ =  CNS_SOBKZ_W     "特殊在庫（預託品）
AND KULAB <> 0.

SORT IT_MSKU BY MATNR ASCENDING
WERKS ASCENDING
CHARG ASCENDING
KUNNR ASCENDING.

ENDFORM.                    " GET_MSKU
*&---------------------------------------------------------------------*
*&      Form  GET_MSLB
*&---------------------------------------------------------------------*
*       支給在庫
*----------------------------------------------------------------------*
FORM GET_MSLB.

DATA:
LT_MARC TYPE STANDARD TABLE OF T_MARC.

APPEND LINES OF IT_MARC TO LT_MARC.
SORT LT_MARC BY MATNR ASCENDING
WERKS ASCENDING.
DELETE ADJACENT DUPLICATES FROM LT_MARC
COMPARING MATNR
WERKS.

SELECT MATNR          "品目コード
WERKS          "プラント
CHARG          "ロット番号
SOBKZ          "特殊在庫区分
LIFNR          "仕入先
LBLAB          "利用可能評価在庫
INTO TABLE IT_MSLB
FROM MSLB
FOR ALL ENTRIES IN LT_MARC
WHERE MATNR =  LT_MARC-MATNR
AND WERKS =  LT_MARC-WERKS
AND SOBKZ =  CNS_SOBKZ_O
AND LBLAB <> 0.

SORT IT_MSLB BY MATNR ASCENDING
WERKS ASCENDING
CHARG ASCENDING
LIFNR ASCENDING.

ENDFORM.                    " GET_MSLB
*&---------------------------------------------------------------------*
*&      Form  GET_MCHB
*&---------------------------------------------------------------------*
*       ロット在庫情報(通常在庫用)
*----------------------------------------------------------------------*
FORM GET_MCHB.

DATA:
LT_MARC TYPE STANDARD TABLE OF T_MARC.

APPEND LINES OF IT_MARC TO LT_MARC.
DELETE ADJACENT DUPLICATES FROM LT_MARC
COMPARING MATNR
WERKS
LGORT.

SELECT MATNR            "品目コード
WERKS            "プラント
LGORT            "保管場所
CHARG            "ロット番号
CLABS            "利用可能評価在庫
CSPEM            "保留在庫
INTO TABLE IT_MCHB
FROM MCHB
FOR ALL ENTRIES IN LT_MARC
WHERE MATNR = LT_MARC-MATNR
AND WERKS = LT_MARC-WERKS
AND LGORT = LT_MARC-LGORT
AND LVORM = SPACE.

SORT IT_MCHB BY MATNR ASCENDING
WERKS ASCENDING
LGORT ASCENDING
CHARG ASCENDING.

ENDFORM.                    " GET_MCHB
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA_ZAIKO
*&---------------------------------------------------------------------*
*       在庫データ編集
*----------------------------------------------------------------------*
FORM EDIT_DATA_ZAIKO.

* 通常在庫
PERFORM EDIT_TUUJYOU_ZAIKO.

* 預託在庫
PERFORM EDIT_YOKAKU_ZAIKO.

* 支給在庫
PERFORM EDIT_SIKYUU_ZAIKO.

ENDFORM.                    " EDIT_DATA_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  EDIT_TUUJYOU_ZAIKO
*&---------------------------------------------------------------------*
*       通常在庫
*----------------------------------------------------------------------*
FORM EDIT_TUUJYOU_ZAIKO.

DATA:
LW_MARC   TYPE T_MARC,
LW_MCHB   TYPE T_MCHB,
LW_ZTEGMMT013 TYPE ZTEGMMT013.

LOOP AT IT_MARC INTO LW_MARC.
CLEAR LW_ZTEGMMT013.

LW_ZTEGMMT013-WERKS   = LW_MARC-WERKS.     "プラント
LW_ZTEGMMT013-LGORT   = LW_MARC-LGORT.     "倉庫
LW_ZTEGMMT013-MATNR   = LW_MARC-MATNR.     "品目コード
LW_ZTEGMMT013-LGPBE   = LW_MARC-LGPBE.     "棚番
LW_ZTEGMMT013-EKGRP   = LW_MARC-EKGRP.     "購買グループ

IF LW_MARC-XCHPF IS INITIAL.
*     在庫数量が0以外の場合、処理対象とする
IF LW_MARC-LABST <> 0
OR LW_MARC-SPEME <> 0.
LW_ZTEGMMT013-ODLAB = LW_MARC-LABST.
LW_ZTEGMMT013-SPEME = LW_MARC-SPEME.

APPEND LW_ZTEGMMT013 TO IT_ZTEGMMT013.
ENDIF.

ELSE.
*     ロット管理品
LOOP AT IT_MCHB INTO LW_MCHB
WHERE MATNR = LW_MARC-MATNR
AND WERKS = LW_MARC-WERKS
AND LGORT = LW_MARC-LGORT.
*    　 在庫数量が0以外の場合、処理対象とする
IF LW_MCHB-CLABS <> 0
OR LW_MCHB-CSPEM <> 0.

CLEAR:
LW_ZTEGMMT013-CHARG,
LW_ZTEGMMT013-ODLAB,
LW_ZTEGMMT013-SPLAB.

LW_ZTEGMMT013-CHARG = LW_MCHB-CHARG.   "ロット番号
LW_ZTEGMMT013-ODLAB = LW_MCHB-CLABS.   "通常在庫(在庫品)
LW_ZTEGMMT013-SPLAB = LW_MCHB-CSPEM.   "保留在庫(日本仕入積送)

APPEND LW_ZTEGMMT013 TO IT_ZTEGMMT013.
ENDIF.
ENDLOOP.
ENDIF.
ENDLOOP.

ENDFORM.                    " EDIT_TUUJYOU_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  EDIT_YOKAKU_ZAIKO
*&---------------------------------------------------------------------*
*       預託在庫
*----------------------------------------------------------------------*
FORM EDIT_YOKAKU_ZAIKO .

DATA:
LW_MSKU   TYPE T_MSKU,
LW_MSKULP TYPE T_MSKU,
LW_MARC   TYPE T_MARC,
LW_ZTEGMMT013 TYPE ZTEGMMT013.

LOOP AT IT_MSKU INTO LW_MSKULP.
LW_MSKU = LW_MSKULP.

*   預託在庫数量の集計
TRY .
LW_ZTEGMMT013-KULAB = LW_ZTEGMMT013-KULAB + LW_MSKU-KULAB.
CATCH CX_SY_ARITHMETIC_OVERFLOW.
LW_ZTEGMMT013-KULAB = CNS_OVERF_P13.
ENDTRY.

AT NEW WERKS.
CLEAR LW_MARC.
READ TABLE IT_MARC INTO LW_MARC
WITH KEY MATNR =  LW_MSKU-MATNR
WERKS =  LW_MSKU-WERKS
BINARY SEARCH.
ENDAT.

AT NEW KUNNR.
LW_ZTEGMMT013-WERKS = LW_MSKU-WERKS.       "プラント
LW_ZTEGMMT013-LGORT = LW_MSKU-KUNNR.       "倉庫
LW_ZTEGMMT013-MATNR = LW_MSKU-MATNR.       "品目コード
LW_ZTEGMMT013-SOBKZ = LW_MSKU-SOBKZ.        "特殊在庫区分(預託)
LW_ZTEGMMT013-EKGRP = LW_MARC-EKGRP.       "購買グループ
LW_ZTEGMMT013-KUNNR = LW_MSKU-KUNNR.       "得意先
LW_ZTEGMMT013-CHARG = LW_MSKU-CHARG.       "ロット番号

APPEND LW_ZTEGMMT013 TO IT_ZTEGMMT013.
CLEAR LW_ZTEGMMT013.
ENDAT.
ENDLOOP.

ENDFORM.                    " EDIT_YOKAKU_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  EDIT_SIKYUU_ZAIKO
*&---------------------------------------------------------------------*
*       支給在庫
*----------------------------------------------------------------------*
FORM EDIT_SIKYUU_ZAIKO .

DATA:
LW_MSLB   TYPE T_MSLB,
LW_MSLBLP TYPE T_MSLB,
LW_MARC   TYPE T_MARC,
LW_ZTEGMMT013 TYPE ZTEGMMT013.

LOOP AT IT_MSLB INTO LW_MSLBLP.
LW_MSLB = LW_MSLBLP.

*   預託在庫数量の集計
TRY .
LW_ZTEGMMT013-LBLAB = LW_ZTEGMMT013-LBLAB + LW_MSLB-LBLAB.
CATCH CX_SY_ARITHMETIC_OVERFLOW.
LW_ZTEGMMT013-LBLAB = CNS_OVERF_P13.
ENDTRY.

AT NEW WERKS.
CLEAR LW_MARC.
READ TABLE IT_MARC INTO LW_MARC
WITH KEY MATNR =  LW_MSLB-MATNR
WERKS =  LW_MSLB-WERKS
BINARY SEARCH.
ENDAT.

AT NEW LIFNR.
IF LW_ZTEGMMT013-LBLAB <> 0.
LW_ZTEGMMT013-WERKS = LW_MSLB-WERKS.       "プラント
LW_ZTEGMMT013-LGORT = LW_MSLB-LIFNR.       "倉庫
LW_ZTEGMMT013-MATNR = LW_MSLB-MATNR.       "品目コード
LW_ZTEGMMT013-SOBKZ = LW_MSLB-SOBKZ.        "特殊在庫区分(支給)
LW_ZTEGMMT013-EKGRP = LW_MARC-EKGRP.       "購買グループ
LW_ZTEGMMT013-LIFNR = LW_MSLB-LIFNR.       "仕入先
LW_ZTEGMMT013-CHARG = LW_MSLB-CHARG.       "ロット番号

APPEND LW_ZTEGMMT013 TO IT_ZTEGMMT013.
ENDIF.

CLEAR LW_ZTEGMMT013.
ENDAT.
ENDLOOP.

ENDFORM.                    " EDIT_SIKYUU_ZAIKO
*&---------------------------------------------------------------------*
*&      Form  PROCESS_SYUKKAZUMI
*&---------------------------------------------------------------------*
*       出荷済未出庫データ
*----------------------------------------------------------------------*
FORM PROCESS_SYUKKAZUMI.

* データ取得
DATA:
LT_MARC       TYPE STANDARD TABLE OF T_MARC,
LW_ZS0020     TYPE T_ZS0020,
LW_ZTEGMMT013 TYPE ZTEGMMT013.

IF IT_MARC IS INITIAL.
RETURN.
ENDIF.

APPEND LINES OF IT_MARC TO LT_MARC.
SORT LT_MARC BY MATNR ASCENDING
WERKS ASCENDING.
DELETE ADJACENT DUPLICATES FROM LT_MARC
COMPARING MATNR
WERKS.

SELECT MATNR        "品目コード
WERKS        "プラント
LFIMG        "出荷数量実績
LFIMG_KB     "出荷数量実績(KB)
LFIMG_KE     "出荷数量実績(KE)
INTO TABLE IT_ZS0020
FROM ZS0020
FOR ALL ENTRIES IN LT_MARC
WHERE MATNR = LT_MARC-MATNR
AND WERKS = LT_MARC-WERKS.

SORT IT_ZS0020 BY MATNR ASCENDING
WERKS ASCENDING.

* 編集
LOOP AT IT_ZS0020 INTO LW_ZS0020.

*   出荷済み未出庫項目のセット
PERFORM SET_SYUKKAZUMI_DATA
USING
LW_ZS0020
CHANGING
LW_ZTEGMMT013.

IF LW_ZTEGMMT013 IS INITIAL.
CONTINUE.
ENDIF.

APPEND LW_ZTEGMMT013 TO IT_ZTEGMMT013.
ENDLOOP.

ENDFORM.                    " PROCESS_SYUKKAZUMI
*&---------------------------------------------------------------------*
*&      Form  SET_SYUKKAZUMI_DATA
*&---------------------------------------------------------------------*
*       出荷済み未出庫項目のセット
*----------------------------------------------------------------------*
*      -->AI_ZS0020            出荷済み未出庫数量管理テーブル
*      <--AO_SYUKKAZUMI        出荷済み未出庫データ
*----------------------------------------------------------------------*
FORM SET_SYUKKAZUMI_DATA
USING
AI_ZS0020     TYPE T_ZS0020
CHANGING
AO_SYUKKAZUMI TYPE ZTEGMMT013.

DATA:
LW_MARC TYPE T_MARC.

READ TABLE IT_MARC INTO LW_MARC
WITH KEY MATNR = AI_ZS0020-MATNR
WERKS = AI_ZS0020-WERKS
BINARY SEARCH.

IF  AI_ZS0020-LFIMG    = 0
AND AI_ZS0020-LFIMG_KB = 0
AND AI_ZS0020-LFIMG_KE = 0
AND LW_MARC-TRAME      = 0.
RETURN.
ENDIF.

* 在庫数量が0以外の場合、処理対象とする
AO_SYUKKAZUMI-WERKS    = AI_ZS0020-WERKS.    "プラント
AO_SYUKKAZUMI-MATNR    = AI_ZS0020-MATNR.    "品目コード
AO_SYUKKAZUMI-EKGRP    = LW_MARC-EKGRP.      "購買グループ
AO_SYUKKAZUMI-LFIMG    = AI_ZS0020-LFIMG.    "出荷数量実績
AO_SYUKKAZUMI-LFIMG_KB = AI_ZS0020-LFIMG_KB. "出荷数量実績(KB)
AO_SYUKKAZUMI-LFIMG_KE = AI_ZS0020-LFIMG_KE. "出荷数量実績(KE)
AO_SYUKKAZUMI-TRAME    = LW_MARC-TRAME.      "積送中在庫

ENDFORM.                    " SET_SYUKKAZUMI_DATA
*&---------------------------------------------------------------------*
*&      Form  REEDIT_STOCK_DATA
*&---------------------------------------------------------------------*
*       非キー項目と合計行の編集
*----------------------------------------------------------------------*
FORM REEDIT_STOCK_DATA.

* データ取得
PERFORM GET_DATA_REEDIT.

* 再編集
PERFORM EDIT_DATA_REEDIT.

ENDFORM.                    " REEDIT_STOCK_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_REEDIT
*&---------------------------------------------------------------------*
*       再編集データ取得
*----------------------------------------------------------------------*
FORM GET_DATA_REEDIT.

* 品目情報
PERFORM GET_MARA.

* 通貨コード
PERFORM GET_T001K.

* 購買グループ名
PERFORM GET_T024.

* 単価算出情報
PERFORM GET_MBEW.

* 仕入先名称
PERFORM GET_LFA1.

* 得意先名称
PERFORM GET_KNA1.

* ロッド情報
PERFORM GET_MCHA.

ENDFORM.                    " GET_DATA_REEDIT
*&---------------------------------------------------------------------*
*&      Form  GET_MARA
*&---------------------------------------------------------------------*
*       品目情報
*----------------------------------------------------------------------*
FORM GET_MARA.

DATA LT_ZTEGMMT013 TYPE STANDARD TABLE OF ZTEGMMT013.

APPEND LINES OF IT_ZTEGMMT013 TO LT_ZTEGMMT013.
SORT LT_ZTEGMMT013 BY MATNR ASCENDING.
DELETE ADJACENT DUPLICATES FROM LT_ZTEGMMT013
COMPARING MATNR.

SELECT MARA~MATNR         "品目コード
MAKT~SPRAS         "言語キー
MAKT~MAKTX         "品目テキスト
MARA~MEINS         "商用数量単位
MARA~WRKST         "主構成物質
MARA~NORMT         "標準テキスト
INTO TABLE IT_MARA
FROM MARA
INNER JOIN MAKT
ON MARA~MATNR = MAKT~MATNR
FOR ALL ENTRIES IN LT_ZTEGMMT013
WHERE MARA~MATNR  = LT_ZTEGMMT013-MATNR.

SORT IT_MARA BY MATNR ASCENDING
SPRAS ASCENDING.

ENDFORM.                    " GET_MARA
*&---------------------------------------------------------------------*
*&      Form  GET_T001K
*&---------------------------------------------------------------------*
*       通貨コード
*----------------------------------------------------------------------*
FORM GET_T001K.

DATA LT_ZTEGMMT013 TYPE STANDARD TABLE OF ZTEGMMT013.

APPEND LINES OF IT_ZTEGMMT013 TO LT_ZTEGMMT013.
SORT LT_ZTEGMMT013 BY WERKS ASCENDING.
DELETE ADJACENT DUPLICATES FROM LT_ZTEGMMT013
COMPARING WERKS.

SELECT T001K~BWKEY        "評価レベル
T001~WAERS         "通貨コード
INTO TABLE IT_T001K
FROM T001K
INNER JOIN T001
ON T001K~BUKRS = T001~BUKRS
FOR ALL ENTRIES IN LT_ZTEGMMT013
WHERE T001K~BWKEY = LT_ZTEGMMT013-WERKS
AND T001~BUKRS = P_BUKRS.

SORT IT_T001K BY WERKS ASCENDING.

ENDFORM.                                                    " GET_T001K
*&---------------------------------------------------------------------*
*&      Form  GET_T024
*&---------------------------------------------------------------------*
*       購買グループ名
*----------------------------------------------------------------------*
FORM GET_T024.

DATA LT_ZTEGMMT013 TYPE STANDARD TABLE OF ZTEGMMT013.

APPEND LINES OF IT_ZTEGMMT013 TO LT_ZTEGMMT013.
DELETE LT_ZTEGMMT013 WHERE EKGRP IS INITIAL.
IF LT_ZTEGMMT013[] IS INITIAL.
RETURN.
ENDIF.
SORT LT_ZTEGMMT013 BY EKGRP ASCENDING.
DELETE ADJACENT DUPLICATES FROM LT_ZTEGMMT013
COMPARING EKGRP.

SELECT EKGRP              "購買グループ
EKNAM              "購買グループテキスト
INTO TABLE IT_T024
FROM T024
FOR ALL ENTRIES IN LT_ZTEGMMT013
WHERE EKGRP = LT_ZTEGMMT013-EKGRP.

SORT IT_T024 BY EKGRP ASCENDING.

ENDFORM.                                                    " GET_T024
*&---------------------------------------------------------------------*
*&      Form  GET_MBEW
*&---------------------------------------------------------------------*
*       単価算出情報
*----------------------------------------------------------------------*
FORM GET_MBEW.

DATA LT_ZTEGMMT013 TYPE STANDARD TABLE OF ZTEGMMT013.

APPEND LINES OF IT_ZTEGMMT013 TO LT_ZTEGMMT013.
SORT LT_ZTEGMMT013 BY MATNR ASCENDING
WERKS ASCENDING.
DELETE ADJACENT DUPLICATES FROM LT_ZTEGMMT013
COMPARING MATNR
WERKS.

SELECT MATNR         "品目コード
BWKEY         "評価レベル
LBKUM         "評価在庫合計
SALK3         "評価在庫合計額
VERPR         "移動平均原価
PEINH         "価格単位
INTO TABLE IT_MBEW
FROM MBEW
FOR ALL ENTRIES IN LT_ZTEGMMT013
WHERE MATNR = LT_ZTEGMMT013-MATNR
AND BWKEY = LT_ZTEGMMT013-WERKS.

SORT IT_MBEW BY MATNR ASCENDING
WERKS ASCENDING.

ENDFORM.                                                    " GET_MBEW
*&---------------------------------------------------------------------*
*&      Form  GET_LFA1
*&---------------------------------------------------------------------*
*       仕入先名称
*----------------------------------------------------------------------*
FORM GET_LFA1.

DATA LT_ZTEGMMT013 TYPE STANDARD TABLE OF ZTEGMMT013.

APPEND LINES OF IT_ZTEGMMT013 TO LT_ZTEGMMT013.
DELETE LT_ZTEGMMT013 WHERE LIFNR IS INITIAL.
IF LT_ZTEGMMT013[] IS INITIAL.
RETURN.
ENDIF.
SORT LT_ZTEGMMT013 BY LIFNR ASCENDING.
DELETE ADJACENT DUPLICATES FROM LT_ZTEGMMT013
COMPARING LIFNR.

SELECT LIFNR              "仕入先
NAME1              "名称
INTO TABLE IT_LFA1
FROM LFA1
FOR ALL ENTRIES IN LT_ZTEGMMT013
WHERE LIFNR = LT_ZTEGMMT013-LIFNR.

SORT IT_LFA1 BY LIFNR ASCENDING.

ENDFORM.                                                    " GET_LFA1
*&---------------------------------------------------------------------*
*&      Form  GET_KNA1
*&---------------------------------------------------------------------*
*       得意先名称
*----------------------------------------------------------------------*
FORM GET_KNA1.

DATA LT_ZTEGMMT013 TYPE STANDARD TABLE OF ZTEGMMT013.

APPEND LINES OF IT_ZTEGMMT013 TO LT_ZTEGMMT013.
DELETE LT_ZTEGMMT013 WHERE KUNNR IS INITIAL.
IF LT_ZTEGMMT013[] IS INITIAL.
RETURN.
ENDIF.
SORT LT_ZTEGMMT013 BY KUNNR ASCENDING.
DELETE ADJACENT DUPLICATES FROM LT_ZTEGMMT013
COMPARING KUNNR.

SELECT KUNNR              "仕入先
NAME1              "名称
INTO TABLE IT_KNA1
FROM KNA1
FOR ALL ENTRIES IN LT_ZTEGMMT013
WHERE KUNNR = LT_ZTEGMMT013-KUNNR.

SORT IT_KNA1 BY KUNNR ASCENDING.

ENDFORM.                                                    " GET_LFA1
*&---------------------------------------------------------------------*
*&      Form  GET_MCHA
*&---------------------------------------------------------------------*
*       ロッド情報
*----------------------------------------------------------------------*
FORM GET_MCHA.

DATA LT_ZTEGMMT013 TYPE STANDARD TABLE OF ZTEGMMT013.

APPEND LINES OF IT_ZTEGMMT013 TO LT_ZTEGMMT013.
DELETE LT_ZTEGMMT013 WHERE CHARG IS INITIAL.
IF LT_ZTEGMMT013[] IS INITIAL.
RETURN.
ENDIF.
SORT LT_ZTEGMMT013 BY MATNR ASCENDING
WERKS ASCENDING
CHARG ASCENDING.

DELETE ADJACENT DUPLICATES FROM LT_ZTEGMMT013
COMPARING MATNR
WERKS
CHARG.

SELECT MATNR                              "品目コード
WERKS                              "プラント
CHARG                              "ロット番号
VFDAT                              "有効期限
LICHA                              "仕入先ロット
LWEDT                              "前回入庫日付
HSDAT                              "製造日付
FROM MCHA
INTO TABLE IT_MCHA
FOR ALL ENTRIES IN LT_ZTEGMMT013
WHERE MATNR = LT_ZTEGMMT013-MATNR        "品目コード
AND WERKS = LT_ZTEGMMT013-WERKS        "プラント
AND CHARG = LT_ZTEGMMT013-CHARG.       "ロット番号

SORT IT_MCHA BY MATNR ASCENDING
WERKS ASCENDING
CHARG ASCENDING.

ENDFORM.                                                    " GET_MCHA
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATa_REEDIT
*&---------------------------------------------------------------------*
*       再編集
*----------------------------------------------------------------------*
FORM EDIT_DATA_REEDIT.

DATA:
LW_ZTEGMMT013 TYPE ZTEGMMT013,
LW_SYUKKAZUMI TYPE ZTEGMMT013,
LT_ZTEGMMT013 TYPE STANDARD TABLE OF ZTEGMMT013,
LW_TOTAL TYPE ZTEGMMT013,
LW_LOOP  TYPE ZTEGMMT013,
LW_MBEW  TYPE T_MBEW,
LW_MARA  TYPE T_MARA,
LW_MAKT  TYPE T_MARA,
LW_T001K TYPE T_T001K.

* 対象データをローカル内部テーブルに割当
APPEND LINES OF IT_ZTEGMMT013 TO LT_ZTEGMMT013.
CLEAR IT_ZTEGMMT013.

* ソート
SORT LT_ZTEGMMT013 BY WERKS ASCENDING
MATNR ASCENDING.

LOOP AT LT_ZTEGMMT013 INTO LW_LOOP.
CLEAR:
LW_ZTEGMMT013.

LW_ZTEGMMT013 = LW_LOOP.

AT NEW WERKS.
CLEAR:
LW_T001K.

READ TABLE IT_T001K INTO LW_T001K
WITH KEY WERKS = LW_ZTEGMMT013-WERKS
BINARY SEARCH.
ENDAT.

AT NEW MATNR.
CLEAR:
LW_MARA,
LW_MAKT,
LW_MBEW,
LW_SYUKKAZUMI.

READ TABLE IT_MARA INTO LW_MARA
WITH KEY MATNR = LW_ZTEGMMT013-MATNR
BINARY SEARCH.

READ TABLE IT_MARA INTO LW_MAKT
WITH KEY MATNR = LW_ZTEGMMT013-MATNR
SPRAS = SY-LANGU
BINARY SEARCH.

READ TABLE IT_MBEW INTO LW_MBEW
WITH KEY MATNR = LW_ZTEGMMT013-MATNR
WERKS = LW_ZTEGMMT013-WERKS
BINARY SEARCH.

*     出荷済未出庫データ
PERFORM EDIT_SYUKKAZUMI_RECODE
USING
LW_ZTEGMMT013
CHANGING
LW_SYUKKAZUMI.

*     出荷済未出庫行の作成
PERFORM EDIT_NORMAL_RECORD
USING
LW_T001K
LW_MARA
LW_MAKT
LW_MBEW
CHANGING
LW_SYUKKAZUMI.

*    出荷済未出庫行の在庫数量を合計
PERFORM COUNT_STOCK_DATA
USING
LW_SYUKKAZUMI
CHANGING
LW_TOTAL.

ENDAT.

*   行の作成
PERFORM EDIT_NORMAL_RECORD
USING
LW_T001K
LW_MARA
LW_MAKT
LW_MBEW
CHANGING
LW_ZTEGMMT013.

*   在庫数量の合計
PERFORM COUNT_STOCK_DATA
USING
LW_ZTEGMMT013
CHANGING
LW_TOTAL.

AT END OF MATNR.
*     合計行の作成
PERFORM EDIT_TOTAL_RECODE
USING
LW_ZTEGMMT013
LW_TOTAL
LW_MBEW.

CLEAR LW_TOTAL.
ENDAT.

ENDLOOP.

ENDFORM.                    " EDIT_DATa_REEDIT
*&---------------------------------------------------------------------*
*&      Form  EDIT_SYUKKAZUMI_RECODE
*&---------------------------------------------------------------------*
*       出荷済み未出庫情報編集
*----------------------------------------------------------------------*
*      -->AI_ZTEGMMT013        帳簿棚卸ロット別在庫
*      <--AO_SYUKKAZUMI        出荷済み未出庫データ
*----------------------------------------------------------------------*
FORM EDIT_SYUKKAZUMI_RECODE
USING
AI_ZTEGMMT013 TYPE ZTEGMMT013
CHANGING
AO_SYUKKAZUMI TYPE ZTEGMMT013.

DATA:
LW_ZS0020 TYPE T_ZS0020.

READ TABLE IT_ZS0020 TRANSPORTING NO FIELDS
WITH KEY MATNR = AI_ZTEGMMT013-MATNR
WERKS = AI_ZTEGMMT013-WERKS
BINARY SEARCH.

* 対象データとして、内部テーブルに格納した場合、行わない
IF SY-SUBRC = 0.
RETURN.
ENDIF.

LW_ZS0020-MATNR = AI_ZTEGMMT013-MATNR.
LW_ZS0020-WERKS = AI_ZTEGMMT013-WERKS.

* 出荷済み未出庫項目のセット
PERFORM SET_SYUKKAZUMI_DATA
USING
LW_ZS0020
CHANGING
AO_SYUKKAZUMI.

ENDFORM.                    " EDIT_SYUKKAZUMI_RECODE
*&---------------------------------------------------------------------*
*&      Form  EDIT_NORMAL_RECORD
*&---------------------------------------------------------------------*
*       行の作成
*----------------------------------------------------------------------*
*      -->AI_T001K       通貨
*      -->AI_MARA        品目情報
*      -->AI_MAKT        品目テキスト
*      -->AI_MBEW        単価算出情報
*      <--AO_ZTEGMMT013  帳簿棚卸ロット別在庫
*----------------------------------------------------------------------*
FORM EDIT_NORMAL_RECORD
USING
AI_T001K   TYPE T_T001K
AI_MARA    TYPE T_MARA
AI_MAKT    TYPE T_MARA
AI_MBEW    TYPE T_MBEW
CHANGING
AO_ZTEGMMT013 TYPE ZTEGMMT013.

DATA:
LW_T024  TYPE T_T024,
LW_LFA1  TYPE T_LFA1,
LW_KNA1  TYPE T_KNA1,
LW_MCHA  TYPE T_MCHA,
LV_OBJEK TYPE OBJNUM,
LV_OBTAB TYPE TABELLE,
LV_KLART TYPE KLASSENART,
LV_CLASS TYPE KLASSE_D,
LT_SNUM  TYPE STANDARD TABLE OF BAPI1003_ALLOC_VALUES_NUM,
LT_SCHAR TYPE STANDARD TABLE OF BAPI1003_ALLOC_VALUES_CHAR,
LT_SCURR TYPE STANDARD TABLE OF BAPI1003_ALLOC_VALUES_CURR,
LT_RET   TYPE STANDARD TABLE OF BAPIRET2,
LW_SCHAR_C TYPE BAPI1003_ALLOC_VALUES_CHAR,
LW_SCHAR_V TYPE BAPI1003_ALLOC_VALUES_CHAR.

IF AO_ZTEGMMT013 IS INITIAL.
RETURN.
ENDIF.

IF AO_ZTEGMMT013-EKGRP IS NOT INITIAL.
READ TABLE IT_T024 INTO LW_T024
WITH KEY EKGRP = AO_ZTEGMMT013-EKGRP
BINARY SEARCH.
ENDIF.

IF AO_ZTEGMMT013-LIFNR IS NOT INITIAL.
READ TABLE IT_LFA1 INTO LW_LFA1
WITH KEY LIFNR = AO_ZTEGMMT013-LIFNR
BINARY SEARCH.
ENDIF.

IF AO_ZTEGMMT013-KUNNR IS NOT INITIAL.
READ TABLE IT_KNA1 INTO LW_KNA1
WITH KEY KUNNR = AO_ZTEGMMT013-KUNNR
BINARY SEARCH.
ENDIF.

IF AO_ZTEGMMT013-CHARG IS NOT INITIAL.
READ TABLE IT_MCHA INTO LW_MCHA
WITH KEY MATNR = AO_ZTEGMMT013-MATNR
WERKS = AO_ZTEGMMT013-WERKS
CHARG = AO_ZTEGMMT013-CHARG
BINARY SEARCH.

CALL FUNCTION 'VB_BATCH_2_CLASS_OBJECT'
EXPORTING
I_MATNR = AO_ZTEGMMT013-MATNR
I_CHARG = AO_ZTEGMMT013-CHARG
I_WERKS = AO_ZTEGMMT013-WERKS
IMPORTING
E_OBJEK = LV_OBJEK
E_OBTAB = LV_OBTAB
E_KLART = LV_KLART
E_CLASS = LV_CLASS.

CALL FUNCTION 'BAPI_OBJCL_GETDETAIL'
EXPORTING
OBJECTKEY       = LV_OBJEK
OBJECTTABLE     = LV_OBTAB
CLASSNUM        = LV_CLASS
CLASSTYPE       = LV_KLART
TABLES
ALLOCVALUESNUM  = LT_SNUM
ALLOCVALUESCHAR = LT_SCHAR
ALLOCVALUESCURR = LT_SCURR
RETURN          = LT_RET.

READ TABLE LT_SCHAR INTO LW_SCHAR_C
WITH KEY CHARACT_DESCR = TEXT-T01.

READ TABLE LT_SCHAR INTO LW_SCHAR_V
WITH KEY CHARACT_DESCR = TEXT-T02.
ENDIF.

AO_ZTEGMMT013-ZYEAR  = P_YEAR.                  "年
AO_ZTEGMMT013-ZMONTH = P_MONTH.                 "月
AO_ZTEGMMT013-MAKTX  = AI_MAKT-MAKTX.           "品目テキスト
AO_ZTEGMMT013-WRKST  = AI_MARA-WRKST.           "危険物区分
AO_ZTEGMMT013-MEINS  = AI_MARA-MEINS.           "単位
AO_ZTEGMMT013-NORMT  = AI_MARA-NORMT.           "比重
AO_ZTEGMMT013-WAERS  = AI_T001K-WAERS.          "通貨
AO_ZTEGMMT013-EKNAM  = LW_T024-EKNAM.           "グループ名
AO_ZTEGMMT013-KNAME  = LW_KNA1-NAME1.           "得意先名称
AO_ZTEGMMT013-LNAME  = LW_LFA1-NAME1.           "仕入先名称
AO_ZTEGMMT013-LICHA  = LW_MCHA-LICHA.           "仕入先ロット番号
AO_ZTEGMMT013-HSDAT  = LW_MCHA-HSDAT.           "製造日付
AO_ZTEGMMT013-VFDAT  = LW_MCHA-VFDAT.           "有効期間期限日
AO_ZTEGMMT013-LWEDT  = LW_MCHA-LWEDT.           "前回入庫日付
AO_ZTEGMMT013-VENDOR = LW_SCHAR_V-VALUE_CHAR.   "仕入先メモ
AO_ZTEGMMT013-CUSTOM = LW_SCHAR_C-VALUE_CHAR.   "得意先メモ
AO_ZTEGMMT013-VERPR  = AI_MBEW-VERPR.           "移動平均原価
AO_ZTEGMMT013-PEINH  = AI_MBEW-PEINH.           "価格単位

* 当月残数と合計額の計算
PERFORM GET_LABST_COUNT
USING
AI_MBEW
CHANGING
AO_ZTEGMMT013.

APPEND AO_ZTEGMMT013 TO IT_ZTEGMMT013.

ENDFORM.                    " EDIT_NORMAL_RECORD
*&---------------------------------------------------------------------*
*&      Form  GET_LABST_COUNT
*&---------------------------------------------------------------------*
*       当月残数と合計額の計算
*----------------------------------------------------------------------*
*      -->AI_MBEW        単価算出情報
*      <--AO_ZTEGMMT013  帳簿棚卸ロット別在庫
*----------------------------------------------------------------------*
FORM GET_LABST_COUNT
USING
AI_MBEW TYPE T_MBEW
CHANGING
AO_ZTEGMMT013 TYPE ZTEGMMT013.

* 当月残数
TRY.
AO_ZTEGMMT013-LABST = AO_ZTEGMMT013-ODLAB   "通常在庫
+ AO_ZTEGMMT013-SPLAB   "個別購買在庫
+ AO_ZTEGMMT013-KULAB   "預託在庫
+ AO_ZTEGMMT013-LBLAB   "支給在庫
+ AO_ZTEGMMT013-SPEME.  "保留在庫
CATCH CX_SY_ARITHMETIC_OVERFLOW.
AO_ZTEGMMT013-LABST = CNS_OVERF_P13.
ENDTRY.

ENDFORM.                    " GET_LABST_COUNT
*&---------------------------------------------------------------------*
*&      Form  COUNT_STOCK_DATA
*&---------------------------------------------------------------------*
*       在庫数量の合計
*----------------------------------------------------------------------*
*      -->AI_OBJ       合計対象
*      <--AO_TAL       合計行
*----------------------------------------------------------------------*
FORM COUNT_STOCK_DATA
USING
AI_OBJ TYPE ZTEGMMT013
CHANGING
AO_TAL TYPE ZTEGMMT013.

IF AI_OBJ IS INITIAL.
RETURN.
ENDIF.

AO_TAL-ODLAB    = AO_TAL-ODLAB    + AI_OBJ-ODLAB.   "通常在庫X
AO_TAL-SPLAB    = AO_TAL-SPLAB    + AI_OBJ-SPLAB.   "個別購買在庫
AO_TAL-KULAB    = AO_TAL-KULAB    + AI_OBJ-KULAB.   "預託在庫
AO_TAL-LBLAB    = AO_TAL-LBLAB    + AI_OBJ-LBLAB.   "支給在庫
AO_TAL-TRAME    = AO_TAL-TRAME    + AI_OBJ-TRAME.   "積送中在庫
AO_TAL-LFIMG    = AO_TAL-LFIMG    + AI_OBJ-LFIMG.   "出荷済未出庫
AO_TAL-LFIMG_KB = AO_TAL-LFIMG_KB + AI_OBJ-LFIMG_KB."出荷済未出庫KB
AO_TAL-LFIMG_KE = AO_TAL-LFIMG_KE + AI_OBJ-LFIMG_KE."出荷済未出庫KE
AO_TAL-SPEME    = AO_TAL-SPEME    + AI_OBJ-SPEME.   "保留在庫

ENDFORM.                    " COUNT_STOCK_DATA
*&---------------------------------------------------------------------*
*&      Form  EDIT_TOTAL_RECODE
*&---------------------------------------------------------------------*
*       合計行の作成
*----------------------------------------------------------------------*
*      -->AI_OBJ         合計対象
*      -->AI_TAL         合計行
*      -->AI_MBEW        単価算出情報
*----------------------------------------------------------------------*
FORM EDIT_TOTAL_RECODE
USING
AI_OBJ  TYPE ZTEGMMT013
AI_TAL  TYPE ZTEGMMT013
AI_MBEW TYPE T_MBEW.

DATA:
LW_TOTAL TYPE ZTEGMMT013.

LW_TOTAL = AI_TAL.
LW_TOTAL-ZYEAR  = AI_OBJ-ZYEAR.         "年
LW_TOTAL-ZMONTH = AI_OBJ-ZMONTH.        "月
LW_TOTAL-WERKS  = AI_OBJ-WERKS.         "プラント
LW_TOTAL-MATNR  = AI_OBJ-MATNR.         "品目
LW_TOTAL-MAKTX  = AI_OBJ-MAKTX.         "品目テキスト
LW_TOTAL-LGORT  = CNS_LGORT_TAL.        "倉庫
LW_TOTAL-ZFLG   = ABAP_ON.              "合計フラグ(X)
LW_TOTAL-WAERS  = AI_OBJ-WAERS.         "通貨
LW_TOTAL-EKGRP  = AI_OBJ-EKGRP.         "購買グループ
LW_TOTAL-EKNAM  = AI_OBJ-EKNAM.         "購買グループ名
LW_TOTAL-MEINS  = AI_OBJ-MEINS.         "単位
LW_TOTAL-VERPR  = AI_OBJ-VERPR.         "移動平均価
LW_TOTAL-PEINH  = AI_OBJ-PEINH.         "価格単位
LW_TOTAL-WRKST  = AI_OBJ-WRKST.         "危険物区分
LW_TOTAL-NORMT  = AI_OBJ-NORMT.         "比重
LW_TOTAL-SALK3  = AI_MBEW-SALK3.

*   当月残数の計算
PERFORM GET_LABST_COUNT
USING AI_MBEW
CHANGING LW_TOTAL.

APPEND LW_TOTAL TO IT_ZTEGMMT013.

ENDFORM.                    " EDIT_TOTAL_RECODE
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZTEGMMT013
*&---------------------------------------------------------------------*
*       テーブル更新
*----------------------------------------------------------------------*
FORM UPDATE_ZTEGMMT013.

* テーブルロック
PERFORM ENQUEUE_ZTEGMMT013.

* データ削除
PERFORM DELETE_ZTEGMMT013.

* データ登録
PERFORM INSERT_ZTEGMMT013.

* ロック解除
PERFORM DEQUEUE_ZTEGMMT013.

ENDFORM.                    " UPDATE_ZTEGMMT013
*&---------------------------------------------------------------------*
*&      Form  ENQUEUE_ZTEGMMT013
*&---------------------------------------------------------------------*
*       テーブルロック
*----------------------------------------------------------------------*
FORM ENQUEUE_ZTEGMMT013.

DATA:
LT_ZTEGMMT013 TYPE STANDARD TABLE OF ZTEGMMT013,
LW_ZTEGMMT013 TYPE ZTEGMMT013.

APPEND LINES OF IT_ZTEGMMT013 TO LT_ZTEGMMT013.
DELETE ADJACENT DUPLICATES FROM LT_ZTEGMMT013
COMPARING WERKS.

LOOP AT LT_ZTEGMMT013 INTO LW_ZTEGMMT013.
CALL FUNCTION 'ENQUEUE_EZ_ZTEGMMT013'
EXPORTING
ZYEAR          = LW_ZTEGMMT013-ZYEAR
ZMONTH         = LW_ZTEGMMT013-ZMONTH
WERKS          = LW_ZTEGMMT013-WERKS
EXCEPTIONS
FOREIGN_LOCK   = 1
SYSTEM_FAILURE = 2
OTHERS         = 3.

CASE SY-SUBRC.
WHEN 0.
CONTINUE.
WHEN 1.
*       棚卸データテーブル は他のユーザによりロックされています
MESSAGE S004 WITH TEXT-M03.
LEAVE LIST-PROCESSING.
WHEN OTHERS.
*       ロックできませんでした
MESSAGE S202.
LEAVE LIST-PROCESSING.
ENDCASE.
ENDLOOP.

ENDFORM.                    " ENQUEUE_ZTEGMMT013
*&---------------------------------------------------------------------*
*&      Form  DELETE_ZTEGMMT013
*&---------------------------------------------------------------------*
*       データ削除
*----------------------------------------------------------------------*
FORM DELETE_ZTEGMMT013.

DELETE FROM ZTEGMMT013 WHERE ZYEAR  = P_YEAR
AND ZMONTH = P_MONTH
AND WERKS IN RT_WERKS.

* 削除エラー時
CASE SY-SUBRC.
WHEN 0 OR 4.
WHEN OTHERS.
ROLLBACK WORK.
PERFORM DEQUEUE_ZTEGMMT013.
MESSAGE S136(Z3).
LEAVE LIST-PROCESSING.
ENDCASE.

ENDFORM.                    " DELETE_ZTEGMMT013
*&---------------------------------------------------------------------*
*&      Form  INSERT_ZTEGMMT013
*&---------------------------------------------------------------------*
*       データ登録
*----------------------------------------------------------------------*
FORM INSERT_ZTEGMMT013.

INSERT ZTEGMMT013 FROM TABLE IT_ZTEGMMT013 ACCEPTING DUPLICATE KEYS.

* 登録正常時
IF SY-SUBRC = 0.
*   コミット
COMMIT WORK.

ELSE.
*   ロールバック
ROLLBACK WORK.
*   ロック解除
PERFORM DEQUEUE_ZTEGMMT013.
MESSAGE S137(Z3).
LEAVE LIST-PROCESSING.
ENDIF.

ENDFORM.                    " INSERT_ZTEGMMT013
*&---------------------------------------------------------------------*
*&      Form  DEQUEUE_ZTEGMMT013
*&---------------------------------------------------------------------*
*       ロック解除
*----------------------------------------------------------------------*
FORM DEQUEUE_ZTEGMMT013.


DATA:
LT_ZTEGMMT013 TYPE STANDARD TABLE OF ZTEGMMT013,
LW_ZTEGMMT013 TYPE ZTEGMMT013.

APPEND LINES OF IT_ZTEGMMT013 TO LT_ZTEGMMT013.
DELETE ADJACENT DUPLICATES FROM LT_ZTEGMMT013
COMPARING WERKS.

LOOP AT LT_ZTEGMMT013 INTO LW_ZTEGMMT013.
CALL FUNCTION 'DEQUEUE_EZ_ZTEGMMT013'
EXPORTING
ZYEAR  = LW_ZTEGMMT013-ZYEAR
ZMONTH = LW_ZTEGMMT013-ZMONTH
WERKS  = LW_ZTEGMMT013-WERKS.
ENDLOOP.

ENDFORM.                    " DEQUEUE_ZTEGMMT013
*&---------------------------------------------------------------------*
*&      Form  SBUMIT_QUERY
*&---------------------------------------------------------------------*
*       クエリを呼び出す
*----------------------------------------------------------------------*
FORM SBUMIT_QUERY .

DATA:
LV_PROGNAM TYPE AQADEF-PGNAME,
LV_NUMBER  TYPE TBTCJOB-JOBCOUNT,
LV_NAME    TYPE TBTCJOB-JOBNAME,
LRT_BUKRS  TYPE RANGE OF T001-BUKRS,
LRT_ZYEAR  TYPE RANGE OF ZTEGMMT013-ZYEAR ,
LRT_MONTH  TYPE RANGE OF ZTEGMMT013-ZMONTH,
LRS_BUKRS  LIKE LINE OF LRT_BUKRS,
LRS_ZYEAR  LIKE LINE OF LRT_ZYEAR,
LRS_MONTH  LIKE LINE OF LRT_MONTH,
LV_PRIPARA TYPE PRI_PARAMS.

LRS_BUKRS-SIGN    = CNS_SIGN_I.
LRS_BUKRS-OPTION  = CNS_OPTI_EQ.
LRS_BUKRS-LOW     = P_BUKRS.
APPEND LRS_BUKRS TO LRT_BUKRS.

LRS_ZYEAR-SIGN    = CNS_SIGN_I.
LRS_ZYEAR-OPTION  = CNS_OPTI_EQ.
LRS_ZYEAR-LOW     = P_YEAR.
APPEND LRS_ZYEAR TO LRT_ZYEAR.

LRS_MONTH-SIGN    = CNS_SIGN_I.
LRS_MONTH-OPTION  = CNS_OPTI_EQ.
LRS_MONTH-LOW     = P_MONTH.
APPEND LRS_MONTH TO LRT_MONTH.

* クエリのプログラム名を取得する
CALL FUNCTION 'RSAQ_REPORT_NAME'
EXPORTING
WORKSPACE  = CNS_WK_SPACE
USERGROUP  = CNS_US_GROUP
QUERY      = CNS_QUE_NAME
IMPORTING
REPORTNAME = LV_PROGNAM.

IF LV_PROGNAM IS INITIAL.
RETURN.
ENDIF.

IF SY-BATCH IS INITIAL.
*   オンラインでクエリ呼び出し
SUBMIT (LV_PROGNAM)
WITH S_BUKRS  IN LRT_BUKRS
WITH S_YEAR   IN LRT_ZYEAR
WITH S_MONTH  IN LRT_MONTH
WITH S_WERKS  IN S_WERKS
WITH SP$00005 IN S_LGORT
WITH SP$00006 IN S_MATNR
WITH SP$00007 IN S_EKGRP
AND RETURN.

ELSE.

*   ジョブ名の取得
CALL FUNCTION 'GET_JOB_RUNTIME_INFO'
IMPORTING
JOBNAME         = LV_NAME
EXCEPTIONS
NO_RUNTIME_INFO = 1
OTHERS          = 2.

IF SY-SUBRC <> 0.
RETURN.
ENDIF.

*    バックグラウンドでクエリを呼び出し
CALL FUNCTION 'JOB_OPEN'
EXPORTING
JOBNAME          = LV_NAME
IMPORTING
JOBCOUNT         = LV_NUMBER
EXCEPTIONS
CANT_CREATE_JOB  = 1
INVALID_JOB_DATA = 2
JOBNAME_MISSING  = 3
OTHERS           = 4.

IF SY-SUBRC <> 0.
RETURN.
ENDIF.

SUBMIT (LV_PROGNAM) TO SAP-SPOOL
SPOOL PARAMETERS LV_PRIPARA
WITHOUT SPOOL DYNPRO
VIA JOB LV_NAME NUMBER LV_NUMBER
WITH S_BUKRS  IN LRT_BUKRS
WITH S_YEAR   IN LRT_ZYEAR
WITH S_MONTH  IN LRT_MONTH
WITH S_WERKS  IN S_WERKS
WITH SP$00005 IN S_LGORT
WITH SP$00006 IN S_MATNR
WITH SP$00007 IN S_EKGRP
AND RETURN.

IF SY-SUBRC <> 0.
RETURN.
ENDIF.

CALL FUNCTION 'JOB_CLOSE'
EXPORTING
JOBCOUNT             = LV_NUMBER
JOBNAME              = LV_NAME
STRTIMMED            = ABAP_ON
EXCEPTIONS
CANT_START_IMMEDIATE = 1
INVALID_STARTDATE    = 2
JOBNAME_MISSING      = 3
JOB_CLOSE_FAILED     = 4
JOB_NOSTEPS          = 5
JOB_NOTEX            = 6
LOCK_FAILED          = 7
OTHERS               = 8.

IF SY-SUBRC = 0.
RETURN.
ENDIF.
ENDIF.

ENDFORM.                    " SBUMIT_QUERY
*Text symbol text・
*M01:Month
*M02:Account Book Inventory(Lot) List
*M03:Account Book Inventory(Lot) Table
*M04:Storage Location
*T01:Customer Memo
*T02:Vender Memo
*Selection text・
*P_BUKRS:        Company Code
*P_MONTH:        Month
*P_YEAR:        Year
*S_EKGRP:        Purchasing Group
*S_LGORT:        Storage Location
*S_LGPBE:        Storage Bin
*S_MATNR:        Material Number
*S_WERKS:        Plant
