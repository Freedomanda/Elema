*& ISID Co.,Ltd. 2008 All rights.reserved.
*&---------------------------------------------------------------------*
*& プログラム：ZRLFIR9080_FRM00
*& 作成者    ：ISID004
*& 作成日付  ：2008/07/15
*& 機能ID    ：
*&---------------------------------------------------------------------*
*& 処理概要&
*& This report will show the beginning and ending balances of the company.
*& This can be printed directly and can be saved to the excel file.
*&---------------------------------------------------------------------*
*& 更新履歴&
*& No.   更新日付    更新者    更新内容
*& 新規  2008/07/15  ISID000
*& 001   2008/07/15  ISID004   システム正規化
*& #002  2012/11/06  ISID144   EHP6へのバージョンアップ対応
*&---------------------------------------------------------------------*

*&----- Form一覧 ------------------------------------------------------*
*& FRM_GET_FILENAME_OPEN       ファイル名取得(アップロード用)
*& FRM_GET_FILENAME_SAVE       ファイル名取得(ダウンロード用)
*& FRM_CHECK_FILEPATH          ファイル存在チェック
*& FRM_UPLOAD_LOCAL            ファイルアップロード(ローカル)
*& FRM_DOWNLOAD_LOCAL          ファイルダウンロード(ローカル)
*& FRM_UPLOAD_SVFILE           ファイルアップロード(サーバ)(区切り編集可)
*& FRM_DOWNLOAD_SVFILE         ファイルダウンロード(サーバ)(区切り編集可)
*& FRM_OPEN_SERVER_FILE        サーバファイルオープン
*& FRM_SPLIT_PATH              ファイルパス分割処理
*& FRM_CHECK_DIRECT            ディレクトリ存在チェック
*& FRM_SPLIT_CHECK_DIRECT      ディレクトリ名分割 & 存在チェック
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  FRM_GET_FILENAME_OPEN
*&---------------------------------------------------------------------*
*       ファイル名取得(アップロード用)
*----------------------------------------------------------------------*
*      <--CV_PATH       :ファイル名(選択画面パラメータ)
*----------------------------------------------------------------------*
FORM FRM_GET_FILENAME_OPEN CHANGING CV_PATH TYPE ANY.

DATA:LT_FILE           TYPE FILETABLE,       " ファイル名一覧格納テーブル
LV_FILENAME(1024) TYPE C,               " ヘッダ
LV_RC             TYPE I.               " 結果

CLEAR: CV_PATH.

*----- メソッドの呼出し：ファイルを開くダイアログを表示
CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
CHANGING
FILE_TABLE              = LT_FILE        " ファイル名一覧格納テーブル
RC                      = LV_RC          " 結果
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 1
CNTL_ERROR              = 2
ERROR_NO_GUI            = 3
NOT_SUPPORTED_BY_GUI    = 4
OTHERS                  = 5.

*----- 成功の場合、ファイル名一覧格納テーブルの１行目読込み
IF  SY-SUBRC = 0
AND LV_RC  >= 0.                             " 結果
READ TABLE LT_FILE INTO LV_FILENAME INDEX 1.
IF SY-SUBRC = 0.
* ファイル名を選択画面にセット
CV_PATH = LV_FILENAME.                   " ファイル名
ENDIF.
ELSE.
*----- エラーの場合
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                               " FRM_GET_FILENAME_OPEN
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_FILENAME_SAVE
*&---------------------------------------------------------------------*
*       ファイル名取得(ダウンロード用)
*----------------------------------------------------------------------*
*      <--CV_PATH       :ファイル名(選択画面パラメータ)
*----------------------------------------------------------------------*
FORM FRM_GET_FILENAME_SAVE CHANGING CV_PATH TYPE ANY.

DATA:LV_PATH  TYPE STRING,                   " ディレクトリ名
LV_FILEN TYPE STRING,                   " ファイル名
LV_FPATH TYPE STRING.                   " フルパス

CLEAR: CV_PATH.

*----- メソッドの呼出し：ファイル保存ダイアログを表示
CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG
CHANGING
FILENAME             = LV_FILEN          " ファイル名
PATH                 = LV_PATH           " ディレクトリ名
FULLPATH             = LV_FPATH          " フルパス
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4.

*----- 正常の場合、フルパスを選択画面にセット
CASE SY-SUBRC.
WHEN 0.
CV_PATH   = LV_FPATH.                  " フルパス
*----- エラーの場合
WHEN OTHERS.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDCASE.

ENDFORM.                               " FRM_GET_FILENAME_SAVE

*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_FILEPATH
*&---------------------------------------------------------------------*
*       ファイル存在チェック
*----------------------------------------------------------------------*
*      -->UV_PATH       :ファイル名(フルパス)
*      <--CS_ERRMSG     :エラーメッセージ構造
*----------------------------------------------------------------------*
FORM FRM_CHECK_FILEPATH USING    UV_PATH   TYPE ANY
CHANGING CS_ERRMSG TYPE SYMSG.

DATA:LV_PATH       TYPE STRING,              " ファイル名(フルパス)
LV_FLG_RESULT TYPE ABAP_BOOL.           " 結果

CLEAR: CS_ERRMSG.

*----- 型合わせ
LV_PATH = UV_PATH.                           " ファイル名(フルパス)

*----- メソッドの呼出し：ファイル存在チェック
CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_EXIST
EXPORTING
FILE                 = LV_PATH           " ファイル名(フルパス)
RECEIVING
RESULT               = LV_FLG_RESULT     " 結果(存在する場合：'X')
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
WRONG_PARAMETER      = 3
NOT_SUPPORTED_BY_GUI = 4
OTHERS               = 5.

CASE SY-SUBRC.
*----- メソッドは成功
WHEN 0.
*----- ファイルが存在しない場合
IF LV_FLG_RESULT = SPACE.                " 結果(存在する場合：'X')
* メッセージデータのセット
CS_ERRMSG-MSGID = 'ZGR_FI_00'.         " メッセージクラス
CS_ERRMSG-MSGNO = '501'.               " メッセージ番号
*   MESSAGE⇒　&1(&2)は存在しません。
ENDIF.
*----- メソッドが失敗
WHEN OTHERS.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDCASE.

ENDFORM.                                " FRM_CHECK_FILEPATH
*&---------------------------------------------------------------------*
*&      Form  FRM_UPLOAD_LOCAL
*&---------------------------------------------------------------------*
*       ファイルアップロード(ローカル)
*----------------------------------------------------------------------*
*      -->UV_FNAME      :アップロードファイル名(フルパス)
*      -->UV_FTYPE      :ファイルタイプ('ASC' or 'BIN')
*      -->UV_FLG_TAB    :TABフラグ(TAB区切りファイル時：'X')
*      <--CT_UP         :アップロードデータ格納内部
*      <--CS_ERRMSG     :エラーメッセージ構造
*----------------------------------------------------------------------*
FORM FRM_UPLOAD_LOCAL USING    UV_FNAME   TYPE C
UV_FTYPE   TYPE CHAR10
UV_FLG_TAB TYPE CHAR01
CHANGING CT_UP      TYPE TABLE
CS_ERRMSG  TYPE SYMSG.

DATA : LV_FNAME  TYPE STRING.                " ファイル名

REFRESH: CT_UP.
CLEAR:   CT_UP, CS_ERRMSG.

*----- 型合わせ
LV_FNAME = UV_FNAME.                         " ファイル名

*----- アップロード
CALL FUNCTION 'GUI_UPLOAD'
EXPORTING
FILENAME                = LV_FNAME       " ファイル名
FILETYPE                = UV_FTYPE       " ファイルタイプ
HAS_FIELD_SEPARATOR     = UV_FLG_TAB     " TAB種別
TABLES
DATA_TAB                = CT_UP          " アップロードデータ
EXCEPTIONS
FILE_OPEN_ERROR         = 1
FILE_READ_ERROR         = 2
NO_BATCH                = 3
GUI_REFUSE_FILETRANSFER = 4
INVALID_TYPE            = 5
NO_AUTHORITY            = 6
UNKNOWN_ERROR           = 7
BAD_DATA_FORMAT         = 8
HEADER_NOT_ALLOWED      = 9
SEPARATOR_NOT_ALLOWED   = 10
HEADER_TOO_LONG         = 11
UNKNOWN_DP_ERROR        = 12
ACCESS_DENIED           = 13
DP_OUT_OF_MEMORY        = 14
DISK_FULL               = 15
DP_TIMEOUT              = 16
OTHERS                  = 17.

CASE SY-SUBRC.
WHEN 0.
WHEN OTHERS.
*----- エラーの場合
* メッセージデータのセット
CS_ERRMSG-MSGID = 'ZGR_FI_00'.           " メッセージクラス
CS_ERRMSG-MSGNO = '527'.                 " メッセージ番号
CS_ERRMSG-MSGV1 = SY-SUBRC.              " リターンコード
*   MESSAGE⇒　UPLOAD異常終了 例外:&1
ENDCASE.

ENDFORM.                    " FRM_UPLOAD_LOCAL

*&---------------------------------------------------------------------*
*&      Form  FRM_DOWNLOAD_LOCAL
*&---------------------------------------------------------------------*
*       ファイルダウンロード(ローカル)
*----------------------------------------------------------------------*
*      -->UT_OUT        :ダウンロードデータ格納内部テーブル
*      -->UV_FNAME      :ダウンロードファイル名(フルパス)
*      -->UV_FTYPE      :ファイルタイプ('ASC' or 'BIN')
*      -->UV_FLG_TAB    :TABフラグ(TAB区切り時：'X')
*      -->UV_CODEPAGE   :コードページ
*      -->UV_FLG_DEL_SP :末尾空白削除フラグ(空白削除時：'X')
*      <--CS_ERRMSG     :エラーメッセージ構造
*----------------------------------------------------------------------*
FORM FRM_DOWNLOAD_LOCAL USING UT_OUT        TYPE TABLE
UV_FNAME      TYPE C
UV_FTYPE      TYPE CHAR10
UV_FLG_TAB    TYPE CHAR01
UV_CODEPAGE   TYPE ABAP_ENCODING
UV_FLG_DEL_SP TYPE CHAR01
CHANGING CS_ERRMSG     TYPE SYMSG.

DATA: LV_FNAME TYPE STRING.                  " 出力ファイル名

CLEAR: CS_ERRMSG.

*----- 型合わせ
LV_FNAME =  UV_FNAME.                        " 出力ファイル名

*----- 汎用モジュールの呼出し：ダウンロード
CALL FUNCTION 'GUI_DOWNLOAD'
EXPORTING
FILENAME                  = LV_FNAME         " ファイル名
FILETYPE                  = UV_FTYPE         " ファイルタイプ
WRITE_FIELD_SEPARATOR     = UV_FLG_TAB       " TAB種別
CODEPAGE                  = UV_CODEPAGE      " コードページ
TRUNC_TRAILING_BLANKS_EOL = UV_FLG_DEL_SP    " 最終列末尾空白削除
TABLES
DATA_TAB                  = UT_OUT       " 内部テーブル
EXCEPTIONS
FILE_WRITE_ERROR          = 1
NO_BATCH                  = 2
GUI_REFUSE_FILETRANSFER   = 3
INVALID_TYPE              = 4
NO_AUTHORITY              = 5
UNKNOWN_ERROR             = 6
HEADER_NOT_ALLOWED        = 7
SEPARATOR_NOT_ALLOWED     = 8
FILESIZE_NOT_ALLOWED      = 9
HEADER_TOO_LONG           = 10
DP_ERROR_CREATE           = 11
DP_ERROR_SEND             = 12
DP_ERROR_WRITE            = 13
UNKNOWN_DP_ERROR          = 14
ACCESS_DENIED             = 15
DP_OUT_OF_MEMORY          = 16
DISK_FULL                 = 17
DP_TIMEOUT                = 18
FILE_NOT_FOUND            = 19
DATAPROVIDER_EXCEPTION    = 20
CONTROL_FLUSH_ERROR       = 21
OTHERS                    = 22.

CASE SY-SUBRC.
WHEN 0.
WHEN OTHERS.
**----- エラーの場合
* メッセージデータのセット
CS_ERRMSG-MSGID = 'ZGR_FI_00'.           " メッセージクラス
CS_ERRMSG-MSGNO = '528'.                 " メッセージ番号
CS_ERRMSG-MSGV1 = SY-SUBRC.              " リターンコード
*   MESSAGE⇒　DOWNLOAD異常終了 例外:&1
ENDCASE.

ENDFORM.                    " FRM_DOWNLOAD_LOCAL
*&---------------------------------------------------------------------*
*&      Form  FRM_UPLOAD_SVFILE
*&---------------------------------------------------------------------*
*       ファイルアップロード(サーバ) 区切り編集可
*----------------------------------------------------------------------*
*      -->UV_FILENAME   :アップロードファイル名
*      -->UV_SEPARATER  :区切り文字
*      <--CT_INPUT      :アップロードデータ格納内部テーブル
*      <--CS_ERRMSG     :エラーメッセージ構造
*----------------------------------------------------------------------*
FORM FRM_UPLOAD_SVFILE USING UV_FILENAME  TYPE RLGRAP-FILENAME
UV_SEPARATER TYPE CHAR01
CHANGING CT_INPUT     TYPE TABLE
CS_ERRMSG    TYPE SYMSG.

DATA : LV_DATA(1000) TYPE C,                 " １項目格納用
LV_TMP(1000)  TYPE C,                 " 残りのレコード退避
LV_LONG(1000) TYPE C,                 " 分割元
LV_CNT_INDEX     TYPE SYINDEX,        " 項目番号
LS_INPUT     TYPE REF TO DATA.        " 動的構造指定用ポインタ

FIELD-SYMBOLS: <FS_LINE> TYPE ANY,           " 動的構造用
<FS_DATA> TYPE ANY.           " 動的項目用

CREATE DATA LS_INPUT LIKE LINE OF CT_INPUT.
ASSIGN LS_INPUT->* TO <FS_LINE>.

REFRESH CT_INPUT.
CLEAR   CS_ERRMSG.
*----- ファイルOPEN
OPEN DATASET UV_FILENAME FOR INPUT IN TEXT MODE
ENCODING UTF-8 IGNORING CONVERSION ERRORS SKIPPING BYTE-ORDER MARK.

CASE SY-SUBRC.
WHEN 0.
WHEN OTHERS.
**----- エラーの場合
* メッセージデータのセット
CS_ERRMSG-MSGID = 'ZGR_FI_00'.           " メッセージクラス
CS_ERRMSG-MSGNO = '529'.                 " メッセージ番号
CS_ERRMSG-MSGV1 = SY-SUBRC.              " リターンコード
*   MESSAGE⇒　FILE OPEN異常終了 例外:&1
RETURN.
ENDCASE.

*----- 内部テーブル作成ループ
DO.
*--- サーバファイルの読込み
READ DATASET UV_FILENAME INTO LV_LONG.
IF SY-SUBRC <> 0.
EXIT.
ENDIF.
CLEAR: <FS_LINE>, LV_CNT_INDEX.

*--- 区切り文字がない場合(固定長)
IF UV_SEPARATER IS INITIAL.
<FS_LINE> = LV_LONG.
APPEND <FS_LINE> TO CT_INPUT.
CONTINUE.                                " 次のループへ
ENDIF.

*--- 区切り文字がある場合、分割処理ループ
DO.
LV_CNT_INDEX = LV_CNT_INDEX + 1.         " 項目番号＋１
* 項目形式内部テーブルの項目の割当
ASSIGN COMPONENT LV_CNT_INDEX OF STRUCTURE <FS_LINE> TO <FS_DATA>.
IF SY-SUBRC <> 0.
EXIT.
ENDIF.
* 区切り文字による分割
SPLIT LV_LONG AT UV_SEPARATER INTO LV_DATA LV_TMP.
<FS_DATA> = LV_DATA.                     " 分割した１項目をヘッダにセット
LV_LONG  = LV_TMP.                       " 残りのレコード更新
* 残りのレコード長チェック
IF STRLEN( LV_LONG )  = 0.               " 残りのレコード長
EXIT.
ENDIF.
ENDDO.
*--- 内部テーブルへ追加
APPEND <FS_LINE> TO CT_INPUT.
ENDDO.

*----- ファイルCLOSE
CLOSE DATASET UV_FILENAME.

ENDFORM.                    " FRM_UPLOAD_SVFILE
*&---------------------------------------------------------------------*
*&      Form  FRM_DOWNLOAD_SVFILE
*&---------------------------------------------------------------------*
*       ファイルダウンロード(サーバ) 区切り編集可
*----------------------------------------------------------------------*
*      -->UT_OUTPUT     :ダウンロードデータ格納内部テーブル
*      -->UV_FILENAME   :ダウンロードファイル名
*      -->UV_SEPARATER  :区切り文字
*      -->UV_FLG_DEL_SP :末尾空白削除フラグ（区切り文字なしの場合に選択可能）
*      -->UV_FLG_NONUNI :NON-UNICODEフラグ（NON-UNICODEファイル作成時にON）
*      <--CS_ERRMSG     :エラーメッセージ構造
*----------------------------------------------------------------------*
FORM FRM_DOWNLOAD_SVFILE USING UT_OUTPUT     TYPE TABLE
UV_FILENAME   TYPE RLGRAP-FILENAME
UV_SEPARATER  TYPE CHAR01
UV_FLG_DEL_SP TYPE CHAR01
UV_FLG_NONUNI TYPE CHAR01
CHANGING CS_ERRMSG     TYPE SYMSG.

DATA: LV_OUT       TYPE STRING,
LV_CNT_INDEX TYPE SYINDEX,             " 項目番号
LS_OUTPUT    TYPE REF TO DATA,         " 動的構造指定用ポインタ
LV_LENGTH    TYPE I.

FIELD-SYMBOLS: <FS_LINE> TYPE ANY,           " 動的構造指定用
<FS_DATA> TYPE ANY.           " 動的項目指定用

CREATE DATA LS_OUTPUT LIKE LINE OF UT_OUTPUT.
ASSIGN LS_OUTPUT->* TO <FS_LINE>.

CLEAR CS_ERRMSG.

*----- ファイルOPEN
IF UV_FLG_NONUNI IS INITIAL.                 " NON-UNICODEフラグ
OPEN DATASET UV_FILENAME FOR OUTPUT IN TEXT MODE
ENCODING UTF-8 IGNORING CONVERSION ERRORS.
ELSE.
OPEN DATASET UV_FILENAME FOR OUTPUT IN TEXT MODE
ENCODING NON-UNICODE IGNORING CONVERSION ERRORS.
ENDIF.

CASE SY-SUBRC.
WHEN 0.
WHEN OTHERS.
**----- エラーの場合
* メッセージデータのセット
CS_ERRMSG-MSGID = 'ZGR_FI_00'.           " メッセージクラス
CS_ERRMSG-MSGNO = '529'.                 " メッセージ番号
CS_ERRMSG-MSGV1 = SY-SUBRC.              " リターンコード
*     MESSAGE⇒　FILE OPEN異常終了 例外:&1
RETURN.
ENDCASE.

*----- データ書き込みループ
LOOP AT UT_OUTPUT INTO <FS_LINE>.
CLEAR: LV_OUT.

*--- 区切り文字がない場合(固定長)
IF UV_SEPARATER IS INITIAL.

LV_CNT_INDEX = 1.
ASSIGN COMPONENT LV_CNT_INDEX OF STRUCTURE <FS_LINE> TO <FS_DATA>.

CASE UV_FLG_DEL_SP.
*       末尾空白削除
WHEN 'X'.
LV_LENGTH = STRLEN( <FS_DATA> ).
*       末尾空白削除無し(固定長出力)
WHEN OTHERS.
LV_LENGTH =
STRLEN( <FS_DATA> )                                        " 文字数
+ CL_ABAP_LIST_UTILITIES=>DEFINED_OUTPUT_LENGTH( <FS_DATA> ) " 項目長
- CL_ABAP_LIST_UTILITIES=>DYNAMIC_OUTPUT_LENGTH( <FS_DATA> )." BYTE数
ENDCASE.
*     データ書き込み処理
TRANSFER <FS_LINE> TO UV_FILENAME LENGTH LV_LENGTH .
CONTINUE.                                " 次のループへ
ENDIF.

*--- 区切り文字がある場合、区切り文字をセット
CLEAR: LV_CNT_INDEX.
DO.
LV_CNT_INDEX = LV_CNT_INDEX + 1.         " 項目番号＋１
*     内部テーブルの項目の割当
ASSIGN COMPONENT LV_CNT_INDEX OF STRUCTURE <FS_LINE> TO <FS_DATA>.
IF SY-SUBRC <> 0.
EXIT.
ENDIF.
*    １項目目の処理
IF LV_CNT_INDEX = 1.
LV_OUT = <FS_DATA>.
ELSE.
*       区切り文字で結合(２項目目以降の処理)
CONCATENATE LV_OUT <FS_DATA>
INTO LV_OUT                " 結合後
SEPARATED BY UV_SEPARATER. " 区切り文字
ENDIF.
ENDDO.

*   データ書き込み処理
TRANSFER LV_OUT TO UV_FILENAME.
ENDLOOP.

FREE: <FS_LINE>.

*----- ファイルCLOSE
CLOSE DATASET UV_FILENAME.

ENDFORM.                    "FRM_DOWNLOAD_SVFILE
*&---------------------------------------------------------------------*
*&      Form  FRM_OPEN_SERVER_FILE
*&---------------------------------------------------------------------*
*       サーバファイルオープン
*----------------------------------------------------------------------*
*      -->UV_FILE       :ファイル名(フルパス)
*      -->UV_FLG_OPT    :オプションフラグ(INPUTの時:X、OUTPUTの時:SPACE)
*      <--CS_ERRMSG     :エラーメッセージ構造
*----------------------------------------------------------------------*
FORM FRM_OPEN_SERVER_FILE USING    UV_FILE    TYPE ANY
UV_FLG_OPT TYPE C
CHANGING CS_ERRMSG  TYPE SYMSG.

CLEAR:  CS_ERRMSG.

*----- ファイルオープン処理
*--- ファイル入力の場合
CASE UV_FLG_OPT.
WHEN 'X'.
OPEN DATASET UV_FILE FOR INPUT IN TEXT MODE
ENCODING UTF-8 IGNORING CONVERSION ERRORS SKIPPING BYTE-ORDER MARK.

IF SY-SUBRC <> 0.
* エラーの場合
* メッセージデータのセット
CS_ERRMSG-MSGID = 'ZGR_FI_00'.           " メッセージクラス
CS_ERRMSG-MSGNO = '529'.                 " メッセージ番号
CS_ERRMSG-MSGV1 = SY-SUBRC.              " リターンコード
*   MESSAGE⇒　FILE OPEN異常終了 例外:&1
ENDIF.
*--- ファイル出力の場合
WHEN SPACE.
OPEN DATASET UV_FILE FOR OUTPUT IN TEXT MODE
ENCODING UTF-8 IGNORING CONVERSION ERRORS.

IF SY-SUBRC <> 0.
* エラーの場合
* メッセージデータのセット
CS_ERRMSG-MSGID = 'ZGR_FI_00'.           " メッセージクラス
CS_ERRMSG-MSGNO = '529'.                 " メッセージ番号
CS_ERRMSG-MSGV1 = SY-SUBRC.              " リターンコード
*   MESSAGE⇒　FILE OPEN異常終了 例外:&1
ENDIF.
ENDCASE.

ENDFORM.                               "FRM_OPEN_SERVER_FILE
*&---------------------------------------------------------------------*
*&      Form  FRM_SPLIT_PATH
*&---------------------------------------------------------------------*
*       ファイルパス分割処理
*----------------------------------------------------------------------*
*      -->UV_PATH       :ファイル名(フルパス)
*      <--CV_DIRECT     :ディレクトリ名
*      <--CV_FILEN      :ファイル名(拡張子を含む)
*      <--CV_EXTSN      :拡張子
*----------------------------------------------------------------------*
FORM FRM_SPLIT_PATH USING    UV_PATH   TYPE ANY
CHANGING CV_DIRECT TYPE ANY
CV_FILEN  TYPE ANY
CV_EXTSN  TYPE ANY.

*********************************************** #002 MOD 20121106 STA **
*  DATA:  LV_PATH   TYPE DSVASDOCID,       " ファイル名(フルパス)
*         LV_DIRECT TYPE DSVASDOCID,       " ディレクトリ名
*         LV_FILEN  TYPE DSVASDOCID,       " ファイル名(拡張子を含む)
*         LV_EXTSN  TYPE DSVASDOCID.       " 拡張子
DATA:  LV_PATH   TYPE STRING,            " ファイル名(フルパス)
LV_DIRECT TYPE STRING,            " ディレクトリ名
LV_FILEN  TYPE STRING,            " ファイル名(拡張子を含む)
LV_EXTSN  TYPE STRING,            " 拡張子
LV_DRIVE  TYPE PCFILE-DRIVE,      "ドライブ
LV_O_PATH TYPE STRING.            " ディレクトリ名
*********************************************** #002 MOD 20121106 END **
CLEAR: CV_DIRECT, CV_FILEN, CV_EXTSN.

*----- 型合わせ
LV_PATH = UV_PATH.                           " ファイル名(フルパス)

*----- 汎用モジュールの呼出し：ファイルパス分割処理
*********************************************** #002 MOD 20121106 STA **
*  CALL FUNCTION 'DSVAS_DOC_FILENAME_SPLIT'
*    EXPORTING
*      PF_DOCID     = LV_PATH              " ファイル名(フルパス)
*    IMPORTING
*      PF_DIRECTORY = LV_DIRECT            " ディレクトリ名
*      PF_FILENAME  = LV_FILEN             " ファイル名(拡張子を含む)
*      PF_EXTENSION = LV_EXTSN.            " 拡張子
CALL FUNCTION 'CH_SPLIT_FILENAME'
EXPORTING
COMPLETE_FILENAME = LV_PATH          " ファイル名(フルパス)
IMPORTING
DRIVE             = LV_DRIVE         "ドライブ
EXTENSION         = LV_EXTSN         " 拡張子
NAME_WITH_EXT     = LV_FILEN         " ファイル名(拡張子を含む)
PATH              = LV_O_PATH        " パス
EXCEPTIONS
INVALID_DRIVE     = 1
INVALID_PATH      = 2
OTHERS            = 3.
IF SY-SUBRC <> 0.
CONCATENATE LV_DRIVE LV_O_PATH INTO LV_DIRECT.
ENDIF.

*********************************************** #002 MOD 20121106 END **
*----- CHANGINGパラメータに値を移す
CV_DIRECT = LV_DIRECT.                       " ディレクトリ名
CV_FILEN  = LV_FILEN.                        " ファイル名(拡張子を含む)
CV_EXTSN  = LV_EXTSN.                        " 拡張子

ENDFORM.                               " FRM_SPLIT_PATH
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_DIRECT
*&---------------------------------------------------------------------*
*       ディレクトリ存在チェック
*----------------------------------------------------------------------*
*      -->UV_DIRECT     :ディレクトリ名
*      <--CS_ERRMSG     :エラーメッセージ構造
*----------------------------------------------------------------------*
FORM FRM_CHECK_DIRECT USING    UV_DIRECT TYPE ANY
CHANGING CS_ERRMSG TYPE SYMSG.

DATA: LV_DIRECT TYPE STRING,                 " ディレクトリ名
LV_FLG_WORK  TYPE ABAP_BOOL.           " 結果

CLEAR: CS_ERRMSG.

*----- 値の型合わせ
LV_DIRECT = UV_DIRECT.                       " ディレクトリ名

*----- メソッドの呼出し：ディレクトリの存在チェック
CALL METHOD CL_GUI_FRONTEND_SERVICES=>DIRECTORY_EXIST
EXPORTING
DIRECTORY            = LV_DIRECT         " ディレクトリ名
RECEIVING
RESULT               = LV_FLG_WORK       " 結果(存在する場合：'X')
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
WRONG_PARAMETER      = 3
NOT_SUPPORTED_BY_GUI = 4
OTHERS               = 5.

*----- エラーの場合
IF SY-SUBRC <> 0
OR LV_FLG_WORK = SPACE.                      " 結果(存在する場合：'X')
* メッセージデータのセット
CS_ERRMSG-MSGID = 'ZGR_FI_00'.           " メッセージクラス
CS_ERRMSG-MSGNO = '510'.                 " メッセージ番号
*   MESSAGE⇒　出力ファイル名(&1)に誤りがあります。
ENDIF.

ENDFORM.                               " FRM_CHECK_DIRECT
*&---------------------------------------------------------------------*
*&      Form  FRM_SPLIT_CHECK_DIRECT
*&---------------------------------------------------------------------*
*       ディレクトリ名分割 & 存在チェック
*----------------------------------------------------------------------*
*      -->UV_PATH       :ファイル名
*      <--CS_ERRMSG     :エラーメッセージ構造
*----------------------------------------------------------------------*
FORM FRM_SPLIT_CHECK_DIRECT USING    UV_PATH   TYPE ANY
CHANGING CS_ERRMSG TYPE SYMSG.
DATA:
LV_DIRECT TYPE STRING,                     " ディレクトリ名
LV_SPACE  TYPE STRING.                     " 使用なし(CHANGING用)

CLEAR: CS_ERRMSG.

*----- ファイルパス分割によるディレクトリ名取得
PERFORM FRM_SPLIT_PATH USING    UV_PATH      " ファイル名
CHANGING LV_DIRECT    " ディレクトリ名
LV_SPACE     " ファイル名(拡張子あり)
LV_SPACE.    " 拡張子

*----- ディレクトリ存在チェック
PERFORM FRM_CHECK_DIRECT USING    LV_DIRECT  " ディレクトリ名
CHANGING CS_ERRMSG. " エラーメッセージ構造

ENDFORM.                               " FRM_SPLIT_CHECK_DIRECT
