************************************************************************
* REPORT        ZS010700
* PROGRAM       受注残データ更新
*               ※ZYS010402をコピーして新規受注残データ更新を作成
* MAKE DATE     2011.12.16
* CODING BY     H.JO(SOLFIS)
* 変更履歴      2013.05.08
*               アドオンテーブル更新時のテーブルロックキー変更
*               2014.09.16
*               グローバル化対応
*               2015.03.12
*               DMW3330 受注残一覧表　未出荷数量表示について
************************************************************************
REPORT ZS010700     MESSAGE-ID  y1
LINE-SIZE  170
LINE-COUNT  58
NO STANDARD PAGE HEADING.

TYPE-POOLS: slis.

INCLUDE <icon>.
INCLUDE <symbol>.

TABLES:
VBAK.

TYPES:
* 販売伝票: ヘッダ状況および管理データ
BEGIN OF TYP_VBUK,
VBELN  TYPE VBUK-VBELN,      "販売管理伝票番号
VBTYP  TYPE VBUK-VBTYP,      "販売管理伝票カテゴリ
END OF TYP_VBUK,
* 販売伝票: 明細ステータス
BEGIN OF TYP_VBUP,
VBELN  TYPE VBUP-VBELN,      "販売管理伝票番号
POSNR  TYPE VBUP-POSNR,      "明細番号 (販売管理伝票)
WBSTA  TYPE VBUP-WBSTA,      "在庫移動ステータス
END OF TYP_VBUP,
* 販売伝票: ヘッダデータ
BEGIN OF TYP_VBAK,
VBELN  TYPE VBAK-VBELN,      "販売伝票
VKBUR  TYPE VBAK-VKBUR,      "営業所
VKGRP  TYPE VBAK-VKGRP,      "営業グループ
KUNNR  TYPE VBAK-KUNNR,      "受注先
AUART  TYPE VBAK-AUART,      "販売伝票タイプ
AUDAT  TYPE VBAK-AUDAT,      "伝票日付 (受信日/送信日)
ERDAT  TYPE VBAK-ERDAT,      "レコード登録日
ERZET  TYPE VBAK-ERZET,      "登録時刻
ERNAM  TYPE VBAK-ERNAM,      "オブジェクト登録者名
END OF TYP_VBAK,
* 販売伝票: 明細データ
BEGIN OF TYP_VBAP,
VBELN  TYPE VBAP-VBELN,      "販売伝票
POSNR  TYPE VBAP-POSNR,      "販売伝票明細
MATNR  TYPE VBAP-MATNR,      "品目コード
KWMENG TYPE VBAP-KWMENG,     "累積受注数量 (販売単位)
KBMENG TYPE VBAP-KBMENG,     "累積確認数量 (販売数量単位)
VRKME  TYPE VBAP-VRKME,      "販売単位
MATKL  TYPE VBAP-MATKL,      "品目グループ
MVGR1  TYPE VBAP-MVGR1,      "商品グループ
SPART  TYPE VBAP-SPART,      "製品部門
NETPR  TYPE VBAP-NETPR,      "正味価格
KPEIN  TYPE VBAP-KPEIN,      "価格条件単位
WAERK  TYPE VBAP-WAERK,      "販売伝票通貨
CHARG  TYPE VBAP-CHARG,      "ロット番号
PRODH  TYPE VBAP-PRODH,      "品目階層
PSTYV  TYPE VBAP-PSTYV,      "明細カテゴリ (販売伝票)
ARKTX  TYPE VBAP-ARKTX,      "テキスト (短): 受注明細
END OF TYP_VBAP,
* 販売伝票: 納入日程行データ
BEGIN OF TYP_VBEP,
VBELN  TYPE VBEP-VBELN,      "販売伝票
POSNR  TYPE VBEP-POSNR,      "販売伝票明細
ETENR  TYPE VBEP-ETENR,      "納入日程行
EDATU  TYPE VBEP-EDATU,      "納入日程日付
LIFSP  TYPE VBEP-LIFSP,      "出荷ブロック中の納入日程行
END OF TYP_VBEP,
* 販売伝票: 出荷伝票: 明細データ
BEGIN OF TYP_LIPS,
VBELN  TYPE LIPS-VBELN,      "出荷伝票
POSNR  TYPE LIPS-POSNR,      "出荷明細
LFIMG  TYPE LIPS-LFIMG,      "出荷数量実績 (販売単位)
VRKME  TYPE LIPS-VRKME,      "販売単位
VGBEL  TYPE LIPS-VGBEL,      "参照伝票番号
VGPOS  TYPE LIPS-VGPOS,      "参照明細番号
END OF TYP_LIPS.

* 内部テーブル
DATA:
GF_VBUK TYPE TYP_VBUK,
GT_VBUK TYPE TABLE OF TYP_VBUK,

GF_VBAK TYPE TYP_VBAK,
GT_VBAK TYPE TABLE OF TYP_VBAK,

GF_VBUP TYPE TYP_VBUP,
GT_VBUP TYPE TABLE OF TYP_VBUP,

GF_VBEP TYPE TYP_VBEP,
GT_VBEP TYPE TABLE OF TYP_VBEP,

GF_VBAP TYPE TYP_VBAP,
GT_VBAP TYPE TABLE OF TYP_VBAP,

GF_LIPS TYPE TYP_LIPS,
GT_LIPS TYPE TABLE OF TYP_LIPS,

GF_ZS0040 TYPE ZS0040,
GT_ZS0040 TYPE TABLE OF ZS0040.

* REUSE_ALV_EVENTS_GET 用
DATA: W_EVENT TYPE SLIS_T_EVENT.

* 表示データ
DATA: GT_OUT LIKE STANDARD TABLE OF ZS0040 WITH HEADER LINE.

* REUSE_ALV_GRID_DISPLAY 用
DATA: W_LAYOUT      TYPE SLIS_LAYOUT_ALV,
W_VARIANT     LIKE DISVARIANT,
W_EXIT1,
W_EXIT2       TYPE SLIS_EXIT_BY_USER,
W_REPID       LIKE SY-REPID,
W_HEADER_FORM TYPE SLIS_FORMNAME VALUE 'TOP_OF_PAGE',
W_UCOMM_FORM  TYPE SLIS_FORMNAME VALUE 'USER_COMMAND'.

* REUSE_ALV_COMMENTARY_WRITE 用
DATA: GF_HEADER TYPE SLIS_LISTHEADER,
GT_HEADER TYPE SLIS_T_LISTHEADER.

* コンスタント
CONSTANTS:
CNS_X           TYPE C VALUE 'X',      "フラグ
CNS_COMP        TYPE C VALUE 'C',      "処理完了
CNS_INCOMP      TYPE C VALUE 'B',      "一部処理済
CNS_SPRAS_JA(2) TYPE C VALUE 'JA',     "言語キー
CNS_HITYP       TYPE C VALUE 'A',      "得意先階層タイプ(標準階層)
* 販売管理伝票カテゴリ
CNS_VBTYP_C     TYPE C VALUE 'C',      "受注
CNS_VBTYP_H     TYPE C VALUE 'H',      "返品
CNS_VBTYP_K     TYPE C VALUE 'K',      "クレジットメモ依頼
CNS_VBTYP_L     TYPE C VALUE 'L',      "デビットメモ依頼
CNS_VBTYP_I     TYPE C VALUE 'I',      "無償出荷
CNS_VBTYP_J     TYPE C VALUE 'J',      "出荷
CNS_VBTYP_T     TYPE C VALUE 'T',      "仕入返品 - 受注
* 取引先機能
CNS_PARVW_VE(2) TYPE C VALUE 'VE',     "営業員
CNS_PARVW_RE(2) TYPE C VALUE 'RE',     "請求先
CNS_PARVW_WE(2) TYPE C VALUE 'WE',     "出荷先
* 販売伝票タイプ
CNS_AUART_TA(2) TYPE C VALUE 'TA',     "標準受注
CNS_AUART_RE(2) TYPE C VALUE 'RE',     "返品
CNS_AUART_KL(2) TYPE C VALUE 'KL',     "無償出荷
CNS_AUART_KB(2) TYPE C VALUE 'KB',     "預託品引渡
CNS_AUART_KE(2) TYPE C VALUE 'KE',     "預託品出庫
CNS_AUART_KR(2) TYPE C VALUE 'KR',     "預託品返品
CNS_AUART_KA(2) TYPE C VALUE 'KA',     "預託品引取
CNS_AUART_G2(2) TYPE C VALUE 'G2',     "クレジットメモ依頼
CNS_AUART_L2(2) TYPE C VALUE 'L2'.     "デビットメモ依頼

************************************************************************
*** 選択画面
SELECTION-SCREEN BEGIN OF BLOCK B01 WITH FRAME TITLE TEXT-001.
SELECTION-SCREEN BEGIN OF LINE.
*   受注残データ更新
PARAMETERS P_UPD RADIOBUTTON GROUP RB1 DEFAULT 'X'.
SELECTION-SCREEN COMMENT (30) TEXT-002 FOR FIELD P_UPD.
*   帳票出力
PARAMETERS P_OUT RADIOBUTTON GROUP RB1.
SELECTION-SCREEN COMMENT (30) TEXT-003 FOR FIELD P_OUT.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK B01.

SELECTION-SCREEN SKIP.

SELECTION-SCREEN BEGIN OF BLOCK B02 WITH FRAME TITLE TEXT-004.
* 販売伝票タイプ
SELECT-OPTIONS:P_AUART FOR VBAK-AUART.
* 営業所
SELECT-OPTIONS:P_VKBUR FOR VBAK-VKBUR.
SELECTION-SCREEN END OF BLOCK B02.
************************************************************************

************************************************************************
START-OF-SELECTION.

CASE CNS_X.
*   受注残データ更新
WHEN P_UPD.
*     未出荷のデータ
PERFORM MISHUKKA_PROC.

*     出荷済のデータ
PERFORM SHUKKA_PROC.

*     受注残データが存在しない場合
IF GT_ZS0040 IS INITIAL.
MESSAGE i008.
STOP.
ENDIF.

*     受注残分析データテーブル更新
PERFORM UPDATE_ZS0040.

*   受注残データテーブル照会
WHEN P_OUT.
*     受注残分析データテーブル照会
PERFORM ALV_ZS0040.

ENDCASE.

END-OF-SELECTION.
************************************************************************
*&---------------------------------------------------------------------*
*&      Form  MISHUKKA_PROC
*&---------------------------------------------------------------------*
*       出荷未のデータ
*----------------------------------------------------------------------*
form MISHUKKA_PROC.

* 販売伝票: ヘッダ状況および管理データの取得(未出荷データ)
PERFORM GET_MISHUKKA_VBUK.
* 販売伝票: ヘッダデータの取得(未出荷データ)
PERFORM GET_MISHUKKA_VBAK.
* 販売伝票: 明細ステータスの取得(未出荷データ)
PERFORM GET_MISHUKKA_VBUP.
* 販売伝票: 明細データの取得(未出荷データ)
PERFORM GET_MISHUKKA_VBAP.
* 販売伝票: 納入日程行データの取得(未出荷データ)
PERFORM GET_MISHUKKA_VBEP.

* 受注残データ作成(未出荷データ)
PERFORM SET_DATA_MISHUKKA.

endform.                    " PROC_MISUKKA
*&---------------------------------------------------------------------*
*&      Form  GET_MISHUKKA_VBUK
*&---------------------------------------------------------------------*
*       販売伝票: ヘッダ状況および管理データの取得(未出荷データ)
*----------------------------------------------------------------------*
form GET_MISHUKKA_VBUK.

SELECT VBELN      "販売管理伝票番号
VBTYP      "販売管理伝票カテゴリ
INTO TABLE GT_VBUK
FROM VBUK
WHERE GBSTK <> CNS_COMP        "全ステータス
AND VBTYP IN (CNS_VBTYP_C,   "受注
CNS_VBTYP_H,   "返品
CNS_VBTYP_K,   "クレジットメモ依頼
CNS_VBTYP_L,   "でビットメモ依頼
CNS_VBTYP_I).  "無償出荷

IF SY-SUBRC <> 0.
MESSAGE S008.
STOP.
ENDIF.
endform.                    " GET_MISHUKKA_VBUK
*
*&---------------------------------------------------------------------*
*&      Form  GET_MISHUKKA_VBAK
*&---------------------------------------------------------------------*
*       販売伝票: ヘッダデータの取得(未出荷データ)
*----------------------------------------------------------------------*
form GET_MISHUKKA_VBAK.

CHECK NOT GT_VBUK IS INITIAL.

SELECT VBELN      "販売伝票
VKBUR      "営業所
VKGRP      "営業グループ
KUNNR      "受注先
AUART      "販売伝票タイプ
AUDAT      "伝票日付 (受信日/送信日)
ERDAT      "レコード登録日
ERZET      "登録時刻
ERNAM      "オブジェクト登録者名
INTO TABLE GT_VBAK
FROM VBAK
FOR ALL ENTRIES IN GT_VBUK
WHERE VBELN = GT_VBUK-VBELN
AND VKBUR IN P_VKBUR
AND AUART IN P_AUART.

endform.                    " GET_MISHUKKA_VBAK
*&---------------------------------------------------------------------*
*&      Form  GET_MISHUKKA_VBUP
*&---------------------------------------------------------------------*
*       販売伝票: 明細ステータスの取得(未出荷データ)
*----------------------------------------------------------------------*
form GET_MISHUKKA_VBUP.

CHECK NOT GT_VBAK IS INITIAL.

SELECT VBELN    "販売管理伝票番号
POSNR    "明細番号 (販売管理伝票)
WBSTA    "在庫移動ステータス
INTO TABLE GT_VBUP
FROM VBUP
FOR ALL ENTRIES IN GT_VBAK
WHERE VBELN = GT_VBAK-VBELN    "販売管理伝票番号
AND LFSTA <> CNS_COMP        "出荷ステータス
AND GBSTA <> CNS_COMP.       "全処理ステータス

endform.                    " GET_MISHUKKA_VBUP
*&---------------------------------------------------------------------*
*&      Form  GET_MISHUKKA_VBEP
*&---------------------------------------------------------------------*
*       販売伝票: 納入日程行データの取得(未出荷データ)
*----------------------------------------------------------------------*
form GET_MISHUKKA_VBEP.

CHECK NOT GT_VBUP IS INITIAL.

SELECT VBELN      "販売伝票
POSNR      "販売伝票明細
ETENR      "納入日程行
EDATU      "納入日程日付
LIFSP      "LIFSP
INTO TABLE GT_VBEP
FROM VBEP
FOR ALL ENTRIES IN GT_VBUP
WHERE VBELN = GT_VBUP-VBELN      "販売伝票
AND POSNR = GT_VBUP-POSNR.     "販売伝票明細

endform.                    " GET_MISHUKKA_VBEP
*&---------------------------------------------------------------------*
*&      Form  GET_MISHUKKA_VBAP
*&---------------------------------------------------------------------*
*       販売伝票: 明細データの取得(未出荷データ)
*----------------------------------------------------------------------*
form   GET_MISHUKKA_VBAP.

CHECK NOT GT_VBUP IS INITIAL.

SELECT VBELN      "販売伝票
POSNR      "販売伝票明細
MATNR      "品目コード
KWMENG     "累積受注数量 (販売単位)
KBMENG     "累積確認数量 (販売数量単位)
VRKME      "販売単位
MATKL      "品目グループ
MVGR1      "商品グループ
SPART      "製品部門
NETPR      "正味価格
KPEIN      "価格条件単位
WAERK      "販売伝票通貨
CHARG      "ロット番号
PRODH      "品目階層
PSTYV      "明細カテゴリ (販売伝票)
ARKTX      "テキスト (短): 受注明細
INTO TABLE GT_VBAP
FROM VBAP
FOR ALL ENTRIES IN GT_VBUP
WHERE VBELN = GT_VBUP-VBELN      "販売伝票
AND POSNR = GT_VBUP-POSNR      "販売伝票明細
AND ABGRU = SPACE.             "見積および受注の拒否理由

endform.                    " GET_MISHUKKA_VBAP
*&---------------------------------------------------------------------*
*&      Form  SET_DATA_MISHUKKA
*&---------------------------------------------------------------------*
*       受注残データ作成(未出荷データ)
*----------------------------------------------------------------------*
form SET_DATA_MISHUKKA.
DATA:
LF_ZS0040 TYPE ZS0040,
L_VBTYP   TYPE VBFA-VBTYP_N.

* ソート
SORT GT_VBAK BY VBELN.
SORT GT_VBAP BY VBELN POSNR.
SORT GT_VBEP BY VBELN POSNR ETENR.
SORT GT_VBUK BY VBELN.
SORT GT_VBUP BY VBELN POSNR.

LOOP AT GT_VBAK INTO GF_VBAK.

CLEAR:
LF_ZS0040,
GF_VBUK.

READ TABLE GT_VBUK INTO GF_VBUK
WITH KEY VBELN = GF_VBAK-VBELN
BINARY SEARCH.

IF SY-SUBRC <> 0.
CONTINUE.
ENDIF.

LF_ZS0040-VBELN = GF_VBAK-VBELN.    "販売伝票
LF_ZS0040-VKBUR = GF_VBAK-VKBUR.    "営業所
LF_ZS0040-VKGRP = GF_VBAK-VKGRP.    "営業グループ
LF_ZS0040-KUNNR = GF_VBAK-KUNNR.    "得意先コード
LF_ZS0040-AUART = GF_VBAK-AUART.    "販売伝票タイプ
LF_ZS0040-AUDAT = GF_VBAK-AUDAT.    "伝票日付 (受信日/送信日)
LF_ZS0040-ERDAT = GF_VBAK-ERDAT.    "レコード登録日
LF_ZS0040-ERZET = GF_VBAK-ERZET.    "登録時刻
LF_ZS0040-ERNAM = GF_VBAK-ERNAM.    "オブジェクト登録者名

*   得意先発注番号の取得
PERFORM GET_BSTNK USING    GF_VBAK-VBELN
CHANGING LF_ZS0040-BSTNK.

LOOP AT GT_VBUP INTO  GF_VBUP
WHERE VBELN = GF_VBAK-VBELN.

CLEAR:
GF_ZS0040,
GF_VBAP,
GF_VBEP.

GF_ZS0040 = LF_ZS0040.

READ TABLE GT_VBAP INTO GF_VBAP
WITH KEY VBELN = GF_VBUP-VBELN
POSNR = GF_VBUP-POSNR
BINARY SEARCH.

IF SY-SUBRC <> 0.
CONTINUE.
ENDIF.

READ TABLE GT_VBEP INTO GF_VBEP
WITH KEY VBELN = GF_VBUP-VBELN
POSNR = GF_VBUP-POSNR
BINARY SEARCH.

IF SY-SUBRC <> 0.
CONTINUE.
ENDIF.

GF_ZS0040-POSNR     = GF_VBAP-POSNR.     "販売伝票明細
GF_ZS0040-MATNR     = GF_VBAP-MATNR.     "品目コード
GF_ZS0040-JUCHU     = GF_VBAP-KWMENG.    "受注数量
GF_ZS0040-PICKUP    = GF_VBAP-KBMENG.    "引当済数量
GF_ZS0040-VRKME     = GF_VBAP-VRKME.     "販売単位
GF_ZS0040-MATKL     = GF_VBAP-MATKL.     "品目グループ
GF_ZS0040-SPART     = GF_VBAP-SPART.     "製品部門
GF_ZS0040-NOUKI     = GF_VBEP-EDATU.     "出荷日付
GF_ZS0040-LIFSP     = GF_VBEP-LIFSP.     "出荷ブロック
GF_ZS0040-WAERK     = GF_VBAP-WAERK.     "伝票通貨
GF_ZS0040-JTANKA    = GF_VBAP-NETPR.     "受注単価
GF_ZS0040-TANITANKA = GF_VBAP-KPEIN.     "単位単価
GF_ZS0040-CHARG     = GF_VBAP-CHARG.     "ロット
GF_ZS0040-PRODH     = GF_VBAP-PRODH.     "品目階層
GF_ZS0040-PSTYV     = GF_VBAP-PSTYV.     "明細カテゴリ
GF_ZS0040-MAKTX     = GF_VBAP-ARKTX.     "品目テキスト

*     売上済数量取得
PERFORM GET_SEIKYU USING    GF_ZS0040-VBELN
GF_ZS0040-POSNR
GF_ZS0040-AUART
GF_VBUK-VBTYP
CHANGING GF_ZS0040-SEIKYU.
*** DELETE-START DMW3330 2015.03.12
**     売上済数量を出荷済数量と出庫済数量に反映
*      GF_ZS0040-SHUKKA = GF_ZS0040-SEIKYU.
*      GF_ZS0040-SHUKKO = GF_ZS0040-SEIKYU.
*** DELETE-END DMW3330 2015.03.12

*     金額計算
PERFORM KINNGAKU_PROC USING    GF_ZS0040-JTANKA
GF_ZS0040-TANITANKA
GF_ZS0040-JUCHU
GF_ZS0040-PICKUP
GF_ZS0040-SHUKKA
GF_ZS0040-SHUKKO
GF_ZS0040-SEIKYU
CHANGING GF_ZS0040-JUCHUKG
GF_ZS0040-PICKUPKG
GF_ZS0040-SHUKKAKG
GF_ZS0040-SHUKKOKG
GF_ZS0040-SEIKYUKG.

*     品目グループ取得
PERFORM GET_WGBEZ USING    GF_ZS0040-MATKL
CHANGING GF_ZS0040-WGBEZ.

*     品目階層名取得
PERFORM GET_VTEXT USING    GF_ZS0040-PRODH
CHANGING GF_ZS0040-VTEXT.

*     出荷伝票: ブロック理由/範囲: テキスト取得
PERFORM GET_VTEXT2 USING    GF_ZS0040-LIFSP
CHANGING GF_ZS0040-VTEXT2.

*     得意先名称取得
PERFORM GET_KNA1 USING    GF_ZS0040-KUNNR
CHANGING GF_ZS0040-JNAME.

*     最上位得意先名称取得
PERFORM GET_NAME1 USING    GF_ZS0040-KUNNR
CHANGING GF_ZS0040-KUNNR1D
GF_ZS0040-NAME1.

*     取引先情報取得
PERFORM GET_VBPA USING    GF_ZS0040-VBELN
GF_ZS0040-POSNR
CHANGING GF_ZS0040-PERNR
GF_ZS0040-KUNRE
GF_ZS0040-KUNWE.

*     請求先名称取得
IF NOT GF_ZS0040-KUNRE IS INITIAL.
PERFORM GET_KNA1 USING    GF_ZS0040-KUNRE
CHANGING GF_ZS0040-NAME1_S.
ENDIF.

*     出荷先名称取得
IF NOT GF_ZS0040-KUNWE IS INITIAL.
PERFORM GET_KNA1 USING    GF_ZS0040-KUNWE
CHANGING GF_ZS0040-NAME1_W.
ENDIF.

*     販売明細テキスト(輸送手段等)取得
PERFORM GET_TEXT USING    GF_ZS0040-VBELN
GF_ZS0040-POSNR
CHANGING GF_ZS0040-YUSOUTOU.

APPEND GF_ZS0040 TO GT_ZS0040.

ENDLOOP.

ENDLOOP.

endform.                    " SET_DATA_MISHUKKA
*&---------------------------------------------------------------------*
*&      Form  GET_BSTNK
*&---------------------------------------------------------------------*
*       得意先発注番号の取得
*----------------------------------------------------------------------*
*      -->AI_VBELN  販売伝票
*      <--AO_BSTNK  得意先発注番号
*----------------------------------------------------------------------*
form GET_BSTNK using    AI_VBELN
changing AO_BSTNK.

DATA L_BSTKD TYPE VBKD-BSTKD.

SELECT SINGLE BSTKD
INTO L_BSTKD
FROM VBKD
WHERE VBELN = AI_VBELN
AND POSNR = '000000'.

IF SY-SUBRC = 0.
AO_BSTNK = L_BSTKD.
ENDIF.

endform.                    " GET_BSTNK
*&---------------------------------------------------------------------*
*&      Form  GET_SEIKYU
*&---------------------------------------------------------------------*
*       売上済数量取得
*----------------------------------------------------------------------*
*      -->AI_VBELN   販売伝票
*      -->AI_POSNR   販売伝票明細
*      -->AI_AUART   販売伝票タイプ
*      -->AI_VBTYP   伝票カテゴリ
*      <--AO_SEIKYU  請求済数量
*----------------------------------------------------------------------*
form GET_SEIKYU using    AI_VBELN
AI_POSNR
AI_AUART
AI_VBTYP
changing AO_SEIKYU.

TYPES:
BEGIN OF TYP_VBFA,
VBELN TYPE VBFA-VBELN,
POSNN TYPE VBFA-POSNN,
END OF TYP_VBFA.

DATA:
LF_VBFA TYPE TYP_VBFA,
LT_VBFA TYPE TABLE OF TYP_VBFA,
L_VBTYP TYPE VBFA-VBTYP_N,
L_VBELN TYPE VBUP-VBELN,
L_LFIMG TYPE LIPS-LFIMG.

IF AI_AUART = CNS_AUART_KA OR      "預託品引取
AI_VBTYP = CNS_VBTYP_H.         "返品

L_VBTYP = CNS_VBTYP_T.           "仕入返品 - 受注

ELSEIF AI_VBTYP = CNS_VBTYP_C OR   "受注
AI_VBTYP = CNS_VBTYP_I.     "無償出荷

L_VBTYP = CNS_VBTYP_J.           "出荷

ELSE.

L_VBTYP = AI_VBTYP.

ENDIF.

* 伝票フロー
SELECT VBELN      "後続の販売管理伝票
POSNN      "販売管理伝票次明細
INTO TABLE LT_VBFA
FROM VBFA
WHERE VBELV   = AI_VBELN      "先行販売管理伝票
AND POSNV   = AI_POSNR      "販売管理伝票前明細
AND VBTYP_N = L_VBTYP.      "継続伝票の伝票カテゴリ

LOOP AT LT_VBFA INTO LF_VBFA.

CLEAR:
L_VBELN,
L_LFIMG.

*   販売伝票: 明細ステータス
SELECT SINGLE VBELN    "販売管理伝票番号
INTO L_VBELN
FROM VBUP
WHERE VBELN = LF_VBFA-VBELN    "販売管理伝票番号
AND POSNR = LF_VBFA-POSNN    "明細番号 (販売管理伝票)
AND GBSTA = CNS_COMP.        "販売管理伝票明細の全処理ステータス

IF SY-SUBRC = 0.
SELECT SINGLE LFIMG   "出荷数量実績 (販売単位)
INTO L_LFIMG
FROM LIPS
WHERE VBELN = LF_VBFA-VBELN    "出荷伝票
AND POSNR = LF_VBFA-POSNN.   "出荷明細

ADD L_LFIMG TO AO_SEIKYU.

ENDIF.

ENDLOOP.

endform.                    " GET_SEIKYU
*&---------------------------------------------------------------------*
*&      Form  KINNGAKU_PROC
*&---------------------------------------------------------------------*
*       金額計算
*----------------------------------------------------------------------*
*      -->AI_JTANKA     受注単価
*      -->AI_TANITANKA  単位単価
*      -->AI_JUCHU      受注数量
*      -->AI_PICKUP     引当済数量
*      -->AI_SHUKKA     出荷済数量
*      -->AI_SHUKKO     出庫済数量
*      -->AI_SEIKYU     売上済数量
*      <--AO_JUCHUKG    受注金額
*      <--AO_PICKUPKG   引当済金額
*      <--AO_SHUKKAKG   出荷済金額
*      <--AO_SHUKKOKG   出庫済金額
*      <--AO_SEIKYUKG   売上済金額
*----------------------------------------------------------------------*
form KINNGAKU_PROC using    AI_JTANKA
AI_TANITANKA
AI_JUCHU
AI_PICKUP
AI_SHUKKA
AI_SHUKKO
AI_SEIKYU
changing AO_JUCHUKG
AO_PICKUPKG
AO_SHUKKAKG
AO_SHUKKOKG
AO_SEIKYUKG.

* 単価が「0」の場合
IF AI_JTANKA = 0.
AO_JUCHUKG = 0.
AO_PICKUPKG = 0.
AO_SHUKKAKG = 0.
AO_SHUKKOKG = 0.
AO_SEIKYUKG = 0.
ENDIF.

* 受注金額
IF AI_JUCHU = 0.
AO_JUCHUKG = 0.
ELSE.
AO_JUCHUKG = AI_JTANKA * AI_JUCHU / AI_TANITANKA.
ENDIF.

* 引当済金額
IF AI_PICKUP = 0.
AO_PICKUPKG = 0.
ELSE.
AO_PICKUPKG = AI_JTANKA * AI_PICKUP / AI_TANITANKA.
ENDIF.

* 出荷金額
IF AI_SHUKKA = 0.
AO_SHUKKAKG = 0.
ELSE.
AO_SHUKKAKG = AI_JTANKA * AI_SHUKKA / AI_TANITANKA.
ENDIF.

* 出庫済金額
IF AI_SHUKKO = 0.
AO_SHUKKOKG = 0.
ELSE.
AO_SHUKKOKG = AI_JTANKA * AI_SHUKKO / AI_TANITANKA.
ENDIF.

* 売上済金額
IF AI_SEIKYU = 0.
AO_SEIKYUKG = 0.
ELSE.
AO_SEIKYUKG = AI_JTANKA * AI_SEIKYU / AI_TANITANKA.
ENDIF.
*** INSERT-START DMW3330 2015.03.12
*  数量は出荷済未出庫数量、出庫未売上数量、売上済数量であるが、
*  出荷済金額は出荷済未出庫、出庫未売上、売上済の総額となる
*  出庫済金額も同様に出庫未売上、売上済の総額となる
AO_SHUKKOKG = AO_SHUKKOKG + AO_SEIKYUKG.
AO_SHUKKAKG = AO_SHUKKAKG + AO_SHUKKOKG.
*** INSERT-END DMW3330 2015.03.12
endform.                    " KINNGAKU_PROC
*&---------------------------------------------------------------------*
*&      Form  GET_WGBEZ
*&---------------------------------------------------------------------*
*       品目グループ取得
*----------------------------------------------------------------------*
*      -->AI_MATKL  品目グループ
*      <--AO_WGBEZ  品目グループ名
*----------------------------------------------------------------------*
form GET_WGBEZ using    AI_MATKL
changing AO_WGBEZ.

DATA L_WGBEZ TYPE ZS0040-WGBEZ.

SELECT SINGLE WGBEZ      "品目グループテキスト
INTO L_WGBEZ
FROM T023T
WHERE MATKL = AI_MATKL. "品目グループ

IF SY-SUBRC = 0.
AO_WGBEZ = L_WGBEZ.
ENDIF.

endform.                    " GET_WGBEZ
*&---------------------------------------------------------------------*
*&      Form  GET_VTEXT
*&---------------------------------------------------------------------*
*       品目階層名取得
*----------------------------------------------------------------------*
*      -->AI_PRODH  品目階層
*      <--AO_VTEXT  品目階層名
*----------------------------------------------------------------------*
form GET_VTEXT using    AI_PRODH
changing AO_VTEXT.

DATA L_VTEXT TYPE ZS0040-VTEXT.

SELECT SINGLE VTEXT      "テキスト
INTO L_VTEXT
FROM T179T
WHERE PRODH = AI_PRODH. "品目階層

IF SY-SUBRC = 0.
AO_VTEXT = L_VTEXT.
ENDIF.

endform.                    " GET_VTEXT
*&---------------------------------------------------------------------*
*&      Form  GET_VTEXT2
*&---------------------------------------------------------------------*
*       出荷伝票: ブロック理由/範囲: テキスト取得
*----------------------------------------------------------------------*
*      -->AI_LIFSP   出荷ブロック中の納入日程行
*      <--AO_VTEXT2  テキスト
*----------------------------------------------------------------------*
form GET_VTEXT2 using    AI_LIFSP
changing AO_VTEXT2.

DATA L_VTEXT2 TYPE ZS0040-VTEXT2.

SELECT SINGLE VTEXT            "テキスト
INTO L_VTEXT2
FROM TVLST
WHERE LIFSP = AI_LIFSP        "初期出荷ブロック
AND SPRAS = CNS_SPRAS_JA.   "言語キー

IF SY-SUBRC = 0.
AO_VTEXT2 = L_VTEXT2.
ENDIF.
endform.                    " GET_VTEXT2
*&---------------------------------------------------------------------*
*&      Form  GET_NAME1
*&---------------------------------------------------------------------*
*       最上位得意先名称取得
*----------------------------------------------------------------------*
*      -->AI_KUNNR   得意先コード
*      <--AO_KUNNR1D 得意先階層レベル 4
*      <--AO_NAME1   得意先名称
*----------------------------------------------------------------------*
form GET_NAME1 using    AI_KUNNR
changing AO_KUNNR1D
AO_NAME1.

TYPES:
BEGIN OF TYP_KNVH,
KUNNR  TYPE KNVH-KUNNR,      "得意先
DATAB  TYPE KNVH-DATAB,      "割当用有効期間開始日
HKUNNR TYPE KNVH-HKUNNR,     "上位得意先階層の得意先番号
END OF TYP_KNVH.

DATA:
LF_KNVH  TYPE TYP_KNVH,
L_KUNNR  TYPE KNVH-KUNNR,
L_NAME1  TYPE KNA1-NAME1.

* 得意先階層取得
PERFORM GET_KNVH USING    AI_KUNNR
CHANGING LF_KNVH.

IF NOT LF_KNVH-HKUNNR IS INITIAL.
L_KUNNR = LF_KNVH-HKUNNR.
DO 4 TIMES.
CLEAR LF_KNVH.
PERFORM GET_KNVH USING    L_KUNNR
CHANGING LF_KNVH.
IF LF_KNVH-HKUNNR IS INITIAL.
AO_KUNNR1D = LF_KNVH-KUNNR.
EXIT.
ELSE.
L_KUNNR = LF_KNVH-HKUNNR.
ENDIF.
ENDDO.

*   最上位得意先名称取得
PERFORM GET_KNA1 USING    AO_KUNNR1D
CHANGING L_NAME1.

IF NOT L_NAME1 IS INITIAL.
AO_NAME1 = L_NAME1.
ENDIF.

ENDIF.

endform.                    " GET_NAME1
*&---------------------------------------------------------------------*
*&      Form  GET_KNVH
*&---------------------------------------------------------------------*
*       得意先階層取得
*----------------------------------------------------------------------*
*      -->AI_KUNNR  得意先コード
*      <--AO_KNVH   得意先階層
*----------------------------------------------------------------------*
form GET_KNVH using    AI_KUNNR
changing AO_KNVH.

SELECT KUNNR    "得意先
DATAB    "割当用有効期間開始日
HKUNNR   "上位得意先階層の得意先番号
INTO AO_KNVH
FROM KNVH
UP TO 1 ROWS
WHERE HITYP = CNS_HITYP   "得意先階層タイプ
AND KUNNR = AI_KUNNR    "得意先コード
AND DATAB <= SY-DATUM   "有効開始日
AND DATBI >= SY-DATUM   "有効終了日
ORDER BY DATAB DESCENDING.
ENDSELECT.

endform.                    " GET_KNVH
*&---------------------------------------------------------------------*
*&      Form  GET_KNA1
*&---------------------------------------------------------------------*
*       得意先名称取得
*----------------------------------------------------------------------*
*      -->AI_KUNNR　  得意先コード
*      <--AO_NAME1    得意先名称
*----------------------------------------------------------------------*
form GET_KNA1 using    AI_KUNNR
changing AO_NAME1.

SELECT SINGLE NAME1        "名称1
INTO AO_NAME1
FROM KNA1
WHERE KUNNR = AI_KUNNR.   "得意先コード

endform.                    " GET_KNA1
*&---------------------------------------------------------------------*
*&      Form  GET_VBPA
*&---------------------------------------------------------------------*
*       取引先情報取得
*----------------------------------------------------------------------*
*      -->AI_VBELN  受注伝票番号
*      -->AI_POSNR  受注伝票明細
*      <--AO_PERNR  営業員
*      <--AO_KUNRE  請求先
*      <--AO_KUNRE  出荷先
*----------------------------------------------------------------------*
form GET_VBPA using    AI_VBELN
AI_POSNR
changing AO_PERNR
AO_KUNRE
AO_KUNWE.

DATA:
L_PERNR TYPE VBPA-PERNR,
L_KUNRE TYPE VBPA-KUNNR.

* 営業員取得
SELECT SINGLE PERNR      "従業員番号
INTO AO_PERNR
FROM VBPA
WHERE VBELN = AI_VBELN        "販売管理伝票番号
AND POSNR = AI_POSNR        "明細番号 (販売管理伝票)
AND PARVW = CNS_PARVW_VE.   "取引先機能

IF SY-SUBRC <> 0.
SELECT SINGLE PERNR      "従業員番号
INTO AO_PERNR
FROM VBPA
WHERE VBELN = AI_VBELN        "販売管理伝票番号
AND POSNR = '000000'        "明細番号 (販売管理伝票)
AND PARVW = CNS_PARVW_VE.   "取引先機能
ENDIF.

* 請求先取得
SELECT SINGLE KUNNR    "得意先コード
INTO AO_KUNRE
FROM VBPA
WHERE VBELN = AI_VBELN        "販売管理伝票番号
AND POSNR = AI_POSNR        "明細番号 (販売管理伝票)
AND PARVW = CNS_PARVW_RE.   "取引先機能

IF SY-SUBRC <> 0.
SELECT SINGLE KUNNR    "得意先コード
INTO AO_KUNRE
FROM VBPA
WHERE VBELN = AI_VBELN        "販売管理伝票番号
AND POSNR = '000000'        "明細番号 (販売管理伝票)
AND PARVW = CNS_PARVW_RE.   "取引先機能
ENDIF.

* 出荷先取得
SELECT SINGLE KUNNR    "得意先コード
INTO AO_KUNWE
FROM VBPA
WHERE VBELN = AI_VBELN        "販売管理伝票番号
AND POSNR = AI_POSNR        "明細番号 (販売管理伝票)
AND PARVW = CNS_PARVW_WE.   "取引先機能

IF SY-SUBRC <> 0.
SELECT SINGLE KUNNR    "得意先コード
INTO AO_KUNWE
FROM VBPA
WHERE VBELN = AI_VBELN        "販売管理伝票番号
AND POSNR = '000000'        "明細番号 (販売管理伝票)
AND PARVW = CNS_PARVW_WE.   "取引先機能
ENDIF.

endform.                    " GET_VBPA
*&---------------------------------------------------------------------*
*&      Form  GET_TEXT
*&---------------------------------------------------------------------*
*       販売明細テキスト(輸送手段等)取得
*----------------------------------------------------------------------*
*      -->AI_VBELN     販売伝票
*      -->AI_POSNR     販売伝票明細
*      <--AO_YUSOUTOU  販売明細テキスト(輸送手段等)
*----------------------------------------------------------------------*
form GET_TEXT using    AI_VBELN
AI_POSNR
changing AO_YUSOUTOU.

DATA:
LF_TLINE TYPE TLINE,
LT_TLINE TYPE TABLE OF TLINE,
L_NAME TYPE THEAD-TDNAME.

MOVE AI_VBELN TO L_NAME+0(10) .
MOVE AI_POSNR TO L_NAME+10(6) .

CALL FUNCTION 'READ_TEXT'
EXPORTING
ID                            = 'Z910'
LANGUAGE                      = 'J'
NAME                          = L_NAME
OBJECT                        = 'VBBP'
TABLES
LINES                         = LT_TLINE
EXCEPTIONS
ID                            = 1
LANGUAGE                      = 2
NAME                          = 3
NOT_FOUND                     = 4
OBJECT                        = 5
REFERENCE_CHECK               = 6
WRONG_ACCESS_TO_ARCHIVE       = 7
OTHERS                        = 8
.
IF SY-SUBRC = 0.
READ TABLE LT_TLINE INTO LF_TLINE INDEX 1 .
MOVE LF_TLINE-TDLINE TO AO_YUSOUTOU.
ENDIF.

endform.                    " GET_TEXT
*&---------------------------------------------------------------------*
*&      Form  SHUKKA_PROC
*&---------------------------------------------------------------------*
*       出荷済のデータ
*----------------------------------------------------------------------*
form SHUKKA_PROC.

* 販売伝票: ヘッダ状況および管理データの取得(出荷済データ)
PERFORM GET_SHUKKA_VBUK.

* 販売伝票: 明細ステータスの取得(出荷済データ)
PERFORM GET_SHUKKA_VBUP.

* 販売伝票: 出荷伝票: 明細データの取得(出荷済データ)
PERFORM GET_SHUKKA_LIPS.


* 受注残データ作成(出荷済データ)
PERFORM SET_DATA_SHUKKA.

endform.                    " SHUKKA_PROC
*&---------------------------------------------------------------------*
*&      Form  GET_SHUKKA_VBUK
*&---------------------------------------------------------------------*
*       販売伝票: ヘッダ状況および管理データの取得(出荷済データ)
*----------------------------------------------------------------------*
form GET_SHUKKA_VBUK.

REFRESH GT_VBUK.

* 出荷伝票を取得
SELECT VBELN      "販売管理伝票番号
VBTYP      "販売管理伝票カテゴリ
INTO TABLE GT_VBUK
FROM VBUK
WHERE GBSTK <> CNS_COMP          "全処理ステータス
AND ( VBTYP = CNS_VBTYP_J OR   "販売管理伝票カテゴリ
VBTYP = CNS_VBTYP_T ).

endform.                    " GET_SHUKKA_VBUK
*&---------------------------------------------------------------------*
*&      Form  GET_SHUKKA_VBUP
*&---------------------------------------------------------------------*
*       販売伝票: 明細ステータスの取得(出荷済データ)
*----------------------------------------------------------------------*
form GET_SHUKKA_VBUP.

CHECK NOT GT_VBUK IS INITIAL.

REFRESH GT_VBUP.

SELECT VBELN      "販売管理伝票番号
POSNR      "明細番号 (販売管理伝票)
WBSTA      "在庫移動ステータス
INTO TABLE GT_VBUP
FROM VBUP
FOR ALL ENTRIES IN GT_VBUK
WHERE VBELN = GT_VBUK-VBELN    "販売管理伝票番号
AND GBSTA <> CNS_COMP.       "全処理ステータス

endform.                    " GET_SHUKKA_VBUP
*&---------------------------------------------------------------------*
*&      Form  GET_SHUKKA_LIPS
*&---------------------------------------------------------------------*
*       販売伝票: 出荷伝票: 明細データの取得(出荷済データ)
*----------------------------------------------------------------------*
form GET_SHUKKA_LIPS.

CHECK NOT GT_VBUP IS INITIAL.

SELECT VBELN      "出荷伝票
POSNR      "出荷明細
LFIMG      "出荷数量実績 (販売単位)
VRKME      "販売単位
VGBEL      "参照伝票番号
VGPOS      "参照明細番号
INTO TABLE GT_LIPS
FROM LIPS
FOR ALL ENTRIES IN GT_VBUP
WHERE VBELN = GT_VBUP-VBELN      "出荷伝票
AND POSNR = GT_VBUP-POSNR.     "出荷明細

endform.                    " GET_SHUKKA_LIPS
*&---------------------------------------------------------------------*
*&      Form  SET_DATA_SHUKKA
*&---------------------------------------------------------------------*
*       受注残データ作成(出荷済データ)
*----------------------------------------------------------------------*
form SET_DATA_SHUKKA.

* ソート
SORT GT_VBUK BY VBELN.
SORT GT_VBUP BY VBELN POSNR.
SORT GT_LIPS BY VBELN POSNR.

LOOP AT GT_LIPS INTO GF_LIPS.

CLEAR:
GF_VBUK,
GF_VBUP,
GF_ZS0040.

READ TABLE GT_VBUK INTO GF_VBUK
WITH KEY VBELN = GF_LIPS-VBELN.

IF SY-SUBRC <> 0.
CONTINUE.
ENDIF.

READ TABLE GT_VBUP INTO GF_VBUP
WITH KEY VBELN = GF_LIPS-VBELN
POSNR = GF_LIPS-POSNR.

READ TABLE GT_ZS0040 INTO GF_ZS0040
WITH KEY VBELN = GF_LIPS-VGBEL
POSNR = GF_LIPS-VGPOS.

IF SY-SUBRC = 0.
*** DELETE-START DMW3330 2015.03.12
**     出荷済数量
*      ADD GF_LIPS-LFIMG TO GF_ZS0040-SHUKKA.
*** DELETE-END DMW3330 2015.03.12
IF GF_VBUP-WBSTA = CNS_COMP.
*       出庫済数量
ADD GF_LIPS-LFIMG TO GF_ZS0040-SHUKKO.
*** INSERT-START DMW3330 2015.03.12
ELSE.
*       出荷済未出庫数量
ADD GF_LIPS-LFIMG TO GF_ZS0040-SHUKKA.
*** INSERT-END DMW3330 2015.03.12
ENDIF.

*     金額計算
PERFORM KINNGAKU_PROC USING    GF_ZS0040-JTANKA
GF_ZS0040-TANITANKA
GF_ZS0040-JUCHU
GF_ZS0040-PICKUP
GF_ZS0040-SHUKKA
GF_ZS0040-SHUKKO
GF_ZS0040-SEIKYU
CHANGING GF_ZS0040-JUCHUKG
GF_ZS0040-PICKUPKG
GF_ZS0040-SHUKKAKG
GF_ZS0040-SHUKKOKG
GF_ZS0040-SEIKYUKG.

MODIFY GT_ZS0040 FROM GF_ZS0040
TRANSPORTING SHUKKA
SHUKKO
SHUKKAKG
SHUKKOKG
WHERE VBELN = GF_ZS0040-VBELN
AND POSNR = GF_ZS0040-POSNR.

ELSE.
CLEAR:
GF_VBAK,
GF_VBAP,
GF_VBEP.

*     販売伝票: ヘッダデータの取得(出荷済データ)
PERFORM GET_SHUKKA_VBAK USING GF_LIPS-VGBEL.

IF GF_VBAK IS INITIAL.
CONTINUE.
ENDIF.

*     販売伝票: 明細データの取得(出荷済データ)
PERFORM GET_SHUKKA_VBAP USING GF_LIPS-VGBEL
GF_LIPS-VGPOS.

IF GF_VBAP IS INITIAL.
CONTINUE.
ENDIF.

*     販売伝票: 納入日程行データの取得(出荷済データ)
PERFORM GET_SHUKKA_VBEP USING GF_LIPS-VGBEL
GF_LIPS-VGPOS.

IF GF_VBEP IS INITIAL.
CONTINUE.
ENDIF.

GF_ZS0040-VBELN     = GF_VBAK-VBELN.    "販売伝票
GF_ZS0040-VKBUR     = GF_VBAK-VKBUR.    "営業所
GF_ZS0040-VKGRP     = GF_VBAK-VKGRP.    "営業グループ
GF_ZS0040-KUNNR     = GF_VBAK-KUNNR.    "得意先コード
GF_ZS0040-AUART     = GF_VBAK-AUART.    "販売伝票タイプ
GF_ZS0040-AUDAT     = GF_VBAK-AUDAT.    "伝票日付 (受信日/送信日)
GF_ZS0040-ERDAT     = GF_VBAK-ERDAT.    "レコード登録日
GF_ZS0040-ERZET     = GF_VBAK-ERZET.    "登録時刻
GF_ZS0040-ERNAM     = GF_VBAK-ERNAM.    "オブジェクト登録者名
GF_ZS0040-POSNR     = GF_VBAP-POSNR.    "販売伝票明細
GF_ZS0040-MATNR     = GF_VBAP-MATNR.    "品目コード
GF_ZS0040-JUCHU     = GF_VBAP-KWMENG.   "受注数量
GF_ZS0040-PICKUP    = GF_VBAP-KBMENG.   "引当済数量
GF_ZS0040-VRKME     = GF_VBAP-VRKME.    "販売単位
GF_ZS0040-MATKL     = GF_VBAP-MATKL.    "品目グループ
GF_ZS0040-SPART     = GF_VBAP-SPART.    "製品部門
GF_ZS0040-NOUKI     = GF_VBEP-EDATU.    "出荷日付
GF_ZS0040-LIFSP     = GF_VBEP-LIFSP.    "出荷ブロック
GF_ZS0040-WAERK     = GF_VBAP-WAERK.    "伝票通貨
GF_ZS0040-JTANKA    = GF_VBAP-NETPR.    "受注単価
GF_ZS0040-TANITANKA = GF_VBAP-KPEIN.    "単位単価
GF_ZS0040-CHARG     = GF_VBAP-CHARG.    "ロット
GF_ZS0040-PRODH     = GF_VBAP-PRODH.    "品目階層
GF_ZS0040-PSTYV     = GF_VBAP-PSTYV.    "明細カテゴリ
GF_ZS0040-MAKTX     = GF_VBAP-ARKTX.    "品目テキスト

*     売上済数量取得
PERFORM GET_SEIKYU USING    GF_ZS0040-VBELN
GF_ZS0040-POSNR
GF_ZS0040-AUART
GF_VBUK-VBTYP
CHANGING GF_ZS0040-SEIKYU.

*** DELETE-START DMW3330 2015.03.12
**     売上済数量を出荷済数量と出庫済数量に反映
*      GF_ZS0040-SHUKKA = GF_ZS0040-SEIKYU.
*      GF_ZS0040-SHUKKO = GF_ZS0040-SEIKYU.
*** DELETE-END DMW3330 2015.03.12

*** DELETE-START DMW3330 2015.03.12
**     出荷済数量
*      ADD GF_LIPS-LFIMG TO GF_ZS0040-SHUKKA.
*** DELETE-END DMW3330 2015.03.12

IF GF_VBUP-WBSTA = CNS_COMP.
*       出庫済数量
ADD GF_LIPS-LFIMG TO GF_ZS0040-SHUKKO.
*** INSERT-START DMW3330 2015.03.12
ELSE.
*       出荷済未出庫数量
ADD GF_LIPS-LFIMG TO GF_ZS0040-SHUKKA.
*** INSERT-END DMW3330 2015.03.12
ENDIF.

*     金額計算
PERFORM KINNGAKU_PROC USING    GF_ZS0040-JTANKA
GF_ZS0040-TANITANKA
GF_ZS0040-JUCHU
GF_ZS0040-PICKUP
GF_ZS0040-SHUKKA
GF_ZS0040-SHUKKO
GF_ZS0040-SEIKYU
CHANGING GF_ZS0040-JUCHUKG
GF_ZS0040-PICKUPKG
GF_ZS0040-SHUKKAKG
GF_ZS0040-SHUKKOKG
GF_ZS0040-SEIKYUKG.

*     品目グループ取得
PERFORM GET_WGBEZ USING    GF_ZS0040-MATKL
CHANGING GF_ZS0040-WGBEZ.

*     品目階層名取得
PERFORM GET_VTEXT USING    GF_ZS0040-PRODH
CHANGING GF_ZS0040-VTEXT.

*     出荷伝票: ブロック理由/範囲: テキスト取得
PERFORM GET_VTEXT2 USING    GF_ZS0040-LIFSP
CHANGING GF_ZS0040-VTEXT2.

*     得意先名称取得
PERFORM GET_KNA1 USING    GF_ZS0040-KUNNR
CHANGING GF_ZS0040-JNAME.

*     最上位得意先名称取得
PERFORM GET_NAME1 USING    GF_ZS0040-KUNNR
CHANGING GF_ZS0040-KUNNR1D
GF_ZS0040-NAME1.

*     取引先情報取得
PERFORM GET_VBPA USING    GF_ZS0040-VBELN
GF_ZS0040-POSNR
CHANGING GF_ZS0040-PERNR
GF_ZS0040-KUNRE
GF_ZS0040-KUNWE.

*     請求先名称取得
IF NOT GF_ZS0040-KUNRE IS INITIAL.
PERFORM GET_KNA1 USING    GF_ZS0040-KUNRE
CHANGING GF_ZS0040-NAME1_S.
ENDIF.

*     出荷先名称取得
IF NOT GF_ZS0040-KUNWE IS INITIAL.
PERFORM GET_KNA1 USING    GF_ZS0040-KUNWE
CHANGING GF_ZS0040-NAME1_W.
ENDIF.

*     販売明細テキスト(輸送手段等)取得
PERFORM GET_TEXT USING    GF_ZS0040-VBELN
GF_ZS0040-POSNR
CHANGING GF_ZS0040-YUSOUTOU.

*     得意先発注番号の取得
PERFORM GET_BSTNK USING    GF_VBAK-VBELN
CHANGING GF_ZS0040-BSTNK.

APPEND GF_ZS0040 TO GT_ZS0040.

ENDIF.

ENDLOOP.

endform.                    " SET_DATA_SHUKKA
*&---------------------------------------------------------------------*
*&      Form  GET_SHUKKA_VBAK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->AI_VBELN  販売伝票
*----------------------------------------------------------------------*
form GET_SHUKKA_VBAK using    AI_VBELN.

SELECT SINGLE VBELN
VKBUR
VKGRP
KUNNR
AUART
AUDAT
ERDAT
ERZET
ERNAM
INTO GF_VBAK
FROM VBAK
WHERE VBELN = AI_VBELN
AND VKBUR IN P_VKBUR
AND AUART IN P_AUART.

endform.                    " GET_SHUKKA_VBAK
*&---------------------------------------------------------------------*
*&      Form  GET_SHUKKA_VBAP
*&---------------------------------------------------------------------*
*       販売伝票: 明細データの取得(出荷済データ)
*----------------------------------------------------------------------*
*      -->AI_VBELN  販売伝票
*      -->AI_POSNR  販売伝票明細
*----------------------------------------------------------------------*
form GET_SHUKKA_VBAP using    AI_VBELN
AI_POSNR.

SELECT SINGLE VBELN
POSNR
MATNR
KWMENG
KBMENG
VRKME
MATKL
MVGR1
SPART
NETPR
KPEIN
WAERK
CHARG
PRODH
PSTYV
ARKTX
INTO GF_VBAP
FROM VBAP
WHERE VBELN = AI_VBELN
AND POSNR = AI_POSNR
AND ABGRU = SPACE.

endform.                    " GET_SHUKKA_VBAP
*&---------------------------------------------------------------------*
*&      Form  GET_SHUKKA_VBEP
*&---------------------------------------------------------------------*
*       販売伝票: 納入日程行データの取得(出荷済データ)
*----------------------------------------------------------------------*
*      -->AI_VBELN  販売伝票
*      -->AI_POSNR  販売伝票明細
*----------------------------------------------------------------------*
form GET_SHUKKA_VBEP using    AI_VBELN
AI_POSNR.

REFRESH GT_VBEP.

SELECT VBELN
POSNR
ETENR
EDATU
LIFSP
INTO TABLE GT_VBEP
FROM VBEP
WHERE VBELN = AI_VBELN
AND POSNR = AI_POSNR.

IF SY-SUBRC = 0.
SORT GT_VBEP BY VBELN POSNR ETENR.
READ TABLE GT_VBEP INTO GF_VBEP INDEX 1.
ENDIF.

endform.                    " GET_SHUKKA_VBEP
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ZS0040
*&---------------------------------------------------------------------*
*       受注残分析データテーブル更新
*----------------------------------------------------------------------*
form UPDATE_ZS0040.

DATA:
L_CNT TYPE I.

* テーブルロック設定
PERFORM LOCK_ZS0040.

* 既存データ削除
DELETE
FROM ZS0040
WHERE AUART IN P_AUART    "販売伝票タイプ
AND VKBUR IN P_VKBUR.   "営業所

* 新規データ挿入
INSERT ZS0040
FROM TABLE GT_ZS0040.

IF SY-SUBRC <> 0.
*   更新処理に失敗するとロールバック
ROLLBACK WORK.
MESSAGE i634 WITH 'ZS0040'.
STOP.
ENDIF.

* 正常に更新されるとコミット
COMMIT WORK.
DESCRIBE TABLE GT_ZS0040 LINES L_CNT.
MESSAGE i403 WITH 'ZS0040:登録件数 =' L_CNT '件'.

* テーブルロック解除
PERFORM UNLOCK_ZS0040.

endform.                    " UPDATE_ZS0040
*&---------------------------------------------------------------------*
*&      Form  LOCK_ZS0040
*&---------------------------------------------------------------------*
*       テーブルロック設定
*----------------------------------------------------------------------*
form LOCK_ZS0040.

*** DELETE-START 2013.05.08
*  LOOP AT GT_ZS0040 INTO GF_ZS0040.
*** DELETE-END   2013.05.08

CALL FUNCTION 'ENQUEUE_EZ_ZS0040'
EXPORTING
*** DELETE-START 2013.05.08
*        VBELN = GF_ZS0040-VBELN
*        POSNR = GF_ZS0040-POSNR
*** DELETE-END   2013.05.08
*** INSERT-START 2013.05.08
MODE_ZS0040    = 'E'
MANDT          = SY-MANDT
*** INSERT-END   2013.05.08
EXCEPTIONS
FOREIGN_LOCK   = 1
SYSTEM_FAILURE = 2
OTHERS         = 3.

CASE sy-subrc.
WHEN 1.
MESSAGE i004 WITH 'ZS0040'.
STOP.
WHEN 2 OR 3.
MESSAGE i635 WITH 'ZS0040'.
STOP.
ENDCASE.

*** DELETE-START 2013.05.08
*  ENDLOOP.
*** DELETE-END   2013.05.08

endform.                    " LOCK_ZS0040
*&---------------------------------------------------------------------*
*&      Form  UNLOCK_ZS0040
*&---------------------------------------------------------------------*
*       テーブルロック解除
*----------------------------------------------------------------------*
form UNLOCK_ZS0040.

LOOP AT GT_ZS0040 INTO GF_ZS0040.

CALL FUNCTION 'DEQUEUE_EZ_ZS0040'
EXPORTING
VBELN = GF_ZS0040-VBELN
POSNR = GF_ZS0040-POSNR.

ENDLOOP.

endform.                    " UNLOCK_ZS0040
*&---------------------------------------------------------------------*
*&      Form  ALV_ZS0040
*&---------------------------------------------------------------------*
*       受注残分析データテーブル照会
*----------------------------------------------------------------------*
form ALV_ZS0040.

* ページヘッダの作成
GF_HEADER-TYP = 'H'.
GF_HEADER-INFO = '受注残分析データ一覧'.
APPEND GF_HEADER TO GT_HEADER.

W_LAYOUT-DETAIL_POPUP = CNS_X.
W_VARIANT-REPORT = SY-REPID.
W_REPID = SY-REPID.

* ZS0040からデータ取得
SELECT *
INTO TABLE GT_OUT
FROM ZS0040.   "全件抽出

* 表示
CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
I_BUFFER_ACTIVE         = 'X'
I_CALLBACK_PROGRAM      = W_REPID
I_CALLBACK_TOP_OF_PAGE  = W_HEADER_FORM
I_CALLBACK_USER_COMMAND = W_UCOMM_FORM
I_STRUCTURE_NAME        = 'ZS0040'
IS_LAYOUT               = W_LAYOUT
I_SAVE                  = 'A'
IS_VARIANT              = W_VARIANT
IT_EVENTS               = W_EVENT[]
IMPORTING
E_EXIT_CAUSED_BY_CALLER = W_EXIT1
ES_EXIT_CAUSED_BY_USER  = W_EXIT2
TABLES
T_OUTTAB                = GT_OUT
EXCEPTIONS
PROGRAM_ERROR           = 1
OTHERS                  = 2.
IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

endform.                    " ALV_ZS0040
*&---------------------------------------------------------------------*
*&      Form  top_of_page
*&---------------------------------------------------------------------*
*       ALVヘッダ設定
*----------------------------------------------------------------------*
FORM top_of_page.

WRITE: / 'Page:', SY-PAGNO.
CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
EXPORTING
IT_LIST_COMMENTARY = GT_HEADER
I_LOGO             = 'ENJOYSAP_LOGO'.

ENDFORM.                    " TOP_OF_PAGE
*&---------------------------------------------------------------------*
*&      Form  USER_COMMAND
*&---------------------------------------------------------------------*
*       ALVのUSER COMMAND設定
*----------------------------------------------------------------------*
*      -->UCOMM
*      -->SELFIELD
*----------------------------------------------------------------------*
FORM user_command USING ucomm LIKE sy-ucomm
selfield TYPE slis_selfield.
CASE UCOMM.
WHEN OTHERS.
CALL FUNCTION 'POPUP_TO_CONFIRM'
EXPORTING
TITLEBAR      = 'UCOMM'
TEXT_QUESTION = UCOMM.
ENDCASE.
ENDFORM.
*Text symbol text・
*001:Pro Dis
*002:Update on-order
*003:Output account ticket
*004:Ret Con
*005:Analy on-order view
*Selection text・
*P_AUART:        Sales Document Type
*P_BUKRS:        Company Code
*P_VKBUR:        Sales Office
