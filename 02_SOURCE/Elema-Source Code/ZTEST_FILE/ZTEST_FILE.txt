*&---------------------------------------------------------------------*
*& Report  ZTEST_FILE                                                  *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  ztest_file                                .

TYPES:BEGIN OF t_file,
fld(65535) TYPE c,
END OF t_file.
DATA :it_file TYPE TABLE OF t_file,
wa_file TYPE t_file.

SELECTION-SCREEN BEGIN OF BLOCK bk01 WITH FRAME.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS p_dl RADIOBUTTON GROUP rd01.
SELECTION-SCREEN POSITION 6.
SELECTION-SCREEN COMMENT 6(34) text-001 FOR FIELD p_dl.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS p_ul RADIOBUTTON GROUP rd01.
SELECTION-SCREEN POSITION 6.
SELECTION-SCREEN COMMENT 6(34) text-002 FOR FIELD p_ul.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK bk01.

PARAMETERS p_sfile(128) TYPE c OBLIGATORY.
PARAMETERS p_lfile(128) TYPE c OBLIGATORY.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_lfile.
PERFORM open_dialog CHANGING p_lfile.

START-OF-SELECTION.

CASE 'X'.
WHEN p_dl.
*     サーバファイル取得
PERFORM upload_server_file.
*     ローカルファイル出力
PERFORM download_local_file.
WHEN p_ul.
*     ローカルファイル取得
PERFORM upload_local_file.
*     サーバファイル出力
PERFORM transfer_server_file.
WHEN OTHERS.
ENDCASE.

*&---------------------------------------------------------------------*
*&      Form  OPEN_DIALOG
*&---------------------------------------------------------------------*
*       ファイルオープンダイアログ
*----------------------------------------------------------------------*
*      <--O_FILE  ローカルファイルパス
*----------------------------------------------------------------------*
FORM open_dialog  CHANGING o_lfile.

DATA : l_filename TYPE string,
l_path     TYPE string,
l_fullpath TYPE string.

*  CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG
*    CHANGING
*      FILENAME             = L_FILENAME
*      PATH                 = L_PATH
*      FULLPATH             = L_FULLPATH
*    EXCEPTIONS
*      CNTL_ERROR           = 1
*      ERROR_NO_GUI         = 2
*      NOT_SUPPORTED_BY_GUI = 3
*      others               = 4
*        .
*  IF SY-SUBRC = 0.
*    O_LFILE = L_FULLPATH.
*  ENDIF.

ENDFORM.                    " OPEN_DIALOG
*&---------------------------------------------------------------------*
*&      Form  UPLOAD_SERVER_FILE
*&---------------------------------------------------------------------*
*       サーバファイル取得
*----------------------------------------------------------------------*
FORM upload_server_file .

REFRESH it_file.

OPEN DATASET p_sfile FOR INPUT IN binary MODE." ENCODING DEFAULT.
IF sy-subrc <> 0.
WRITE 'ファイルオープンエラー'.
STOP.
ENDIF.

DO.
CLEAR wa_file.
READ DATASET p_sfile INTO wa_file.
IF sy-subrc = 0.
APPEND wa_file TO it_file.
ELSE.
EXIT.
ENDIF.
ENDDO.

CLOSE DATASET p_sfile.

ENDFORM.                    " UPLOAD_SERVER_FILE
*&---------------------------------------------------------------------*
*&      Form  DOWNLOAD_LOCAL_FILE
*&---------------------------------------------------------------------*
*       ローカルファイル出力
*----------------------------------------------------------------------*
FORM download_local_file .

DATA : l_cnt  TYPE i,
l_name TYPE string.

l_name = p_lfile.
CALL FUNCTION 'GUI_DOWNLOAD'
EXPORTING
filename                = l_name
TABLES
data_tab                = it_file
EXCEPTIONS
file_write_error        = 1
no_batch                = 2
gui_refuse_filetransfer = 3
invalid_type            = 4
no_authority            = 5
unknown_error           = 6
header_not_allowed      = 7
separator_not_allowed   = 8
filesize_not_allowed    = 9
header_too_long         = 10
dp_error_create         = 11
dp_error_send           = 12
dp_error_write          = 13
unknown_dp_error        = 14
access_denied           = 15
dp_out_of_memory        = 16
disk_full               = 17
dp_timeout              = 18
file_not_found          = 19
dataprovider_exception  = 20
control_flush_error     = 21
OTHERS                  = 22.
IF sy-subrc = 0.
DESCRIBE TABLE it_file LINES l_cnt.
WRITE : '出力件数：',l_cnt,'件'.
ELSE.
WRITE 'ダウンロードエラー'.
ENDIF.

ENDFORM.                    " DOWNLOAD_LOCAL_FILE
*&---------------------------------------------------------------------*
*&      Form  UPLOAD_LOCAL_FILE
*&---------------------------------------------------------------------*
*       ローカルファイルアップロード
*----------------------------------------------------------------------*
FORM upload_local_file .

DATA file TYPE string.
file = p_lfile.

CALL FUNCTION 'GUI_UPLOAD'
EXPORTING
filename                = file
TABLES
data_tab                = it_file
EXCEPTIONS
file_open_error         = 1
file_read_error         = 2
no_batch                = 3
gui_refuse_filetransfer = 4
invalid_type            = 5
no_authority            = 6
unknown_error           = 7
bad_data_format         = 8
header_not_allowed      = 9
separator_not_allowed   = 10
header_too_long         = 11
unknown_dp_error        = 12
access_denied           = 13
dp_out_of_memory        = 14
disk_full               = 15
dp_timeout              = 16
OTHERS                  = 17.

IF sy-subrc <> 0.
WRITE 'UPLOAD LOCAL_FILE ERR'.
STOP.
ENDIF.

ENDFORM.                    " UPLOAD_LOCAL_FILE
*&---------------------------------------------------------------------*
*&      Form  TRANSFER_SERVER_FILE
*&---------------------------------------------------------------------*
*       サーバファイル出力
*----------------------------------------------------------------------*
FORM transfer_server_file .

DATA : l_cnt TYPE i.

OPEN DATASET p_sfile FOR OUTPUT IN TEXT MODE. " ENCODING DEFAULT.
IF sy-subrc <> 0.
WRITE 'SERVER_FILE OPEN ERR'.
STOP.
ENDIF.

LOOP AT it_file INTO wa_file.
TRANSFER wa_file TO p_sfile.
l_cnt = l_cnt + 1.
ENDLOOP.

CLOSE DATASET p_sfile.

WRITE : '出力件数：',l_cnt,'件'.

ENDFORM.                    " TRANSFER_SERVER_FILE
