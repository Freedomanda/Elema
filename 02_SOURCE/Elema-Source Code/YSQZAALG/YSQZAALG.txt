***---------------------------------------------------------------------
** (c) Copyright 1998 OptiSystems Solutions LTD. All Rights Reserved  **
***---------------------------------------------------------------------
*-------------------------------------------------------------------
***INCLUDE ZSANSALG.
*-------------------------------------------------------------------
*&---------------------------------------------------------------------*
*&      Form  AC01_PROC_INC
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM AC02_PROC_TXT_INCL USING POJ TYPE YSQZS_ST_CTRL.
****
PERFORM DB_LOAD_TXT USING POJ-NAM.
IF STS-SGS = 'e'.  EXIT.  ENDIF.
****
PERFORM MM_SCAN_TEXT TABLES TXTP TISC TIST USING ' ' WI.
PERFORM MM_SCAN_TISC.  " tables txtp tisc tist using ' ' wi.
****
IF STS-KINC  > 0.  PERFORM AC1_INCLUDES.  ENDIF.
IF STS-KSEL  > 0.  PERFORM AC2_SELECTS.   ENDIF.
*if sts-kexec > 0.  perform ac3_exec_sqls. endif.
*if sts-kimex > 0.  perform ac4_imp_exp.   endif.
****
COMMIT WORK.
*******
ENDFORM.                    " AC01_PROC_INC
*&-----------------------------------------------------------
*&      Form  AN11_INCLUDES
*&-----------------------------------------------------------
FORM AC1_INCLUDES.
****
clear: stp-itsc, stp-kstr, stp-sgt.
LOOP AT TIST WHERE TYPE = 'i'.
****
READ TABLE TISC INDEX TIST-FROM.
if tisc-str <> 'INCLUDE'.  continue.  endif.
****
stp-itsc = sy-tabix + 1.
read table tisc index stp-itsc.
IF SY-SUBRC <> 0     OR
TISC-STR = '=' OR
tisc-str = 'TYPE' or
tisc-str = 'STRUCTURE'.
CONTINUE.
ENDIF.
****
clear tcp.  tcp-nam = tisc-str.  append tcp.
********
ENDLOOP.
*******
ENDFORM.                    " AN12_PROC_INCLUDE
*********************************************************
*&---------------------------------------------------------------------*
*&      Form  AC01_PARSING_SQL
*&---------------------------------------------------------------------*
FORM AC01_PROC_SQL.
****
PERFORM AQ1_PARSING_SQL.
****
IF ST_SQL-ID-TYP = 'SA'.
PERFORM PRE_EMPTY_EXIT USING -1.  EXIT.
ENDIF.
****
IF ST_SQL-ID-TYP <> 's'.  "?????? st_sql-id-typ = 'e'. ??????
PERFORM PRE_EMPTY_EXIT USING -3.  EXIT.
ENDIF.
*******
ENDFORM.                    " AC01_PARSING_SQL
*&---------------------------------------------------------------------*
*&      Form  AS11_parsing_sql
*&---------------------------------------------------------------------*
FORM AQ1_PARSING_SQL.
****
PERFORM MM_SCAN_TEXT TABLES TB_SQLT TQSC TQST USING 'y' WI.
****
CLEAR ST_SQL.
ST_SQL-SCAN[] = TQSC[].
****
PERFORM AQ0_SQL_PARSE_AND_ANAL(YSQZAP) USING ST_SQL.
*******
ENDFORM.                    " AS11_parsing_sql
*&---------------------------------------------------------------------*
*&      Form  AN12_SELECT
*&---------------------------------------------------------------------*
FORM AC2_SELECTS.
DATA: LTB_SEL TYPE YSQZS_TB_SEL,
LSG_GOOD VALUE ' '.
****
clear: stp-itsc, stp-kstr, stp-sgt.
****
LOOP AT TIST WHERE TYPE = 's'.
STP-ITSC = TIST-FROM.
****
PERFORM AS1_PARSING_SELECT.
****
PERFORM AS30_COMPARE_SQL_SEL.
IF ST_SEL-ID-GOOD = 'y'.
LSG_GOOD = 'y'.
PERFORM AS31_INDEX_ANALYSIS.
PERFORM AS32_SAVE_SEL.
ELSEIF ST_SEL-ID-GOODT = 'y'.
*!zs index
PERFORM AS31_INDEX_ANALYSIS.
APPEND ST_SEL TO LTB_SEL.
ENDIF.
*******
ENDLOOP.
****
IF LSG_GOOD = ' '.
LOOP AT LTB_SEL INTO ST_SEL.
PERFORM AS32_SAVE_SEL.
ENDLOOP.
ENDIF.
*******
ENDFORM.                    " AN12_STMT_SELECT
*&---------------------------------------------------------------------*
*&      Form  AN13_EXEC_SQLS
*&---------------------------------------------------------------------*
FORM AC3_EXEC_SQLS.

ENDFORM.                    " AN13_EXEC_SQLS
*&---------------------------------------------------------------------*
*&      Form  AN121_SELECT
*&---------------------------------------------------------------------*
FORM AS1_PARSING_SELECT.
****
PERFORM MM_CREATE_ST_SEL USING STP-ITSC 's'.
****
PERFORM AS0_SELECT_PARSE_AND_ANAL(YSQZAP) USING ST_SEL.
*******
ENDFORM.                    " AN121_SELECT
*&---------------------------------------------------------------------*
*&      Form  AS230_COMPARE_SQL_SEL
*&---------------------------------------------------------------------*
FORM AS30_COMPARE_SQL_SEL.
****
ST_SEL-ID-GOOD = 'y'.
ST_SEL-ID-GOODT = 'n'.
PERFORM CO01_FROM.     IF ST_SEL-ID-GOOD = 'n'. EXIT. ENDIF.
ST_SEL-ID-GOODT = 'y'.
PERFORM CO02_OPT_FLD.  IF ST_SEL-ID-GOOD = 'n'. EXIT. ENDIF.
PERFORM CO03_WHERE.    IF ST_SEL-ID-GOOD = 'n'. EXIT. ENDIF.
PERFORM CO05_ORDER.    IF ST_SEL-ID-GOOD = 'n'. EXIT. ENDIF.
*******
ENDFORM.                    " AS230_COMPARE_SQL_SEL
*&---------------------------------------------------------------------*
*&      Form  AS231_save_sel.
*&---------------------------------------------------------------------*
FORM AS32_SAVE_SEL.
DATA: LREST TYPE I.
****
ADD 1 TO STS-NGSEL.
STS-RC = STS-NGSEL.
**** sel list
TB_SELL-NAMI = ST_SEL-ID-NAMI.
TB_SELL-NUMS = ST_SEL-ID-FRI.
TB_SELL-SELN = STS-NGSEL.
APPEND TB_SELL.
**** concatenate sel
LREST = C_TXTS_LEN.
CLEAR TB_SELT.  TB_SELT-SELN = STS-NGSEL.
LOOP AT TISC FROM ST_SEL-ID-FRS TO ST_SEL-ID-TOS.
CASE TISC-STR.
WHEN 'INTO' OR 'FROM' OR 'WHERE' OR 'ORDER' OR 'GROUP'.
ADD 1 TO TB_SELT-NUMS.
APPEND TB_SELT.
LREST = C_TXTS_LEN.  CLEAR TB_SELT-TXT.
WHEN OTHERS.
IF TISC-LEN >= LREST.
ADD 1 TO TB_SELT-NUMS.
APPEND TB_SELT.
LREST = C_TXTS_LEN.  CLEAR TB_SELT-TXT.
ENDIF.
ENDCASE.
****
concatenate  tb_selt-txt tisc-str into tb_selt-txt
SEPARATED BY SPACE.
LREST = LREST - TISC-LEN - 1.
ENDLOOP.
****
ADD 1 TO TB_SELT-NUMS.
APPEND TB_SELT.
**** index
TB_INX-SELN = STS-NGSEL.
LOOP AT ST_SEL-ANL-TINX INTO TB_INX-FLD.
APPEND TB_INX.
ENDLOOP.
*******
ENDFORM.                    "AS231_save_sel.
*&---------------------------------------------------------------------*
*&      Form  AN214_IMP_EXP
*&---------------------------------------------------------------------*
FORM AC4_IMP_EXP.
**** import export
LOOP AT TIST WHERE TYPE = 'e'.
STP-ITSC = TIST-FROM.
PERFORM MM_SEARCH_IMPEX USING WRC.
IF WRC <> 0.  CONTINUE.  ENDIF.
****
PERFORM MM_CREATE_ST_SEL USING STP-ITSC 'e'.
PERFORM AZ1_PARSING_IMPEX.
PERFORM AZ2_COMPARE_SQL_IMPEX.
IF ST_SEL-ID-GOOD = 'y'.
PERFORM AZ3_SAVE_IMPEX.
ENDIF.
****
ENDLOOP.
*******
ENDFORM.                    " AN214_IMP_EXP
*&-------------------------------------------------------------
*&      Form  AQ3_SQL_INDEX
*&-------------------------------------------------------------
FORM AS31_INDEX_ANALYSIS.
****
IF ST_SEL-ID-TYP <> 's'.          EXIT.  ENDIF.
IF ST_SEL-WHERE-TYP = ' '.        EXIT.  ENDIF.
*zs!!
*if st_sel-where-sg_other <> 'y'.  exit.  endif.
****
PERFORM DB_GET_INDEX USING ST_SEL-FROM-TAB.
**zs AX1K912026 vvvvvvvv
DELETE TB_INXF WHERE FIELD = 'MANDT'.
DELETE TB_INXF WHERE FIELD = 'CLIENT'.
**zs AX1K912026 ^^^^^^^^
**** new - with sequence
DATA: SG_1, KF TYPE I.
**** fields from where
REFRESH WSS.
LOOP AT ST_SEL-WHERE-FLIN INTO WFLS WHERE SG = 'd'
**zs AX1K912026 vvvvvvvv
AND FLD <> 'MANDT'
AND FLD <> 'CLIENT'.
**zs AX1K912026 vvvvvvvv
WSS = WFLS-FLD.
COLLECT WSS.
ENDLOOP.
DESCRIBE TABLE WSS LINES KF.
**** test idxs
DATA: NI LIKE SY-TABIX, RI LIKE SY-TABIX.
DATA: TKF TYPE I, MKF TYPE I.
MKF = 0.
LOOP AT TB_INXL.
RI = SY-TABIX.  TKF = 0.
****
LOOP AT TB_INXF WHERE INDEX = TB_INXL-NAME.
READ TABLE WSS WITH KEY TXT = TB_INXF-FIELD.
IF SY-SUBRC = 0.  ADD 1 TO TKF.
ELSE.  EXIT.
ENDIF.
ENDLOOP.
****
IF TKF > MKF.  MKF = TKF.  NI = RI.  ENDIF.
ENDLOOP.
**** test fields
DATA: IDEL LIKE SY-TABIX.
IF MKF > 0.
READ TABLE TB_INXL INDEX NI.
LOOP AT TB_INXF WHERE INDEX = TB_INXL-NAME.
READ TABLE WSS WITH KEY TXT = TB_INXF-FIELD.
IDEL = SY-TABIX.
IF SY-SUBRC = 0.  DELETE WSS INDEX IDEL..
ELSE.  EXIT.
ENDIF.
ENDLOOP.
ENDIF.
****
ST_SEL-ANL-TINX[] = WSS[].
DESCRIBE TABLE ST_SEL-ANL-TINX LINES ST_SEL-ANL-KINX.
*******
ENDFORM.                    " AQ3_SQL_INDEX
*&-------------------------------------------------------------
FORM AS31_INDEX_ANALYSIS_OLD.
****
IF ST_SEL-ID-TYP <> 's'.  EXIT.  ENDIF.
****
IF ST_SEL-WHERE-TYP = ' '.   " and st_sel-order-typ = ' '.
EXIT.
ENDIF.
****
IF ST_SEL-WHERE-SG_OTHER <> 'y'.  EXIT.  ENDIF.
****
PERFORM DB_GET_INDEX USING ST_SEL-FROM-TAB.
**** old - only exist
LOOP AT ST_SEL-WHERE-FLIN INTO WFLS WHERE SG = 'd'.
READ TABLE TB_INXF WITH KEY FIELD = WFLS-FLD.
****
IF SY-SUBRC <> 0.
APPEND WFLS-FLD TO ST_SEL-ANL-TINX.
CONTINUE.
ENDIF.
****
ENDLOOP.
DESCRIBE TABLE ST_SEL-ANL-TINX LINES ST_SEL-ANL-KINX.
**** new - with sequence
DATA: SG_1.
REFRESH TB_INXN.
LOOP AT TB_INXL.
TB_INXN-NAM = TB_INXL-NAME.
TB_INXN-KC = TB_INXN-KR = 0.    SG_1 = ' '.
****
LOOP AT TB_INXF WHERE INDEX = TB_INXL-NAME.
ADD 1 TO TB_INXN-KC.
IF SG_1 = ' '.
READ TABLE ST_SEL-WHERE-FLIN  INTO WFLS
WITH KEY FLD = TB_INXF-FIELD.
IF SY-SUBRC = 0.  ADD 1 TO TB_INXN-KR.
ELSE.  SG_1 = 'n'.
ENDIF.
ENDIF.
ENDLOOP.
APPEND TB_INXN.
ENDLOOP.
*******
ENDFORM.                    " AQ3_SQL_INDEX
