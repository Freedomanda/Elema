*&---------------------------------------------------------------------*
*&  Include           ZEGMMR0210F03
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  BDC_DYNAPRO
*&---------------------------------------------------------------------*
*       Ｄｙｎｐｒｏナンバーの取得
*----------------------------------------------------------------------*
FORM BDC_DYNAPRO  USING  I_PROGRAM TYPE BDC_PROG
I_DYNPRO TYPE BDC_DYNR.
CLEAR GT_BDCDATA.
GT_BDCDATA-PROGRAM = I_PROGRAM .
GT_BDCDATA-DYNPRO  = I_DYNPRO.
GT_BDCDATA-DYNBEGIN = 'X'.
APPEND  GT_BDCDATA.
ENDFORM.                    " BDC_DYNAPRO
*&---------------------------------------------------------------------*
*&      Form  BDC_FIELD
*&---------------------------------------------------------------------*
*       項目の設定
*----------------------------------------------------------------------*
FORM BDC_FIELD  USING   I_FNAM   TYPE FNAM_____4
I_FVAL TYPE BDC_FVAL.
CLEAR GT_BDCDATA.
GT_BDCDATA-FNAM = I_FNAM.
GT_BDCDATA-FVAL = I_FVAL.
APPEND GT_BDCDATA.
ENDFORM.                    " BDC_FIELD
*&---------------------------------------------------------------------*
*&      Form  BDC_TRANSACTION
*&---------------------------------------------------------------------*
*      在庫転送BDC実行
*----------------------------------------------------------------------*
FORM BDC_TRANSACTION USING I_TCODE TYPE SY-TCODE
CHANGING E_MBLNR  TYPE MSEG-MBLNR
E_MESSAGE TYPE CHAR80.
DATA: L_MSTRING(480).
DATA: L_SUBRC LIKE SY-SUBRC.
DATA:LST_OPTION TYPE CTU_PARAMS.
DATA: LT_MESSAGE TYPE TABLE OF BDCMSGCOLL,
LST_MESSAGE LIKE LINE OF LT_MESSAGE,
LT_MSG            TYPE STANDARD TABLE OF BAPIRET2,
LST_MSG          LIKE LINE OF LT_MSG."エラーメッセージ構造
REFRESH GT_MESSTAB.
CLEAR SY-SUBRC.
LST_OPTION-DISMODE = 'N'.
LST_OPTION-UPDMODE = 'S'.
LST_OPTION-DEFSIZE = ''.
LST_OPTION-NOBINPT = 'X'.
CALL TRANSACTION I_TCODE USING GT_BDCDATA
OPTIONS FROM LST_OPTION
MESSAGES INTO LT_MESSAGE.
READ TABLE LT_MESSAGE INTO LST_MESSAGE
WITH KEY MSGTYP = 'S' MSGID = 'M7' MSGNR = '060'.
IF SY-SUBRC = 0.
MESSAGE S027(ZMEGSD01).
ELSE.
LOOP AT LT_MESSAGE INTO LST_MESSAGE.
LST_MSG-ID = LST_MESSAGE-MSGID.
LST_MSG-NUMBER = LST_MESSAGE-MSGNR.
LST_MSG-TYPE  = LST_MESSAGE-MSGTYP.
LST_MSG-MESSAGE_V1 = LST_MESSAGE-MSGV1.
LST_MSG-MESSAGE_V2 = LST_MESSAGE-MSGV2.
LST_MSG-MESSAGE_V3 = LST_MESSAGE-MSGV3.
LST_MSG-MESSAGE_V4 = LST_MESSAGE-MSGV4.
APPEND LST_MSG TO LT_MSG.
ENDLOOP.

IF LT_MSG IS NOT INITIAL.
* エラーメッセージ表示
CALL FUNCTION 'C14ALD_BAPIRET2_SHOW'
TABLES
I_BAPIRET2_TAB = LT_MSG.
ENDIF.
ENDIF.

LEAVE TO LIST-PROCESSING AND RETURN TO SCREEN 0.
ENDFORM.                    " BDC_TRANSACTION
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_MB1B_COM_G
*&---------------------------------------------------------------------*
*      MB1Bの転送処理(利用可能在庫)(一時)
*----------------------------------------------------------------------*
FORM EXCUTE_MB1B_COM_G  CHANGING I_COMMON_TMP TYPE TYP_TD_ONE_STEP.
DATA: LST_ONE_STEP TYPE ZSEGSD0038,
L_FVAL TYPE BDC_FVAL,
L_MENGE(13) TYPE C,
L_MBLNR TYPE MKPF-MBLNR,
L_MESSAGE(80)  TYPE C,
LT_COMMON_TMP TYPE TYP_TD_ONE_STEP,
LV_TABIX TYPE SY-TABIX.

LT_COMMON_TMP =  I_COMMON_TMP .

READ TABLE  LT_COMMON_TMP INTO LST_ONE_STEP  INDEX 1.
* 在庫転送登録:第一画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0400'.
* Ｅｎｔｅｒを押す
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'/00'.
* 伝票日付
CLEAR  L_FVAL.
L_FVAL = SY-DATUM.
PERFORM BDC_FIELD USING 'MKPF-BLDAT'
L_FVAL.
* 転記日付
CLEAR  L_FVAL.
L_FVAL = SY-DATUM.
PERFORM BDC_FIELD USING 'MKPF-BUDAT'
L_FVAL .
* 入出庫票(参照伝票番号)
CLEAR  L_FVAL.
L_FVAL = LST_ONE_STEP-XBLNR.
PERFORM BDC_FIELD USING 'RM07M-MTSNR'
L_FVAL.
* 伝票ヘッダText
CLEAR  L_FVAL.
L_FVAL = LST_ONE_STEP-BKTXT.
PERFORM BDC_FIELD USING 'MKPF-BKTXT'
L_FVAL.
* 移動タイプ
PERFORM BDC_FIELD USING 'RM07M-BWARTWA'
'311'.
* プラント
CLEAR  L_FVAL.
L_FVAL = LST_ONE_STEP-WERKS.
PERFORM BDC_FIELD USING 'RM07M-WERKS'
L_FVAL.
* 出庫元保管場所
CLEAR  L_FVAL.
L_FVAL = LST_ONE_STEP-LGORT.
PERFORM BDC_FIELD USING 'RM07M-LGORT'
L_FVAL.
LOOP AT  LT_COMMON_TMP INTO LST_ONE_STEP.
CLEAR LV_TABIX.
LV_TABIX = SY-TABIX.
* 在庫転送登録:新規明細画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0421'.
* 明細の入力
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'=NLE'.
* 入庫先保管場所
CLEAR  L_FVAL.
L_FVAL =  LST_ONE_STEP-LGORT_NYU.
PERFORM BDC_FIELD USING 'MSEGK-UMLGO'
L_FVAL.
* 品目コード
CLEAR  L_FVAL.
L_FVAL =  LST_ONE_STEP-MATNR.
PERFORM BDC_FIELD USING 'MSEG-MATNR(01)'
L_FVAL.
* 移動数量
CLEAR:L_FVAL,
L_MENGE.
WRITE LST_ONE_STEP-MENGE TO L_MENGE NO-GROUPING LEFT-JUSTIFIED.
L_FVAL =  L_MENGE .
PERFORM BDC_FIELD USING 'MSEG-ERFMG(01)'
L_FVAL.
CLEAR  L_FVAL.
CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
EXPORTING
INPUT  = LST_ONE_STEP-MEINS
IMPORTING
OUTPUT = LST_ONE_STEP-MEINS.
* 移動数量単位
L_FVAL =  LST_ONE_STEP-MEINS.
PERFORM BDC_FIELD USING 'MSEG-ERFME(01)'
L_FVAL .
* 保管場所
L_FVAL =  LST_ONE_STEP-LGORT.
PERFORM BDC_FIELD USING 'MSEG-LGORT(01)'
L_FVAL .
* ロット
CLEAR  L_FVAL.
L_FVAL =  LST_ONE_STEP-CHARG.
PERFORM BDC_FIELD USING 'MSEG-CHARG(01)'
L_FVAL.
IF LV_TABIX MOD 10 = 0.
* 在庫転送登録:新規明細画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0421'.
* 新規作成ボタン(次のページ)
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'/00'.
ENDIF.
CLEAR LST_ONE_STEP.
ENDLOOP.
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'=BU'.
PERFORM BDC_TRANSACTION USING 'MB1B'
CHANGING L_MBLNR
L_MESSAGE .
CLEAR: LT_COMMON_TMP[],
GT_BDCDATA[].
I_COMMON_TMP  =  LT_COMMON_TMP.
ENDFORM.                    " EXCUTE_MB1B_COM_G
*&---------------------------------------------------------------------
*&      Form  GET_BDC_TAL
*&---------------------------------------------------------------------*
*       保管場所別用(利用可能在庫)
*----------------------------------------------------------------------*
FORM GET_BDC_TAL_COM  USING    I_COMMON TYPE TYP_TD_ONE_STEP
CHANGING E_COM_TMP TYPE TYP_TD_ONE_STEP.
DATA:LST_ONE_STEP TYPE ZSEGSD0038,
LT_COMMON TYPE TYP_TD_ONE_STEP,
LV_TABIX TYPE SY-TABIX,
LF_LGORT_NYU TYPE LGORT_D,
LST_ONE_STEP_TMP TYPE ZSEGSD0038.

LT_COMMON =  I_COMMON.
SORT LT_COMMON BY LGORT_NYU.
LOOP AT  LT_COMMON  INTO LST_ONE_STEP.
CLEAR LV_TABIX.
LV_TABIX = SY-TABIX.
LF_LGORT_NYU = LST_ONE_STEP-LGORT_NYU.
MOVE-CORRESPONDING LST_ONE_STEP TO LST_ONE_STEP_TMP.
APPEND  LST_ONE_STEP_TMP TO  E_COM_TMP.
DELETE LT_COMMON INDEX LV_TABIX.
READ TABLE LT_COMMON INTO LST_ONE_STEP_TMP
WITH KEY  LGORT_NYU =  LF_LGORT_NYU.
IF SY-SUBRC <> 0 .
*     BDCで在庫転送処理
PERFORM  EXCUTE_MB1B_COM_G CHANGING E_COM_TMP.
ENDIF.
ENDLOOP.
ENDFORM.                    " GET_BDC_TAL
*&---------------------------------------------------------------------*
*&      Form  GET_BDC_TAL_SAL
*&---------------------------------------------------------------------*
*       保管場所,受注伝票別用(受注在庫)
*----------------------------------------------------------------------*
FORM GET_BDC_TAL_SAL  USING    I_SAL TYPE TYP_TD_ONE_STEP
CHANGING E_SAL_TMP TYPE TYP_TD_ONE_STEP.
DATA:LST_ONE_STEP TYPE ZSEGSD0038,
LT_SAL TYPE TYP_TD_ONE_STEP,
LV_TABIX TYPE SY-TABIX,
LF_LGORT_NYU TYPE LGORT_D,
LST_ONE_STEP_TMP TYPE ZSEGSD0038.

LT_SAL =  I_SAL.
SORT  LT_SAL BY LGORT_NYU.
LOOP AT LT_SAL  INTO LST_ONE_STEP.
CLEAR LV_TABIX.
LV_TABIX = SY-TABIX.
LF_LGORT_NYU = LST_ONE_STEP-LGORT_NYU.
MOVE-CORRESPONDING LST_ONE_STEP TO LST_ONE_STEP_TMP.
APPEND  LST_ONE_STEP_TMP TO  E_SAL_TMP.
DELETE LT_SAL INDEX LV_TABIX.
READ TABLE LT_SAL INTO LST_ONE_STEP_TMP
WITH KEY  LGORT_NYU =  LF_LGORT_NYU.
IF SY-SUBRC <> 0 .
*     BDCで在庫転送処理
PERFORM  EXCUTE_MB1B_SAL_G CHANGING E_SAL_TMP.
ENDIF.
CLEAR :LF_LGORT_NYU.
ENDLOOP.
ENDFORM.                    " GET_BDC_TAL_SAL
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_MB1B_SAL_G
*&---------------------------------------------------------------------*
*        MB1Bの転送処理(受注在庫)(一時)
*----------------------------------------------------------------------*
FORM EXCUTE_MB1B_SAL_G  CHANGING  I_SAL_TMP TYPE TYP_TD_ONE_STEP.
DATA: LST_ONE_STEP TYPE ZSEGSD0038,
L_FVAL TYPE BDC_FVAL,
L_MENGE(13) TYPE C,
L_MBLNR TYPE MKPF-MBLNR,
L_MESSAGE(80)  TYPE C,
LT_SAL_TMP TYPE TYP_TD_ONE_STEP,
LV_TABIX TYPE SY-TABIX.

LT_SAL_TMP =   I_SAL_TMP .
READ TABLE  LT_SAL_TMP INTO LST_ONE_STEP  INDEX 1.
* 在庫転送登録:第一画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0400'.
* Ｅｎｔｅｒを押す
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'/00'.
* 伝票日付
CLEAR  L_FVAL.
L_FVAL = SY-DATUM.
PERFORM BDC_FIELD USING 'MKPF-BLDAT'
L_FVAL.
* 転記日付
CLEAR  L_FVAL.
L_FVAL = SY-DATUM.
PERFORM BDC_FIELD USING 'MKPF-BUDAT'
L_FVAL .
* 入出庫票(参照伝票番号)
CLEAR  L_FVAL.
L_FVAL = LST_ONE_STEP-XBLNR.
PERFORM BDC_FIELD USING 'RM07M-MTSNR'
L_FVAL.
* 伝票ヘッダText
CLEAR  L_FVAL.
L_FVAL = LST_ONE_STEP-BKTXT.
PERFORM BDC_FIELD USING 'MKPF-BKTXT'
L_FVAL.
* 移動タイプ
PERFORM BDC_FIELD USING 'RM07M-BWARTWA'
'311'.
* 特殊在庫区分
PERFORM BDC_FIELD USING 'RM07M-SOBKZ'
'E'.
* プラント
CLEAR  L_FVAL.
L_FVAL = LST_ONE_STEP-WERKS.
PERFORM BDC_FIELD USING 'RM07M-WERKS'
L_FVAL.
* 出庫元保管場所
CLEAR  L_FVAL.
L_FVAL = LST_ONE_STEP-LGORT.
PERFORM BDC_FIELD USING 'RM07M-LGORT'
L_FVAL.
LOOP AT  LT_SAL_TMP INTO LST_ONE_STEP.
CLEAR LV_TABIX.
LV_TABIX = SY-TABIX.
* 在庫転送登録:新規明細画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0421'.
* 明細の入力
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'=NLE'.
* 入庫先保管場所
CLEAR  L_FVAL.
L_FVAL =  LST_ONE_STEP-LGORT_NYU.
PERFORM BDC_FIELD USING 'MSEGK-UMLGO'
L_FVAL.
* 品目コード
CLEAR  L_FVAL.
L_FVAL =  LST_ONE_STEP-MATNR.
PERFORM BDC_FIELD USING 'MSEG-MATNR(01)'
L_FVAL.
* 移動数量
CLEAR:L_FVAL,
L_MENGE.
WRITE LST_ONE_STEP-MENGE TO L_MENGE NO-GROUPING LEFT-JUSTIFIED.
L_FVAL =  L_MENGE .
PERFORM BDC_FIELD USING 'MSEG-ERFMG(01)'
L_FVAL.
CLEAR  L_FVAL.
CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
EXPORTING
INPUT  = LST_ONE_STEP-MEINS
IMPORTING
OUTPUT = LST_ONE_STEP-MEINS.
* 移動数量単位
L_FVAL =  LST_ONE_STEP-MEINS.
PERFORM BDC_FIELD USING 'MSEG-ERFME(01)'
L_FVAL .
* 保管場所
CLEAR  L_FVAL.
L_FVAL =  LST_ONE_STEP-LGORT.
PERFORM BDC_FIELD USING 'MSEG-LGORT(01)'
L_FVAL.
* ロット
CLEAR  L_FVAL.
L_FVAL =  LST_ONE_STEP-CHARG.
PERFORM BDC_FIELD USING 'MSEG-CHARG(01)'
L_FVAL.
* 受注伝票
CLEAR  L_FVAL.
L_FVAL =  LST_ONE_STEP-KDAUF.
PERFORM BDC_FIELD USING 'MSEGK-MAT_KDAUF'
L_FVAL.
* 受注伝票明細
CLEAR  L_FVAL.
L_FVAL =  LST_ONE_STEP-KDPOS.
PERFORM BDC_FIELD USING 'MSEGK-MAT_KDPOS'
L_FVAL.

IF LV_TABIX MOD 10 = 0.
* 在庫転送登録:新規明細画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0421'.
* 新規作成ボタン(次のページ)
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'/00'.
ENDIF.
CLEAR:LST_ONE_STEP.
ENDLOOP.
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'=BU'.
PERFORM BDC_TRANSACTION USING 'MB1B'
CHANGING L_MBLNR
L_MESSAGE .
CLEAR: LT_SAL_TMP[],
GT_BDCDATA[].
I_SAL_TMP  =  LT_SAL_TMP.
ENDFORM.                    " EXCUTE_MB1B_SAL_G
*&---------------------------------------------------------------------
*&      Form  GET_BDC_TAL_COM_TWO
*&---------------------------------------------------------------------*
*       保管場所別用(利用可能在庫)(二次)
*----------------------------------------------------------------------*
FORM GET_BDC_TAL_COM_TWO  USING  I_COMMON TYPE TYP_TD_TWO_STEP
CHANGING E_COM_TMP TYPE TYP_TD_TWO_STEP.
DATA:LST_TWO_STEP TYPE ZSEGSD0039,
LT_COMMON TYPE TYP_TD_TWO_STEP,
LV_TABIX TYPE SY-TABIX,
LF_LGORT_NYUKO TYPE LGORT_D,
LST_TWO_STEP_TMP TYPE ZSEGSD0039.

LT_COMMON =  I_COMMON.
SORT LT_COMMON BY LGORT_NYUKO .
LOOP AT  LT_COMMON  INTO LST_TWO_STEP.
CLEAR LV_TABIX.
LV_TABIX = SY-TABIX.
LF_LGORT_NYUKO = LST_TWO_STEP-LGORT_NYUKO.
MOVE-CORRESPONDING LST_TWO_STEP TO LST_TWO_STEP_TMP.
APPEND  LST_TWO_STEP_TMP TO  E_COM_TMP.
DELETE LT_COMMON INDEX LV_TABIX.
READ TABLE LT_COMMON INTO LST_TWO_STEP_TMP
WITH KEY  LGORT_NYUKO =  LF_LGORT_NYUKO.
IF SY-SUBRC <> 0 .
*     BDCで在庫転送処理
PERFORM  EXCUTE_MB1B_COM_T  CHANGING E_COM_TMP.
ENDIF.
ENDLOOP.
ENDFORM.                    " GET_BDC_TAL_COM_TWO
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_MB1B_COM_T
*&---------------------------------------------------------------------*
*      在庫転送の実行(利用可能在庫)(二次)
*----------------------------------------------------------------------*
FORM EXCUTE_MB1B_COM_T  CHANGING I_COMMON_TMP TYPE TYP_TD_TWO_STEP.
DATA: LST_TWO_STEP TYPE ZSEGSD0039,
L_FVAL TYPE BDC_FVAL,
L_MENGE(13) TYPE C,
L_MBLNR TYPE MKPF-MBLNR,
L_MESSAGE(80)  TYPE C,
LT_COMMON_TMP TYPE TYP_TD_TWO_STEP,
LV_TABIX TYPE SY-TABIX.

LT_COMMON_TMP =  I_COMMON_TMP .

READ TABLE  LT_COMMON_TMP INTO LST_TWO_STEP  INDEX 1.
* 在庫転送登録:第一画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0400'.
* Ｅｎｔｅｒを押す
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'/00'.
* 伝票日付
CLEAR  L_FVAL.
L_FVAL = SY-DATUM.
PERFORM BDC_FIELD USING 'MKPF-BLDAT'
L_FVAL.
* 転記日付
CLEAR  L_FVAL.
L_FVAL = SY-DATUM.
PERFORM BDC_FIELD USING 'MKPF-BUDAT'
L_FVAL .
* 入出庫票(参照伝票番号)
CLEAR  L_FVAL.
L_FVAL = GF_XBLNR.
PERFORM BDC_FIELD USING 'RM07M-MTSNR'
L_FVAL.
* 伝票ヘッダText
CLEAR  L_FVAL.
L_FVAL = GF_BKTXT.
PERFORM BDC_FIELD USING 'MKPF-BKTXT'
L_FVAL.
* 移動タイプ
PERFORM BDC_FIELD USING 'RM07M-BWARTWA'
'311'.
* プラント
CLEAR  L_FVAL.
L_FVAL = LST_TWO_STEP-WERKS.
PERFORM BDC_FIELD USING 'RM07M-WERKS'
L_FVAL.
* 出庫元保管場所
CLEAR  L_FVAL.
L_FVAL = LST_TWO_STEP-LGORT.
PERFORM BDC_FIELD USING 'RM07M-LGORT'
L_FVAL.
LOOP AT  LT_COMMON_TMP INTO LST_TWO_STEP.
CLEAR LV_TABIX.
LV_TABIX = SY-TABIX.
* 在庫転送登録:新規明細画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0421'.
* 明細の入力
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'=NLE'.
* 入庫先保管場所
CLEAR  L_FVAL.
L_FVAL =  LST_TWO_STEP-LGORT_NYUKO.
PERFORM BDC_FIELD USING 'MSEGK-UMLGO'
L_FVAL.
* 品目コード
CLEAR  L_FVAL.
L_FVAL =  LST_TWO_STEP-MATNR.
PERFORM BDC_FIELD USING 'MSEG-MATNR(01)'
L_FVAL.
* 移動数量
CLEAR:L_FVAL,
L_MENGE.
WRITE LST_TWO_STEP-MENGE TO L_MENGE NO-GROUPING LEFT-JUSTIFIED.
L_FVAL =  L_MENGE .
PERFORM BDC_FIELD USING 'MSEG-ERFMG(01)'
L_FVAL.
CLEAR  L_FVAL.
CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
EXPORTING
INPUT  = LST_TWO_STEP-MEINS
IMPORTING
OUTPUT = LST_TWO_STEP-MEINS.
* 移動数量単位
L_FVAL =  LST_TWO_STEP-MEINS.
PERFORM BDC_FIELD USING 'MSEG-ERFME(01)'
L_FVAL .
* 保管場所
L_FVAL =  LST_TWO_STEP-LGORT.
PERFORM BDC_FIELD USING 'MSEG-LGORT(01)'
L_FVAL .
* ロット
CLEAR  L_FVAL.
L_FVAL =  LST_TWO_STEP-CHARG.
PERFORM BDC_FIELD USING 'MSEG-CHARG(01)'
L_FVAL.
IF LV_TABIX MOD 10 = 0.
* 在庫転送登録:新規明細画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0421'.
* 新規作成ボタン(次のページ)
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'/00'.
ENDIF.
CLEAR LST_TWO_STEP.
ENDLOOP.
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'=BU'.
PERFORM BDC_TRANSACTION USING 'MB1B'
CHANGING L_MBLNR
L_MESSAGE .
CLEAR: LT_COMMON_TMP[],
GT_BDCDATA[].
I_COMMON_TMP  =  LT_COMMON_TMP.
ENDFORM.                    " EXCUTE_MB1B_COM_T
*&---------------------------------------------------------------------*
*&      Form  GET_BDC_TAL_SAL_TWO
*&---------------------------------------------------------------------*
*       保管場所,受注伝票別用(受注在庫(二次)
*----------------------------------------------------------------------*
FORM GET_BDC_TAL_SAL_TWO  USING   I_SAL TYPE TYP_TD_TWO_STEP
CHANGING E_SAL_TMP TYPE TYP_TD_TWO_STEP.

DATA:LST_TWO_STEP TYPE ZSEGSD0039,
LT_SAL TYPE TYP_TD_TWO_STEP,
LV_TABIX TYPE SY-TABIX,
LF_LGORT_NYUKO TYPE LGORT_D,
LF_VBELN TYPE VBELN,
LF_POSNR TYPE POSNR,
LT_TWO_STEP_TMP TYPE TYP_TD_TWO_STEP,
LST_TWO_STEP_TMP TYPE ZSEGSD0039.

LT_SAL =  I_SAL.
SORT  LT_SAL BY LGORT_NYUKO.
LOOP AT LT_SAL  INTO LST_TWO_STEP.
CLEAR LV_TABIX.
LV_TABIX = SY-TABIX.
LF_LGORT_NYUKO = LST_TWO_STEP-LGORT_NYUKO.
MOVE-CORRESPONDING LST_TWO_STEP TO LST_TWO_STEP_TMP.
APPEND  LST_TWO_STEP_TMP TO  E_SAL_TMP.
DELETE LT_SAL INDEX LV_TABIX.
READ TABLE LT_SAL INTO LST_TWO_STEP_TMP
WITH KEY  LGORT_NYUKO =  LF_LGORT_NYUKO.
IF SY-SUBRC <> 0 .
*     BDCで在庫転送処理
PERFORM  EXCUTE_MB1B_SAL_T CHANGING E_SAL_TMP.
ENDIF.
CLEAR LF_LGORT_NYUKO.
ENDLOOP.

ENDFORM.                    " GET_BDC_TAL_SAL_TWO
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_MB1B_SAL_T
*&---------------------------------------------------------------------*
*      在庫転送の実行(受注在庫)(二次)
*----------------------------------------------------------------------*
FORM EXCUTE_MB1B_SAL_T  CHANGING I_SAL_TMP TYPE TYP_TD_TWO_STEP.
DATA: LST_TWO_STEP TYPE ZSEGSD0039,
L_FVAL TYPE BDC_FVAL,
L_MENGE(13) TYPE C,
L_MBLNR TYPE MKPF-MBLNR,
L_MESSAGE(80)  TYPE C,
LT_SAL_TMP TYPE TYP_TD_TWO_STEP,
LV_TABIX TYPE SY-TABIX.

LT_SAL_TMP =   I_SAL_TMP .
READ TABLE  LT_SAL_TMP INTO LST_TWO_STEP  INDEX 1.
* 在庫転送登録:第一画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0400'.
* Ｅｎｔｅｒを押す
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'/00'.
* 伝票日付
CLEAR  L_FVAL.
L_FVAL = SY-DATUM.
PERFORM BDC_FIELD USING 'MKPF-BLDAT'
L_FVAL.
* 転記日付
CLEAR  L_FVAL.
L_FVAL = SY-DATUM.
PERFORM BDC_FIELD USING 'MKPF-BUDAT'
L_FVAL .
* 入出庫票(参照伝票番号)
CLEAR  L_FVAL.
L_FVAL = GF_XBLNR.
PERFORM BDC_FIELD USING 'RM07M-MTSNR'
L_FVAL.
* 伝票ヘッダText
CLEAR  L_FVAL.
L_FVAL = GF_BKTXT.
PERFORM BDC_FIELD USING 'MKPF-BKTXT'
L_FVAL.
* 移動タイプ
PERFORM BDC_FIELD USING 'RM07M-BWARTWA'
'311'.
* 特殊在庫区分
PERFORM BDC_FIELD USING 'RM07M-SOBKZ'
'E'.
* プラント
CLEAR  L_FVAL.
L_FVAL = LST_TWO_STEP-WERKS.
PERFORM BDC_FIELD USING 'RM07M-WERKS'
L_FVAL.
* 出庫元保管場所
CLEAR  L_FVAL.
L_FVAL = LST_TWO_STEP-LGORT.
PERFORM BDC_FIELD USING 'RM07M-LGORT'
L_FVAL.
LOOP AT  LT_SAL_TMP INTO LST_TWO_STEP.
CLEAR LV_TABIX.
LV_TABIX = SY-TABIX.
* 在庫転送登録:新規明細画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0421'.
* 明細の入力
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'=NLE'.
* 入庫先保管場所
CLEAR  L_FVAL.
L_FVAL =  LST_TWO_STEP-LGORT_NYUKO.
PERFORM BDC_FIELD USING 'MSEGK-UMLGO'
L_FVAL.
* 品目コード
CLEAR  L_FVAL.
L_FVAL =  LST_TWO_STEP-MATNR.
PERFORM BDC_FIELD USING 'MSEG-MATNR(01)'
L_FVAL.
* 移動数量
CLEAR:L_FVAL,
L_MENGE.
WRITE LST_TWO_STEP-MENGE TO L_MENGE NO-GROUPING LEFT-JUSTIFIED.
L_FVAL =  L_MENGE .
PERFORM BDC_FIELD USING 'MSEG-ERFMG(01)'
L_FVAL.
CLEAR  L_FVAL.
CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
EXPORTING
INPUT  = LST_TWO_STEP-MEINS
IMPORTING
OUTPUT = LST_TWO_STEP-MEINS.
* 移動数量単位
L_FVAL =  LST_TWO_STEP-MEINS.
PERFORM BDC_FIELD USING 'MSEG-ERFME(01)'
L_FVAL .
* 保管場所
L_FVAL =  LST_TWO_STEP-LGORT.
PERFORM BDC_FIELD USING 'MSEG-LGORT(01)'
L_FVAL .
* ロット
CLEAR  L_FVAL.
L_FVAL =  LST_TWO_STEP-CHARG.
PERFORM BDC_FIELD USING 'MSEG-CHARG(01)'
L_FVAL.
* 受注伝票
CLEAR  L_FVAL.
L_FVAL =  LST_TWO_STEP-VBELN.
PERFORM BDC_FIELD USING 'MSEGK-MAT_KDAUF'
L_FVAL.
* 受注伝票明細
CLEAR  L_FVAL.
L_FVAL =  LST_TWO_STEP-POSNR.
PERFORM BDC_FIELD USING 'MSEGK-MAT_KDPOS'
L_FVAL.

IF LV_TABIX MOD 10 = 0.
* 在庫転送登録:新規明細画面
PERFORM BDC_DYNAPRO USING 'SAPMM07M'
'0421'.
* 新規作成ボタン(次のページ)
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'/00'.
ENDIF.
CLEAR:LST_TWO_STEP.
ENDLOOP.
PERFORM BDC_FIELD USING 'BDC_OKCODE'
'=BU'.
PERFORM BDC_TRANSACTION USING 'MB1B'
CHANGING L_MBLNR
L_MESSAGE .
CLEAR: LT_SAL_TMP[],
GT_BDCDATA[].
I_SAL_TMP  =  LT_SAL_TMP.
ENDFORM.                    " EXCUTE_MB1B_SAL_T
