*&---------------------------------------------------------------------*
*&  Include           ZEGMMR0210F02
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_FIELDCATALOG
*&---------------------------------------------------------------------*
*       ALV項目設定
*----------------------------------------------------------------------*
*      -->構造名
*      <--FIELDCAT用内部テーブル
*----------------------------------------------------------------------*
FORM SET_FIELDCATALOG  USING    I_LST_STRUCTURE_NAME  TYPE DD02L-TABNAME
CHANGING O_TD_FIELDCAT TYPE  LVC_T_FCAT.

* FIELDCAT属性の設定
CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
EXPORTING
I_STRUCTURE_NAME       = I_LST_STRUCTURE_NAME
CHANGING
CT_FIELDCAT            = O_TD_FIELDCAT
EXCEPTIONS
INCONSISTENT_INTERFACE = 1
PROGRAM_ERROR          = 2
OTHERS                 = 3.

IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
LEAVE TO SCREEN 0 .
ENDIF.
ENDFORM.                    " SET_FIELDCATALOGe
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV
*&---------------------------------------------------------------------*
*       alvリスト表示
*----------------------------------------------------------------------*
FORM DISPLAY_ALV_ONE_STEP CHANGING O_TD_ONE_STEP TYPE TYP_TD_ONE_STEP.
DATA:
LTD_FIELDCAT TYPE LVC_T_FCAT,     "ITAB:FIELDCAT
LST_FCAT LIKE LINE OF  LTD_FIELDCAT,
LST_LAYOUT   TYPE LVC_S_LAYO.     "ST:LAYOUT
DATA  LST_STRUCTURE_NAME  TYPE DD02L-TABNAME.
DATA LT_SORT  TYPE TABLE OF LVC_S_SORT.
DATA LST_GRID_SETTINGS TYPE LVC_S_GLAY.
FIELD-SYMBOLS:
<LFS_FIELDCAT> TYPE LVC_S_FCAT.

* FIELDCAT属性の設定
LST_STRUCTURE_NAME = 'ZSEGSD0038'.
PERFORM SET_FIELDCATALOG USING LST_STRUCTURE_NAME
CHANGING TD_FIELDCAT.
LTD_FIELDCAT = TD_FIELDCAT.
LOOP AT  LTD_FIELDCAT INTO LST_FCAT  .
IF  LST_FCAT-FIELDNAME = 'LGORT_NYU'.

LST_FCAT-EDIT  = 'X'.
ENDIF.
MODIFY LTD_FIELDCAT FROM  LST_FCAT.
ENDLOOP.
READ TABLE LTD_FIELDCAT ASSIGNING <LFS_FIELDCAT> INDEX 1.

IF SY-SUBRC = 0.
<LFS_FIELDCAT>-NO_OUT = 'X'.
ENDIF.
* レイアウト属性の設定
* ストライプ
LST_LAYOUT-ZEBRA = 'X'.
LST_LAYOUT-BOX_FNAME = 'SEL'.
LST_LAYOUT-SEL_MODE  = 'D'.

* ALV コントロール: 列幅の最適化
LST_LAYOUT-CWIDTH_OPT = 'X'.

* ALV 編集した項目の値を更新する
LST_GRID_SETTINGS-EDT_CLL_CB = 'X'.
CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
EXPORTING
I_CALLBACK_PROGRAM       = SY-REPID
I_CALLBACK_PF_STATUS_SET = CNS_PF_STATUS_2000
I_CALLBACK_USER_COMMAND  = CNS_USER_CMD_2000
IS_LAYOUT_LVC            = LST_LAYOUT
IT_FIELDCAT_LVC          = LTD_FIELDCAT
I_SAVE                   = 'A'
I_GRID_SETTINGS          = LST_GRID_SETTINGS
TABLES
T_OUTTAB                 = O_TD_ONE_STEP
EXCEPTIONS
PROGRAM_ERROR            = 1
OTHERS                   = 2.

IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
DISPLAY LIKE 'E'.

LEAVE LIST-PROCESSING.
ENDIF.
ENDFORM.                    " DISPLAY_ALV
*&---------------------------------------------------------------------*
*&      Form  SET_STATUS_2000
*&---------------------------------------------------------------------*
*       2000 ALV画面のステータスの設定
*----------------------------------------------------------------------*

FORM SET_STATUS_2000 USING UT_EXTAB TYPE SLIS_T_EXTAB.
REFRESH: UT_EXTAB.
IF RB_01 = 'X'.
SET TITLEBAR 'TTB_2000'.
ELSEIF RB_02 = 'X'.
SET TITLEBAR 'TTB_3000'.
ENDIF.

IF W_CHECK_PASSED <> 'X'.
APPEND 'TRANSFER' TO UT_EXTAB.
ELSE.
REFRESH: UT_EXTAB[].
ENDIF.
SET PF-STATUS 'STT_2000' EXCLUDING UT_EXTAB[].

ENDFORM.                    " SET_STATUS_2000
*&---------------------------------------------------------------------*
*&      Form  USER_COMMAND_2000
*&---------------------------------------------------------------------*
*       2000 ALV画面の事件
*----------------------------------------------------------------------*
FORM USER_COMMAND_2000 USING UCOMM    TYPE SY-UCOMM
SELFIELD TYPE SLIS_SELFIELD.
* ボタンイベント処理
CASE UCOMM.
*   「Confirm」ボタン押下時の処理
WHEN CNS_UCOMM_CONFIRM.
PERFORM EXCUTE_CONFIRM_ONE_STEP.
*   「Transfer」ボタン押下時の処理
WHEN CNS_UCOMM_TRANSFER.
PERFORM EXCUTE_TRANSFER_ONE_STEP.
WHEN OTHERS.
ENDCASE.
SELFIELD-REFRESH = 'X'.
ENDFORM.                    " USER_COMMAND_2000
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_CONFIRM_ONE_STEP
*&---------------------------------------------------------------------*
*       在庫確認ボタンを押す場合の処理
*----------------------------------------------------------------------*
FORM EXCUTE_CONFIRM_ONE_STEP .
DATA LT_ONE_STEP TYPE STANDARD TABLE OF ZSEGSD0038.
* 行選択のチェック処理
PERFORM CHECK_ROW_ONE_STEP .
* 在庫足りるかチェック処理
PERFORM CHECK_QTY_ONE_STEP CHANGING LT_ONE_STEP .
ENDFORM.                    " EXCUTE_CONFIRM_ONE_STEP
*&---------------------------------------------------------------------
*
*&      Module  STATUS_3000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_3000 OUTPUT.
DATA UT_EXTAB TYPE SLIS_T_EXTAB.

PERFORM SET_STATUS_2000 USING UT_EXTAB.

ENDMODULE.                 " STATUS_3000  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  DISPLAY_ALV  OUTPUT
*&---------------------------------------------------------------------*
*       二次転送のＡＬＶリストを表示する
*----------------------------------------------------------------------*
MODULE DISPLAY_ALV OUTPUT.
* 二次転送のＡＬＶリストを表示する
PERFORM DISPLAY_ALV_TWO_STEP.
ENDMODULE.                 " DISPLAY_ALV  OUTPUT
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_two_step
*&---------------------------------------------------------------------*
*       二次転送のＡＬＶリストを表示する
*----------------------------------------------------------------------*
FORM DISPLAY_ALV_TWO_STEP .
***** 2016/1/18 ISID18 INS START *****
DATA:
LST_VARIANT TYPE DISVARIANT.

LST_VARIANT-REPORT  = SY-REPID.
LST_VARIANT-HANDLE = SY-DYNNR.
***** 2016/1/18 ISID18 INS END *****
IF GR_ALVGRID IS INITIAL .
CREATE OBJECT: GR_CCONTAINER
EXPORTING
CONTAINER_NAME = 'CONTAINER'.
CREATE OBJECT GR_ALVGRID
EXPORTING
I_PARENT = GR_CCONTAINER.

*　FIELDCATとレイアウトの設定
PERFORM SET_FIELDCAT_LAYOUT CHANGING GS_LAYOUT.
*　ALVリストを表示する
CALL METHOD GR_ALVGRID->SET_TABLE_FOR_FIRST_DISPLAY
EXPORTING
I_SAVE                        = 'A'
IS_LAYOUT                     = GS_LAYOUT
***** 2016/1/18 ISID18 INS START *****
IS_VARIANT                    = LST_VARIANT
***** 2016/1/18 ISID18 INS END *****
CHANGING
IT_OUTTAB                     = TD_TWO_STEP[]
IT_FIELDCATALOG               = TD_FIELDCAT
EXCEPTIONS
INVALID_PARAMETER_COMBINATION = 1
PROGRAM_ERROR                 = 2
TOO_MANY_LINES                = 3
OTHERS                        = 4.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
DISPLAY LIKE 'E'.

LEAVE TO SCREEN 0.
ENDIF.
ELSE .
ENDIF .
ENDFORM.                    " DISPLAY_ALV_two_step_EDIT
*&---------------------------------------------------------------------*
*&      Form  SET_FIELDCAT_LAYOUT
*&---------------------------------------------------------------------*
*       FIELDCATとレイアウトの設定
*----------------------------------------------------------------------*
FORM SET_FIELDCAT_LAYOUT  CHANGING  O_GS_LAYOUT TYPE LVC_S_LAYO  .
* ローカル変数定義
DATA: LT_FCAT TYPE LVC_T_FCAT,
LS_FCAT TYPE LVC_S_FCAT,
LS_TWO_STEP TYPE ZSEGSD0039,
LV_TABIX TYPE SY-TABIX,
LST_STRUCTURE_NAME  TYPE DD02L-TABNAME,
LTD_FIELDCAT TYPE LVC_T_FCAT.     "ITAB:FIELDCAT
FIELD-SYMBOLS:
<LFS_FIELDCAT> TYPE LVC_S_FCAT.

* FIELDCAT属性の設定
LST_STRUCTURE_NAME = 'ZSEGSD0039'.
PERFORM SET_FIELDCATALOG USING LST_STRUCTURE_NAME
CHANGING TD_FIELDCAT.

LTD_FIELDCAT = TD_FIELDCAT.
LOOP AT  LTD_FIELDCAT INTO  LS_FCAT  .
IF  LS_FCAT-FIELDNAME = 'MENGE'
OR LS_FCAT-FIELDNAME = 'LGORT_NYUKO'.

LS_FCAT-EDIT = 'X'.
ENDIF.
MODIFY LTD_FIELDCAT FROM  LS_FCAT.
ENDLOOP.
READ TABLE LTD_FIELDCAT ASSIGNING <LFS_FIELDCAT> INDEX 1.
* レイアウトの設定
IF SY-SUBRC = 0.
<LFS_FIELDCAT>-NO_OUT = 'X'.
ENDIF.
TD_FIELDCAT  = LTD_FIELDCAT.
O_GS_LAYOUT-ZEBRA = 'X'.
O_GS_LAYOUT-BOX_FNAME = 'SEL'.
O_GS_LAYOUT-SEL_MODE  = 'D'.
*  O_GS_LAYOUT-NO_TOOLBAR = 'X'.    "標準のツールバーを隠す
O_GS_LAYOUT-CWIDTH_OPT = 'X'.

ENDFORM.                    " SET_LAYOUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_3000_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_3000 INPUT.
GR_ALVGRID->CHECK_CHANGED_DATA(
*     IMPORTING
*       E_VALID   =     " エントリ整合性あり
*     CHANGING
*       C_REFRESH = 'X'    " 文字項目長 1
).
CASE SY-UCOMM .
WHEN '&F03' OR '&F15' OR '&F12' .
LEAVE TO SCREEN 0 .
*   「Confirm」ボタン押下時の処理
WHEN CNS_UCOMM_CONFIRM.
PERFORM EXCUTE_CONFIRM_TWO_STEP.
*   「Transfer」ボタン押下時の処理
WHEN CNS_UCOMM_TRANSFER.
PERFORM EXCUTE_TRANSFER_TWO_STEP.
*     WHEN OTHERS.
ENDCASE .

ENDMODULE.                 " USER_COMMAND_3000_EXIT  INPUT
*&---------------------------------------------------------------------*
*&      Module  SET_FUNCTION_CODE_3000  INPUT
*&---------------------------------------------------------------------*
*      標準のボタンを起動
*----------------------------------------------------------------------*
MODULE SET_FUNCTION_CODE_3000 INPUT.
GR_ALVGRID->SET_FUNCTION_CODE(
CHANGING
C_UCOMM = SY-UCOMM     " Function Code
).

ENDMODULE.                 " SET_FUNCTION_CODE_3000  INPUT
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_TRANSFER_ONE_STEP
*&---------------------------------------------------------------------*
*      在庫転送確認ボタンを押す場合の処理
*----------------------------------------------------------------------*
FORM EXCUTE_TRANSFER_ONE_STEP .
DATA:LT_ONE_STEP_ALL TYPE STANDARD TABLE OF ZSEGSD0038,
LT_ONE_STEP_ONE_INVOICE TYPE STANDARD TABLE OF ZSEGSD0038,
LST_ONE_STEP TYPE  ZSEGSD0038,
LST_ONE_STEP_NEXT TYPE  ZSEGSD0038,
LV_TABIX TYPE  INT4,
LT_ONE_STEP_COM TYPE STANDARD TABLE OF ZSEGSD0038,
LT_ONE_STEP_S TYPE STANDARD TABLE OF ZSEGSD0038,
LT_ONE_STEP_COM_TMP TYPE STANDARD TABLE OF ZSEGSD0038,
LT_ONE_STEP_S_TMP TYPE STANDARD TABLE OF ZSEGSD0038,
LR_GRID TYPE REF TO CL_GUI_ALV_GRID.

* 行選択のチェック処理
PERFORM CHECK_ROW_ONE_STEP .
* 在庫足りるかチェック処理
PERFORM CHECK_QTY_ONE_STEP  CHANGING LT_ONE_STEP_ALL.

SORT LT_ONE_STEP_ALL BY XBLNR.
LOOP AT LT_ONE_STEP_ALL INTO LST_ONE_STEP.
LV_TABIX = SY-TABIX + 1.
APPEND LST_ONE_STEP TO LT_ONE_STEP_ONE_INVOICE.
CLEAR LST_ONE_STEP_NEXT.
READ TABLE LT_ONE_STEP_ALL INTO LST_ONE_STEP_NEXT INDEX LV_TABIX.
IF LST_ONE_STEP_NEXT-XBLNR <> LST_ONE_STEP-XBLNR.
* 利用可能在庫、受注在庫に分割
PERFORM SPLIT_ONE_STEP USING LT_ONE_STEP_ONE_INVOICE
CHANGING LT_ONE_STEP_COM
LT_ONE_STEP_S.
* 利用可能在庫の分に向けて、MB1Bを実行する
IF LT_ONE_STEP_COM IS NOT INITIAL .
PERFORM GET_BDC_TAL_COM USING LT_ONE_STEP_COM
CHANGING LT_ONE_STEP_COM_TMP.
ENDIF.
* 受注在庫の分に向けて、MB1Bを実行する
IF LT_ONE_STEP_S IS NOT INITIAL .
PERFORM GET_BDC_TAL_SAL USING  LT_ONE_STEP_S
CHANGING LT_ONE_STEP_COM_TMP.
ENDIF.
CLEAR :LT_ONE_STEP_ONE_INVOICE[], LT_ONE_STEP_COM[],
LT_ONE_STEP_S[],LT_ONE_STEP_COM_TMP[].
ENDIF.
ENDLOOP.

CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
*    EXPORTING
*      IR_SALV_FULLSCREEN_ADAPTER =
IMPORTING
*      ET_EXCLUDING               =
*      E_REPID                    =
*      E_CALLBACK_PROGRAM         =
*      E_CALLBACK_ROUTINE         =
E_GRID                     =  LR_GRID   " ALV List Viewer
*      ET_FIELDCAT_LVC            =     " Field Catalog
*      ER_TRACE                   =     " Trace Class
*      E_FLG_NO_HTML              =     " Character Field Length 1
*      ES_LAYOUT_KKBLO            =     " Character Field Length 1
*      ES_SEL_HIDE                =     " Character Field Length 1
*      ET_EVENT_EXIT              =     " Character Field Length 1
*      ER_FORM_TOL                =     " Character Field Length 1
*      ER_FORM_EOL                =     " Character Field Length 1
.
LR_GRID->REFRESH_TABLE_DISPLAY( ).
ENDFORM.                    " EXCUTE_TRANSFER_ONE_STEP
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_CONFIRM_two_step
*&---------------------------------------------------------------------*
*       在庫確認ボタンを押す場合の処理(二次)
*----------------------------------------------------------------------*
FORM EXCUTE_CONFIRM_TWO_STEP .
DATA LT_TWO_STEP TYPE TYP_TD_TWO_STEP.
* 行選択のチェック処理
PERFORM CHECK_ROW_TWO_STEP.
* 在庫足りるかチェック処理
PERFORM CHECK_QTY_TWO_STEP CHANGING LT_TWO_STEP.
ENDFORM.                    " EXCUTE_CONFIRM_two_step
*&---------------------------------------------------------------------*
*&      Form  EXCUTE_TRANSFER_TWO_STEP
*&---------------------------------------------------------------------*
*       在庫転送確認ボタンを押す場合の処理
*----------------------------------------------------------------------*
FORM EXCUTE_TRANSFER_TWO_STEP .
DATA:LT_TWO_STEP        TYPE TYP_TD_TWO_STEP,
LT_TWO_STEP_COM TYPE TYP_TD_TWO_STEP,
LT_TWO_STEP_S      TYPE TYP_TD_TWO_STEP,
LT_TWO_STEP_COM_TMP TYPE TYP_TD_TWO_STEP.
* 行選択のチェック処理
PERFORM CHECK_ROW_TWO_STEP.
* 在庫足りるかチェック処理
PERFORM CHECK_QTY_TWO_STEP CHANGING LT_TWO_STEP.
* 利用可能在庫、受注在庫に分割
PERFORM SPLIT_TWO_STEP USING LT_TWO_STEP
CHANGING LT_TWO_STEP_COM
LT_TWO_STEP_S.
* 利用可能在庫の分に向けて、MB1Bを実行する
IF LT_TWO_STEP_COM  IS NOT INITIAL .
PERFORM GET_BDC_TAL_COM_TWO USING LT_TWO_STEP_COM
CHANGING LT_TWO_STEP_COM_TMP.
ENDIF.
* 受注在庫の分に向けて、MB1Bを実行する
IF LT_TWO_STEP_S IS NOT INITIAL .
PERFORM GET_BDC_TAL_SAL_TWO  USING  LT_TWO_STEP_S
CHANGING LT_TWO_STEP_COM_TMP.
ENDIF.
ENDFORM.                    " EXCUTE_TRANSFER_TWO_STEP .
