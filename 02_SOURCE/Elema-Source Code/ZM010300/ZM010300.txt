************************************************************************
* [プログラム名]
*   ZM010300      帳簿棚卸一覧表（在庫）
*
* [処理概要]
*   ・部門長・管理経理部・税務署・監査法人・外部へ商品有り高を示す。
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2001/11/26   PSD K.igarashi  新規開発
*  2001/12/03   PSD k.igarashi  初期化処理追加
*  2001/12/04   PSD K.igarashi  内部ＴＢＬ型削除
*  2002/01/10   PSD K.igarashi  ABAPリストビューアヘッダ修正
*  2002/02/05   PSD k.igarashi  抽出条件変更
*  2002/02/07   PSD k.igarashi  抽出条件変更
*  2002/02/07   PSD k.igarashi  ABAPリストビューア印刷情報設定
*  2002/02/14   PSD M.Arai      購買グループ条件不具合対応
*  2002/02/14   PSD M.Arai      仕入先設定不具合対応
*  2002/02/21   PSD M.Arai      入力ヘルプ不具合対応
*  2002/03/07   PSD T.SAITOH    ユーザパラメータ選択画面初期値設定
*  2002/05/09   PSD T.SAITOH    会計数値違い明確化文章表示
*  2002/06/20   PSD T.SAITOH    再移送
*  2002/08/12   PSD T.SAITOH    単価の設定方法変更
*  2002/09/03   PSD T.SAITOH    検索ヘルプ修正
*  2004/11/02   DMC M.SEIWA     仕入先名称の取得の条件の修正
*  2006/03/02   DMC R.Hata      LB0509対応
*  2007/03/13   RYU.SHUN        ＡＬＶレイアウトに３項目の追加
************************************************************************
REPORT  zm010300.

************************************************************************
* TYPES
************************************************************************
TYPE-POOLS slis.

* ①品目の在庫データ内部テーブル型
TYPES: BEGIN OF typ_zaikoa,
matnr TYPE mard-matnr,    "品目コード
werks TYPE mard-werks,    "部門
lgort TYPE mard-lgort,    "保管場所
labst TYPE mard-labst,    "利用可能在庫数量
lgpbe TYPE mard-lgpbe,    "棚番
END OF typ_zaikoa.

* ②品目在庫拡張内部テーブル型
TYPES: BEGIN OF typ_zaikob,
matnr TYPE mard-matnr,    "品目コード
maktx TYPE makt-maktx,    "品目名
werks TYPE mard-werks,    "部門
name1 TYPE t001w-name1,   "部門名
*         LGORT TYPE MARD-LGORT,    "保管場所
*         LABST TYPE MARD-LABST,    "利用可能在庫数量
*         LGPBE TYPE MARD-LGPBE,    "棚番
mseh3 TYPE t006a-mseh3,   "単位
ekgrp TYPE marc-ekgrp,    "購買グループ
eknam TYPE t024-eknam,    "購買グループ名
verpr TYPE mbew-verpr,    "移動平均原価
peinh TYPE mbew-peinh,    "価格単位
trame TYPE marc-trame,    "移送中在庫
waers TYPE t001-waers,    "通貨コード
*---APPEND START PSD T.SAITOH 2002/08/12 ---------------------------*
salk3 TYPE mbew-salk3,"評価在庫合計額
lbkum TYPE mbew-lbkum,"評価在庫合計（数量）
*---APPEND END   PSD T.SAITOH 2002/08/12 ---------------------------*
END OF typ_zaikob.

* ③得意先特殊在庫内部テーブル型
TYPES: BEGIN OF typ_tokuisaki,
matnr TYPE mard-matnr,    "品目コード
werks TYPE mard-werks,    "プラント
kunnr TYPE msku-kunnr,    "得意先コード
kulab TYPE msku-kulab,    "預託在庫
END OF typ_tokuisaki.

* ④供給元一覧内部テーブル型
TYPES: BEGIN OF typ_kyokyu,
matnr TYPE eord-matnr,    "品目コード
werks TYPE eord-werks,    "プラント
zeord TYPE eord-zeord,    "番号
lifnr TYPE eord-lifnr,    "仕入先コード
name1 TYPE lfa1-name1,    "仕入先名
END OF typ_kyokyu.

* ⑤仕入先特殊在庫内部テーブル型
TYPES: BEGIN OF typ_shiiresaki,
matnr TYPE mslb-matnr,    "品目コード
werks TYPE mslb-werks,    "プラント
lifnr TYPE mslb-lifnr,    "仕入先コード
lblab TYPE mslb-lblab,    "支給在庫
END OF typ_shiiresaki.

* 2001/12/04 PSD K.igarashi DEL ↓
** ⑥帳簿出力用内部テーブル型
*TYPES: BEGIN OF TYP_WRITE,
*         WERKS     TYPE MARD-WERKS,        "部門
*         VNAME     TYPE T001W-NAME1,       "部門名
*         EKGRP     TYPE MARC-EKGRP,        "グループ
*         EKNAM     TYPE T024-EKNAM,        "グループ名
*         LIFNR     TYPE EORD-LIFNR,        "仕入先
*         LNAME     TYPE LFA1-NAME1,        "仕入先名
*         MATNR     TYPE MARD-MATNR,        "品目コード
*         MAKTX     TYPE MAKT-MAKTX,        "品目名
*         LABST     TYPE MARD-LABST,        "当月残数
*         MSEH3     TYPE T006A-MSEH3,       "単位
*         VERPR     TYPE MBEW-VERPR,        "単価
*         SALK3     TYPE ZMLIST_V03-SALK3,  "在庫金額
*         WAERS     TYPE T001-WAERS,        "通貨
*         LGPBE     TYPE MARD-LGPBE,        "棚番
*         KULAB     TYPE MSKU-KULAB,        "預託在庫
*         LBLAB     TYPE MSLB-LBLAB,        "支給在庫
*         TRAME     TYPE MARC-TRAME,        "転送中在庫
*         TOTAL(15) TYPE C,                 "仕入先合計
*       END OF TYP_WRITE.
* 2001/12/04 PSD K.igarashi DEL ↑
************************************************************************
* DATA
************************************************************************
*--- 内部テーブル
* ①品目の在庫データ内部テーブル
DATA: gf_zaikoa TYPE typ_zaikoa,
gt_zaikoa LIKE TABLE OF gf_zaikoa.

* ②品目在庫拡張内部テーブル
DATA: gf_zaikob TYPE typ_zaikob,
gt_zaikob LIKE TABLE OF gf_zaikob.

* ③得意先特殊在庫内部テーブル
DATA: gf_tokuisaki TYPE typ_tokuisaki,
gt_tokuisaki LIKE TABLE OF gf_tokuisaki.

* ④供給元一覧内部テーブル
DATA: gf_kyokyu TYPE typ_kyokyu,
gt_kyokyu LIKE TABLE OF gf_kyokyu.

* ⑤仕入先特殊在庫内部テーブル
DATA: gf_shiiresaki TYPE typ_shiiresaki,
gt_shiiresaki LIKE TABLE OF gf_shiiresaki.

* ⑥帳票出力用内部テーブル
DATA: gf_write LIKE zmlist_v03,
gt_write LIKE TABLE OF gf_write.

*--- 構造
* 品目在庫データチェック用項目
DATA: gf_check_zaikoa LIKE gf_zaikoa.

*--- DATA
DATA: werks         LIKE t001w-werks,         "select-option用
ekgrp         LIKE t024-ekgrp,          "select-option用
zaiko_kingaku LIKE gf_write-salk3,      "在庫金額算出用
yotaku_zaiko  LIKE gf_tokuisaki-kulab,  "預託在庫算出用
shikyu_zaiko  LIKE gf_shiiresaki-lblab, "支給在庫算出用
i_gf_zaikob-verpr(20) TYPE c,           "単価変換用
kensu         TYPE p.

*--- リストビューア関連
DATA: g_repid     LIKE sy-repid,              "レポートID
gf_layout   TYPE slis_layout_alv.       "レイアウト構造

* REUSE_ALV_COMMENTARY_WRITE
DATA: gf_head_alv   TYPE slis_listheader,      "ヘッダ構造
gt_t_head_alv TYPE slis_t_listheader.    "ヘッダ用内部TBL

* ABAPリストビューアヘッダデータ保持
DATA: gf_header_data LIKE gf_write.           "ヘッダ表示情報

* REUSE_ALV_LIST_DISPLAY
DATA: top_of_page TYPE slis_formname VALUE 'TOP_OF_PAGE'.

* REUSE_ALV_EVENT
DATA: gt_event TYPE slis_t_event,          "イベント情報内部TBL
gf_event LIKE LINE OF gt_event.      "イベント情報構造

* 2002/01/10 PSD K.IGARASHI ADD ↓
DATA: gt_alv     TYPE TABLE OF zmlist_v03
WITH HEADER LINE.
* 2002/01/10 PSD K.IGARASHI ADD ↑

* 2002/02/07  PSD k.igarashi ADD ↓
DATA: gf_print TYPE slis_print_alv.
* 2002/02/07  PSD k.igarashi ADD ↑

************************************************************************
* CONSTANTS
************************************************************************
CONSTANTS: cns_001         TYPE c VALUE 'X',
cns_002         TYPE c VALUE 'W',
cns_003         TYPE c VALUE 'O',
cns_004(2)      TYPE c VALUE 'JA',
cns_005(5)      TYPE n VALUE '00001'.
CONSTANTS: cns_top(11)     TYPE c VALUE 'TOP_OF_PAGE',
cns_frm_top(15) TYPE c VALUE 'FRM_TOP_OF_PAGE'.
CONSTANTS: cns_tab_001(4)  TYPE c VALUE 'MARD',
cns_tab_002(47) TYPE c
VALUE 'MARC MAKT MARA T001W T024 MBEW T001K T001 T006A',
cns_tab_003(9)  TYPE c VALUE 'EORD LFA1',
cns_tab_004(4)  TYPE c VALUE 'MSKU',
cns_tab_005(4)  TYPE c VALUE 'MSLB'.
************************************************************************
* 選択画面
************************************************************************
*---MODIFY START PSD T.SAITOH 2002/09/03 ---------------------------*
** ↓ modify 2002.02.21 psd m.arai 入力ヘルプ不具合対応
**SELECT-OPTIONS: P_WERKS FOR GF_WRITE-WERKS OBLIGATORY,
**                P_EKGRP FOR GF_WRITE-EKGRP,
**                P_MATNR FOR GF_WRITE-MATNR.  "OBLIGATORY.
**---MODIFY START PSD T.SAITOH 2002/03/07 ---------------------------*
**SELECT-OPTIONS: P_WERKS FOR GF_ZAIKOB-WERKS OBLIGATORY,
**                P_EKGRP FOR GF_ZAIKOB-EKGRP,
**                P_MATNR FOR GF_ZAIKOB-MATNR.  "OBLIGATORY.
*SELECT-OPTIONS: P_WERKS FOR GF_ZAIKOB-WERKS MEMORY ID WRK OBLIGATORY,
*                P_EKGRP FOR GF_ZAIKOB-EKGRP MEMORY ID EKG,
*                P_MATNR FOR GF_ZAIKOB-MATNR.  "OBLIGATORY.
**---MODIFY END   PSD T.SAITOH 2002/03/07 ---------------------------*
** ↑
TABLES:t001w.
SELECT-OPTIONS: p_werks FOR t001w-werks MEMORY ID wrk OBLIGATORY,
p_ekgrp FOR gf_zaikob-ekgrp MEMORY ID ekg,
p_matnr FOR gf_zaikob-matnr.  "OBLIGATORY.
* Add 2006.03.02 --->
Select-Options : p_lgpbe For gf_zaikoa-lgpbe .
* Add 2006.03.02 <---

*---MODIFY END   PSD T.SAITOH 2002/09/03 ---------------------------*
************************************************************************
* START-OF-SELECTION
************************************************************************
START-OF-SELECTION.

* 1.対象データ抽出処理
PERFORM frm_sel_data.
* 2.帳票出力用内部テーブル作成処理
PERFORM frm_make_write.
* 3.対象データ存在チェック
PERFORM frm_check_table.
* 4.帳票出力処理
PERFORM frm_write_data.

*&---------------------------------------------------------------------*
*&      Form  frm_sel_data
*&---------------------------------------------------------------------*
*       1.対象データ抽出処理
*----------------------------------------------------------------------*
FORM frm_sel_data.

SELECT * FROM mard
INTO CORRESPONDING FIELDS OF TABLE gt_zaikoa
WHERE matnr IN p_matnr
* Mod 2006.03.02 --->
*    AND   werks IN p_werks.
AND   werks IN p_werks
And   lgpbe IN p_lgpbe .
* Mod 2006.03.02 <---
CASE sy-subrc.
WHEN 0.
SORT gt_zaikoa ASCENDING BY matnr werks lgort.
WHEN 4.
MESSAGE s600(z1) WITH text-001.  "品目在庫情報マスタ
STOP.
WHEN 8.
MESSAGE a603(z1) WITH sy-repid cns_tab_001 sy-subrc.
ENDCASE.

ENDFORM.                    " frm_sel_data
*&---------------------------------------------------------------------*
*&      Form  frm_set_data
*&---------------------------------------------------------------------*
*       2.帳票出力用内部テーブル作成処理
*----------------------------------------------------------------------*
FORM frm_make_write.

* 2.帳票出力用内部テーブル作成処理
LOOP AT gt_zaikoa INTO gf_zaikoa.

* 2001/12/04 PSD k.igarashi DEL ↓
** 保管場所チェック
*    PERFORM frm_check_lgort.
* 2001/12/04 PSD k.igarashi DEL ↑

* 品目在庫拡張内部テーブル設定処理
PERFORM frm_sel_zaikob.

CASE sy-subrc.
WHEN 0.
WHEN 4.
* 2002/02/05  psd k.igarashi MOD ↓
*        MESSAGE S600(Z1) WITH text-006.  "品目在庫拡張情報マスタ
*        STOP.
* 2002/02/07  psd k.igarashi DEL ↓
CONTINUE.
* 2002/02/05  psd k.igarashi MOD ↑
* 2002/02/07  psd k.igarashi DEL ↑
WHEN 8.
MESSAGE a603(z1) WITH sy-repid cns_tab_002 sy-subrc.
ENDCASE.

* 2-1 明細データ：供給元一覧マスタ情報設定
*--- 品目在庫、品目在庫拡張内部テーブルから得られる情報設定①
PERFORM frm_set_write1.

* ③仕入先、仕入先名の設定
PERFORM frm_sel_kyokyu.

CASE sy-subrc.
WHEN 0.
WHEN 4.
* 2002/02/05  psd k.igarashi MOD ↓
*        MESSAGE S600(Z1) WITH text-002.  "供給元一覧マスタ
*        STOP.
* 2002/02/07  psd k.igarashi DEL ↓
*        CONTINUE.
* 2002/02/05  psd k.igarashi MOD ↑
* 2002/02/07  psd k.igarashi DEL ↑
WHEN 8.
MESSAGE a603(z1) WITH sy-repid cns_tab_003 sy-subrc.
ENDCASE.
* (イ)仕入先、仕入先名の設定
gf_write-lifnr  = gf_kyokyu-lifnr.
gf_write-lname = gf_kyokyu-name1.

*--- 品目在庫、品目在庫拡張内部テーブルから得られる情報設定②
PERFORM frm_set_write2.

* ⑪預託在庫の設定
PERFORM frm_sel_tokuisaki.

* ⑫支給在庫の設定
PERFORM frm_sel_shiiresaki.

*---APPEND START RYU.SHUN 2007/03/13 ----------------------------------*
* ３項目の追加
gf_write-kulab_k = gf_write-verpr * gf_write-kulab. "預託在庫金額
gf_write-lblab_k = gf_write-verpr * gf_write-lblab. "支給在庫金額
gf_write-trame_k = gf_write-verpr * gf_write-trame. "転送中在庫金額
*---APPEND END   RYU.SHUN 2007/03/13 ----------------------------------*

* 2-2 合計行の出力
* リストビューアにて計算、出力

* 2-3 対象データチェック
PERFORM frm_check_data.

ENDLOOP.

ENDFORM.                    " frm_make_write
*&---------------------------------------------------------------------*
*&      Form  frm_check_lgort
*&---------------------------------------------------------------------*
*       保管場所チェック
*----------------------------------------------------------------------*
FORM frm_check_lgort.

* 保存場所が１つ以上の場合
IF ( gf_zaikoa-matnr = gf_check_zaikoa-matnr ) AND
( gf_zaikoa-werks = gf_check_zaikoa-werks ) AND
( gf_zaikoa-lgort = gf_check_zaikoa-lgort ).

MESSAGE a603(z1) WITH sy-repid cns_tab_001 sy-subrc.

ELSE.
* 保存場所が１つ以下の場合
*--- 次回チェック用データ保存
gf_check_zaikoa-matnr = gf_zaikoa-matnr.
gf_check_zaikoa-werks = gf_zaikoa-werks.
gf_check_zaikoa-lgort = gf_zaikoa-lgort.
ENDIF.

ENDFORM.                    " frm_check_lgort
*&---------------------------------------------------------------------*
*&      Form  frm_sel_zaikob
*&---------------------------------------------------------------------*
*       品目在庫拡張内部テーブル設定処理
*----------------------------------------------------------------------*
FORM frm_sel_zaikob.

SELECT SINGLE
a~matnr a~werks a~ekgrp a~trame
"品目･部門ｺｰﾄﾞ/購買ｸﾞﾙｰﾌﾟ/移送中在庫
b~maktx                       "品目名
d~name1                       "部門名
e~eknam                       "購買ｸﾞﾙｰﾌﾟ名
f~verpr f~peinh               "位相平均原価、単位価格
h~waers                       "通貨ｺｰﾄﾞ
i~mseh3                       "商用数量単位
*---APPEND START PSD T.SAITOH 2002/08/12 ---------------------------*
f~salk3 "評価在庫合計額
f~lbkum "評価在庫合計(数量)
*---APPEND END   PSD T.SAITOH 2002/08/12 ---------------------------*
INTO CORRESPONDING FIELDS OF gf_zaikob  "TABLE GT_ZAIKOB
FROM marc AS a INNER JOIN makt         AS b
ON a~matnr = b~matnr INNER JOIN mara  AS c
ON a~matnr = c~matnr INNER JOIN t001w AS d
ON a~werks = d~werks INNER JOIN t024  AS e
ON a~ekgrp = e~ekgrp INNER JOIN mbew  AS f
ON a~matnr = f~matnr AND
a~werks = f~bwkey INNER JOIN t001k AS g
ON a~werks = g~bwkey INNER JOIN t001  AS h
ON g~bukrs = h~bukrs INNER JOIN t006a AS i
ON c~meins = i~msehi
WHERE  a~matnr = gf_zaikoa-matnr
AND  a~werks = gf_zaikoa-werks
* ↓APPEND 2002/02/14 PSD M.Arai 購買グループ条件不具合対応
AND  a~ekgrp IN p_ekgrp
* ↑
AND  i~spras = cns_004   "JA
AND  b~spras = cns_004.  "JA.

ENDFORM.                    " frm_sel_zaikob
*&---------------------------------------------------------------------*
*&      Form  frm_set_write1
*&---------------------------------------------------------------------*
*       品目在庫、品目在庫拡張内部テーブルから得られる情報設定①
*----------------------------------------------------------------------*
FORM frm_set_write1.

* ①部門、部門名の設定
gf_write-werks  = gf_zaikoa-werks.
gf_write-vname = gf_zaikob-name1.

* ②グループ、グループ名の設定
gf_write-ekgrp = gf_zaikob-ekgrp.
gf_write-eknam = gf_zaikob-eknam.

ENDFORM.                    " frm_set_write1
*&---------------------------------------------------------------------*
*&      Form  frm_sel_kyokyu
*&---------------------------------------------------------------------*
*       2-1-③仕入先、仕入先名の設定
*----------------------------------------------------------------------*
FORM frm_sel_kyokyu.
* ↓APPEND 2002/02/14 PSD M.Arai 仕入先設定不具合対応
CLEAR gf_kyokyu.
* ↑

* (ア)対象データ抽出処理
SELECT SINGLE
a~matnr a~werks a~lifnr
b~name1
INTO CORRESPONDING FIELDS OF gf_kyokyu  "TABLE GT_KYOKYU
FROM eord AS a INNER JOIN lfa1 AS b
ON a~lifnr = b~lifnr
WHERE a~matnr =  gf_zaikoa-matnr
AND  a~werks =  gf_zaikoa-werks
AND  a~vdatu <= sy-datum
AND  a~bdatu >= sy-datum
AND  a~flifn =  cns_001.  "X
*2004/11/02　MOD_S
*    AND  a~zeord =  cns_005.
*2004/11/02　MOD_E
ENDFORM.                    " frm_sel_kyokyu
*&---------------------------------------------------------------------*
*&      Form  frm_set_write2
*&---------------------------------------------------------------------*
*       品目在庫、品目在庫拡張内部テーブルから得られる情報設定②
*----------------------------------------------------------------------*
FORM frm_set_write2.

* ④品目コード、品目名の設定
gf_write-matnr = gf_zaikob-matnr.
gf_write-maktx = gf_zaikob-maktx.

* ⑤当月残数の設定
gf_write-labst = gf_zaikoa-labst.

* ⑥単位の設定
gf_write-mseh3 = gf_zaikob-mseh3.

* ⑦単価の設定
*---MODIFY START PSD T.SAITOH 2002/08/12 ---------------------------*
**--- 単価(移動平均原価)の変換
*  CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_IDOC'
*    EXPORTING
*      CURRENCY          = GF_ZAIKOB-WAERS
*      SAP_AMOUNT        = GF_ZAIKOB-VERPR
*   IMPORTING
*     IDOC_AMOUNT       = I_GF_ZAIKOB-VERPR.
**--- 単価の計算
*  GF_WRITE-VERPR = I_GF_ZAIKOB-VERPR / GF_ZAIKOB-PEINH.
PERFORM frm_set_netpr.


*---MODIFY END   PSD T.SAITOH 2002/08/12 ---------------------------*

* ⑧在庫金額の設定
zaiko_kingaku = gf_write-labst * gf_write-verpr.
*--- 小数点以下切り捨て
gf_write-salk3 = trunc( zaiko_kingaku ).

* ⑨通貨の設定
gf_write-waers = gf_zaikob-waers.

* ⑩棚番の設定
gf_write-lgpbe = gf_zaikoa-lgpbe.

* ⑬転送中在庫の設定
gf_write-trame = gf_zaikob-trame.

ENDFORM.                    " frm_set_write2
*&---------------------------------------------------------------------*
*&      Form  frm_sel_tokuisaki
*&---------------------------------------------------------------------*
*       2-1-⑪預託在庫の設定
*----------------------------------------------------------------------*
FORM frm_sel_tokuisaki.

* 2001/12/03 PSD k.igarashi ADD ↓
CLEAR: gf_write-kulab,
yotaku_zaiko.
* 2001/12/03 PSD k.igarashi ADD ↑

* (ア)対象データ抽出処理
SELECT
matnr werks kunnr kulab
INTO CORRESPONDING FIELDS OF TABLE gt_tokuisaki
FROM msku
WHERE matnr = gf_zaikoa-matnr
AND   werks = gf_zaikoa-werks
AND   sobkz = cns_002.  "W

CASE sy-subrc.
WHEN 0.
WHEN 4.
WHEN 8.
MESSAGE a603(z1) WITH sy-repid cns_tab_004 sy-subrc.
ENDCASE.

* (イ)預託在庫数量算出
LOOP AT gt_tokuisaki INTO gf_tokuisaki.
yotaku_zaiko = yotaku_zaiko + gf_tokuisaki-kulab.
ENDLOOP.
* (ウ)預託在庫の設定
gf_write-kulab = yotaku_zaiko.

ENDFORM.                    " frm_sel_tokuisaki
*&---------------------------------------------------------------------*
*&      Form  frm_sel_shiiresaki
*&---------------------------------------------------------------------*
*       2-1-⑫支給在庫の設定
*----------------------------------------------------------------------*
FORM frm_sel_shiiresaki.

* 2001/12/03 PSD k.igarashi ADD ↓
CLEAR: gf_write-lblab,
shikyu_zaiko.
* 2001/12/03 PSD k.igarashi ADD ↑

* (ア)対象データ抽出処理
SELECT
matnr werks lifnr lblab
INTO CORRESPONDING FIELDS OF TABLE gt_shiiresaki
FROM mslb
WHERE matnr = gf_zaikoa-matnr
AND   werks = gf_zaikoa-werks
AND   sobkz = cns_003.  "O

CASE sy-subrc.
WHEN 0.
WHEN 4.
WHEN 8.
MESSAGE a603(z1) WITH sy-repid cns_tab_005 sy-subrc.
ENDCASE.

* (イ)支給在庫数量算出
LOOP AT gt_shiiresaki INTO gf_shiiresaki.
shikyu_zaiko = shikyu_zaiko + gf_shiiresaki-lblab.
ENDLOOP.
* (ウ)支給在庫の設定
gf_write-lblab = shikyu_zaiko.

ENDFORM.                    " frm_sel_shiiresaki
*&---------------------------------------------------------------------*
*&      Form  frm_check_data
*&---------------------------------------------------------------------*
*       2-3 対象データチェック
*----------------------------------------------------------------------*
FORM frm_check_data.

IF gf_zaikoa-labst <> 0 OR
gf_zaikob-trame <> 0 OR
gf_write-kulab  <> 0 OR
gf_write-lblab  <> 0.

APPEND gf_write TO gt_write.

ENDIF.

ENDFORM.                    " frm_check_data
*&---------------------------------------------------------------------*
*&      Form  frm_check_table
*&---------------------------------------------------------------------*
*       3.対象データ存在チェック処理
*----------------------------------------------------------------------*
FORM frm_check_table.

DESCRIBE TABLE gt_write LINES kensu.

IF kensu = 0.
MESSAGE s600(z1) WITH text-008.
STOP.
ENDIF.

ENDFORM.                    " frm_check_table
*&---------------------------------------------------------------------*
*&      Form  frm_write_data
*&---------------------------------------------------------------------*
*       4.帳票出力処理
*----------------------------------------------------------------------*
FORM frm_write_data.

**--- ソート処理
*  SORT GT_WRITE ASCENDING BY WERKS EKGRP LIFNR MATNR.

* 4-① ＡＬＶ改ページ関連処理
PERFORM frm_alv_page_next.

* 4-② 初期設定
g_repid = sy-repid.

* 4-③ ページ切り替え設定
gf_layout-group_change_edit = cns_001.

* 2002/01/10 PSD K.IGARASHI ADD ↓
*--- 内部テーブル変換処理
gt_alv[] = gt_write[].
* 2002/01/10 PSD K.IGARASHI ADD ↑

* 2002/02/07  PSD K.igarashi ADD ↓
gf_print-no_print_listinfos = 'X'.
* 2002/02/07  PSD K.igarashi ADD ↑

* 4-④リストの出力
CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
EXPORTING
i_callback_program             = g_repid       "レポートID
*      I_CALLBACK_TOP_OF_PAGE         = TOP_OF_PAGE   "G_HEAD_FRM
i_structure_name               = 'ZMLIST_V03'  "構造
is_layout                      = gf_layout     "レイアウト設定
*      IT_FIELDCAT                    = GT_FIELDCAT[] "カタログ設定
i_save                         = 'A'           "レイアウト保存
it_events                      = gt_event[]    "イベント設定
* 2002/02/07  PSD K.igarashi ADD ↓
is_print                       = gf_print      "印刷設定
* 2002/02/07  PSD K.igarashi ADD ↑
TABLES
* 2002/01/10 PSD H.Tanaka ADD ↓
*      T_OUTTAB                       = GT_WRITE
t_outtab                       = gt_alv
* 2002/01/10 PSD H.Tanaka ADD ↑
EXCEPTIONS
program_error                  = 1
OTHERS                         = 2.

IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FRM_ALV_PAGE_NEXT
*&---------------------------------------------------------------------*
*       4-① 改ページ関連処理
*----------------------------------------------------------------------*
FORM frm_alv_page_next.

* 使用可能イベントのチェック
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
i_list_type     = 0
IMPORTING
et_events       = gt_event  "使用可能なイベント取得
EXCEPTIONS
list_type_wrong = 1
OTHERS          = 2.

IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

* 2002/01/10  PSD K.IGARASHI ADD ↓
** 使用イベントに実行するサブルーチン名を設定
*  LOOP AT GT_EVENT INTO GS_EVENT WHERE NAME = CNS_TOP.  "TOP_OF_PAGE
*      GS_EVENT-FORM = CNS_FRM_TOP.  "FRM_TOP_OF_PAGE
*      MODIFY GT_EVENT FROM GS_EVENT.
*  ENDLOOP.

* 使用イベントに実行するサブルーチン名を設定
LOOP AT gt_event INTO gf_event.
CASE gf_event-name.
WHEN 'TOP_OF_PAGE'.
gf_event-form = 'FRM_TOP_OF_PAGE'.
MODIFY gt_event FROM gf_event.
WHEN 'CALLER_EXIT'.
gf_event-form = 'FRM_CALLER_EXIT'.
MODIFY gt_event FROM gf_event.
ENDCASE.
ENDLOOP.
* 2002/01/10  PSD K.IGARASHI ADD ↑

ENDFORM.                    " FRM_ALV_PAGE_NEXT
*&---------------------------------------------------------------------*
*&      Form  TOP_OF_PAGE
*&---------------------------------------------------------------------*
FORM frm_top_of_page.

DATA: l_sy-tabix TYPE p.

l_sy-tabix = sy-tabix.

* 帳票出力マスタからヘッダ情報取得
* 1ページ目
IF sy-pagno = 1.
READ TABLE gt_alv INTO gf_header_data INDEX 1.
WRITE: text-003.
WRITE : 100 '処理日付' ,
sy-datum ,
125 '処理時刻' ,
sy-uzeit .
SKIP.
WRITE: / text-004,gt_alv-werks,gt_alv-vname,
/ text-005,gt_alv-ekgrp,gt_alv-eknam.
*---APPEND START PSD T.SAITOH 2002/05/08 ---------------------------*
*   会計数値違い明確化表示
WRITE: 100 text-009.
*---APPEND END   PSD T.SAITOH 2002/05/08 ---------------------------*
* 2ページ目以降
ELSEIF sy-pagno >= 2.
READ TABLE gt_alv INTO gf_header_data INDEX l_sy-tabix.
WRITE: text-003.
WRITE : 100 '処理日付' ,
sy-datum ,
125 '処理時刻' ,
sy-uzeit .
SKIP.
WRITE: / text-004,gt_alv-werks,gt_alv-vname,
/ text-005,gt_alv-ekgrp,gt_alv-eknam.
*---APPEND START PSD T.SAITOH 2002/05/08 ---------------------------*
*   会計数値違い明確化表示
WRITE: 100 text-009.
*---APPEND END   PSD T.SAITOH 2002/05/08 ---------------------------*
ENDIF.

ENDFORM.

* 2002/01/10  PSD K.IGARASHI ADD ↓
************************************************************************
* ALV CALLER_EXIT
***********************************************************************
FORM frm_caller_exit USING rs_data TYPE slis_data_caller_exit.
rs_data-callback_header_transport = 'FILITEXTS_TEXT_TRANSPORT'.
ENDFORM.
* 2002/01/10  PSD K.IGARASHI ADD ↑

*---APPEND START PSD T.SAITOH 2002/08/12 ---------------------------*
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_NETPR
*&---------------------------------------------------------------------*
*       単価の設定
*----------------------------------------------------------------------*
FORM frm_set_netpr.

DATA : l_salk3(9) TYPE p DECIMALS 2."合計金額

* 評価在庫合計額の価格変換
PERFORM frm_change_cost    USING    gf_zaikob-waers
gf_zaikob-salk3
CHANGING l_salk3.
* 単価計算
CASE gf_zaikob-lbkum.
WHEN 0.
gf_write-verpr = 0.
WHEN OTHERS.
gf_write-verpr =  l_salk3 / gf_zaikob-lbkum.
ENDCASE.

ENDFORM.                    " FRM_SET_NETPR
*&---------------------------------------------------------------------*
*&      Form  FRM_CHANGE_COST
*&---------------------------------------------------------------------*
*       金額変換処理
*----------------------------------------------------------------------*
*      -->P_TSUKACD  通貨コード
*      -->P_KINGAKU  変換前金額
*      <--P_HENKAN   変換後金額
*----------------------------------------------------------------------*
FORM frm_change_cost    USING    p_tsukacd
p_kingaku
CHANGING p_henkan.
DATA : l_amount_dis TYPE wmto_s-amount,
l_amount_int TYPE wmto_s-amount.
l_amount_int = p_kingaku.
*--- 汎用モジュール金額変換モジュール
CALL FUNCTION 'CURRENCY_AMOUNT_SAP_TO_DISPLAY'
EXPORTING
currency        = p_tsukacd
amount_internal = l_amount_int
IMPORTING
amount_display  = l_amount_dis
EXCEPTIONS
internal_error  = 1
OTHERS          = 2.
IF sy-subrc <> 1.
p_henkan = l_amount_dis.
ENDIF.

ENDFORM.                    " FRM_CHANGE_COST
*---APPEND END   PSD T.SAITOH 2002/08/12 ---------------------------*
