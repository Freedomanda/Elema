*&---------------------------------------------------------------------*
*&  REPORT ZN030100                                                    *
*&         【移行】自社データ（仕入）【セットアップ】                  *
*&---------------------------------------------------------------------*
*&  機能     : YK230をYN220に変換する
*&
*&  作成日   : 2012/03/16
*&  作成者   : S.TAKIKAWA(SOLFIS)
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/04/09 K.FURUYA
*&  変更内容 : EKKOが取得できない場合も移行対象とする
*&---------------------------------------------------------------------*
REPORT ZN030100
NO STANDARD PAGE HEADING
LINE-SIZE   170
LINE-COUNT  58
MESSAGE-ID  YN01.
*----------------------------------------------------------------------*
*   テーブル
*----------------------------------------------------------------------*
TABLES:YK230,YN220.
*----------------------------------------------------------------------*
*   型定義
*----------------------------------------------------------------------*
TYPES:T_TYP_YK230 TYPE STANDARD TABLE OF YK230,
T_TYP_YN220 TYPE STANDARD TABLE OF YN220.
TYPES:BEGIN OF TYP_YK230_SELECT,
BELNR    TYPE RE_BELNR,
BUZEI    TYPE RBLGP,
AWKEY    TYPE AWKEY,
END   OF TYP_YK230_SELECT,
T_TYP_YK230_SELECT TYPE STANDARD TABLE OF TYP_YK230_SELECT.
TYPES:BEGIN OF TYP_BKPF,
BUKRS    TYPE BUKRS,      "会社コード
GJAHR    TYPE GJAHR,      "会計年度
BELNR    TYPE BELNR_D,    "会計伝票番号
AWKEY    TYPE AWKEY,      "オブジェクトキー
LIFNR    TYPE LIFNR,      "仕入先コード(YK230を設定)
END   OF TYP_BKPF,
T_TYP_BKPF TYPE STANDARD TABLE OF TYP_BKPF.
TYPES:BEGIN OF TYP_BSIK,
LIFNR    TYPE LIFNR,      "仕入先コード
BUKRS    TYPE BUKRS,      "会社コード
GJAHR    TYPE GJAHR,      "会計年度
BELNR    TYPE BELNR_D,    "会計伝票番号
BUZEI    TYPE BUZEI,      "会計伝票内の明細番号
END   OF TYP_BSIK,
T_TYP_BSIK TYPE STANDARD TABLE OF TYP_BSIK.
TYPES:BEGIN OF TYP_RSEG,
GJAHR    TYPE GJAHR,      "会計年度
BELNR    TYPE BELNR_D,    "会計伝票番号
EBELP    TYPE EBELP,      "購買伝票の明細番号
XBLNR    TYPE XBLNR,      "参照伝票番号
END   OF TYP_RSEG,
T_TYP_RSEG TYPE STANDARD TABLE OF TYP_RSEG.
TYPES:BEGIN OF TYP_EKKO,
EBELN    TYPE EBELN,      "購買伝票番号
EKGRP    TYPE BKGRP,      "購買グループ
END   OF TYP_EKKO,
T_TYP_EKKO TYPE STANDARD TABLE OF TYP_EKKO.
TYPES:BEGIN OF TYP_ERR,
BELNR    TYPE RE_BELNR,   "請求書伝票の伝票番号
BUZEI    TYPE RBLGP,      "請求書伝票内伝票明細
MESSAGE  TYPE CHAR255,    "エラー内容
END   OF TYP_ERR,
T_TYP_ERR TYPE STANDARD TABLE OF TYP_ERR.
TYPES:BEGIN OF TYP_DOWNLOAD,
BELNR    TYPE CHAR10,
BUZEI    TYPE CHAR6,
FIXFLG   TYPE CHAR1,
KEKKBN   TYPE CHAR1,
LIFNR    TYPE CHAR10,
LIFN2    TYPE CHAR10,
WERKS    TYPE CHAR4,
EKORG    TYPE CHAR4,
EKGRP    TYPE CHAR3,
BUKRS    TYPE CHAR4,
GSBER    TYPE CHAR4,
EBELN    TYPE CHAR10,
EBELP    TYPE CHAR5,
MAKTX    TYPE CHAR40,
MATNR    TYPE CHAR18,
IDNLF    TYPE CHAR35,
YKYEAR   TYPE CHAR4,
ZFBDT    TYPE CHAR8,
BUDAT    TYPE CHAR8,
KNQUAN   TYPE CHAR15,
KNUNIT   TYPE CHAR3,
KNUNTPRC TYPE CHAR22,
KNITXAMT TYPE CHAR21,
KNTAXAMT TYPE CHAR21,
KNETXAMT TYPE CHAR21,
UPYAMT   TYPE CHAR21,
PIDAMT   TYPE CHAR21,
PIDTAX   TYPE CHAR21,
BEYAMT   TYPE CHAR21,
WAERS    TYPE CHAR5,
SGTXT    TYPE CHAR50,
ZFBDT2   TYPE CHAR8,
PRCDAT   TYPE CHAR8,
PRCNO    TYPE CHAR10,
INSDAT   TYPE CHAR8,
INSTIM   TYPE CHAR6,
INSUSR   TYPE CHAR12,
UPDDAT   TYPE CHAR8,
UPDTIM   TYPE CHAR6,
UPDUSR   TYPE CHAR12,
FIFLG    TYPE CHAR1,
BELNR2   TYPE CHAR10,
GJAHR    TYPE CHAR4,
WERKST   TYPE CHAR4,
RRFLG    TYPE CHAR1,
END  OF TYP_DOWNLOAD,
T_TYP_DOWNLOAD TYPE STANDARD TABLE OF TYP_DOWNLOAD.

*----------------------------------------------------------------------*
*   内部テーブル定義
*----------------------------------------------------------------------*
DATA:T_YK230 TYPE T_TYP_YK230,
T_YN220 TYPE T_TYP_YN220,
T_BKPF  TYPE T_TYP_BKPF,
T_BSIK  TYPE T_TYP_BSIK,
T_RSEG  TYPE T_TYP_RSEG,
T_EKKO  TYPE T_TYP_EKKO,
T_ERR   TYPE T_TYP_ERR.
*----------------------------------------------------------------------*
*   変数定義
*----------------------------------------------------------------------*
CONSTANTS:
C_ON         TYPE C     VALUE 'X',
C_SPRAS      TYPE SPRAS VALUE 'J'.   "言語キー
*----------------------------------------------------------------------*
*   定数定義
*----------------------------------------------------------------------*
DATA:G_CNT_YK230   TYPE I,
G_CNT_YN220   TYPE I,
G_CNT_ERR     TYPE I.
*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 1.
PARAMETERS:P_R_IKO   RADIOBUTTON GROUP R01.
SELECTION-SCREEN:COMMENT 3(10) TEXT-003 FOR FIELD P_R_IKO.
SELECTION-SCREEN:END   OF LINE.

SELECTION-SCREEN:BEGIN OF BLOCK BL01 WITH FRAME TITLE TEXT-003.
* 移行のみ
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 3.
PARAMETERS:P_R_UP   RADIOBUTTON GROUP R02.
SELECTION-SCREEN:COMMENT 6(14) TEXT-007 FOR FIELD P_R_UP.
SELECTION-SCREEN:END   OF LINE.
* 移行とダウンロード
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 3.
PARAMETERS:P_R_DUP   RADIOBUTTON GROUP R02.
SELECTION-SCREEN:COMMENT 6(24) TEXT-008 FOR FIELD P_R_DUP.
SELECTION-SCREEN:END   OF LINE.
* ダウンロードのみ
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 3.
PARAMETERS:P_R_DOWN   RADIOBUTTON GROUP R02.
SELECTION-SCREEN:COMMENT 6(18) TEXT-009 FOR FIELD P_R_DOWN.
SELECTION-SCREEN:END   OF LINE.
* 条件
SELECTION-SCREEN:BEGIN OF BLOCK BL1 WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS:P_BELNR   FOR YK230-BELNR.
SELECT-OPTIONS:P_BUZEI   FOR YK230-BUZEI.
SELECT-OPTIONS:P_LIFN2   FOR YK230-LIFN2.
SELECT-OPTIONS:P_ZFBDT   FOR YK230-ZFBDT.
SELECT-OPTIONS:P_KEKKBN  FOR YK230-KEKKBN.
SELECT-OPTIONS:P_KNET    FOR YK230-KNETXAMT.
PARAMETERS    :P_PASS(255) TYPE C LOWER CASE.
SELECTION-SCREEN:END   OF BLOCK BL1.
SELECTION-SCREEN:END   OF BLOCK BL01.
* 削除
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 1.
PARAMETERS:P_R_DEL   RADIOBUTTON GROUP R01.
SELECTION-SCREEN:COMMENT 3(14) TEXT-004 FOR FIELD P_R_DEL.
SELECTION-SCREEN:END   OF LINE.
SELECTION-SCREEN:BEGIN OF BLOCK BL02 WITH FRAME TITLE TEXT-002.
SELECT-OPTIONS:P_GJAHR   FOR YN220-GJAHR.
SELECT-OPTIONS:P_SLPDOC  FOR YN220-SLPDOC.
SELECT-OPTIONS:P_DTLDOC  FOR YN220-DTLDOC.
SELECT-OPTIONS:P_VRF     FOR YN220-VRFCTON.
SELECTION-SCREEN:END   OF BLOCK BL02.
*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_PASS.
*-- ファイルダウンロード検索ヘルプ
PERFORM FRM_CHK_FILE.
*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
IF ( P_R_DOWN = C_ON
OR   P_R_DUP  = C_ON )
AND P_PASS IS INITIAL.
MESSAGE E999(YN01) WITH 'ダウンロードファイル名を入力してください'.
ENDIF.
*----------------------------------------------------------------------*
*  START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.

*---データ移行処理
IF P_R_IKO = C_ON.
*   移行用データ取得
PERFORM GET_YK230.
*   仕入先チェック用データ取得
PERFORM GET_LIFNR.
CHECK NOT T_YK230[] IS INITIAL.

IF P_R_DOWN = C_ON
OR P_R_DUP  = C_ON.
*     ファイルダウンロード
PERFORM DOWNLOAD.
ENDIF.
CHECK P_R_DOWN IS INITIAL.  "ダウンロードのみ以外処理続行
*   標準ＤＢデータ取得
PERFORM GET_DB.
*   チェックと編集
PERFORM EDIT_DATA.
*   登録
PERFORM INSERT_DATA.
*   処理結果出力
PERFORM WRITE_IKO.

*---削除
ELSE.
*   データ取得
PERFORM DEL_DATA_GET.
CHECK NOT T_YN220[] IS INITIAL.
*   削除
PERFORM DEL_DATA.
*   処理結果出力
PERFORM WRITE_DEL.
ENDIF.

*&---------------------------------------------------------------------*
*&      Form  GET_YK230
*&---------------------------------------------------------------------*
*       移行用データ取得
*----------------------------------------------------------------------*
FORM GET_YK230.

CLEAR:T_YK230.
SELECT *
INTO TABLE T_YK230
FROM YK230
WHERE BELNR IN P_BELNR
AND BUZEI IN P_BUZEI
AND KEKKBN IN P_KEKKBN
AND LIFN2  IN P_LIFN2
AND ZFBDT  IN P_ZFBDT
AND KNETXAMT IN P_KNET.

IF SY-SUBRC = 0.
ELSE.
MESSAGE S762(YN01).
ENDIF.

ENDFORM.                    " GET_YK230
*&---------------------------------------------------------------------*
*&      Form  GET_DB
*&---------------------------------------------------------------------*
*       標準ＤＢデータ取得
*----------------------------------------------------------------------*
FORM GET_DB.
DATA:LW_YK230        TYPE YK230,
LT_YK230_SELECT TYPE T_TYP_YK230_SELECT,
LW_YK230_SELECT TYPE TYP_YK230_SELECT,
LT_BKPF         TYPE T_TYP_BKPF,
LW_BKPF         TYPE TYP_BKPF,
LW_BELNR        TYPE BELNR_D,
LW_GJAHR        TYPE GJAHR.

* 取得用データ編集
LOOP AT T_YK230 INTO LW_YK230.
CLEAR:LW_GJAHR.
CALL FUNCTION 'FI_PERIOD_DETERMINE'
EXPORTING
I_BUDAT              = LW_YK230-BUDAT
I_BUKRS              = LW_YK230-BUKRS
IMPORTING
E_GJAHR              = LW_GJAHR
EXCEPTIONS
FISCAL_YEAR          = 1
PERIOD               = 2
PERIOD_VERSION       = 3
POSTING_PERIOD       = 4
SPECIAL_PERIOD       = 5
VERSION              = 6
POSTING_DATE         = 7
OTHERS               = 8.
LW_YK230_SELECT-BELNR = LW_YK230-BELNR.
LW_YK230_SELECT-BUZEI = LW_YK230-BUZEI.
LW_YK230_SELECT-AWKEY+0(10) = LW_YK230-BELNR.
LW_YK230_SELECT-AWKEY+10(4) = LW_GJAHR.
APPEND LW_YK230_SELECT TO LT_YK230_SELECT.
ENDLOOP.

*--- BKPF取得
SELECT BUKRS        "会社コード
GJAHR        "会計年度
BELNR        "会計伝票番号
AWKEY        "オブジェクトキー
INTO TABLE LT_BKPF
FROM BKPF
FOR ALL ENTRIES IN LT_YK230_SELECT
WHERE AWTYP ='RMRP'
AND AWKEY = LT_YK230_SELECT-AWKEY.


* 仕入先を編集
IF SY-SUBRC = 0.
SORT T_YK230 BY BELNR GJAHR.
LOOP AT LT_BKPF INTO LW_BKPF.
LW_BELNR = LW_BKPF-AWKEY+0(10).
LW_GJAHR = LW_BKPF-AWKEY+10(4).
READ TABLE T_YK230 INTO LW_YK230
WITH KEY BELNR = LW_BELNR
BINARY SEARCH.
IF SY-SUBRC = 0.
LW_BKPF-LIFNR = LW_YK230-LIFN2.
APPEND LW_BKPF TO T_BKPF.
ENDIF.
ENDLOOP.
SORT T_BKPF BY AWKEY.

*--- BSIK取得
SELECT LIFNR         "仕入先コード
BUKRS         "会社コード
GJAHR         "会計年度
BELNR         "会計伝票番号
BUZEI         "会計伝票内の明細番号
INTO TABLE T_BSIK
FROM BSIK
FOR ALL ENTRIES IN T_BKPF
WHERE LIFNR = T_BKPF-LIFNR
AND BUKRS = T_BKPF-BUKRS
AND GJAHR = T_BKPF-GJAHR
AND BELNR = T_BKPF-BELNR.
IF SY-SUBRC = 0.
SORT T_BSIK.
ENDIF.
ENDIF.

*--- RSEG取得
SELECT GJAHR
BELNR
EBELP
XBLNR
INTO TABLE T_RSEG
FROM RSEG
FOR ALL ENTRIES IN T_YK230
WHERE BELNR = T_YK230-BELNR
AND EBELP = T_YK230-EBELP.
IF SY-SUBRC = 0.
SORT T_RSEG BY BELNR EBELP.
ENDIF.

*--- EKKO取得
SELECT EBELN
EKGRP
INTO TABLE T_EKKO
FROM EKKO
FOR ALL ENTRIES IN T_YK230
WHERE EBELN = T_YK230-EBELN.
IF SY-SUBRC = 0.
SORT T_EKKO.
ENDIF.

ENDFORM.                    " GET_DB
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA
*&---------------------------------------------------------------------*
*       チェックと編集
*----------------------------------------------------------------------*
FORM EDIT_DATA.
DATA:LW_YK230   TYPE YK230,
LW_YN220   TYPE YN220,
LW_BKPF    TYPE TYP_BKPF,
LW_BSIK    TYPE TYP_BSIK,
LW_RSEG    TYPE TYP_RSEG,
LW_EKKO    TYPE TYP_EKKO,
LW_ERR     TYPE TYP_ERR,
LW_AWKEY   TYPE AWKEY,
LW_DATUM   TYPE SY-DATUM,
LW_UZEIT   TYPE SY-UZEIT,
LW_SLPDOC  TYPE YNSLPDOC.

LW_DATUM = SY-DATUM.
LW_UZEIT = SY-UZEIT.

LOOP AT T_YK230 INTO LW_YK230.
CLEAR:LW_YN220.

*   伝票会計年度算出
CALL FUNCTION 'FI_PERIOD_DETERMINE'
EXPORTING
I_BUDAT              = LW_YK230-BUDAT
I_BUKRS              = LW_YK230-BUKRS
IMPORTING
E_GJAHR              = LW_YN220-GJAHR
EXCEPTIONS
FISCAL_YEAR          = 1
PERIOD               = 2
PERIOD_VERSION       = 3
POSTING_PERIOD       = 4
SPECIAL_PERIOD       = 5
VERSION              = 6
POSTING_DATE         = 7
OTHERS               = 8
.
IF SY-SUBRC <> 0.
LW_ERR-BELNR = LW_YK230-BELNR.
LW_ERR-BUZEI = LW_YK230-BUZEI.
LW_ERR-MESSAGE = '会計年度が取得できませんでした'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.
*   伝票番号
LW_YN220-SLPDOC = LW_YK230-BELNR.
*   伝票明細番号
LW_YN220-DTLDOC = LW_YK230-BUZEI.
*   仕入先コード(請求先)
LW_YN220-VRFCTON = LW_YK230-LIFN2.
*   会社コード
LW_YN220-BUKRS = LW_YK230-BUKRS.
*   計上締日
LW_YN220-ZFBDT = LW_YK230-ZFBDT.
*   利益センタ（初期値）
*   担当者
LW_YN220-PERNR = SY-UNAME.
*   プラント
LW_YN220-DVSON = LW_YK230-WERKST.
*   照合対象フラグ(初期値)
*   照合ステータス
LW_YN220-CSTS = '1'.
*   コメント
IF LW_YK230-KEKKBN = '5'.
LW_YN220-COMMT = '部分照合残'.
ENDIF.

*   会計伝票会計年度/会計伝票番号/会計伝票明細番号
IF LW_YK230-KEKKBN <> '5'.
*     会計伝票存在チェック
LW_AWKEY+0(10) = LW_YK230-BELNR.
LW_AWKEY+10(4) = LW_YN220-GJAHR.
CLEAR:LW_BKPF.
*     BKPFより会計伝票検索
READ TABLE T_BKPF INTO LW_BKPF
WITH KEY AWKEY = LW_AWKEY
BINARY SEARCH.
IF SY-SUBRC = 0.
*       会計伝票番号より、未決済かどうかチェック
READ TABLE T_BSIK INTO LW_BSIK
WITH KEY LIFNR  = LW_YK230-LIFN2
BUKRS  = LW_BKPF-BUKRS
GJAHR  = LW_BKPF-GJAHR
BELNR  = LW_BKPF-BELNR
BINARY SEARCH.
IF SY-SUBRC = 0.
LW_YN220-YNGJAHR = LW_BSIK-GJAHR.
LW_YN220-BELNR   = LW_BSIK-BELNR.
LW_YN220-BUZEI   = LW_BSIK-BUZEI.
ENDIF.
*     BKPFが取得できない場合エラー
ELSE.
LW_ERR-BELNR = LW_YK230-BELNR.
LW_ERR-BUZEI = LW_YK230-BUZEI.
LW_ERR-MESSAGE = 'BKPFが取得できませんでした'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.
ENDIF.
*   数量
LW_YN220-KNQUAN = LW_YK230-KNQUAN.
*   単位
LW_YN220-KNUNIT = LW_YK230-KNUNIT.
*   単価
LW_YN220-KNUNTPRC = LW_YK230-KNUNTPRC.
*   消費税額
IF LW_YK230-KEKKBN = '5'.
LW_YN220-KNTAXAMT = 0.
ELSE.
LW_YN220-KNTAXAMT = LW_YK230-KNTAXAMT.
ENDIF.
*   税抜金額
IF LW_YK230-KEKKBN = '5'.
LW_YN220-KNITXAMT = 0.
ELSE.
LW_YN220-KNITXAMT = LW_YK230-KNITXAMT.
ENDIF.
*   税込金額
LW_YN220-KNETXAMT = LW_YK230-KNETXAMT -
LW_YK230-PIDAMT   -
LW_YK230-PIDTAX.
*   通貨コード
LW_YN220-WAERS    = LW_YK230-WAERS.
*   照合番号(初期値)
*   照合日(初期値)
*   照合ユーザ(初期値)
*   更新日
LW_YN220-UPDDAT = LW_DATUM.
*   更新時刻
LW_YN220-UPDTIM = LW_UZEIT.
*   更新ユーザ
LW_YN220-UPDUSR = SY-UNAME.
*   更新プログラム
LW_YN220-UPDPRG = SY-REPID.

*   照合キー1：発注番号
*2012/05/22 MOD START
LW_YN220-CKEY1 = LW_YK230-EBELN.

*   IF LW_YN220-WAERS = 'JPY'.
*     LW_YN220-CKEY1 = LW_YK230-EBELN.
*   ENDIF.
*2012/05/22 MOD END

*   照合キー2：インボイスNo
READ TABLE T_RSEG INTO LW_RSEG
WITH KEY BELNR = LW_YK230-BELNR
EBELP = LW_YK230-EBELP.
*2012/05/22 DEL START
*    IF SY-SUBRC = 0.
*      IF LW_YN220-WAERS <> 'JPY'.
*       LW_YN220-CKEY2 = LW_RSEG-XBLNR.
*      ENDIF.
**   RSEGが取得できない場合はエラー
*    ELSE.
*      LW_ERR-BELNR = LW_YK230-BELNR.
*      LW_ERR-BUZEI = LW_YK230-BUZEI.
*      LW_ERR-MESSAGE = 'RSEGが取得できませんでした'.
*      APPEND LW_ERR TO T_ERR.
*      G_CNT_ERR = G_CNT_ERR + 1.
*      CONTINUE.
*    ENDIF.
*2012/05/22 DEL END

*   照合キー3〜8(初期値)
*   仕入先コード(発注先)
LW_YN220-LIST1 = LW_YK230-LIFNR.
*   発注番号
LW_YN220-LIST2 = LW_YK230-EBELN.
*   発注明細番号
LW_YN220-LIST3 = LW_YK230-EBELP.
*   購買グループ
READ TABLE T_EKKO INTO LW_EKKO
WITH KEY EBELN = LW_YK230-EBELN
BINARY SEARCH.
*   EKKOが取得できない場合はエラー
IF SY-SUBRC = 0.
LW_YN220-LIST4 = LW_EKKO-EKGRP.
*2012/04/09 DEL START  "EKKOが取得できなくても移行対象
*    ELSE.
*      LW_ERR-BELNR = LW_YK230-BELNR.
*      LW_ERR-BUZEI = LW_YK230-BUZEI.
*      LW_ERR-MESSAGE = 'EKKOが取得できませんでした'.
*      APPEND LW_ERR TO T_ERR.
*      G_CNT_ERR = G_CNT_ERR + 1.
*      CONTINUE.
*2012/04/09 DEL END
ENDIF.
*   品目コード
LW_YN220-LIST5 = LW_YK230-MATNR.
*   品目テキスト
LW_YN220-LIST6 = LW_YK230-MAKTX.

*2012/06/04 MOD START
*   仕入先品目
*    LW_YN220-LIST7 = LW_YK230-IDNLF.
CLEAR: LW_YN220-LIST7.
SELECT SINGLE IDNLF
FROM EKPO
INTO LW_YN220-LIST7
WHERE EBELN = LW_YK230-EBELN
AND EBELP = LW_YK230-EBELP.
*2012/06/04 MOD END

*   インボイスNo
LW_YN220-LIST8 = LW_RSEG-XBLNR.
*   一覧表示項目9,10(初期値)
*   登録日
LW_YN220-INSDT = LW_DATUM.
*   入庫日
LW_YN220-LDATE1 = LW_YK230-BUDAT.
*   照合締日/自動生成明細/検収出力月・日/支払月・日(初期値)
*   キー重複チェック
SELECT SINGLE SLPDOC
INTO LW_SLPDOC
FROM YN220
WHERE GJAHR   = LW_YN220-GJAHR
AND SLPDOC  = LW_YN220-SLPDOC
AND DTLDOC  = LW_YN220-DTLDOC
AND VRFCTON = LW_YN220-VRFCTON
AND BUKRS   = LW_YN220-BUKRS.
IF SY-SUBRC = 0.
LW_ERR-BELNR = LW_YK230-BELNR.
LW_ERR-BUZEI = LW_YK230-BUZEI.
LW_ERR-MESSAGE = 'すでに同じキーが存在します'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.

APPEND LW_YN220 TO T_YN220.
G_CNT_YN220 = G_CNT_YN220 + 1.
ENDLOOP.

ENDFORM.                    " EDIT_DATA
*&---------------------------------------------------------------------*
*&      Form  INSERT_DATA
*&---------------------------------------------------------------------*
*       データ登録
*----------------------------------------------------------------------*
FORM INSERT_DATA.

IF T_YN220[] IS INITIAL.
EXIT.
ENDIF.

INSERT YN220 FROM TABLE T_YN220.
IF SY-SUBRC = 0.
COMMIT WORK AND WAIT.
ELSE.
ROLLBACK WORK.
MESSAGE E758(YN01) WITH 'YN220'.
ENDIF.

ENDFORM.                    " INSERT_DATA
*&---------------------------------------------------------------------*
*&      Form  WRITE_IKO
*&---------------------------------------------------------------------*
*       処理結果出力【移行】
*----------------------------------------------------------------------*
FORM WRITE_IKO.
DATA:LW_CNT(10)  TYPE C,
LW_ERR      TYPE TYP_ERR.

WRITE G_CNT_YK230 TO LW_CNT.
WRITE: /001 '<データ移行>',
/003 '仕入データ(YK230)抽出件数：',
040 LW_CNT,
050 '件'.
SKIP 1.

WRITE G_CNT_YN220 TO LW_CNT.
WRITE: /003 '自社データ(仕入)(YN220)登録件数：',
040 LW_CNT,
050 '件'.
WRITE G_CNT_ERR TO LW_CNT.
WRITE: /003 '自社データ(仕入)(YN220)エラー件数：',
040 LW_CNT,
050 '件'.
CHECK NOT T_ERR[] IS INITIAL.
SKIP 1.
WRITE: /003 '伝票番号',
014 '明細',
029 'エラー内容'.
ULINE.
LOOP AT T_ERR INTO LW_ERR.
WRITE: /003 LW_ERR-BELNR,
014 LW_ERR-BUZEI,
029 LW_ERR-MESSAGE.
ENDLOOP.

ENDFORM.                    " WRITE_IKO
*&---------------------------------------------------------------------*
*&      Form  DEL_DATA_GET
*&---------------------------------------------------------------------*
*       YN220データ取得【削除】
*----------------------------------------------------------------------*
FORM DEL_DATA_GET.

SELECT *
INTO TABLE T_YN220
FROM YN220
WHERE GJAHR   IN P_GJAHR
AND SLPDOC  IN P_SLPDOC
AND DTLDOC  IN P_DTLDOC
AND VRFCTON IN P_VRF.

IF SY-SUBRC = 0.
DESCRIBE TABLE T_YN220 LINES G_CNT_YN220.
ELSE.
MESSAGE S762(YN01).
ENDIF.
ENDFORM.                    " DEL_DATA_GET
*&---------------------------------------------------------------------*
*&      Form  DEL_DATA
*&---------------------------------------------------------------------*
*       YN220削除【削除】
*----------------------------------------------------------------------*
FORM DEL_DATA.

DELETE YN220 FROM TABLE T_YN220.
IF SY-SUBRC = 0.
COMMIT WORK AND WAIT.
ELSE.
ROLLBACK WORK.
MESSAGE E758(YN01) WITH 'YN220'.
ENDIF.

ENDFORM.                    " DEL_DATA
*&---------------------------------------------------------------------*
*&      Form  WRITE_DEL
*&---------------------------------------------------------------------*
*       処理結果出力【削除】
*----------------------------------------------------------------------*
FORM WRITE_DEL.
DATA:LW_CNT(10)  TYPE C.

WRITE G_CNT_YN220 TO LW_CNT.
WRITE: /001 '<移行データ削除>',
/003 '自社データ(仕入)(YN220)削除件数：',
030 LW_CNT,
040 '件'.

ENDFORM.                    " WRITE_DEL
*&---------------------------------------------------------------------*
*&      Form  GET_LIFNR
*&---------------------------------------------------------------------*
*       仕入先の処理対象かどうかのチェック用データ取得
*----------------------------------------------------------------------*
FORM GET_LIFNR.
DATA:LT_YK230       TYPE T_TYP_YK230,
LW_YK230       TYPE YK230,
L_ID           TYPE THEAD-TDID,
L_LANGU        TYPE THEAD-TDSPRAS,
L_NAME         TYPE THEAD-TDNAME,
L_OBJECT       TYPE THEAD-TDOBJECT,
LT_LINES       TYPE STANDARD TABLE OF TLINE,
LW_LINES       TYPE TLINE.

LT_YK230[] = T_YK230[].
SORT LT_YK230 BY LIFN2.
DELETE ADJACENT DUPLICATES FROM LT_YK230 COMPARING LIFN2.
L_LANGU   = C_SPRAS.
L_ID      = 'YN01'.
L_OBJECT  = 'LFB1'.

LOOP AT LT_YK230 INTO LW_YK230.
CLEAR:LT_LINES, LW_LINES.
CONCATENATE LW_YK230-LIFN2 LW_YK230-BUKRS
INTO L_NAME.
*   テキスト読込
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID                            = L_ID
LANGUAGE                      = L_LANGU
NAME                          = L_NAME
OBJECT                        = L_OBJECT
TABLES
LINES                         = LT_LINES
EXCEPTIONS
ID                            = 1
LANGUAGE                      = 2
NAME                          = 3
*     NOT_FOUND                     = 4
OBJECT                        = 5
REFERENCE_CHECK               = 6
WRONG_ACCESS_TO_ARCHIVE       = 7
OTHERS                        = 8.
IF SY-SUBRC = 0.
READ TABLE LT_LINES INTO LW_LINES INDEX 1.
IF LW_LINES-TDLINE = 'X'
OR LW_LINES-TDLINE = 'Y'.
ELSE.
DELETE T_YK230 WHERE LIFN2 = LW_YK230-LIFN2.
ENDIF.
ELSE.
DELETE T_YK230 WHERE LIFN2 = LW_YK230-LIFN2.
ENDIF.
ENDLOOP.

SORT T_YK230.
DESCRIBE TABLE T_YK230 LINES G_CNT_YK230.
* 再度0件チェック
IF G_CNT_YK230 IS INITIAL.
MESSAGE S762(YN01).
ENDIF.

ENDFORM.                    " GET_LIFNR
*&---------------------------------------------------------------------*
*&      Form  FRM_CHK_FILE
*&---------------------------------------------------------------------*
*       ファイルダウンロード検索ヘルプ
*----------------------------------------------------------------------*
FORM FRM_CHK_FILE.
CALL FUNCTION 'WS_FILENAME_GET'
EXPORTING
MASK     = '*.*,ALL Files,*.*. '
MODE     = 'S'
TITLE    = 'ダウンロード'
IMPORTING
FILENAME = P_PASS
EXCEPTIONS
OTHERS   = 5.
IF SY-SUBRC <> 0.
ENDIF.
ENDFORM.                    " FRM_CHK_FILE
*&---------------------------------------------------------------------*
*&      Form  DOWNLOAD
*&---------------------------------------------------------------------*
*       ファイルダウンロード
*----------------------------------------------------------------------*
FORM DOWNLOAD.
DATA:L_PASS TYPE STRING,
LT_DOWNLOAD TYPE T_TYP_DOWNLOAD,
LW_DOWNLOAD TYPE TYP_DOWNLOAD,
LW_YK230    TYPE YK230.

L_PASS = P_PASS.

CHECK NOT ( T_YK230[] IS INITIAL ).

* 変換処理
LOOP AT T_YK230 INTO LW_YK230.
MOVE-CORRESPONDING LW_YK230 TO LW_DOWNLOAD.
*   後ろマイナスの変換
IF LW_YK230-KNQUAN < 0.       "数量
SHIFT LW_DOWNLOAD-KNQUAN CIRCULAR RIGHT.
ENDIF.
IF LW_YK230-KNUNTPRC < 0.     "単価
SHIFT LW_DOWNLOAD-KNUNTPRC CIRCULAR RIGHT.
ENDIF.
IF LW_YK230-KNITXAMT < 0.     "税抜金額
SHIFT LW_DOWNLOAD-KNITXAMT CIRCULAR RIGHT.
ENDIF.
IF LW_YK230-KNTAXAMT < 0.     "消費税額
SHIFT LW_DOWNLOAD-KNTAXAMT CIRCULAR RIGHT.
ENDIF.
IF LW_YK230-KNETXAMT < 0.     "税込金額
SHIFT LW_DOWNLOAD-KNETXAMT CIRCULAR RIGHT.
ENDIF.
IF LW_YK230-UPYAMT < 0.       "未請求額
SHIFT LW_DOWNLOAD-UPYAMT CIRCULAR RIGHT.
ENDIF.
IF LW_YK230-PIDAMT < 0.       "消込金額
SHIFT LW_DOWNLOAD-PIDAMT CIRCULAR RIGHT.
ENDIF.
IF LW_YK230-PIDTAX < 0.       "消込税額
SHIFT LW_DOWNLOAD-PIDTAX CIRCULAR RIGHT.
ENDIF.
IF LW_YK230-BEYAMT < 0.       "今回請求額
SHIFT LW_DOWNLOAD-BEYAMT CIRCULAR RIGHT.
ENDIF.
CONDENSE LW_DOWNLOAD-KNQUAN NO-GAPS.
CONDENSE LW_DOWNLOAD-KNUNTPRC NO-GAPS.
CONDENSE LW_DOWNLOAD-KNITXAMT NO-GAPS.
CONDENSE LW_DOWNLOAD-KNTAXAMT NO-GAPS.
CONDENSE LW_DOWNLOAD-KNETXAMT NO-GAPS.
CONDENSE LW_DOWNLOAD-UPYAMT NO-GAPS.
CONDENSE LW_DOWNLOAD-PIDAMT NO-GAPS.
CONDENSE LW_DOWNLOAD-PIDTAX NO-GAPS.
CONDENSE LW_DOWNLOAD-BEYAMT NO-GAPS.
APPEND LW_DOWNLOAD TO LT_DOWNLOAD.
ENDLOOP.

CALL FUNCTION 'GUI_DOWNLOAD'
EXPORTING
*     BIN_FILESIZE                  =
FILENAME                      = L_PASS
FILETYPE                       = 'ASC'
*     APPEND                        = ' '
WRITE_FIELD_SEPARATOR         = 'X'
*     HEADER                        = '00'
*     TRUNC_TRAILING_BLANKS         = ' '
*     WRITE_LF                      = 'X'
*     COL_SELECT                    = ' '
*     COL_SELECT_MASK               = ' '
*   IMPORTING
*     FILELENGTH                    =
TABLES
DATA_TAB                      = LT_DOWNLOAD
EXCEPTIONS
FILE_WRITE_ERROR              = 1
NO_BATCH                      = 2
GUI_REFUSE_FILETRANSFER       = 3
INVALID_TYPE                  = 4
NO_AUTHORITY                  = 5
UNKNOWN_ERROR                 = 6
HEADER_NOT_ALLOWED            = 7
SEPARATOR_NOT_ALLOWED         = 8
FILESIZE_NOT_ALLOWED          = 9
HEADER_TOO_LONG               = 10
DP_ERROR_CREATE               = 11
DP_ERROR_SEND                 = 12
DP_ERROR_WRITE                = 13
UNKNOWN_DP_ERROR              = 14
ACCESS_DENIED                 = 15
DP_OUT_OF_MEMORY              = 16
DISK_FULL                     = 17
DP_TIMEOUT                    = 18
FILE_NOT_FOUND                = 19
DATAPROVIDER_EXCEPTION        = 20
CONTROL_FLUSH_ERROR           = 21
OTHERS                        = 22
.
IF SY-SUBRC <> 0.
MESSAGE I000 WITH 'ダウンロードに失敗しました'.
ELSE.
MESSAGE S000 WITH 'ダウンロードしました'.
ENDIF.

ENDFORM.                    " DOWNLOAD
