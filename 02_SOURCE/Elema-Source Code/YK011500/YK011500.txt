*&---------------------------------------------------------------------*
*& 検収照合システム
*&   プログラム名称：検収データ確定
*&   プログラムＩＤ：YK011500
*&   作成者　　　　：K.ISHIKAWA(NSP)   作成日　　　　：2001/11/28
*&   更新者　　　　：K.KAJISA(NDSC)    更新日　　　　：2002/03/04
*&         選択画面調整
*&   更新者　　　　：K.KAJISA(NDSC)    更新日　　　　：2002/03/11
*&         選択画面調整の２
*&   更新者　　　　：Inagoshi(NDSC)    更新日　　　　：2002/05/07
*&         YK150による税抜／税／税込の金額チェック選択機能追加
*&   更新者　　　　：Inagoshi(NDSC)    更新日　　　　：2002/05/10
*&         出力フラグのチェックを削除
*&   更新者　　　　：Inagoshi(NDSC)    更新日　　　　：2002/05/28a
*&         結果リスト・タイトル行の追加
*&   更新者　　　　：Inagoshi(NDSC)    更新日　　　　：2002/05/29a
*&      正常データリストを出力しない／エラーのある場合のみエラーリスト
*&   更新者        :SHIRAISHI(NDSC)    更新日        :2002/06/03
*&       エラーログ出力項目追加
*&   更新者        :K.KAJISA(NDSC)     更新日　　　  : 2002/12/12
*&                  得意先が一件しか入力されてなく、かつ変わったら
*&                  初期値を提案する
*&   更新者　　　　：K.kajisa(NDSC)    更新日        : 2003/05/22
*&                  営業所、営業グループの初期値提案
*{   INSERT         TEDK906044                                        2
*&   更新者        : K.ABE(DMC)        更新日        : 2004/12/24
*                   数量属性の桁数変更
*}   INSERT
*&---------------------------------------------------------------------*
report      yk011500
line-count 58
line-size 170
no standard page heading
message-id y1.

*----------------------------------------------------------------------*
*   宣言部
*----------------------------------------------------------------------*
tables:     yk110,              " 検収データ
yk120,              " 検収合計データ
yk150,              " 売上照合マスタ  ADD 2002/05/07
knvv.               "2002/03/11 ADD
*   検収データ
data: begin of i_kenshu occurs 1,
bukrs    like yk110-bukrs,      " 会社コード/M-K(1)/S-K(1)
ykyear   like yk110-ykyear,     " 暦年/M-K(2)/S-K(2)
kunnr    like yk110-kunnr,      " 得意先コード/S-K(3)
kunr2    like yk110-kunr2,      " 検収先/S-K(4)
vkorg    like yk110-vkorg,      " 販売組織/S-K(5)
vtweg    like yk110-vtweg,      " 流通チャネル/S-K(6)
spart    like yk110-spart,      " 製品部門/S-K(7)
vkbur    like yk110-vkbur,      " 営業所/S-K(8)
vkgrp    like yk110-vkgrp,      " 営業グループ/S-K(9)
gsber    like yk110-gsber,      " 事業領域/S-K(10)
zfbdt    like yk110-zfbdt,      " 締め日/S-K(11)
auddoc   like yk110-auddoc,     " 検収番号/M-K(3)
kekkbn   like yk110-kekkbn,     " 照合結果区分
*{   REPLACE        TEDK906044                                        1
*\        knquan   like yk110-knquan,     " 数量
knquan(7) type p decimals 3,    " 数量
*}   REPLACE
knunit   like yk110-knunit,     " 単位
knuntprc like yk110-knuntprc,   " 単価
knitxamt like yk110-knitxamt,   " 税抜金額
kntaxamt like yk110-kntaxamt,   " 消費税額
knetxamt like yk110-knetxamt,   " 税込金額
waers    like yk110-waers,      " 通貨コード
fixflg   like yk110-fixflg,     " 確定フラグ
outflg   like yk110-outflg,     " チェックリスト出力フラグ
end of i_kenshu.

*   検収合計データ
data: begin of i_goukei occurs 1,
bukrs    like yk120-bukrs,      " 会社コード/M-/S-K(1)
ykyear   like yk120-ykyear,     " 暦年/M-/S-K(2)
kunnr    like yk120-kunnr,      " 得意先コード/M-/S-K(3)
kunr2    like yk120-kunr2,      " 検収先/M-/S-K(4)
vkorg    like yk120-vkorg,      " 販売組織/M-/S-K(5)
vtweg    like yk120-vtweg,      " 流通チャネル/M-/S-K(6)
spart    like yk120-spart,      " 製品部門/M-/S-K(7)
vkbur    like yk120-vkbur,      " 営業所/M-/S-K(8)
vkgrp    like yk120-vkgrp,      " 営業グループ/M-/S-K(9)
gsber    like yk120-gsber,      " 事業領域/M-/S-K(10)
zfbdt    like yk120-zfbdt,      " 締め日/M-/S-K(11)
knitxamt like yk120-knitxamt,   " 税抜金額
kntaxamt like yk120-kntaxamt,   " 消費税額
knetxamt like yk120-knetxamt,   " 税込金額
waers    like yk120-waers,      " 通貨コード
fg_err   type c,                " エラーフラグ('E': エラー)
ct_items like sy-dbcnt,         " 当合計データに対するアイテム数
ct_match like sy-dbcnt,         " 　　　〃　　　　　　
"  照合済み & 確定フラグONの件数
end of i_goukei.

*   正常データリスト
data: begin of right_list occurs 1,
bukrs   like yk120-bukrs,   " 会社コード/SK(1)
ykyear  like yk120-ykyear,  " 暦年/SK(2)
kunnr   like yk120-kunnr,   " 得意先コード/SK(3)
kunr2   like yk120-kunr2,   " 検収先/SK(4)
vkorg   like yk120-vkorg,   " 販売組織/SK(5)
vtweg   like yk120-vtweg,   " 流通チャネル/SK(6)
spart   like yk120-spart,   " 製品部門/SK(7)
vkbur   like yk120-vkbur,   " 営業所/SK(8)
vkgrp   like yk120-vkgrp,   " 営業グループ/SK(9)
gsber   like yk120-gsber,   " 事業領域/SK(10)
zfbdt   like yk120-zfbdt,   " 締め日/SK(11)
end of right_list.

*   エラーリスト
data: begin of wrong_list occurs 1,
bukrs   like yk120-bukrs,   " 会社コード/SK(1)
ykyear  like yk120-ykyear,  " 暦年/SK(2)
kunnr   like yk120-kunnr,   " 得意先コード/SK(3)
kunr2   like yk120-kunr2,   " 検収先/SK(4)
vkorg   like yk120-vkorg,   " 販売組織/SK(5)
vtweg   like yk120-vtweg,   " 流通チャネル/SK(6)
spart   like yk120-spart,   " 製品部門/SK(7)
vkbur   like yk120-vkbur,   " 営業所/SK(8)
vkgrp   like yk120-vkgrp,   " 営業グループ/SK(9)
gsber   like yk120-gsber,   " 事業領域/SK(10)
zfbdt   like yk120-zfbdt,   " 締め日/SK(11)
*       アイテムのエラーカウント
ct_erno like sy-dbcnt,      " 検収レコードが不在
"   =0: 存在, =1: 不在
ct_erfg like sy-dbcnt,      " チェックリスト出力フラグがSPACE
ct_ercu like sy-dbcnt,      " 通貨コードの不一致か不均質
ct_ervl like sy-dbcnt,      " 金額(類)合計不一致
end of wrong_list.

*   ワークエリア
data: ct_ttl110 like sy-dbcnt,      " YK110該当件数
ct_ttl120 like sy-dbcnt,      " YK120 〃
ct_upd110 like sy-dbcnt,      " YK110確定更新件数
ct_upd120 like sy-dbcnt,      " YK120 〃
ct_fix110 like sy-dbcnt,      " YK110確定済み件数
ct_fix120 like sy-dbcnt,      " YK120 〃
ct_ccl110 like sy-dbcnt,      " YK110確定解除件数
ct_ccl120 like sy-dbcnt,      " YK120 〃
ct_nox110 like sy-dbcnt,      " YK110確定解除済み件数
ct_nox120 like sy-dbcnt,      " YK120 〃
ct_mat110 like sy-dbcnt,      " YK110照合済み件数
ct_err110 like sy-dbcnt,      " YK110エラー件数
ct_err120 like sy-dbcnt,      " YK120 〃

ct_erno   like sy-dbcnt,      " 検収レコードが不在
"   =0: 存在, =1: 不在
ct_erfg   like sy-dbcnt,      " チェックリスト出力フラグがSPACE
ct_ercu   like sy-dbcnt,      " 通貨コードの不一致か不均質
ct_ervl   like sy-dbcnt.      " 金額(類)合計不一致

data: w_waers   like yk110-waers,   " 通貨コードの一時保管
w_waers2  like yk110-waers,   " 〃
w_flg1    like yk110-fixflg,  " 確定フラグの値保持
w_flg2    like yk110-fixflg,  " 〃
w_subrc   like sy-subrc,      " SY-SUBRCワーク
w_dbcnt1  like sy-dbcnt,      " SY-DBCNT　〃
w_dbcnt2  like sy-dbcnt,      " 〃
fg_erout  type c.             " エラー出力用フラグ

data: w_check_itx type c,  "金額チェック・税抜　ADD 2002/05/07
w_check_tax type c,  "金額チェック・税額　ADD 2002/05/07
w_check_etx type c,  "金額チェック・税込　ADD 2002/05/07
w_check_flg type p.  "金額チェックフラグ　ADD 2002/05/07
data: w_list_cnt1 type p. "ADD 2002/05/29a
DATA W_OLD_KUNNR LIKE YK110-KUNNR. "2002/12/12 ADD
DATA: W_SPART LIKE vbrk-SPART.     "2003/05/23 ADD
*----------------------------------------------------------------------*
*   入力画面定義
*----------------------------------------------------------------------*
*SELECTION-SCREEN SKIP 3.                                "2002/03/04 DEL
parameters p_bukrs  like yk120-bukrs   memory id buk  " 会社コード
obligatory.
parameters p_ykyear like yk120-ykyear.                " 暦年(締日)
*                     OBLIGATORY.                       ""2002/03/11 DEL
* select-options s_kunnr for yk120-kunnr memory id kun  " 得意先コード
select-options s_kunnr for yk120-kunnr                 "2002/12/12 MOD
no intervals.                        "2002/03/11 ADD
select-options s_kunr2 for yk120-kunr2                " 検収先
no intervals.                        "2002/03/11 ADD
select-options s_vkorg for yk120-vkorg memory id vko  " 販売組織
no intervals.                        "2002/03/11 ADD
select-options s_vtweg for yk120-vtweg memory id vtw  " 流通チャネル
no intervals.                        "2002/03/11 ADD
select-options s_spart for yk120-spart memory id spa  " 製品部門
no intervals.                        "2002/03/11 ADD
*  SELECT-OPTIONS S_VKBUR FOR YK120-VKBUR.               " 営業所
*  SELECT-OPTIONS S_VKGRP FOR YK120-VKGRP.               " 営業グループ
select-options s_vkbur for yk120-vkbur                " 営業所
*                                         memory id vkb " DEL2003/05/22
no intervals.                        "2002/03/11 ADD
select-options s_vkgrp for yk120-vkgrp                " 営業グループ
*                                         memory id vkg "DEL2003/05/22
no intervals.                        "2002/03/11 ADD
select-options s_gsber for yk120-gsber memory id gsb  " 事業領域
no intervals.                        "2002/03/11 ADD
parameters p_zfbdt  like yk120-zfbdt                  " 締め日
default sy-datum                     "2002/03/11 DEL
obligatory.

*----------------------------------------------------------------------*
*   実行
*----------------------------------------------------------------------*
initialization.

at selection-screen.
*2002/03/11 ADD START
data ct_rec type p.
*  check sy-ucomm is initial.          "ENTER時のみ処理 "2002/12/12 DEL
describe table s_vkorg lines ct_rec.
check ct_rec = 1.
describe table s_vtweg lines ct_rec.
check ct_rec = 1.
describe table s_spart lines ct_rec.
check ct_rec = 1.
describe table s_kunnr lines ct_rec.
*  check ct_rec = 1.
if ct_rec = 1.
read table s_kunnr index 1.
IF W_OLD_KUNNR <> s_kunnr-LOW.  "2002/12/12 ADD
if  ( s_kunnr-option = 'EQ' or  s_kunnr-option = space )
and ( s_vkorg-option = 'EQ' or  s_vkorg-option = space )
and ( s_vtweg-option = 'EQ' or  s_vtweg-option = space )
and ( s_spart-option = 'EQ' or  s_spart-option = space ).
refresh:s_vkbur, s_vkgrp.
perform set_zfbdt.              "締日初期値セット
perform set_eigyo.              "営業所&営業グループ初期値セット
message id 'Y1' type 'S' number '400' with '初期値設定しました'.
endif.
W_OLD_KUNNR = s_kunnr-LOW.  "2002/12/12/ ADD
ENDIF.                         "2002/12/12/ ADD
ELSE.                                 "2003/05/13 ADD
CLEAR W_OLD_KUNNR.                  "2003/05/13 ADD
endif.
*2002/03/11 ADD END

start-of-selection.

*** １． データ抽出，および
*        内部テーブル（検収合計テーブル & 検収テーブル）の作成
*
*       - 前提条件（ただし，絶対的な条件ではない）：
*             検収合計データ（YK120）のソート順
*                 (1) BUKRS（会社コード）
*                 (2) YKYEAR（暦年）
*                 (3) KUNNR（得意先コード）
*                 (4) KUNR2（検収先）
*                 (5) VKORG（販売組織）
*                 (6) VTWEG（流通チャネル）
*                 (7) SPART（製品部門）
*                 (8) VKBUR（営業所）
*                 (9) VKGRP（営業グループ）
*                 (10) GSBER（事業領域）
*                 (11) ZFBDT（締め日）
*
*             検収データ（YK110）のソート順
*                 (1) BUKRS（会社コード）
*                 (2) YKYEAR（暦年）
*                 (3) AUDDOC（検収番号）
*
*       - 事後条件：
*             エラーリスト（WRONG_LIST）のソート順
*                 (1) BUKRS（会社コード）
*                 (2) YKYEAR（暦年）
*                 (3) KUNNR（得意先コード）
*                 (4) KUNR2（検収先）
*                 (5) VKORG（販売組織）
*                 (6) VTWEG（流通チャネル）
*                 (7) SPART（製品部門）
*                 (8) VKBUR（営業所）
*                 (9) VKGRP（営業グループ）
*                 (10) GSBER（事業領域）
*                 (11) ZFBDT（締め日）
*

*   選択条件を満たす検収合計データ（YK120）レコードの読込み
clear i_goukei.
refresh i_goukei.
select *
from yk120
into corresponding fields of table i_goukei
where bukrs  =  p_bukrs     " 会社コードチェック
and ykyear =  p_ykyear    " 暦年チェック
and kunnr  in s_kunnr     " 得意先コードチェック
and kunr2  in s_kunr2     " 検収先チェック
and vkorg  in s_vkorg     " 販売組織チェック
and vtweg  in s_vtweg     " 流通チャネルチェック
and spart  in s_spart     " 製品部門チェック
and vkbur  in s_vkbur     " 営業所チェック
and vkgrp  in s_vkgrp     " 営業グループチェック
and gsber  in s_gsber     " 事業領域チェック
and zfbdt  =  p_zfbdt.    " 締め日チェック

*   検収合計データに選択条件を満たすレコードが存在するかどうかの
*   チェック
*   １件も存在しなければ，強制終了させる
if sy-subrc > 0.
message s663 .
stop.
endif.

*   内部テーブル（I_GOUKEI）のソーティング
sort i_goukei ascending
by bukrs      " (1) 会社コード
ykyear     " (2) 暦年
kunnr      " (3) 得意先コード
kunr2      " (4) 検収先
vkorg      " (5) 販売組織
vtweg      " (6) 流通チャネル
spart      " (7) 製品部門
vkbur      " (8) 営業所
vkgrp      " (9) 営業グループ
gsber      " (10) 事業領域
zfbdt.     " (11) 締め日

*   検収データ（YK110）の取得
clear i_kenshu.
loop at i_goukei.
select *
from yk110
into corresponding fields of i_kenshu
where delflg = space              " 削除フラグチェック
and bukrs  = i_goukei-bukrs     " 会社コードマッチ
and ykyear = i_goukei-ykyear    " 暦年マッチ
and kunnr  = i_goukei-kunnr     " 得意先コードマッチ
and kunr2  = i_goukei-kunr2     " 検収先マッチ
and vkorg  = i_goukei-vkorg     " 販売組織マッチ
and vtweg  = i_goukei-vtweg     " 流通チャネルマッチ
and spart  = i_goukei-spart     " 製品部門マッチ
and vkbur  = i_goukei-vkbur     " 営業所マッチ
and vkgrp  = i_goukei-vkgrp     " 営業グループマッチ
and gsber  = i_goukei-gsber     " 事業領域マッチ
and zfbdt  = i_goukei-zfbdt.    " 締め日マッチ
append i_kenshu.
clear i_kenshu.
endselect.
endloop.

*   内部テーブル（I_KENSHU）のソーティング
sort i_kenshu ascending
by bukrs      " (1) 会社コード
ykyear     " (2) 暦年
kunnr      " (3) 得意先コード
kunr2      " (4) 検収先
vkorg      " (5) 販売組織
vtweg      " (6) 流通チャネル
spart      " (7) 製品部門
vkbur      " (8) 営業所
vkgrp      " (9) 営業グループ
gsber      " (10) 事業領域
zfbdt.     " (11) 締め日

*** ２． エラーチェック
*

*   エラーカウントのクリア & 該当件数の取得
clear: ct_ttl110, ct_ttl120,
ct_upd110, ct_upd120, ct_fix110, ct_fix120,
ct_ccl110, ct_ccl120, ct_nox110, ct_nox120, ct_mat110,
ct_err110, ct_err120.
describe table i_kenshu lines ct_ttl110.
describe table i_goukei lines ct_ttl120.

*   内部テーブルどうしのマッチング
clear wrong_list.
refresh wrong_list.
loop at i_goukei.
*       エラーフラグのクリア
clear: i_goukei-fg_err.
*       カウンタクリア
clear: i_goukei-ct_items, i_goukei-ct_match.
clear: ct_erno, ct_erfg, ct_ercu, ct_ervl.

*       マッチする検収データを読み込む
read table i_kenshu
with key    bukrs  = i_goukei-bukrs
ykyear = i_goukei-ykyear
kunnr  = i_goukei-kunnr
kunr2  = i_goukei-kunr2
vkorg  = i_goukei-vkorg
vtweg  = i_goukei-vtweg
spart  = i_goukei-spart
vkbur  = i_goukei-vkbur
vkgrp  = i_goukei-vkgrp
gsber  = i_goukei-gsber
zfbdt  = i_goukei-zfbdt.

*       マッチする検収データが存在するか
if sy-subrc > 0.
move-corresponding i_goukei to wrong_list.
ct_erno = 1.
else.
*------------------------------------ ADD 2002/05/07 (start)
*  　       金額チェックの為のYK150データの取得
clear: w_check_itx, w_check_tax, w_check_etx.
select single * from yk150
where bukrs  = i_goukei-bukrs  "会社コード
and kunnr  = i_goukei-kunr2  "得意先 = 検収先
and vkorg  = i_goukei-vkorg  "販売組織
and vtweg  = i_goukei-vtweg  "流通チャネル
and spart  = i_goukei-spart. "製品部門
if sy-subrc = 0.
w_check_itx = yk150-r_itx_er.  "税抜チェック
w_check_tax = yk150-r_tax_er.  "税額チェック
w_check_etx = yk150-r_etx_er.  "税込チェック
else.
select single * from yk150
where bukrs  = i_goukei-bukrs  "会社コード
and kunnr  = 'DEFAULT'.      "得意先 = default
if sy-subrc = 0.
w_check_itx = yk150-r_itx_er.
w_check_tax = yk150-r_tax_er.
w_check_etx = yk150-r_etx_er.
else.
w_check_itx = 'X'.
w_check_tax = ' '.
w_check_etx = ' '.
endif.
endif.
*------------------------------------ ADD 2002/05/07 (end)

*           マッチする検収データを順次読み込む
loop at i_kenshu
where bukrs  = i_goukei-bukrs
and ykyear = i_goukei-ykyear
and kunnr  = i_goukei-kunnr
and kunr2  = i_goukei-kunr2
and vkorg  = i_goukei-vkorg
and vtweg  = i_goukei-vtweg
and spart  = i_goukei-spart
and vkbur  = i_goukei-vkbur
and vkgrp  = i_goukei-vkgrp
and gsber  = i_goukei-gsber
and zfbdt  = i_goukei-zfbdt.

i_goukei-ct_items = i_goukei-ct_items + 1.
if ( '4' <= i_kenshu-kekkbn and i_kenshu-kekkbn <= '5' )
and i_kenshu-fixflg = 'X'.
i_goukei-ct_match = i_goukei-ct_match + 1.
endif.

**               チェックリスト出力フラグが'X'でないか？  DEL 2002/05/10
*                if not i_kenshu-outflg = 'X'.
*                    ct_erfg = ct_erfg + 1.
*                endif.
**
*               通貨コードのセーブ
w_waers2 = i_kenshu-waers.
*               キーブレーク
at new zfbdt.
w_waers = w_waers2.
endat.

*               通貨コードのチェック（不一致 or 不均質）
if i_kenshu-waers <> i_goukei-waers or
i_kenshu-waers <> w_waers.
ct_ercu = ct_ercu + 1.  " このcount upは意味がない
endif.

at end of zfbdt.
*------------------------------------ MOD 2002/05/07 (start)
*                   金額チェック
sum.
*                    if i_kenshu-knitxamt <> i_goukei-knitxamt or
*                       i_kenshu-kntaxamt <> i_goukei-kntaxamt or
*                       i_kenshu-knetxamt <> i_goukei-knetxamt.
*                        ct_ervl = 1.
*                    endif.
clear w_check_flg.
if w_check_itx = 'X'.
if i_kenshu-knitxamt <> i_goukei-knitxamt.
add 1 to w_check_flg.
endif.
endif.
if w_check_tax = 'X'.
if i_kenshu-kntaxamt <> i_goukei-kntaxamt.
add 1 to w_check_flg.
endif.
endif.
if w_check_etx = 'X'.
if i_kenshu-knetxamt <> i_goukei-knetxamt.
add 1 to w_check_flg.
endif.
endif.
if w_check_flg > 0.
ct_ervl = 1.
endif.
*------------------------------------ MOD 2002/05/07 (end)
endat.
endloop.    " AT I_KENSHU
endif.

if ct_erno = 0 and ct_erfg = 0 and ct_ercu = 0 and ct_ervl = 0.
clear right_list.
move-corresponding i_goukei to right_list.
append right_list.
else.
*         if (CT_ERNO = 1 or CT_ERFG > 0 or CT_ERCU > 0 or CT_ERVL > 0)
clear wrong_list.
move-corresponding i_goukei to wrong_list.
i_goukei-fg_err = 'E'. " エラーフラグのセット
ct_err120 = ct_err120 + 1.
if ct_ercu = 0 and ct_ervl = 0.
*               この場合、検収データが不在か出力フラグがSPACEのエラー
*               （通貨コードまたは金額合計の不整合エラーがあれば，そちら
*                 のほうを優先してカウントする点に注意）
ct_err110 = ct_err110 + ct_erfg.
else.
*             if (CT_ERCU > 0 or CT_ERVL > 0)
*               つまり、この場合は通貨コードか金額エラーなので，
*               全検収データをエラー扱いとする
ct_err110 = ct_err110 + i_goukei-ct_items.
endif.

wrong_list-ct_erno = ct_erno.
wrong_list-ct_erfg = ct_erfg.
wrong_list-ct_ercu = ct_ercu.
wrong_list-ct_ervl = ct_ervl.
append wrong_list.
endif.

modify i_goukei.

endloop.    " AT I_GOUKEI

*** ３． データベースの更新
*

*   データベース（YK120 & YK110）の確定フラグのチェック & 更新
loop at i_goukei.
*       ロック処理
*       （合計データレコードに対して）
perform enqueue_yk120 using w_subrc.

if w_subrc = 0.
*           （アイテムブロックに対して）
loop at i_kenshu
where bukrs  = i_goukei-bukrs
and ykyear = i_goukei-ykyear
and kunnr  = i_goukei-kunnr
and kunr2  = i_goukei-kunr2
and vkorg  = i_goukei-vkorg
and vtweg  = i_goukei-vtweg
and spart  = i_goukei-spart
and vkbur  = i_goukei-vkbur
and vkgrp  = i_goukei-vkgrp
and gsber  = i_goukei-gsber
and zfbdt  = i_goukei-zfbdt.

perform enqueue_yk110 using w_subrc.

if w_subrc > 0.
exit.
endif.
endloop.    " AT I_KENSHU
endif.

*       ロック処理に失敗したか
if w_subrc > 0.
rollback work.
perform dequeue_yk120.
perform dequeue_yk110.
stop.
endif.

*       確定フラグのセット
w_flg1 = space.
w_flg2 = 'X'.
if not i_goukei-fg_err is initial.
w_flg1 = 'X'.
w_flg2 = space.
endif.

*       データベースの確定フラグの更新(確定/解除)
update yk120
set fixflg = w_flg2
upddat = sy-datum
updtim = sy-uzeit
updusr = sy-uname
where bukrs  = i_goukei-bukrs
and ykyear = i_goukei-ykyear
and kunnr  = i_goukei-kunnr
and kunr2  = i_goukei-kunr2
and vkorg  = i_goukei-vkorg
and vtweg  = i_goukei-vtweg
and spart  = i_goukei-spart
and vkbur  = i_goukei-vkbur
and vkgrp  = i_goukei-vkgrp
and gsber  = i_goukei-gsber
and zfbdt  = i_goukei-zfbdt
and fixflg = w_flg1.

w_dbcnt1 = sy-dbcnt.
w_subrc  = sy-subrc.
if not ( w_subrc = 0 or w_subrc = 4 ).
message s664 with 'YK120' .
exit.
else.
*           データベースの確定フラグの更新(確定/解除)
update yk110
set fixflg = w_flg2
upddat = sy-datum
updtim = sy-uzeit
updusr = sy-uname
where delflg = space        " 削除フラグチェック
and bukrs  = i_goukei-bukrs
and ykyear = i_goukei-ykyear
and kunnr  = i_goukei-kunnr
and kunr2  = i_goukei-kunr2
and vkorg  = i_goukei-vkorg
and vtweg  = i_goukei-vtweg
and spart  = i_goukei-spart
and vkbur  = i_goukei-vkbur
and vkgrp  = i_goukei-vkgrp
and gsber  = i_goukei-gsber
and zfbdt  = i_goukei-zfbdt
and kekkbn < '4'
and fixflg = w_flg1.

w_dbcnt2 = sy-dbcnt.
w_subrc  = sy-subrc.
if not ( w_subrc = 0 or w_subrc = 4 ).
message s664 with 'YK110' .
exit.
endif.

*           更新/解除カウントは実際に更新されたレコード数とする
if i_goukei-fg_err is initial.
ct_upd120 = ct_upd120 + w_dbcnt1.
ct_upd110 = ct_upd110 + w_dbcnt2.
ct_fix120 = ct_fix120 + ( 1 - w_dbcnt1 ).
ct_fix110 = ct_fix110 +
( i_goukei-ct_items - w_dbcnt2 ).
else.
ct_ccl120 = ct_ccl120 + w_dbcnt1.
ct_ccl110 = ct_ccl110 + w_dbcnt2.
ct_nox120 = ct_nox120 + ( 1 - w_dbcnt1 ).
ct_nox110 = ct_nox110 +
( i_goukei-ct_items - w_dbcnt2 - i_goukei-ct_match ).
ct_mat110 = ct_mat110 + i_goukei-ct_match.
endif.
endif.
endloop.    " AT I_GOUKEI

*   コミットワーク or ロールバック
if w_subrc = 0 or w_subrc = 4.
commit work.
perform dequeue_yk120.
perform dequeue_yk110.
else.
rollback work.
perform dequeue_yk120.
perform dequeue_yk110.
stop.
endif.

*** ４． 結果表示
***--- ADD 2002/05/28a (start)
write: /1  '入力データチェックリスト'.
write /.
***--- ADD 2002/05/28a (end)
*   正常データの表題 & 見出し
***--- DEL 2002/05/29a (start)
*    write: /1  '正常データ'.
*    write /.
*    write: /1  '会社コード',
*            12 '暦年',
*            17 '得意先コード',
*            31 '検収先',
*            43 '販売組織',
*            52 '流通チャネル',
*            65 '製造部門',
*            75 '営業所',
*            84 '営業GRP',
*            93 '事業領域',
*            105 '締日'.
*    uline.
**   正常データ各行の表示
*    loop at right_list.
*        write: /4   right_list-bukrs,     " 会社コード
*                12  right_list-ykyear,    " 暦年
*                18  right_list-kunnr,     " 得意先コード
*                31  right_list-kunr2,     " 検収先
*                45  right_list-vkorg,     " 販売組織
*                57  right_list-vtweg,     " 流通チャネル
*                68  right_list-spart,     " 製品部門
*                76  right_list-vkbur,     " 営業所
*                86  right_list-vkgrp,     " 営業グループ
*                95  right_list-gsber,     " 事業領域
*                102 right_list-zfbdt.     " 締め日
*    endloop.
*    uline.
***--- DEL 2002/05/29a (end)
***--- ADD 2002/05/29a (start)
describe table wrong_list lines w_list_cnt1.
if w_list_cnt1 > 0.
***--- ADD 2002/05/29a (end)
*   エラーデータの表題 & 見出し
write /.
write: /1  'エラーデータ'.
write /.
write: /1  '会社コード',
12 '暦年',
17 '得意先コード',
31 '検収先',
43 '販売組織',
52 '流通チャネル',
65 '製造部門',
75 '営業所',
84 '営業GRP',
93 '事業領域',
*           105 '締日', 2002/06/14 MOD
105 '基準日',
114 'ステータス'.
uline.

*   エラーデータ各行の表示
loop at wrong_list.
fg_erout = '0'.
write: /4   wrong_list-bukrs,     " 会社コード
12  wrong_list-ykyear,    " 暦年
18  wrong_list-kunnr,     " 得意先コード
31  wrong_list-kunr2,     " 検収先
45  wrong_list-vkorg,     " 販売組織
57  wrong_list-vtweg,     " 流通チャネル
68  wrong_list-spart,     " 製品部門
76  wrong_list-vkbur,     " 営業所
86  wrong_list-vkgrp,     " 営業グループ
95  wrong_list-gsber,     " 事業領域
102 wrong_list-zfbdt.     " 締め日
if wrong_list-ct_erno > 0.
fg_erout = '1'.
write:  114 '検収データ不在'.
endif.
if wrong_list-ct_erfg > 0.
if fg_erout = '0'.
fg_erout = '1'.
write:  114 'チェックリスト未出力'.
else.
write: /114 'チェックリスト未出力'.
endif.
endif.
if wrong_list-ct_ercu > 0.
if fg_erout = '0'.
fg_erout = '1'.
write:  114 '通貨コード不一致'.
else.
write: /114 '通貨コード不一致'.
endif.
endif.
if wrong_list-ct_ervl > 0.
if fg_erout = '0'.
fg_erout = '1'.
write:  114 '金額不一致'.
else.
write: /114 '金額不一致'.
endif.
endif.
endloop.
uline.
endif. "ADD 2002/05/29a
***--- DEL 2002/05/29a (start)
*    write /.
*    write: /1 '検収データ該当件数',           29(4) ct_ttl110, 33 '件'.
*    write: /1 '検収合計データ該当件数',       29(4) ct_ttl120, 33 '件'.
*    write: /1 '検収データ確定更新件数',       29(4) ct_upd110, 33 '件'.
*    write: 38 '検収データ確定済件数',         68(4) ct_fix110, 72 '件'.
*    write: /1 '検収合計データ確定更新件数',   29(4) ct_upd120, 33 '件'.
*    write: 38 '検収合計データ確定済件数',     68(4) ct_fix120, 72 '件'.
*    write: /1 '検収データ確定解除件数',       29(4) ct_ccl110, 33 '件'.
*    write: 38 '検収データ確定解除済件数',     68(4) ct_nox110, 72 '件'.
*    write: 77 '検収データ照合済件数',        99(4) ct_mat110, 103 '件'.
*    write: /1 '検収合計データ確定解除件数',   29(4) ct_ccl120, 33 '件'.
*    write: 38 '検収合計データ確定解除済件数', 68(4) ct_nox120, 72 '件'.
*    write: /1 '検収データエラー件数',         29(4) ct_err110, 33 '件'.
*    write: /1 '検収合計データエラー件数',     29(4) ct_err120, 33 '件'.
***--- DEL 2002/05/29a (end)
***--- ADD 2002/06/03
write /.
write: /1 '検収データエラー件数',         29(4) ct_err110, 33 '件'.
write: /1 '検収合計データエラー件数',     29(4) ct_err120, 33 '件'.
***--- ADD 2002/06/03(END)
*----------------------------------------------------------------------*
*   FORM ENQUEUE/DEQUEUE_YK110
*   FORM ENQUEUE/DEQUEUE_YK120
*----------------------------------------------------------------------*
*       ロック処理/解除
*----------------------------------------------------------------------*
*   <- W_SUBRC: SY-SUBRC (ENQUEUE only)
*----------------------------------------------------------------------*

form enqueue_yk110 using w_subrc.
call function 'ENQUEUE_EY_YK110'
exporting
mode_yk110     = 'E'
mandt          = sy-mandt
*            DELFLG         = SPACE          " 削除フラグチェック
bukrs          = i_kenshu-bukrs
ykyear         = i_kenshu-ykyear
auddoc         = i_kenshu-auddoc
exceptions
foreign_lock   = 1
system_failure = 2
others         = 3.

w_subrc = sy-subrc.
if w_subrc > 0.
message s666 with 'YK110' .
endif.
endform.

form dequeue_yk110.
loop at i_kenshu.
call function 'DEQUEUE_EY_YK110'
exporting
mode_yk110 = 'E'
mandt      = sy-mandt
*                DELFLG     = SPACE          " 削除フラグチェック
bukrs      = i_kenshu-bukrs
ykyear     = i_kenshu-ykyear
auddoc     = i_kenshu-auddoc
exceptions
others     = 1.

if sy-subrc > 0.
message s665 with 'YK110' .
stop.
endif.
endloop.
endform.

form enqueue_yk120 using w_subrc.
call function 'ENQUEUE_EY_YK120'
exporting
mode_yk120     = 'E'
mandt          = sy-mandt
bukrs          = i_goukei-bukrs
ykyear         = i_goukei-ykyear
kunnr          = i_goukei-kunnr
kunr2          = i_goukei-kunr2
vkorg          = i_goukei-vkorg
vtweg          = i_goukei-vtweg
spart          = i_goukei-spart
vkbur          = i_goukei-vkbur
vkgrp          = i_goukei-vkgrp
gsber          = i_goukei-gsber
zfbdt          = i_goukei-zfbdt
exceptions
foreign_lock   = 1
system_failure = 2
others         = 3.

w_subrc = sy-subrc.
if w_subrc > 0.
message s665 with 'YK120' .
endif.
endform.

form dequeue_yk120.
loop at i_goukei.
call function 'DEQUEUE_EY_YK120'
exporting
mode_yk120 = 'E'
mandt      = sy-mandt
bukrs      = i_goukei-bukrs
ykyear     = i_goukei-ykyear
kunnr      = i_goukei-kunnr
kunr2      = i_goukei-kunr2
vkorg      = i_goukei-vkorg
vtweg      = i_goukei-vtweg
spart      = i_goukei-spart
vkbur      = i_goukei-vkbur
vkgrp      = i_goukei-vkgrp
gsber      = i_goukei-gsber
zfbdt      = i_goukei-zfbdt
exceptions
others     = 1.

if sy-subrc > 0.
message s665 with 'YK120' .
stop.
endif.
endloop.
endform.
*&---------------------------------------------------------------------*
*&      Form  SET_ZFBDT
*&---------------------------------------------------------------------*
*       締日初期値取得  2001/03/11 ADD
*----------------------------------------------------------------------*
form set_zfbdt.
call function 'YK_ZFBDT_GET_BY_KNVV'
exporting
i_cord               = s_kunnr-low
i_vkorg              = s_vkorg-low
i_vtweg              = s_vtweg-low
i_spart              = s_spart-low
i_day                = sy-datum
importing
e_zfbdt_old          = p_zfbdt
exceptions
no_get_t052          = 1
no_good_getday       = 2
no_get_zterm         = 3
others               = 4.
p_ykyear = p_zfbdt(4).
endform.                    " SET_ZFBDT
*&---------------------------------------------------------------------*
*&      Form  SET_EIGYO
*&---------------------------------------------------------------------*
*        営業所&営業グループの初期値取得
*----------------------------------------------------------------------*
form set_eigyo.
PERFORM GET_INIT_CHK."2003/05/13 ADD
clear knvv.
select single vkbur vkgrp into (s_vkbur-low, s_vkgrp-low) from knvv
where kunnr = s_kunnr-low
and vkorg = s_vkorg-low
and vtweg = s_vtweg-low
*    and spart = s_spart-low     "2003/05/22 MOD
and spart = W_spart.        "2003/05/22 MOD
if sy-subrc = 0.
IF YK150-B_VKBUR_INIT = 'X'. "2003/05/22 ADD
s_vkbur-sign   = 'I'.
s_vkbur-option = 'EQ'.
append s_vkbur.
ENDIF.                       "2003/05/22 ADD
IF YK150-B_VKGRP_INIT = 'X'. "2003/05/13 ADD
s_vkgrp-sign   = 'I'.
s_vkgrp-option = 'EQ'.
append s_vkgrp.
ENDIF.                       "2003/05/13 ADD
endif.
IF YK150-B_VKBUR_INIT <> 'X'.  "2003/05/13 ADD
CLEAR S_VKBUR.               "2003/05/13 ADD
REFRESH S_VKBUR.             "2003/05/13 ADD
ENDIF.                         "2003/05/13 ADD
IF YK150-B_VKGRP_INIT <> 'X'.  "2003/05/13 ADD
CLEAR S_VKGRP.               "2003/05/13 ADD
REFRESH S_VKGRP.             "2003/05/13 ADD
ENDIF.                         "2003/05/13 ADD
endform.                    " SET_EIGYO
*&---------------------------------------------------------------------*
*&      Form  GET_INIT_CHK
*&---------------------------------------------------------------------*
*       製品部門変換 2003/05/23 ADD
*----------------------------------------------------------------------*
FORM GET_INIT_CHK.
CLEAR W_SPART.
SELECT SINGLE SPAKU FROM TVTA INTO  W_SPART
WHERE vkorg = S_vkorg-low
AND VTWEG = s_VTWEG-low
AND SPART = s_SPART-low.
IF SY-SUBRC <> 0.
W_SPART = s_SPART-low.
ENDIF.
CLEAR YK150.
SELECT SINGLE B_VKBUR_INIT B_VKGRP_INIT
INTO (YK150-B_VKBUR_INIT,YK150-B_VKGRP_INIT) FROM YK150
WHERE BUKRS = p_BUKRS
AND KUNNR = S_KUNNR-LOW
AND VKORG = s_VKORG-low
AND VTWEG = s_VTWEG-low
AND SPART = s_SPART-low.
IF SY-SUBRC <> 0.
SELECT  B_VKBUR_INIT B_VKGRP_INIT
INTO (YK150-B_VKBUR_INIT,YK150-B_VKGRP_INIT) FROM YK150
UP TO 1 ROWS
WHERE KUNNR = 'DEFAULT'.
ENDSELECT.
ENDIF.
ENDFORM.                    " GET_INIT_CHK
