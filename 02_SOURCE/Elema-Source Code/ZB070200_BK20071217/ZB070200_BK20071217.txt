REPORT ZB070200 MESSAGE-ID Y1 NO STANDARD PAGE HEADING
LINE-SIZE 170 LINE-COUNT 58.
************************************************************************
* プログラムID  :ZB070200
* プログラム名  :得意先コード登録・更新確認リスト
* 作成日        :2007/11/27
* 作成者        :DMC
* 変更履歴      :
************************************************************************
*----------------------------------------------------------------------*
*     宣言部
*----------------------------------------------------------------------*
TABLES:     CDHDR,                     "変更伝票ヘッダ
CDPOS,                     "変更伝票明細
KNA1,                      "得意先マスタ: 一般データ
ADRC,                      "アドレス(中央アドレス管理)
T005T,                     "国名
T002T,                     "言語キーテキスト
KNB1,                      "得意先マスタ（会社コード）
SKAT,                      "勘定コードマスタレコード
T052U,                     "支払条件の独自説明
T042Z,                     "自動支払の支払方法
KNVH,                      "得意先階層
B930,                      "出荷タイプ
B931,                      "出荷タイプ
T685T,                     "条件: タイプ: テキスト
NACH,                      "詳細出力データ
KNVI,                      "得意先マスタ 税コード
KNKK,                      "与信管理領域データ
KNVV,                      "得意先マスタ: 販売データ
TVKBT,                     "組織単位: 営業所: テキスト
TVGRT,                     "組織単位: 販売グループ: テキスト
T151T,                     "得意先: 得意先グループ: テキスト
TCURT,                     "通貨コードテキスト
TVKDT,                     "得意先価格決定区分: テキスト
TVSDT,                     "得意先: 統計グループ: テキスト
TPRIT,                     "得意先: 納入優先順位テキスト
TVSBT,                     "出荷条件: テキスト
T001W,                     "プラント/支店
TVKTT,                     "勘定設定グループ: テキスト
TSKDT,                     "税: 得意先テキスト
KNVP,                      "得意先マスタ 取引先機能
PA0002,                    "HR マスタレコード
TVV1T.                     "得意先グループ 1: テキスト
*---------------------------------------------------------------------*
*       構造定義          　　　　                                    *
*---------------------------------------------------------------------*
**対象ヘッダデータ
TYPES:BEGIN OF TYP_HDATA.
INCLUDE STRUCTURE CDHDR.
TYPES:END   OF TYP_HDATA.
**対象明細データ
TYPES:BEGIN OF TYP_MDATA.
INCLUDE STRUCTURE CDPOS.
TYPES:END   OF TYP_MDATA.
**出力データ
TYPES:BEGIN OF TYP_OTDATA,
LNAME      LIKE TSP03L-LNAME,    "スプール: デバイス名
PADEST     LIKE TSP03L-PADEST,   "スプール: 出力デバイスの略称
KUNNR      LIKE KNA1-KUNNR,      "得意先コード
NAME1      LIKE ADRC-NAME1,      "名称1
NAME1M(1)  TYPE C,               "名称1変更
NAME2      LIKE ADRC-NAME2,      "名称2
NAME2M(1)  TYPE C,               "名称2変更
SORTL      LIKE ADRC-SORT1,      "検索用語
STREET     LIKE ADRC-STREET,     "都道府県名
STREETM(1) TYPE C,               "都道府県名変更
POST_CODE  LIKE ADRC-POST_CODE1, "郵便番号
PCODEM(1)  TYPE C,               "郵便番号変更
CITY       LIKE ADRC-CITY1,      "市区町村
CITYM(1)   TYPE C,               "市区町村変更
COUNTRY    LIKE ADRC-COUNTRY,    "国コード
CTRM(1)    TYPE C,               "国コード変更
LANDX      LIKE T005T-LANDX,     "国テキスト
LANDXM(1)  TYPE C,               "国テキスト変更
LANGU      LIKE ADRC-LANGU,      "言語キー
LANGUM(1)  TYPE C,               "言語キー変更
SPTXT      LIKE T002T-SPTXT,     "言語テキスト
SPTXTM(1)  TYPE C,               "言語テキスト変更
TEL        LIKE ADRC-TEL_NUMBER, "電話番号
TELM(1)    TYPE C,               "電話番号変更
TEXT1(132) TYPE C,               "コメント
TEXT2(132) TYPE C,               "上場区分
TEXT3(132) TYPE C,               "評価ランク
TEXT4(132) TYPE C,               "備考
AKONT      LIKE KNB1-AKONT,      "統制勘定
AKONTM(1)  TYPE C,               "統制勘定変更
TXT20      LIKE SKAT-TXT20,      "勘定コードテキスト
TXT20M(1)  TYPE C,               "勘定コードテキスト変更
ZTERM      LIKE KNB1-ZTERM,      "支払条件
ZTERMM(1)  TYPE C,               "支払条件変更
TEXT5      LIKE T052U-TEXT1,     "支払条件テキスト
TEXT5M(1)  TYPE C,               "支払条件テキスト変更
ZWELS      LIKE KNB1-ZWELS,      "支払方法
ZWELSM(1)  TYPE C,               "支払方法変更
TEXT6(300) TYPE C,               "支払方法テキスト
TEXT6M(1)  TYPE C,               "支払方法テキスト変更
KVERM      LIKE KNB1-KVERM,      "コメント(会社コード)
KVERMM(1)  TYPE C,               "コメント変更(会社コード)
TEXT7(132) TYPE C,               "入金条件メモ
TEXT8(132) TYPE C,               "高千穂請求書
TEXT9(132) TYPE C,               "納品書種別
HKUNNR     LIKE KNVH-HKUNNR,     "得意先階層
VTEXT3     LIKE T685T-VTEXT,     "納品書区分
LDEST      LIKE TSP03L-LNAME,    "納品書プリンタ
KLIMK(16)   TYPE C,              "与信限度額
KLIMKM(1)   TYPE C,              "与信限度額変更
TEXTA1(132) TYPE C,              "上場区分
TEXTA2(132) TYPE C,              "評点
TEXTA3(132) TYPE C,              "企業コード
TEXTA4(132) TYPE C,              "与信情報履歴
VKBUR       LIKE KNVV-VKBUR,     "営業所
VKBURM(1)   TYPE C,              "営業所変更
BEZEI       LIKE TVKBT-BEZEI,    "営業所テキスト
BEZEIM(1)   TYPE C,              "営業所テキスト変更
VKGRP       LIKE KNVV-VKGRP,     "営業グループ
VKGRPM(1)   TYPE C,              "営業グループ変更
BEZEI4      LIKE TVGRT-BEZEI,    "営業グループテキスト
BEZEI4M(1)  TYPE C,              "営業グループテキスト変更
KDGRP       LIKE KNVV-KDGRP,     "得意先グループ
KDGRPM(1)   TYPE C,              "得意先グループ変更
KTEXT       LIKE T151T-KTEXT,    "得意先グループテキスト
KTEXTM(1)   TYPE C,              "得意先グループテキスト変更
WAERS       LIKE KNVV-WAERS,     "通貨コード
WAERSM(1)   TYPE C,              "通貨コード変更
LTEXT       LIKE TCURT-LTEXT,    "通貨コードテキスト
LTEXTM(1)   TYPE C,              "通貨コードテキスト変更
KALKS       LIKE KNVV-KALKS,     "得意先価格決定
KALKSM(1)   TYPE C,              "得意先価格決定変更
VTEXT       LIKE TVKDT-VTEXT,    "得意先価格決定テキスト
VTEXTM(1)   TYPE C,              "得意先価格決定テキスト変更
VERSG       LIKE KNVV-VERSG,     "統計グループ
BEZEI20     LIKE TVSDT-BEZEI20,  "統計グループテキスト
LPRIO       LIKE KNVV-LPRIO,     "出荷優先順位
LPRIOM(1)   TYPE C,              "出荷優先順位変更
BEZEI2      LIKE TPRIT-BEZEI,    "出荷優先順位テキスト
BEZEI2M(1)  TYPE C,              "出荷優先順位テキスト変更
VSBED       LIKE KNVV-VSBED,     "出荷条件
VSBEDM(1)   TYPE C,              "出荷条件変更
VTEXT2      LIKE TVSBT-VTEXT,    "出荷条件テキスト
VTEXT2M(1)  TYPE C,              "出荷条件テキスト変更
VWERK       LIKE KNVV-VWERK,     "出荷プラント
VWERKM(1)   TYPE C,              "出荷プラント変更
NAME        LIKE T001W-NAME1,    "出荷プラントテキスト
NAMEM(1)    TYPE C,              "出荷プラントテキスト変更
KZAZU       LIKE KNVV-KZAZU,     "受注結合出荷区分
KZAZUM(1)   TYPE C,              "受注結合出荷区分変更
ZTERM2      LIKE KNVV-ZTERM,     "支払条件(販売エリア)
ZTERM2M(1)  TYPE C,              "支払条件変更
TEXTA5      LIKE T052U-TEXT1,    "支払条件テキスト(販売エリア)
TEXTA5M(1)  TYPE C,              "支払条件テキスト変更
KTGRD       LIKE KNVV-KTGRD,     "勘定設定グループ
KTGRDM(1)   TYPE C,              "勘定設定グループ変更
VTEXT5      LIKE TVKTT-VTEXT,    "勘定設定グループテキスト
VTEXT5M(1)  TYPE C,              "勘定設定グループテキスト変更
TAXKD       LIKE KNVI-TAXKD,     "税分類
TAXKDM(1)   TYPE C,              "税分類変更
VTEXT4      LIKE TSKDT-VTEXT,    "税分類テキスト
VTEXT4M(1)  TYPE C,              "税分類テキスト変更
PERNR       LIKE KNVP-PERNR,     "営業員
PERNRM(1)   TYPE C,              "営業員変更
PERNRT(50)  TYPE C,              "営業員テキスト
PERNRTM(1)  TYPE C,              "営業員テキスト変更
KVGR1       LIKE KNVV-KVGR1,     "得意先グループ1
KVGR1M(1)   TYPE C,              "得意先グループ1変更
BEZEI3      LIKE TVV1T-BEZEI,    "得意先グループ1テキスト
BEZEI3M(1)  TYPE C,              "得意先グループ1テキスト変更
ERDAT       LIKE KNA1-ERDAT,     "登録日
ERNAM       LIKE KNA1-ERNAM,     "登録者
UDATE       LIKE CDHDR-UDATE,    "更新日
USERNAME    LIKE CDHDR-USERNAME, "更新者
END   OF TYP_OTDATA.
* プリンタ/トレイ型
TYPES: BEGIN OF TYP_PRINTA,
LNAME      TYPE TSP03L-LNAME,      " デバイス名(長)
PADEST     TYPE TSP03L-PADEST,     " デバイスの略称
END   OF TYP_PRINTA.
*---------------------------------------------------------------------*
*       構造定義                                                 　　 *
*---------------------------------------------------------------------*
DATA: GW_HDATA  TYPE TYP_HDATA,  "対象ヘッダデータ構造
GW_HDATA1 TYPE TYP_HDATA,  "対象ヘッダデータ構造1
GW_MDATA  TYPE TYP_MDATA,  "対象明細データ構造
GW_OTDATA TYPE TYP_OTDATA, "出力データ構造
GW_PRINTA TYPE TYP_PRINTA.
*---------------------------------------------------------------------*
*       テーブル定義                                                  *
*---------------------------------------------------------------------*
DATA: GT_HDATA  TYPE TABLE OF TYP_HDATA,   "対象ヘッダデータテーブル
GT_MDATA  TYPE TABLE OF TYP_MDATA,   "対象明細データテーブル
GT_OTDATA TYPE TABLE OF TYP_OTDATA,  "出力データテーブル
GT_PRINTA LIKE HASHED TABLE OF GW_PRINTA
WITH UNIQUE KEY LNAME.
*---------------------------------------------------------------------*
*       変数定義                                                      *
*---------------------------------------------------------------------*
DATA:W_BUKRS  LIKE KNB1-BUKRS. "会社コード
DATA:W_TATYP  LIKE KNVI-TATYP. "税カテゴリ
DATA:W_FLG    TYPE C.          "登録・変更パタン判断FLAG
*---------------------------------------------------------------------*
*       定数定義                                                      *
*---------------------------------------------------------------------*
CONSTANTS:
C_MARK(1)   TYPE C VALUE '*',  "マーク
C_CODE(1)   TYPE X VALUE '09'. "TAB
*----------------------------------------------------------------------*
*     入力画面定義
*----------------------------------------------------------------------*
SELECTION-SCREEN:BEGIN OF BLOCK BL1 WITH FRAME .
SELECT-OPTIONS: S_KUNNR FOR KNA1-KUNNR.
PARAMETERS P_YMD LIKE SY-DATUM OBLIGATORY.
PARAMETERS:P_OTFILE(128) TYPE C LOWER CASE OBLIGATORY.
PARAMETERS:P_LNAME TYPE TSP03L-LNAME OBLIGATORY.
SELECTION-SCREEN:END OF BLOCK BL1.
*----------------------------------------------------------------------*
INITIALIZATION.  							
*----------------------------------------------------------------------*
* 出力ファイル名
GET PARAMETER ID 'ZSVF' FIELD P_OTFILE.
Concatenate P_OTFILE
SY-REPID
SY-UNAME
SY-UZEIT
'.TXT'
INTO P_OTFILE .

*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
*----------------------------------------------------------------------*
PERFORM CHECK_PARAM.               "入力パラメータチェック
PERFORM OPEN_FILE.                 "ファイルオープン
PERFORM GET_LNAME.                 "プリンタ/トレイ取得
************************************************************************
START-OF-SELECTION.
************************************************************************
PERFORM INT_SEC.                   "初期処理
PERFORM SET_DATA.                  "出力データ取得
PERFORM END_SEC.                   "結果ファイル出力
************************************************************************
END-OF-SELECTION.
************************************************************************
*&---------------------------------------------------------------------*
*&      Form  CHECK_PARAM
*&---------------------------------------------------------------------*
*       入力パラメータチェック
*----------------------------------------------------------------------*
FORM CHECK_PARAM.
SELECT COUNT(*)
FROM CDHDR
WHERE OBJECTID IN S_KUNNR
AND UDATE    =  P_YMD.
IF SY-SUBRC <> 0.
"該当データは存在しません
MESSAGE E008.
STOP.
ENDIF.
ENDFORM.                                                  " CHECK_PARAM
*&---------------------------------------------------------------------*
*&      Form  OPEN_FILE
*&---------------------------------------------------------------------*
*       ファイルオープン
*----------------------------------------------------------------------*
FORM OPEN_FILE.
*出力ファイル
DELETE DATASET P_OTFILE.
OPEN DATASET P_OTFILE FOR OUTPUT IN TEXT MODE.
IF SY-SUBRC <> 0.
MESSAGE E612 WITH '出力ファイルオープンエラー' P_OTFILE.
STOP.
ENDIF.
ENDFORM.                                                    " OPEN_FILE
*&---------------------------------------------------------------------*
*&      Form  GET_LNAME
*&---------------------------------------------------------------------*
*       プリンタ/トレイ取得
*----------------------------------------------------------------------*
FORM GET_LNAME.

CLEAR:GT_PRINTA[],GW_PRINTA.
SELECT LNAME
PADEST
INTO TABLE GT_PRINTA
FROM TSP03L.
IF SY-SUBRC = 0.
READ TABLE GT_PRINTA WITH TABLE KEY LNAME = P_LNAME
INTO GW_PRINTA.
CASE SY-SUBRC.
WHEN 0.
WHEN 4.    " 対象データなし
MESSAGE E024 WITH '画面入力されたプリンタ/トレイ'.
ENDCASE.
ENDIF.

ENDFORM.                                                    " GET_LNAME
*&---------------------------------------------------------------------*
*&      Form  INT_SEC
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM INT_SEC.

CLEAR  :GW_HDATA,GW_MDATA,GW_HDATA1,GW_OTDATA,GW_PRINTA,
W_BUKRS,W_TATYP,W_FLG.
REFRESH:GT_HDATA,GT_MDATA,GT_OTDATA.

ENDFORM.                                                      " INT_SEC
*&---------------------------------------------------------------------*
*&      Form  SET_DATA
*&---------------------------------------------------------------------*
*       出力データ取得
*----------------------------------------------------------------------*
FORM SET_DATA.

* 対象ヘッダデータ取得
PERFORM GET_HDATA.
* 対象明細データ取得
PERFORM GET_MDATA.
* 出力データ編集
SORT GT_HDATA BY OBJECTID ASCENDING
UTIME DESCENDING.
CLEAR: GW_HDATA1,GW_HDATA,GW_PRINTA.
LOOP AT GT_HDATA INTO GW_HDATA.
IF GW_HDATA1-OBJECTID = GW_HDATA-OBJECTID.
CLEAR:GW_HDATA.
CONTINUE.
ENDIF.
GW_HDATA1 = GW_HDATA.
CLEAR:GW_OTDATA.
GW_OTDATA-LNAME = P_LNAME.
READ TABLE GT_PRINTA WITH TABLE KEY LNAME = P_LNAME
INTO GW_PRINTA.
GW_OTDATA-PADEST = GW_PRINTA-PADEST.
*   得意先コード設定
GW_OTDATA-KUNNR = GW_HDATA-OBJECTID.
*   一般データ取得
PERFORM GET_KNA1 USING GW_HDATA-OBJECTID.
*   会社コード取得
PERFORM GET_KNB1 USING GW_HDATA-OBJECTID.
*   その他取得
PERFORM GET_KNVH USING GW_HDATA-OBJECTID.
*   与信管理取得
PERFORM GET_KNKK USING GW_HDATA-OBJECTID W_BUKRS.
*   販売エリア取得
PERFORM GET_KNVV USING GW_HDATA-OBJECTID.
*   更新日、更新者取得
PERFORM GET_DATE USING GW_HDATA-OBJECTID.
*   変更場合、マック設定
PERFORM SET_FLG.
APPEND GW_OTDATA TO GT_OTDATA.
CLEAR:GW_HDATA.
ENDLOOP.

ENDFORM.                                                     " SET_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_HDATA
*&---------------------------------------------------------------------*
*       対象ヘッダデータ取得
*----------------------------------------------------------------------*
FORM GET_HDATA.

SELECT *
FROM CDHDR
INTO TABLE GT_HDATA
WHERE OBJECTCLAS IN ('DEBI','KLIM')
AND OBJECTID IN S_KUNNR
AND UDATE    = P_YMD
AND CHANGE_IND IN ('I','U').

ENDFORM.                                                    " GET_HDATA
*&---------------------------------------------------------------------*
*&      Form  GET_MDATA
*&---------------------------------------------------------------------*
*       対象明細データ取得
*----------------------------------------------------------------------*
FORM GET_MDATA.

SELECT *
FROM CDPOS
INTO TABLE GT_MDATA
FOR ALL ENTRIES IN GT_HDATA
WHERE OBJECTCLAS = GT_HDATA-OBJECTCLAS
AND OBJECTID   = GT_HDATA-OBJECTID
AND CHANGENR   = GT_HDATA-CHANGENR
AND CHNGIND    = 'U'.
SORT GT_MDATA BY OBJECTCLAS OBJECTID ASCENDING
CHANGENR DESCENDING.

ENDFORM.                                                    " GET_MDATA
*&---------------------------------------------------------------------*
*&      Form  GET_DATE
*&---------------------------------------------------------------------*
*       更新日、更新者取得
*----------------------------------------------------------------------*
FORM GET_DATE USING P_OBJECTID.

DATA:LW_HDATA  TYPE TYP_HDATA.
CLEAR:LW_HDATA.
READ TABLE GT_HDATA INTO LW_HDATA
WITH KEY OBJECTID   = P_OBJECTID.
IF SY-SUBRC = 0.
GW_OTDATA-UDATE    =  LW_HDATA-UDATE.       "更新日
GW_OTDATA-USERNAME =  LW_HDATA-USERNAME.    "更新者
ENDIF.

ENDFORM.                                                     " GET_DATE
*&---------------------------------------------------------------------*
*&      Form  SET_FLG
*&---------------------------------------------------------------------*
*       変更場合、マック設定
*----------------------------------------------------------------------*
FORM SET_FLG.

* 登録・更新パタン判断
READ TABLE GT_HDATA INTO GW_HDATA1
WITH KEY OBJECTID   = GW_HDATA-OBJECTID
CHANGE_IND = 'I'.
IF SY-SUBRC <> 0.
PERFORM SET_MARK.
ENDIF.

ENDFORM.                                                      " SET_FLG
*&---------------------------------------------------------------------*
*&      Form  SET_MARK
*&---------------------------------------------------------------------*
*       変更場合、マック設定
*----------------------------------------------------------------------*
FORM SET_MARK.

* 一般データ
PERFORM UPD_DATA USING 'KNA1' 'NAME1'
CHANGING GW_OTDATA-NAME1M.  "名称1変更
PERFORM UPD_DATA USING 'KNA1' 'NAME2'
CHANGING GW_OTDATA-NAME2M.  "名称2変更
PERFORM UPD_DATA USING 'KNA1' 'STRAS'
CHANGING GW_OTDATA-STREETM. "都道府県名変更
PERFORM UPD_DATA USING 'KNA1' 'PSTLZ'
CHANGING GW_OTDATA-PCODEM.  "郵便番号変更
PERFORM UPD_DATA USING 'KNA1' 'ORT01'
CHANGING GW_OTDATA-CITYM.   "市区町村変更
PERFORM UPD_DATA USING 'KNA1' 'LAND1'
CHANGING GW_OTDATA-CTRM.    "国コード変更
IF NOT GW_OTDATA-CTRM IS INITIAL.
GW_OTDATA-LANDXM = C_MARK.              "国テキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNA1' 'SPRAS'
CHANGING GW_OTDATA-LANGUM.  "言語変更
IF NOT GW_OTDATA-LANGUM IS INITIAL.
GW_OTDATA-SPTXTM = C_MARK.              "言語テキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNA1' 'TELF1'
CHANGING GW_OTDATA-TELM.    "電話番号変更
* 会社コード
PERFORM UPD_DATA USING 'KNB1' 'AKONT'
CHANGING GW_OTDATA-AKONTM.  "勘定コード変更
IF NOT GW_OTDATA-AKONTM IS INITIAL.
GW_OTDATA-TXT20M = C_MARK.              "勘定コードテキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNB1' 'ZTERM'
CHANGING GW_OTDATA-ZTERMM.  "支払条件変更
IF NOT GW_OTDATA-ZTERMM IS INITIAL.
GW_OTDATA-TEXT5M = C_MARK.              "支払条件テキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNB1' 'ZWELS'
CHANGING GW_OTDATA-ZWELSM.  "支払方法変更
IF NOT GW_OTDATA-ZWELSM IS INITIAL.
GW_OTDATA-TEXT6M = C_MARK.              "支払方法テキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNB1' 'KVERM'
CHANGING GW_OTDATA-KVERMM.  "コメント2
* 与信管理
PERFORM UPD_DATA USING 'KNKK' 'KLIMK'
CHANGING GW_OTDATA-KLIMKM.  "与信限度額変更
* 販売エリア
PERFORM UPD_DATA USING 'KNVV' 'VKBUR'
CHANGING GW_OTDATA-VKBURM.  "営業所変更
IF NOT GW_OTDATA-VKBURM IS INITIAL.
GW_OTDATA-BEZEIM = C_MARK.              "営業所テキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVV' 'VKGRP'
CHANGING GW_OTDATA-VKGRPM.  "営業グループ変更
IF NOT GW_OTDATA-VKGRPM IS INITIAL.
GW_OTDATA-BEZEI4M = C_MARK.             "営業グループテキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVV' 'KDGRP'
CHANGING GW_OTDATA-KDGRPM.  "得意先グループ変更
IF NOT GW_OTDATA-KDGRPM IS INITIAL.
GW_OTDATA-KTEXTM = C_MARK.              "得意先グループテキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVV' 'WAERS'
CHANGING GW_OTDATA-WAERSM.  "通貨コード変更
IF NOT GW_OTDATA-WAERSM IS INITIAL.
GW_OTDATA-LTEXTM = C_MARK.              "通貨コードテキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVV' 'KALKS'
CHANGING GW_OTDATA-KALKSM.  "得意先価格決定変更
IF NOT GW_OTDATA-KALKSM IS INITIAL.
GW_OTDATA-VTEXTM = C_MARK.              "得意先価格決定テキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVV' 'LPRIO'
CHANGING GW_OTDATA-LPRIOM.  "出荷優先順位変更
IF NOT GW_OTDATA-LPRIOM IS INITIAL.
GW_OTDATA-BEZEI2M = C_MARK.             "出荷優先順位テキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVV' 'VSBED'
CHANGING GW_OTDATA-VSBEDM.  "出荷条件変更
IF NOT GW_OTDATA-VSBEDM IS INITIAL.
GW_OTDATA-VTEXT2M = C_MARK.             "出荷条件テキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVV' 'VWERK'
CHANGING GW_OTDATA-VWERKM.  "出荷プラント変更
IF NOT GW_OTDATA-VWERKM IS INITIAL.
GW_OTDATA-NAMEM = C_MARK.               "出荷プラントテキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVV' 'KZAZU'
CHANGING GW_OTDATA-KZAZUM.  "受注結合出荷区分変更
PERFORM UPD_DATA USING 'KNVV' 'ZTERM'
CHANGING GW_OTDATA-ZTERM2M. "支払条件変更(販売エリア)
IF NOT GW_OTDATA-ZTERM2M IS INITIAL.
GW_OTDATA-TEXTA5M = C_MARK.             "支払条件テキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVV' 'KTGRD'
CHANGING GW_OTDATA-KTGRDM.  "勘定設定グループ変更
IF NOT GW_OTDATA-KTGRDM IS INITIAL.
GW_OTDATA-VTEXT5M = C_MARK.           "勘定設定グループテキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVI' 'TAXKD'
CHANGING GW_OTDATA-TAXKDM.  "税分類変更
IF NOT GW_OTDATA-TAXKDM IS INITIAL.
GW_OTDATA-VTEXT4M = C_MARK.             "税分類テキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVP' 'PERNR'
CHANGING GW_OTDATA-PERNRM.  "営業員変更
IF NOT GW_OTDATA-PERNRM IS INITIAL.
GW_OTDATA-PERNRTM = C_MARK.             "営業員テキスト変更
ENDIF.
PERFORM UPD_DATA USING 'KNVV' 'KVGR1'
CHANGING GW_OTDATA-KVGR1M.  "得意先グループ1変更
IF NOT GW_OTDATA-KVGR1M IS INITIAL.
GW_OTDATA-BEZEI3M = C_MARK.            "得意先グループ1テキスト変更
ENDIF.

ENDFORM.                                                     " SET_MARK
*&---------------------------------------------------------------------*
*&      Form  UPD_DATA
*&---------------------------------------------------------------------*
*       変更履歴
*----------------------------------------------------------------------*
*      -->P_TABNAME
*      -->P_FNAME
*      <--P_NAMEM
*----------------------------------------------------------------------*
FORM UPD_DATA  USING    P_TABNAME
P_FNAME
CHANGING   P_NAMEM.

READ TABLE GT_MDATA INTO GW_MDATA
WITH KEY OBJECTID   = GW_HDATA-OBJECTID
TABNAME    = P_TABNAME
FNAME      = P_FNAME.
IF SY-SUBRC = 0.
P_NAMEM = C_MARK.
ENDIF.

ENDFORM.                                                     " UPD_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_KNA1
*&---------------------------------------------------------------------*
*       一般データ取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  得意先コード
*----------------------------------------------------------------------*
FORM GET_KNA1 USING    P_KUNNR.

CLEAR: KNA1.
SELECT *
FROM KNA1
INTO CORRESPONDING FIELDS OF KNA1
WHERE KUNNR = P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-ERDAT   = KNA1-ERDAT.              "登録日
GW_OTDATA-ERNAM   = KNA1-ERNAM.              "登録者
CLEAR:ADRC.
SELECT *
FROM ADRC
INTO CORRESPONDING FIELDS OF ADRC
WHERE ADDRNUMBER = KNA1-ADRNR.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-NAME1 = ADRC-NAME1.              "名称1
GW_OTDATA-NAME2 = ADRC-NAME2.              "名称2
GW_OTDATA-SORTL = ADRC-SORT1.              "検索用語
GW_OTDATA-STREET = ADRC-STREET.            "都道府県名
GW_OTDATA-POST_CODE = ADRC-POST_CODE1.     "郵便番号
GW_OTDATA-CITY   = ADRC-CITY1.             "市区町村
GW_OTDATA-COUNTRY = ADRC-COUNTRY.          "国コード
IF NOT GW_OTDATA-COUNTRY IS INITIAL.
PERFORM GET_T005T USING GW_OTDATA-COUNTRY
ADRC-LANGU.      "国テキスト
ENDIF.
GW_OTDATA-LANGU = ADRC-LANGU.              "言語キー
IF NOT GW_OTDATA-LANGU IS INITIAL.
PERFORM GET_T002T USING GW_OTDATA-LANGU. "言語テキスト
ENDIF.
GW_OTDATA-TEL   = ADRC-TEL_NUMBER.         "電話番号
ENDIF.
ENDIF.
PERFORM GET_TEXT USING   'KNA1'
P_KUNNR
'0026'
CHANGING  GW_OTDATA-TEXT1.      "コメント
PERFORM GET_TEXT USING   'KNA1'
P_KUNNR
'0027'
CHANGING  GW_OTDATA-TEXT2.      "上場区分
PERFORM GET_TEXT USING   'KNA1'
P_KUNNR
'0028'
CHANGING  GW_OTDATA-TEXT3.      "評価ランク
PERFORM GET_TEXT USING   'KNA1'
P_KUNNR
'0029'
CHANGING  GW_OTDATA-TEXT4.      "備考

ENDFORM.                                                     " GET_KNA1
*&---------------------------------------------------------------------*
*&      Form  GET_T005T
*&---------------------------------------------------------------------*
*       国テキスト取得
*----------------------------------------------------------------------*
*      -->P_COUNTRY  国コード
*      -->P_LANGU    言語
*----------------------------------------------------------------------*
FORM GET_T005T USING    P_COUNTRY
P_LANGU.

CLEAR:T005T.
SELECT *
FROM T005T
INTO CORRESPONDING FIELDS OF T005T
WHERE LAND1 = P_COUNTRY
AND SPRAS = P_LANGU.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-LANDX = T005T-LANDX.       "国テキスト
ENDIF.

ENDFORM.                                                    " GET_T005T
*&---------------------------------------------------------------------*
*&      Form  GET_T002T
*&---------------------------------------------------------------------*
*       言語テキスト取得
*----------------------------------------------------------------------*
*      -->P_LANGU  言語キー
*----------------------------------------------------------------------*
FORM GET_T002T USING    P_LANGU.

CLEAR:T002T.
SELECT *
FROM T002T
INTO CORRESPONDING FIELDS OF T002T
WHERE SPRAS = P_LANGU
AND SPRSL = P_LANGU.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-SPTXT = T002T-SPTXT.       "言語キーテキスト
ENDIF.

ENDFORM.                                                    " GET_T002T
*&---------------------------------------------------------------------*
*&      Form  GET_KNB1
*&---------------------------------------------------------------------*
*       会社コード取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  得意先コード
*----------------------------------------------------------------------*
FORM GET_KNB1 USING    P_KUNNR.

DATA: L_NAME(14) TYPE C.
CLEAR: KNB1.
SELECT *
FROM KNB1
INTO CORRESPONDING FIELDS OF KNB1
WHERE KUNNR = P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 0.
CLEAR:W_BUKRS.
W_BUKRS = KNB1-BUKRS.                        "会社コード
GW_OTDATA-AKONT = KNB1-AKONT.                "統制勘定
IF NOT KNB1-AKONT IS INITIAL.
PERFORM GET_SKAT USING KNB1-AKONT W_BUKRS. "勘定コードテキスト
ENDIF.
GW_OTDATA-ZTERM = KNB1-ZTERM.                "支払条件
IF NOT KNB1-ZTERM IS INITIAL.
PERFORM GET_T052U USING KNB1-ZTERM.
IF SY-SUBRC = 0.
GW_OTDATA-TEXT5 = T052U-TEXT1.           "支払条件テキスト
ENDIF.
ENDIF.
GW_OTDATA-ZWELS = KNB1-ZWELS.                "支払方法
IF NOT GW_OTDATA-ZWELS IS INITIAL.
PERFORM GET_T042Z USING GW_OTDATA-ZWELS.   "支払方法テキスト
ENDIF.
GW_OTDATA-KVERM = KNB1-KVERM.                "コメント(会社コード)
CLEAR: L_NAME.

CONCATENATE KNB1-KUNNR KNB1-BUKRS INTO L_NAME.
PERFORM GET_TEXT USING   'KNB1'
L_NAME
'ZF04'
CHANGING  GW_OTDATA-TEXT7.    "入金条件メモ
PERFORM GET_TEXT USING   'KNB1'
L_NAME
'ZK01'
CHANGING  GW_OTDATA-TEXT8.    "高千穂請求書
PERFORM GET_TEXT USING   'KNB1'
L_NAME
'ZS01'
CHANGING  GW_OTDATA-TEXT9.    "納品書種別
ENDIF.

ENDFORM.                                                    " GET_KNB1
*&---------------------------------------------------------------------*
*&      Form  GET_SKAT
*&---------------------------------------------------------------------*
*       勘定コードテキスト取得
*----------------------------------------------------------------------*
*      -->P_AKONT  G/L 勘定コード
*      -->P_BUKRS  勘定コード表
*----------------------------------------------------------------------*
FORM GET_SKAT USING    P_AKONT
P_BUKRS.

CLEAR: SKAT.
SELECT *
FROM SKAT
INTO CORRESPONDING FIELDS OF SKAT
WHERE SAKNR = P_AKONT
AND KTOPL = P_BUKRS
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-TXT20 = SKAT-TXT20.       "勘定コードテキスト
ENDIF.

ENDFORM.                                                     " GET_SKAT
*&---------------------------------------------------------------------*
*&      Form  GET_T052U
*&---------------------------------------------------------------------*
*       支払条件テキスト取得
*----------------------------------------------------------------------*
*      -->P_ZTERM 支払条件
*----------------------------------------------------------------------*
FORM GET_T052U USING    P_ZTERM.

CLEAR: T052U.
SELECT *
FROM T052U
INTO CORRESPONDING FIELDS OF T052U
WHERE ZTERM = P_ZTERM
AND SPRAS = 'J'.
ENDSELECT.

ENDFORM.                                                    " GET_T052U
*&---------------------------------------------------------------------*
*&      Form  GET_T042Z
*&---------------------------------------------------------------------*
*       支払方法テキスト取得
*----------------------------------------------------------------------*
*      -->P_ZLSCH 支払方法
*----------------------------------------------------------------------*
FORM GET_T042Z USING    P_ZLSCH.

DATA: L_LEN TYPE I,
L_CNT TYPE I,
L_ZLSCH LIKE T042Z-ZLSCH.
CLEAR: L_LEN,L_CNT,L_ZLSCH,GW_OTDATA-TEXT6.
DESCRIBE FIELD P_ZLSCH LENGTH L_LEN.
DO L_LEN TIMES.
L_ZLSCH = P_ZLSCH+L_CNT(1).
IF L_ZLSCH <> ''.
CLEAR: T042Z.
SELECT *
FROM T042Z
INTO CORRESPONDING FIELDS OF T042Z
WHERE ZLSCH = L_ZLSCH
AND LAND1 = 'JP'.
ENDSELECT.
IF SY-SUBRC = 0.
"支払方法テキスト
CONCATENATE GW_OTDATA-TEXT6 T042Z-TEXT1 INTO GW_OTDATA-TEXT6.
L_CNT = L_CNT + 1.
ENDIF.
ELSE.
EXIT.
ENDIF.
ENDDO.

ENDFORM.                                                    " GET_T042Z
*&---------------------------------------------------------------------*
*&      Form  GET_KNVH
*&---------------------------------------------------------------------*
*       その他取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  得意先コード
*----------------------------------------------------------------------*
FORM GET_KNVH USING    P_KUNNR.

DATA:L_KSCHL LIKE B930-KSCHL,
L_KNUMH LIKE B930-KNUMH.
CLEAR: KNVH.
SELECT *
FROM KNVH
INTO CORRESPONDING FIELDS OF KNVH
WHERE KUNNR = P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-HKUNNR = KNVH-HKUNNR.       "得意先階層
ENDIF.

CLEAR: B930.
SELECT *
FROM B930
INTO CORRESPONDING FIELDS OF B930
WHERE KUNNR = P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 0.
CLEAR: L_KSCHL,L_KNUMH.
L_KSCHL = B930-KSCHL.
L_KNUMH = B930-KNUMH.
ELSE.
CLEAR: B931.
SELECT *
FROM B931
INTO CORRESPONDING FIELDS OF B931
WHERE KUNNR = P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 0.
CLEAR: L_KSCHL,L_KNUMH.
L_KSCHL = B931-KSCHL.
L_KNUMH = B931-KNUMH.
ENDIF.
ENDIF.
IF NOT L_KSCHL IS INITIAL.
PERFORM GET_T685T USING L_KSCHL. "納品書区分
ENDIF.
IF NOT L_KNUMH IS INITIAL.
PERFORM GET_NACH USING L_KNUMH.  "納品書プリンタ
ENDIF.

ENDFORM.                                                     " GET_KNVH
*&---------------------------------------------------------------------*
*&      Form  GET_T685T
*&---------------------------------------------------------------------*
*       納品書区分取得
*----------------------------------------------------------------------*
*      -->P_KSCHL  納品書区分
*----------------------------------------------------------------------*
FORM GET_T685T USING    P_KSCHL.

CLEAR: T685T.
SELECT *
FROM T685T
INTO CORRESPONDING FIELDS OF T685T
WHERE KSCHL = P_KSCHL.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-VTEXT3 = T685T-VTEXT.       "納品書区分
ENDIF.

ENDFORM.                                                    " GET_T685T
*&---------------------------------------------------------------------*
*&      Form  GET_NACH
*&---------------------------------------------------------------------*
*       納品書プリンタ取得
*----------------------------------------------------------------------*
*      -->P_KNUMH  出力条件レコード番号
*----------------------------------------------------------------------*
FORM GET_NACH USING    P_KNUMH.

CLEAR: NACH.
SELECT *
FROM NACH
INTO CORRESPONDING FIELDS OF NACH
WHERE KNUMH = P_KNUMH.
ENDSELECT.
IF SY-SUBRC = 0.
CALL FUNCTION 'CONVERSION_EXIT_SPDEV_OUTPUT'
EXPORTING
INPUT         = NACH-LDEST
IMPORTING
OUTPUT         = GW_OTDATA-LDEST. "納品書プリンタ
ENDIF.

ENDFORM.                                                     " GET_NACH
*&---------------------------------------------------------------------*
*&      Form  GET_KNKK
*&---------------------------------------------------------------------*
*       与信管理取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  "得意先コード
*      -->P_BUKRS  "会社コード
*----------------------------------------------------------------------*
FORM GET_KNKK USING    P_KUNNR
P_BUKRS.

DATA: L_NAME(14) TYPE C.
CLEAR: KNKK.
SELECT *
FROM KNKK
INTO CORRESPONDING FIELDS OF KNKK
WHERE KUNNR = P_KUNNR
AND KKBER = P_BUKRS.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-KLIMK = KNKK-KLIMK.              "与信限度額
CONCATENATE KNKK-KUNNR KNKK-KKBER INTO L_NAME.
PERFORM GET_TEXT USING   'KNKK'
L_NAME
'0001'
CHANGING  GW_OTDATA-TEXTA1. "上場区分
PERFORM GET_TEXT USING   'KNKK'
L_NAME
'0002'
CHANGING  GW_OTDATA-TEXTA2. "評点
PERFORM GET_TEXT USING   'KNKK'
L_NAME
'0003'
CHANGING  GW_OTDATA-TEXTA3. "企業コード
PERFORM GET_TEXT USING   'KNKK'
L_NAME
'0004'
CHANGING  GW_OTDATA-TEXTA4. "与信情報履歴
ENDIF.

ENDFORM.                                                     " GET_KNKK
*&---------------------------------------------------------------------*
*&      Form  GET_KNVV
*&---------------------------------------------------------------------*
*       販売エリア取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  "得意先コード
*----------------------------------------------------------------------*
FORM GET_KNVV USING    P_KUNNR.

CLEAR: KNVV.
SELECT *
FROM KNVV
INTO CORRESPONDING FIELDS OF KNVV
WHERE KUNNR = P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-VKBUR = KNVV-VKBUR.               "営業所
IF NOT GW_OTDATA-VKBUR IS INITIAL.
PERFORM GET_TVKBT USING GW_OTDATA-VKBUR.  "営業所テキスト
ENDIF.
GW_OTDATA-VKGRP = KNVV-VKGRP.               "営業グループ
IF NOT GW_OTDATA-VKGRP IS INITIAL.
PERFORM GET_TVGRT USING GW_OTDATA-VKGRP.  "営業グループテキスト
ENDIF.
GW_OTDATA-KDGRP = KNVV-KDGRP.               "得意先グループ
IF NOT GW_OTDATA-KDGRP IS INITIAL.
PERFORM GET_T151T USING GW_OTDATA-KDGRP.  "得意先グループテキスト
ENDIF.
GW_OTDATA-WAERS = KNVV-WAERS.               "通貨コード
IF NOT GW_OTDATA-WAERS IS INITIAL.
PERFORM GET_TCURT USING GW_OTDATA-WAERS.  "通貨コードテキスト
ENDIF.
GW_OTDATA-KALKS = KNVV-KALKS.               "得意先価格決定
IF NOT GW_OTDATA-KALKS IS INITIAL.
PERFORM GET_TVKDT USING GW_OTDATA-KALKS.  "得意先価格決定テキスト
ENDIF.
GW_OTDATA-VERSG = KNVV-VERSG.               "統計グループ
IF NOT GW_OTDATA-VERSG IS INITIAL.
PERFORM GET_TVSDT USING GW_OTDATA-VERSG.  "統計グループテキスト
ENDIF.
GW_OTDATA-LPRIO = KNVV-LPRIO.               "出荷優先順位
IF NOT GW_OTDATA-LPRIO IS INITIAL.
PERFORM GET_TPRIT USING GW_OTDATA-LPRIO.  "出荷優先順位テキスト
ENDIF.
GW_OTDATA-VSBED = KNVV-VSBED.               "出荷条件
IF NOT GW_OTDATA-VSBED IS INITIAL.
PERFORM GET_TVSBT USING GW_OTDATA-VSBED.  "出荷条件テキスト
ENDIF.
GW_OTDATA-VWERK = KNVV-VWERK.               "出荷プラント
IF NOT GW_OTDATA-VWERK IS INITIAL.
PERFORM GET_T001W USING GW_OTDATA-VWERK.  "出荷プラントテキスト
ENDIF.
GW_OTDATA-KZAZU = KNVV-KZAZU.               "受注結合出荷区分
GW_OTDATA-ZTERM2 = KNVV-ZTERM.              "支払条件
IF NOT GW_OTDATA-ZTERM2 IS INITIAL.
PERFORM GET_T052U USING GW_OTDATA-ZTERM2.
IF SY-SUBRC = 0.
GW_OTDATA-TEXTA5 = T052U-TEXT1.         "支払条件テキスト
ENDIF.
ENDIF.
GW_OTDATA-KTGRD = KNVV-KTGRD.               "勘定設定グループ
"勘定設定グループテキスト
IF NOT GW_OTDATA-KTGRD IS INITIAL.
PERFORM GET_TVKTT USING GW_OTDATA-KTGRD.
ENDIF.
PERFORM GET_KNVI USING P_KUNNR.             "税分類
"税分類テキスト
IF NOT GW_OTDATA-TAXKD IS INITIAL AND NOT W_TATYP IS INITIAL.
PERFORM GET_TSKDT USING GW_OTDATA-TAXKD W_TATYP.
ENDIF.
PERFORM GET_KNVP USING P_KUNNR.             "営業員
IF NOT GW_OTDATA-PERNR IS INITIAL.
PERFORM GET_PA0002 USING GW_OTDATA-PERNR. "営業員テキスト
ENDIF.
GW_OTDATA-KVGR1 = KNVV-KVGR1.               "得意先グループ1
IF NOT GW_OTDATA-KVGR1 IS INITIAL.
PERFORM GET_TVV1T USING GW_OTDATA-KVGR1.  "得意先グループ1テキスト
ENDIF.
ENDIF.

ENDFORM.                                                     " GET_KNVV
*&---------------------------------------------------------------------*
*&      Form  GET_TVKBT
*&---------------------------------------------------------------------*
*       営業所テキスト取得
*----------------------------------------------------------------------*
*      -->P_VKBUR  営業所
*----------------------------------------------------------------------*
FORM GET_TVKBT USING    P_VKBUR.

CLEAR: TVKBT.
SELECT *
FROM TVKBT
INTO CORRESPONDING FIELDS OF TVKBT
WHERE VKBUR = P_VKBUR
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-BEZEI = TVKBT-BEZEI.       "営業所テキス
ENDIF.

ENDFORM.                                                    " GET_TVKBT
*&---------------------------------------------------------------------*
*&      Form  GET_TVGRT
*&---------------------------------------------------------------------*
*       営業グループテキスト取得
*----------------------------------------------------------------------*
*      -->P_VKGRP  営業グループ
*----------------------------------------------------------------------*
FORM GET_TVGRT USING    P_VKGRP.

CLEAR: TVGRT.
SELECT *
FROM TVGRT
INTO CORRESPONDING FIELDS OF TVGRT
WHERE VKGRP = P_VKGRP
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-BEZEI4 = TVGRT-BEZEI.       "営業グループテキスト
ENDIF.

ENDFORM.                                                    " GET_TVGRT
*&---------------------------------------------------------------------*
*&      Form  GET_T151T
*&---------------------------------------------------------------------*
*       得意先グループテキスト取得
*----------------------------------------------------------------------*
*      -->P_KDGRP  得意先グループ
*----------------------------------------------------------------------*
FORM GET_T151T USING    P_KDGRP.

CLEAR: T151T.
SELECT *
FROM T151T
INTO CORRESPONDING FIELDS OF T151T
WHERE KDGRP = P_KDGRP
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-KTEXT = T151T-KTEXT.       "得意先グループテキスト
ENDIF.

ENDFORM.                                                    " GET_T151T
*&---------------------------------------------------------------------*
*&      Form  GET_TCURT
*&---------------------------------------------------------------------*
*       通貨コードテキスト取得
*----------------------------------------------------------------------*
*      -->P_WAERS  通貨コード
*----------------------------------------------------------------------*
FORM GET_TCURT USING    P_WAERS.

CLEAR: TCURT.
SELECT *
FROM TCURT
INTO CORRESPONDING FIELDS OF TCURT
WHERE WAERS = P_WAERS
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-LTEXT = TCURT-LTEXT.       "通貨コードテキスト
ENDIF.

ENDFORM.                                                    " GET_TCURT
*&---------------------------------------------------------------------*
*&      Form  GET_TVKDT
*&---------------------------------------------------------------------*
*       得意先価格決定テキスト取得
*----------------------------------------------------------------------*
*      -->P_KALKS  得意先価格決定
*----------------------------------------------------------------------*
FORM GET_TVKDT USING    P_KALKS.

CLEAR: TVKDT.
SELECT *
FROM TVKDT
INTO CORRESPONDING FIELDS OF TVKDT
WHERE KALKS = P_KALKS
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-VTEXT = TVKDT-VTEXT.       "得意先価格決定テキスト
ENDIF.

ENDFORM.                                                    " GET_TVKDT
*&---------------------------------------------------------------------*
*&      Form  GET_TVSDT
*&---------------------------------------------------------------------*
*       統計グループテキスト取得
*----------------------------------------------------------------------*
*      -->P_STGKU  統計グループ
*----------------------------------------------------------------------*
FORM GET_TVSDT USING    P_STGKU.

CLEAR: TVSDT.
SELECT *
FROM TVSDT
INTO CORRESPONDING FIELDS OF TVSDT
WHERE STGKU = P_STGKU
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-BEZEI20 = TVSDT-BEZEI20.       "統計グループテキスト
ENDIF.

ENDFORM.                                                    " GET_TVSDT
*&---------------------------------------------------------------------*
*&      Form  GET_TPRIT
*&---------------------------------------------------------------------*
*       出荷優先順位テキスト取得
*----------------------------------------------------------------------*
*      -->P_LPRIO  出荷優先順位
*----------------------------------------------------------------------*
FORM GET_TPRIT USING    P_LPRIO.

CLEAR: TPRIT.
SELECT *
FROM TPRIT
INTO CORRESPONDING FIELDS OF TPRIT
WHERE LPRIO = P_LPRIO
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-BEZEI2 = TPRIT-BEZEI.       "出荷優先順位テキスト
ENDIF.

ENDFORM.                                                    " GET_TPRIT
*&---------------------------------------------------------------------*
*&      Form  GET_TVSBT
*&---------------------------------------------------------------------*
*       出荷条件テキスト取得
*----------------------------------------------------------------------*
*      -->P_VSBED  出荷条件
*----------------------------------------------------------------------*
FORM GET_TVSBT USING    P_VSBED.

CLEAR: TVSBT.
SELECT *
FROM TVSBT
INTO CORRESPONDING FIELDS OF TVSBT
WHERE VSBED = P_VSBED
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-VTEXT2 = TVSBT-VTEXT.       "出荷条件テキスト
ENDIF.

ENDFORM.                                                    " GET_TVSBT
*&---------------------------------------------------------------------*
*&      Form  GET_T001W
*&---------------------------------------------------------------------*
*       出荷プラントテキスト取得
*----------------------------------------------------------------------*
*      -->P_WERKS  出荷プラント
*----------------------------------------------------------------------*
FORM GET_T001W USING    P_WERKS.

CLEAR: T001W.
SELECT *
FROM T001W
INTO CORRESPONDING FIELDS OF T001W
WHERE WERKS = P_WERKS.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-NAME = T001W-NAME1.       "出荷プラントテキスト
ENDIF.

ENDFORM.                                                    " GET_T001W
*&---------------------------------------------------------------------*
*&      Form  GET_TVKTT
*&---------------------------------------------------------------------*
*       勘定設定グループテキスト取得
*----------------------------------------------------------------------*
*      -->P_KTGRD  勘定設定グループ条件
*----------------------------------------------------------------------*
FORM GET_TVKTT USING    P_KTGRD.

CLEAR: TVKTT.
SELECT *
FROM TVKTT
INTO CORRESPONDING FIELDS OF TVKTT
WHERE KTGRD = P_KTGRD
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-VTEXT5 = TVKTT-VTEXT.       "勘定設定グループテキスト
ENDIF.

ENDFORM.                                                    " GET_TVKTT
*&---------------------------------------------------------------------*
*&      Form  GET_KNVI
*&---------------------------------------------------------------------*
*       税分類取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  得意先コード
*----------------------------------------------------------------------*
FORM GET_KNVI USING    P_KUNNR.

CLEAR: KNVI.
SELECT *
FROM KNVI
INTO CORRESPONDING FIELDS OF KNVI
WHERE KUNNR = P_KUNNR.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-TAXKD = KNVI-TAXKD.       "税分類
CLEAR:W_TATYP.
W_TATYP         = KNVI-TATYP.       "税カテゴリ
ENDIF.

ENDFORM.                                                     " GET_KNVI
*&---------------------------------------------------------------------*
*&      Form  GET_TSKDT
*&---------------------------------------------------------------------*
*       税分類テキスト取得
*----------------------------------------------------------------------*
*      -->P_TAXKD  税分類
*      -->P_TATYP  税カテゴリ
*----------------------------------------------------------------------*
FORM GET_TSKDT USING    P_TAXKD
P_TATYP.

CLEAR: TSKDT.
SELECT *
FROM TSKDT
INTO CORRESPONDING FIELDS OF TSKDT
WHERE TAXKD = P_TAXKD
AND TATYP = P_TATYP
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-VTEXT4 = TSKDT-VTEXT.       "税分類テキスト
ENDIF.

ENDFORM.                                                    " GET_TSKDT
*&---------------------------------------------------------------------*
*&      Form  GET_KNVP
*&---------------------------------------------------------------------*
*       営業員取得
*----------------------------------------------------------------------*
*      -->P_KUNNR  得意先コード
*----------------------------------------------------------------------*
FORM GET_KNVP USING    P_KUNNR.

CLEAR: KNVP.
SELECT *
FROM KNVP
INTO CORRESPONDING FIELDS OF KNVP
WHERE KUNNR = P_KUNNR
AND PARVW = 'VE'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-PERNR = KNVP-PERNR.       "営業員
ENDIF.

ENDFORM.                                                     " GET_KNVP
*&---------------------------------------------------------------------*
*&      Form  GET_TVV1T
*&---------------------------------------------------------------------*
*       得意先グループ1テキスト取得
*----------------------------------------------------------------------*
*      -->P_KVGR1  得意先グループ1
*----------------------------------------------------------------------*
FORM GET_TVV1T USING    P_KVGR1.

CLEAR: TVV1T.
SELECT *
FROM TVV1T
INTO CORRESPONDING FIELDS OF TVV1T
WHERE KVGR1 = P_KVGR1
AND SPRAS = 'J'.
ENDSELECT.
IF SY-SUBRC = 0.
GW_OTDATA-BEZEI3 = TVV1T-BEZEI.       "得意先グループ1テキスト
ENDIF.

ENDFORM.                                                    " GET_TVV1T
*&---------------------------------------------------------------------*
*&      Form  GET_PA0002
*&---------------------------------------------------------------------*
*       営業員テキスト取得
*----------------------------------------------------------------------*
*      -->P_PERNR  営業員
*----------------------------------------------------------------------*
FORM GET_PA0002 USING    P_PERNR.

DATA: L_NAME(50) TYPE C.
CLEAR: PA0002.
SELECT *
FROM PA0002
INTO CORRESPONDING FIELDS OF PA0002
WHERE PERNR = P_PERNR.
ENDSELECT.
IF SY-SUBRC = 0.
CONCATENATE PA0002-NCHMC PA0002-VNAMC INTO L_NAME.
GW_OTDATA-PERNRT = L_NAME.       "営業員テキスト
ENDIF.

ENDFORM.                                                   " GET_PA0002
*&---------------------------------------------------------------------*
*&      Form  READ_TEXT
*&---------------------------------------------------------------------*
*       テキスト読込
*----------------------------------------------------------------------*
*      -->P_ID    ID                                                   *
*      -->P_KEY   NO                                                   *
*      -->P_OBJ   OBJECT　                                             *
*      <--P_OUT   テキスト                                             *
*----------------------------------------------------------------------*
FORM GET_TEXT USING    P_OBJ
P_KEY
P_ID
CHANGING  P_OUT.

DATA : BEGIN OF RTLINE OCCURS 0.
INCLUDE STRUCTURE TLINE.
DATA : END   OF RTLINE .
DATA:L_NAME LIKE THEAD-TDNAME.

CLEAR:L_NAME,P_OUT.
L_NAME = P_KEY.

CALL FUNCTION 'READ_TEXT'
EXPORTING
ID                      = P_ID
LANGUAGE                = SY-LANGU
NAME                    = L_NAME
OBJECT                  = P_OBJ
TABLES
LINES                   = RTLINE
EXCEPTIONS
ID                      = 1
LANGUAGE                = 2
NAME                    = 3
NOT_FOUND               = 4
OBJECT                  = 5
REFERENCE_CHECK         = 6
WRONG_ACCESS_TO_ARCHIVE = 7
OTHERS                  = 8.

READ TABLE RTLINE INDEX 1.
IF ( SY-SUBRC = 0 ).
SEARCH RTLINE-TDLINE FOR C_CODE.
IF ( SY-SUBRC = 0 ).
REPLACE C_CODE WITH SPACE INTO RTLINE-TDLINE.
ENDIF.
P_OUT = RTLINE-TDLINE.
ENDIF.

ENDFORM.                                                    " READ_TEXT
*&---------------------------------------------------------------------*
*&      Form  END_SEC
*&---------------------------------------------------------------------*
*       結果ファイル出力
*----------------------------------------------------------------------*
FORM END_SEC.

DATA: WA_HEADER TYPE STRING,
WA_RECORD TYPE STRING.

OPEN DATASET P_OTFILE FOR OUTPUT IN TEXT MODE.
IF SY-SUBRC = 0.
*     ヘッダ行作成
CONCATENATE
TEXT-114
TEXT-115
TEXT-001
TEXT-002
TEXT-003
TEXT-004
TEXT-005
TEXT-006
TEXT-008
TEXT-009
TEXT-010
TEXT-011
TEXT-012
TEXT-013
TEXT-014
TEXT-015
TEXT-016
TEXT-017
TEXT-018
TEXT-019
TEXT-020
TEXT-021
TEXT-022
TEXT-023
TEXT-024
TEXT-025
TEXT-026
TEXT-027
TEXT-028
TEXT-029
TEXT-030
TEXT-031
TEXT-032
TEXT-033
TEXT-034
TEXT-035
TEXT-036
TEXT-037
TEXT-038
TEXT-039
TEXT-040
TEXT-041
TEXT-042
TEXT-043
TEXT-044
TEXT-045
TEXT-046
TEXT-047
TEXT-048
TEXT-049
TEXT-050
TEXT-051
TEXT-052
TEXT-053
TEXT-054
TEXT-055
TEXT-056
TEXT-057
TEXT-058
TEXT-059
TEXT-060
TEXT-061
TEXT-062
TEXT-063
TEXT-064
TEXT-065
TEXT-066
TEXT-067
TEXT-068
TEXT-069
TEXT-070
TEXT-071
TEXT-072
TEXT-073
TEXT-074
TEXT-075
TEXT-076
TEXT-077
TEXT-078
TEXT-079
TEXT-080
TEXT-081
TEXT-082
TEXT-083
TEXT-084
TEXT-085
TEXT-086
TEXT-087
TEXT-088
TEXT-089
TEXT-090
TEXT-091
TEXT-092
TEXT-093
TEXT-094
TEXT-095
TEXT-096
TEXT-097
TEXT-098
TEXT-099
TEXT-100
TEXT-101
TEXT-102
TEXT-103
TEXT-104
TEXT-105
TEXT-106
TEXT-107
TEXT-108
TEXT-109
TEXT-110
TEXT-111
TEXT-112
TEXT-113
INTO WA_HEADER
SEPARATED BY C_CODE.
TRANSFER WA_HEADER TO P_OTFILE.
IF SY-SUBRC <> 0.
MESSAGE S612 WITH '結果ファイルのダウンロードに失敗しました'.
STOP.
ENDIF.
*     データ行作成
LOOP AT GT_OTDATA INTO GW_OTDATA.
CONCATENATE
GW_OTDATA-LNAME
GW_OTDATA-PADEST
GW_OTDATA-KUNNR
GW_OTDATA-NAME1
GW_OTDATA-NAME1M
GW_OTDATA-NAME2
GW_OTDATA-NAME2M
GW_OTDATA-SORTL
GW_OTDATA-STREET
GW_OTDATA-STREETM
GW_OTDATA-POST_CODE
GW_OTDATA-PCODEM
GW_OTDATA-CITY
GW_OTDATA-CITYM
GW_OTDATA-COUNTRY
GW_OTDATA-CTRM
GW_OTDATA-LANDX
GW_OTDATA-LANDXM
GW_OTDATA-LANGU
GW_OTDATA-LANGUM
GW_OTDATA-SPTXT
GW_OTDATA-SPTXTM
GW_OTDATA-TEL
GW_OTDATA-TELM
GW_OTDATA-TEXT1
GW_OTDATA-TEXT2
GW_OTDATA-TEXT3
GW_OTDATA-TEXT4
GW_OTDATA-AKONT
GW_OTDATA-AKONTM
GW_OTDATA-TXT20
GW_OTDATA-TXT20M
GW_OTDATA-ZTERM
GW_OTDATA-ZTERMM
GW_OTDATA-TEXT5
GW_OTDATA-TEXT5M
GW_OTDATA-ZWELS
GW_OTDATA-ZWELSM
GW_OTDATA-TEXT6
GW_OTDATA-TEXT6M
GW_OTDATA-KVERM
GW_OTDATA-KVERMM
GW_OTDATA-TEXT7
GW_OTDATA-TEXT8
GW_OTDATA-TEXT9
GW_OTDATA-HKUNNR
GW_OTDATA-VTEXT3
GW_OTDATA-LDEST
GW_OTDATA-KLIMK
GW_OTDATA-KLIMKM
GW_OTDATA-TEXTA1
GW_OTDATA-TEXTA2
GW_OTDATA-TEXTA3
GW_OTDATA-TEXTA4
GW_OTDATA-VKBUR
GW_OTDATA-VKBURM
GW_OTDATA-BEZEI
GW_OTDATA-BEZEIM
GW_OTDATA-VKGRP
GW_OTDATA-VKGRPM
GW_OTDATA-BEZEI4
GW_OTDATA-BEZEI4M
GW_OTDATA-KDGRP
GW_OTDATA-KDGRPM
GW_OTDATA-KTEXT
GW_OTDATA-KTEXTM
GW_OTDATA-WAERS
GW_OTDATA-WAERSM
GW_OTDATA-LTEXT
GW_OTDATA-LTEXTM
GW_OTDATA-KALKS
GW_OTDATA-KALKSM
GW_OTDATA-VTEXT
GW_OTDATA-VTEXTM
GW_OTDATA-VERSG
GW_OTDATA-BEZEI20
GW_OTDATA-LPRIO
GW_OTDATA-LPRIOM
GW_OTDATA-BEZEI2
GW_OTDATA-BEZEI2M
GW_OTDATA-VSBED
GW_OTDATA-VSBEDM
GW_OTDATA-VTEXT2
GW_OTDATA-VTEXT2M
GW_OTDATA-VWERK
GW_OTDATA-VWERKM
GW_OTDATA-NAME
GW_OTDATA-NAMEM
GW_OTDATA-KZAZU
GW_OTDATA-KZAZUM
GW_OTDATA-ZTERM2
GW_OTDATA-ZTERM2M
GW_OTDATA-TEXTA5
GW_OTDATA-TEXTA5M
GW_OTDATA-KTGRD
GW_OTDATA-KTGRDM
GW_OTDATA-VTEXT5
GW_OTDATA-VTEXT5M
GW_OTDATA-TAXKD
GW_OTDATA-TAXKDM
GW_OTDATA-VTEXT4
GW_OTDATA-VTEXT4M
GW_OTDATA-PERNR
GW_OTDATA-PERNRM
GW_OTDATA-PERNRT
GW_OTDATA-PERNRTM
GW_OTDATA-KVGR1
GW_OTDATA-KVGR1M
GW_OTDATA-BEZEI3
GW_OTDATA-BEZEI3M
GW_OTDATA-ERDAT
GW_OTDATA-ERNAM
GW_OTDATA-UDATE
GW_OTDATA-USERNAME
INTO WA_RECORD
SEPARATED BY C_CODE.
TRANSFER WA_RECORD TO P_OTFILE  .
IF SY-SUBRC <> 0.
MESSAGE S612 WITH '結果ファイルのダウンロードに失敗しました'.
STOP.
ENDIF.
ENDLOOP.
ENDIF.
CLOSE DATASET P_OTFILE.
IF SY-SUBRC = 0.
MESSAGE S612 WITH '結果出力ファイルをダウンロードしました'.
ELSE.

ENDIF.

ENDFORM.                                                      " END_SEC
