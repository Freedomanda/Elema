REPORT zzkura83 .

TABLES yk230. "仕入データ
TABLES yk240. "仕入合計データ

DATA w_updcnt LIKE sy-dbcnt.
DATA w_inscnt LIKE sy-dbcnt.
DATA i_yk230_1 LIKE STANDARD TABLE OF yk230 WITH HEADER LINE.
DATA i_yk230_2 LIKE STANDARD TABLE OF yk230 WITH HEADER LINE.
DATA i_yk230_3 LIKE STANDARD TABLE OF yk230 WITH HEADER LINE.
DATA i_yk240 LIKE STANDARD TABLE OF yk240 WITH HEADER LINE.
DATA w_errflg(1) TYPE c.

SELECT-OPTIONS s_werks FOR yk230-werks.
PARAMETERS p_werks LIKE yk230-werks DEFAULT 'PS00'.
*ARAMETERS p_fixflg LIKE yk230-fixflg.
SELECT-OPTIONS s_kekkbn FOR yk230-kekkbn.
SELECT-OPTIONS s_lifnr FOR yk230-lifnr.
SELECT-OPTIONS s_zfbdt FOR yk230-zfbdt.
PARAMETERS p_test AS CHECKBOX DEFAULT 'X'.

*----------------------------------------------------------------------*
INITIALIZATION.
s_werks-sign = 'I'.
s_werks-option = 'CP'.
s_werks-low = 'PS*'.
APPEND s_werks.
s_kekkbn-sign = 'E'.
s_kekkbn-option = 'EQ'.
s_kekkbn-low = '4'.
APPEND s_kekkbn.
s_kekkbn-sign = 'E'.
s_kekkbn-option = 'EQ'.
s_kekkbn-low = '5'.
APPEND s_kekkbn.

START-OF-SELECTION.

* 仕入データ検索
SELECT        *
FROM   yk230
INTO   TABLE  i_yk230_1
WHERE  lifnr  IN s_lifnr
AND    werks  IN s_werks
AND    zfbdt  IN s_zfbdt.
WRITE: / '入力件数　', sy-dbcnt.
* 更新
SORT i_yk230_1 BY lifnr werks zfbdt.
LOOP AT i_yk230_1.
AT NEW zfbdt.
REFRESH i_yk230_2.
CLEAR w_errflg.
ENDAT.
*   IF i_yk230_1-fixflg  = p_fixflg  AND
*      i_yk230_1-kekkbn IN s_kekkbn.
IF i_yk230_1-kekkbn IN s_kekkbn.
MOVE i_yk230_1 TO i_yk230_2.
APPEND i_yk230_2.
ELSE.
w_errflg = 'X'.
ENDIF.
AT END OF zfbdt.
IF w_errflg <> 'X'.
LOOP AT i_yk230_2.
MOVE i_yk230_2 TO i_yk230_3.
i_yk230_3-werkst = i_yk230_2-werks.
i_yk230_3-werks  = p_werks.
APPEND i_yk230_3.
ENDLOOP.
ELSE.
WRITE: / 'エラー　　',
i_yk230_2-lifnr, i_yk230_2-werks, i_yk230_2-zfbdt.
ENDIF.
ENDAT.
ENDLOOP.
LOOP AT i_yk230_3.
WRITE: / i_yk230_3-belnr, i_yk230_3-buzei,
i_yk230_3-lifnr, i_yk230_3-zfbdt,
i_yk230_3-werks, i_yk230_3-werkst,
i_yk230_3-ebeln, i_yk230_3-ebelp,
i_yk230_3-knitxamt CURRENCY i_yk230_3-waers.
IF p_test <> 'X'.
UPDATE yk230 FROM i_yk230_3.
IF sy-subrc  = 0.
ADD 1 TO w_updcnt.
ELSE.
MESSAGE e400(y1) WITH 'YK230の更新に失敗しました'.
ENDIF.
ENDIF.
ENDLOOP.
CLEAR w_errflg.
PERFORM f_make_yk240.
IF p_test <> 'X'.
LOOP AT i_yk240.
INSERT yk240 FROM i_yk240.
IF sy-subrc = 0.
ADD 1 TO w_inscnt.
ELSE.
MESSAGE e400(y1) WITH 'YK240の登録に失敗しました'.
ENDIF.
ENDLOOP.
ENDIF.
WRITE: / '更新件数　', w_updcnt.
WRITE: / '登録件数　', w_inscnt.

*---------------------------------------------------------------------*
*       FORM f_make_yk240                                             *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM f_make_yk240.
* ローカル変数
DATA w_dbcnt LIKE sy-dbcnt.
DATA w_knitxamt LIKE yk240-knitxamt.
DATA w_kntaxamt LIKE yk240-kntaxamt.
DATA w_knetxamt LIKE yk240-knetxamt.
DATA w_yk240 LIKE STANDARD TABLE OF yk240 WITH HEADER LINE.
* データ作成
LOOP AT i_yk230_3.
MOVE-CORRESPONDING i_yk230_3 TO w_yk240.
APPEND w_yk240.
ENDLOOP.
SORT w_yk240 BY bukrs ykyear lifnr lifn2 werks ekorg ekgrp
gsber zfbdt.
LOOP AT w_yk240.
MOVE-CORRESPONDING w_yk240 TO i_yk240.
ADD w_yk240-knitxamt TO w_knitxamt.
ADD w_yk240-kntaxamt TO w_kntaxamt.
ADD w_yk240-knetxamt TO w_knetxamt.
AT END OF zfbdt.
i_yk240-knitxamt = w_knitxamt.
i_yk240-kntaxamt = w_kntaxamt.
i_yk240-knetxamt = w_knetxamt.
APPEND i_yk240.
CLEAR: w_knitxamt, w_kntaxamt, w_knetxamt.
ENDAT.
ENDLOOP.
* 重複チェック
LOOP AT i_yk240.
SELECT SINGLE *
FROM   yk240
WHERE  bukrs   = i_yk240-bukrs
AND    ykyear  = i_yk240-ykyear
AND    lifnr   = i_yk240-lifnr
AND    lifn2   = i_yk240-lifn2
AND    werks   = i_yk240-werks
AND    ekorg   = i_yk240-ekorg
AND    ekgrp   = i_yk240-ekgrp
AND    gsber   = i_yk240-gsber
AND    zfbdt   = i_yk240-zfbdt.
IF sy-dbcnt > 0.
w_errflg = 'X'.
WRITE: / '仕入合計重複',
i_yk240-bukrs,
i_yk240-ykyear,
i_yk240-lifnr,
i_yk240-lifn2,
i_yk240-werks,
i_yk240-ekorg,
i_yk240-ekgrp,
i_yk240-gsber,
i_yk240-zfbdt.
ENDIF.
ENDLOOP.
ENDFORM.
