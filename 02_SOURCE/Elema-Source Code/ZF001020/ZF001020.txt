*&-------------------------------------------------------------------
*& Report  ZF001020
*&-------------------------------------------------------------------
* [プログラム名]
*   ZF001020  管理用(IR・人事)レポート
* [処理概要]
*　　　予算テーブル(S901)からレポートを作成する
* [改定履歴]
*　YYYY/MM/DD    Programar    Description
*  2004/02/20    T.KIHARA     新規開発
*  2004/04/13    T.KIHARA     千円単位表示の際、小数点以下四捨五入
*  2004/07/07    T.KIHARA     月別合計行追加
*　2004/07/07    T.KIHARA     印刷書式の設定
*& 2012/08/17    ISID         ES-UP
*  2014/08/29    ISID18       コードページを"UTF-8"に修正
*  2015/02/03    ISID11       コードページ処理の再修正
*&-------------------------------------------------------------------
REPORT zf001020
LINE-SIZE 262
LINE-COUNT 70
NO STANDARD PAGE HEADING.

* 構造宣言
TYPES: BEGIN OF typ_zf001010,
vrsio       TYPE   s901-vrsio,                 "バージョン
spmon       TYPE   s901-spmon,                 "分析期間-月
vkbur       TYPE   tvbur-vkbur,                "営業所
vkgrp       TYPE   tvkgr-vkgrp,                "営業グループ
pkunag      TYPE   kna1-kunnr,                 "得意先コード
prodh       TYPE   t179-prodh,                 "品目階層
netwr       TYPE   s901-netwr,                 "売上
zzaraigaku  TYPE   s901-zzaraigaku,            "粗利金額
zzarairitu  TYPE   s901-zzarairitu,            "粗利率
vtext       TYPE   t179t-vtext,                "品目階層テキスト
name1       TYPE   kna1-name1,                 "受注先名
END OF typ_zf001010.
* Add ES-UP 2012/08/17 -->
*-----------------------------------------------------------------------
*  固定値
*-----------------------------------------------------------------------
****START UPD 2014/08/29 ISID18****
*CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
**** START DEL 2015/02/03 ISID11 ****
*CONSTANTS CNS_UTF TYPE STRING VALUE `UTF-8`.
**** END DEL 2015/02/03 ISID11 ****
****END UPD 2014/08/29 ISID18*****
* Add ES-UP 2012/08/17 <--
* DATA宣言（処理用、帳票出力用）
DATA: gt_exec  TYPE TABLE OF typ_zf001010 ,      "処理用
gf_exec  TYPE typ_zf001010.                "処理用構造

* 会社コードマスタ構造
TYPES: BEGIN OF typ_t001,
bukrs TYPE t001-bukrs,                         "営業所
butxt TYPE t001-butxt,                         "営業所名
waers TYPE t001-waers,                         "通貨コード
END OF typ_t001.
* DATA宣言（処理用、帳票出力用）
DATA: gt_t001 TYPE TABLE OF typ_t001,
gf_t001 TYPE typ_t001.


* 品目テキスト構造
TYPES: BEGIN OF typ_makt,
matnr TYPE makt-matnr,                         "品目コード
maktx TYPE makt-maktx,                         "品目テキスト
END OF typ_makt.
* DATA宣言（処理用、帳票出力用）
DATA: gt_makt TYPE TABLE OF typ_makt,
gf_makt TYPE typ_makt.

* 営業所構造
TYPES: BEGIN OF typ_tvbur,
vkbur TYPE tvbur-vkbur,                        "営業所
bezei TYPE tvkbt-bezei,                        "営業所名
END OF typ_tvbur.
* DATA宣言（処理用、帳票出力用）
DATA: gt_tvbur TYPE TABLE OF typ_tvbur,
gf_tvbur TYPE typ_tvbur.

* 営業グループ構造
TYPES: BEGIN OF typ_tvkgr,
vkgrp TYPE tvkgr-vkgrp,                        "営業Gr
END OF typ_tvkgr.
* DATA宣言（処理用、帳票出力用）
DATA: gt_tvkgr TYPE TABLE OF typ_tvkgr,
gf_tvkgr TYPE typ_tvkgr.

*品目階層
TYPES: BEGIN OF typ_t179,
prodh TYPE t179-prodh,                         "品目階層
END OF typ_t179.
* DATA宣言（処理用、帳票出力用）
DATA: gt_t179 TYPE TABLE OF typ_t179,
gf_t179 TYPE typ_t179.

* 予算
TYPES: BEGIN OF typ_s901,
vrsio       TYPE  s901-vrsio,                  "バージョン
spmon       TYPE  s901-spmon,                  "年月
vkbur       TYPE  s901-vkbur,                  "営業所
vkgrp       TYPE  s901-vkgrp,                  "営業Gr
pkunag      TYPE  s901-pkunag,                 "得意先コード
prodh       TYPE  s901-prodh,                  "品目階層
netwr       TYPE  s901-netwr,                  "売上
zzaraigaku  TYPE  s901-zzaraigaku,             "粗利
zzarairitu  TYPE  s901-zzarairitu,             "粗利率
vtext       TYPE  t179t-vtext,                 "品目階層テキスト
name1       TYPE  kna1-name1,                  "得意先名
END OF typ_s901.
* DATA宣言（処理用、帳票出力用）
DATA: gf_s901 TYPE typ_s901,
gt_s901 TYPE TABLE OF typ_s901.

*  構造宣言(合計)
TYPES: BEGIN OF typ_sum,
netwrkei      TYPE  s901-netwr,                "売上
zzaragakukei  TYPE  s901-zzaraigaku,           "粗利
zzararitukei  TYPE  s901-zzarairitu,           "粗利率
netwrmonkei   TYPE  s901-netwr,                "月別売上
zzaramonkei   TYPE  s901-zzaraigaku,           "月別粗利
zzritumonkei  TYPE  s901-zzarairitu,           "月別粗利率
allnetwr      TYPE  zsb002-netwr,              "総売上
allzzaraigaku  TYPE  zsb002-zzaraigaku,        "総粗利
allzzarairitu  TYPE  zsb002-zzarairitu,        "総粗利率
END OF typ_sum.
* DATA宣言（処理用、帳票出力用）
DATA: gf_sum TYPE typ_sum,
gt_sum TYPE TABLE OF typ_sum.

* 得意先マスタ構造
TYPES: BEGIN OF typ_kna1,
kunnr TYPE kna1-kunnr,                         "得意先コード
name1 TYPE kna1-name1,                         "得意先名
END OF typ_kna1.
* DATA宣言（処理用、帳票出力用）
DATA: gt_kna1 TYPE TABLE OF typ_kna1,
gf_kna1 TYPE typ_kna1.

* 日付範囲チェック用構造
TYPES: BEGIN OF typ_date,
mindate TYPE s901-spmon,                       "年月(最小値)
maxdate TYPE s901-spmon,                       "年月(最大値)
END OF typ_date.
* DATA宣言（処理用、帳票出力用）
DATA: gt_date TYPE TABLE OF typ_date,
gf_date TYPE typ_date.

* ダウンロード用構造
* セグメント別
TYPES : BEGIN OF typ_yosandl ,
*            yosan_line(1000) TYPE c,             "予算構造
yosan_line TYPE string,             "予算構造
END OF typ_yosandl .
* DATA宣言（処理用、帳票出力用）
DATA : gt_yosandl TYPE TABLE OF typ_yosandl ,
gf_yosandl TYPE typ_yosandl .
* Mod ES-UP 2012/08/17 -->
*DATA :yosan_line(1000) TYPE c ,
*      w_tab TYPE x VALUE '09'.
DATA yosan_line(1000) TYPE c.
* Mod ES-UP 2012/08/17 <--
* 選択画面 *----------------------------------------------------*
* 表示設定
SELECTION-SCREEN BEGIN OF BLOCK bkyosan
*フレームのタイトル設定(『出力リスト選択』)
WITH FRAME TITLE text-074.
*チェックボックス設定(IR、人事用の選択)
PARAMETERS: r_ir RADIOBUTTON GROUP y1.           "実績＋見直予算
PARAMETERS: r_hr RADIOBUTTON GROUP y1.           "期初予算＋見直予算
SELECTION-SCREEN END   OF BLOCK bkyosan.

* 分析期間
SELECTION-SCREEN BEGIN OF BLOCK bqua
* フレームのタイトル設定(『分析期間』)
WITH FRAME TITLE text-075.
* 選択項目 年月(必須)
PARAMETERS s_spmon(4) TYPE n DEFAULT sy-datum(4) OBLIGATORY.
* チェックボックス設定(1Q、2Q、3Q、4Q表示)
PARAMETERS: r_1q    RADIOBUTTON GROUP q1.        "1Q
PARAMETERS: r_2q    RADIOBUTTON GROUP q1.        "2Q
PARAMETERS: r_3q    RADIOBUTTON GROUP q1.        "3Q
PARAMETERS: r_4q    RADIOBUTTON GROUP q1.        "4Q
SELECTION-SCREEN END   OF BLOCK bqua.

* 特性
SELECTION-SCREEN BEGIN OF BLOCK btok
*フレームのタイトル設定(『特性』)
WITH FRAME TITLE text-071.
* 選択項目 営業所(任意)
PARAMETERS:s_vkbur LIKE gf_tvbur-vkbur MEMORY ID bur.
* 選択項目 営業グループ(任意)
PARAMETERS:s_vkgrp LIKE gf_tvkgr-vkgrp.
* 選択項目 受注先(任意) 複数選択
SELECT-OPTIONS:s_pkunag FOR gf_kna1-kunnr.
* 選択項目 品目階層(任意) 複数選択
SELECT-OPTIONS:s_prodh FOR gf_t179-prodh VISIBLE LENGTH 4.
SELECTION-SCREEN END   OF BLOCK btok.

* 表示設定
SELECTION-SCREEN BEGIN OF BLOCK bkop
*フレームのタイトル設定(『金額表示』)
WITH FRAME TITLE text-070.
*チェックボックス設定(千円、円表示)
PARAMETERS: r_senen RADIOBUTTON GROUP r1.        "千円
PARAMETERS: r_en    RADIOBUTTON GROUP r1.        "円
SELECTION-SCREEN END   OF BLOCK bkop.

SELECTION-SCREEN BEGIN OF BLOCK down WITH FRAME TITLE text-004.
PARAMETERS:
*ラジオボタン(『ダウンロードしない』)
r_not       RADIOBUTTON GROUP r2,
*ラジオボタン(『データをダウンロードする』)
r_down      RADIOBUTTON GROUP r2,
*出力ファイル名
p_file      LIKE rlgrap-filename.
SELECTION-SCREEN END   OF BLOCK down.

*---------------------------------------------------------------------
AT SELECTION-SCREEN ON BLOCK down.
*---------------------------------------------------------------------
*--- 入力ファイルのチェック
IF r_down = 'X'.
IF p_file IS INITIAL.
* ファイルパスを指定してください
MESSAGE e855(z1).
ENDIF.
ENDIF.

*---------------------------------------------------------------------
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file.
*---------------------------------------------------------------------
*--- ファイル名呼び出し(保存する場所選択画面表示)
PERFORM frm_chk_file.

*--------------------------------------------------------------*
* INITIALIZATION
*--------------------------------------------------------------*
INITIALIZATION.

*---------------------------------------------------------------------
* at selection-screen
*---------------------------------------------------------------------
AT SELECTION-SCREEN.
*入力チェック(営業所､営業Gr､品目階層、得意先)
IF sy-ucomm+0(1) <> '%'.
* 営業所チェック
IF s_vkbur = space.
ELSE.
PERFORM frm_check_vkbur.
ENDIF.
* 営業Grチェック
IF s_vkgrp = space.
ELSE.
PERFORM frm_check_vkgrp.
ENDIF.
* 品目階層チェック
PERFORM frm_check_prodh.
* 得意先チェック
PERFORM frm_check_pkunag.
ENDIF.

*---------------------------------------------------------------------
* TOP-OF-PAGE
*---------------------------------------------------------------------
TOP-OF-PAGE.
*ヘッダ設定
PERFORM frm_top_of_page.

*&---------------------------------------------------------------------*
*&      Form  FRM_TOP_OF_PAGE
*&---------------------------------------------------------------------*
*       改ページ処理
*----------------------------------------------------------------------*
FORM frm_top_of_page.

ENDFORM.                    " FRM_TOP_OF_PAGE

*---------------------------------------------------------------------
* START-OF-SELECTION
*---------------------------------------------------------------------
START-OF-SELECTION.

* S901からデータ取得
PERFORM get_data.

* レポート出力&ダウンロード
PERFORM frm_write_detail.
IF r_down = 'X'.
PERFORM frm_data_dl.
ENDIF.

*&---------------------------------------------------------------------*
*&      CHECK_VKBUR
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_VKBUR
*&---------------------------------------------------------------------*
*       営業所存在チェック
*----------------------------------------------------------------------*
FORM frm_check_vkbur.
DATA:lt_dummy TYPE TABLE OF typ_tvbur.

SELECT vkbur
FROM tvbur
INTO CORRESPONDING FIELDS OF TABLE lt_dummy
WHERE vkbur = s_vkbur.

CASE sy-subrc.
WHEN 0.
WHEN 4.
MESSAGE e606(z1) WITH text-007.
ENDCASE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      CHECK_vkgrp
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_vkgrp
*&---------------------------------------------------------------------*
*      営業グループ存在チェック
*----------------------------------------------------------------------*
FORM frm_check_vkgrp.
DATA:lt_dummy TYPE  TABLE OF typ_tvkgr.

SELECT vkgrp
FROM tvkgr
INTO CORRESPONDING FIELDS OF TABLE lt_dummy
WHERE vkgrp = s_vkgrp.

CASE sy-subrc.
WHEN 0.
WHEN 4.
MESSAGE e606(z1) WITH text-092.
ENDCASE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      CHECK_PRODH
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_PRODH
*&---------------------------------------------------------------------*
*      品目階層存在チェック
*----------------------------------------------------------------------*
FORM frm_check_prodh.
DATA:lt_dummy TYPE  TABLE OF typ_t179.

SELECT prodh
FROM t179
INTO CORRESPONDING FIELDS OF TABLE lt_dummy
WHERE prodh IN s_prodh.

CASE sy-subrc.
WHEN 0.
WHEN 4.
MESSAGE e606(z1) WITH text-096.
ENDCASE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      CHECK_PKUNAG
*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_pkunag
*&---------------------------------------------------------------------*
*      受注先存在チェック
*----------------------------------------------------------------------*
FORM frm_check_pkunag.
DATA:lt_dummy TYPE  TABLE OF typ_kna1.

SELECT kunnr
FROM kna1
INTO CORRESPONDING FIELDS OF TABLE lt_dummy
WHERE kunnr IN s_pkunag.

CASE sy-subrc.
WHEN 0.
WHEN 4.
MESSAGE e606(z1) WITH text-093.
ENDCASE.

ENDFORM.

*&---------------------------------------------------------------------*
*&      SELECT NUMBER
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_MON
*&---------------------------------------------------------------------*
*       日付を取得する
*----------------------------------------------------------------------*
FORM frm_select_mon.

SELECT spmon
FROM s901
INTO CORRESPONDING FIELDS OF gf_s901
WHERE spmon = s_spmon.

ENDSELECT.

ENDFORM.

*&---------------------------------------------------------------------*
*&      SELECT NUMBER
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_TVBUR
*&---------------------------------------------------------------------*
*       営業所コードを取得する
*----------------------------------------------------------------------*
FORM frm_select_tvbur.

SELECT vkbur
FROM tvbur
INTO CORRESPONDING FIELDS OF gf_tvbur
WHERE vkbur = s_vkbur.

ENDSELECT.
ENDFORM.

*&---------------------------------------------------------------------*
*&      SELECT NUMBER
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_TVKGR
*&---------------------------------------------------------------------*
*       営業グループを取得する
*----------------------------------------------------------------------*
FORM frm_select_tvkgr.

SELECT vkgrp
FROM tvkgr
INTO CORRESPONDING FIELDS OF gf_tvkgr
WHERE vkgrp = s_vkgrp.

ENDSELECT.

ENDFORM.

*&---------------------------------------------------------------------*
*&      SELECT NUMBER
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_prodh
*&---------------------------------------------------------------------*
*       品目階層を取得する
*----------------------------------------------------------------------*
FORM frm_select_t179.

SELECT prodh
FROM t179
INTO CORRESPONDING FIELDS OF gf_t179
WHERE prodh IN s_prodh.

ENDSELECT.

ENDFORM.

*&---------------------------------------------------------------------*
*&      SELECT NUMBER
*&---------------------------------------------------------------------*
*&      Form  FRM_SELECT_T179T
*&---------------------------------------------------------------------*
*       品目階層テキストを取得する
*----------------------------------------------------------------------*
*      -->P_PRODH  品目階層
*      <--P_VTEXT  品目階層テキスト
*----------------------------------------------------------------------*
FORM frm_select_t179t USING    p_prodh
CHANGING p_vtext.

SELECT SINGLE
vtext
FROM t179t
INTO (p_vtext)
WHERE prodh = p_prodh
AND spras = 'J'.

ENDFORM.                    " FRM_SELECT_T179T

*&---------------------------------------------------------------------*
*&      Form  get_data
*&---------------------------------------------------------------------*
*       S901テーブルから実データを取得し、
*       T179Tテーブルから品目階層テキストを取得する
*----------------------------------------------------------------------*
FORM get_data.
DATA: year1(1) TYPE n,
year2(1) TYPE n,
nxtyear(4) TYPE n,
befyear(4) TYPE n,
mindate TYPE s901-spmon,
maxdate TYPE s901-spmon.

*----------------------------------------------------------
***  対象データの抽出条件(年月)を設定
*----------------------------------------------------------
* 入力された年の４月〜入力された(年+1)の３月まで
* 例)2003と入力したら2003/04〜2004/03までが対象
*----------------------------------------------------------
year1 = s_spmon+3(1).
year2 = year1 + 1.
CONCATENATE s_spmon(3) year2 INTO nxtyear.
CONCATENATE s_spmon(4) '04' INTO mindate.
CONCATENATE nxtyear '03' INTO maxdate.

* 全社の場合
IF ( s_vkbur = space ) AND ( s_vkgrp = space ).
SELECT vrsio
spmon
vkbur
vkgrp
pkunag
prodh
netwr
zzaraigaku
FROM  s901
INTO CORRESPONDING FIELDS OF gf_s901
WHERE  ( spmon >= mindate )    "年月 => 上記で定義したmindate
AND    ( spmon <= maxdate )    "年月 <= 上記で定義したmaxdate
AND    pkunag IN s_pkunag      "受注先
AND    pkunag NE space
AND    prodh  IN s_prodh       "品目階層
AND    prodh  NE space
.

*品目階層テキスト取得
PERFORM frm_select_t179t USING gf_s901-prodh
CHANGING gf_s901-vtext.

APPEND gf_s901 TO gt_exec.

ENDSELECT.
* 営業所のみ入力されている場合
ELSEIF ( s_vkgrp = space ).
SELECT vrsio
spmon
vkbur
vkgrp
pkunag
prodh
netwr
zzaraigaku
FROM  s901
INTO CORRESPONDING FIELDS OF gf_s901
WHERE  ( spmon >= mindate )    "年月 => 上記で定義したmindate
AND    ( spmon <= maxdate )    "年月 <= 上記で定義したmaxdate
AND    vkbur  =  s_vkbur       "営業所
AND    pkunag IN s_pkunag      "受注先
AND    pkunag NE space
AND    prodh  IN s_prodh       "品目階層
AND    prodh  NE space
.

*品目階層テキスト取得
PERFORM frm_select_t179t USING gf_s901-prodh
CHANGING gf_s901-vtext.

APPEND gf_s901 TO gt_exec.

ENDSELECT.
* 営業Grのみ入力されている場合
ELSEIF ( s_vkbur = space ).
SELECT vrsio
spmon
vkbur
vkgrp
pkunag
prodh
netwr
zzaraigaku
FROM  s901
INTO CORRESPONDING FIELDS OF gf_s901
WHERE  ( spmon >= mindate )    "年月 => 上記で定義したmindate
AND    ( spmon <= maxdate )    "年月 <= 上記で定義したmaxdate
AND    vkgrp  =  s_vkgrp       "営業グループ
AND    pkunag IN s_pkunag      "受注先
AND    pkunag NE space
AND    prodh  IN s_prodh       "品目階層
AND    prodh  NE space
.

*品目階層テキスト取得
PERFORM frm_select_t179t USING gf_s901-prodh
CHANGING gf_s901-vtext.

APPEND gf_s901 TO gt_exec.

ENDSELECT.
* 営業所・営業Grの両方が入力されている場合
ELSE.
SELECT vrsio
spmon
vkbur
vkgrp
pkunag
prodh
netwr
zzaraigaku
FROM  s901
INTO CORRESPONDING FIELDS OF gf_s901
WHERE  ( spmon >= mindate )    "年月 => 上記で定義したmindate
AND    ( spmon <= maxdate )    "年月 <= 上記で定義したmaxdate
AND    vkbur  =  s_vkbur       "営業所
AND    vkgrp  =  s_vkgrp       "営業グループ
AND    pkunag IN s_pkunag      "受注先
AND    pkunag NE space
AND    prodh  IN s_prodh       "品目階層
AND    prodh  NE space
.

*品目階層テキスト取得
PERFORM frm_select_t179t USING gf_s901-prodh
CHANGING gf_s901-vtext.

APPEND gf_s901 TO gt_exec.

ENDSELECT.
ENDIF.
ENDFORM.                    " get_data

*&---------------------------------------------------------------------*
*&      Form  FRM_WRITE_DETAIL
*&---------------------------------------------------------------------*
*       明細部分帳票出力処理
*----------------------------------------------------------------------*
FORM frm_write_detail.
* 年月→月
DATA tuki(2) TYPE c.
* 品目階層が変わったかどうかをチェックするために使用
DATA flghin(2) TYPE c.
* 品目階層のグループが変わったかどうかをチェックするために使用
DATA flghgr(1) TYPE c.
* セグメント表示用
DATA: segtext(40) TYPE c.  "品目階層テキスト
* 予算を取得するため
DATA: ver(3) TYPE c.
* 月別売上金額(小数点以下2桁)
DATA: jannetwr(16) TYPE p,                                "1月売上
febnetwr(16) TYPE p,                                "2月売上
marnetwr(16) TYPE p,                                "3月売上
aprnetwr(16) TYPE p,                                "4月売上
maynetwr(16) TYPE p,                                "5月売上
junnetwr(16) TYPE p,                                "6月売上
julnetwr(16) TYPE p,                                "7月売上
augnetwr(16) TYPE p,                                "8月売上
sepnetwr(16) TYPE p,                                "9月売上
octnetwr(16) TYPE p,                                "10月売上
novnetwr(16) TYPE p,                                "11月売上
decnetwr(16) TYPE p,                                "12月売上
* 売上計
jannetwrkei(16) TYPE p,                             "1月売上計
febnetwrkei(16) TYPE p,                             "2月売上計
marnetwrkei(16) TYPE p,                             "3月売上計
aprnetwrkei(16) TYPE p,                             "4月売上計
maynetwrkei(16) TYPE p,                             "5月売上計
junnetwrkei(16) TYPE p,                             "6月売上計
julnetwrkei(16) TYPE p,                             "7月売上計
augnetwrkei(16) TYPE p,                             "8月売上計
sepnetwrkei(16) TYPE p,                             "9月売上計
octnetwrkei(16) TYPE p,                             "10月売上計
novnetwrkei(16) TYPE p,                             "11月売上計
decnetwrkei(16) TYPE p,                             "12月売上計
* 売上総計
alljannetwrkei(16) TYPE p,                          "1月売上総計
allfebnetwrkei(16) TYPE p,                          "2月売上総計
allmarnetwrkei(16) TYPE p,                          "3月売上総計
allaprnetwrkei(16) TYPE p,                          "4月売上総計
allmaynetwrkei(16) TYPE p,                          "5月売上総計
alljunnetwrkei(16) TYPE p,                          "6月売上総計
alljulnetwrkei(16) TYPE p,                          "7月売上総計
allaugnetwrkei(16) TYPE p,                          "8月売上総計
allsepnetwrkei(16) TYPE p,                          "9月売上総計
alloctnetwrkei(16) TYPE p,                         "10月売上総計
allnovnetwrkei(16) TYPE p,                         "11月売上総計
alldecnetwrkei(16) TYPE p.                         "12月売上総計

*  月別粗利金額
DATA: janarari(16) TYPE p,                                "1月粗利
febarari(16) TYPE p,                                "2月粗利
mararari(16) TYPE p,                                "3月粗利
aprarari(16) TYPE p,                                "4月粗利
mayarari(16) TYPE p,                                "5月粗利
junarari(16) TYPE p,                                "6月粗利
jularari(16) TYPE p,                                "7月粗利
augarari(16) TYPE p,                                "8月粗利
separari(16) TYPE p,                                "9月粗利
octarari(16) TYPE p,                                "10月粗利
novarari(16) TYPE p,                                "11月粗利
decarari(16) TYPE p,                                "12月粗利
* 粗利計
janararikei(16) TYPE p,                             "1月粗利計
febararikei(16) TYPE p,                             "2月粗利計
marararikei(16) TYPE p,                             "3月粗利計
aprararikei(16) TYPE p,                             "4月粗利計
mayararikei(16) TYPE p,                             "5月粗利計
junararikei(16) TYPE p,                             "6月粗利計
julararikei(16) TYPE p,                             "7月粗利計
augararikei(16) TYPE p,                             "8月粗利計
separarikei(16) TYPE p,                             "9月粗利計
octararikei(16) TYPE p,                             "10月粗利計
novararikei(16) TYPE p,                             "11月粗利計
decararikei(16) TYPE p,                             "12月粗利計
* 粗利総計
alljanararikei(16) TYPE p,                          "1月粗利総計
allfebararikei(16) TYPE p,                          "2月粗利総計
allmarararikei(16) TYPE p,                          "3月粗利総計
allaprararikei(16) TYPE p,                          "4月粗利総計
allmayararikei(16) TYPE p,                          "5月粗利総計
alljunararikei(16) TYPE p,                          "6月粗利総計
alljulararikei(16) TYPE p,                          "7月粗利総計
allaugararikei(16) TYPE p,                          "8月粗利総計
allsepararikei(16) TYPE p,                          "9月粗利総計
alloctararikei(16) TYPE p,                         "10月粗利総計
allnovararikei(16) TYPE p,                         "11月粗利総計
alldecararikei(16) TYPE p.                         "12月粗利総計

*  月別粗利率
DATA: janritu(16) TYPE p DECIMALS 2,                      "1月粗利率
febritu(16) TYPE p DECIMALS 2,                      "2月粗利率
marritu(16) TYPE p DECIMALS 2,                      "3月粗利率
aprritu(16) TYPE p DECIMALS 2,                      "4月粗利率
mayritu(16) TYPE p DECIMALS 2,                      "5月粗利率
junritu(16) TYPE p DECIMALS 2,                      "6月粗利率
julritu(16) TYPE p DECIMALS 2,                      "7月粗利率
augritu(16) TYPE p DECIMALS 2,                      "8月粗利率
sepritu(16) TYPE p DECIMALS 2,                      "9月粗利率
octritu(16) TYPE p DECIMALS 2,                      "10月粗利率
novritu(16) TYPE p DECIMALS 2,                      "11月粗利率
decritu(16) TYPE p DECIMALS 2,                      "12月粗利率
* 小計粗利計
janritukei(16) TYPE p DECIMALS 2,        "1月計粗利率
febritukei(16) TYPE p DECIMALS 2,        "2月計粗利率
marritukei(16) TYPE p DECIMALS 2,        "3月計粗利率
aprritukei(16) TYPE p DECIMALS 2,        "4月計粗利率
mayritukei(16) TYPE p DECIMALS 2,        "5月計粗利率
junritukei(16) TYPE p DECIMALS 2,        "6月計粗利率
julritukei(16) TYPE p DECIMALS 2,        "7月計粗利率
augritukei(16) TYPE p DECIMALS 2,        "8月計粗利率
sepritukei(16) TYPE p DECIMALS 2,        "9月計粗利率
octritukei(16) TYPE p DECIMALS 2,        "10月計粗利率
novritukei(16) TYPE p DECIMALS 2,        "11月計粗利率
decritukei(16) TYPE p DECIMALS 2,        "12月計粗利率
* 総計粗利率
alljanritukei(16) TYPE p DECIMALS 2,              "1月総計粗利率
allfebritukei(16) TYPE p DECIMALS 2,              "2月総計粗利率
allmarritukei(16) TYPE p DECIMALS 2,              "3月総計粗利率
allaprritukei(16) TYPE p DECIMALS 2,              "4月総計粗利率
allmayritukei(16) TYPE p DECIMALS 2,              "5月総計粗利率
alljunritukei(16) TYPE p DECIMALS 2,              "6月総計粗利率
alljulritukei(16) TYPE p DECIMALS 2,              "7月総計粗利率
allaugritukei(16) TYPE p DECIMALS 2,              "8月総計粗利率
allsepritukei(16) TYPE p DECIMALS 2,              "9月総計粗利率
alloctritukei(16) TYPE p DECIMALS 2,             "10月総計粗利率
allnovritukei(16) TYPE p DECIMALS 2,             "11月総計粗利率
alldecritukei(16) TYPE p DECIMALS 2,             "12月総計粗利率

* 合計用
sum_netwr(16)       TYPE p,                       "売上計
sum_segnetwr(16)    TYPE p,                       "売上小計
sum_allnetwr(16)    TYPE p,                       "売上総計
sum_arari(16)       TYPE p,                       "粗利計
sum_segarari(16)    TYPE p,                       "粗利小計
sum_allarari(16)    TYPE p,                       "粗利総計
sum_ritu(16)        TYPE p DECIMALS 2,            "粗利率
sum_segritu(16)     TYPE p DECIMALS 2,            "小計粗利率
sum_allritu(16)     TYPE p DECIMALS 2.            "総計粗利率

* ダウンロード用項目定義(全て文字型で定義)
* 月別売上金額
DATA: c_jannetwr(16) TYPE c,                              "1月売上
c_febnetwr(16) TYPE c,                              "2月売上
c_marnetwr(16) TYPE c,                              "3月売上
c_aprnetwr(16) TYPE c,                              "4月売上
c_maynetwr(16) TYPE c,                              "5月売上
c_junnetwr(16) TYPE c,                              "6月売上
c_julnetwr(16) TYPE c,                              "7月売上
c_augnetwr(16) TYPE c,                              "8月売上
c_sepnetwr(16) TYPE c,                              "9月売上
c_octnetwr(16) TYPE c,                              "10月売上
c_novnetwr(16) TYPE c,                              "11月売上
c_decnetwr(16) TYPE c,                              "12月売上
* 売上小計
c_jannetwrkei(16) TYPE c,                           "1月売上計
c_febnetwrkei(16) TYPE c,                           "2月売上計
c_marnetwrkei(16) TYPE c,                           "3月売上計
c_aprnetwrkei(16) TYPE c,                           "4月売上計
c_maynetwrkei(16) TYPE c,                           "5月売上計
c_junnetwrkei(16) TYPE c,                           "6月売上計
c_julnetwrkei(16) TYPE c,                           "7月売上計
c_augnetwrkei(16) TYPE c,                           "8月売上計
c_sepnetwrkei(16) TYPE c,                           "9月売上計
c_octnetwrkei(16) TYPE c,                           "10月売上計
c_novnetwrkei(16) TYPE c,                           "11月売上計
c_decnetwrkei(16) TYPE c,                           "12月売上計
* 売上総計
c_alljannetwrkei(16) TYPE c,                        "1月売上総計
c_allfebnetwrkei(16) TYPE c,                        "2月売上総計
c_allmarnetwrkei(16) TYPE c,                        "3月売上総計
c_allaprnetwrkei(16) TYPE c,                        "4月売上総計
c_allmaynetwrkei(16) TYPE c,                        "5月売上総計
c_alljunnetwrkei(16) TYPE c,                        "6月売上総計
c_alljulnetwrkei(16) TYPE c,                        "7月売上総計
c_allaugnetwrkei(16) TYPE c,                        "8月売上総計
c_allsepnetwrkei(16) TYPE c,                        "9月売上総計
c_alloctnetwrkei(16) TYPE c,                       "10月売上総計
c_allnovnetwrkei(16) TYPE c,                       "11月売上総計
c_alldecnetwrkei(16) TYPE c.                       "12月売上総計

*  月別粗利金額
DATA: c_janarari(16) TYPE c,                              "1月粗利
c_febarari(16) TYPE c,                              "2月粗利
c_mararari(16) TYPE c,                              "3月粗利
c_aprarari(16) TYPE c,                              "4月粗利
c_mayarari(16) TYPE c,                              "5月粗利
c_junarari(16) TYPE c,                              "6月粗利
c_jularari(16) TYPE c,                              "7月粗利
c_augarari(16) TYPE c,                              "8月粗利
c_separari(16) TYPE c,                              "9月粗利
c_octarari(16) TYPE c,                              "10月粗利
c_novarari(16) TYPE c,                              "11月粗利
c_decarari(16) TYPE c,                              "12月粗利
* 粗利小計
c_janararikei(16) TYPE c,                           "1月計粗利
c_febararikei(16) TYPE c,                           "2月計粗利
c_marararikei(16) TYPE c,                           "3月計粗利
c_aprararikei(16) TYPE c,                           "4月計粗利
c_mayararikei(16) TYPE c,                           "5月計粗利
c_junararikei(16) TYPE c,                           "6月計粗利
c_julararikei(16) TYPE c,                           "7月計粗利
c_augararikei(16) TYPE c,                           "8月計粗利
c_separarikei(16) TYPE c,                           "9月計粗利
c_octararikei(16) TYPE c,                           "10月計粗利
c_novararikei(16) TYPE c,                           "11月計粗利
c_decararikei(16) TYPE c,                           "12月計粗利
* 粗利総計
c_alljanararikei(16) TYPE c,                        "1月総計粗利
c_allfebararikei(16) TYPE c,                        "2月総計粗利
c_allmarararikei(16) TYPE c,                        "3月総計粗利
c_allaprararikei(16) TYPE c,                        "4月総計粗利
c_allmayararikei(16) TYPE c,                        "5月総計粗利
c_alljunararikei(16) TYPE c,                        "6月総計粗利
c_alljulararikei(16) TYPE c,                        "7月総計粗利
c_allaugararikei(16) TYPE c,                        "8月総計粗利
c_allsepararikei(16) TYPE c,                        "9月総計粗利
c_alloctararikei(16) TYPE c,                       "10月総計粗利
c_allnovararikei(16) TYPE c,                       "11月総計粗利
c_alldecararikei(16) TYPE c.                       "12月総計粗利

*  月別粗利率
DATA: c_janritu(16) TYPE c,                               "1月粗利率
c_febritu(16) TYPE c,                               "2月粗利率
c_marritu(16) TYPE c,                               "3月粗利率
c_aprritu(16) TYPE c,                               "4月粗利率
c_mayritu(16) TYPE c,                               "5月粗利率
c_junritu(16) TYPE c,                               "6月粗利率
c_julritu(16) TYPE c,                               "7月粗利率
c_augritu(16) TYPE c,                               "8月粗利率
c_sepritu(16) TYPE c,                               "9月粗利率
c_octritu(16) TYPE c,                               "10月粗利率
c_novritu(16) TYPE c,                               "11月粗利率
c_decritu(16) TYPE c,                               "12月粗利率
* 小計粗利率
c_janritukei(16) TYPE c,                            "1月計粗利率
c_febritukei(16) TYPE c,                            "2月計粗利率
c_marritukei(16) TYPE c,                            "3月計粗利率
c_aprritukei(16) TYPE c,                            "4月計粗利率
c_mayritukei(16) TYPE c,                            "5月計粗利率
c_junritukei(16) TYPE c,                            "6月計粗利率
c_julritukei(16) TYPE c,                            "7月計粗利率
c_augritukei(16) TYPE c,                            "8月計粗利率
c_sepritukei(16) TYPE c,                            "9月計粗利率
c_octritukei(16) TYPE c,                           "10月計粗利率
c_novritukei(16) TYPE c,                           "11月計粗利率
c_decritukei(16) TYPE c,                           "12月計粗利率
* 総計粗利率
c_alljanritukei(16) TYPE c,                       "1月総計粗利率
c_allfebritukei(16) TYPE c,                       "2月総計粗利率
c_allmarritukei(16) TYPE c,                       "3月総計粗利率
c_allaprritukei(16) TYPE c,                       "4月総計粗利率
c_allmayritukei(16) TYPE c,                       "5月総計粗利率
c_alljunritukei(16) TYPE c,                       "6月総計粗利率
c_alljulritukei(16) TYPE c,                       "7月総計粗利率
c_allaugritukei(16) TYPE c,                       "8月総計粗利率
c_allsepritukei(16) TYPE c,                       "9月総計粗利率
c_alloctritukei(16) TYPE c,                      "10月総計粗利率
c_allnovritukei(16) TYPE c,                      "11月総計粗利率
c_alldecritukei(16) TYPE c.                      "12月総計粗利率

*  合計用
DATA: c_netwrkei(16)        TYPE c,                    "売上計
c_zzaragakukei(16)    TYPE c,                    "粗利計
c_zzararitukei(16)    TYPE c,                    "計粗利率
c_netwrmonkei(16)     TYPE c,                    "月別売上計
c_zzaramonkei(16)     TYPE c,                    "月別粗利計
c_zzritumonkei(16)    TYPE c,                    "月別計粗利率
c_allnetwrmonkei(16)  TYPE c,                    "月別売上総計
c_allzzaramonkei(16)  TYPE c,                    "月別粗利総計
c_allzzritumonkei(16) TYPE c.                    "月別総計粗利率

*-------------------------------------------------------------------
***  印刷書式設定　2004/07/07 追加
*-------------------------------------------------------------------
CALL FUNCTION 'SET_PRINT_PARAMETERS'
EXPORTING
layout = 'ZX_70_265'.

*-------------------------------------------------------------------

* 帳票タイトル『**予算レポート**』
IF r_ir = 'X'.
WRITE :/115(31) text-100.
ELSE.
WRITE :/115(31) text-101.
ENDIF.
WRITE : 197 '処理日付' ,
213  sy-datum ,                        "システム日付
229 '処理時刻' ,
245  sy-uzeit .                        "システム時刻
WRITE: /01(08) text-076,                       "'会計年度'
12(20) s_spmon,                        "会計年度
/01(06) text-010,                       "'営業所'
12(04) s_vkbur,                        "営業所
/01(06) text-011,                       "'営業Gr'
12(03) s_vkgrp,                        "営業Gr
/01(06) text-013,                       "'得意先'
12(10) s_pkunag-low.                   "得意先‐自
IF s_pkunag-high NE space.                     "得意先を範囲指定の場合
WRITE  23(02)   '〜'.
ENDIF.
WRITE: 26(02)  s_pkunag-high,                  "得意先‐至
* Mod ES-UP 2012/08/31 -->
*        /01(10) text-016,                        "'品目階層'
/01(10) text-009,                        "セグメント
* Mod ES-UP 2012/08/31 <--
12(2) s_prodh-low.                      "品目階層‐自
IF s_prodh-high NE space.                    "品目階層を範囲指定の場合
WRITE  15(02)   '〜'.
ENDIF.
WRITE: 18(02)  s_prodh-high.                   "品目階層‐至

IF r_en = 'X'.
WRITE: 245(10) text-068,                     "単位：円
/01(262) sy-uline.                    "下線
ELSE.
WRITE: 245(10) text-031,                     "単位：千円
/01(262) sy-uline.                    "下線
ENDIF.

WRITE: /1(06) text-015,                        "小区分
7(40) text-016,                        "セグメント名
47(06) text-017,                       "金額
53(16) text-018 RIGHT-JUSTIFIED,       "４月
69(16) text-019 RIGHT-JUSTIFIED,       "５月
85(16) text-020 RIGHT-JUSTIFIED,       "６月
101(16) text-021 RIGHT-JUSTIFIED,      "７月
117(16) text-022 RIGHT-JUSTIFIED,      "８月
133(16) text-023 RIGHT-JUSTIFIED,      "９月
149(16) text-024 RIGHT-JUSTIFIED,      "１０月
165(16) text-025 RIGHT-JUSTIFIED,      "１１月
181(16) text-026 RIGHT-JUSTIFIED,      "１２月
197(16) text-027 RIGHT-JUSTIFIED,      "１月
213(16) text-028 RIGHT-JUSTIFIED,      "２月
229(16) text-029 RIGHT-JUSTIFIED,      "３月
245(16) text-030 RIGHT-JUSTIFIED,      "合計
/01(262) sy-uline.                     "下線

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
IF r_down = 'X'.

*　1行目(タイトル行)
IF r_ir = 'X'.
CONCATENATE
space                                    "空白
space                                    "空白
space                                    "空白
space                                    "空白
space                                    "空白
space                                    "空白
text-100                             "'**IR用データ一覧表**'
space                                    "空白
space                                    "空白
space                                    "空白
space                                    "空白
'処理日付'
sy-datum                                 "システム日付
'処理時刻'
sy-uzeit                                 "システム時刻
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*      SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--
ELSE.
CONCATENATE
space                                    "空白
space                                    "空白
space                                    "空白
space                                    "空白
space                                    "空白
space                                    "空白
text-101                             "'**人事用データ一覧表**'
space                                    "空白
space                                    "空白
space                                    "空白
space                                    "空白
'処理日付'
sy-datum                                 "システム日付
'処理時刻'
sy-uzeit                                 "システム時刻
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*      SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--
ENDIF.
*　2行目(空行)
CONCATENATE
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*    SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

*　3行目(単位行)
*  単位が'円'の場合
IF r_en = 'X'.
CONCATENATE
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
text-068                               "'単位：円'
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*      SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

*  単位が'千円'の場合
ELSE.
CONCATENATE
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
space                                  "空白
text-031                               "'単位：千円'
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*      SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

ENDIF.
ENDIF.

CONCATENATE
text-015                                   "'小区分'
text-016                                   "'セグメント名'
text-017                                   "'金額'
text-018                                              "'4月'
text-019                                              "'5月'
text-020                                              "'6月'
text-021                                              "'7月'
text-022                                              "'8月'
text-023                                              "'9月'
text-024                                              "'10月'
text-025                                              "'11月'
text-026                                              "'12月'
text-027                                              "'1月'
text-028                                              "'2月'
text-029                                              "'3月'
text-030                                   "'合計'
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*  SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

*　品目階層、年月、営業所、受注先、バージョンの順で昇順
SORT gt_exec BY prodh spmon vkbur pkunag ASCENDING
vrsio DESCENDING.

*  初期値
LOOP AT gt_exec INTO gf_exec.
flghin = gf_exec-prodh.                    "品目階層
flghgr = gf_exec-prodh(1).                 "品目階層の1桁目
ver = gf_exec-vrsio.
EXIT.
ENDLOOP.

LOOP AT gt_exec INTO gf_exec.
***********************************************************
***  品目階層が新しい値に変わった時
***********************************************************
IF flghin NE gf_exec-prodh.
*----------------------------------------------------------
***  月別粗利率計算 ( 粗利率 = 粗利 / 売上 )
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利 / 売上
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
* 1月
IF janarari = 0.
janritu = '0.0'.
ELSEIF jannetwr = 0.
janritu = '-100.0'.
ELSEIF ( jannetwr = janarari ).
janritu = '100.0'.
ELSE.
janritu = ( janarari / jannetwr ) * 100.
ENDIF.
* 2月
IF febarari = 0.
febritu = '0.0'.
ELSEIF febnetwr = 0.
febritu = '-100.0'.
ELSEIF ( febnetwr = febarari ).
febritu = '100.0'.
ELSE.
febritu = ( febarari / febnetwr ) * 100.
ENDIF.
* 3月
IF mararari = 0.
marritu = '0.0'.
ELSEIF marnetwr = 0.
marritu = '-100.0'.
ELSEIF ( marnetwr = mararari ).
marritu = '100.0'.
ELSE.
marritu = ( mararari / marnetwr ) * 100.
ENDIF.
* 4月
IF aprarari = 0.
aprritu = '0.0'.
ELSEIF aprnetwr = 0.
aprritu = '-100.0'.
ELSEIF ( aprnetwr = aprarari ).
aprritu = '100.0'.
ELSE.
aprritu = ( aprarari / aprnetwr ) * 100.
ENDIF.
* 5月
IF mayarari = 0.
mayritu = '0.0'.
ELSEIF maynetwr = 0.
mayritu = '-100.0'.
ELSEIF ( maynetwr = mayarari ).
mayritu = '100.0'.
ELSE.
mayritu = ( mayarari / maynetwr ) * 100.
ENDIF.
* 6月
IF junarari = 0.
junritu = '0.0'.
ELSEIF junnetwr = 0.
junritu = '-100.0'.
ELSEIF ( junnetwr = junarari ).
junritu = '100.0'.
ELSE.
junritu = ( junarari / junnetwr ) * 100.
ENDIF.
* 7月
IF jularari = 0.
julritu = '0.0'.
ELSEIF julnetwr = 0.
julritu = '-100.0'.
ELSEIF ( julnetwr = jularari ).
julritu = '100.0'.
ELSE.
julritu = ( jularari / julnetwr ) * 100.
ENDIF.
* 8月
IF augarari = 0.
augritu = '0.0'.
ELSEIF augnetwr = 0.
augritu = '-100.0'.
ELSEIF ( augnetwr = augarari ).
augritu = '100.0'.
ELSE.
augritu = ( augarari / augnetwr ) * 100.
ENDIF.
* 9月
IF separari = 0.
sepritu = '0.0'.
ELSEIF sepnetwr = 0.
sepritu = '-100.0'.
ELSEIF ( sepnetwr = separari ).
sepritu = '100.0'.
ELSE.
sepritu = ( separari / sepnetwr ) * 100.
ENDIF.
* 10月
IF octarari = 0.
octritu = '0.0'.
ELSEIF octnetwr = 0.
octritu = '-100.0'.
ELSEIF ( octnetwr = octarari ).
octritu = '100.0'.
ELSE.
octritu = ( octarari / octnetwr ) * 100.
ENDIF.
* 11月
IF novarari = 0.
novritu = '0.0'.
ELSEIF novnetwr = 0.
novritu = '-100.0'.
ELSEIF ( novnetwr = novarari ).
novritu = '100.0'.
ELSE.
novritu = ( novarari / novnetwr ) * 100.
ENDIF.
* 12月
IF decarari = 0.
decritu = '0.0'.
ELSEIF decnetwr = 0.
decritu = '-100.0'.
ELSEIF ( decnetwr = decarari ).
decritu = '100.0'.
ELSE.
decritu = ( decarari / decnetwr ) * 100.
ENDIF.

*----------------------------------------------------------
***  金額表示が'千円'の場合
*　　セグメント別の売上計・実績計を単位変換された金額で計算する
*----------------------------------------------------------
IF r_senen = 'X'.
sum_netwr = aprnetwr +
maynetwr +
junnetwr +
julnetwr +
augnetwr +
sepnetwr +
octnetwr +
novnetwr +
decnetwr +
jannetwr +
febnetwr +
marnetwr.

sum_arari = aprarari +
mayarari +
junarari +
jularari +
augarari +
separari +
octarari +
novarari +
decarari +
janarari +
febarari +
mararari.

ENDIF.

*----------------------------------------------------------
***  総粗利率計算 ( 粗利率 = 粗利 / 売上 )
*    粗利計が０の場合、総粗利率 0％
*    売上計が０の場合、総粗利率 -100%
*    売上計と粗利計が同じ金額・同じ符号の場合、総粗利率 100％
*　　その他の場合、総粗利率 = 粗利計 / 売上計
*    (但し、粗利計がマイナスの時は総粗利率もマイナス)
*----------------------------------------------------------
IF sum_arari = 0.
sum_ritu = '0.0'.
ELSEIF sum_netwr = 0.
sum_ritu = '-100.0'.
ELSEIF ( sum_arari = sum_netwr ).
sum_ritu = '100.0'.
ELSE.
sum_ritu = ( sum_arari / sum_netwr ) * 100.
ENDIF.

*----------------------------------------------------------
*** 金額表示が'千円'の場合、単位変換(円→千円)
*** 売上・粗利を1000で割る
*----------------------------------------------------------
IF r_senen = 'X'.
aprnetwr = aprnetwr / 1000.
maynetwr = maynetwr / 1000.
junnetwr = junnetwr / 1000.
julnetwr = julnetwr / 1000.
augnetwr = augnetwr / 1000.
sepnetwr = sepnetwr / 1000.
octnetwr = octnetwr / 1000.
novnetwr = novnetwr / 1000.
decnetwr = decnetwr / 1000.
jannetwr = jannetwr / 1000.
febnetwr = febnetwr / 1000.
marnetwr = marnetwr / 1000.
aprarari = aprarari / 1000.
mayarari = mayarari / 1000.
junarari = junarari / 1000.
jularari = jularari / 1000.
augarari = augarari / 1000.
separari = separari / 1000.
octarari = octarari / 1000.
novarari = novarari / 1000.
decarari = decarari / 1000.
janarari = janarari / 1000.
febarari = febarari / 1000.
mararari = mararari / 1000.
sum_netwr = sum_netwr / 1000.
sum_arari = sum_arari / 1000.
ENDIF.

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*   数値型を文字型に変換
*   値の受渡をイコールで行うとカンマが無視される
*   カンマを残すにはWRITE〜TO〜を使用する
*----------------------------------------------------------
WRITE: aprnetwr TO c_aprnetwr,
maynetwr TO c_maynetwr,
junnetwr TO c_junnetwr,
julnetwr TO c_julnetwr,
augnetwr TO c_augnetwr,
sepnetwr TO c_sepnetwr,
octnetwr TO c_octnetwr,
novnetwr TO c_novnetwr,
decnetwr TO c_decnetwr,
jannetwr TO c_jannetwr,
febnetwr TO c_febnetwr,
marnetwr TO c_marnetwr,
aprarari TO c_aprarari,
mayarari TO c_mayarari,
junarari TO c_junarari,
jularari TO c_jularari,
augarari TO c_augarari,
separari TO c_separari,
octarari TO c_octarari,
novarari TO c_novarari,
decarari TO c_decarari,
janarari TO c_janarari,
febarari TO c_febarari,
mararari TO c_mararari,
aprritu TO c_aprritu,
mayritu TO c_mayritu,
junritu TO c_junritu,
julritu TO c_julritu,
augritu TO c_augritu,
sepritu TO c_sepritu,
octritu TO c_octritu,
novritu TO c_novritu,
decritu TO c_decritu,
janritu TO c_janritu,
febritu TO c_febritu,
marritu TO c_marritu,
sum_netwr TO c_netwrkei,
sum_arari TO c_zzaragakukei,
sum_ritu TO c_zzararitukei.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_maynetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_julnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_augnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_sepnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_jannetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_marnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_mayarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_jularari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_augarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_separari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_janarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_mararari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_mayritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_julritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_augritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_sepritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_janritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_marritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_netwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_zzaragakukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_zzararitukei.

*----------------------------------------------------------
***  品目階層別出力
*----------------------------------------------------------
WRITE: /1(06) flghin CENTERED,                       "小区分
7(40) segtext,                               "品目階層名
47(06) text-062,                             "'売上'
53(16) c_aprnetwr RIGHT-JUSTIFIED,            "4月売上
69(16) c_maynetwr RIGHT-JUSTIFIED,            "5月売上
85(16) c_junnetwr RIGHT-JUSTIFIED,            "6月売上
101(16) c_julnetwr RIGHT-JUSTIFIED,           "7月売上
117(16) c_augnetwr RIGHT-JUSTIFIED,           "8月売上
133(16) c_sepnetwr RIGHT-JUSTIFIED,           "9月売上
149(16) c_octnetwr RIGHT-JUSTIFIED,           "10月売上
165(16) c_novnetwr RIGHT-JUSTIFIED,           "11月売上
181(16) c_decnetwr RIGHT-JUSTIFIED,           "12月売上
197(16) c_jannetwr RIGHT-JUSTIFIED,           "1月売上
213(16) c_febnetwr RIGHT-JUSTIFIED,           "2月売上
229(16) c_marnetwr RIGHT-JUSTIFIED,           "3月売上
245(16) c_netwrkei RIGHT-JUSTIFIED,          "売上計
/47(06) text-063,                             "'粗利'
53(16) c_aprarari RIGHT-JUSTIFIED,            "4月粗利
69(16) c_mayarari RIGHT-JUSTIFIED,            "5月粗利
85(16) c_junarari RIGHT-JUSTIFIED,            "6月粗利
101(16) c_jularari RIGHT-JUSTIFIED,           "7月粗利
117(16) c_augarari RIGHT-JUSTIFIED,           "8月粗利
133(16) c_separari RIGHT-JUSTIFIED,           "9月粗利
149(16) c_octarari RIGHT-JUSTIFIED,           "10月粗利
165(16) c_novarari RIGHT-JUSTIFIED,           "11月粗利
181(16) c_decarari RIGHT-JUSTIFIED,           "12月粗利
197(16) c_janarari RIGHT-JUSTIFIED,           "1月粗利
213(16) c_febarari RIGHT-JUSTIFIED,           "2月粗利
229(16) c_mararari RIGHT-JUSTIFIED,           "3月粗利
245(16) c_zzaragakukei RIGHT-JUSTIFIED,      "粗利計
/47(06) text-064,                             "粗利率
53(16) c_aprritu RIGHT-JUSTIFIED,             "4月粗利率
69(16) c_mayritu RIGHT-JUSTIFIED,             "5月粗利率
85(16) c_junritu RIGHT-JUSTIFIED,             "6月粗利率
101(16) c_julritu RIGHT-JUSTIFIED,            "7月粗利率
117(16) c_augritu RIGHT-JUSTIFIED,            "8月粗利率
133(16) c_sepritu RIGHT-JUSTIFIED,            "9月粗利率
149(16) c_octritu RIGHT-JUSTIFIED,            "10月粗利率
165(16) c_novritu RIGHT-JUSTIFIED,            "11月粗利率
181(16) c_decritu RIGHT-JUSTIFIED,            "12月粗利率
197(16) c_janritu RIGHT-JUSTIFIED,            "1月粗利率
213(16) c_febritu RIGHT-JUSTIFIED,            "2月粗利率
229(16) c_marritu RIGHT-JUSTIFIED,            "3月粗利率
245(16) c_zzararitukei RIGHT-JUSTIFIED,      "粗利率
/01(262) sy-uline RIGHT-JUSTIFIED.            "下線

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
IF r_down = 'X'.

*　1行目(売上行)
CONCATENATE
flghin                               "品目階層
segtext                              "品目階層テキスト
text-062                             "'売上'
c_aprnetwr                                      "4月売上
c_maynetwr                                      "5月売上
c_junnetwr                                      "6月売上
c_julnetwr                                      "7月売上
c_augnetwr                                      "8月売上
c_sepnetwr                                      "9月売上
c_octnetwr                                      "10月売上
c_novnetwr                                      "11月売上
c_decnetwr                                      "12月売上
c_jannetwr                                      "1月売上
c_febnetwr                                      "2月売上
c_marnetwr                                      "3月売上
c_netwrkei                           "売上合計
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*        SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

*　2行目(粗利行)
CONCATENATE
space                              "空白
space                              "空白
text-063                           "'粗利'
c_aprarari                                    "4月粗利
c_mayarari                                    "5月粗利
c_junarari                                    "6月粗利
c_jularari                                    "7月粗利
c_augarari                                    "8月粗利
c_separari                                    "9月粗利
c_octarari                                    "10月粗利
c_novarari                                    "11月粗利
c_decarari                                    "12月粗利
c_janarari                                    "1月粗利
c_febarari                                    "2月粗利
c_mararari                                    "3月粗利
c_zzaragakukei                     "粗利計
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*        SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

*　3行目(粗利率行)
CONCATENATE
space                              "空白
space                              "空白
text-064                           "'粗利率'
c_aprritu                                     "4月粗利率
c_mayritu                                     "5月粗利率
c_junritu                                     "6月粗利率
c_julritu                                     "7月粗利率
c_augritu                                     "8月粗利率
c_sepritu                                     "9月粗利率
c_octritu                                     "10月粗利率
c_novritu                                     "11月粗利率
c_decritu                                     "12月粗利率
c_janritu                                     "1月粗利率
c_febritu                                     "2月粗利率
c_marritu                                     "3月粗利率
c_zzararitukei                     "計粗利率
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*        SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

ENDIF.

*----------------------------------------------------------
***  品目階層グループ別売上計・粗利計計算
*----------------------------------------------------------
jannetwrkei = jannetwrkei + jannetwr.
febnetwrkei = febnetwrkei + febnetwr.
marnetwrkei = marnetwrkei + marnetwr.
aprnetwrkei = aprnetwrkei + aprnetwr.
maynetwrkei = maynetwrkei + maynetwr.
junnetwrkei = junnetwrkei + junnetwr.
julnetwrkei = julnetwrkei + julnetwr.
augnetwrkei = augnetwrkei + augnetwr.
sepnetwrkei = sepnetwrkei + sepnetwr.
octnetwrkei = octnetwrkei + octnetwr.
novnetwrkei = novnetwrkei + novnetwr.
decnetwrkei = decnetwrkei + decnetwr.
janararikei = janararikei + janarari.
febararikei = febararikei + febarari.
marararikei = marararikei + mararari.
aprararikei = aprararikei + aprarari.
mayararikei = mayararikei + mayarari.
junararikei = junararikei + junarari.
julararikei = julararikei + jularari.
augararikei = augararikei + augarari.
separarikei = separarikei + separari.
octararikei = octararikei + octarari.
novararikei = novararikei + novarari.
decararikei = decararikei + decarari.
sum_segnetwr = sum_segnetwr + sum_netwr.
sum_segarari = sum_segarari + sum_arari.

*----------------------------------------------------------
*** 変数初期化
*----------------------------------------------------------
jannetwr = 0.
febnetwr = 0.
marnetwr = 0.
aprnetwr = 0.
maynetwr = 0.
junnetwr = 0.
julnetwr = 0.
augnetwr = 0.
sepnetwr = 0.
octnetwr = 0.
novnetwr = 0.
decnetwr = 0.
janarari = 0.
febarari = 0.
mararari = 0.
aprarari = 0.
mayarari = 0.
junarari = 0.
jularari = 0.
augarari = 0.
separari = 0.
octarari = 0.
novarari = 0.
decarari = 0.
sum_netwr = 0.
sum_arari = 0.
ENDIF.

***********************************************************
***  品目階層グループが新しい値に変わった時
***********************************************************
IF flghgr NE gf_exec-prodh(1).
*----------------------------------------------------------
***  品目階層グループ別の粗利率計算 ( 粗利率 = 粗利計 / 売上計 )
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利計 / 売上計
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
* 1月
IF janararikei = 0.
janritukei = '0.0'.
ELSEIF jannetwrkei = 0.
janritukei = '-100.0'.
ELSEIF ( jannetwrkei = janararikei ).
janritukei = '100.0'.
ELSE.
janritukei = ( janararikei / jannetwrkei ) * 100.
ENDIF.
* 2月
IF febararikei = 0.
febritukei = '0.0'.
ELSEIF febnetwrkei = 0.
febritukei = '-100.0'.
ELSEIF ( febnetwrkei = febararikei ).
febritukei = '100.0'.
ELSE.
febritukei = ( febararikei / febnetwrkei ) * 100.
ENDIF.
* 3月
IF marararikei = 0.
marritukei = '0.0'.
ELSEIF marnetwrkei = 0.
marritukei = '-100.0'.
ELSEIF ( marnetwrkei = marararikei ).
marritukei = '100.0'.
ELSE.
marritukei = ( marararikei / marnetwrkei ) * 100.
ENDIF.
* 4月
IF aprararikei = 0.
aprritukei = '0.0'.
ELSEIF aprnetwrkei = 0.
aprritukei = '-100.0'.
ELSEIF ( aprnetwrkei = aprararikei ).
aprritukei = '100.0'.
ELSE.
aprritukei = ( aprararikei / aprnetwrkei ) * 100.
ENDIF.
* 5月
IF mayararikei = 0.
mayritukei = '0.0'.
ELSEIF maynetwrkei = 0.
mayritukei = '-100.0'.
ELSEIF ( maynetwrkei = mayararikei ).
mayritukei = '100.0'.
ELSE.
mayritukei = ( mayararikei / maynetwrkei ) * 100.
ENDIF.
* 6月
IF junararikei = 0.
junritukei = '0.0'.
ELSEIF junnetwrkei = 0.
junritukei = '-100.0'.
ELSEIF ( junnetwrkei = junararikei ).
junritukei = '100.0'.
ELSE.
junritukei = ( junararikei / junnetwrkei ) * 100.
ENDIF.
* 7月
IF julararikei = 0.
julritukei = '0.0'.
ELSEIF julnetwrkei = 0.
julritukei = '-100.0'.
ELSEIF ( julnetwrkei = julararikei ).
julritukei = '100.0'.
ELSE.
julritukei = ( julararikei / julnetwrkei ) * 100.
ENDIF.
* 8月
IF augararikei = 0.
augritukei = '0.0'.
ELSEIF augnetwrkei = 0.
augritukei = '-100.0'.
ELSEIF ( augnetwrkei = augararikei ).
augritukei = '100.0'.
ELSE.
augritukei = ( augararikei / augnetwrkei ) * 100.
ENDIF.
* 9月
IF separarikei = 0.
sepritukei = '0.0'.
ELSEIF sepnetwrkei = 0.
sepritukei = '-100.0'.
ELSEIF ( sepnetwrkei = separarikei ).
sepritukei = '100.0'.
ELSE.
sepritukei = ( separarikei / sepnetwrkei ) * 100.
ENDIF.
* 10月
IF octararikei = 0.
octritukei = '0.0'.
ELSEIF octnetwrkei = 0.
octritukei = '-100.0'.
ELSEIF ( octnetwrkei = octararikei ).
octritukei = '100.0'.
ELSE.
octritukei = ( octararikei / octnetwrkei ) * 100.
ENDIF.
* 11月
IF novararikei = 0.
novritukei = '0.0'.
ELSEIF novnetwrkei = 0.
novritukei = '-100.0'.
ELSEIF ( novnetwrkei = novararikei ).
novritukei = '100.0'.
ELSE.
novritukei = ( novararikei / novnetwrkei ) * 100.
ENDIF.
* 12月
IF decararikei = 0.
decritukei = '0.0'.
ELSEIF decnetwrkei = 0.
decritukei = '-100.0'.
ELSEIF ( decnetwrkei = decararikei ).
decritukei = '100.0'.
ELSE.
decritukei = ( decararikei / decnetwrkei ) * 100.
ENDIF.

*----------------------------------------------------------
***  金額表示が'千円'の場合
*　　セグメント別の売上計・実績計を単位変換された金額で計算する
*----------------------------------------------------------
IF r_senen = 'X'.
sum_segnetwr = aprnetwrkei +
maynetwrkei +
junnetwrkei +
julnetwrkei +
augnetwrkei +
sepnetwrkei +
octnetwrkei +
novnetwrkei +
decnetwrkei +
jannetwrkei +
febnetwrkei +
marnetwrkei.

sum_segarari = aprararikei +
mayararikei +
junararikei +
julararikei +
augararikei +
separarikei +
octararikei +
novararikei +
decararikei +
janararikei +
febararikei +
marararikei.

ENDIF.

*----------------------------------------------------------
***  総合計計算
*----------------------------------------------------------
* 月別売上総計
alljannetwrkei = alljannetwrkei + jannetwrkei.
allfebnetwrkei = allfebnetwrkei + febnetwrkei.
allmarnetwrkei = allmarnetwrkei + marnetwrkei.
allaprnetwrkei = allaprnetwrkei + aprnetwrkei.
allmaynetwrkei = allmaynetwrkei + maynetwrkei.
alljunnetwrkei = alljunnetwrkei + junnetwrkei.
alljulnetwrkei = alljulnetwrkei + julnetwrkei.
allaugnetwrkei = allaugnetwrkei + augnetwrkei.
allsepnetwrkei = allsepnetwrkei + sepnetwrkei.
alloctnetwrkei = alloctnetwrkei + octnetwrkei.
allnovnetwrkei = allnovnetwrkei + novnetwrkei.
alldecnetwrkei = alldecnetwrkei + decnetwrkei.
* 月別粗利総計
alljanararikei = alljanararikei + janararikei.
allfebararikei = allfebararikei + febararikei.
allmarararikei = allmarararikei + marararikei.
allaprararikei = allaprararikei + aprararikei.
allmayararikei = allmayararikei + mayararikei.
alljunararikei = alljunararikei + junararikei.
alljulararikei = alljulararikei + julararikei.
allaugararikei = allaugararikei + augararikei.
allsepararikei = allsepararikei + separarikei.
alloctararikei = alloctararikei + octararikei.
allnovararikei = allnovararikei + novararikei.
alldecararikei = alldecararikei + decararikei.
* 総合計
sum_allnetwr = sum_allnetwr + sum_segnetwr.
sum_allarari = sum_allarari + sum_segarari.

*----------------------------------------------------------
***  品目階層グループ別の総粗利率計算 ( 粗利率 = 粗利 / 売上 )
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利 / 売上
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
IF sum_segarari = 0.
sum_segritu = '0.0'.
ELSEIF sum_segnetwr = 0.
sum_segritu = '-100.0'.
ELSEIF ( sum_segnetwr = sum_segarari ).
sum_segritu = '100.0'.
ELSE.
sum_segritu = ( sum_segarari / sum_segnetwr ) * 100.
ENDIF.

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*   数値型を文字型に変換
*----------------------------------------------------------
WRITE:  aprnetwrkei TO c_aprnetwrkei,
maynetwrkei TO c_maynetwrkei,
junnetwrkei TO c_junnetwrkei,
julnetwrkei TO c_julnetwrkei,
augnetwrkei TO c_augnetwrkei,
sepnetwrkei TO c_sepnetwrkei,
octnetwrkei TO c_octnetwrkei,
novnetwrkei TO c_novnetwrkei,
decnetwrkei TO c_decnetwrkei,
jannetwrkei TO c_jannetwrkei,
febnetwrkei TO c_febnetwrkei,
marnetwrkei TO c_marnetwrkei,
sum_segnetwr TO c_netwrmonkei,
aprararikei TO c_aprararikei,
mayararikei TO c_mayararikei,
junararikei TO c_junararikei,
julararikei TO c_julararikei,
augararikei TO c_augararikei,
separarikei TO c_separarikei,
octararikei TO c_octararikei,
novararikei TO c_novararikei,
decararikei TO c_decararikei,
janararikei TO c_janararikei,
febararikei TO c_febararikei,
marararikei TO c_marararikei,
sum_segarari TO c_zzaramonkei,
aprritukei  TO c_aprritukei,
mayritukei  TO c_mayritukei,
junritukei  TO c_junritukei,
julritukei  TO c_julritukei,
augritukei  TO c_augritukei,
sepritukei  TO c_sepritukei,
octritukei  TO c_octritukei,
novritukei  TO c_novritukei,
decritukei  TO c_decritukei,
janritukei  TO c_janritukei,
febritukei  TO c_febritukei,
marritukei  TO c_marritukei,
sum_segritu  TO c_zzritumonkei.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_maynetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_julnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_augnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_sepnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_jannetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_marnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_mayararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_julararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_augararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_separarikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_janararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_marararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_mayritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_julritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_augritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_sepritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_janritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_marritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_netwrmonkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_zzaramonkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_zzritumonkei.

*----------------------------------------------------------
***  品目階層グループ計出力
*----------------------------------------------------------
WRITE: /1(06) flghgr CENTERED,                       "小区分
7(40) '計',                                  "セグメント名
47(06) text-065,                             "'売上計'
53(16) c_aprnetwrkei RIGHT-JUSTIFIED,         "4月計売上
69(16) c_maynetwrkei RIGHT-JUSTIFIED,         "5月計売上
85(16) c_junnetwrkei RIGHT-JUSTIFIED,         "6月計売上
101(16) c_julnetwrkei RIGHT-JUSTIFIED,        "7月計売上
117(16) c_augnetwrkei RIGHT-JUSTIFIED,        "8月売上計
133(16) c_sepnetwrkei RIGHT-JUSTIFIED,        "9月売上計
149(16) c_octnetwrkei RIGHT-JUSTIFIED,        "10月売上計
165(16) c_novnetwrkei RIGHT-JUSTIFIED,        "11月売上計
181(16) c_decnetwrkei RIGHT-JUSTIFIED,        "12月売上計
197(16) c_jannetwrkei RIGHT-JUSTIFIED,        "1月売上計
213(16) c_febnetwrkei RIGHT-JUSTIFIED,        "2月売上計
229(16) c_marnetwrkei RIGHT-JUSTIFIED,        "3月売上計
245(16) c_netwrmonkei RIGHT-JUSTIFIED,       "売上総計
/47(06) text-066,                             "粗利計
53(16) c_aprararikei RIGHT-JUSTIFIED,         "4月粗利計
69(16) c_mayararikei RIGHT-JUSTIFIED,         "5月粗利計
85(16) c_junararikei RIGHT-JUSTIFIED,         "6月粗利計
101(16) c_julararikei RIGHT-JUSTIFIED,        "7月粗利計
117(16) c_augararikei RIGHT-JUSTIFIED,        "8月粗利計
133(16) c_separarikei RIGHT-JUSTIFIED,        "9月粗利計
149(16) c_octararikei RIGHT-JUSTIFIED,        "10月粗利計
165(16) c_novararikei RIGHT-JUSTIFIED,        "11月粗利計
181(16) c_decararikei RIGHT-JUSTIFIED,        "12月粗利計
197(16) c_janararikei RIGHT-JUSTIFIED,        "1月粗利計
213(16) c_febararikei RIGHT-JUSTIFIED,        "2月粗利計
229(16) c_marararikei RIGHT-JUSTIFIED,        "3月粗利計
245(16) c_zzaramonkei RIGHT-JUSTIFIED,       "粗利総計
/47(06) text-064,                             "粗利率
53(16) c_aprritukei RIGHT-JUSTIFIED,         "4月計粗利率
69(16) c_mayritukei RIGHT-JUSTIFIED,         "5月計粗利率
85(16) c_junritukei RIGHT-JUSTIFIED,         "6月計粗利率
101(16) c_julritukei RIGHT-JUSTIFIED,        "7月計粗利率
117(16) c_augritukei RIGHT-JUSTIFIED,        "8月計粗利率
133(16) c_sepritukei RIGHT-JUSTIFIED,        "9月計粗利率
149(16) c_octritukei RIGHT-JUSTIFIED,        "10月計粗利率
165(16) c_novritukei RIGHT-JUSTIFIED,        "11月計粗利率
181(16) c_decritukei RIGHT-JUSTIFIED,        "12月計粗利率
197(16) c_janritukei RIGHT-JUSTIFIED,        "1月計粗利率
213(16) c_febritukei RIGHT-JUSTIFIED,        "2月計粗利率
229(16) c_marritukei RIGHT-JUSTIFIED,        "3月計粗利率
245(16) c_zzritumonkei RIGHT-JUSTIFIED,      "総計粗利率
/01(262) sy-uline.                            "下線

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
IF r_down = 'X'.

*　1行目(売上計行)
CONCATENATE
flghgr                               "品目階層グループ
'計'
text-065                             "'売上計'
c_aprnetwrkei                                   "4月売上計
c_maynetwrkei                                   "5月売上計
c_junnetwrkei                                   "6月売上計
c_julnetwrkei                                   "7月売上計
c_augnetwrkei                                   "8月売上計
c_sepnetwrkei                                   "9月売上計
c_octnetwrkei                                   "10月売上計
c_novnetwrkei                                   "11月売上計
c_decnetwrkei                                   "12月売上計
c_jannetwrkei                                   "1月売上計
c_febnetwrkei                                   "2月売上計
c_marnetwrkei                                   "3月売上計
c_netwrmonkei                        "売上計
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*       SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--
*　2行目(粗利計)
CONCATENATE
space                              "空白
space                              "空白
text-066                           "'粗利計'
c_aprararikei                                 "4月粗利計
c_mayararikei                                 "5月粗利計
c_junararikei                                 "6月粗利計
c_julararikei                                 "7月粗利計
c_augararikei                                 "8月粗利計
c_separarikei                                 "9月粗利計
c_octararikei                                 "10月粗利計
c_novararikei                                 "11月粗利計
c_decararikei                                 "12月粗利計
c_janararikei                                 "1月粗利計
c_febararikei                                 "2月粗利計
c_marararikei                                 "3月粗利計
c_zzaramonkei                      "粗利計
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*       SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

*　3行目(粗利率行)
CONCATENATE
space                              "空白
space                              "空白
text-064                           "'粗利率'
c_aprritukei                                  "4月粗利率
c_mayritukei                                  "5月粗利率
c_junritukei                                  "6月粗利率
c_julritukei                                  "7月粗利率
c_augritukei                                  "8月粗利率
c_sepritukei                                  "9月粗利率
c_octritukei                                  "10月粗利率
c_novritukei                                  "11月粗利率
c_decritukei                                  "12月粗利率
c_janritukei                                  "1月粗利率
c_febritukei                                  "2月粗利率
c_marritukei                                  "3月粗利率
c_zzritumonkei                     "粗利率
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*       SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

ENDIF.

*----------------------------------------------------------
*** 変数初期化
*----------------------------------------------------------
jannetwrkei = 0.
febnetwrkei = 0.
marnetwrkei = 0.
aprnetwrkei = 0.
maynetwrkei = 0.
junnetwrkei = 0.
julnetwrkei = 0.
augnetwrkei = 0.
sepnetwrkei = 0.
octnetwrkei = 0.
novnetwrkei = 0.
decnetwrkei = 0.
janararikei = 0.
febararikei = 0.
marararikei = 0.
aprararikei = 0.
mayararikei = 0.
junararikei = 0.
julararikei = 0.
augararikei = 0.
separarikei = 0.
octararikei = 0.
novararikei = 0.
decararikei = 0.
sum_segnetwr = 0.
sum_segarari = 0.
sum_segritu = 0.
ENDIF.

*----------------------------------------------------------
***  月別売上金額、月別粗利金額計算
*----------------------------------------------------------
*  ・IRを出力
*      第１期にチェックが付いている場合
*        全月　     見直予算(バージョン'002')
*      第２期にチェックが付いている場合
*　      4月〜6月　 実績(バージョン'000')
*        7月〜3月　 見直予算(バージョン'002')
*      第３期にチェックが付いている場合
*　      4月〜9月　 実績(バージョン'000')
*        10月〜3月　見直予算(バージョン'002')
*      第４期にチェックが付いている場合
*　      4月〜12月　実績(バージョン'000')
*        1月〜3月　 見直予算(バージョン'002')
*　　　但し、見直予算(バージョン '002')が存在しなかった場合は
*　　　期初予算(バージョン '001')を取得する

*  ・人事を出力
*      第１期にチェックが付いている場合
*        全月　     見直予算(バージョン'002')
*      第２期にチェックが付いている場合
*        4月〜6月　 期初予算(バージョン'001')
*        7月〜3月　 見直予算(バージョン'002')
*      第３期にチェックが付いている場合
*        4月〜9月　 期初予算(バージョン'001')
*        10月〜3月　見直予算(バージョン'002')
*      第４期にチェックが付いている場合
*        4月〜12月　期初予算(バージョン'001')
*        1月〜3月　 見直予算(バージョン'002')
*　　　但し、見直予算(バージョン '002')が存在しなかった場合は
*　　　期初予算(バージョン '001')を取得する
*----------------------------------------------------------

tuki = gf_exec-spmon+4(2).

* IRを出力する場合
IF r_ir = 'X'.
* 第１期にチェックがついている場合
IF r_1q = 'X'.
*  同一データのバージョン'002'が存在しない場合のみバージョン'001'を取得
IF gf_exec-vrsio = '001'.
*　一つ前のデータのバージョンが'000'か'001'の場合
IF ( ver = '000' ) OR ( ver = '001' ).
IF tuki = '04'.
aprnetwr = aprnetwr + ( gf_exec-netwr * 100 ).
aprarari = aprarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '05'.
maynetwr = maynetwr + ( gf_exec-netwr * 100 ).
mayarari = mayarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '06'.
junnetwr = junnetwr + ( gf_exec-netwr * 100 ).
junarari = junarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '07'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '08'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '09'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
ELSEIF gf_exec-vrsio = '002'.
IF tuki = '04'.
aprnetwr = aprnetwr + ( gf_exec-netwr * 100 ).
aprarari = aprarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '05'.
maynetwr = maynetwr + ( gf_exec-netwr * 100 ).
mayarari = mayarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '06'.
junnetwr = junnetwr + ( gf_exec-netwr * 100 ).
junarari = junarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '07'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '08'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '09'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
* 第２期にチェックがついている場合
ELSEIF r_2q = 'X'.
IF tuki = '04'.
IF gf_exec-vrsio = '000'.
aprnetwr = aprnetwr + ( gf_exec-netwr * 100 ).
aprarari = aprarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '05'.
IF gf_exec-vrsio = '000'.
maynetwr = maynetwr + ( gf_exec-netwr * 100 ).
mayarari = mayarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '06'.
IF gf_exec-vrsio = '000'.
junnetwr = junnetwr + ( gf_exec-netwr * 100 ).
junarari = junarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
*  同一データのバージョン'002'が存在しない場合のみバージョン'001'を取得
IF gf_exec-vrsio = '001'.
*　一つ前のデータのバージョンが'000'か'001'の場合
IF ( ver = '000' ) OR ( ver = '001' ).
IF tuki = '07'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '08'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '09'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
ELSEIF gf_exec-vrsio = '002'.
IF tuki = '07'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '08'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '09'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
* 第３期にチェックがついている場合
ELSEIF r_3q = 'X'.
IF tuki = '04'.
IF gf_exec-vrsio = '000'.
aprnetwr = aprnetwr + ( gf_exec-netwr * 100 ).
aprarari = aprarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '05'.
IF gf_exec-vrsio = '000'.
maynetwr = maynetwr + ( gf_exec-netwr * 100 ).
mayarari = mayarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '06'.
IF gf_exec-vrsio = '000'.
junnetwr = junnetwr + ( gf_exec-netwr * 100 ).
junarari = junarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '07'.
IF gf_exec-vrsio = '000'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '08'.
IF gf_exec-vrsio = '000'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '09'.
IF gf_exec-vrsio = '000'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
*  同一データのバージョン'002'が存在しない場合のみバージョン'001'を取得
IF gf_exec-vrsio = '001'.
*　一つ前のデータのバージョンが'000'か'001'の場合
IF ( ver = '000' ) OR ( ver = '001' ).
IF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
ELSEIF gf_exec-vrsio = '002'.
IF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
* 第４期にチェックがついている場合
ELSE.
IF tuki = '04'.
IF gf_exec-vrsio = '000'.
aprnetwr = aprnetwr + ( gf_exec-netwr * 100 ).
aprarari = aprarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '05'.
IF gf_exec-vrsio = '000'.
maynetwr = maynetwr + ( gf_exec-netwr * 100 ).
mayarari = mayarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '06'.
IF gf_exec-vrsio = '000'.
junnetwr = junnetwr + ( gf_exec-netwr * 100 ).
junarari = junarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '07'.
IF gf_exec-vrsio = '000'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '08'.
IF gf_exec-vrsio = '000'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '09'.
IF gf_exec-vrsio = '000'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '10'.
IF gf_exec-vrsio = '000'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '11'.
IF gf_exec-vrsio = '000'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '12'.
IF gf_exec-vrsio = '000'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
*  同一データのバージョン'002'が存在しない場合のみバージョン'001'を取得
IF gf_exec-vrsio = '001'.
*　一つ前のデータのバージョンが'000'か'001'の場合
IF ( ver = '000' ) OR ( ver = '001' ).
IF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
ELSEIF gf_exec-vrsio = '002'.
IF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
ENDIF.
ENDIF.
* 人事を出力する場合
IF r_hr = 'X'.
* 第１期にチェックがついている場合
IF r_1q = 'X'.
*  同一データのバージョン'002'が存在しない場合のみバージョン'001'を取得
IF gf_exec-vrsio = '001'.
*　一つ前のデータのバージョンが'000'か'001'の場合
IF ( ver = '000' ) OR ( ver = '001' ).
IF tuki = '04'.
aprnetwr = aprnetwr + ( gf_exec-netwr * 100 ).
aprarari = aprarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '05'.
maynetwr = maynetwr + ( gf_exec-netwr * 100 ).
mayarari = mayarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '06'.
junnetwr = junnetwr + ( gf_exec-netwr * 100 ).
junarari = junarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '07'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '08'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '09'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
ELSEIF gf_exec-vrsio = '002'.
IF tuki = '04'.
aprnetwr = aprnetwr + ( gf_exec-netwr * 100 ).
aprarari = aprarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '05'.
maynetwr = maynetwr + ( gf_exec-netwr * 100 ).
mayarari = mayarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '06'.
junnetwr = junnetwr + ( gf_exec-netwr * 100 ).
junarari = junarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '07'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '08'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '09'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
* 第２期にチェックがついている場合
ELSEIF r_2q = 'X'.
IF tuki = '04'.
IF gf_exec-vrsio = '001'.
aprnetwr = aprnetwr + ( gf_exec-netwr * 100 ).
aprarari = aprarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '05'.
IF gf_exec-vrsio = '001'.
maynetwr = maynetwr + ( gf_exec-netwr * 100 ).
mayarari = mayarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '06'.
IF gf_exec-vrsio = '001'.
junnetwr = junnetwr + ( gf_exec-netwr * 100 ).
junarari = junarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
*  同一データのバージョン'002'が存在しない場合のみバージョン'001'を取得
IF gf_exec-vrsio = '001'.
*　一つ前のデータのバージョンが'000'か'001'の場合
IF ( ver = '000' ) OR ( ver = '001' ).
IF tuki = '07'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '08'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '09'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
ELSEIF gf_exec-vrsio = '002'.
IF tuki = '07'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '08'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '09'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
* 第３期にチェックがついている場合
ELSEIF r_3q = 'X'.
IF tuki = '04'.
IF gf_exec-vrsio = '001'.
aprnetwr = aprnetwr + ( gf_exec-netwr * 100 ).
aprarari = aprarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '05'.
IF gf_exec-vrsio = '001'.
maynetwr = maynetwr + ( gf_exec-netwr * 100 ).
mayarari = mayarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '06'.
IF gf_exec-vrsio = '001'.
junnetwr = junnetwr + ( gf_exec-netwr * 100 ).
junarari = junarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '07'.
IF gf_exec-vrsio = '001'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '08'.
IF gf_exec-vrsio = '001'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '09'.
IF gf_exec-vrsio = '001'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
*  同一データのバージョン'002'が存在しない場合のみバージョン'001'を取得
IF gf_exec-vrsio = '001'.
*　一つ前のデータのバージョンが'000'か'001'の場合
IF ( ver = '000' ) OR ( ver = '001' ).
IF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
ELSEIF gf_exec-vrsio = '002'.
IF tuki = '10'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '11'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '12'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
* 第４期にチェックがついている場合
ELSE.
IF tuki = '04'.
IF gf_exec-vrsio = '001'.
aprnetwr = aprnetwr + ( gf_exec-netwr * 100 ).
aprarari = aprarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '05'.
IF gf_exec-vrsio = '001'.
maynetwr = maynetwr + ( gf_exec-netwr * 100 ).
mayarari = mayarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '06'.
IF gf_exec-vrsio = '001'.
junnetwr = junnetwr + ( gf_exec-netwr * 100 ).
junarari = junarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '07'.
IF gf_exec-vrsio = '001'.
julnetwr = julnetwr + ( gf_exec-netwr * 100 ).
jularari = jularari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '08'.
IF gf_exec-vrsio = '001'.
augnetwr = augnetwr + ( gf_exec-netwr * 100 ).
augarari = augarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '09'.
IF gf_exec-vrsio = '001'.
sepnetwr = sepnetwr + ( gf_exec-netwr * 100 ).
separari = separari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '10'.
IF gf_exec-vrsio = '001'.
octnetwr = octnetwr + ( gf_exec-netwr * 100 ).
octarari = octarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '11'.
IF gf_exec-vrsio = '001'.
novnetwr = novnetwr + ( gf_exec-netwr * 100 ).
novarari = novarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
IF tuki = '12'.
IF gf_exec-vrsio = '001'.
decnetwr = decnetwr + ( gf_exec-netwr * 100 ).
decarari = decarari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
*  同一データのバージョン'002'が存在しない場合のみバージョン'001'を取得
IF gf_exec-vrsio = '001'.
*　一つ前のデータのバージョンが'000'か'001'の場合
IF ( ver = '000' ) OR ( ver = '001' ).
IF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
ELSEIF gf_exec-vrsio = '002'.
IF tuki = '01'.
jannetwr = jannetwr + ( gf_exec-netwr * 100 ).
janarari = janarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '02'.
febnetwr = febnetwr + ( gf_exec-netwr * 100 ).
febarari = febarari + ( gf_exec-zzaraigaku * 100 ).
ELSEIF tuki = '03'.
marnetwr = marnetwr + ( gf_exec-netwr * 100 ).
mararari = mararari + ( gf_exec-zzaraigaku * 100 ).
ENDIF.
ENDIF.
ENDIF.
ENDIF.

flghin = gf_exec-prodh.
flghgr = gf_exec-prodh(1).
segtext = gf_exec-vtext.
ver = gf_exec-vrsio.

***********************************************************
***  ループが最後になった時
***********************************************************
AT LAST.
*----------------------------------------------------------
***  月別粗利率計算 ( 粗利率 = 粗利 / 売上 )
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利 / 売上
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
* 1月
IF janarari = 0.
janritu = '0.0'.
ELSEIF jannetwr = 0.
janritu = '-100.0'.
ELSEIF ( jannetwr = janarari ).
janritu = '100.0'.
ELSE.
janritu = ( janarari / jannetwr ) * 100.
ENDIF.
* 2月
IF febarari = 0.
febritu = '0.0'.
ELSEIF febnetwr = 0.
febritu = '-100.0'.
ELSEIF ( febnetwr = febarari ).
febritu = '100.0'.
ELSE.
febritu = ( febarari / febnetwr ) * 100.
ENDIF.
* 3月
IF mararari = 0.
marritu = '0.0'.
ELSEIF marnetwr = 0.
marritu = '-100.0'.
ELSEIF ( marnetwr = mararari ).
marritu = '100.0'.
ELSE.
marritu = ( mararari / marnetwr ) * 100.
ENDIF.
* 4月
IF aprarari = 0.
aprritu = '0.0'.
ELSEIF aprnetwr = 0.
aprritu = '-100.0'.
ELSEIF ( aprnetwr = aprarari ).
aprritu = '100.0'.
ELSE.
aprritu = ( aprarari / aprnetwr ) * 100.
ENDIF.
* 5月
IF mayarari = 0.
mayritu = '0.0'.
ELSEIF maynetwr = 0.
mayritu = '-100.0'.
ELSEIF ( maynetwr = mayarari ).
mayritu = '100.0'.
ELSE.
mayritu = ( mayarari / maynetwr ) * 100.
ENDIF.
* 6月
IF junarari = 0.
junritu = '0.0'.
ELSEIF junnetwr = 0.
junritu = '-100.0'.
ELSEIF ( junnetwr = junarari ).
junritu = '100.0'.
ELSE.
junritu = ( junarari / junnetwr ) * 100.
ENDIF.
* 7月
IF jularari = 0.
julritu = '0.0'.
ELSEIF julnetwr = 0.
julritu = '-100.0'.
ELSEIF ( julnetwr = jularari ).
julritu = '100.0'.
ELSE.
julritu = ( jularari / julnetwr ) * 100.
ENDIF.
* 8月
IF augarari = 0.
augritu = '0.0'.
ELSEIF augnetwr = 0.
augritu = '-100.0'.
ELSEIF ( augnetwr = augarari ).
augritu = '100.0'.
ELSE.
augritu = ( augarari / augnetwr ) * 100.
ENDIF.
* 9月
IF separari = 0.
sepritu = '0.0'.
ELSEIF sepnetwr = 0.
sepritu = '-100.0'.
ELSEIF ( sepnetwr = separari ).
sepritu = '100.0'.
ELSE.
sepritu = ( separari / sepnetwr ) * 100.
ENDIF.
* 10月
IF octarari = 0.
octritu = '0.0'.
ELSEIF octnetwr = 0.
octritu = '-100.0'.
ELSEIF ( octnetwr = octarari ).
octritu = '100.0'.
ELSE.
octritu = ( octarari / octnetwr ) * 100.
ENDIF.
* 11月
IF novarari = 0.
novritu = '0.0'.
ELSEIF novnetwr = 0.
novritu = '-100.0'.
ELSEIF ( novnetwr = novarari ).
novritu = '100.0'.
ELSE.
novritu = ( novarari / novnetwr ) * 100.
ENDIF.
* 12月
IF decarari = 0.
decritu = '0.0'.
ELSEIF decnetwr = 0.
decritu = '-100.0'.
ELSEIF ( decnetwr = decarari ).
decritu = '100.0'.
ELSE.
decritu = ( decarari / decnetwr ) * 100.
ENDIF.

*----------------------------------------------------------
***  金額表示が'千円'の場合
*　　セグメント別の売上計・実績計を単位変換された金額で計算する
*----------------------------------------------------------
IF r_senen = 'X'.
sum_netwr = aprnetwr +
maynetwr +
junnetwr +
julnetwr +
augnetwr +
sepnetwr +
octnetwr +
novnetwr +
decnetwr +
jannetwr +
febnetwr +
marnetwr.

sum_arari = aprarari +
mayarari +
junarari +
jularari +
augarari +
separari +
octarari +
novarari +
decarari +
janarari +
febarari +
mararari.

ENDIF.

*----------------------------------------------------------
***  総粗利率計算 ( 粗利率 = 粗利計 / 売上計 )
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利 / 売上
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
IF sum_arari = 0.
sum_ritu = '0.0'.
ELSEIF sum_netwr = 0.
sum_ritu = '-100.0'.
ELSEIF ( sum_arari = sum_netwr ).
sum_ritu = '100.0'.
ELSE.
sum_ritu = ( sum_arari / sum_netwr ) * 100.
ENDIF.

*----------------------------------------------------------
*** 単位変換(円→千円)
*----------------------------------------------------------
IF r_senen = 'X'.
aprnetwr = aprnetwr / 1000.
maynetwr = maynetwr / 1000.
junnetwr = junnetwr / 1000.
julnetwr = julnetwr / 1000.
augnetwr = augnetwr / 1000.
sepnetwr = sepnetwr / 1000.
octnetwr = octnetwr / 1000.
novnetwr = novnetwr / 1000.
decnetwr = decnetwr / 1000.
jannetwr = jannetwr / 1000.
febnetwr = febnetwr / 1000.
marnetwr = marnetwr / 1000.
sum_netwr = sum_netwr / 1000.
aprarari = aprarari / 1000.
mayarari = mayarari / 1000.
junarari = junarari / 1000.
jularari = jularari / 1000.
augarari = augarari / 1000.
separari = separari / 1000.
octarari = octarari / 1000.
novarari = novarari / 1000.
decarari = decarari / 1000.
janarari = janarari / 1000.
febarari = febarari / 1000.
mararari = mararari / 1000.
sum_arari = sum_arari / 1000.
ENDIF.

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*　数値型を文字型へ変換
*----------------------------------------------------------
WRITE:  aprnetwr TO c_aprnetwr,
maynetwr TO c_maynetwr,
junnetwr TO c_junnetwr,
julnetwr TO c_julnetwr,
augnetwr TO c_augnetwr,
sepnetwr TO c_sepnetwr,
octnetwr TO c_octnetwr,
novnetwr TO c_novnetwr,
decnetwr TO c_decnetwr,
jannetwr TO c_jannetwr,
febnetwr TO c_febnetwr,
marnetwr TO c_marnetwr,
sum_netwr TO c_netwrkei,
aprarari TO c_aprarari,
mayarari TO c_mayarari,
junarari TO c_junarari,
jularari TO c_jularari,
augarari TO c_augarari,
separari TO c_separari,
octarari TO c_octarari,
novarari TO c_novarari,
decarari TO c_decarari,
janarari TO c_janarari,
febarari TO c_febarari,
mararari TO c_mararari,
sum_arari TO c_zzaragakukei,
aprritu TO c_aprritu,
mayritu TO c_mayritu,
junritu TO c_junritu,
julritu TO c_julritu,
augritu TO c_augritu,
sepritu TO c_sepritu,
octritu TO c_octritu,
novritu TO c_novritu,
decritu TO c_decritu,
janritu TO c_janritu,
febritu TO c_febritu,
marritu TO c_marritu,
sum_ritu TO c_zzararitukei.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_maynetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_julnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_augnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_sepnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_jannetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_marnetwr.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_mayarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_jularari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_augarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_separari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_janarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febarari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_mararari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_netwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_zzaragakukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_mayritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_julritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_sepritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_janritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_marritu.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_mararari.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_zzararitukei.

*----------------------------------------------------------
***  品目階層別出力
*----------------------------------------------------------
WRITE: /1(06) flghin CENTERED,                       "小区分
07(40) segtext,                                   "セグメント名
47(06) text-062,                                  "'売上'
53(16) c_aprnetwr RIGHT-JUSTIFIED,                 "4月売上
69(16) c_maynetwr RIGHT-JUSTIFIED,                 "5月売上
85(16) c_junnetwr RIGHT-JUSTIFIED,                 "6月売上
101(16) c_julnetwr RIGHT-JUSTIFIED,                "7月売上
117(16) c_augnetwr RIGHT-JUSTIFIED,                "8月売上
133(16) c_sepnetwr RIGHT-JUSTIFIED,                "9月売上
149(16) c_octnetwr RIGHT-JUSTIFIED,                "10月売上
165(16) c_novnetwr RIGHT-JUSTIFIED,                "11月売上
181(16) c_decnetwr RIGHT-JUSTIFIED,                "12月売上
197(16) c_jannetwr RIGHT-JUSTIFIED,                "1月売上
213(16) c_febnetwr RIGHT-JUSTIFIED,                "2月売上
229(16) c_marnetwr RIGHT-JUSTIFIED,                "3月売上
245(16) c_netwrkei RIGHT-JUSTIFIED,               "売上計
/47(06) text-063,                                 "'粗利'
53(16) c_aprarari RIGHT-JUSTIFIED,                 "4月粗利
69(16) c_mayarari RIGHT-JUSTIFIED,                 "5月粗利
85(16) c_junarari RIGHT-JUSTIFIED,                 "6月粗利
101(16) c_jularari RIGHT-JUSTIFIED,                "7月粗利
117(16) c_augarari RIGHT-JUSTIFIED,                "8月粗利
133(16) c_separari RIGHT-JUSTIFIED,                "9月粗利
149(16) c_octarari RIGHT-JUSTIFIED,                "10月粗利
165(16) c_novarari RIGHT-JUSTIFIED,                "11月粗利
181(16) c_decarari RIGHT-JUSTIFIED,                "12月粗利
197(16) c_janarari RIGHT-JUSTIFIED,                "1月粗利
213(16) c_febarari RIGHT-JUSTIFIED,                "2月粗利
229(16) c_mararari RIGHT-JUSTIFIED,                "3月粗利
245(16) c_zzaragakukei RIGHT-JUSTIFIED,           "粗利計
/47(06) text-064,                                  "粗利率
53(16) c_aprritu RIGHT-JUSTIFIED,                  "4月粗利率
69(16) c_mayritu RIGHT-JUSTIFIED,                  "5月粗利率
85(16) c_junritu RIGHT-JUSTIFIED,                  "6月粗利率
101(16) c_julritu RIGHT-JUSTIFIED,                 "7月粗利率
117(16) c_augritu RIGHT-JUSTIFIED,                 "8月粗利率
133(16) c_sepritu RIGHT-JUSTIFIED,                 "9月粗利率
149(16) c_octritu RIGHT-JUSTIFIED,                 "10月粗利率
165(16) c_novritu RIGHT-JUSTIFIED,                 "11月粗利率
181(16) c_decritu RIGHT-JUSTIFIED,                 "12月粗利率
197(16) c_janritu RIGHT-JUSTIFIED,                 "1月粗利率
213(16) c_febritu RIGHT-JUSTIFIED,                 "2月粗利率
229(16) c_marritu RIGHT-JUSTIFIED,                 "3月粗利率
245(16) c_zzararitukei RIGHT-JUSTIFIED,                 "粗利率
/01(262) sy-uline.                                 "下線

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
IF r_down = 'X'.

*　1行目(売上行)
CONCATENATE
flghin                                 "品目階層
segtext                                "品目階層テキスト
text-062                               "'売上'
c_aprnetwr                                        "4月売上
c_maynetwr                                        "5月売上
c_junnetwr                                        "6月売上
c_julnetwr                                        "7月売上
c_augnetwr                                        "8月売上
c_sepnetwr                                        "9月売上
c_octnetwr                                        "10月売上
c_novnetwr                                        "11月売上
c_decnetwr                                        "12月売上
c_jannetwr                                        "1月売上
c_febnetwr                                        "2月売上
c_marnetwr                                        "3月売上
c_netwrkei                             "売上計
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*        SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

*　2行目(粗利行)
CONCATENATE
space                                  "空白
space                                  "空白
text-063                               "'粗利'
c_aprarari                                        "4月粗利
c_mayarari                                        "5月粗利
c_junarari                                        "6月粗利
c_jularari                                        "7月粗利
c_augarari                                        "8月粗利
c_separari                                        "9月粗利
c_octarari                                        "10月粗利
c_novarari                                        "11月粗利
c_decarari                                        "12月粗利
c_janarari                                        "1月粗利
c_febarari                                        "2月粗利
c_mararari                                        "3月粗利
c_zzaragakukei                         "粗利計
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*        SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

*　3行目(粗利率)
CONCATENATE
space                                  "空白
space                                  "空白
text-064                               "'粗利率'
c_aprritu                                         "4月粗利率
c_mayritu                                         "5月粗利率
c_junritu                                         "6月粗利率
c_julritu                                         "7月粗利率
c_augritu                                         "8月粗利率
c_sepritu                                         "9月粗利率
c_octritu                                         "10月粗利率
c_novritu                                         "11月粗利率
c_decritu                                         "12月粗利率
c_janritu                                         "1月粗利率
c_febritu                                         "2月粗利率
c_marritu                                         "3月粗利率
c_zzararitukei                         "粗利率
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*        SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--
ENDIF.

*----------------------------------------------------------
***  品目階層グループ別売上・粗利計算
*----------------------------------------------------------
jannetwrkei = jannetwrkei + jannetwr.
febnetwrkei = febnetwrkei + febnetwr.
marnetwrkei = marnetwrkei + marnetwr.
aprnetwrkei = aprnetwrkei + aprnetwr.
maynetwrkei = maynetwrkei + maynetwr.
junnetwrkei = junnetwrkei + junnetwr.
julnetwrkei = julnetwrkei + julnetwr.
augnetwrkei = augnetwrkei + augnetwr.
sepnetwrkei = sepnetwrkei + sepnetwr.
octnetwrkei = octnetwrkei + octnetwr.
novnetwrkei = novnetwrkei + novnetwr.
decnetwrkei = decnetwrkei + decnetwr.
janararikei = janararikei + janarari.
febararikei = febararikei + febarari.
marararikei = marararikei + mararari.
aprararikei = aprararikei + aprarari.
mayararikei = mayararikei + mayarari.
junararikei = junararikei + junarari.
julararikei = julararikei + jularari.
augararikei = augararikei + augarari.
separarikei = separarikei + separari.
octararikei = octararikei + octarari.
novararikei = novararikei + novarari.
decararikei = decararikei + decarari.
sum_segnetwr = sum_segnetwr + sum_netwr.
sum_segarari = sum_segarari + sum_arari.

*----------------------------------------------------------
***  品目階層グループ別の粗利率計算 ( 粗利率 = 粗利計 / 売上計 )
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利計 / 売上計
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
* 1月
IF janararikei = 0.
janritukei = '0.0'.
ELSEIF jannetwrkei = 0.
janritukei = '-100.0'.
ELSEIF ( jannetwrkei = janararikei ).
janritukei = '100.0'.
ELSE.
janritukei = ( janararikei / jannetwrkei ) * 100.
ENDIF.
* 2月
IF febararikei = 0.
febritukei = '0.0'.
ELSEIF febnetwrkei = 0.
febritukei = '-100.0'.
ELSEIF ( febnetwrkei = febararikei ).
febritukei = '100.0'.
ELSE.
febritukei = ( febararikei / febnetwrkei ) * 100.
ENDIF.
* 3月
IF marararikei = 0.
marritukei = '0.0'.
ELSEIF marnetwrkei = 0.
marritukei = '-100.0'.
ELSEIF ( marnetwrkei = marararikei ).
marritukei = '100.0'.
ELSE.
marritukei = ( marararikei / marnetwrkei ) * 100.
ENDIF.
* 4月
IF aprararikei = 0.
aprritukei = '0.0'.
ELSEIF aprnetwrkei = 0.
aprritukei = '-100.0'.
ELSEIF ( aprnetwrkei = aprararikei ).
aprritukei = '100.0'.
ELSE.
aprritukei = ( aprararikei / aprnetwrkei ) * 100.
ENDIF.
* 5月
IF mayararikei = 0.
mayritukei = '0.0'.
ELSEIF maynetwrkei = 0.
mayritukei = '-100.0'.
ELSEIF ( maynetwrkei = mayararikei ).
mayritukei = '100.0'.
ELSE.
mayritukei = ( mayararikei / maynetwrkei ) * 100.
ENDIF.
* 6月
IF junararikei = 0.
junritukei = '0.0'.
ELSEIF junnetwrkei = 0.
junritukei = '-100.0'.
ELSEIF ( junnetwrkei = junararikei ).
junritukei = '100.0'.
ELSE.
junritukei = ( junararikei / junnetwrkei ) * 100.
ENDIF.
* 7月
IF julararikei = 0.
julritukei = '0.0'.
ELSEIF julnetwrkei = 0.
julritukei = '-100.0'.
ELSEIF ( julnetwrkei = julararikei ).
julritukei = '100.0'.
ELSE.
julritukei = ( julararikei / julnetwrkei ) * 100.
ENDIF.
* 8月
IF augararikei = 0.
augritukei = '0.0'.
ELSEIF augnetwrkei = 0.
augritukei = '-100.0'.
ELSEIF ( augnetwrkei = augararikei ).
augritukei = '100.0'.
ELSE.
augritukei = ( augararikei / augnetwrkei ) * 100.
ENDIF.
* 9月
IF separarikei = 0.
sepritukei = '0.0'.
ELSEIF sepnetwrkei = 0.
sepritukei = '-100.0'.
ELSEIF ( sepnetwrkei = separarikei ).
sepritukei = '100.0'.
ELSE.
sepritukei = ( separarikei / sepnetwrkei ) * 100.
ENDIF.
* 10月
IF octararikei = 0.
octritukei = '0.0'.
ELSEIF octnetwrkei = 0.
octritukei = '-100.0'.
ELSEIF ( octnetwrkei = octararikei ).
octritukei = '100.0'.
ELSE.
octritukei = ( octararikei / octnetwrkei ) * 100.
ENDIF.
* 11月
IF novararikei = 0.
novritukei = '0.0'.
ELSEIF novnetwrkei = 0.
novritukei = '-100.0'.
ELSEIF ( novnetwrkei = novararikei ).
novritukei = '100.0'.
ELSE.
novritukei = ( novararikei / novnetwrkei ) * 100.
ENDIF.
* 12月
IF decararikei = 0.
decritukei = '0.0'.
ELSEIF decnetwrkei = 0.
decritukei = '-100.0'.
ELSEIF ( decnetwrkei = decararikei ).
decritukei = '100.0'.
ELSE.
decritukei = ( decararikei / decnetwrkei ) * 100.
ENDIF.

*----------------------------------------------------------
***  金額表示が'千円'の場合
*　　セグメント別の売上計・実績計を単位変換された金額で計算する
*----------------------------------------------------------
IF r_senen = 'X'.
sum_segnetwr = aprnetwrkei +
maynetwrkei +
junnetwrkei +
julnetwrkei +
augnetwrkei +
sepnetwrkei +
octnetwrkei +
novnetwrkei +
decnetwrkei +
jannetwrkei +
febnetwrkei +
marnetwrkei.

sum_segarari = aprararikei +
mayararikei +
junararikei +
julararikei +
augararikei +
separarikei +
octararikei +
novararikei +
decararikei +
janararikei +
febararikei +
marararikei.

ENDIF.

*----------------------------------------------------------
***  品目階層グループ別の総粗利率計算 ( 粗利率 = 粗利 / 売上 )
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利 / 売上
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
IF sum_segarari = 0.
sum_segritu = '0.0'.
ELSEIF sum_segnetwr = 0.
sum_segritu = '-100.0'.
ELSEIF ( sum_segnetwr = sum_segarari ).
sum_segritu = '100.0'.
ELSE.
sum_segritu = ( sum_segarari / sum_segnetwr ) * 100.
ENDIF.

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*　数値型を文字型へ変換
*----------------------------------------------------------
WRITE:  aprnetwrkei TO c_aprnetwrkei,
maynetwrkei TO c_maynetwrkei,
junnetwrkei TO c_junnetwrkei,
julnetwrkei TO c_julnetwrkei,
augnetwrkei TO c_augnetwrkei,
sepnetwrkei TO c_sepnetwrkei,
octnetwrkei TO c_octnetwrkei,
novnetwrkei TO c_novnetwrkei,
decnetwrkei TO c_decnetwrkei,
jannetwrkei TO c_jannetwrkei,
febnetwrkei TO c_febnetwrkei,
marnetwrkei TO c_marnetwrkei,
sum_segnetwr TO c_netwrmonkei,
aprararikei TO c_aprararikei,
mayararikei TO c_mayararikei,
junararikei TO c_junararikei,
julararikei TO c_julararikei,
augararikei TO c_augararikei,
separarikei TO c_separarikei,
octararikei TO c_octararikei,
novararikei TO c_novararikei,
decararikei TO c_decararikei,
janararikei TO c_janararikei,
febararikei TO c_febararikei,
marararikei TO c_marararikei,
sum_segarari TO c_zzaramonkei,
aprritukei TO c_aprritukei,
mayritukei TO c_mayritukei,
junritukei TO c_junritukei,
julritukei TO c_julritukei,
augritukei TO c_augritukei,
sepritukei TO c_sepritukei,
octritukei TO c_octritukei,
novritukei TO c_novritukei,
decritukei TO c_decritukei,
janritukei TO c_janritukei,
febritukei TO c_febritukei,
marritukei TO c_marritukei,
sum_segritu TO c_zzritumonkei.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_maynetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_julnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_augnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_sepnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_jannetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_marnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_mayararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_julararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_augararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_separarikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_janararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_marararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_netwrmonkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_zzaramonkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_aprritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_mayritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_junritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_julritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_sepritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_octritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_novritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_decritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_janritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_febritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_marritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_marararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_zzritumonkei.

*----------------------------------------------------------
***  売上総計・粗利総計計算
*----------------------------------------------------------
* 月別売上総計
alljannetwrkei = alljannetwrkei + jannetwrkei.
allfebnetwrkei = allfebnetwrkei + febnetwrkei.
allmarnetwrkei = allmarnetwrkei + marnetwrkei.
allaprnetwrkei = allaprnetwrkei + aprnetwrkei.
allmaynetwrkei = allmaynetwrkei + maynetwrkei.
alljunnetwrkei = alljunnetwrkei + junnetwrkei.
alljulnetwrkei = alljulnetwrkei + julnetwrkei.
allaugnetwrkei = allaugnetwrkei + augnetwrkei.
allsepnetwrkei = allsepnetwrkei + sepnetwrkei.
alloctnetwrkei = alloctnetwrkei + octnetwrkei.
allnovnetwrkei = allnovnetwrkei + novnetwrkei.
alldecnetwrkei = alldecnetwrkei + decnetwrkei.
* 月別粗利総計
alljanararikei = alljanararikei + janararikei.
allfebararikei = allfebararikei + febararikei.
allmarararikei = allmarararikei + marararikei.
allaprararikei = allaprararikei + aprararikei.
allmayararikei = allmayararikei + mayararikei.
alljunararikei = alljunararikei + junararikei.
alljulararikei = alljulararikei + julararikei.
allaugararikei = allaugararikei + augararikei.
allsepararikei = allsepararikei + separarikei.
alloctararikei = alloctararikei + octararikei.
allnovararikei = allnovararikei + novararikei.
alldecararikei = alldecararikei + decararikei.
* 総合計
sum_allnetwr = sum_allnetwr + sum_segnetwr.
sum_allarari = sum_allarari + sum_segarari.

*----------------------------------------------------------
***  総粗利率の月別粗利率計算 ( 粗利率 = 粗利計 / 売上計 )
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利計 / 売上計
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
* 1月
IF alljanararikei = 0.
alljanritukei = '0.0'.
ELSEIF alljannetwrkei = 0.
alljanritukei = '-100.0'.
ELSEIF ( alljannetwrkei = alljanararikei ).
alljanritukei = '100.0'.
ELSE.
alljanritukei = ( alljanararikei / alljannetwrkei ) * 100.
ENDIF.
* 2月
IF allfebararikei = 0.
allfebritukei = '0.0'.
ELSEIF allfebnetwrkei = 0.
allfebritukei = '-100.0'.
ELSEIF ( allfebnetwrkei = allfebararikei ).
allfebritukei = '100.0'.
ELSE.
allfebritukei = ( allfebararikei / allfebnetwrkei ) * 100.
ENDIF.
* 3月
IF allmarararikei = 0.
allmarritukei = '0.0'.
ELSEIF allmarnetwrkei = 0.
allmarritukei = '-100.0'.
ELSEIF ( allmarnetwrkei = allmarararikei ).
allmarritukei = '100.0'.
ELSE.
allmarritukei = ( allmarararikei / allmarnetwrkei ) * 100.
ENDIF.
* 4月
IF allaprararikei = 0.
allaprritukei = '0.0'.
ELSEIF allaprnetwrkei = 0.
allaprritukei = '-100.0'.
ELSEIF ( allaprnetwrkei = allaprararikei ).
allaprritukei = '100.0'.
ELSE.
allaprritukei = ( allaprararikei / allaprnetwrkei ) * 100.
ENDIF.
* 5月
IF allmayararikei = 0.
allmayritukei = '0.0'.
ELSEIF allmaynetwrkei = 0.
allmayritukei = '-100.0'.
ELSEIF ( allmaynetwrkei = allmayararikei ).
allmayritukei = '100.0'.
ELSE.
allmayritukei = ( allmayararikei / allmaynetwrkei ) * 100.
ENDIF.
* 6月
IF alljunararikei = 0.
alljunritukei = '0.0'.
ELSEIF alljunnetwrkei = 0.
alljunritukei = '-100.0'.
ELSEIF ( alljunnetwrkei = alljunararikei ).
alljunritukei = '100.0'.
ELSE.
alljunritukei = ( alljunararikei / alljunnetwrkei ) * 100.
ENDIF.
* 7月
IF alljulararikei = 0.
alljulritukei = '0.0'.
ELSEIF alljulnetwrkei = 0.
alljulritukei = '-100.0'.
ELSEIF ( alljulnetwrkei = alljulararikei ).
alljulritukei = '100.0'.
ELSE.
alljulritukei = ( alljulararikei / alljulnetwrkei ) * 100.
ENDIF.
* 8月
IF allaugararikei = 0.
allaugritukei = '0.0'.
ELSEIF allaugnetwrkei = 0.
allaugritukei = '-100.0'.
ELSEIF ( allaugnetwrkei = allaugararikei ).
allaugritukei = '100.0'.
ELSE.
allaugritukei = ( allaugararikei / allaugnetwrkei ) * 100.
ENDIF.
* 9月
IF allsepararikei = 0.
allsepritukei = '0.0'.
ELSEIF allsepnetwrkei = 0.
allsepritukei = '-100.0'.
ELSEIF ( allsepnetwrkei = allsepararikei ).
allsepritukei = '100.0'.
ELSE.
allsepritukei = ( allsepararikei / allsepnetwrkei ) * 100.
ENDIF.
* 10月
IF alloctararikei = 0.
alloctritukei = '0.0'.
ELSEIF alloctnetwrkei = 0.
alloctritukei = '-100.0'.
ELSEIF ( alloctnetwrkei = alloctararikei ).
alloctritukei = '100.0'.
ELSE.
alloctritukei = ( alloctararikei / alloctnetwrkei ) * 100.
ENDIF.
* 11月
IF allnovararikei = 0.
allnovritukei = '0.0'.
ELSEIF allnovnetwrkei = 0.
allnovritukei = '-100.0'.
ELSEIF ( allnovnetwrkei = allnovararikei ).
allnovritukei = '100.0'.
ELSE.
allnovritukei = ( allnovararikei / allnovnetwrkei ) * 100.
ENDIF.
* 12月
IF alldecararikei = 0.
alldecritukei = '0.0'.
ELSEIF alldecnetwrkei = 0.
alldecritukei = '-100.0'.
ELSEIF ( alldecnetwrkei = alldecararikei ).
alldecritukei = '100.0'.
ELSE.
alldecritukei = ( alldecararikei / alldecnetwrkei ) * 100.
ENDIF.

*----------------------------------------------------------
***  金額表示が'千円'の場合
*　　セグメント別の売上総計・実績総計を単位変換された金額で計算する
*----------------------------------------------------------
IF r_senen = 'X'.
sum_allnetwr = allaprnetwrkei +
allmaynetwrkei +
alljunnetwrkei +
alljulnetwrkei +
allaugnetwrkei +
allsepnetwrkei +
alloctnetwrkei +
allnovnetwrkei +
alldecnetwrkei +
alljannetwrkei +
allfebnetwrkei +
allmarnetwrkei.

sum_allarari = allaprararikei +
allmayararikei +
alljunararikei +
alljulararikei +
allaugararikei +
allsepararikei +
alloctararikei +
allnovararikei +
alldecararikei +
alljanararikei +
allfebararikei +
allmarararikei.

ENDIF.

*----------------------------------------------------------
***  総粗利率計算 ( 粗利率 = 粗利 / 売上 )
*    粗利が０の場合、粗利率 0％
*    売上が０の場合、粗利率 -100%
*    売上と粗利が同じ金額・同じ符号の場合、粗利率 100％
*　　その他の場合、粗利率 = 粗利 / 売上
*    (但し、粗利がマイナスの時は粗利率もマイナス)
*----------------------------------------------------------
IF sum_allarari = 0.
sum_allritu = '0.0'.
ELSEIF sum_allnetwr = 0.
sum_allritu = '-100.0'.
ELSEIF ( sum_allnetwr = sum_allarari ).
sum_allritu = '100.0'.
ELSE.
sum_allritu = ( sum_allarari / sum_allnetwr ) * 100.
ENDIF.

*----------------------------------------------------------
*** マイナス記号を後から前に移動する
*----------------------------------------------------------
*　数値型を文字型へ変換
*----------------------------------------------------------
WRITE:  allaprnetwrkei TO c_allaprnetwrkei,
allmaynetwrkei TO c_allmaynetwrkei,
alljunnetwrkei TO c_alljunnetwrkei,
alljulnetwrkei TO c_alljulnetwrkei,
allaugnetwrkei TO c_allaugnetwrkei,
allsepnetwrkei TO c_allsepnetwrkei,
alloctnetwrkei TO c_alloctnetwrkei,
allnovnetwrkei TO c_allnovnetwrkei,
alldecnetwrkei TO c_alldecnetwrkei,
alljannetwrkei TO c_alljannetwrkei,
allfebnetwrkei TO c_allfebnetwrkei,
allmarnetwrkei TO c_allmarnetwrkei,
sum_allnetwr TO c_allnetwrmonkei,
allaprararikei TO c_allaprararikei,
allmayararikei TO c_allmayararikei,
alljunararikei TO c_alljunararikei,
alljulararikei TO c_alljulararikei,
allaugararikei TO c_allaugararikei,
allsepararikei TO c_allsepararikei,
alloctararikei TO c_alloctararikei,
allnovararikei TO c_allnovararikei,
alldecararikei TO c_alldecararikei,
alljanararikei TO c_alljanararikei,
allfebararikei TO c_allfebararikei,
allmarararikei TO c_allmarararikei,
sum_allarari TO c_allzzaramonkei,
allaprritukei TO c_allaprritukei,
allmayritukei TO c_allmayritukei,
alljunritukei TO c_alljunritukei,
alljulritukei TO c_alljulritukei,
allaugritukei TO c_allaugritukei,
allsepritukei TO c_allsepritukei,
alloctritukei TO c_alloctritukei,
allnovritukei TO c_allnovritukei,
alldecritukei TO c_alldecritukei,
alljanritukei TO c_alljanritukei,
allfebritukei TO c_allfebritukei,
allmarritukei TO c_allmarritukei,
sum_allritu TO c_allzzritumonkei.

*----------------------------------------------------------
*   汎用モジュール CLOI_PUT_SIGN_IN_FRONTを使用
*----------------------------------------------------------
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allaprnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allmaynetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alljunnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alljulnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allaugnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allsepnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alloctnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allnovnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alldecnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alljannetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allfebnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allmarnetwrkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allaprararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allmayararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alljunararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alljulararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allaugararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allsepararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alloctararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allnovararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alldecararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alljanararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allfebararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allmarararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allnetwrmonkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allzzaramonkei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allaprritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allmayritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alljunritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alljulritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allsepritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alloctritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allnovritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alldecritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_alljanritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allfebritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allmarritukei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allmarararikei.
CALL FUNCTION 'CLOI_PUT_SIGN_IN_FRONT'
CHANGING
value = c_allzzritumonkei.

*----------------------------------------------------------
***  品目階層グループ別出力
*----------------------------------------------------------
WRITE: /01(06) flghgr CENTERED,                       "小区分
07(40) '計',
47(06) text-065,                              "売上計
53(16) c_aprnetwrkei RIGHT-JUSTIFIED,         "4月売上計
69(16) c_maynetwrkei RIGHT-JUSTIFIED,         "5月売上計
85(16) c_junnetwrkei RIGHT-JUSTIFIED,         "6月売上計
101(16) c_julnetwrkei RIGHT-JUSTIFIED,        "7月売上計
117(16) c_augnetwrkei RIGHT-JUSTIFIED,        "8月売上計
133(16) c_sepnetwrkei RIGHT-JUSTIFIED,        "9月売上計
149(16) c_octnetwrkei RIGHT-JUSTIFIED,        "10月売上計
165(16) c_novnetwrkei RIGHT-JUSTIFIED,        "11月売上計
181(16) c_decnetwrkei RIGHT-JUSTIFIED,        "12月売上計
197(16) c_jannetwrkei RIGHT-JUSTIFIED,        "1月売上計
213(16) c_febnetwrkei RIGHT-JUSTIFIED,        "2月売上計
229(16) c_marnetwrkei RIGHT-JUSTIFIED,        "3月売上計
245(16) c_netwrmonkei RIGHT-JUSTIFIED,        "売上計
/47(06) text-066,                              "粗利計
53(16) c_aprararikei RIGHT-JUSTIFIED,         "4月粗利計
69(16) c_mayararikei RIGHT-JUSTIFIED,         "5月粗利計
85(16) c_junararikei RIGHT-JUSTIFIED,         "6月粗利計
101(16) c_julararikei RIGHT-JUSTIFIED,        "7月粗利計
117(16) c_augararikei RIGHT-JUSTIFIED,        "8月粗利計
133(16) c_separarikei RIGHT-JUSTIFIED,        "9月粗利計
149(16) c_octararikei RIGHT-JUSTIFIED,        "10月粗利計
165(16) c_novararikei RIGHT-JUSTIFIED,        "11月粗利計
181(16) c_decararikei RIGHT-JUSTIFIED,        "12月粗利計
197(16) c_janararikei RIGHT-JUSTIFIED,        "1月粗利計
213(16) c_febararikei RIGHT-JUSTIFIED,        "2月粗利計
229(16) c_marararikei RIGHT-JUSTIFIED,        "3月粗利計
245(16) c_zzaramonkei RIGHT-JUSTIFIED,        "粗利計
/47(06) text-064,                              "粗利率
53(16) c_aprritukei RIGHT-JUSTIFIED,          "4月粗利率
69(16) c_mayritukei RIGHT-JUSTIFIED,          "5月粗利率
85(16) c_junritukei RIGHT-JUSTIFIED,          "6月粗利率
101(16) c_julritukei RIGHT-JUSTIFIED,         "7月粗利率
117(16) c_augritukei RIGHT-JUSTIFIED,         "8月粗利率
133(16) c_sepritukei RIGHT-JUSTIFIED,         "9月粗利率
149(16) c_octritukei RIGHT-JUSTIFIED,         "10月粗利率
165(16) c_novritukei RIGHT-JUSTIFIED,         "11月粗利率
181(16) c_decritukei RIGHT-JUSTIFIED,         "12月粗利率
197(16) c_janritukei RIGHT-JUSTIFIED,         "1月粗利率
213(16) c_febritukei RIGHT-JUSTIFIED,         "2月粗利率
229(16) c_marritukei RIGHT-JUSTIFIED,         "3月粗利率
245(16) c_zzritumonkei RIGHT-JUSTIFIED,       "粗利率
/01(262) sy-uline.                             "下線

*----------------------------------------------------------
*** 総合計出力
*----------------------------------------------------------
WRITE: /1(03) space,
7(40) '合計' CENTERED,
47(06) text-065,                               "粗利計
53(16) allaprnetwrkei RIGHT-JUSTIFIED,        "4月売上計
69(16) allmaynetwrkei RIGHT-JUSTIFIED,        "5月売上計
85(16) alljunnetwrkei RIGHT-JUSTIFIED,        "6月売上計
101(16) alljulnetwrkei RIGHT-JUSTIFIED,       "7月売上計
117(16) allaugnetwrkei RIGHT-JUSTIFIED,       "8月売上計
133(16) allsepnetwrkei RIGHT-JUSTIFIED,       "9月売上計
149(16) alloctnetwrkei RIGHT-JUSTIFIED,       "10月売上計
165(16) allnovnetwrkei RIGHT-JUSTIFIED,       "11月売上計
181(16) alldecnetwrkei RIGHT-JUSTIFIED,       "12月売上計
197(16) alljannetwrkei RIGHT-JUSTIFIED,       "1月売上計
213(16) allfebnetwrkei RIGHT-JUSTIFIED,       "2月売上計
229(16) allmarnetwrkei RIGHT-JUSTIFIED,       "3月売上計
245(16) sum_allnetwr RIGHT-JUSTIFIED,        "売上計
/47(06) text-066,                              "粗利計
53(16) allaprararikei RIGHT-JUSTIFIED,        "4月粗利計
69(16) allmayararikei RIGHT-JUSTIFIED,        "5月粗利計
85(16) alljunararikei RIGHT-JUSTIFIED,        "6月粗利計
101(16) alljulararikei RIGHT-JUSTIFIED,       "7月粗利計
117(16) allaugararikei RIGHT-JUSTIFIED,       "8月粗利計
133(16) allsepararikei RIGHT-JUSTIFIED,       "9月粗利計
149(16) alloctararikei RIGHT-JUSTIFIED,       "10月粗利計
165(16) allnovararikei RIGHT-JUSTIFIED,       "11月粗利計
181(16) alldecararikei RIGHT-JUSTIFIED,       "12月粗利計
197(16) alljanararikei RIGHT-JUSTIFIED,       "1月粗利計
213(16) allfebararikei RIGHT-JUSTIFIED,       "2月粗利計
229(16) allmarararikei RIGHT-JUSTIFIED,       "3月粗利計
245(16) sum_allarari RIGHT-JUSTIFIED,        "粗利計
/47(06) text-064,                              "粗利率
53(16) allaprritukei RIGHT-JUSTIFIED,         "4月粗利率
69(16) allmayritukei RIGHT-JUSTIFIED,         "5月粗利率
85(16) alljunritukei RIGHT-JUSTIFIED,         "6月粗利率
101(16) alljulritukei RIGHT-JUSTIFIED,        "7月粗利率
117(16) allaugritukei RIGHT-JUSTIFIED,        "8月粗利率
133(16) allsepritukei RIGHT-JUSTIFIED,        "9月粗利率
149(16) alloctritukei RIGHT-JUSTIFIED,        "10月粗利率
165(16) allnovritukei RIGHT-JUSTIFIED,        "11月粗利率
181(16) alldecritukei RIGHT-JUSTIFIED,        "12月粗利率
197(16) alljanritukei RIGHT-JUSTIFIED,        "1月粗利率
213(16) allfebritukei RIGHT-JUSTIFIED,        "2月粗利率
229(16) allmarritukei RIGHT-JUSTIFIED,        "3月粗利率
245(16) sum_allritu RIGHT-JUSTIFIED,       "粗利率
/01(262) sy-uline.                             "下線

*----------------------------------------------------------
***  レポート出力
*----------------------------------------------------------
IF r_down = 'X'.

*　1行目(売上計行)
CONCATENATE
flghgr                                 "品目階層グループ
'計'
text-065                               "'売上計'
c_aprnetwrkei                                     "4月売上計
c_maynetwrkei                                     "5月売上計
c_junnetwrkei                                     "6月売上計
c_julnetwrkei                                     "7月売上計
c_augnetwrkei                                     "8月売上計
c_sepnetwrkei                                     "9月売上計
c_octnetwrkei                                     "10月売上計
c_novnetwrkei                                     "11月売上計
c_decnetwrkei                                     "12月売上計
c_jannetwrkei                                     "1月売上計
c_febnetwrkei                                     "2月売上計
c_marnetwrkei                                     "3月売上計
c_netwrmonkei                          "売上計
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*        SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--
*　2行目(粗利計行)
CONCATENATE
space                                  "空白
space                                  "空白
text-066                               "'粗利計'
c_aprararikei                                     "4月粗利計
c_mayararikei                                     "5月粗利計
c_junararikei                                     "6月粗利計
c_julararikei                                     "7月粗利計
c_augararikei                                     "8月粗利計
c_separarikei                                     "9月粗利計
c_octararikei                                     "10月粗利計
c_novararikei                                     "11月粗利計
c_decararikei                                     "12月粗利計
c_janararikei                                     "1月粗利計
c_febararikei                                     "2月粗利計
c_marararikei                                     "3月粗利計
c_zzaramonkei                          "粗利計
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*        SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--
*  3行目(粗利率)
CONCATENATE
space                                  "空白
space                                  "空白
text-064                               "'粗利率'
c_aprritukei                                      "4月粗利率
c_mayritukei                                      "5月粗利率
c_junritukei                                      "6月粗利率
c_julritukei                                      "7月粗利率
c_augritukei                                      "8月粗利率
c_sepritukei                                      "9月粗利率
c_octritukei                                      "10月粗利率
c_novritukei                                      "11月粗利率
c_decritukei                                      "12月粗利率
c_janritukei                                      "1月粗利率
c_febritukei                                      "2月粗利率
c_marritukei                                      "3月粗利率
c_zzritumonkei                         "粗利率
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*        SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--
*-------------------------------------------------------------------
***  総合計
*-------------------------------------------------------------------
*　1行目(売上総計行)
CONCATENATE
*            space
*            space                                         "空白
space                                         "空白
'合計'
text-065                                        "'売上計'
c_allaprnetwrkei                                "4月売上計
c_allmaynetwrkei                                "5月売上計
c_alljunnetwrkei                                "6月売上計
c_alljulnetwrkei                                "7月売上計
c_allaugnetwrkei                                "8月売上計
c_allsepnetwrkei                                "9月売上計
c_alloctnetwrkei                                "10月売上計
c_allnovnetwrkei                                "11月売上計
c_alldecnetwrkei                                "12月売上計
c_alljannetwrkei                                "1月売上計
c_allfebnetwrkei                                "2月売上計
c_allmarnetwrkei                                "3月売上計
c_allnetwrmonkei                                "売上計
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*      SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--
*　2行目(粗利総計行)
CONCATENATE
*              space                                         "空白
*              space                                         "空白
space                                         "空白
space                                         "空白
text-066                                      "'粗利計'
c_allaprararikei                              "4月粗利計
c_allmayararikei                              "5月粗利計
c_alljunararikei                              "6月粗利計
c_alljulararikei                              "7月粗利計
c_allaugararikei                              "8月粗利計
c_allsepararikei                              "9月粗利計
c_alloctararikei                              "10月粗利計
c_allnovararikei                              "11月粗利計
c_alldecararikei                              "12月粗利計
c_alljanararikei                              "1月粗利計
c_allfebararikei                              "2月粗利計
c_allmarararikei                              "3月粗利計
c_allzzaramonkei                              "粗利計
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*       SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--

*  3行目(総計粗利率)
CONCATENATE
*              space                                         "空白
*              space                                         "空白
space                                          "空白
space                                          "空白
text-064                                       "'粗利率'
c_allaprritukei                               "4月粗利率
c_allmayritukei                               "5月粗利率
c_alljunritukei                               "6月粗利率
c_alljulritukei                               "7月粗利率
c_allaugritukei                               "8月粗利率
c_allsepritukei                               "9月粗利率
c_alloctritukei                               "10月粗利率
c_allnovritukei                               "11月粗利率
c_alldecritukei                               "12月粗利率
c_alljanritukei                               "1月粗利率
c_allfebritukei                               "2月粗利率
c_allmarritukei                               "3月粗利率
c_allzzritumonkei                              "粗利率
INTO  yosan_line
* Mod ES-UP 2012/08/17 -->
*       SEPARATED BY w_tab.
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/17 <--
* Mod ES-UP 2012/10/29 -->
clear: gf_yosandl.
gf_yosandl-yosan_line = yosan_line.
*      APPEND yosan_line TO gt_yosandl.
APPEND gf_yosandl TO gt_yosandl.
* Mod ES-UP 2012/10/29 <--
ENDIF.

ENDAT.
ENDLOOP.

ENDFORM.                    " FRM_WRITE_DETAIL

***********************************************************************
***  ダウンロード処理
***********************************************************************
*---------------------------------------------------------------------*
***  Form  FRM_CHK_FILE
*    ファイル名呼び出し(保存する場所選択画面表示)
*---------------------------------------------------------------------*
FORM frm_chk_file.
* Add ES-UP 2012/08/17 -->
DATA: L_FILENAME    TYPE STRING,
L_PATH        TYPE STRING,
L_FULLPATH    TYPE STRING,
L_TITLE       TYPE STRING,
L_USER_ACTION TYPE I.
* Add ES-UP 2012/08/17 <--
* IRを出力する場合
IF r_ir = 'X'.
* Mod ES-UP 2012/08/17 -->
*    CALL FUNCTION 'WS_FILENAME_GET'
*         EXPORTING
*              mask     = '*.*,ALL Files,*.*. '
*              mode     = 'S'
*              title    = 'IR用レポート'
*         IMPORTING
*              filename = p_file
*         EXCEPTIONS
*              OTHERS   = 5.
*    IF sy-subrc <> 0.
*    ENDIF.
L_TITLE = `IR用レポート`.
* Mod ES-UP 2012/08/17 <--
* 人事を出力する場合
* Mod ES-UP 2012/08/17 -->
*  ELSEIF r_ir = 'X'.
*    CALL FUNCTION 'WS_FILENAME_GET'
*         EXPORTING
*              mask     = '*.*,ALL Files,*.*. '
*              mode     = 'S'
*              title    = '人事用レポート'
*         IMPORTING
*              filename = p_file
*         EXCEPTIONS
*              OTHERS   = 5.
*    IF sy-subrc <> 0.
*    ENDIF.
else.
L_TITLE = `人事用レポート`.
* Mod ES-UP 2012/08/17 <--
ENDIF.
* Add ES-UP 2012/08/17 <--
CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG(
EXPORTING
WINDOW_TITLE         = L_TITLE
*      DEFAULT_EXTENSION    = DEFAULT_EXTENSION
*      DEFAULT_FILE_NAME    = DEFAULT_FILE_NAME
*      WITH_ENCODING        = WITH_ENCODING
*      FILE_FILTER          = FILE_FILTER
*      INITIAL_DIRECTORY    = INITIAL_DIRECTORY
*      PROMPT_ON_OVERWRITE  = 'X'
CHANGING
FILENAME             = L_FILENAME
PATH                 = L_PATH
FULLPATH             = L_FULLPATH
USER_ACTION          = L_USER_ACTION
*      FILE_ENCODING        = FILE_ENCODING
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4 ).
IF SY-SUBRC = 0
AND L_USER_ACTION = CL_GUI_FRONTEND_SERVICES=>ACTION_OK.
P_FILE = L_FULLPATH.
ENDIF.
* Add ES-UP 2012/08/17 -->
ENDFORM.                    " FRM_CHK_FILE

*---------------------------------------------------------------------*
***  Form  FRM_DATA_DL
*    ローカルサーバにファイルをダウンロード
*---------------------------------------------------------------------*
FORM frm_data_dl.
* Mod ES-UP 2012/08/17 -->
*  CALL FUNCTION 'WS_DOWNLOAD'
*       EXPORTING
*            filename                = p_file
*            filetype                = 'DAT'
*            mode                    = ' '
*       TABLES
*            data_tab                = gt_yosandl  "ダウンロードデータ
*       EXCEPTIONS
*            file_open_error         = 1
*            file_write_error        = 2
*            invalid_filesize        = 3
*            invalid_type            = 4
*            no_batch                = 5
*            unknown_error           = 6
*            invalid_table_width     = 7
*            gui_refuse_filetransfer = 8
*            customer_error          = 9
*            OTHERS                  = 10.
DATA: L_FILENAME TYPE STRING,
L_CODEPAGE TYPE ABAP_ENCODING,
**** START ADD 2015/02/03 ISID11 ****
L_Z_OUTPUT_CP TYPE  ZTEGZZM001-Z_OUTPUT_CP,
L_SAPCODEPAGE TYPE STRING,
**** END ADD 2015/02/03 ISID11 ****
L_TRUNC    TYPE ABAP_BOOL.

**** START ADD 2015/02/03 ISID11 ****
CALL FUNCTION 'ZEG_ZZ_GLOBAL_PGM_CONFIG_GET'
EXPORTING
IMPPGM      = SY-REPID
IMPBUKRS    = TEXT-102
IMPORTING
EXPCODEPAGE = L_Z_OUTPUT_CP.
**** END ADD 2015/02/03 ISID11 ****

L_FILENAME = P_FILE.
L_TRUNC    = ABAP_TRUE. "固定長のときは、ABAP_FALSE
****START UPD 2014/08/29 ISID18****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
**** START UPD 2015/02/03 ISID11 ****
*  L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_UTF ).
L_SAPCODEPAGE = L_Z_OUTPUT_CP.
IF L_SAPCODEPAGE IS NOT INITIAL.

L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( L_SAPCODEPAGE ).

ENDIF.
**** END UPD 2015/02/03 ISID11 ****
****END UPD 2014/08/29 ISID18****
CL_GUI_FRONTEND_SERVICES=>GUI_DOWNLOAD(
EXPORTING
*      BIN_FILESIZE              = BIN_FILESIZE
FILENAME                  = L_FILENAME
FILETYPE                  = 'DAT'
*      APPEND                    = SPACE
WRITE_FIELD_SEPARATOR     = ABAP_TRUE
*      HEADER                    = '00'
TRUNC_TRAILING_BLANKS     = L_TRUNC
*      WRITE_LF                  = 'X'
*      COL_SELECT                = SPACE
*      COL_SELECT_MASK           = SPACE
*      DAT_MODE                  = SPACE
*      CONFIRM_OVERWRITE         = SPACE
*      NO_AUTH_CHECK             = SPACE
CODEPAGE                  = L_CODEPAGE
*      IGNORE_CERR               = ABAP_TRUE
*      REPLACEMENT               = '#'
*      WRITE_BOM                 = SPACE
TRUNC_TRAILING_BLANKS_EOL = L_TRUNC
*      WK1_N_FORMAT              = SPACE
*      WK1_N_SIZE                = SPACE
*      WK1_T_FORMAT              = SPACE
*      WK1_T_SIZE                = SPACE
*      SHOW_TRANSFER_STATUS      = 'X'
*      FIELDNAMES                = FIELDNAMES
*      WRITE_LF_AFTER_LAST_LINE  = 'X'
*    IMPORTING
*      FILELENGTH                = FILELENGTH
CHANGING
DATA_TAB                  = gt_yosandl
EXCEPTIONS
FILE_WRITE_ERROR          = 1
NO_BATCH                  = 2
GUI_REFUSE_FILETRANSFER   = 3
INVALID_TYPE              = 4
NO_AUTHORITY              = 5
UNKNOWN_ERROR             = 6
HEADER_NOT_ALLOWED        = 7
SEPARATOR_NOT_ALLOWED     = 8
FILESIZE_NOT_ALLOWED      = 9
HEADER_TOO_LONG           = 10
DP_ERROR_CREATE           = 11
DP_ERROR_SEND             = 12
DP_ERROR_WRITE            = 13
UNKNOWN_DP_ERROR          = 14
ACCESS_DENIED             = 15
DP_OUT_OF_MEMORY          = 16
DISK_FULL                 = 17
DP_TIMEOUT                = 18
FILE_NOT_FOUND            = 19
DATAPROVIDER_EXCEPTION    = 20
CONTROL_FLUSH_ERROR       = 21
NOT_SUPPORTED_BY_GUI      = 22
ERROR_NO_GUI              = 23
OTHERS                    = 24 ).
* Mod ES-UP 2012/08/17 <--
IF sy-subrc = 0.
MESSAGE   s400(z1) WITH 'ダウンロードに成功しました'.
ELSE.
MESSAGE  e400(z1) WITH 'ダウンロードできませんでした'.
ENDIF.
ENDFORM.                    " FRM_DATA_DL
