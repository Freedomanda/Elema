REPORT ZZKAJI08     MESSAGE-ID  Y1
LINE-SIZE  170
LINE-COUNT  58
NO STANDARD PAGE HEADING.
************************************************************************
* REPORT
* PROGRAM       一括請求書 請求額リカバリPG
* MAKE DATE     2000.10.17
* CODING BY     K.KAJISA(NDSC)
* 変更履歴
************************************************************************
TABLES:YK510,YK310,KNA1,STXH,TVTA,KNVV,T052,TVKBT.
************************************************************************
data : begin of st_yk510,
BUKRS   LIKE YK510-BUKRS,
KUNNR   LIKE YK510-KUNNR,
VKORG   LIKE YK510-VKORG,
VTWEG   LIKE YK510-VTWEG,
SPART   LIKE YK510-SPART,
ZFBDT   LIKE YK510-ZFBDT,
CSTAMT  LIKE YK510-CSTAMT,
WAERS   LIKE YK510-WAERS,
end   of st_yk510 .
data : begin of st_yk310,
BUKRS   LIKE YK310-BUKRS,
KUNNR   LIKE YK310-KUNNR,
ZFBDT   LIKE YK310-ZFBDT,
VKBUR   LIKE YK310-VKBUR,
INCDOC  LIKE YK310-INCDOC,
INCDAT  LIKE YK310-INCDAT,
WAERS   LIKE YK310-WAERS,
INCAMT  LIKE YK310-INCAMT,
FIFLG   LIKE YK310-FIFLG,
end   of st_yk310 .
data : begin of st_MACH,
KUNNR   LIKE YK310-KUNNR,
VKBUR   LIKE YK310-VKBUR,
INCDOC  LIKE YK310-INCDOC,
ZFBDT   LIKE YK310-ZFBDT,
BUKRS   LIKE YK510-BUKRS,
VKORG   LIKE YK510-VKORG,
VTWEG   LIKE YK510-VTWEG,
SPART   LIKE YK510-SPART,
INCDAT  LIKE YK310-INCDAT,
INCAMT  LIKE YK310-INCAMT,
INCAMT2 LIKE YK310-INCAMT,
STS(30)  TYPE C,
WAERS   LIKE YK510-WAERS,
NEW(1)  TYPE C,
end   of st_MACH.
data : begin of st_KNA1,
KUNNR LIKE kNA1-KUNNR,
NAMe1 LIKE kNA1-NAME1,
end   of st_KNA1.
data : begin of ST_STXH,
TDNAME LIKE stxh-TDNAME,
end   of st_STXH.
data : begin of ST_KNVp,
KUNNR LIKE KNVP-KUNNR,
VKORG LIKE KNVP-VKORG,
VTWEG LIKE KNVP-VTWEG,
SPART LIKE KNVP-SPART,
PARVW LIKE KNVP-PARVW,
KUNN2 LIKE KNVP-KUNN2,
end   of st_KNVp.
data : begin of ST_KNVV,
KUNNR LIKE KNVV-KUNNR,
VKORG LIKE KNVV-VKORG,
VTWEG LIKE KNVV-VTWEG,
SPART LIKE KNVV-SPART,
ZTERM LIKE KNVV-ZTERM,
VKBUR LIKE KNVV-VKBUR,
VKGRP LIKE KNVV-VKGRP,
end   of st_KNVV.
data : begin of ST_TVTA,
VKORG LIKE TVTA-VKORG,
VTWEG LIKE TVTA-VTWEG,
SPART LIKE TVTA-SPART,
SPAKU LIKE TVTA-SPAKU,
end   of st_TVTA.

data : i_yk510   like table of st_yk510 with header line .
data : i_yk310   like table of st_yk310 with header line .
data : i_yk310_2 like table of st_yk310 with header line .
data : i_MACH    like table of st_MACH  with header line .
data : i_KNA1    like table of st_KNA1  with header line .
data : i_STXH    like table of st_STXH  with header line .
data : i_STXH_D  like table of st_STXH  with header line .
data : i_KNVP    like table of st_KNVP  with header line .
data : i_KNVV    like table of st_KNVV  with header line .
data : i_TVTA    like table of st_TVTA  with header line .
data  begin of  ST_yk310_D.
include STRUCTURE YK310.
DATA  END OF  ST_yk310_D.
DATA:CNT_REC    TYPE P.
DATA:CNT_EDIT   TYPE P.
DATA:FLG_ERR(1) TYPE C.
************************************************************************
parameters     : p_bukrs like yk310-bukrs obligatory default 'C001'
MEMORY ID BUK.
select-options : s_kunnr for  yk310-kunnr,
s_ZFBDT for  yk310-ZFBDT.
parameters     : p_TEST as CHECKBOX default 'X'.
************************************************************************
START-OF-SELECTION.

PERFORM INIT_PROC.
PERFORM MAIN_PROC.

************************************************************************
TOP-OF-PAGE.
WRITE: /001 '一括請求書、請求額リカバリ一覧',
133 'Page.', sy-pagno.
WRITE: /133 '作成日時', sy-datum, sy-uzeit.
ULINE.
WRITE:  /1 '得意先',
12 '名称',
49 '営業所',
57 '入力予定番号',
70 '締日',
82 '入力予定日',
94 '入金予定額(修正後)',
116 '入金予定額(修正前)',
138 'ステータス'.
ULINE.
*&---------------------------------------------------------------------*
*&      Form  INIT_PROC
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
FORM INIT_PROC.
CLEAR  :I_YK310,i_YK510,I_KNA1,I_MACH.
REFRESH:I_YK310,i_YK510,I_KNA1,I_MACH.

ENDFORM.                    " INIT_PROC

*&---------------------------------------------------------------------*
*&      Form  MAIN_PROC
*&---------------------------------------------------------------------*
*       主処理
*----------------------------------------------------------------------*
FORM MAIN_PROC.

PERFORM GET_YK510.
PERFORM GET_YK310.
PERFORM GET_STXH.
PERFORM GET_KNVP.
PERFORM MACH_DATA.
PERFORM WRITE_DATA.

ENDFORM.                    " MAIN_PROC

*&---------------------------------------------------------------------*
*&      Form  GET_YK510
*&---------------------------------------------------------------------*
*       一括請求書ヘッダデータ
*----------------------------------------------------------------------*
FORM GET_YK510.

SELECT BUKRS KUNNR VKORG VTWEG SPART ZFBDT CSTAMT WAERS
INTO CORRESPONDING FIELDS OF TABLE I_YK510 FROM YK510
WHERE BUKRS =  P_BUKRS
AND KUNNR IN S_KUNNR
AND ZFBDT IN S_ZFBDT.

ENDFORM.                    " GET_YK510
*&---------------------------------------------------------------------*
*&      Form  GET_YK310
*&---------------------------------------------------------------------*
*       入金予定データ
*----------------------------------------------------------------------*
FORM GET_YK310.
SELECT BUKRS KUNNR ZFBDT VKBUR INCDOC INCDAT WAERS INCAMT FIFLG
INTO CORRESPONDING FIELDS OF TABLE I_YK310 FROM YK310
FOR ALL ENTRIES IN I_YK510
WHERE BUKRS  =  I_YK510-BUKRS
AND KUNNR  =  I_YK510-KUNNR
AND ZFBDT  =  I_YK510-ZFBDT
*     AND SGTXT  =  '高千穂請求書'
AND DELFLG <> 'X'.
*     AND FIFLG  <> 'X'.

ENDFORM.                    " GET_YK310
*&---------------------------------------------------------------------*
*&      Form  MACH_DATA
*&---------------------------------------------------------------------*
*       YK510 YK310付け合せ
*----------------------------------------------------------------------*
FORM MACH_DATA.
DATA W_INDEX LIKE SY-TABIX.
SORT:I_YK510 BY BUKRS KUNNR ZFBDT.
SORT:I_YK310 BY BUKRS KUNNR ZFBDT.
LOOP AT I_YK510.
CLEAR: I_MACH,FLG_ERR,W_INDEX.
MOVE-CORRESPONDING I_Yk510 to I_MACH.
*    I_MACH-KUNNR = I_YK510-KUNNR.
*    I_MACH-ZFBDT = I_YK510-ZFBDT.
*    I_MACH-waers = I_YK510-waers.
*    I_MACH-INCAMT  = I_YK510-CSTAMT.
PERFORM chk_stxh.                        "高千穂請求書出力対象チェキ
IF FLG_ERR = 'X'.
*       I_MACH-STS = '高千穂請求書出力対象外'. = 処理対象外
*       APPEND I_MACH.
continue.
ENDIF.
READ TABLE I_YK310 WITH KEY  BUKRS = I_YK510-BUKRS
KUNNR = I_YK510-KUNNR
ZFBDT = I_YK510-ZFBDT
BINARY SEARCH.
IF SY-SUBRC <> 0.                       "データが存在しない
PERFORM CHK_KNVP.
continue.
ELSE.
ST_YK310 =  I_YK310.
LOOP AT I_YK310 FROM SY-TABIX.
IF  I_YK310-BUKRS = I_YK510-BUKRS
AND I_YK310-KUNNR = I_YK510-KUNNR
AND I_YK310-ZFBDT = I_YK510-ZFBDT.
W_INDEX = W_INDEX + 1.
ENDIF.
ENDLOOP.
IF W_INDEX <> 1.                     "N件存在チェック
I_MACH-STS = '対応YK310複数件 対象外'.
APPEND I_MACH.
continue.
ELSE.                                "YK510とYK310が一件づつのとき
I_YK310 = ST_YK310.
IF I_YK310-INCAMT = I_YK510-CSTAMT.
*          FLG_ERR = 'N'.                 "更新の必要がないデータ。
continue.                      "金額が同一なので処理対象外
ELSE.
IF I_YK310-FIFLG = 'X'.         "会計出力済みチェック
I_MACH-STS = '会計連絡済み 対象外'.
APPEND I_MACH.
continue.
ENDIF.
MOVE-CORRESPONDING I_Yk310 to I_MACH.
I_MACH-INCAMT  = I_YK510-CSTAMT.
I_MACH-INCAMT2 = I_YK310-INCAMT.
I_MACH-STS = '金額差違 更新対象'.
I_MACH-NEW = '2'.
APPEND I_MACH.
continue.
ENDIF.
ENDIF.
ENDIF.
ENDLOOP.
FREE:I_YK310,I_YK510,I_KNVP,I_STXH.
SELECT KUNNR NAME1 INTO CORRESPONDING FIELDS OF TABLE I_KNA1 FROM KNA1
FOR ALL ENTRIES IN I_MACH
WHERE KUNNR  =  I_MACH-KUNNR.
SORT I_KNA1 BY KUNNR.
PERFORM GET_KNVP2.
PERFORM GET_KNVV.
ENDFORM.                    " MACH_DATA
*&---------------------------------------------------------------------*
*&      Form  WRITE_DATA
*&---------------------------------------------------------------------*
*       帳票出力
*----------------------------------------------------------------------*
FORM WRITE_DATA.
SORT I_MACH BY KUNNR VKBUR INCDOC ZFBDT INCDAT STS.
CLEAR:CNT_REC,CNT_EDIT.
LOOP AT I_MACH.
CLEAR:I_KNA1.
READ TABLE I_KNA1 WITH KEY KUNNR = I_MACH-KUNNR BINARY SEARCH.
WRITE: /1 I_MACH-KUNNR,
12 I_KNA1-NAME1,
49 I_MACH-VKBUR,
57 I_MACH-INCDOC,
70 I_MACH-ZFBDT,
82 I_MACH-INCDAT,
94 I_MACH-INCAMT  CURRENCY I_MACH-WAERS,
116 I_MACH-INCAMT2 CURRENCY I_MACH-WAERS,
138 I_MACH-STS.
CNT_REC = CNT_REC + 1.
IF I_MACH-NEW <> SPACE AND P_TEST <> 'X'.
CASE I_MACH-NEW.
WHEN '2'.
PERFORM UPDATE_YK310.  "データ更新
WHEN '1'.
PERFORM INSERT_YK310.  "データ登録
ENDCASE.
CNT_EDIT = CNT_EDIT + 1.
ENDIF.
ENDLOOP.
ULINE.
WRITE:/1 '出力件数',CNT_REC,
/1 '更新件数',CNT_EDIT.
ENDFORM.                    " WRITE_DATA
*&---------------------------------------------------------------------*
*&      Form  UPDATE_YK310
*&---------------------------------------------------------------------*
*       データ更新
*----------------------------------------------------------------------*
FORM UPDATE_YK310.
CALL FUNCTION 'ENQUEUE_EY_YK310'
EXPORTING
MANDT                = SY-MANDT
BUKRS                = P_BUKRS
KUNNR                = I_MACH-KUNNR
INCDOC               = I_MACH-INCDOC
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
IF SY-SUBRC <> 0.
WRITE 142 'ロックエラー'.
ROLLBACK WORK. STOP.
EXIT.
ENDIF.
* YK310-INCAMT = I_MACH-INCAMT.
UPDATE YK310 SET INCAMT = I_MACH-INCAMT
UPDDAT = SY-DATUM
UPDTIM = sy-uzeit
UPDUSR = SY-UNAME
WHERE BUKRS  = P_BUKRS
AND KUNNR  = I_MACH-KUNNR
AND INCDOC = I_MACH-INCDOC.
IF SY-SUBRC <> 0.
WRITE 142 '更新エラー'.
ROLLBACK WORK. STOP.
EXIT.
ENDIF.
CALL FUNCTION 'DEQUEUE_EY_YK310'
EXPORTING
MANDT                = SY-MANDT
BUKRS                = P_BUKRS
KUNNR                = I_MACH-KUNNR
INCDOC               = I_MACH-INCDOC
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
PERFORM edit_YK510.
ENDFORM.                    " UPDATE_YK310
*&---------------------------------------------------------------------*
*&      Form  chk_stxh
*&---------------------------------------------------------------------*
*       高千穂請求書対象チェック
*----------------------------------------------------------------------*
FORM chk_stxh.
DATA W_TDNAME LIKE STXH-TDNAME.
CLEAR: I_STXH, W_TDNAME.
* CONCATENATE I_YK510-KUNNR I_YK510-BUKRS into  W_TDNAME.
w_tDNAME(10) = I_YK510-KUNNR.
w_TDNAME+10(4) = I_YK510-BUKRS.
READ TABLE I_STXH WITH KEY TDNAME = W_TDNAME
BINARY search.
IF SY-SUBRC <> 0.
FLG_ERR = 'X'.
ENDIF.
ENDFORM.                    " chk_stxh
*&---------------------------------------------------------------------*
*&      Form  GET_STXH
*&---------------------------------------------------------------------*
*       STXH 読込
*----------------------------------------------------------------------*
FORM GET_STXH.
REFRESH: I_STXH_D,I_STXH.
LOOP At I_YK510.
*   CONCATENATE I_YK510-KUNNR I_YK510-BUKRS INTO  I_STXH_D-TDNAME.
I_STXH_D-TDNAME(10) = I_YK510-KUNNR.
I_STXH_D-TDNAME+10(4) = I_YK510-BUKRS.
APPEND I_STXH_D.
ENDLOOP.
SORT I_STXH_D BY TDNAME.
SELECT TDNAME
INTO CORRESPONDING FIELDS OF TABLE I_STXH  FROM STXH
FOR ALL ENTRIES IN I_STXH_D
where  tdobject =  'KNB1'
and  tdid     = 'ZK01'
AND  TDNAME   = I_STXH_D-TDNAME
and  tdspras  =  sy-langu.
SORT I_STXH BY TDNAME.
FREE I_STXH_D.
ENDFORM.                    " GET_STXH
*&---------------------------------------------------------------------*
*&      Form  CHK_KNVP
*&---------------------------------------------------------------------*
*       親子チェック
*----------------------------------------------------------------------*
FORM CHK_KNVP.
DATA CNT_YK310 type p.
CLEAR I_KNVP.
READ TABLE I_KNVP WITH KEY KUNNR = I_YK510-KUNNR
VKORG = I_YK510-VKORG
VTWEG = I_YK510-VTWEG
SPART = I_YK510-SPART
BINARY search.
IF SY-SUBRC <> 0.         "親でもなければ子でもない
*     I_MACH-INCAMT  = I_YK510-CSTAMT.
*     I_MACH-STS = '○'.
*     APPEND I_MACH.
EXIT.                   "ありえない：処理対象外
ELSE.
IF I_YK510-KUNNR = I_KNVP-KUNN2. "親
I_MACH-INCAMT  = I_YK510-CSTAMT.
I_MACH-STS = '親データ 登録対象'.
I_MACH-NEW = '1'.              "新規登録
APPEND I_MACH.
ELSE.                            "子
CLEAR:I_YK310,I_YK310_2,CNT_YK310.
refresh I_YK310_2.
SELECT BUKRS KUNNR ZFBDT VKBUR INCDOC INCDAT WAERS INCAMT FIFLG
INTO CORRESPONDING FIELDS OF TABLE I_YK310_2 FROM YK310
WHERE BUKRS  =  I_MACH-BUKRS
AND KUNNR  =  I_KNVP-KUNN2
AND ZFBDT  =  I_MACH-ZFBDT
AND DELFLG <> 'X'.
IF SY-SUBRC = 0.              "再読込できたとき
DESCRIBE TABLE I_YK310_2 LINES CNT_YK310.
IF CNT_YK310 > 1.
I_MACH-INCAMT  = I_YK510-CSTAMT.
I_MACH-INCAMT2 = I_YK310-INCAMT.
I_MACH-STS = '子データ YK310複数該当 対象外'.
APPEND I_MACH.
EXIT.
ELSE.
READ TABLE  I_YK310_2 INDEX 1.
I_YK310 =  I_YK310_2.
ENDIF.
IF  I_YK310-FIFLG = 'X'.    "会計処理済みなら対象外
MOVE-CORRESPONDING I_Yk310 to I_MACH.
I_MACH-KUNNR = I_YK510-KUNNR.
I_MACH-INCAMT  = I_YK510-CSTAMT.
I_MACH-INCAMT2 = I_YK310-INCAMT.
I_MACH-STS = '子データ 会計連絡済み 対象外'.
APPEND I_MACH.
ELSE.                       "会計処理前なら更新対象
MOVE-CORRESPONDING I_Yk310 to I_MACH.
I_MACH-KUNNR = I_YK510-KUNNR.
I_MACH-INCAMT  = I_YK510-CSTAMT.
I_MACH-INCAMT2 = I_YK310-INCAMT.
I_MACH-STS = '子データ 会計連絡未済 登録対象'.
I_MACH-NEW = '1'.              "新規登録
APPEND I_MACH.
ENDIF.
ELSE.                         "再読込でも駄目なとき
I_MACH-INCAMT  = I_YK510-CSTAMT.
I_MACH-STS = '子データ YK310該当無 登録対象'.
I_MACH-NEW = '1'.              "新規登録
APPEND I_MACH.
ENDIF.
ENDIF.
ENDIF.
ENDFORM.                    " CHK_KNVP
*&---------------------------------------------------------------------*
*&      Form  GET_KNVP
*&---------------------------------------------------------------------*
*       KNVPデータ格納
*----------------------------------------------------------------------*
FORM GET_KNVP.
REFRESH I_KNVP.
SELECT KUNNR VKORG VTWEG SPART PARVW KUNN2
INTO CORRESPONDING FIELDS OF TABLE I_KNVP  FROM KNVP
FOR ALL ENTRIES IN I_YK510
where  KUNNR = I_YK510-KUNNR
and  VKORG = I_YK510-VKORG
and  VTWEG = I_YK510-VTWEG
and  SPART = I_YK510-SPART
and  PARVW = 'Y3'.
SORT I_KNVP BY  KUNNR VKORG VTWEG SPART  PARVW  KUNN2.

ENDFORM.                    " GET_KNVP
*&---------------------------------------------------------------------*
*&      Form  GET_KNVP2
*&---------------------------------------------------------------------*
*       KNVPデータ格納
*----------------------------------------------------------------------*
FORM GET_KNVP2.
REFRESH I_KNVP.
SELECT KUNNR VKORG VTWEG SPART PARVW KUNN2
INTO CORRESPONDING FIELDS OF TABLE I_KNVP  FROM KNVP
FOR ALL ENTRIES IN I_mACH
where  KUNNR = I_mACH-KUNNR
and  VKORG = I_mACH-VKORG
and  VTWEG = I_mACH-VTWEG
and  SPART = I_mACH-SPART
AND  ( PARVW = 'Y3' or  PARVW = 'RG' ).
SORT I_KNVP BY  KUNNR VKORG VTWEG SPART  PARVW  KUNN2.

ENDFORM.                    " GET_KNVP2
*&---------------------------------------------------------------------*
*&      Form  GET_KNVV
*&---------------------------------------------------------------------*
*       KNVVデータ格納
*----------------------------------------------------------------------*
FORM GET_KNVV.
REFRESH:I_KNVV,I_TVTA.
SELECT KUNNR VKORG VTWEG SPART ZTERM VKBUR VKGRP
INTO CORRESPONDING FIELDS OF TABLE I_KNVV  FROM KNVV
FOR ALL ENTRIES IN I_mACH
where  KUNNR = I_mACH-KUNNR
and  VKORG = I_mACH-VKORG
and  VTWEG = I_mACH-VTWEG.
SORT I_KNVV BY  KUNNR VKORG VTWEG SPART.
SELECT VKORG VTWEG SPAKU
INTO CORRESPONDING FIELDS OF TABLE I_TVTA  FROM TVTA
FOR ALL ENTRIES IN I_MACH
where  VKORG = I_mACH-VKORG
and  VTWEG = I_mACH-VTWEG
and  SPART = I_mACH-SPART.
SORT I_TVTA BY VKORG VTWEG SPART.

ENDFORM.                    " GET_KNVP2

*&---------------------------------------------------------------------*
*&      Form  INSERT_YK310
*&---------------------------------------------------------------------*
*       YK310 新規登録
*----------------------------------------------------------------------*
FORM INSERT_YK310.
data:c_prcflg like yk310-prcflg value '1'. "入力区分(固定値)
CLEAR ST_YK310_D.
*YK510項目(会社,得意先,販売組織,流通,製品部門,締日,通貨,入金予定額)
move-corresponding i_MACH to ST_yk310_D.
*システム項目のセット
ST_yk310_D-MANDT  = SY-MANDT.            "クライアント
ST_yk310_D-insdat = sy-datum.            "登録日
ST_yk310_D-instim = sy-uzeit.            "登録時刻
ST_yk310_D-insusr = sy-uname.            "登録者
ST_yk310_D-prcflg = c_prcflg.            "入力区分
ST_yk310_D-sgtxt  = '高千穂請求書'.      "明細テキスト
*入金予定番号取得
perform get_number.                      "入金予定番号取得
*入金予定日取得
perform get_day.                         "入金予定日取得
*入金先、支払人
CLEAR I_KNVP.
READ TABLE I_KNVP WITH KEY  kunnr = ST_yk310_D-kunnr
vkorg = ST_yk310_D-vkorg
VTWEG = ST_yk310_D-VTWEG
SPART = ST_yk310_D-SPART
PARVW = 'RG'.
ST_yk310_D-kunrg = I_KNVP-KUNN2.
CLEAR I_KNVP.
READ TABLE I_KNVP WITH KEY  kunnr = ST_yk310_D-kunnr
vkorg = ST_yk310_D-vkorg
VTWEG = ST_yk310_D-VTWEG
SPART = ST_yk310_D-SPART
PARVW = 'Y3'.
ST_yk310_D-kunr1 = I_KNVP-KUNN2.
*支払条件,営業所,営業グループ
CLEAR:I_KNVv,I_TVTA.
READ TABLE I_KNVv WITH KEY kunnr = ST_yk310_D-kunnr
vkorg = ST_yk310_D-vkorg
VTWEG = ST_yk310_D-VTWEG
SPART = ST_yk310_D-SPART.
IF SY-SUBRC <> 0.
READ TABLE I_TVTA WITH KEY vkorg = ST_yk310_D-vkorg
VTWEG = ST_yk310_D-VTWEG
SPART = ST_yk310_D-SPART.
READ TABLE I_KNVv WITH KEY kunnr = ST_yk310_D-kunnr
vkorg = ST_yk310_D-vkorg
VTWEG = ST_yk310_D-VTWEG
SPART = I_TVTA-SPAKU.
ENDIF.
ST_yk310_D-ZTERM = I_KNVv-ZTERM.
ST_yk310_D-VKBUR = I_KNVv-VKBUR.
ST_yk310_D-VKGRP = I_KNVv-VKGRP.
*支払方法、支払保留キー
clear t052.
select zlsch zschf into (ST_Yk310_D-zlsch,ST_yk310_D-zlspr)
from t052 up to 1 rows
where zterm = ST_yk310_D-ZTERM.
endselect.
*ソートキー
clear tvkbt.
select single bezei into tvkbt-bezei from tvkbt
where spras = sy-langu
and vkbur =  ST_yk310_D-vkbur.
if sy-subrc = 0.
ST_Yk310_D-zuonr = tvkbt-bezei(18).
endif.
*
CALL FUNCTION 'ENQUEUE_EY_YK310'
EXPORTING
MANDT                = SY-MANDT
BUKRS                = ST_Yk310_D-BUKRS
KUNNR                = ST_Yk310_D-KUNNR
INCDOC               = ST_Yk310_D-INCDOC
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
IF SY-SUBRC <> 0.
WRITE 142 'ロックエラー'.
ROLLBACK WORK. STOP.
EXIT.
ENDIF.
INSERT YK310 FROM ST_YK310_D.
IF SY-SUBRC <> 0.
WRITE 142 '登録エラー'.
ROLLBACK WORK. STOP.
EXIT.
ENDIF.
*  CNT_EDIT = CNT_EDIT + 1.
CALL FUNCTION 'DEQUEUE_EY_YK310'
EXPORTING
MANDT                = SY-MANDT
BUKRS                = ST_YK310_D-BUKRS
KUNNR                = ST_YK310_D-KUNNR
INCDOC               = ST_YK310_D-INCDOC
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
*YK510の会計連絡済フラグをONに更新
PERFORM edit_YK510.

ENDFORM.                    " INSERT_YK310
*&---------------------------------------------------------------------*
*&      Form  get_number
*&---------------------------------------------------------------------*
*       入金予定番号取得
*----------------------------------------------------------------------*
form get_number.
call function 'NUMBER_GET_NEXT'
exporting
nr_range_nr             = '10'
object                  = 'YKINCDOC'
quantity                = '1'
subobject               = ST_yk310_D-bukrs     " 会社コード
importing
number                  = ST_yk310_D-incdoc    " 入金予定番号
exceptions
interval_not_found      = 1
number_range_not_intern = 2
object_not_found        = 3
quantity_is_0           = 4
quantity_is_not_1       = 5
interval_overflow       = 6
buffer_overflow         = 7.
if sy-subrc <> 0.
message e001 with 'NUMBER_GET_NEXT' sy-subrc.
"汎用モジュールがエラーリターンしました(ﾓｼﾞｭｰﾙ名=&、ｴﾗｰｺｰﾄﾞ=&)
endif.
endform.                    " GET_NUMBER
*&---------------------------------------------------------------------*
*&      Form  get_day
*&---------------------------------------------------------------------*
*       入金予定日取得
*----------------------------------------------------------------------*
FORM get_day.
call function 'YK_ZFBDT_GET_BY_KNVV'
exporting
i_cord               = ST_yk310_D-kunnr
i_vkorg              = ST_yk310_D-vkorg
i_vtweg              = ST_yk310_D-vtweg
i_spart              = ST_yk310_D-spart
i_day                = ST_yk310_D-zfbdt
importing
e_siharaibi          = ST_yk310_D-incdat
exceptions
no_get_t052          = 1
no_good_getday       = 2
no_get_zterm         = 3
others               = 4.
if sy-subrc <> 0.
message e001 with 'YK_ZFBDT_GET_BY_KNVV' sy-subrc.
"汎用モジュールがエラーリターンしました(ﾓｼﾞｭｰﾙ名=&、ｴﾗｰｺｰﾄﾞ=&)
endif.

ENDFORM.                    " get_day
*&---------------------------------------------------------------------*
*&      Form  edit_YK510
*&---------------------------------------------------------------------*
*       会計連絡済フラグを更新
*----------------------------------------------------------------------*
FORM edit_YK510.
CALL FUNCTION 'ENQUEUE_EY_YK510'
EXPORTING
BUKRS                = I_MACH-BUKRS
KUNNR                = I_MACH-KUNNR
VKORG                = I_MACH-VKORG
VTWEG                = I_MACH-VTWEG
SPART                = I_MACH-SPART
ZFBDT                = I_MACH-ZFBDT
WAERS                = I_MACH-WAERS
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
IF SY-SUBRC <> 0.
WRITE 142 'YK510ロックエラー'.
ROLLBACK WORK. STOP.
EXIT.
ENDIF.
UPDATE YK510 SET FIFLG = 'X'
WHERE BUKRS = I_MACH-BUKRS
and KUNNR = I_MACH-KUNNR
and VKORG = I_MACH-VKORG
and VTWEG = I_MACH-VTWEG
and SPART = I_MACH-SPART
and ZFBDT = I_MACH-ZFBDT
and WAERS = I_MACH-WAERS.
IF SY-SUBRC <> 0.
WRITE 142 'YK510更新エラー'.
ROLLBACK WORK. STOP.
EXIT.
ENDIF.
CALL FUNCTION 'DEQUEUE_EY_YK510'
EXPORTING
BUKRS                = I_MACH-BUKRS
KUNNR                = I_MACH-KUNNR
VKORG                = I_MACH-VKORG
VTWEG                = I_MACH-VTWEG
SPART                = I_MACH-SPART
ZFBDT                = I_MACH-ZFBDT
WAERS                = I_MACH-WAERS
EXCEPTIONS
FOREIGN_LOCK         = 1
SYSTEM_FAILURE       = 2
OTHERS               = 3.
ENDFORM.                    " edit_YK510
