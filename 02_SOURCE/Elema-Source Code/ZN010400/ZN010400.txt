*&---------------------------------------------------------------------*
*&  REPORT ZN010400                                                    *
*&         支払通知書IF（仕入）                                        *
*&---------------------------------------------------------------------*
*&  機能     :当月仕入高を出力する速報（検収明細書）と                 *
*&            当月照合額を出力する確報（支払通知書）の                 *
*&            IFファイルを出力する。                                   *
*&                                                                     *
*&  作成日   : 2012/01/06                                              *
*&  作成者   : H.KOMIYAMA(SOLFIS)                                      *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/01/24 H.YAMASHITA                                  *
*&  変更内容 : 注文番号の加工時に、明細の前０を除去する。              *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/02/28 H.KOMIYAMA(SOLFIS)                           *
*&  変更内容 : アドレス情報関連項目が全て初期値となる不具合修正        *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/03/27 K.KAJISA(SOLFIS)                             *
*&  変更内容 : インデックス対応                                        *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/04/07  K.KAJISA(SOLFIS)                            *
*&  変更内容 : QA対応                                                  *
*&             ・YN210更新漏れ項目修正                                 *
*&             ・速報でのデータ取得条件修正                            *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/08/02 K.FURUYA(SOLFIS)                             *
*&  変更内容 : 未照合は全て速報出力対象とする  　　　　　              *
*&---------------------------------------------------------------------*
*&  変更履歴 : 2013/11/19 K.TSUNOSE(GSL)                               *
*&  変更内容 : 電子記録債務対応                　　　　　              *
*&---------------------------------------------------------------------*
*& YYYY/MM/DD  Programar         Description
*& 2012/10/16  ISID              ES-UP
*& 2012/12/07  ISID              ES-UP
*&---------------------------------------------------------------------*
report zn010400
no standard page heading
line-size   170
line-count  58
message-id  yn01.

*----------------------------------------------------------------------*
*   宣言部
*----------------------------------------------------------------------*
*** 参照テーブル
tables: lfb1.

*** 構造
*-- 仕入先コード取得用
data: begin of w_lfm1,
lifnr like lfm1-lifnr,              " 仕入先コード
zterm like lfm1-zterm,              " 支払条件キー
waers like lfm1-waers,              " 通貨コード
end   of w_lfm1,
*-- 支払条件取得用
begin of w_t052,
zterm like t052-zterm,              " 支払条件キー
ztagg like t052-ztagg,              " 期限
end   of w_t052,
*-- ロック/アンロック用内部テーブル定義
begin of w_enq_key,
bukrs type bukrs,                   " 会社コード
lifnr type ynlifnr,                 " 仕入先コード(発注先)
*** 2012/01/24 INSERT START ***
lifn2 type ynlifnr,                 " 仕入先コード(請求先)
*** 2012/01/24 INSERT END ***
werks type werks_d,                 " プラント
end   of w_enq_key,
*-- ロック対象仕入先コード取得用
begin of w_wyt3,
lifnr like wyt3-lifnr,              " 仕入先コード(発注先)
*** 2012/01/24 INSERT START ***
lifn2 like wyt3-lifn2,              " 仕入先コード(請求先)
*** 2012/01/24 INSERT END ***
end   of w_wyt3,
*-- 出力済仕入先コード取得用
begin of w_zn003,
lifnr   like zn003-lifnr,           " 仕入先コード(発注先)
end   of w_zn003,
*-- 出力対象データ取得用
begin of w_yn220,
vrfcton   like yn220-vrfcton,       " 仕入先コード(請求先)
dvson     like yn220-dvson,         " プラント
knquan    like yn220-knquan,        " 数量
* 2012/04/07 ADD START
knunit    type yn220-knunit,        "数量単位
* 2012/04/07 ADD END
knuntprc  like yn220-knuntprc,      " 単価
knitxamt  like yn220-knitxamt,      " 税抜金額
kntaxamt  like yn220-kntaxamt,      " 消費税額
knetxamt  like yn220-knetxamt,      " 税込金額
list2     like yn220-list2,         " 発注番号
list3     like yn220-list3,         " 発注明細番号
list5     like yn220-list5,         " 品目コード
list6     like yn220-list6,         " 品目テキスト
ldate1    like yn220-ldate1,        " 入庫日
slpdoc    like yn220-slpdoc,        " 伝票番号
gjahr     like yn220-gjahr,         " 伝票会計年度
dtldoc    like yn220-dtldoc,        " 伝票明細番号
bukrs     like yn220-bukrs,         " 会社コード
zfbdt     like yn220-zfbdt,         " 計上締日
prctr     like yn220-prctr,         " 利益センタ
pernr     like yn220-pernr,         " 担当者
tgtflg    like yn220-tgtflg,        " 照合対象フラグ
commt     like yn220-commt,         " コメント
waers     like yn220-waers,         " 通貨コード
ckey1     like yn220-ckey1,         " 照合キー1：発注番号
ckey2     like yn220-ckey2,         " 照合キー2：インボイスNo
ckey3     like yn220-ckey3,         " 照合キー3
ckey4     like yn220-ckey4,         " 照合キー4
ckey5     like yn220-ckey4,         " 照合キー5
ckey6     like yn220-ckey4,         " 照合キー6
ckey7     like yn220-ckey7,         " 照合キー7
ckey8     like yn220-ckey8,         " 照合キー8
list1     like yn220-list1,         " 仕入先コード(発注先)
list4     like yn220-list4,         " 購買グループ
list7     like yn220-list7,         " 仕入先品目
list8     like yn220-list8,         " インボイスNo
list9     like yn220-list9,         " 一覧表示項目9
list10    like yn220-list10,        " 一覧表示項目10
end   of w_yn220,
*-- 支払予定(仕入)一括取得用
begin of w_zn002,
lifnr  like zn002-lifnr,            " 仕入先コード(請求先)
seq    like zn002-seq,              " SEQ
pzfbdt like zn002-pzfbdt,           " 支払予定日
pzlsch like zn002-pzlsch,           " 支払方法
pzterm like zn002-pzterm,           " サイト
pwrbtr like zn002-pwrbtr,           " 支払予定額
end    of w_zn002,
*-- 仕入先マスタ一括取得用
begin of w_lfx1,
lifnr like lfb1-lifnr,              " 仕入先コード(請求先)
pstlz like lfa1-pstlz,              " 仕入先郵便番号
adrnr like lfa1-adrnr,              " 住所
tlfxs like lfb1-tlfxs,              " ファックス番号
end   of w_lfx1,
*-- アドレス情報一括取得用
begin of w_adrc,
addrnumber like adrc-addrnumber,    " アドレス番号
date_from  like adrc-date_from,     " 有効開始日付
nation     like adrc-nation,        " 国際アドレスバージョン ID
name2      like adrc-name2,         " 名前 2
city1      like adrc-city1,         " 市区町村
street     like adrc-street,        " 都道府県名
*** 2012/02/28 INS START ***
region     like adrc-region,        " 地域
*** 2012/02/28 INS END   ***
bezei      like t005u-bezei,        " 地域 (都道府県）
end   of w_adrc,
*** 2012/02/28 INS START ***
*-- 地域コード: テキスト取得用
begin of w_t005u,
bland    type t005u-bland,          " 地域
bezei    type t005u-bezei,          " 内容説明
end   of w_t005u,
*** 2012/02/28 INS END   ***
*-- プラント一括取得用
begin of w_t001w,
werks      like t001w-werks,        " プラント
name1      like t001w-name1,        " 名称
end   of w_t001w,
*-- 支払予定編集用
begin of w_zn002_ed,
lifnr     like zn002-lifnr,         " 仕入先コード
rnkno     type i,                   " 優先順位
zfbdt     like zn002-pzfbdt,        " 支払予定日
wrbtr     like zn002-pwrbtr,        " 支払予定額
zlstx(14) type c,                   " 支払方法テキスト
end   of w_zn002_ed,
*-- IFファイル編集用
begin of w_data,
years   type string,                " 計上年月
tname   type string,                " 帳票名称
lifnr   type string,                " 仕入先コード
seqno   type string,                " SEQ
odate   type string,                " 発行日
name2   type string,                " 仕入先名
pstlz   type string,                " 仕入先郵便番号
bezei   type string,                " 地域
stree   type string,                " 都道府県
city1   type string,                " 市区町村
telfx   type string,                " ファックス番号
total   type string,                " 総額
waers   type string,                " 通貨コード
zlsc1   type string,                " 金種1-文言
wrbt1   type string,                " 金種1-金額
zfbd1   type string,                " 金種1-期日
zlsc2   type string,                " 金種2-文言
wrbt2   type string,                " 金種2-金額
zfbd2   type string,                " 金種2-期日
zlsc3   type string,                " 金種3-文言
wrbt3   type string,                " 金種3-金額
zfbd3   type string,                " 金種3-期日
zlsc4   type string,                " 金種4-文言
wrbt4   type string,                " 金種4-金額
zfbd4   type string,                " 金種4-期日
dvson   type string,                " プラントコード
name1   type string,                " プラント名
itxam   type string,                " 税抜金額
taxam   type string,                " 消費税額
etxam   type string,                " 税込金額
ldate   type string,                " 入庫日
list2   type string,                " 注文番号
list5   type string,                " 品目コード
list6   type string,                " 品名
knunt   type string,                " 単価
knqua   type string,                " 数量
knitx   type string,                " 税抜金額
kntax   type string,                " 税額
knetx   type string,                " 税込金額
end   of w_data,
*-- エラーログ出力用
begin of tbl_errlog occurs 0,
lifnr(10) type c,                   " 得意先コード
err(128)  type c,                   " ERR
end of tbl_errlog,
*-- 照合締日取得用
begin of w_czfbdt,
slpdoc  like yn220-slpdoc,          " 伝票番号
gjahr   like yn220-gjahr,           " 伝票会計年度
dtldoc  like yn220-dtldoc,          " 伝票明細番号
bukrs   like yn220-bukrs,           " 会社コード
vrfcton like yn220-vrfcton,         " 仕入先コード(請求先)
czfbdt  like yn220-czfbdt,          " 照合締日
end   of w_czfbdt,
*-- 照合終了日取得用
begin of w_zn001,
lifnr like zn001-lifnr,             " 仕入先コード
edate like zn001-edate,             " 照合終了日
end   of w_zn001,
*-- 出力履歴テーブル登録用
w_zn003_up like zn003,                " 支払通知書履歴（仕入）
*-- 外部データ登録用
w_yn210_up like yn210,                " 外部データ(仕入)
*-- 再出力データ取得用
w_zn003_re like zn003,                " 支払通知書履歴（仕入）
*-- 外部データ削除用
w_yn210_de like yn210.                " 外部データ(仕入)

*** 内部テーブル
data: i_lfm1     like standard table of w_lfm1,
i_t052     like sorted   table of w_t052
with unique key zterm ztagg,
i_enq_key  like standard table of w_enq_key,
i_wyt3     like standard table of w_wyt3,
i_zn003    like standard table of w_zn003,
i_yn220    like standard table of w_yn220,
i_zn002    like standard table of w_zn002,
i_lfx1     like hashed   table of w_lfx1
with unique key lifnr,
i_adrc     like sorted table of w_adrc
with non-unique key addrnumber,
*** 2012/02/28 INS START ***
i_t005u    like sorted table of w_t005u
with non-unique key bland,
*** 2012/02/28 INS END   ***
i_t001w    like standard table of w_t001w,
i_data     like standard table of w_data,
i_zn002_ed like standard table of w_zn002_ed,
i_zn003_up like standard table of w_zn003_up,
i_zn003_re like standard table of w_zn003_re,
i_czfbdt   like hashed   table of w_czfbdt
with unique key gjahr slpdoc dtldoc vrfcton,
i_zn001    like hashed   table of w_zn001
with unique key lifnr,
i_yn210_up like standard table of w_yn210_up,
i_yn210_de like standard table of w_yn210_de.

*** グローバル変数
data: rc_code_lock type sy-subrc,
g_cnt_upd    type i,               " 更新件数
g_cnt_out    type i,               " 出力件数
g_cnt_err    type i,               " エラー件数
g_cnt_seq(5) type n,               " SEQカウンタ
g_zfbdt      type datum,           " 照合締日
g_sum_total  like yn220-knetxamt,  " 総額計算用
g_sum_itxam  like yn220-knitxamt,  " 税抜金額計算用
g_sum_taxam  like yn220-kntaxamt,  " 消費税額計算用
g_sum_etxam  like yn220-knetxamt.  " 税込金額計算用

*** 定数
constants: c_flg_on(1)     type c value 'X',
c_sokuho(10)    type c value '検収明細書',
c_kakuho(10)    type c value '支払通知書',
c_zlstx1(14)    type c value '振込',
c_zlstx2(14)    type c value '一括信託支払',
c_zlstx3(14)    type c value '相殺',
c_zlstx4(14)    type c value '手形',
c_zlstx5(14)    type c value 'その他',
* 2013/11/19 ADD START "電子記録債務追加
c_zlstx6(14)    type c value '電子記録債務',
* 2013/11/19 ADD END
c_main_lifnr(1) type c value '+',
*** 2012/01/24 INSERT START ***
c_mark(1)       type c value 'Y'.           "支払通知発行対象
*** 2012/01/24 INSERT END ***
* Add ES-UP 2012/10/16 -->
constants cns_sjis type string value `shift_jis`.
* Add ES-UP 2012/10/16 <--
*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
*-- 速報/確報区分
selection-screen begin of block bk1 with frame title text-s01.
selection-screen begin of line.
*-- 速報（検収明細書）
parameters: r_sokuho radiobutton group ra01 default 'X'.
selection-screen comment 04(18) text-s02.
*-- 確報（支払通知書）
parameters: r_kakuho radiobutton group ra01.
selection-screen comment 26(18) text-s03.
selection-screen end of line.
selection-screen end of block bk1.

*-- データ選択
selection-screen begin of block bk2 with frame title text-s04.
*-- 会社コード
parameters: p_bukrs    like t001-bukrs obligatory memory id buk,
*-- 購買組織
p_ekorg    like lfm1-ekorg obligatory memory id eko,
*-- 出力年月
p_years(6) type n,
*-- 出力締日
p_cdate(2) type n          obligatory.
*-- 仕入先コード(請求先)
select-options s_lifnr for lfb1-lifnr.
selection-screen end of block bk2.

*-- 出力オプション
selection-screen begin of block bk3 with frame title text-s05.
selection-screen begin of line.
*-- 出力
parameters: r_output radiobutton group ra02 default 'X'.
selection-screen comment 04(10) text-s06.
*-- 再出力
parameters: r_reprin radiobutton group ra02.
selection-screen comment 18(10) text-s07.
*-- 取消
parameters: r_cancel radiobutton group ra02.
selection-screen comment 32(10) text-s08.
selection-screen end of line.
*** 2012/01/24 MOD START ***
*-- ディレクトリ名
* PARAMETERS: P_DNAME LIKE RLGRAP-FILENAME OBLIGATORY,
parameters: p_dname like rlgrap-filename,
*-- ファイル名
*            P_FNAME LIKE RLGRAP-FILENAME OBLIGATORY,
p_fname like rlgrap-filename,
*-- 起動用ファイル名
*            P_SNAME LIKE RLGRAP-FILENAME OBLIGATORY.
p_sname like rlgrap-filename.
*** 2012/01/24 MOD END ***
selection-screen end of block bk3.

skip 1.

*-- 取引先機能
parameters: p_parvw like wyt3-parvw obligatory.

************************************************************************
initialization.
************************************************************************

************************************************************************
at selection-screen on value-request for p_dname.
************************************************************************
*-- ディレクトリ名の検索ヘルプ
perform f_f4help_p_dname.

************************************************************************
at selection-screen.
************************************************************************
*-- 選択画面処理
perform f_selection_screen_proc.

************************************************************************
start-of-selection.
************************************************************************
perform f_init_sec.                       " 初期処理
perform f_main_sec.                       " メイン処理

************************************************************************
end-of-selection.
************************************************************************

*&---------------------------------------------------------------------*
*&      Form F_F4HELP_P_DNAME
*&---------------------------------------------------------------------*
*       ディレクトリ名のヘルプ出力
*----------------------------------------------------------------------*
form f_f4help_p_dname.

data: l_path          like dxfields-longpath,
l_abend_flg     like dxfields-abendflag,
l_stripped_name like rlgrap-filename.

*-- ファイルパスの取得
call function 'F4_DXFILENAME_TOPRECURSION'
exporting
i_location_flag = 'A'
i_server        = ''
i_path          = ''
filemask        = '*.*'
fileoperation   = 'R'
importing
o_path          = l_path
abend_flag      = l_abend_flg
exceptions
others          = 0.

if l_abend_flg <> c_flg_on.
p_dname = l_path.
*-- ディレクトリ名とファイル名の分割
call function 'SO_SPLIT_FILE_AND_PATH'
exporting
full_name     = p_dname
importing
stripped_name = l_stripped_name
file_path     = p_dname
exceptions
others        = 0.
endif.

endform.                    " F_F4HELP_P_DNAME
*&---------------------------------------------------------------------*
*&      Form  F_SELECTION_SCREEN_PROC
*&---------------------------------------------------------------------*
*       選択画面処理
*----------------------------------------------------------------------*
form f_selection_screen_proc.

*-- 会社コードと購買組織の存在チェック
perform f_check_p_bukrs_and_p_ekorg.

*-- 出力締日チェック
perform f_check_p_cdate.

*-- 出力年月初期値設定
if p_years is initial.
perform f_set_p_years.
endif.

*-- 出力年月チェック
perform f_check_p_years.

*-- 照合締日の取得
perform f_get_zfbdt.

*** 2012/01/24 INSERT START ***
*-- ラジオボタン：出力　再出力時に、出力オプションの必須チェック
perform f_check_output_entry.
*** 2012/01/24 INSERT START ***

*-- ファイル出力チェック
perform f_check_output_file.

endform.                    " F_SELECTION_SCREEN_PROC
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_P_BUKRS_AND_P_EKORG
*&---------------------------------------------------------------------*
*       会社コードと購買組織の存在チェック
*----------------------------------------------------------------------*
form f_check_p_bukrs_and_p_ekorg.

data: l_ekorg like t024e-ekorg.

select single ekorg             " 購買組織
from t024e
into l_ekorg
where ekorg = p_ekorg          " 購買組織
and bukrs = p_bukrs.         " 会社コード

if sy-subrc <> 0.
*-- 対象データがありません
message e762.
endif.

endform.                    " F_CHECK_P_BUKRS_AND_P_EKORG
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_P_CDATE
*&---------------------------------------------------------------------*
*       出力締日チェック
*----------------------------------------------------------------------*
form f_check_p_cdate.

if not (  p_cdate =  5
or p_cdate = 10
or p_cdate = 15
or p_cdate = 20
or p_cdate = 25
or p_cdate = 31 ).
*-- 入力された締日が適切ではありません
message e913.
endif.

endform.                    " F_CHECK_P_CDATE
*&---------------------------------------------------------------------*
*&      Form  F_SET_P_YEARS
*&---------------------------------------------------------------------*
*       出力年月初期値設定
*----------------------------------------------------------------------*
form f_set_p_years.

data: l_endda like pskey-endda.

if p_cdate =  5
or p_cdate = 10
or p_cdate = 15
or p_cdate = 20
or p_cdate = 25.

*-- システム日付の先頭６桁を設定
p_years = sy-datum(6).

else.

*-- システム日付の前月を取得する
call function 'HRWPC_BL_DATES_MONTH_INTERVAL'
exporting
datum          = sy-datum
month_pst      = 1
month_ftr      = -1
importing
endda          = l_endda
exceptions
others         = 0.

*-- システム日付の前月の先頭６桁を設定
p_years = l_endda(6).

endif.

endform.                    " F_SET_P_YEARS
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_P_YEARS
*&---------------------------------------------------------------------*
*       出力年月チェック
*----------------------------------------------------------------------*
form f_check_p_years.

if p_years+4(2) < 01
or p_years+4(2) > 12.
*-- 入力された出力年月が不正です。
message e914.
endif.

endform.                    " F_CHECK_P_YEARS
*&---------------------------------------------------------------------*
*&      Form  F_GET_ZFBDT
*&---------------------------------------------------------------------*
*       照合締日の算出
*----------------------------------------------------------------------*
form f_get_zfbdt.

clear: g_zfbdt.

if p_cdate =  5
or p_cdate = 10
or p_cdate = 15
or p_cdate = 20
or p_cdate = 25.

*-- 出力年月(YYYYMM)＋出力締日(DD)
concatenate p_years
p_cdate
into g_zfbdt.

else.

*-- 出力年月(YYYYMM)＋[01]
concatenate p_years
'01'
into g_zfbdt.

*-- 月末日へ変換
call function 'LAST_DAY_OF_MONTHS'
exporting
day_in                  = g_zfbdt
importing
last_day_of_month       = g_zfbdt
exceptions
others                  = 0.

endif.

endform.                    " F_GET_ZFBDT
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_OUTPUT_FILE
*&---------------------------------------------------------------------*
*       ファイル出力チェック
*----------------------------------------------------------------------*
form f_check_output_file.

data: l_directory like btch0000-text80,
l_filename  like btch0000-text80.

*** 2012/01/24 INSERT START ***
if  r_output = c_flg_on
or  r_reprin = c_flg_on.
*** 2012/01/24 INSERT END ***

*-- ファイル名の重複チェック
if p_fname = p_sname.
*-- 出力ファイル名と起動用ファイル名が重複しています
message e922.
endif.

*-- 起動用ファイルの存在チェック
l_directory = p_dname.                        " ディレクトリ名
l_filename  = p_sname.                        " 起動用ファイル名

call function 'PFL_CHECK_DIRECTORY'
exporting
directory                         = l_directory
filname                           = l_filename
exceptions
pfl_dir_not_exist                 = 1
pfl_permission_denied             = 2
pfl_cant_build_dataset_name       = 3
pfl_file_not_exist                = 4
others                            = 5.

if sy-subrc = 0.
*-- 起動用ファイルが存在しています
message e923.
endif.
endif.

endform.                    " F_CHECK_OUTPUT_FILE
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_OUTPUT_ENTRY
*&---------------------------------------------------------------------*
*       ファイル出力チェック
*----------------------------------------------------------------------*
form f_check_output_entry.

if  r_output = c_flg_on
or  r_reprin = c_flg_on.
if p_dname is initial.          "ディレクトリ名の必須チェック
message e901 with text-p07.
endif.
if p_fname is initial.          "ファイル名の必須チェック
message e901 with text-p08.
endif.
if p_sname is initial.          "起動用ファイル名の必須チェック
message e901 with text-p09.
endif.
endif.

endform.                    " F_CHECK_OUTPUT_ENTRY
*&---------------------------------------------------------------------*
*&      Form  F_INIT_SEC
*&---------------------------------------------------------------------*
*       初期処理
*----------------------------------------------------------------------*
form f_init_sec.

*-- 変数の初期化
clear: w_lfm1,
w_t052,
w_enq_key,
w_wyt3,
w_zn003,
w_yn220,
w_zn002,
w_lfx1,
w_adrc,
w_t001w,
w_data,
w_zn002_ed,
w_zn003_up,
w_zn003_re,
w_czfbdt,
w_zn001,
w_yn210_de,
rc_code_lock,
g_cnt_upd,
g_cnt_out,
g_cnt_err,
g_cnt_seq,
g_sum_total,
g_sum_taxam,
g_sum_itxam,
g_sum_etxam.

refresh: i_lfm1,
i_t052,
i_enq_key,
i_wyt3,
i_zn003,
i_yn220,
i_zn002,
i_lfx1,
i_adrc,
i_t001w,
i_data,
i_zn002_ed,
i_zn003_up,
i_zn003_re,
i_czfbdt,
i_zn001,
i_yn210_up,
i_yn210_de.

endform.                    " F_INIT_SEC
*&---------------------------------------------------------------------*
*&      Form  F_MAIN_SEC
*&---------------------------------------------------------------------*
*       メイン処理
*----------------------------------------------------------------------*
form f_main_sec.

*-- 「出力」選択時
if r_output = c_flg_on.
*-- 対象仕入先取得
perform f_get_target_supplier.
*-- テーブルロック設定(出力時)
perform f_set_table_lock_o.
*-- 出力済チェック
perform f_check_output_already.
*-- 出力対象データの取得
perform f_get_output_data.
*-- 補足情報取得
perform f_get_supplement_data.
*-- ファイル編集処理
perform f_edit_file_data.
*-- 出力履歴テーブルの更新
perform f_insert_zn003.
*-- 自社データ（YN220）/外部データ(YN210)の更新
perform f_update_yn2x0.
*-- ファイル出力
perform f_output_file.
*-- テーブルロック解除(出力時)
perform f_release_table_lock_o.
*-- コミット処理
commit work.
*-- 出力ログ表示
perform f_display_output_log.
endif.

*-- 「再出力」選択時
if r_reprin = c_flg_on.
*-- 再出力データの取得
perform f_get_output_again_data.
*-- ファイル再出力
perform f_output_again_file.
*-- コミット処理
commit work.
*-- 出力ログ表示
perform f_display_output_log.
endif.

*-- 「取消」選択時
if r_cancel = c_flg_on.
*-- 出力済データ確認
perform f_confirm_output_again_data.
*-- 実行確認ポップアップ出力
perform f_output_popup.
*-- テーブルロック設定(取消時)
perform f_set_table_lock_c.
*-- 取消実行
perform f_clear_table_data.
*-- テーブルロック解除(取消時)
perform f_release_table_lock_c.
*-- コミット処理
commit work.
*-- 出力ログ表示
perform f_display_output_log.
endif.

endform.                    " F_MAIN_SEC
*&---------------------------------------------------------------------*
*&      Form  F_GET_TARGET_SUPPLIER
*&---------------------------------------------------------------------*
*       対象仕入先取得
*----------------------------------------------------------------------*
form f_get_target_supplier.

*-- 対象の仕入先コード取得
perform f_select_lfm1.

*-- 購買データの支払条件を一括取得
perform f_select_t052.

*-- 仕入先データ絞込み
perform f_refine_lfm1.

endform.                    " F_GET_TARGET_SUPPLIER
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_LFM1
*&---------------------------------------------------------------------*
*       対象の仕入先コード取得
*----------------------------------------------------------------------*
form f_select_lfm1.

refresh: i_lfm1.
*-- 仕入先コード取得
select lifnr                         " 仕入先コード
zterm                         " 支払条件キー
waers                         " 通貨コード
from lfm1
into corresponding fields of table i_lfm1
where lifnr in s_lifnr              " 仕入先コード
and ekorg =  p_ekorg.             " 購買組織

endform.                    " F_SELECT_LFM1
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_T052
*&---------------------------------------------------------------------*
*       購買データの支払条件を一括取得
*----------------------------------------------------------------------*
form f_select_t052.

data: li_lfm1 like i_lfm1.

*-- 支払条件キーをユニークにする
li_lfm1 = i_lfm1.
sort li_lfm1 ascending by zterm.          " 仕入先コード
delete adjacent  duplicates from li_lfm1
comparing zterm.

check not li_lfm1[] is initial.

refresh: i_t052.
*-- 支払条件取得
select zterm                              " 支払条件キー
ztagg                              " 期限
from t052
into corresponding fields of table i_t052
for all entries in li_lfm1
where zterm = li_lfm1-zterm.             " 支払条件キー

*-- 期日を若番1つに絞り込む
delete adjacent  duplicates from i_t052
comparing zterm.                   " 支払条件キー

endform.                    " F_SELECT_T052
*&---------------------------------------------------------------------*
*&      Form  F_REFINE_LFM1
*&---------------------------------------------------------------------*
*       仕入先データ絞込み
*----------------------------------------------------------------------*
form f_refine_lfm1.

data: l_name   type thead-tdname,
lw_tline type tline,
li_tline like standard table of lw_tline.

loop at i_lfm1 into w_lfm1.

*-- 支払条件の読込み
clear: w_t052.
read table i_t052 into w_t052
with key zterm = w_lfm1-zterm   " 支払条件キー
binary search.

*-- 締日<>期日の場合、処理対象外とする
if w_t052-ztagg <> p_cdate.
delete i_lfm1.
continue.
endif.

*-- READ_TEXT用NAMEの作成 (仕入先コード＋会社コード)
clear: l_name.
concatenate w_lfm1-lifnr                " 仕入先コード
p_bukrs                     " 会社コード
into l_name.

*-- 仕入先マスタテキストの読込み
refresh: li_tline.
call function 'READ_TEXT'
exporting
client                        = sy-mandt
id                            = 'YN01'
language                      = sy-langu
name                          = l_name
object                        = 'LFB1'
tables
lines                         = li_tline
exceptions
others                        = 0.

*-- 「Y」以外の場合、処理対象外とする
read table li_tline into lw_tline
*** 2012/01/24 MOD START ***
*                        WITH KEY TDLINE = 'Y'.
with key tdline = c_mark.
*** 2012/01/24 MOD END ***
if sy-subrc <> 0.
delete i_lfm1.
continue.
endif.

endloop.

*-- 該当仕入先が0件の場合、メッセージを出力して終了
if i_lfm1[] is initial.
message s915 with p_cdate.
leave list-processing.
endif.

free: i_t052.

endform.                    " F_REFINE_LFM1
*&---------------------------------------------------------------------*
*&      Form  F_SET_TABLE_LOCK_O
*&---------------------------------------------------------------------*
*       テーブルロック設定(出力時)
*----------------------------------------------------------------------*
form f_set_table_lock_o.

data: l_user type sy-msgv1.

*-- ロックエントリ作成(出力時)
perform f_make_lock_entries_o.

*-- 自社/外部データ（仕入）ロック
perform f_table_lock_901.

l_user = sy-msgv1.
if rc_code_lock <> 0.
*-- エラーメッセージ出力
message i756 with text-m01 l_user.
leave list-processing.
endif.

if r_kakuho = c_flg_on.
*-- 支払予定データロック
perform f_table_lock_zn002.

l_user = sy-msgv1.
if rc_code_lock <> 0.
*-- エラーメッセージ出力
message i756 with text-m01 l_user.
leave list-processing.
endif.
endif.

endform.                    " F_SET_TABLE_LOCK_O
*&---------------------------------------------------------------------*
*&      Form  F_MAKE_LOCK_ENTRIES_O
*&---------------------------------------------------------------------*
*     自社/外部データロックエントリ作成(出力時)
*----------------------------------------------------------------------*
form f_make_lock_entries_o.

refresh: i_enq_key.

if s_lifnr is initial
or s_lifnr-low = '*'.
*-- 会社コードのみ設定
clear: w_enq_key.
w_enq_key-bukrs = p_bukrs.
append w_enq_key to i_enq_key.
else.
*-- 仕入先コード(請求先)⇒仕入先コード(発注先)の取得
perform f_select_wyt3_o.
loop at i_wyt3 into w_wyt3.
clear: w_enq_key.
w_enq_key-bukrs = p_bukrs.
w_enq_key-lifnr = w_wyt3-lifnr.  "仕入先コード（発注先）
*** 2012/01/24 INSERT START ***
w_enq_key-lifn2 = w_wyt3-lifn2.  "仕入先コード（請求先）
*** 2012/01/24 INSERT END ***
append w_enq_key to i_enq_key.
endloop.
endif.

endform.                    " F_MAKE_LOCK_ENTRIES_O
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_WYT3_O
*&---------------------------------------------------------------------*
*       仕入先コード(請求先)⇒仕入先コード(発注先)の取得
*----------------------------------------------------------------------*
form f_select_wyt3_o.

refresh: i_wyt3.

check not i_lfm1[] is initial.

select lifnr                         " 仕入先コード（発注先）
*** 2012/01/24 INSERT START ***
lifn2                         " 仕入先コード（請求先）
*** 2012/01/24 INSERT END ***
from wyt3
into table i_wyt3
for all entries in i_lfm1
where ekorg = p_ekorg               " 購買組織
and ltsnr = space                 " 仕入先部門
and werks = space                 " プラント
and parvw = p_parvw               " 取引先機能
and lifn2 = i_lfm1-lifnr.         " 仕入先コード（請求先）

endform.                    " F_SELECT_WYT3_O
*&---------------------------------------------------------------------*
*&      Form  TABLE_LOCK_901
*&---------------------------------------------------------------------*
*       自社/外部データロック処理
*----------------------------------------------------------------------*
form f_table_lock_901.

loop at i_enq_key into w_enq_key.
call function 'ENQUEUE_EZN901'
exporting
mode_zn901     = 'E'
mandt          = sy-mandt
bukrs          = w_enq_key-bukrs
lifnr          = w_enq_key-lifnr
werks          = w_enq_key-werks
exceptions
foreign_lock   = 1
system_failure = 2
others         = 3.

if sy-subrc <> 0.
rc_code_lock = '1'.
exit.
endif.
endloop.

endform.
*&---------------------------------------------------------------------*
*&      Form  F_TABLE_LOCK_ZN002
*&---------------------------------------------------------------------*
*       支払予定データロック処理
*----------------------------------------------------------------------*
form f_table_lock_zn002.

loop at i_enq_key into w_enq_key.
call function 'ENQUEUE_EZN002'
exporting
mode_zn002     = 'E'
mandt          = sy-mandt
bukrs          = w_enq_key-bukrs
*** 2012/01/24 MOD START ***
*              LIFNR          = W_ENQ_KEY-LIFNR
lifnr          = w_enq_key-lifn2  "仕入先コード（請求先）
*** 2012/01/24 MOD END ***
czfbdt         = g_zfbdt
exceptions
foreign_lock   = 1
system_failure = 2
others         = 3.

if sy-subrc <> 0.
rc_code_lock = '1'.
exit.
endif.
endloop.

endform.                    " F_TABLE_LOCK_ZN002
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_OUTPUT_ALREADY
*&---------------------------------------------------------------------*
*       出力済チェック
*----------------------------------------------------------------------*
form f_check_output_already.

*-- 支払通知書履歴（仕入）の取得
perform f_select_zn003.

*-- 出力済の仕入先を処理対象外とする
loop at i_zn003 into w_zn003.
loop at i_lfm1 into w_lfm1 where lifnr = w_zn003-lifnr.
*-- 出力済の仕入先をエラーログに設定する
perform f_set_errlog using w_zn003-lifnr
text-e01.
delete i_lfm1.
endloop.
endloop.

*-- 出力対象が無い場合はエラーログを出力して終了
if i_lfm1[] is initial.
perform f_display_output_log.
stop.
endif.

endform.                    " F_CHECK_OUTPUT_ALREADY
*&---------------------------------------------------------------------*
*&      Form  F_SET_ERRLOG
*&---------------------------------------------------------------------*
*       エラーログ設定
*----------------------------------------------------------------------*
*      -->AI_LIFNR  仕入先コード
*      -->AI_ERR    エラーテキスト
*----------------------------------------------------------------------*
form f_set_errlog using value(ai_lifnr) type any
value(ai_err)   type any.

data: lw_errlog like tbl_errlog.

lw_errlog-lifnr   = ai_lifnr.
lw_errlog-err     = ai_err.

append lw_errlog to tbl_errlog.
*-- エラー件数カウント
g_cnt_err = g_cnt_err + 1.

endform.                    " F_SET_ERRLOG
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_ZN003
*&---------------------------------------------------------------------*
*       支払通知書履歴（仕入）の取得
*----------------------------------------------------------------------*
form f_select_zn003.

check not i_lfm1[] is initial.

data: l_outkbn(12) type c.

if r_sokuho = c_flg_on.              " 速報（検収明細書）
l_outkbn = c_sokuho.
else.                                " 確報（支払通知書）
l_outkbn = c_kakuho.
endif.

refresh: i_zn003.

select lifnr                         " 仕入先コード（請求先）
from zn003
into table i_zn003
for all entries in i_lfm1
where outmnth = p_years             " 年月
and outkbn  = l_outkbn            " 帳票名
and lifnr   = i_lfm1-lifnr.       " 仕入先コード（請求先）

endform.                    " F_SELECT_ZN003
*&---------------------------------------------------------------------*
*&      Form  F_GET_OUTPUT_DATA
*&---------------------------------------------------------------------*
*       出力対象データの取得
*----------------------------------------------------------------------*
form f_get_output_data.

if r_sokuho = c_flg_on.              " 速報（検収明細書）
perform f_select_yn220_s.
else.                                " 確報（支払通知書）
perform f_select_yn220_k.
endif.

endform.                    " F_GET_OUTPUT_DATA
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_YN220_S
*&---------------------------------------------------------------------*
*       速報（検収明細書）の出力対象データ取得
*----------------------------------------------------------------------*
form f_select_yn220_s.

check not i_lfm1[] is initial.

refresh: i_yn220.

select vrfcton             " 仕入先コード(請求先)
dvson               " プラント
knquan              " 数量
* 2012/04/07 ADD START
knunit
* 2012/04/07 ADD END
knuntprc            " 単価
kntaxamt            " 消費税額
knitxamt            " 税抜金額
knetxamt            " 税込金額
list2               " 発注番号
list3               " 発注明細番号
list5               " 品目コード
list6               " 品目テキスト
ldate1              " 入庫日
slpdoc              " 伝票番号
gjahr               " 伝票会計年度
dtldoc              " 伝票明細番号
bukrs               " 会社コード
zfbdt               " 計上締日
prctr               " 利益センタ
pernr               " 担当者
tgtflg              " 照合対象フラグ
commt               " コメント
waers               " 通貨コード
ckey1               " 照合キー1：発注番号
ckey2               " 照合キー2：インボイスNo
ckey3               " 照合キー3
ckey4               " 照合キー4
ckey5               " 照合キー5
ckey6               " 照合キー6
ckey7               " 照合キー7
ckey8               " 照合キー8
list1               " 仕入先コード(発注先)
list4               " 購買グループ
list7               " 仕入先品目
list8               " インボイスNo
list9               " 一覧表示項目9
list10              " 一覧表示項目10
from yn220
into corresponding fields of table i_yn220
for all entries in i_lfm1
* 2012/03/27 MOD インデックス対応 START
*   WHERE VRFCTON = I_LFM1-LIFNR        " 仕入先
*     AND BUKRS   = P_BUKRS             " 会社コード
*     AND ZFBDT  <= G_ZFBDT             " 計上締日
where bukrs   = p_bukrs             " 会社コード
and vrfcton = i_lfm1-lifnr        " 仕入先
* 2012/04/07 MOD START
*     AND ZFBDT  <= G_ZFBDT             " 計上締日
and zfbdt   = g_zfbdt             " 計上締日
* 2012/04/07 MOD END
* 2012/03/27 MOD インデックス対応 END
* 2012/08/02 MOD START "未照合は全て速報出力対象とする
and (   csts <> '7'
and csts <> '8' ).
*     AND CSTS    = '1'.                " 照合ステータス
* 2012/08/02 MOD END

endform.                    " F_SELECT_YN220_S
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_YN220_K
*&---------------------------------------------------------------------*
*       確報（支払通知書）の出力対象データ取得
*----------------------------------------------------------------------*
form f_select_yn220_k.

check not i_lfm1[] is initial.

refresh: i_yn220.

select vrfcton             " 仕入先コード(請求先)
dvson               " プラント
knquan              " 数量
* 2012/04/07 ADD START
knunit
* 2012/04/07 ADD END
knuntprc            " 単価
kntaxamt            " 消費税額
knitxamt            " 税抜金額
knetxamt            " 税込金額
list2               " 発注番号
list3               " 発注明細番号
list5               " 品目コード
list6               " 品目テキスト
ldate1              " 入庫日
slpdoc              " 伝票番号
gjahr               " 伝票会計年度
dtldoc              " 伝票明細番号
bukrs               " 会社コード
from yn220
into corresponding fields of table i_yn220
for all entries in i_lfm1
* 2012/03/27 MOD インデックス対応 START
*   WHERE VRFCTON = I_LFM1-LIFNR        " 仕入先
*     AND BUKRS   = P_BUKRS             " 会社コード
*     AND CZFBDT  = G_ZFBDT             " 照合締日
where  bukrs   = p_bukrs             " 会社コード
and  czfbdt  = g_zfbdt             " 照合締日
and  vrfcton = i_lfm1-lifnr        " 仕入先
* 2012/03/27 MOD インデックス対応 END
and (  csts = 7                   " 照合ステータス
or csts = 8 ).
endform.                    " F_SELECT_YN220_K
*&---------------------------------------------------------------------*
*&      Form  F_GET_SUPPLEMENT_DATA
*&---------------------------------------------------------------------*
*       補足情報取得
*----------------------------------------------------------------------*
form f_get_supplement_data.

*-- 支払予定（ZN002）の一括取得
perform f_select_zn002.

*-- 仕入先マスタの一括取得
perform f_select_lfa1_lfb1.

*-- アドレス情報の一括取得
perform f_select_adrc.

*-- プラントの一括取得
perform f_select_t001w.

endform.                    " F_GET_SUPPLEMENT_DATA
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_ZN002
*&---------------------------------------------------------------------*
*       支払予定（ZN002）の一括取得
*----------------------------------------------------------------------*
form f_select_zn002.

check not i_lfm1[] is initial.

refresh: i_zn002.

select lifnr                         " 仕入先コード(請求先)
seq                           " SEQ
pzfbdt                        " 支払予定日
pzlsch                        " 支払方法
pzterm                        " サイト
pwrbtr                        " 支払予定額
from zn002
into corresponding fields of table i_zn002
for all entries in i_lfm1
where bukrs  = p_bukrs              " 会社コード
and lifnr  = i_lfm1-lifnr         " 仕入先コード
and czfbdt = g_zfbdt.             " 締日

endform.                    " F_SELECT_ZN002
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_LFA1_LFB1
*&---------------------------------------------------------------------*
*       仕入先マスタの一括取得
*----------------------------------------------------------------------*
form f_select_lfa1_lfb1.

check not i_lfm1[] is initial.

refresh: i_lfx1.

select lfb1~lifnr                    " 仕入先コード
lfa1~pstlz                    " 仕入先郵便番号
lfa1~adrnr                    " 住所
lfb1~tlfxs                    " ファックス番号
from lfa1 inner join lfb1
on lfa1~lifnr = lfb1~lifnr
into corresponding fields of table i_lfx1
for all entries in i_lfm1
where lfb1~bukrs = p_bukrs          " 会社コード
and lfb1~lifnr = i_lfm1-lifnr.    " 仕入先コード

endform.                    " F_SELECT_LFA1_LFB1
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_ADRC
*&---------------------------------------------------------------------*
*       アドレス情報の一括取得
*----------------------------------------------------------------------*
form f_select_adrc.

check not i_lfx1[] is initial.

*** 2012/02/28 MOD START ***
*  REFRESH: I_ADRC.
*  SELECT ADRC~ADDRNUMBER                    " アドレス番号
*         ADRC~DATE_FROM                     " 有効開始日付
*         ADRC~NATION                        " 国際アドレスバージョン ID
*         ADRC~NAME2                         " 名前 2
*         ADRC~CITY1                         " 市区町村
*         ADRC~STREET                        " 都道府県名
*         T005U~BEZEI                        " 地域 (都道府県）
*    FROM ADRC INNER JOIN T005U
*      ON ADRC~REGION = T005U~BLAND
*    INTO CORRESPONDING FIELDS OF TABLE I_ADRC
*         FOR ALL ENTRIES IN I_LFx1
*   WHERE ADDRNUMBER = I_LFx1-ADRNR          " 住所
*     AND SPRAS      = 'JA'                  " 言語
*     AND LAND1      = 'JP'.                 " 国

refresh: i_adrc,
i_t005u.

select addrnumber                    " アドレス番号
date_from                     " 有効開始日付
nation                        " 国際アドレスバージョン ID
name2                         " 名前 2
city1                         " 市区町村
street                        " 都道府県名
region                        " 地域
from adrc
into corresponding fields of table i_adrc
for all entries in i_lfx1
where addrnumber = i_lfx1-adrnr.         " 住所

select bland                              " 地域
bezei                              " 内容説明
from t005u
into corresponding fields of table i_t005u
for all entries in i_adrc
where spras = 'JA'                       " 言語
and land1 = 'JP'                       " 国
and bland = i_adrc-region.             " 地域

*-- アドレス情報(ADRC)に地域名称(T005U)を付与
loop at i_adrc into w_adrc.
clear: w_t005u.
read table i_t005u into w_t005u
with key bland = w_adrc-region      " 地域
binary search.
if sy-subrc = 0.
w_adrc-bezei = w_t005u-bezei.         " 内容説明
modify i_adrc from w_adrc.
endif.
endloop.
*** 2012/02/28 MOD END   ***

endform.                    " F_SELECT_ADRC
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_T001W
*&---------------------------------------------------------------------*
*       プラントの一括取得
*----------------------------------------------------------------------*
form f_select_t001w.

check not i_yn220[] is initial.

refresh: i_t001w.

select werks                         " プラント
name1                         " 名称
from t001w
into corresponding fields of table i_t001w
for all entries in i_yn220
where werks = i_yn220-dvson.        " プラント

endform.                    " F_SELECT_T001W
*&---------------------------------------------------------------------*
*&      Form  F_EDIT_FILE_DATA
*&---------------------------------------------------------------------*
*       ファイル編集処理
*----------------------------------------------------------------------*
form f_edit_file_data.

data: l_flg_break_vrfcton type xfeld,
l_flg_break_dvson   type xfeld.

*-- 支払予定の事前編集(支払通知書のみ)
if r_kakuho = c_flg_on.
perform f_edit_zn002.
endif.

*-- ソート(仕入先コード/プラント/入庫日/注文番号/明細)
sort i_yn220 ascending by vrfcton
dvson
ldate1
list2
list3.

clear: g_cnt_seq.

loop at i_yn220 into w_yn220.

at new vrfcton.
l_flg_break_vrfcton = c_flg_on.
endat.

if l_flg_break_vrfcton = c_flg_on.
clear: l_flg_break_vrfcton,
g_cnt_seq,
g_sum_total.
*-- ヘッダデータ(仕入先)の編集
perform f_edit_header_data_lifnr.
endif.

at new dvson.
l_flg_break_dvson = c_flg_on.
endat.

if l_flg_break_dvson = c_flg_on.
clear: l_flg_break_dvson,
g_sum_taxam,
g_sum_itxam,
g_sum_etxam.
*-- ヘッダデータ(プラント)の編集
perform f_edit_header_data_werks.
endif.

*-- 明細データの編集
perform f_edit_detail_data.

*-- その他個別編集
perform f_edit_others.

append w_data     to i_data.
append w_zn003_up to i_zn003_up.
*-- 更新件数のカウント(LINES命令使用不可のため)
g_cnt_upd = g_cnt_upd + 1.

at end of dvson.
l_flg_break_dvson = c_flg_on.
endat.

if l_flg_break_dvson = c_flg_on.
clear: l_flg_break_dvson.
*-- プラント金額の更新
perform f_modify_werks_wrbtr.
endif.

at end of vrfcton.
l_flg_break_vrfcton = c_flg_on.
endat.

if l_flg_break_vrfcton = c_flg_on.
clear: l_flg_break_vrfcton.
*-- 総額の更新
perform f_modify_total_wrbtr.
endif.

endloop.

free: i_lfm1,
i_lfx1,
i_adrc,
i_t001w,
i_zn002_ed.

endform.                    " F_EDIT_FILE_DATA
*&---------------------------------------------------------------------*
*&      Form  F_EDIT_ZN002
*&---------------------------------------------------------------------*
*       支払予定の事前編集
*----------------------------------------------------------------------*
form f_edit_zn002.

loop at i_zn002 into w_zn002.
w_zn002_ed-lifnr = w_zn002-lifnr.  " 仕入先コード
w_zn002_ed-wrbtr = w_zn002-pwrbtr. " 支払予定額
case w_zn002-pzlsch.
when 'E'
or 'T'.
w_zn002_ed-rnkno = 1.              " 優先順位
w_zn002_ed-zlstx = c_zlstx1.       " 支払方法テキスト
w_zn002_ed-zfbdt = w_zn002-pzfbdt. " 支払予定日
* 2013/11/19 ADD START "電子記録債務追加
when 'Q'.
w_zn002_ed-rnkno = 2.              " 優先順位
w_zn002_ed-zlstx = c_zlstx6.       " 支払方法テキスト
*-- 支払予定日の編集
perform f_call_zfbdt_get_by_zterm using w_zn002-pzfbdt
w_zn002-pzterm
changing w_zn002_ed-zfbdt.
* 2013/11/19 ADD END
when 'K'
or 'Z'.
* 2013/11/19 MOD START "優先順位の変更
*        w_zn002_ed-rnkno = 2.              " 優先順位
w_zn002_ed-rnkno = 3.              " 優先順位
* 2013/11/19 MOD END
w_zn002_ed-zlstx = c_zlstx2.       " 支払方法テキスト
*-- 支払予定日の編集
perform f_call_zfbdt_get_by_zterm using w_zn002-pzfbdt
w_zn002-pzterm
changing w_zn002_ed-zfbdt.
when 'S'.
* 2013/11/19 MOD START "優先順位の変更
*        w_zn002_ed-rnkno = 3.              " 優先順位
w_zn002_ed-rnkno = 4.              " 優先順位
* 2013/11/19 MOD END
w_zn002_ed-zlstx = c_zlstx3.       " 支払方法テキスト
w_zn002_ed-zfbdt = w_zn002-pzfbdt. " 支払予定日
when 'B'.
* 2013/11/19 MOD START "優先順位の変更
*        w_zn002_ed-rnkno = 4.              " 優先順位
w_zn002_ed-rnkno = 5.              " 優先順位
* 2013/11/19 MOD END
w_zn002_ed-zlstx = c_zlstx4.       " 支払方法テキスト
*-- 支払予定日の編集
perform f_call_zfbdt_get_by_zterm using w_zn002-pzfbdt
w_zn002-pzterm
changing w_zn002_ed-zfbdt.
when others.
* 2013/11/19 MOD START "優先順位の変更
*        w_zn002_ed-rnkno = 5.              " 優先順位
w_zn002_ed-rnkno = 6.              " 優先順位
* 2013/11/19 MOD END
w_zn002_ed-zlstx = c_zlstx5.       " 支払方法テキスト
w_zn002_ed-zfbdt = w_zn002-pzfbdt. " 支払予定日
endcase.
append w_zn002_ed to i_zn002_ed.
endloop.

sort i_zn002_ed ascending by lifnr   " 仕入先コード
rnkno   " 優先順位
zfbdt.  " 支払予定日

endform.                    " F_EDIT_ZN002
*&---------------------------------------------------------------------*
*&      Form  F_CALL_ZFBDT_GET_BY_ZTERM
*&---------------------------------------------------------------------*
*       支払予定日の編集
*----------------------------------------------------------------------*
*      -->AI_PZFBDT     支払予定日
*      -->AI_PZTERM     サイト
*      <--AO_SHIHARAIBI 支払日
*----------------------------------------------------------------------*
form f_call_zfbdt_get_by_zterm using value(ai_pzfbdt)     type any
value(ai_pzterm)     type any
changing value(ao_shiharaibi) type any.

call function 'YK_ZFBDT_GET_BY_ZTERM'
exporting
i_zterm              = ai_pzterm
i_day                = ai_pzfbdt
importing
e_siharaibi          = ao_shiharaibi
exceptions
others               = 0.

endform.                    " F_CALL_ZFBDT_GET_BY_ZTERM
*&---------------------------------------------------------------------*
*&      Form  F_EDIT_HEADER_DATA_LIFNR
*&---------------------------------------------------------------------*
*       ヘッダデータ(仕入先)の編集
*----------------------------------------------------------------------*
form f_edit_header_data_lifnr.

data: l_count_line type i,
l_wrbtr      like zn002-pwrbtr.

clear: l_count_line,
l_wrbtr,
w_data,
w_zn003_up,
w_lfx1,
w_adrc,
w_lfm1.

*-- 補足情報の読込み
read table i_lfx1 into w_lfx1
with table key lifnr = w_yn220-vrfcton. " 仕入先
read table i_adrc into w_adrc
with key addrnumber = w_lfx1-adrnr      " 住所
binary search.
read table i_lfm1 into w_lfm1
with key lifnr = w_yn220-vrfcton.  " 仕入先コード

*-- 計上年月
concatenate p_years+0(4)
'/'
p_years+4(2)
into w_data-years.
w_zn003_up-outmnth = p_years.

*-- 帳票名称
if r_sokuho = c_flg_on.
w_data-tname = w_zn003_up-outkbn = c_sokuho.
else.
w_data-tname = w_zn003_up-outkbn = c_kakuho.
endif.
*-- 仕入先コード
w_data-lifnr = w_zn003_up-lifnr   = w_lfx1-lifnr.
*-- 発行日
perform f_conv__exit_pdate_output using sy-datum
changing w_data-odate.
w_zn003_up-printdt = sy-datum.
*-- 仕入先名
w_data-name2 = w_zn003_up-name2   = w_adrc-name2.
*-- 仕入先郵便番号
w_data-pstlz = w_zn003_up-pstlz   = w_lfx1-pstlz.
*-- 地域
w_data-bezei = w_zn003_up-buzei_t = w_adrc-bezei.
*-- 都道府県
w_data-stree = w_zn003_up-street  = w_adrc-street.
*-- 市区町村
w_data-city1 = w_zn003_up-city1   = w_adrc-city1.
*-- ファックス番号
w_data-telfx = w_zn003_up-telfx   = w_lfx1-tlfxs.
*-- 通貨コード
w_data-waers = w_zn003_up-waers   = w_lfm1-waers.

loop at i_zn002_ed into w_zn002_ed where lifnr = w_yn220-vrfcton.

l_count_line = l_count_line + 1.

case l_count_line.
when 1.
*-- 金種1-文言
w_data-zlsc1 = w_zn003_up-pkbn1   = w_zn002_ed-zlstx.
*-- 金種1-金額
w_zn003_up-pwrbtr1 = w_zn002_ed-wrbtr.
perform f_currency_conv_to_external using w_lfm1-waers
w_zn002_ed-wrbtr
changing w_data-wrbt1.
perform f_cloi_put_sign_in_front using w_data-wrbt1
changing w_data-wrbt1.
*-- 金種1-期日
perform f_conv__exit_pdate_output using w_zn002_ed-zfbdt
changing w_data-zfbd1.
w_zn003_up-pzfbdt1 = w_zn002_ed-zfbdt.
when 2.
*-- 金種2-文言
w_data-zlsc2 = w_zn003_up-pkbn2   = w_zn002_ed-zlstx.
*-- 金種2-金額
w_zn003_up-pwrbtr2 = w_zn002_ed-wrbtr.
perform f_currency_conv_to_external using w_lfm1-waers
w_zn002_ed-wrbtr
changing w_data-wrbt2.
perform f_cloi_put_sign_in_front using w_data-wrbt2
changing w_data-wrbt2.
*-- 金種2-期日
perform f_conv__exit_pdate_output using w_zn002_ed-zfbdt
changing w_data-zfbd2.
w_zn003_up-pzfbdt2 = w_zn002_ed-zfbdt.
when 3.
*-- 金種3-文言
w_data-zlsc3 = w_zn003_up-pkbn3   = w_zn002_ed-zlstx.
*-- 金種3-金額
w_zn003_up-pwrbtr3 = w_zn002_ed-wrbtr.
perform f_currency_conv_to_external using w_lfm1-waers
w_zn002_ed-wrbtr
changing w_data-wrbt3.
perform f_cloi_put_sign_in_front using w_data-wrbt3
changing w_data-wrbt3.
*-- 金種3-期日
perform f_conv__exit_pdate_output using w_zn002_ed-zfbdt
changing w_data-zfbd3.
w_zn003_up-pzfbdt3 = w_zn002_ed-zfbdt.
when 4.
*-- 金種4-文言
w_data-zlsc4 = w_zn003_up-pkbn4   = w_zn002_ed-zlstx.
*-- 金種4-金額
l_wrbtr = w_zn003_up-pwrbtr4 = w_zn002_ed-wrbtr.
perform f_currency_conv_to_external using w_lfm1-waers
w_zn002_ed-wrbtr
changing w_data-wrbt4.
perform f_cloi_put_sign_in_front using w_data-wrbt4
changing w_data-wrbt4.
*-- 金種4-期日
perform f_conv__exit_pdate_output using w_zn002_ed-zfbdt
changing w_data-zfbd4.
w_zn003_up-pzfbdt4 = w_zn002_ed-zfbdt.
when others.
*-- 金種4-文言
w_data-zlsc4 = w_zn003_up-pkbn4   = c_zlstx5.
*-- 金種4-金額
w_zn003_up-pwrbtr4 = l_wrbtr = l_wrbtr + w_zn002_ed-wrbtr.
perform f_currency_conv_to_external using w_lfm1-waers
w_zn003_up-pwrbtr4
changing w_data-wrbt4.
perform f_cloi_put_sign_in_front using w_data-wrbt4
changing w_data-wrbt4.
*-- 金種4-期日
w_data-zfbd4 = w_zn003_up-pzfbdt4 = space.
endcase.
endloop.

endform.                    " F_EDIT_HEADER_DATA_LIFNR
*&---------------------------------------------------------------------*
*&      Form  F_CURRENCY_CONV_TO_EXTERNAL
*&---------------------------------------------------------------------*
*       内部⇒外部書式への変換
*----------------------------------------------------------------------*
*      -->AI_WEARS  通貨コード
*      -->AI_WRBTR  内部書式金額
*      <--AO_WRBTR  外部書式金額
*----------------------------------------------------------------------*
form f_currency_conv_to_external using value(ai_waers) type any
value(ai_wrbtr) type any
changing value(ao_wrbtr) type any.

data: l_wrbtr_e type bapicurr-bapicurr,
l_wrbtr_r type p decimals 2.

call function 'BAPI_CURRENCY_CONV_TO_EXTERNAL'
exporting
currency              = ai_waers
amount_internal       = ai_wrbtr
importing
amount_external       = l_wrbtr_e.

*-- 小数２桁に変換
call function 'ROUND'
exporting
decimals            = 2
input               = l_wrbtr_e
sign                = 'X'
importing
output              = l_wrbtr_r
exceptions
others              = 0.

ao_wrbtr = l_wrbtr_r.

endform.                    " F_CURRENCY_CONV_TO_EXTERNAL
*&---------------------------------------------------------------------*
*&      Form  F_CLOI_PUT_SIGN_IN_FRONT
*&---------------------------------------------------------------------*
*       金額符号の前置換
*----------------------------------------------------------------------*
*      -->AI_WRBTR  符号後付金額
*      <--AO_WRBTR  符号前付金額
*----------------------------------------------------------------------*
form f_cloi_put_sign_in_front using value(ai_wrbtr) type any
changing value(ao_wrbtr) type any.

call function 'CLOI_PUT_SIGN_IN_FRONT'
changing
value         =  ai_wrbtr.

ao_wrbtr = ai_wrbtr.

endform.                    " F_CLOI_PUT_SIGN_IN_FRONT
*&---------------------------------------------------------------------*
*&      Form  F_CONV__EXIT_PDATE_OUTPUT
*&---------------------------------------------------------------------*
*       日付書式の変換（内部⇒外部）
*----------------------------------------------------------------------*
*      -->AI_DATE  内部書式日付
*      <--AO_DATE  外部書式日付
*----------------------------------------------------------------------*
form f_conv__exit_pdate_output using value(ai_date) type any
changing value(ao_date) type any.

data: l_date(10) type c.

check not ai_date = space.

call function 'CONVERSION_EXIT_PDATE_OUTPUT'
exporting
input  = ai_date
importing
output = l_date.

ao_date = l_date.

endform.                    " F_CONV__EXIT_PDATE_OUTPUT
*&---------------------------------------------------------------------*
*&      Form  F_EDIT_HEADER_DATA_WERKS
*&---------------------------------------------------------------------*
*       ヘッダデータ(プラント)の編集
*----------------------------------------------------------------------*
form f_edit_header_data_werks.

*-- 補足情報の読込み
read table i_t001w into w_t001w
with key werks = w_yn220-dvson. " プラントコード
*-- プラントコード
w_data-dvson = w_zn003_up-werks  = w_yn220-dvson.
*-- プラント名
w_data-name1 = w_zn003_up-pname1 = w_t001w-name1.

endform.                    " F_EDIT_HEADER_DATA_WERKS
*&---------------------------------------------------------------------*
*&      Form  F_EDIT_DETAIL_DATA
*&---------------------------------------------------------------------*
*       明細データの編集
*----------------------------------------------------------------------*
form f_edit_detail_data.

data: l_knuntprc type p decimals 4,    " 単価(小数４桁)
l_knquan   type p decimals 2,    " 数量(小数２桁)
*** 2012/01/24 INSERT START ***
l_ebelp    type char4.           " 作業用の発注明細番号の定義

clear l_ebelp.
*** 2012/01/24 INSERT END ***


*-- 入庫日
perform f_conv__exit_pdate_output using w_yn220-ldate1
changing w_data-ldate.
w_zn003_up-grdat = w_yn220-ldate1.
*-- 注文番号
*** 2012/01/24 INSERT START ***
*** W_YK230-EBELPの前０を除去する。
call function 'CONVERSION_EXIT_ALPHA_OUTPUT'
exporting
input         = w_yn220-list3+0(4)
importing
output        = l_ebelp
.
*** 2012/01/24 INSERT END ***

concatenate w_yn220-dvson+1(2)
'-'
w_yn220-list2
'-'
*** 2012/01/24 MOD START ***
*              W_YN220-LIST3
l_ebelp
*** 2012/01/24 MOD END ***
into w_data-list2.
w_zn003_up-pono = w_data-list2.
*-- 品目コード
w_data-list5 = w_zn003_up-matnr    = w_yn220-list5.
*-- 品名
w_data-list6 = w_zn003_up-txz01    = w_yn220-list6.
*-- 単価
w_zn003_up-knuntprc = w_yn220-knuntprc.
w_data-knunt        = l_knuntprc       = w_yn220-knuntprc.
perform f_cloi_put_sign_in_front using w_data-knunt
changing w_data-knunt.
*-- 数量
w_zn003_up-knquan   = w_yn220-knquan.
w_data-knqua        = l_knquan         = w_yn220-knquan.
perform f_cloi_put_sign_in_front using w_data-knqua
changing w_data-knqua.
*-- 税抜金額
w_zn003_up-knitxamt = w_yn220-knitxamt.
perform f_currency_conv_to_external using w_lfm1-waers
w_yn220-knitxamt
changing w_data-knitx.
perform f_cloi_put_sign_in_front using w_data-knitx
changing w_data-knitx.
*-- 税額
w_zn003_up-kntaxamt = w_yn220-kntaxamt.
perform f_currency_conv_to_external using w_lfm1-waers
w_yn220-kntaxamt
changing w_data-kntax.
perform f_cloi_put_sign_in_front using w_data-kntax
changing w_data-kntax.
*-- 税込金額
w_zn003_up-knetxamt = w_yn220-knetxamt.
perform f_currency_conv_to_external using w_lfm1-waers
w_yn220-knetxamt
changing w_data-knetx.
perform f_cloi_put_sign_in_front using w_data-knetx
changing w_data-knetx.

endform.                    " F_EDIT_DETAIL_DATA
*&---------------------------------------------------------------------*
*&      Form  F_EDIT_OTHERS
*&---------------------------------------------------------------------*
*       その他個別編集(金額計算)
*----------------------------------------------------------------------*
form f_edit_others.

*-- SEQ(ヘッダ)
g_cnt_seq    = g_cnt_seq + 1.
w_data-seqno = w_zn003_up-seq = g_cnt_seq.

*-- 総額計算
g_sum_total = g_sum_total + w_yn220-knetxamt.
*-- 消費税額計算
g_sum_taxam = g_sum_taxam + w_yn220-kntaxamt.
*-- 税抜金額計算
g_sum_itxam = g_sum_itxam + w_yn220-knitxamt.
*-- 税込金額計算
g_sum_etxam = g_sum_etxam + w_yn220-knetxamt.

*-- 会計年度(履歴テーブル用)
w_zn003_up-gjahr_re = w_yn220-gjahr.
*-- 請求書照合番号(履歴テーブル用)
w_zn003_up-belnr_re = w_yn220-slpdoc.
*-- 明細(履歴テーブル用)
w_zn003_up-buzei_re = w_yn220-dtldoc.
*-- 登録日(履歴テーブル用)
w_zn003_up-insdt    = sy-datum.
*-- 登録時刻(履歴テーブル用)
w_zn003_up-instm    = sy-uzeit.
*-- 登録ユーザ(履歴テーブル用)
w_zn003_up-insusr   = sy-uname.

endform.                    " F_EDIT_OTHERS
*&---------------------------------------------------------------------*
*&      Form  F_MODIFY_WERKS_WRBTR
*&---------------------------------------------------------------------*
*       プラント金額の更新
*----------------------------------------------------------------------*
form f_modify_werks_wrbtr.

*-- プラント税抜金額
w_zn003_up-pstotal = g_sum_itxam.
perform f_currency_conv_to_external using w_lfm1-waers
g_sum_itxam
changing w_data-itxam.
perform f_cloi_put_sign_in_front using w_data-itxam
changing w_data-itxam.

*-- プラント消費税額
w_zn003_up-pstax   = g_sum_taxam.
perform f_currency_conv_to_external using w_lfm1-waers
g_sum_taxam
changing w_data-taxam.
perform f_cloi_put_sign_in_front using w_data-taxam
changing w_data-taxam.

*-- プラント税込金額
w_zn003_up-pswrbtr = g_sum_etxam.
perform f_currency_conv_to_external using w_lfm1-waers
g_sum_etxam
changing w_data-etxam.
perform f_cloi_put_sign_in_front using w_data-etxam
changing w_data-etxam.

modify i_data from w_data
transporting taxam itxam etxam
where lifnr = w_yn220-vrfcton
and dvson = w_yn220-dvson.

modify i_zn003_up from w_zn003_up
transporting pstax pstotal pswrbtr
where lifnr = w_yn220-vrfcton
and werks = w_yn220-dvson.

endform.                    " F_MODIFY_WERKS_WRBTR
*&---------------------------------------------------------------------*
*&      Form  F_MODIFY_TOTAL_WRBTR
*&---------------------------------------------------------------------*
*       総額の更新
*----------------------------------------------------------------------*
form f_modify_total_wrbtr.

*-- 総額
w_zn003_up-ptwrbtr = g_sum_total.
perform f_currency_conv_to_external using w_lfm1-waers
g_sum_total
changing w_data-total.
perform f_cloi_put_sign_in_front using w_data-total
changing w_data-total.

modify i_data from w_data transporting total
where lifnr = w_yn220-vrfcton.

modify i_zn003_up from w_zn003_up transporting ptwrbtr
where lifnr = w_yn220-vrfcton.

endform.                    " F_MODIFY_TOTAL_WRBTR
*&---------------------------------------------------------------------*
*&      Form  F_INSERT_ZN003
*&---------------------------------------------------------------------*
*       出力履歴テーブルの更新
*----------------------------------------------------------------------*
form f_insert_zn003.

insert zn003 from table i_zn003_up.
if sy-subrc <> 0.
rollback work.
*-- ZN003 更新エラー
message i758 with text-m04.
leave list-processing.
endif.

free: i_zn003_up.

endform.                    " F_INSERT_ZN003
*&---------------------------------------------------------------------*
*&      Form  F_UPDATE_YN2x0
*&---------------------------------------------------------------------*
*       自社データ（YN220）/外部データ（YN210)の更新
*----------------------------------------------------------------------*
form f_update_yn2x0.

*-- 検収明細書の場合
if r_sokuho = c_flg_on.
perform f_update_yn2x0_s.
else.
*-- 支払通知書の場合
perform f_update_yn220_k.
endif.

free: i_yn220.

endform.                    " F_UPDATE_YN2x0
*&---------------------------------------------------------------------*
*&      Form  F_UPDATE_YN2x0_S
*&---------------------------------------------------------------------*
*       自社データ（YN220）/外部データ（YN210)の更新 (検収明細書)
*----------------------------------------------------------------------*
form f_update_yn2x0_s.

data: l_chkdoc like yn220-chkdoc.

refresh: i_yn210_up.

loop at i_yn220 into w_yn220.
*-- 照合番号取得
clear: l_chkdoc.
perform f_get_chkdoc changing l_chkdoc.
*-- 自社データ更新
update yn220 set csts     = '7'              " 照合ステータス
chkdoc   = l_chkdoc         " 照合番号
chkdat   = sy-datum         " 照合日
chkusr   = sy-uname         " 照合ユーザ
upddat   = sy-datum         " 更新日
updtim   = sy-uzeit         " 更新時刻
updusr   = sy-uname         " 更新ユーザ
updprg   = sy-repid         " 更新プログラム
czfbdt   = g_zfbdt          " 照合締日
outmnth1 = p_years          " 検収明細書出力月
printdt1 = sy-datum         " 検収明細書出力日
where gjahr   = w_yn220-gjahr     " 会計年度
and slpdoc  = w_yn220-slpdoc    " 会計伝票番号
and dtldoc  = w_yn220-dtldoc    " 会計伝票明細
and vrfcton = w_yn220-vrfcton   " 仕入先コード
and bukrs   = p_bukrs.          " 会社コード
if sy-subrc <> 0.
rollback work.
*-- YN220 更新エラー
message i758 with text-m05.
leave list-processing.
endif.

*-- 外部データ登録レコード作成
clear: w_yn210_up.
move-corresponding w_yn220 to w_yn210_up.
w_yn210_up-csts      = '7'.              " 照合ステータス
w_yn210_up-chkdoc    = l_chkdoc.         " 照合番号
w_yn210_up-chkdat    = sy-datum.         " 照合日
w_yn210_up-chkusr    = sy-uname.         " 照合ユーザ
w_yn210_up-upddat    = sy-datum.         " 更新日
w_yn210_up-updtim    = sy-uzeit.         " 更新時刻
w_yn210_up-updusr    = sy-uname.         " 更新ユーザ
w_yn210_up-updprg    = sy-repid.         " 更新プログラム
w_yn210_up-insdt     = sy-datum.         " 登録日
w_yn210_up-czfbdt    = g_zfbdt.          " 照合締日
w_yn210_up-autoflg_p = c_flg_on.         " 自動生成明細（支払通知）
append w_yn210_up to i_yn210_up.
endloop.

*-- 外部データ一括更新
insert yn210 from table i_yn210_up.
if sy-subrc <> 0.
rollback work.
*-- YN210 更新エラー
message i758 with text-m06.
leave list-processing.
endif.

endform.                    " F_UPDATE_YN2x0
*&---------------------------------------------------------------------*
*&      Form  F_UPDATE_YN220_K
*&---------------------------------------------------------------------*
*       自社データ（YN220）の更新 (支払通知書)
*----------------------------------------------------------------------*
form f_update_yn220_k.

data: l_chkdoc like yn220-chkdoc.

loop at i_yn220 into w_yn220.
*-- 照合番号取得
clear: l_chkdoc.
*** 2012/01/24 DEL START ***
*    PERFORM F_GET_CHKDOC CHANGING L_CHKDOC.
*** 2012/01/24 DEL END ***
update yn220 set upddat   = sy-datum         " 更新日
updtim   = sy-uzeit         " 更新時刻
updusr   = sy-uname         " 更新ユーザ
updprg   = sy-repid         " 更新プログラム
outmnth2 = p_years          " 支払通知書出力月
printdt2 = sy-datum         " 支払通知書出力日
where gjahr   = w_yn220-gjahr     " 会計年度
and slpdoc  = w_yn220-slpdoc    " 会計伝票番号
and dtldoc  = w_yn220-dtldoc    " 会計伝票明細
and vrfcton = w_yn220-vrfcton   " 仕入先コード
and bukrs   = p_bukrs.          " 会社コード
if sy-subrc <> 0.
rollback work.
*-- YN220 更新エラー
message i758 with text-m05.
leave list-processing.
endif.
endloop.

endform.                    " F_UPDATE_YN220_K
*&---------------------------------------------------------------------*
*&      Form  F_GET_CHKDOC
*&---------------------------------------------------------------------*
*       照合番号取得
*----------------------------------------------------------------------*
*       <--AO_CHKDOC 照合番号
*----------------------------------------------------------------------*
form f_get_chkdoc changing value(ao_chkdoc) type any.

call function 'NUMBER_GET_NEXT'
exporting
nr_range_nr             = '10'
object                  = 'YNCHKDOC2'
quantity                = '1'
subobject               = p_bukrs
importing
number                  = ao_chkdoc
exceptions
interval_not_found      = 1
number_range_not_intern = 2
object_not_found        = 3
quantity_is_0           = 5
quantity_is_not_1       = 5
interval_overflow       = 6
others                  = 7.

if sy-subrc <> 0.
rollback work.
*-- 照合番号取得エラー
message i754 with text-m03.
leave list-processing.
endif.

endform.                    " F_GET_CHKDOC
*&---------------------------------------------------------------------*
*&      Form  F_OUTPUT_FILE
*&---------------------------------------------------------------------*
*       ファイル出力
*----------------------------------------------------------------------*
form f_output_file.

*-- IFファイル出力
perform f_output_file_i.

*-- 起動用ファイル出力
perform f_output_file_s.

endform.                    " F_OUTPUT_FILE
*&---------------------------------------------------------------------*
*&      Form  F_OUTPUT_FILE_I
*&---------------------------------------------------------------------*
*       IFファイル出力
*----------------------------------------------------------------------*
form f_output_file_i.

data: l_fname type rlgrap-filename,
l_data  type string.
* Add ES-UP 2012/10/16 -->
data: l_conv type ref to zcl_conv_to_sjis,
l_errfile type string,
l_message type string,
l_openflg type abap_bool.
* Add ES-UP 2012/12/07 -->
data: l_name2_len   type i,
l_buzei_t_len type i,
l_street_len  type i,
l_city1_len   type i,
l_pname1_len  type i,
l_txz01_len   type i.
* Add ES-UP 2012/12/07 <--
create object l_conv.
* Add ES-UP 2012/10/16 <--
concatenate p_dname
p_fname
into l_fname.
* Mod ES-UP 2012/10/16 -->
*  OPEN DATASET L_FNAME FOR OUTPUT IN TEXT MODE.
l_errfile = l_conv->get_error_filename( filename = l_fname
foldnum  = 0 ).
if l_errfile is initial.
message e001(z2).
endif.

open dataset l_fname for output
in legacy text mode code page l_conv->codepage
ignoring conversion errors.
* Mod ES-UP 2012/10/16 <--
if sy-subrc <> 0.
rollback work.
*-- ファイルオープンエラー
message i766 with text-m07.
leave list-processing.
endif.

* Add ES-UP 2012/11/27 -->
l_openflg = abap_false.
* Add ES-UP 2012/11/27 <--
loop at i_data into w_data.
* Add ES-UP 2012/12/07 -->
perform sjis_length using:
w_data-name2   40 l_name2_len,    "仕入先名
w_data-bezei   20 l_buzei_t_len,  "地域
w_data-stree   60 l_street_len,   "都道府県
w_data-city1   40 l_city1_len,    "市区町村
w_data-name1   30 l_pname1_len,   "プラント名
w_data-list6   40 l_txz01_len.    "品名
* Add ES-UP 2012/12/07 <--
*-- カンマ区切りファイル出力データ作成
concatenate w_data-years                " 計上年月
w_data-tname                " 帳票名称
w_data-lifnr                " 仕入先コード
w_data-seqno                " SEQ
w_data-odate                " 発行日
* Mod ES-UP 2012/12/07 -->
*                W_DATA-NAME2                " 仕入先名
w_data-name2(l_name2_len)     " 仕入先名
* Mod ES-UP 2012/12/07 <--
w_data-pstlz                " 仕入先郵便番号
* Mod ES-UP 2012/12/07 -->
*                W_DATA-BEZEI                " 地域
*                W_DATA-STREE                " 都道府県
*                W_DATA-CITY1                " 市区町村
w_data-bezei(l_buzei_t_len)  " 地域
w_data-stree(l_street_len)   " 都道府県
w_data-city1(l_city1_len)    " 市区町村
* Mod ES-UP 2012/12/07 <--
w_data-telfx                " ファックス番号
w_data-total                " 総額
w_data-waers                " 通貨コード
w_data-zlsc1                " 金種1-文言
w_data-wrbt1                " 金種1-金額
w_data-zfbd1                " 金種1-期日
w_data-zlsc2                " 金種2-文言
w_data-wrbt2                " 金種2-金額
w_data-zfbd2                " 金種2-期日
w_data-zlsc3                " 金種3-文言
w_data-wrbt3                " 金種3-金額
w_data-zfbd3                " 金種3-期日
w_data-zlsc4                " 金種4-文言
w_data-wrbt4                " 金種4-金額
w_data-zfbd4                " 金種4-期日
w_data-dvson                " プラントコード
* Mod ES-UP 2012/12/07 -->
*                W_DATA-NAME1                " プラント名
w_data-name1(l_pname1_len)   " プラント名
* Mod ES-UP 2012/12/07 <--
w_data-itxam                " 税抜金額
w_data-taxam                " 消費税額
w_data-etxam                " 税込金額
w_data-ldate                " 入庫日
w_data-list2                " 注文番号
w_data-list5                " 品目コード
* Mod ES-UP 2012/12/07 -->
*                W_DATA-LIST6                " 品名
w_data-list6(l_txz01_len)     " 品名
* Mod ES-UP 2012/12/07 <--
w_data-knunt                " 単価
w_data-knqua                " 数量
w_data-knitx                " 税抜金額
w_data-kntax                " 税額
w_data-knetx                " 税込金額
into l_data
separated by '","'.
concatenate '"'
l_data
'"'
into l_data.
transfer l_data to l_fname.
* Add ES-UP 2012/11/27 -->
if l_conv->convert_check( l_data ) = abap_true.
else.
if l_openflg = abap_false.
l_openflg = abap_true.
open dataset l_errfile for output
in legacy text mode code page l_conv->codepage
message l_message
ignoring conversion errors.
if sy-subrc <> 0.
message l_message type 'E'.
endif.
endif.
transfer l_data to l_errfile.
endif.
* Add ES-UP 2012/11/27 <--
if sy-subrc <> 0.
rollback work.
*-- ファイル出力エラー
message i789 with text-m07.
leave list-processing.
endif.
*-- 出力件数カウント
g_cnt_out = g_cnt_out + 1.
endloop.

close dataset l_fname.
if sy-subrc <> 0.
rollback work.
*-- ファイル出力エラー
message i789 with text-m07.
leave list-processing.
endif.
* Add ES-UP 2012/11/27 -->
if l_openflg = abap_true.
close dataset l_errfile.
message s002(z2).
endif.
* Add ES-UP 2012/11/27 <--
free: i_data.

endform.                    " F_OUTPUT_FILE_I
*&---------------------------------------------------------------------*
*&      Form  F_OUTPUT_FILE_S
*&---------------------------------------------------------------------*
*       起動用ファイル出力
*----------------------------------------------------------------------*
form f_output_file_s.

data: l_fname type rlgrap-filename.
* Mod ES-UP 2012/10/16 -->
data l_codepage type abap_encoding.
l_codepage = cl_abap_codepage=>sap_codepage( cns_sjis ).
* Mod ES-UP 2012/10/16 <--
concatenate p_dname
p_sname
into l_fname.
* Mod ES-UP 2012/10/16 -->
open dataset l_fname for output
in legacy text mode code page l_codepage
ignoring conversion errors.
* Mod ES-UP 2012/10/16 <--
if sy-subrc <> 0.
rollback work.
*-- ファイルオープンエラー
message i766 with text-m07.
leave list-processing.
endif.
* Add ES-UP 2012/10/16 -->
close dataset l_fname.
* Add ES-UP 2012/10/16 <--
endform.                    " F_OUTPUT_FILE_S
*&---------------------------------------------------------------------*
*&      Form  F_RELEASE_TABLE_LOCK_O
*&---------------------------------------------------------------------*
*       テーブルロック解除(出力時)
*----------------------------------------------------------------------*
form f_release_table_lock_o.

*-- 自社/外部データ（仕入）ロック解除
perform f_table_unlock_901.
*-- 支払予定データロック解除
if r_kakuho = c_flg_on.
perform f_table_unlock_zn002.
endif.

free: i_enq_key.

endform.                    " F_RELEASE_TABLE_LOCK_O
*&---------------------------------------------------------------------*
*&      Form  F_TABLE_UNLOCK_901
*&---------------------------------------------------------------------*
*       自社/外部データ（仕入）テーブルロック解除
*----------------------------------------------------------------------*
form f_table_unlock_901.

loop at i_enq_key into w_enq_key.
call function 'DEQUEUE_EZN901'
exporting
mode_zn901     = 'E'
mandt          = sy-mandt
bukrs          = w_enq_key-bukrs
lifnr          = w_enq_key-lifnr
werks          = w_enq_key-werks.
endloop.

endform.                    " F_TABLE_UNLOCK_901
*&---------------------------------------------------------------------*
*&      Form  F_TABLE_UNLOCK_ZN002
*&---------------------------------------------------------------------*
*       支払予定データロック解除
*----------------------------------------------------------------------*
form f_table_unlock_zn002.

loop at i_enq_key into w_enq_key.
call function 'DEQUEUE_EZN002'
exporting
mode_zn002     = 'E'
mandt          = sy-mandt
bukrs          = w_enq_key-bukrs
lifnr          = w_enq_key-lifnr
czfbdt         = g_zfbdt.
endloop.

endform.                    " F_TABLE_UNLOCK_ZN002
*&---------------------------------------------------------------------*
*&      Form  F_DISPLAY_OUTPUT_LOG
*&---------------------------------------------------------------------*
*       出力ログ表示
*----------------------------------------------------------------------*
form f_display_output_log.

data: l_line type i.

write: / text-l01.
uline.

if g_cnt_err > 0.
*-- 仕入先コード/エラー内容
write: 04(012) text-l02,
26(128) text-l03.
uline.
endif.

loop at tbl_errlog.
write:/04(012) tbl_errlog-lifnr,
26(128) tbl_errlog-err.
l_line = sy-tabix mod 36.
if l_line = 0 and sy-tabix >= 36.
new-page.
endif.
endloop.

if g_cnt_err > 0.
skip.
skip.
endif.
skip.

*-- 更新件数:  件
write: /04    text-l04,
29(8) g_cnt_upd,
text-l05.
*-- 出力件数:  件
write: /04    text-l06,
29(8) g_cnt_out,
text-l05.
*-- エラー件数:  件
write: /04    text-l07,
29(8) g_cnt_err,
text-l05.

if g_cnt_err > 0.
*-- エラーがあります。
message i759.
endif.

endform.                    " F_DISPLAY_OUTPUT_LOG
*&---------------------------------------------------------------------*
*&      Form  F_GET_OUTPUT_AGAIN_DATA
*&---------------------------------------------------------------------*
*       再出力データの取得
*----------------------------------------------------------------------*
form f_get_output_again_data.

data: l_outkbn(12) type c.

if r_sokuho = c_flg_on.              " 速報（検収明細書）
l_outkbn = c_sokuho.
else.                                " 確報（支払通知書）
l_outkbn = c_kakuho.
endif.

refresh: i_zn003_re.

select *
from zn003
into corresponding fields of table i_zn003_re
where outmnth = p_years                       " 年月
and outkbn  = l_outkbn                      " 帳票名
and lifnr  in s_lifnr.                      " 仕入先コード(請求先)

if i_zn003_re[] is initial.
*-- 選択条件に該当する出力履歴がありません
message s917 with text-m08.
leave list-processing.
endif.

endform.                    " F_GET_OUTPUT_AGAIN_DATA
*&---------------------------------------------------------------------*
*&      Form  F_OUTPUT_AGAIN_FILE
*&---------------------------------------------------------------------*
*       ファイル再出力
*----------------------------------------------------------------------*
form f_output_again_file.

*-- IFファイル再出力
perform f_output_again_file_i.

*-- 起動用ファイル出力
perform f_output_file_s.

endform.                    " F_OUTPUT_AGAIN_FILE
*&---------------------------------------------------------------------*
*&      Form  F_OUTPUT_AGAIN_FILE_I
*&---------------------------------------------------------------------*
*       IFファイル再出力
*----------------------------------------------------------------------*
form f_output_again_file_i.

data: l_fname    type rlgrap-filename,
l_knunt_p  type p decimals 4,       " 単価(小数４桁)
l_knqua_p  type p decimals 2,       " 数量(小数２桁)
l_data     type string,
l_ptwrbtr  type string,             " 総額
l_pwrbtr1  type string,             " 金種1-金額
l_pwrbtr2  type string,             " 金種2-金額
l_pwrbtr3  type string,             " 金種3-金額
l_pwrbtr4  type string,             " 金種4-金額
l_pstotal  type string,             " 消費税額
l_pstax    type string,             " 税抜金額
l_pswrbtr  type string,             " 税込金額
l_knuntprc type string,             " 単価
l_knquan   type string,             " 数量
l_knitxamt type string,             " 税抜金額
l_kntaxamt type string,             " 税額
l_knetxamt type string,             " 税込金額
l_outmnth  type string,             " 年月
l_printdt  type string,             " 発行日
l_pzfbdt1  type string,             " 金種1-期日
l_pzfbdt2  type string,             " 金種2-期日
l_pzfbdt3  type string,             " 金種3-期日
l_pzfbdt4  type string,             " 金種4-期日
l_grdat    type string.             " 入庫日
* Add ES-UP 2012/10/16 -->
data: l_conv type ref to zcl_conv_to_sjis,
l_errfile type string,
l_message type string,
l_openflg type abap_bool.
* Add ES-UP 2012/11/30 -->
data: l_name2_len   type i,
l_buzei_t_len type i,
l_street_len  type i,
l_city1_len   type i,
l_pname1_len  type i,
l_txz01_len   type i.
* Add ES-UP 2012/11/30 <--
create object l_conv.
* Add ES-UP 2012/10/16 <--
concatenate p_dname
p_fname
into l_fname.
* Mod ES-UP 2012/10/16 -->
*  OPEN DATASET L_FNAME FOR OUTPUT IN TEXT MODE.
l_errfile = l_conv->get_error_filename( filename = l_fname
foldnum  = 0 ).
if l_errfile is initial.
message e001(z2).
endif.

open dataset l_fname for output
in legacy text mode code page l_conv->codepage
ignoring conversion errors.
* Mod ES-UP 2012/10/16 <--
if sy-subrc <> 0.
rollback work.
*-- ファイルオープンエラー
message i766 with text-m07.
leave list-processing.
endif.
* Add ES-UP 2012/11/27 -->
l_openflg = abap_false.
* Add ES-UP 2012/11/27 <--
loop at i_zn003_re into w_zn003_re.

clear: l_knunt_p,             " 単価(小数４桁)
l_knqua_p,             " 数量(小数２桁)
l_ptwrbtr,             " 総額
l_pwrbtr1,             " 金種1-金額
l_pwrbtr2,             " 金種2-金額
l_pwrbtr3,             " 金種3-金額
l_pwrbtr4,             " 金種4-金額
l_pstotal,             " 消費税額
l_pstax,               " 税抜金額
l_pswrbtr,             " 税込金額
l_knuntprc,            " 単価
l_knquan,              " 数量
l_knitxamt,            " 税抜金額
l_kntaxamt,            " 税額
l_knetxamt,            " 税込金額
l_outmnth,             " 年月
l_printdt,             " 発行日
l_pzfbdt1,             " 金種1-期日
l_pzfbdt2,             " 金種2-期日
l_pzfbdt3,             " 金種3-期日
l_pzfbdt4,             " 金種4-期日
l_grdat.               " 入庫日

*-- 内部形式⇒外部形式(+CHAR型)への変換
if r_kakuho = c_flg_on.            " 支払通知書
if w_zn003_re-pwrbtr1 <> 0.
perform f_currency_conv_to_external using w_zn003_re-waers
w_zn003_re-pwrbtr1
changing l_pwrbtr1.
endif.
if w_zn003_re-pwrbtr2 <> 0.
perform f_currency_conv_to_external using w_zn003_re-waers
w_zn003_re-pwrbtr2
changing l_pwrbtr2.
endif.
if w_zn003_re-pwrbtr3 <> 0.
perform f_currency_conv_to_external using w_zn003_re-waers
w_zn003_re-pwrbtr3
changing l_pwrbtr3.
endif.
if w_zn003_re-pwrbtr4 <> 0.
perform f_currency_conv_to_external using w_zn003_re-waers
w_zn003_re-pwrbtr4
changing l_pwrbtr4.
endif.
endif.
perform f_currency_conv_to_external using w_zn003_re-waers
w_zn003_re-ptwrbtr
changing l_ptwrbtr.
perform f_currency_conv_to_external using w_zn003_re-waers
w_zn003_re-pstotal
changing l_pstotal.
perform f_currency_conv_to_external using w_zn003_re-waers
w_zn003_re-pstax
changing l_pstax.
perform f_currency_conv_to_external using w_zn003_re-waers
w_zn003_re-pswrbtr
changing l_pswrbtr.
perform f_currency_conv_to_external using w_zn003_re-waers
w_zn003_re-knitxamt
changing l_knitxamt.
perform f_currency_conv_to_external using w_zn003_re-waers
w_zn003_re-kntaxamt
changing l_kntaxamt.
perform f_currency_conv_to_external using w_zn003_re-waers
w_zn003_re-knetxamt
changing l_knetxamt.
*-- 桁数変換
l_knuntprc = l_knunt_p = w_zn003_re-knuntprc.
l_knquan   = l_knqua_p = w_zn003_re-knquan.

*-- 符号前後付替
perform f_cloi_put_sign_in_front using l_ptwrbtr
changing l_ptwrbtr.
perform f_cloi_put_sign_in_front using l_pwrbtr1
changing l_pwrbtr1.
perform f_cloi_put_sign_in_front using l_pwrbtr2
changing l_pwrbtr2.
perform f_cloi_put_sign_in_front using l_pwrbtr3
changing l_pwrbtr3.
perform f_cloi_put_sign_in_front using l_pwrbtr4
changing l_pwrbtr4.
perform f_cloi_put_sign_in_front using l_pstotal
changing l_pstotal.
perform f_cloi_put_sign_in_front using l_pstax
changing l_pstax.
perform f_cloi_put_sign_in_front using l_pswrbtr
changing l_pswrbtr.
perform f_cloi_put_sign_in_front using l_knuntprc
changing l_knuntprc.
perform f_cloi_put_sign_in_front using l_knquan
changing l_knquan.
perform f_cloi_put_sign_in_front using l_knitxamt
changing l_knitxamt.
perform f_cloi_put_sign_in_front using l_kntaxamt
changing l_kntaxamt.
perform f_cloi_put_sign_in_front using l_knetxamt
changing l_knetxamt.

*-- 日付形式の変換
concatenate w_zn003_re-outmnth+0(4)
'/'
w_zn003_re-outmnth+4(2)
into l_outmnth.
perform f_conv__exit_pdate_output using w_zn003_re-printdt
changing l_printdt.
perform f_conv__exit_pdate_output using w_zn003_re-pzfbdt1
changing l_pzfbdt1.
perform f_conv__exit_pdate_output using w_zn003_re-pzfbdt2
changing l_pzfbdt2.
perform f_conv__exit_pdate_output using w_zn003_re-pzfbdt3
changing l_pzfbdt3.
perform f_conv__exit_pdate_output using w_zn003_re-pzfbdt4
changing l_pzfbdt4.
perform f_conv__exit_pdate_output using w_zn003_re-grdat
changing l_grdat.
* Add ES-UP 2012/11/30 -->
perform sjis_length using:
w_zn003_re-name2   40 l_name2_len,    "仕入先名
w_zn003_re-buzei_t 20 l_buzei_t_len,  "地域
w_zn003_re-street  60 l_street_len,   "都道府県
w_zn003_re-city1   40 l_city1_len,    "市区町村
w_zn003_re-pname1  30 l_pname1_len,   "プラント名
w_zn003_re-txz01   40 l_txz01_len.    "品名
* Add ES-UP 2012/11/30 <--

*-- カンマ区切りファイル出力データ作成
concatenate l_outmnth                   " 計上年月
w_zn003_re-outkbn           " 帳票名称
w_zn003_re-lifnr            " 仕入先コード
w_zn003_re-seq              " SEQ
l_printdt                   " 発行日
* Mod ES-UP 2012/11/30 -->
*                W_ZN003_RE-NAME2            " 仕入先名
w_zn003_re-name2(l_name2_len)     " 仕入先名
* Mod ES-UP 2012/11/30 <--
w_zn003_re-pstlz            " 仕入先郵便番号
* Mod ES-UP 2012/11/30 -->
*                W_ZN003_RE-BUZEI_T          " 地域
*                W_ZN003_RE-STREET           " 都道府県
*                W_ZN003_RE-CITY1            " 市区町村
w_zn003_re-buzei_t(l_buzei_t_len) " 地域
w_zn003_re-street(l_street_len)   " 都道府県
w_zn003_re-city1(l_city1_len)     " 市区町村
* Mod ES-UP 2012/11/30 <--
w_zn003_re-telfx            " ファックス番号
l_ptwrbtr                   " 総額
w_zn003_re-waers            " 通貨コード
w_zn003_re-pkbn1            " 金種1-文言
l_pwrbtr1                   " 金種1-金額
l_pzfbdt1                   " 金種1-期日
w_zn003_re-pkbn2            " 金種2-文言
l_pwrbtr2                   " 金種2-金額
l_pzfbdt2                   " 金種2-期日
w_zn003_re-pkbn3            " 金種3-文言
l_pwrbtr3                   " 金種3-金額
l_pzfbdt3                   " 金種3-期日
w_zn003_re-pkbn4            " 金種4-文言
l_pwrbtr4                   " 金種4-金額
l_pzfbdt4                   " 金種4-期日
w_zn003_re-werks            " プラントコード
* Mod ES-UP 2012/11/30 -->
*                W_ZN003_RE-PNAME1           " プラント名
w_zn003_re-pname1(l_pname1_len)   " プラント名
* Mod ES-UP 2012/11/30 <--
l_pstotal                   " 税抜金額
l_pstax                     " 消費税額
l_pswrbtr                   " 税込金額
l_grdat                     " 入庫日
w_zn003_re-pono             " 注文番号
w_zn003_re-matnr            " 品目コード
* Mod ES-UP 2012/11/30 -->
*                W_ZN003_RE-TXZ01            " 品名
w_zn003_re-txz01(l_txz01_len)     " 品名
* Mod ES-UP 2012/11/30 <--
l_knuntprc                  " 単価
l_knquan                    " 数量
l_knitxamt                  " 税抜金額
l_kntaxamt                  " 税額
l_knetxamt                  " 税込金額
into l_data
separated by '","'.
concatenate '"'
l_data
'"'
into l_data.
transfer l_data to l_fname.
* Add ES-UP 2012/11/27 -->
if l_conv->convert_check( l_data ) = abap_true.
else.
if l_openflg = abap_false.
l_openflg = abap_true.
open dataset l_errfile for output
in legacy text mode code page l_conv->codepage
message l_message
ignoring conversion errors.
if sy-subrc <> 0.
message l_message type 'E'.
endif.
endif.
transfer l_data to l_errfile.
endif.
* Add ES-UP 2012/11/27 <--
if sy-subrc <> 0.
rollback work.
*-- ファイル出力エラー
message i789 with text-m07.
leave list-processing.
endif.
*-- 出力件数カウント
g_cnt_out = g_cnt_out + 1.
endloop.

close dataset l_fname.
if sy-subrc <> 0.
rollback work.
*-- ファイル出力エラー
message i789 with text-m07.
leave list-processing.
endif.
* Add ES-UP 2012/11/27 -->
if l_openflg = abap_true.
close dataset l_errfile.
message s002(z2).
endif.
* Add ES-UP 2012/11/27 <--
free: i_zn003_re.

endform.                    " F_OUTPUT_AGAIN_FILE_I
*&---------------------------------------------------------------------*
*&      Form  F_CONFIRM_OUTPUT_AGAIN_DATA
*&---------------------------------------------------------------------*
*       出力済データ確認
*----------------------------------------------------------------------*
form f_confirm_output_again_data.

if r_sokuho = c_flg_on.
*-- 取消対象データの取得(速報＆確報)
perform f_get_output_again_data_all.
*-- 照合締日の取得
perform f_select_yn220.
*-- 照合終了日の取得
perform f_select_zn001.
*-- 照合期間(仕入)マスタと取消対象データの整合性チェック
perform f_check_consistency.
else.
*-- 取消対象データの取得(確報のみ)
perform f_get_output_again_data.
endif.

endform.                    " F_CONFIRM_OUTPUT_AGAIN_DATA
*&---------------------------------------------------------------------*
*&      Form  F_GET_OUTPUT_AGAIN_DATA_ALL
*&---------------------------------------------------------------------*
*       出力済データの取得(速報＆確報)
*----------------------------------------------------------------------*
form f_get_output_again_data_all.

refresh: i_zn003_re.

select *
from zn003
into corresponding fields of table i_zn003_re
where outmnth = p_years                       " 年月
and lifnr  in s_lifnr.                      " 仕入先コード(請求先)

if i_zn003_re[] is initial.
*-- 選択条件に該当する出力履歴がありません
message s917 with text-m08.
leave list-processing.
endif.

*-- 支払通知書(確報)出力済みチェック
read table i_zn003_re transporting no fields
with key outkbn = c_kakuho.
if sy-subrc = 0.
*-- 確報(支払通知書)出力済みのデータがあるため、取消が許可されません
message i919.
leave list-processing.
endif.

endform.                    " F_GET_OUTPUT_AGAIN_DATA_ALL
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_YN220
*&---------------------------------------------------------------------*
*       照合締日の取得
*----------------------------------------------------------------------*
form f_select_yn220.

select gjahr                           " 伝票会計年度
slpdoc                          " 伝票番号
dtldoc                          " 伝票明細番号
vrfcton                         " 仕入先コード(請求先)
czfbdt                          " 照合締日
from yn220
into corresponding fields of table i_czfbdt
for all entries in i_zn003_re
where gjahr   = i_zn003_re-gjahr_re   " 会計年度
and slpdoc  = i_zn003_re-belnr_re   " 請求書照合番号
and dtldoc  = i_zn003_re-buzei_re   " 明細
and vrfcton = i_zn003_re-lifnr      " 仕入先コード(請求先)
and bukrs   = p_bukrs.              " 会社コード

endform.                    " F_SELECT_YN220
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_ZN001
*&---------------------------------------------------------------------*
*       照合終了日の取得
*----------------------------------------------------------------------*
form f_select_zn001.

select lifnr                         " 仕入先コード(請求先)
edate                         " 照合終了日
from zn001
into corresponding fields of table i_zn001
where bukrs = p_bukrs               " 会社コード
and (   lifnr  = c_main_lifnr     " 仕入先コード
or lifnr in s_lifnr ).

endform.                    " F_SELECT_ZN001
*&---------------------------------------------------------------------*
*&      Form  F_CHECK_CONSISTENCY
*&---------------------------------------------------------------------*
*       照合期間(仕入)マスタと取消対象データの整合性チェック
*----------------------------------------------------------------------*
form f_check_consistency.

loop at i_zn003_re into w_zn003_re.
clear: w_zn001,
w_czfbdt.
*-- 照合終了日読込み
read table i_zn001 into w_zn001
with table key lifnr = w_zn003_re-lifnr.
if sy-subrc <> 0.
read table i_zn001 into w_zn001
with table key lifnr = c_main_lifnr.
endif.
*-- 照合締日読込み
read table i_czfbdt into w_czfbdt
with table key gjahr   = w_zn003_re-gjahr_re
slpdoc  = w_zn003_re-belnr_re
dtldoc  = w_zn003_re-buzei_re
vrfcton = w_zn003_re-lifnr.
*-- 比較チェック
if w_zn001-edate => w_czfbdt-czfbdt.
*-- 照合期間(ZN001)との整合性がとれなくなるため、取消が許可されません
message i920 with text-m09.
leave list-processing.
endif.
endloop.

endform.                    " F_CHECK_CONSISTENCY
*&---------------------------------------------------------------------*
*&      Form  F_OUTPUT_POPUP
*&---------------------------------------------------------------------*
*       実行確認ポップアップ出力
*----------------------------------------------------------------------*
form f_output_popup.

data: l_text      type string,
l_answer(1) type c.

*-- 年月：&1 締日：&2 に紐づく照合データを取消します。
concatenate text-p01
p_years
text-p02
p_cdate
text-p03
into l_text
separated by space.

*-- ポップアップ出力
call function 'POPUP_TO_CONFIRM'
exporting
titlebar                    = text-p04      " 実行確認
text_question               = l_text
text_button_1               = text-p06      " 続行
text_button_2               = text-p05      " キャンセル
default_button              = '2'
display_cancel_button       = space
popup_type                  = 'NO_ICON'
importing
answer                      = l_answer
exceptions
others                      = 0.

if l_answer = 2.
*-- 取消実行がキャンセルされました
message i918.
leave list-processing.
endif.

endform.                    " F_OUTPUT_POPUP
*&---------------------------------------------------------------------*
*&      Form  F_SET_TABLE_LOCK_C
*&---------------------------------------------------------------------*
*       テーブルロック設定(取消時)
*----------------------------------------------------------------------*
form f_set_table_lock_c.

data: l_user type sy-msgv1.

*-- ロックエントリ作成(取消時)
perform f_make_lock_entries_c.

*-- 支払通知書履歴(仕入)ロック
perform f_table_lock_zn003.

l_user = sy-msgv1.
if rc_code_lock <> 0.
*-- エラーメッセージ出力
message i756 with text-m04 l_user.
leave list-processing.
endif.

*-- 自社/外部データ（仕入）ロック
perform f_table_lock_901.

l_user = sy-msgv1.
if rc_code_lock <> 0.
*-- エラーメッセージ出力
message i756 with text-m01 l_user.
leave list-processing.
endif.

*** 2012/01/24 DEL START ***
*  IF R_KAKUHO = C_FLG_ON.
*-- 支払予定データロック
*    PERFORM F_TABLE_LOCK_ZN002.

*    L_USER = SY-MSGV1.
*    IF RC_CODE_LOCK <> 0.
*-- エラーメッセージ出力
*      MESSAGE I756 WITH TEXT-M01 L_USER.
*      LEAVE LIST-PROCESSING.
*    ENDIF.
*  ENDIF.
*** 2012/01/24 DEL END ***

endform.                    " F_SET_TABLE_LOCK_C
*&---------------------------------------------------------------------*
*&      Form  F_MAKE_LOCK_ENTRIES_C
*&---------------------------------------------------------------------*
*     自社/外部データロックエントリ作成(取消時)
*----------------------------------------------------------------------*
form f_make_lock_entries_c.

refresh: i_enq_key.

if s_lifnr is initial
or s_lifnr-low = '*'.
*-- 会社コードのみ設定
clear: w_enq_key.
w_enq_key-bukrs = p_bukrs.
append w_enq_key to i_enq_key.
else.
*-- 仕入先コード(請求先)⇒仕入先コード(発注先)の取得
perform f_select_wyt3_c.
loop at i_wyt3 into w_wyt3.
clear: w_enq_key.
w_enq_key-bukrs = p_bukrs.
w_enq_key-lifnr = w_wyt3-lifnr.  "仕入先コード（発注先）
*** 2012/01/24 INSERT START ***
w_enq_key-lifn2 = w_wyt3-lifn2.  "仕入先コード（請求先）
*** 2012/01/24 INSERT END ***
append w_enq_key to i_enq_key.
endloop.
endif.

endform.                    " F_MAKE_LOCK_ENTRIES_C
*&---------------------------------------------------------------------*
*&      Form  F_SELECT_WYT3_C
*&---------------------------------------------------------------------*
*       仕入先コード(請求先)⇒仕入先コード(発注先)の取得
*----------------------------------------------------------------------*
form f_select_wyt3_c.

refresh: i_wyt3.

check not i_zn003_re[] is initial.

select lifnr                         " 仕入先コード（発注先）
*** 2012/01/24 INSERT START ***
lifn2                         " 仕入先コード（請求先）
*** 2012/01/24 INSERT END ***
from wyt3
into table i_wyt3
for all entries in i_zn003_re
where ekorg = p_ekorg               " 購買組織
*** 2012/01/24 INSERT START ***
and ltsnr = space                 " 仕入先部門
and werks = space                 " プラント
*** 2012/01/24 INSERT END ***
and parvw = p_parvw               " 取引先機能
and lifn2 = i_zn003_re-lifnr.     " 仕入先コード（請求先）

endform.                    " F_SELECT_WYT3_C
*&---------------------------------------------------------------------*
*&      Form  F_TABLE_LOCK_ZN003
*&---------------------------------------------------------------------*
*       支払通知書履歴(仕入)ロック
*----------------------------------------------------------------------*
form f_table_lock_zn003.

data: l_outkbn(12) type c.

if r_sokuho = c_flg_on.              " 速報（検収明細書）
l_outkbn = c_sokuho.
else.                                " 確報（支払通知書）
l_outkbn = c_kakuho.
endif.

loop at i_enq_key into w_enq_key.

call function 'ENQUEUE_EZN003'
exporting
mode_zn003           = 'E'
mandt                = sy-mandt
outmnth              = p_years
outkbn               = l_outkbn
*** 2012/01/24 MOD START ***
*       LIFNR                = W_ENQ_KEY-LIFNR
lifnr                = w_enq_key-lifn2  "仕入先コード（請求先）
*** 2012/01/24 MOD END ***
exceptions
foreign_lock         = 1
system_failure       = 2
others               = 3.

if sy-subrc <> 0.
rc_code_lock = '1'.
exit.
endif.
endloop.

endform.                    " F_TABLE_LOCK_ZN003
*&---------------------------------------------------------------------*
*&      Form  F_CLEAR_TABLE_DATA
*&---------------------------------------------------------------------*
*       取消実行
*----------------------------------------------------------------------*
form f_clear_table_data.

if r_sokuho = c_flg_on.
*-- 自社/外部データ(仕入)クリア (検収明細書)
perform f_clear_yn2x0_s.
else.
*-- 自社データ(仕入)クリア (支払通知書)
perform f_clear_yn220_k.
endif.

*-- 支払通知書履歴データ削除
delete zn003 from table i_zn003_re.
if sy-subrc <> 0.
rollback work.
*-- ZN003 削除エラー
message i793 with text-m04.
leave list-processing.
endif.

free: i_zn003_re.

endform.                    " F_CLEAR_TABLE_DATA
*&---------------------------------------------------------------------*
*&      Form  F_CLEAR_YN2x0_S
*&---------------------------------------------------------------------*
*       自社/外部データ(仕入)クリア (検収明細書)
*----------------------------------------------------------------------*
form f_clear_yn2x0_s.

data: lw_yn220 type yn220.

refresh: i_yn210_de.

loop at i_zn003_re into w_zn003_re.
*-- 自社データ更新
update yn220 set csts     = '1'                 " 照合ステータス
chkdoc   = lw_yn220-chkdoc     " 照合番号
chkdat   = lw_yn220-chkdat     " 照合日
chkusr   = lw_yn220-chkusr     " 照合ユーザ
upddat   = sy-datum            " 更新日
updtim   = sy-uzeit            " 更新時刻
updusr   = sy-uname            " 更新ユーザ
updprg   = sy-repid            " 更新プログラム
czfbdt   = lw_yn220-czfbdt     " 照合締日
outmnth1 = lw_yn220-outmnth1   " 検収明細書出力月
printdt1 = lw_yn220-printdt1   " 検収明細書出力日
where gjahr    = w_zn003_re-gjahr_re " 会計年度
and slpdoc   = w_zn003_re-belnr_re " 請求書照合番号
and dtldoc   = w_zn003_re-buzei_re " 明細
and vrfcton  = w_zn003_re-lifnr    " 仕入先コード
and bukrs    = p_bukrs.            " 会社コード
if sy-subrc <> 0.
rollback work.
*-- YN220 更新エラー
message i758 with text-m05.
leave list-processing.
endif.

*-- 外部データ削除レコード作成
clear: w_yn210_de.
w_yn210_de-gjahr   = w_zn003_re-gjahr_re. " 会計年度
w_yn210_de-slpdoc  = w_zn003_re-belnr_re. " 請求書照合番号
w_yn210_de-dtldoc  = w_zn003_re-buzei_re. " 明細
w_yn210_de-vrfcton = w_zn003_re-lifnr.    " 仕入先コード
w_yn210_de-bukrs   = p_bukrs.             " 会社コード
append w_yn210_de to i_yn210_de.

*-- 更新件数のカウント(LINES命令使用不可のため)
g_cnt_upd = g_cnt_upd + 1.

endloop.

*-- 外部データ一括削除
delete yn210 from table i_yn210_de.
if sy-subrc <> 0.
rollback work.
*-- YN210 削除エラー
message i793 with text-m06.
leave list-processing.
endif.

endform.                    " F_CLEAR_YN2x0_S
*&---------------------------------------------------------------------*
*&      Form  F_CLEAR_YN220_K
*&---------------------------------------------------------------------*
*       自社データ(仕入)クリア (支払通知書)
*----------------------------------------------------------------------*
form f_clear_yn220_k.

data: lw_yn220 type yn220.

loop at i_zn003_re into w_zn003_re.
*-- 自社データ更新
update yn220 set upddat   = sy-datum            " 更新日
updtim   = sy-uzeit            " 更新時刻
updusr   = sy-uname            " 更新ユーザ
updprg   = sy-repid            " 更新プログラム
outmnth2 = lw_yn220-outmnth2   " 支払通知書出力月
printdt2 = lw_yn220-printdt2   " 支払通知書出力日
where gjahr    = w_zn003_re-gjahr_re " 会計年度
and slpdoc   = w_zn003_re-belnr_re " 請求書照合番号
and dtldoc   = w_zn003_re-buzei_re " 明細
and vrfcton  = w_zn003_re-lifnr    " 仕入先コード
and bukrs    = p_bukrs.            " 会社コード
if sy-subrc <> 0.
rollback work.
*-- YN220 更新エラー
message i758 with text-m05.
leave list-processing.
endif.

*-- 更新件数のカウント(LINES命令使用不可のため)
g_cnt_upd = g_cnt_upd + 1.

endloop.

endform.                    " F_CLEAR_YN220_K
*&---------------------------------------------------------------------*
*&      Form  F_RELEASE_TABLE_LOCK_C
*&---------------------------------------------------------------------*
*       テーブルロック解除(取消時)
*----------------------------------------------------------------------*
form f_release_table_lock_c.

*-- 支払通知書履歴データロック解除
perform f_table_unlock_zn003.

*-- 自社/外部データ（仕入）ロック解除
perform f_table_unlock_901.

free: i_enq_key.

endform.                    " F_RELEASE_TABLE_LOCK_C
*&---------------------------------------------------------------------*
*&      Form  F_TABLE_UNLOCK_ZN003
*&---------------------------------------------------------------------*
*       支払通知書履歴データロック解除
*----------------------------------------------------------------------*
form f_table_unlock_zn003.

data: l_outkbn(12) type c.

if r_sokuho = c_flg_on.              " 速報（検収明細書）
l_outkbn = c_sokuho.
else.                                " 確報（支払通知書）
l_outkbn = c_kakuho.
endif.

loop at i_enq_key into w_enq_key.
call function 'DEQUEUE_EZN003'
exporting
mode_zn003     = 'E'
mandt          = sy-mandt
outmnth        = p_years
outkbn         = l_outkbn
lifnr          = w_enq_key-lifnr.
endloop.

endform.                    " F_TABLE_UNLOCK_ZN003
* Add ES-UP 2012/12/07 -->
*&---------------------------------------------------------------------*
*& SJISに変換後のバイト数に収まるUNICODE時の文字数を求める
*& SJISに存在しない文字(機種依存文字やサロートペア、合字など)にも対応
*&---------------------------------------------------------------------*
form sjis_length using l_item   type clike
l_byte   type i
l_length type i.
statics l_out_ce type ref to cl_abap_conv_out_ce.
data: l_codepage type abap_encoding,
l_buffer   type ref to data,
l_len      type i,
l_pos      type i,
l_off      type i,
l_olen     type i.
field-symbols <buffer> type x.
* 0バイトのときは、
* OFFSETが0以下のときショートダンプするため
* 固定で、1を返す。
if strlen( l_item ) = 0.
*>>> 2013/01/08 add string型に対応
l_item = ` `.
*<<< 2013/01/08 add
l_length = 1.
return.
endif.
* 外部書式オブジェクトが未構築なら構築する。
if l_out_ce is not bound.
l_codepage = cl_abap_codepage=>sap_codepage( `shift_jis` ).
l_out_ce = cl_abap_conv_out_ce=>create( encoding = l_codepage
ignore_cerr = abap_true ).
endif.
* 出力先のバイト数に応じて、領域を確保する。
create data l_buffer type x length l_byte.
assign l_buffer->* to <buffer> casting.
* SJISに変換する
l_out_ce->convert( exporting data   = l_item
importing buffer = <buffer> ).
* 変換文字列のチェック
l_len = xstrlen( <buffer> ).
l_pos = 1.
while l_len >= l_pos.
l_off = l_pos - 1.
*   全角文字の第1バイト目なら
if <buffer>+l_off(1) between '81' and '9F'
or <buffer>+l_off(1) between 'E0' and 'FC'.
*     2バイト目が無いなら、1バイト目を捨てる
if l_len = l_pos.
l_pos = l_pos + 1.
*     2バイト目があるなら、2バイトで1文字にする
else.
l_pos = l_pos + 2.
l_olen = l_olen + 1.
endif.
*   文字列の終わりなら、終了
elseif <buffer>+l_off(1) = '00'.
exit.
*   その他の文字なら、1バイトで1文字にする
else.
l_pos = l_pos + 1.
l_olen = l_olen + 1.
endif.
endwhile.
l_length = l_olen.
endform.                    "Sjis_Length
* Add ES-UP 2012/12/07 <--
