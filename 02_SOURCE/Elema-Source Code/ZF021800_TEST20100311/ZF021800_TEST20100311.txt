************************************************************************
* プログラムID  :ZF021800
* プログラム名  :仕入帳票出力
* 作成日        :2008/12/15
* 作成者        :NDSC(比嘉)
************************************************************************
* 変更履歴
* 変更日        :2008/01/27
* 変更者        :NDSC(志浪)
* 変更内容      :国内通貨額の通貨参照項目修正
************************************************************************
REPORT ZF21800 MESSAGE-ID  Y1
NO STANDARD PAGE HEADING.
*----------------------------------------------------------------------*
*       構造定義          　　　　                                     *
*----------------------------------------------------------------------*
* 期首商品棚卸＆当期売上原価取得用構造
TYPE-POOLS SLIS.

TYPES:
BEGIN OF TY_GLT0,
RTCUR TYPE GLT0-RTCUR,
TSLVT TYPE GLT0-TSLVT,
TSL01 TYPE GLT0-TSL01,
TSL02 TYPE GLT0-TSL02,
TSL03 TYPE GLT0-TSL03,
TSL04 TYPE GLT0-TSL04,
TSL05 TYPE GLT0-TSL05,
TSL06 TYPE GLT0-TSL06,
TSL07 TYPE GLT0-TSL07,
TSL08 TYPE GLT0-TSL08,
TSL09 TYPE GLT0-TSL09,
TSL10 TYPE GLT0-TSL10,
TSL11 TYPE GLT0-TSL11,
TSL12 TYPE GLT0-TSL12,
HSLVT TYPE GLT0-HSLVT,
HSL01 TYPE GLT0-HSL01,
HSL02 TYPE GLT0-HSL02,
HSL03 TYPE GLT0-HSL03,
HSL04 TYPE GLT0-HSL04,
HSL05 TYPE GLT0-HSL05,
HSL06 TYPE GLT0-HSL06,
HSL07 TYPE GLT0-HSL07,
HSL08 TYPE GLT0-HSL08,
HSL09 TYPE GLT0-HSL09,
HSL10 TYPE GLT0-HSL10,
HSL11 TYPE GLT0-HSL11,
HSL12 TYPE GLT0-HSL12,
END OF TY_GLT0.
* 当期仕入高取得用構造
TYPES:
BEGIN OF TY_BSAS,
BELNR TYPE BSAS-BELNR, "伝票番号
HKONT TYPE BSAS-HKONT, "勘定コード
WAERS TYPE BSAS-WAERS, "通貨コード
MONAT TYPE BSAS-MONAT, "会計期間
SHKZG TYPE BSAS-SHKZG, "借方/貸方フラグ
DMBTR TYPE BSAS-DMBTR, "国内通貨額
WRBTR TYPE BSAS-WRBTR, "伝票通貨額
RACCT TYPE GLT0-RACCT, "勘定グループ
END OF TY_BSAS.
* 会計伝票ヘッダ
TYPES:
BEGIN OF TY_BKPF,
BELNR TYPE BKPF-BELNR, "伝票番号
AWTYP TYPE BKPF-AWTYP, "参照処理
AWKEY TYPE BKPF-AWKEY, "オブジェクトキー
END OF TY_BKPF.
* 伝票ヘッダ: 請求書受領
TYPES:
BEGIN OF TY_RBKP,
BELNR TYPE RBKP-BELNR, "伝票番号
LIFNR TYPE RBKP-LIFNR, "仕入先コード
END OF TY_RBKP.
* 仕入先マスタ (一般セクション)
TYPES:
BEGIN OF TY_LFA1,
LIFNR TYPE LFA1-LIFNR, "仕入先コード
NAME1 TYPE LFA1-NAME1, "仕入先名称
END OF TY_LFA1.

TYPES:
BEGIN OF TY_SETHEADERT,
SETNAME  TYPE SETHEADERT-SETNAME,  "セット名
DESCRIPT TYPE SETHEADERT-DESCRIPT, "セットのテキスト(短)
END OF TY_SETHEADERT.

* ALV出力用構造
TYPES:
BEGIN OF TY_ALV,
CKUBUN(2)  TYPE C,                  "区分
TKUBUN(14) TYPE C,                  "区分(テキスト)
CNYU(2)    TYPE C,                  "入力
TNYU(10)   TYPE C,                  "入力(テキスト)
RACCT      TYPE GLT0-RACCT,         "勘定グループ
DESCRIPT   TYPE SETHEADERT-DESCRIPT,"勘定グループ(テキスト)
LIFNR      TYPE RBKP-LIFNR,         "仕入先コード
NAME1      TYPE LFA1-NAME1,         "仕入先名称
MONAT      TYPE BSIS-MONAT,         "会計期間
HSLVT      TYPE GLT0-HSLVT,         "国内通貨額
RTCUR      TYPE GLT0-RTCUR,         "通貨
TSLVT      TYPE GLT0-TSLVT,         "伝票通貨額
WAERS      TYPE GLT0-RTCUR,         "国内通貨
END OF TY_ALV.
* レンジ用構造
TYPES:
BEGIN OF VALUES,
SIGN(1),
OPTION(2),
LOW  LIKE GLPCT-RACCT,
HIGH LIKE GLPCT-RACCT,
END OF VALUES.

*----------------------------------------------------------------------*
*       レンジ定義                                                     *
*----------------------------------------------------------------------*
DATA:
R_VALUES1 TYPE RANGE OF GLPCT-RACCT,
R_VALUES2 TYPE RANGE OF GLPCT-RACCT,
R_VALUES3 TYPE RANGE OF GLPCT-RACCT,
R_VALUES4 TYPE RANGE OF GLPCT-RACCT.
*----------------------------------------------------------------------*
*       定数定義                                                       *
*----------------------------------------------------------------------*
CONSTANTS:
C_C_0109(4)  TYPE C VALUE '0109',
C_C_C001(4)  TYPE C VALUE 'C001',
C_C_I        TYPE C VALUE 'I',
C_C_BT(2)    TYPE C VALUE 'BT',
C_C_JPY(3)   TYPE C VALUE 'JPY',
C_C_01(2)    TYPE C VALUE '01',
C_C_02(2)    TYPE C VALUE '02',
C_C_03(2)    TYPE C VALUE '03',
C_C_04(2)    TYPE C VALUE '04',
C_C_RMRP(4)  TYPE C VALUE 'RMRP',
C_C_BKPF(4)  TYPE C VALUE 'BKPF',
C_C_X        TYPE C VALUE 'X',
C_C_JA(2)    TYPE C VALUE 'JA',
C_C_S        TYPE C VALUE 'S'.
*----------------------------------------------------------------------*
*       テーブル定義                                                   *
*----------------------------------------------------------------------*
DATA:
ITAB_VALUES1    TYPE TABLE OF SETVALUES,
ITAB_VALUES2    TYPE TABLE OF SETVALUES,
ITAB_VALUES3    TYPE TABLE OF SETVALUES,
ITAB_TANA       TYPE TABLE OF TY_GLT0,
ITAB_URIAGE     TYPE TABLE OF TY_GLT0,
ITAB_KIMATSU    TYPE TABLE OF TY_GLT0,
ITAB_SIIRE_S    TYPE TABLE OF TY_BSAS,
ITAB_SIIRE      TYPE TABLE OF TY_BSAS,
ITAB_SIIRE01    TYPE TABLE OF TY_BSAS,
ITAB_ALV        TYPE TABLE OF TY_ALV,
ITAB_SIIRE_E    TYPE TABLE OF TY_ALV,
ITAB_SIIRE_T    TYPE TABLE OF TY_ALV,
ITAB_TANA_E     TYPE TABLE OF TY_GLT0,
ITAB_URIAGE_E   TYPE TABLE OF TY_GLT0,
ITAB_KIMATSU_E  TYPE TABLE OF TY_GLT0,
ITAB_KIMATSU01  TYPE TABLE OF TY_ALV,
ITAB_KIMATSU02  TYPE TABLE OF TY_ALV,
ITAB_BKPF       TYPE TABLE OF TY_BKPF,
ITAB_RBKP       TYPE TABLE OF TY_RBKP,
ITAB_LFA1       TYPE TABLE OF TY_LFA1,
ITAB_SETHEADERT TYPE TABLE OF TY_SETHEADERT,
ITAB_FIELDCAT   TYPE SLIS_T_FIELDCAT_ALV."
*----------------------------------------------------------------------*
*       作業領域定義                                                   *
*----------------------------------------------------------------------*
DATA:
WA_EDISVARIANT TYPE DISVARIANT,
WA_R_VALUES1   TYPE VALUES,     "レンジ用
WA_R_VALUES2   TYPE VALUES,     "レンジ用
WA_R_VALUES3   TYPE VALUES,     "レンジ用
WA_TANA        TYPE TY_GLT0,    "期首商品棚卸高
WA_URIAGE      TYPE TY_GLT0,    "当期売上原価
WA_SIIRE       TYPE TY_BSAS,    "当期仕入高
WA_SIIRE_E     TYPE TY_ALV,     "当期仕入高
WA_VALUES1     TYPE SETVALUES,  "
WA_VALUES2     TYPE SETVALUES,  "
WA_VALUES3     TYPE SETVALUES,  "
WA_ALV         TYPE TY_ALV,     "ALV
WA_TANA_E      TYPE TY_GLT0,    "期首商品棚卸高
WA_URIAGE_E    TYPE TY_GLT0,    "当期売上原価
WA_KIMATSU_E   TYPE TY_GLT0,    "期末商品棚卸高
WA_KIMATSU     TYPE TY_GLT0,    "期末商品棚卸高
WA_KIMATSU01   TYPE TY_ALV,     "期末商品棚卸高
WA_KIMATSU02   TYPE TY_ALV,     "期末商品棚卸高
WA_BKPF        TYPE TY_BKPF,    "会計伝票ヘッダ
WA_RBKP        TYPE TY_RBKP,    "伝票ヘッダ: 請求書受領
WA_LFA1        TYPE TY_LFA1,    "
WA_SETHEADERT  TYPE TY_SETHEADERT,     "
WA_FIELDCAT    TYPE SLIS_FIELDCAT_ALV. "
*----------------------------------------------------------------------*
*       変数定義                                                       *
*----------------------------------------------------------------------*
DATA:
G_GJAHR   TYPE GJAHR,
G_MONAT   TYPE MONAT,
G_MONAT_2 TYPE MONAT.
*----------------------------------------------------------------------*
*       フラグ定義                                                     *
*----------------------------------------------------------------------*
DATA:
FLG_ON TYPE C.
*----------------------------------------------------------------------*
*     入力画面定義
*----------------------------------------------------------------------*
* 会計年度
PARAMETERS: P_GJAHR TYPE GJAHR OBLIGATORY.
* 会計期間
SELECT-OPTIONS: S_MONAT FOR G_MONAT OBLIGATORY NO-EXTENSION.

SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-B01.
* 当期仕入高(入仮)
PARAMETERS: P_NKARI TYPE GLPCT-RACCT OBLIGATORY.
* 当期仕入高(売原)
PARAMETERS: P_URI   TYPE GLPCT-RACCT OBLIGATORY.
* 当期仕入高(商品)
PARAMETERS: P_SYOU  TYPE GLPCT-RACCT OBLIGATORY.
SELECTION-SCREEN END OF BLOCK B1.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: RB_RB1 TYPE C RADIOBUTTON GROUP RG1 DEFAULT 'X'.
SELECTION-SCREEN: COMMENT 4(28) TEXT-T01, POSITION 32.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS: RB_RB2 TYPE C RADIOBUTTON GROUP RG1.
SELECTION-SCREEN: COMMENT 4(24) TEXT-T02, POSITION 28.
SELECTION-SCREEN END OF LINE.

PARAMETERS: P_VARI TYPE DISVARIANT-VARIANT.

SELECT-OPTIONS: S_LIFNR FOR WA_RBKP-LIFNR.
************************************************************************
INITIALIZATION.
************************************************************************
* 初期化処理
PERFORM CLEAR_WORK.
************************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_VARI.
************************************************************************
* バリアントヘルプ
PERFORM HELP_VARIANT CHANGING P_VARI.
************************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_NKARI.
************************************************************************
* 当期仕入高(入仮)ヘルプ
PERFORM HELP_GROUP   CHANGING P_NKARI.
************************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_URI.
************************************************************************
* 当期仕入高(売原)ヘルプ
PERFORM HELP_GROUP   CHANGING P_URI.
************************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_SYOU.
************************************************************************
* 当期仕入高(商品)ヘルプ
PERFORM HELP_GROUP   CHANGING P_SYOU.
************************************************************************
AT SELECTION-SCREEN.
************************************************************************
* 会計期間入力チェック
PERFORM CHECK_MONAT.
************************************************************************
START-OF-SELECTION.
************************************************************************

IF S_MONAT-LOW = 1.
G_GJAHR = P_GJAHR - 1.
G_MONAT = 12.
ELSE.
G_GJAHR = P_GJAHR.
G_MONAT = S_MONAT-LOW - 1.
ENDIF.

IF S_MONAT-HIGH <> SPACE.
IF S_MONAT-LOW = S_MONAT-HIGH.
G_MONAT_2 = 1.
ELSE.
G_MONAT_2 = S_MONAT-HIGH - S_MONAT-LOW + 1.
ENDIF.
ELSE.
G_MONAT_2 = 1.
ENDIF.

* 当期仕入高(入仮)勘定コード取得処理
PERFORM GET_TREE TABLES   ITAB_VALUES1
CHANGING P_NKARI.
* 当期仕入高(売原)勘定コード取得処理
PERFORM GET_TREE TABLES   ITAB_VALUES2
CHANGING P_URI.
* 当期仕入高(商品)勘定コード取得処理
PERFORM GET_TREE TABLES   ITAB_VALUES3
CHANGING P_SYOU.

* 勘定コード編集処理
PERFORM EDIT_TREE.
* 期首商品棚卸高取得処理
PERFORM SELECT_GLT0_TANA.
* 当期仕入高取得処理
PERFORM SELECT_BSIS_BSAS.
* 当期売上原価取得処理
PERFORM SELECT_GLT0_URIAGE.
* 当期売上原価取得処理
PERFORM SELECT_GLT0_KIMATSU.

CHECK NOT ITAB_TANA    IS INITIAL
OR NOT ITAB_SIIRE   IS INITIAL
OR NOT ITAB_URIAGE  IS INITIAL
OR NOT ITAB_KIMATSU IS INITIAL.
* 期首商品棚卸高編集処理
PERFORM EDIT_TANA.
* 当期仕入高編集処理
PERFORM EDIT_BSIS_BSAS.
* 当期売上原価編集処理
PERFORM EDIT_URIAGE.
* 期末商品棚卸高編集処理
PERFORM EDIT_KIMATSU.

CHECK NOT ITAB_ALV IS INITIAL.
FLG_ON = C_C_X.
* ALV出力処理
PERFORM OUTPUT_ALV.

************************************************************************
END-OF-SELECTION.
************************************************************************
IF FLG_ON = SPACE.
MESSAGE S204.
ENDIF.
*&---------------------------------------------------------------------*
*&      Form  CLEAR_WORK
*&---------------------------------------------------------------------*
*       初期化処理
*----------------------------------------------------------------------*
FORM CLEAR_WORK.

CLEAR:
R_VALUES1,R_VALUES2,R_VALUES3,R_VALUES4,
ITAB_VALUES1,ITAB_VALUES2,ITAB_VALUES3,ITAB_TANA,ITAB_URIAGE,
ITAB_SIIRE_S,ITAB_SIIRE,ITAB_SIIRE01,ITAB_ALV,ITAB_SIIRE_E,
ITAB_SIIRE_T,ITAB_TANA_E,ITAB_URIAGE_E,ITAB_KIMATSU01,
ITAB_KIMATSU02,ITAB_BKPF,ITAB_RBKP,
ITAB_LFA1,ITAB_SETHEADERT,ITAB_FIELDCAT,
WA_EDISVARIANT,WA_R_VALUES1,WA_R_VALUES2,WA_R_VALUES3,WA_TANA,
WA_URIAGE,WA_SIIRE,WA_SIIRE_E,WA_VALUES1,WA_VALUES2,WA_VALUES3,
WA_ALV,WA_TANA_E,WA_URIAGE_E,WA_KIMATSU,WA_KIMATSU02,WA_BKPF,
WA_RBKP,WA_LFA1,WA_SETHEADERT,WA_FIELDCAT,
G_GJAHR,G_MONAT,G_MONAT_2,
FLG_ON.

ENDFORM.                    " CLEAR_WORK
*&---------------------------------------------------------------------*
*&      Form  HELP_VARIANT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  <--  p2        text
*----------------------------------------------------------------------*
FORM HELP_VARIANT CHANGING C_VARI TYPE DISVARIANT-VARIANT.

DATA:L_WA_IDISVARIANT TYPE DISVARIANT,
L_EXIT TYPE C.

L_WA_IDISVARIANT-REPORT = SY-REPID.

CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
EXPORTING
IS_VARIANT         = L_WA_IDISVARIANT
I_SAVE             = 'U'
I_DISPLAY_VIA_GRID = 'X'
IMPORTING
E_EXIT             = L_EXIT
ES_VARIANT         = WA_EDISVARIANT
EXCEPTIONS
NOT_FOUND          = 2.
IF SY-SUBRC = 2.
MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ELSE.
IF L_EXIT = SPACE.
C_VARI = WA_EDISVARIANT-VARIANT.
ENDIF.
ENDIF.

ENDFORM.                    " HELP_VARIANT

*&---------------------------------------------------------------------*
*&      Form  HELP_GROUP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  <--  p2        text
*----------------------------------------------------------------------*
FORM HELP_GROUP CHANGING C_L_NAME TYPE GLPCT-RACCT.

DATA:L_NAME TYPE GLPCT-RACCT.

CALL FUNCTION 'K_GROUP_SELECT'
EXPORTING
CLASS         = C_C_0109
FIELD_NAME    = 'RACCT'
SET           = 'Z'
TABLE         = 'GLPCT'
IMPORTING
SET_NAME      = L_NAME
EXCEPTIONS
NO_SET_PICKED = 1
OTHERS        = 2.
IF SY-SUBRC <> 0.
MESSAGE S400 WITH '勘定グループを取得しませんでした'.
ELSE.
C_L_NAME = L_NAME.
ENDIF.

ENDFORM.                    " HELP_GROUP
*&---------------------------------------------------------------------*
*&      Form  GET_TREE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_P_KISYU  text
*----------------------------------------------------------------------*
FORM GET_TREE TABLES   C_L_ITAB_VALUES STRUCTURE SETVALUES
CHANGING C_L_RACCT       TYPE GLPCT-RACCT.


DATA:L_SETID TYPE SETID.
CONCATENATE C_C_0109 C_C_C001 C_L_RACCT INTO L_SETID.

CALL FUNCTION 'G_SET_TREE_IMPORT'
EXPORTING
CLIENT                    = SY-MANDT
LANGU                     = SY-LANGU
SETID                     = L_SETID
MAX_HIER_LEVEL            = 99
TABLES
SET_VALUES                = C_L_ITAB_VALUES
EXCEPTIONS
SET_NOT_FOUND             = 1
ILLEGAL_FIELD_REPLACEMENT = 2
ILLEGAL_TABLE_REPLACEMENT = 3
OTHERS                    = 4.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

ENDFORM.                    " GET_TREE
*&---------------------------------------------------------------------*
*&      Form  CHECK_MONAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CHECK_MONAT.

IF S_MONAT-LOW < 1
OR S_MONAT-LOW > 12.
MESSAGE E400 WITH '会計期間の値が不正です'.
ENDIF.

CHECK S_MONAT-HIGH <> SPACE.

IF S_MONAT-HIGH < 1
OR S_MONAT-HIGH > 12.
MESSAGE E400 WITH '会計期間の値が不正です'.
ENDIF.

ENDFORM.                    " CHECK_MONAT
*&---------------------------------------------------------------------*
*&      Form  SELECT_TANA
*&---------------------------------------------------------------------*
*       期首棚卸＆売上原価取得処理
*----------------------------------------------------------------------*
FORM SELECT_GLT0_TANA.

SELECT RTCUR
TSLVT
TSL01
TSL02
TSL03
TSL04
TSL05
TSL06
TSL07
TSL08
TSL09
TSL10
TSL11
TSL12
HSLVT
HSL01
HSL02
HSL03
HSL04
HSL05
HSL06
HSL07
HSL08
HSL09
HSL10
HSL11
HSL12
INTO TABLE ITAB_TANA
FROM GLT0
WHERE BUKRS = C_C_C001
AND RYEAR = G_GJAHR
AND RACCT IN R_VALUES3.

ENDFORM.                    " SELECT_TANA
*&---------------------------------------------------------------------*
*&      Form  EDIT_TANA
*&---------------------------------------------------------------------*
*       期首商品棚卸高編集処理
*----------------------------------------------------------------------*
FORM EDIT_TANA.

DATA:
L_RTCUR TYPE GLT0-RTCUR,
L_COUNT(2) TYPE N,
L_NAME(15) TYPE C,
L_TOTAL   TYPE GLT0-TSLVT.

FIELD-SYMBOLS:
<FS01> TYPE ANY,
<FS02> TYPE ANY.

SORT ITAB_TANA BY RTCUR.
*
LOOP AT ITAB_TANA INTO WA_TANA.

IF SY-TABIX = 1.
L_RTCUR = WA_TANA-RTCUR.
ENDIF.

IF  L_RTCUR <> WA_TANA-RTCUR
AND RB_RB1  =  SPACE.
WA_TANA_E-RTCUR = WA_TANA-RTCUR.
APPEND WA_TANA_E TO ITAB_TANA_E.
CLEAR:
WA_TANA_E,
L_RTCUR.
L_RTCUR = WA_TANA-RTCUR.
ENDIF.

WA_TANA_E-HSLVT = WA_TANA_E-HSLVT + WA_TANA-HSLVT.
WA_TANA_E-HSL01 = WA_TANA_E-HSL01 + WA_TANA-HSL01.
WA_TANA_E-HSL02 = WA_TANA_E-HSL02 + WA_TANA-HSL02.
WA_TANA_E-HSL03 = WA_TANA_E-HSL03 + WA_TANA-HSL03.
WA_TANA_E-HSL04 = WA_TANA_E-HSL04 + WA_TANA-HSL04.
WA_TANA_E-HSL05 = WA_TANA_E-HSL05 + WA_TANA-HSL05.
WA_TANA_E-HSL06 = WA_TANA_E-HSL06 + WA_TANA-HSL06.
WA_TANA_E-HSL07 = WA_TANA_E-HSL07 + WA_TANA-HSL07.
WA_TANA_E-HSL08 = WA_TANA_E-HSL08 + WA_TANA-HSL08.
WA_TANA_E-HSL09 = WA_TANA_E-HSL09 + WA_TANA-HSL09.
WA_TANA_E-HSL10 = WA_TANA_E-HSL10 + WA_TANA-HSL10.
WA_TANA_E-HSL11 = WA_TANA_E-HSL11 + WA_TANA-HSL11.
WA_TANA_E-HSL12 = WA_TANA_E-HSL12 + WA_TANA-HSL12.

IF RB_RB1 = SPACE.
WA_TANA_E-TSLVT = WA_TANA_E-TSLVT + WA_TANA-TSLVT.
WA_TANA_E-TSL01 = WA_TANA_E-TSL01 + WA_TANA-TSL01.
WA_TANA_E-TSL02 = WA_TANA_E-TSL02 + WA_TANA-TSL02.
WA_TANA_E-TSL03 = WA_TANA_E-TSL03 + WA_TANA-TSL03.
WA_TANA_E-TSL04 = WA_TANA_E-TSL04 + WA_TANA-TSL04.
WA_TANA_E-TSL05 = WA_TANA_E-TSL05 + WA_TANA-TSL05.
WA_TANA_E-TSL06 = WA_TANA_E-TSL06 + WA_TANA-TSL06.
WA_TANA_E-TSL07 = WA_TANA_E-TSL07 + WA_TANA-TSL07.
WA_TANA_E-TSL08 = WA_TANA_E-TSL08 + WA_TANA-TSL08.
WA_TANA_E-TSL09 = WA_TANA_E-TSL09 + WA_TANA-TSL09.
WA_TANA_E-TSL10 = WA_TANA_E-TSL10 + WA_TANA-TSL10.
WA_TANA_E-TSL11 = WA_TANA_E-TSL11 + WA_TANA-TSL11.
WA_TANA_E-TSL12 = WA_TANA_E-TSL12 + WA_TANA-TSL12.
ENDIF.

AT LAST.
IF RB_RB1 <> SPACE.
WA_TANA_E-RTCUR = C_C_JPY."通貨コード
ELSE.
WA_TANA_E-RTCUR = L_RTCUR."通貨コード
ENDIF.
APPEND WA_TANA_E TO ITAB_TANA_E.
ENDAT.

CLEAR:
WA_TANA.
ENDLOOP.

FREE:
ITAB_TANA.

LOOP AT ITAB_TANA_E INTO WA_TANA_E.
* 1月から選択画面に指定された月までの残高合計処理
CLEAR:
L_COUNT,
L_TOTAL.
DO G_MONAT TIMES.
ADD 1 TO L_COUNT.
CONCATENATE 'WA_TANA_E-HSL' L_COUNT INTO L_NAME.
ASSIGN (L_NAME) TO <FS01>.
L_TOTAL = L_TOTAL + <FS01>.
CLEAR:
L_NAME.
ENDDO.
* 残高合計値に繰越残高を足す。
WA_ALV-HSLVT = WA_TANA_E-HSLVT + L_TOTAL.

* 通貨コード毎の集計を行う場合
IF RB_RB1 = SPACE.
CLEAR:
L_COUNT,
L_TOTAL.
* 1月から選択画面に指定された月までの残高合計処理
DO G_MONAT TIMES.
ADD 1 TO L_COUNT.
CONCATENATE 'WA_TANA_E-TSL' L_COUNT INTO L_NAME.
ASSIGN (L_NAME) TO <FS02>.
L_TOTAL = L_TOTAL + <FS02>.
CLEAR:
L_NAME.
ENDDO.
* 残高合計値に繰越残高を足す。
WA_ALV-TSLVT = WA_TANA_E-TSLVT + L_TOTAL.
ENDIF.

WA_ALV-CKUBUN = C_C_01.          "区分
WA_ALV-TKUBUN = TEXT-T03.        "区分(テキスト)
WA_ALV-RTCUR  = WA_TANA_E-RTCUR. "通貨
WA_ALV-WAERS  = C_C_JPY.         "国内通貨
APPEND WA_ALV TO ITAB_ALV.
WA_KIMATSU01-CKUBUN = C_C_04.            "区分
WA_KIMATSU01-TKUBUN = TEXT-T08.          "区分(テキスト)
WA_KIMATSU01-HSLVT  = -1 * WA_ALV-HSLVT. "国内通貨額
WA_KIMATSU01-RTCUR  = WA_TANA_E-RTCUR.   "通貨
WA_KIMATSU01-TSLVT  = -1 * WA_ALV-TSLVT. "伝票通貨額
WA_KIMATSU01-WAERS  = C_C_JPY.           "国内通貨
APPEND WA_KIMATSU01 TO ITAB_KIMATSU01.
CLEAR:
WA_ALV,
WA_TANA_E,
WA_KIMATSU01.
ENDLOOP.

ENDFORM.                    " EDIT_TANA
*&---------------------------------------------------------------------*
*&      Form  edit_tree
*&---------------------------------------------------------------------*
*       勘定コード編集処理
*----------------------------------------------------------------------*
FORM EDIT_TREE.
* 当期仕入高(入仮)
LOOP AT ITAB_VALUES1 INTO WA_VALUES1.
WA_R_VALUES1-SIGN   = C_C_I.
WA_R_VALUES1-OPTION = C_C_BT.
WA_R_VALUES1-LOW    = WA_VALUES1-FROM.
WA_R_VALUES1-HIGH   = WA_VALUES1-TO.
APPEND WA_R_VALUES1 TO R_VALUES1.
APPEND WA_R_VALUES1 TO R_VALUES4.
ENDLOOP.
* 当期仕入高(売原)
LOOP AT ITAB_VALUES2 INTO WA_VALUES2.
WA_R_VALUES2-SIGN   = C_C_I.
WA_R_VALUES2-OPTION = C_C_BT.
WA_R_VALUES2-LOW  = WA_VALUES2-FROM.
WA_R_VALUES2-HIGH = WA_VALUES2-TO.
APPEND WA_R_VALUES2 TO R_VALUES2.
APPEND WA_R_VALUES2 TO R_VALUES4.
ENDLOOP.
* 当期仕入高(商品)
LOOP AT ITAB_VALUES3 INTO WA_VALUES3.
WA_R_VALUES3-SIGN   = C_C_I.
WA_R_VALUES3-OPTION = C_C_BT.
WA_R_VALUES3-LOW  = WA_VALUES3-FROM.
WA_R_VALUES3-HIGH = WA_VALUES3-TO.
APPEND WA_R_VALUES3 TO R_VALUES3.
APPEND WA_R_VALUES3 TO R_VALUES4.
ENDLOOP.

ENDFORM.                    " edit_tree
*&---------------------------------------------------------------------*
*&      Form  SELECT_bsis_bsas
*&---------------------------------------------------------------------*
*       当期仕入高取得処理
*----------------------------------------------------------------------*
FORM SELECT_BSIS_BSAS.
* 会計管理: G/L 勘定の二次索引取得処理
PERFORM SELECT_BSIS.
* 会計管理: 勘定コードの二次索引 (決済明細)取得処理
PERFORM SELECT_BSAS.

LOOP AT ITAB_SIIRE_S INTO WA_SIIRE.
IF WA_SIIRE-HKONT IN R_VALUES1.
WA_SIIRE-RACCT = P_NKARI.
APPEND WA_SIIRE TO ITAB_SIIRE.
ENDIF.
IF WA_SIIRE-HKONT IN R_VALUES2.
WA_SIIRE-RACCT = P_URI.
APPEND WA_SIIRE TO ITAB_SIIRE.
ENDIF.
IF WA_SIIRE-HKONT IN R_VALUES3.
WA_SIIRE-RACCT = P_SYOU.
APPEND WA_SIIRE TO ITAB_SIIRE.
ENDIF.
CLEAR:
WA_SIIRE.
ENDLOOP.

FREE:
ITAB_SIIRE_S.

ENDFORM.                    " SELECT_bsis_bsas
*&---------------------------------------------------------------------*
*&      Form  select_bsis
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SELECT_BSIS.

SELECT BELNR
HKONT
WAERS
MONAT
SHKZG
DMBTR
WRBTR
INTO TABLE ITAB_SIIRE_S
FROM BSIS
WHERE BUKRS =  C_C_C001
AND HKONT IN R_VALUES4
AND GJAHR =  P_GJAHR
AND MONAT IN S_MONAT.

ENDFORM.                    " select_bsis
*&---------------------------------------------------------------------*
*&      Form  select_bsas
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SELECT_BSAS.

SELECT BELNR
HKONT
WAERS
MONAT
SHKZG
DMBTR
WRBTR
APPENDING TABLE ITAB_SIIRE_S
FROM BSAS
WHERE BUKRS =  C_C_C001
AND HKONT IN R_VALUES4
AND GJAHR =  P_GJAHR
AND MONAT IN S_MONAT.

ENDFORM.                    " select_bsas
*&---------------------------------------------------------------------*
*&      Form  SELECT_GLT0_URIAGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SELECT_GLT0_URIAGE.

SELECT RTCUR
TSLVT
TSL01
TSL02
TSL03
TSL04
TSL05
TSL06
TSL07
TSL08
TSL09
TSL10
TSL11
TSL12
HSLVT
HSL01
HSL02
HSL03
HSL04
HSL05
HSL06
HSL07
HSL08
HSL09
HSL10
HSL11
HSL12
INTO TABLE ITAB_URIAGE
FROM GLT0
WHERE BUKRS =  C_C_C001
AND RYEAR =  P_GJAHR
AND RACCT IN R_VALUES2.

ENDFORM.                    " SELECT_GLT0_URIAGE
*&---------------------------------------------------------------------*
*&      Form  EDIT_URIAGE
*&---------------------------------------------------------------------*
*       当期売上原価編集処理
*----------------------------------------------------------------------*
FORM EDIT_URIAGE.

DATA:
L_RTCUR TYPE GLT0-RTCUR,
L_COUNT(2) TYPE N,
L_NAME(17) TYPE C,
L_TOTAL   TYPE GLT0-TSLVT.

FIELD-SYMBOLS:
<FS03> TYPE ANY,
<FS04> TYPE ANY.

SORT ITAB_URIAGE BY RTCUR.
*
LOOP AT ITAB_URIAGE INTO WA_URIAGE.

IF SY-TABIX = 1.
L_RTCUR = WA_URIAGE-RTCUR.
ENDIF.

IF  L_RTCUR <> WA_URIAGE-RTCUR
AND RB_RB1  =  SPACE.
WA_URIAGE_E-RTCUR = WA_URIAGE-RTCUR.
APPEND WA_URIAGE_E TO ITAB_URIAGE_E.
CLEAR:
WA_URIAGE_E,
L_RTCUR.
L_RTCUR = WA_URIAGE-RTCUR.
ENDIF.

WA_URIAGE_E-HSLVT = WA_URIAGE_E-HSLVT + WA_URIAGE-HSLVT.
WA_URIAGE_E-HSL01 = WA_URIAGE_E-HSL01 + WA_URIAGE-HSL01.
WA_URIAGE_E-HSL02 = WA_URIAGE_E-HSL02 + WA_URIAGE-HSL02.
WA_URIAGE_E-HSL03 = WA_URIAGE_E-HSL03 + WA_URIAGE-HSL03.
WA_URIAGE_E-HSL04 = WA_URIAGE_E-HSL04 + WA_URIAGE-HSL04.
WA_URIAGE_E-HSL05 = WA_URIAGE_E-HSL05 + WA_URIAGE-HSL05.
WA_URIAGE_E-HSL06 = WA_URIAGE_E-HSL06 + WA_URIAGE-HSL06.
WA_URIAGE_E-HSL07 = WA_URIAGE_E-HSL07 + WA_URIAGE-HSL07.
WA_URIAGE_E-HSL08 = WA_URIAGE_E-HSL08 + WA_URIAGE-HSL08.
WA_URIAGE_E-HSL09 = WA_URIAGE_E-HSL09 + WA_URIAGE-HSL09.
WA_URIAGE_E-HSL10 = WA_URIAGE_E-HSL10 + WA_URIAGE-HSL10.
WA_URIAGE_E-HSL11 = WA_URIAGE_E-HSL11 + WA_URIAGE-HSL11.
WA_URIAGE_E-HSL12 = WA_URIAGE_E-HSL12 + WA_URIAGE-HSL12.

IF RB_RB1 = SPACE.
WA_URIAGE_E-TSLVT = WA_URIAGE_E-TSLVT + WA_URIAGE-TSLVT.
WA_URIAGE_E-TSL01 = WA_URIAGE_E-TSL01 + WA_URIAGE-TSL01.
WA_URIAGE_E-TSL02 = WA_URIAGE_E-TSL02 + WA_URIAGE-TSL02.
WA_URIAGE_E-TSL03 = WA_URIAGE_E-TSL03 + WA_URIAGE-TSL03.
WA_URIAGE_E-TSL04 = WA_URIAGE_E-TSL04 + WA_URIAGE-TSL04.
WA_URIAGE_E-TSL05 = WA_URIAGE_E-TSL05 + WA_URIAGE-TSL05.
WA_URIAGE_E-TSL06 = WA_URIAGE_E-TSL06 + WA_URIAGE-TSL06.
WA_URIAGE_E-TSL07 = WA_URIAGE_E-TSL07 + WA_URIAGE-TSL07.
WA_URIAGE_E-TSL08 = WA_URIAGE_E-TSL08 + WA_URIAGE-TSL08.
WA_URIAGE_E-TSL09 = WA_URIAGE_E-TSL09 + WA_URIAGE-TSL09.
WA_URIAGE_E-TSL10 = WA_URIAGE_E-TSL10 + WA_URIAGE-TSL10.
WA_URIAGE_E-TSL11 = WA_URIAGE_E-TSL11 + WA_URIAGE-TSL11.
WA_URIAGE_E-TSL12 = WA_URIAGE_E-TSL12 + WA_URIAGE-TSL12.
ENDIF.

AT LAST.
IF RB_RB1 <> SPACE.
WA_URIAGE_E-RTCUR = C_C_JPY.
ELSE.
WA_URIAGE_E-RTCUR = L_RTCUR.
ENDIF.
APPEND WA_URIAGE_E TO ITAB_URIAGE_E.
ENDAT.

CLEAR:
WA_URIAGE.
ENDLOOP.

FREE:
ITAB_URIAGE.

LOOP AT ITAB_URIAGE_E INTO WA_URIAGE_E.
CLEAR:
L_COUNT,
L_TOTAL.
* 選択画面に指定された会計期間の残高合計処理
L_COUNT = L_COUNT + S_MONAT-LOW - 1.
DO G_MONAT_2 TIMES.
ADD 1 TO L_COUNT.
CONCATENATE 'WA_URIAGE_E-HSL' L_COUNT INTO L_NAME.
ASSIGN (L_NAME) TO <FS03>.
L_TOTAL = L_TOTAL + <FS03>.
CLEAR:
L_NAME.
ENDDO.
* 出力値をマイナスにする
IF L_TOTAL <> 0.
WA_ALV-HSLVT = -1 * L_TOTAL.
ENDIF.
* 通貨コード毎の集計を行う場合
IF RB_RB1 = SPACE.
CLEAR:
L_COUNT,
L_TOTAL.

* 選択画面に指定された会計期間の残高合計処理
L_COUNT = L_COUNT + S_MONAT-LOW - 1.
DO G_MONAT_2 TIMES.
ADD 1 TO L_COUNT.
CONCATENATE 'WA_URIAGE_E-TSL' L_COUNT INTO L_NAME.
ASSIGN (L_NAME) TO <FS04>.
L_TOTAL = L_TOTAL + <FS04>.
CLEAR:
L_NAME.
ENDDO.
* 出力値をマイナスにする
IF L_TOTAL <> 0.
WA_ALV-TSLVT = -1 * L_TOTAL.
ENDIF.
ENDIF.

WA_ALV-CKUBUN = C_C_03.            "区分
WA_ALV-TKUBUN = TEXT-T07.          "区分(テキスト)
WA_ALV-RTCUR  = WA_URIAGE_E-RTCUR. "通貨
WA_ALV-WAERS  = C_C_JPY.           "国内通貨
APPEND WA_ALV TO ITAB_ALV.
CLEAR:
WA_ALV,
WA_URIAGE_E.
ENDLOOP.

ENDFORM.                    " EDIT_URIAGE
*&---------------------------------------------------------------------*
*&      Form  EDIT_BSIS_BSAS
*&---------------------------------------------------------------------*
*       当期仕入高編集処理
*----------------------------------------------------------------------*
FORM EDIT_BSIS_BSAS.

DATA:
L_RACCT TYPE GLT0-RACCT.

SORT ITAB_SIIRE BY BELNR.

LOOP AT ITAB_SIIRE INTO WA_SIIRE.
COLLECT WA_SIIRE INTO ITAB_SIIRE01.
ENDLOOP.

FREE:
ITAB_SIIRE.

CHECK NOT ITAB_SIIRE01 IS INITIAL.
* 入力元データ抽出処理
PERFORM SELECT_BKPF.

SORT ITAB_BKPF BY BELNR.
* 仕入先コード抽出処理
PERFORM SELECT_RBKP.
* 仕入先名称抽出処理
PERFORM SELECT_LFA1.
* 勘定グループテキスト抽出処理
PERFORM SELECT_DESCRIPT.

SORT ITAB_RBKP BY BELNR.

LOOP AT ITAB_SIIRE01 INTO WA_SIIRE.

* 貸借判定処理(国内通貨額)
IF WA_SIIRE-SHKZG <> C_C_S
AND WA_SIIRE-DMBTR <> 0.
WA_SIIRE-DMBTR = WA_SIIRE-DMBTR * -1.
ENDIF.
* 貸借判定処理(伝票通貨額)
IF WA_SIIRE-SHKZG <> C_C_S
AND WA_SIIRE-WRBTR <> 0.
WA_SIIRE-WRBTR = WA_SIIRE-WRBTR * -1.
ENDIF.

READ TABLE ITAB_BKPF INTO WA_BKPF
WITH KEY BELNR = WA_SIIRE-BELNR
BINARY SEARCH.

IF SY-SUBRC = 0.
CASE WA_BKPF-AWTYP.
WHEN C_C_RMRP.
WA_SIIRE_E-CNYU = C_C_01."入力
WA_SIIRE_E-TNYU = TEXT-T04."入力(テキスト)
WHEN C_C_BKPF.
WA_SIIRE_E-CNYU = C_C_02."入力
WA_SIIRE_E-TNYU = TEXT-T05."入力(テキスト)
ENDCASE.
ELSE.
CONTINUE.
ENDIF.

IF WA_BKPF-AWTYP = C_C_RMRP.
READ TABLE ITAB_RBKP INTO WA_RBKP
WITH KEY BELNR = WA_BKPF-AWKEY+0(10)
BINARY SEARCH.

IF SY-SUBRC = 0.
WA_SIIRE_E-LIFNR = WA_RBKP-LIFNR."仕入先コード

READ TABLE ITAB_LFA1 INTO WA_LFA1
WITH KEY LIFNR = WA_RBKP-LIFNR.

IF SY-SUBRC = 0.
WA_SIIRE_E-NAME1 = WA_LFA1-NAME1."仕入先コード
ENDIF.
ENDIF.
ENDIF.

WA_SIIRE_E-CKUBUN = C_C_02.        "区分
WA_SIIRE_E-TKUBUN = TEXT-T06.      "区分(テキスト)
WA_SIIRE_E-RACCT  = WA_SIIRE-RACCT."勘定グループ

IF WA_SIIRE-RACCT <> L_RACCT.
READ TABLE ITAB_SETHEADERT INTO WA_SETHEADERT
WITH KEY SETNAME = WA_SIIRE-RACCT.

IF SY-SUBRC = 0.
WA_SIIRE_E-DESCRIPT = WA_SETHEADERT-DESCRIPT.
"勘定グループ(テキスト)
ENDIF.
ENDIF.
WA_SIIRE_E-MONAT = WA_SIIRE-MONAT."会計期間
WA_SIIRE_E-HSLVT = WA_SIIRE-DMBTR."国内通貨額

IF RB_RB1 <> SPACE.
WA_SIIRE_E-RTCUR = C_C_JPY."通貨
ELSE.
WA_SIIRE_E-RTCUR = WA_SIIRE-WAERS."通貨
WA_SIIRE_E-TSLVT = WA_SIIRE-WRBTR."伝票通貨額
ENDIF.

WA_SIIRE_E-WAERS = C_C_JPY.       "国内通貨
APPEND WA_SIIRE_E TO ITAB_SIIRE_E.
CLEAR:
WA_BKPF,
WA_RBKP,
WA_LFA1,
WA_SETHEADERT,
WA_SIIRE_E,
WA_SIIRE.
ENDLOOP.

FREE:
ITAB_BKPF,
ITAB_RBKP,
ITAB_LFA1,
ITAB_SETHEADERT,
ITAB_SIIRE01.

LOOP AT ITAB_SIIRE_E INTO WA_SIIRE_E.
COLLECT WA_SIIRE_E INTO ITAB_SIIRE_T.
ENDLOOP.

FREE:
ITAB_SIIRE_E.

SORT ITAB_SIIRE_T BY CNYU
RACCT.

APPEND LINES OF ITAB_SIIRE_T TO ITAB_ALV.

ENDFORM.                    " EDIT_BSIS_BSAS
*&---------------------------------------------------------------------*
*&      Form  SELECT_BKPF_RBKP
*&---------------------------------------------------------------------*
*       入力元データ抽出処理
*----------------------------------------------------------------------*
FORM SELECT_BKPF.

SELECT BELNR "伝票番号
AWTYP "参照処理
AWKEY "オブジェクトキー
INTO TABLE ITAB_BKPF
FROM BKPF
FOR ALL ENTRIES IN ITAB_SIIRE01
WHERE BUKRS = C_C_C001
AND BELNR = ITAB_SIIRE01-BELNR
AND GJAHR = P_GJAHR
AND AWSYS = SPACE
AND ( AWTYP = C_C_RMRP
OR AWTYP = C_C_BKPF ).

ENDFORM.                    " SELECT_BKPF_RBKP
*&---------------------------------------------------------------------*
*&      Form  SELECT_RBKP
*&---------------------------------------------------------------------*
*       仕入先コード抽出処理
*----------------------------------------------------------------------*
FORM SELECT_RBKP.

CHECK NOT ITAB_BKPF IS INITIAL.

SELECT BELNR
LIFNR "仕入先コード
INTO TABLE ITAB_RBKP
FROM RBKP
FOR ALL ENTRIES IN ITAB_BKPF
WHERE BELNR = ITAB_BKPF-AWKEY+0(10)
AND GJAHR = P_GJAHR
*TEST-20100310
AND LIFNR IN S_LIFNR.
ENDFORM.                    " SELECT_RBKP
*&---------------------------------------------------------------------*
*&      Form  SELECT_LFA1
*&---------------------------------------------------------------------*
*       仕入先名称抽出処理
*----------------------------------------------------------------------*
FORM SELECT_LFA1.

CHECK NOT ITAB_RBKP IS INITIAL.

SELECT LIFNR
NAME1
INTO TABLE ITAB_LFA1
FROM LFA1
FOR ALL ENTRIES IN ITAB_RBKP
WHERE LIFNR = ITAB_RBKP-LIFNR.

ENDFORM.                    " SELECT_LFA1
*&---------------------------------------------------------------------*
*&      Form  SELECT_DESCRIPT
*&---------------------------------------------------------------------*
*       勘定グループテキスト抽出処理
*----------------------------------------------------------------------*
FORM SELECT_DESCRIPT.

SELECT SETNAME
DESCRIPT
INTO TABLE ITAB_SETHEADERT
FROM SETHEADERT
WHERE SETCLASS = C_C_0109
AND SUBCLASS = C_C_C001
AND ( SETNAME = P_NKARI
OR   SETNAME = P_URI
OR   SETNAME = P_SYOU )
AND LANGU = C_C_JA.


ENDFORM.                    " SELECT_DESCRIPT
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_ALV
*&---------------------------------------------------------------------*
*       ALV出力処理
*----------------------------------------------------------------------*
FORM OUTPUT_ALV.
DATA:
L_REPID   TYPE SY-REPID,
IS_LAYOUT TYPE  SLIS_LAYOUT_ALV.

* 項目カタログ設定処理
PERFORM SET_FIELDCAT.

* プログラムID取得
L_REPID = SY-REPID.


*レイアウト設定
IS_LAYOUT-COLWIDTH_OPTIMIZE = 'X'. "ALV コントロール: 列幅の最適化
IS_LAYOUT-DETAIL_INITIAL_LINES = 'X'.
"ALV コントロール: 詳細画面の初期値照会

* 出力
CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM      = L_REPID     "プログラム名
IS_LAYOUT               = IS_LAYOUT   "レイアウト定義
IT_FIELDCAT             = ITAB_FIELDCAT  "構造定義
I_DEFAULT               = 'X'
I_SAVE                  = 'A'
IS_VARIANT              = WA_EDISVARIANT
TABLES
T_OUTTAB                = ITAB_ALV       "出力データ
EXCEPTIONS
PROGRAM_ERROR           = 1
OTHERS                  = 2.

IF SY-SUBRC <> 0.
MESSAGE S400 WITH 'システムエラーが発生しました'.
STOP.
ENDIF.


ENDFORM.                    " OUTPUT_ALV
*&---------------------------------------------------------------------*
*&      Form  SET_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_FIELDCAT.

* ＡＬＶ出力時のフィールド設定
WA_FIELDCAT-FIELDNAME = 'CKUBUN'.    "項目名
WA_FIELDCAT-SELTEXT_L = '区分'.      "項目名称
WA_FIELDCAT-DDICTXT   = 'L'.         "
WA_FIELDCAT-KEY       = 'X'.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'TKUBUN'.    "項目名
WA_FIELDCAT-SELTEXT_L  = '区分名称'.  "項目名称
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'CNYU'.      "項目名
WA_FIELDCAT-SELTEXT_L  = '入力'.      "項目名称
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'TNYU'.      "項目名
WA_FIELDCAT-SELTEXT_L  = '入力名称'.  "項目名称
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'RACCT'.     "項目名
WA_FIELDCAT-SELTEXT_L  = '勘定グループ'.  "項目名称
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'DESCRIPT'.  "項目名
WA_FIELDCAT-SELTEXT_L  = '勘定グループ名称'.  "項目名称
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'LIFNR'.     "項目名
WA_FIELDCAT-SELTEXT_L  = '仕入先'.    "項目名称
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'NAME1'.     "項目名
WA_FIELDCAT-SELTEXT_L  = '仕入先名称'."項目名称
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'MONAT'.     "項目名
WA_FIELDCAT-SELTEXT_L  = '期間'.      "項目名称
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'HSLVT'.     "項目名
WA_FIELDCAT-SELTEXT_L  = '国内通貨額'."項目名称
WA_FIELDCAT-DATATYPE   = 'CURR'.      "データ型
WA_FIELDCAT-INTTYPE    = 'P'.         "数値のデータ型
WA_FIELDCAT-INTLEN     = '15'.        "データ長
WA_FIELDCAT-OUTPUTLEN  = '21'.        "出力データ長
*>>> 2009/01/27 MOD START 国内通貨額の通貨参照項目修正
*  WA_FIELDCAT-CFIELDNAME = 'RTCUR'.     "通貨参照項目
WA_FIELDCAT-CFIELDNAME = 'WAERS'.     "通貨参照項目
*<<< 2009/01/27 MOD END 国内通貨額の通貨参照項目修正
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'RTCUR'.     "項目名
WA_FIELDCAT-SELTEXT_L  = '通貨'.      "項目名称
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'TSLVT'.     "項目名
WA_FIELDCAT-SELTEXT_L  = '伝票通貨額'."項目名称
WA_FIELDCAT-DATATYPE   = 'CURR'.      "データ型
WA_FIELDCAT-INTTYPE    = 'P'.         "数値のデータ型
WA_FIELDCAT-INTLEN     = '15'.        "データ長
WA_FIELDCAT-OUTPUTLEN  = '21'.        "出力データ長
WA_FIELDCAT-CFIELDNAME = 'RTCUR'.     "通貨参照項目
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME  = 'WAERS'.     "項目名
WA_FIELDCAT-SELTEXT_L  = '国内通貨'.  "項目名称
WA_FIELDCAT-DDICTXT    = 'L'.         "
WA_FIELDCAT-KEY        = ' '.         "キー項目有無
WA_FIELDCAT-NO_OUT     = 'X'.         "表示、非表示
APPEND WA_FIELDCAT TO ITAB_FIELDCAT.
CLEAR WA_FIELDCAT.

ENDFORM.                    " SET_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  EDIT_KIMATSU
*&---------------------------------------------------------------------*
*       期末商品棚卸高編集処理
*----------------------------------------------------------------------*
FORM EDIT_KIMATSU.

DATA:
L_RTCUR    TYPE GLT0-RTCUR,
L_COUNT(2) TYPE N,
L_NAME(18) TYPE C,
L_TOTAL    TYPE GLT0-TSLVT.

FIELD-SYMBOLS:
<FS05> TYPE ANY,
<FS06> TYPE ANY.

SORT ITAB_KIMATSU BY RTCUR.
*
LOOP AT ITAB_KIMATSU INTO WA_KIMATSU.

IF SY-TABIX = 1.
L_RTCUR = WA_KIMATSU-RTCUR.
ENDIF.

IF  L_RTCUR <> WA_KIMATSU-RTCUR
AND RB_RB1  =  SPACE.
WA_KIMATSU_E-RTCUR = WA_KIMATSU-RTCUR.
APPEND WA_KIMATSU_E TO ITAB_KIMATSU_E.
CLEAR:
WA_KIMATSU_E,
L_RTCUR.
L_RTCUR = WA_KIMATSU-RTCUR.
ENDIF.

WA_KIMATSU_E-HSLVT = WA_KIMATSU_E-HSLVT + WA_KIMATSU-HSLVT.
WA_KIMATSU_E-HSL01 = WA_KIMATSU_E-HSL01 + WA_KIMATSU-HSL01.
WA_KIMATSU_E-HSL02 = WA_KIMATSU_E-HSL02 + WA_KIMATSU-HSL02.
WA_KIMATSU_E-HSL03 = WA_KIMATSU_E-HSL03 + WA_KIMATSU-HSL03.
WA_KIMATSU_E-HSL04 = WA_KIMATSU_E-HSL04 + WA_KIMATSU-HSL04.
WA_KIMATSU_E-HSL05 = WA_KIMATSU_E-HSL05 + WA_KIMATSU-HSL05.
WA_KIMATSU_E-HSL06 = WA_KIMATSU_E-HSL06 + WA_KIMATSU-HSL06.
WA_KIMATSU_E-HSL07 = WA_KIMATSU_E-HSL07 + WA_KIMATSU-HSL07.
WA_KIMATSU_E-HSL08 = WA_KIMATSU_E-HSL08 + WA_KIMATSU-HSL08.
WA_KIMATSU_E-HSL09 = WA_KIMATSU_E-HSL09 + WA_KIMATSU-HSL09.
WA_KIMATSU_E-HSL10 = WA_KIMATSU_E-HSL10 + WA_KIMATSU-HSL10.
WA_KIMATSU_E-HSL11 = WA_KIMATSU_E-HSL11 + WA_KIMATSU-HSL11.
WA_KIMATSU_E-HSL12 = WA_KIMATSU_E-HSL12 + WA_KIMATSU-HSL12.

IF RB_RB1 = SPACE.
WA_KIMATSU_E-TSLVT = WA_KIMATSU_E-TSLVT + WA_KIMATSU-TSLVT.
WA_KIMATSU_E-TSL01 = WA_KIMATSU_E-TSL01 + WA_KIMATSU-TSL01.
WA_KIMATSU_E-TSL02 = WA_KIMATSU_E-TSL02 + WA_KIMATSU-TSL02.
WA_KIMATSU_E-TSL03 = WA_KIMATSU_E-TSL03 + WA_KIMATSU-TSL03.
WA_KIMATSU_E-TSL04 = WA_KIMATSU_E-TSL04 + WA_KIMATSU-TSL04.
WA_KIMATSU_E-TSL05 = WA_KIMATSU_E-TSL05 + WA_KIMATSU-TSL05.
WA_KIMATSU_E-TSL06 = WA_KIMATSU_E-TSL06 + WA_KIMATSU-TSL06.
WA_KIMATSU_E-TSL07 = WA_KIMATSU_E-TSL07 + WA_KIMATSU-TSL07.
WA_KIMATSU_E-TSL08 = WA_KIMATSU_E-TSL08 + WA_KIMATSU-TSL08.
WA_KIMATSU_E-TSL09 = WA_KIMATSU_E-TSL09 + WA_KIMATSU-TSL09.
WA_KIMATSU_E-TSL10 = WA_KIMATSU_E-TSL10 + WA_KIMATSU-TSL10.
WA_KIMATSU_E-TSL11 = WA_KIMATSU_E-TSL11 + WA_KIMATSU-TSL11.
WA_KIMATSU_E-TSL12 = WA_KIMATSU_E-TSL12 + WA_KIMATSU-TSL12.
ENDIF.

AT LAST.
IF RB_RB1 <> SPACE.
WA_KIMATSU_E-RTCUR = C_C_JPY.
ELSE.
WA_KIMATSU_E-RTCUR = L_RTCUR.
ENDIF.
APPEND WA_KIMATSU_E TO ITAB_KIMATSU_E.
ENDAT.

CLEAR:
WA_KIMATSU.
ENDLOOP.

FREE:
ITAB_KIMATSU.

LOOP AT ITAB_KIMATSU_E INTO WA_KIMATSU_E.
CLEAR:
L_COUNT,
L_TOTAL.
* 選択画面に指定された会計期間の残高合計処理
L_COUNT = L_COUNT + S_MONAT-LOW - 1.
DO G_MONAT_2 TIMES.
ADD 1 TO L_COUNT.
CONCATENATE 'WA_KIMATSU_E-HSL' L_COUNT INTO L_NAME.
ASSIGN (L_NAME) TO <FS05>.
L_TOTAL = L_TOTAL + <FS05>.
CLEAR:
L_NAME.
ENDDO.
* 出力値をマイナスにする
IF L_TOTAL <> 0.
WA_KIMATSU02-HSLVT = -1 * L_TOTAL.
ENDIF.
* 通貨コード毎の集計を行う場合
IF RB_RB1 = SPACE.
CLEAR:
L_COUNT,
L_TOTAL.

* 選択画面に指定された会計期間の残高合計処理
L_COUNT = L_COUNT + S_MONAT-LOW - 1.
DO G_MONAT_2 TIMES.
ADD 1 TO L_COUNT.
CONCATENATE 'WA_KIMATSU_E-TSL' L_COUNT INTO L_NAME.
ASSIGN (L_NAME) TO <FS06>.
L_TOTAL = L_TOTAL + <FS06>.
CLEAR:
L_NAME.
ENDDO.
* 出力値をマイナスにする
IF L_TOTAL <> 0.
WA_KIMATSU02-TSLVT = -1 * L_TOTAL.
ENDIF.
ENDIF.

WA_KIMATSU02-CKUBUN = C_C_04.             "区分
WA_KIMATSU02-TKUBUN = TEXT-T08.           "区分(テキスト)
WA_KIMATSU02-RTCUR  = WA_KIMATSU_E-RTCUR. "通貨
WA_KIMATSU02-WAERS  = C_C_JPY.            "国内通貨
APPEND WA_KIMATSU02 TO ITAB_KIMATSU01.
CLEAR:
WA_KIMATSU02,
WA_KIMATSU_E.
ENDLOOP.

LOOP AT ITAB_KIMATSU01 INTO WA_KIMATSU01.
COLLECT WA_KIMATSU01 INTO ITAB_KIMATSU02.
ENDLOOP.

APPEND LINES OF ITAB_KIMATSU02 TO ITAB_ALV.

FREE:
ITAB_KIMATSU_E,
ITAB_KIMATSU01,
ITAB_KIMATSU02.

ENDFORM.                    " EDIT_KIMATSU
*&---------------------------------------------------------------------*
*&      Form  SELECT_GLT0_KIMATSU
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SELECT_GLT0_KIMATSU.

SELECT RTCUR
TSLVT
TSL01
TSL02
TSL03
TSL04
TSL05
TSL06
TSL07
TSL08
TSL09
TSL10
TSL11
TSL12
HSLVT
HSL01
HSL02
HSL03
HSL04
HSL05
HSL06
HSL07
HSL08
HSL09
HSL10
HSL11
HSL12
INTO TABLE ITAB_KIMATSU
FROM GLT0
WHERE BUKRS = C_C_C001
AND RYEAR = P_GJAHR
AND RACCT IN R_VALUES3.

ENDFORM.                    " SELECT_GLT0_KIMATSU
