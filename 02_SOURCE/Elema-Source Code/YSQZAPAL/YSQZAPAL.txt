***---------------------------------------------------------------------
** (c) Copyright 1998 OptiSystems Solutions LTD. All Rights Reserved  **
***---------------------------------------------------------------------
*-------------------------------------------------------------------
***INCLUDE YSQZAQ . parsing
*-------------------------------------------------------------------
*&---------------------------------------------------------------------*
*&      Form  BQ01_COMMAND
*&---------------------------------------------------------------------*
FORM BQ01_COMMAND.
****
READ TABLE WTSC INDEX 1.
WS = WTSC-STR.  TRANSLATE WS TO UPPER CASE.
CASE WS.
when 'SELECT'.  st_sql-id-typ = 's'.
when 'INSERT'.  st_sql-id-typ = 'i'.
when 'UPDATE'.  st_sql-id-typ = 'u'.
when 'DELETE'.  st_sql-id-typ = 'd'.
ENDCASE.
*******
ENDFORM.                    " BQ01_COMMAND
*&---------------------------------------------------------------------*
*&      Form  BQ01_FROM
*&---------------------------------------------------------------------*
FORM BQ03_FROM.
****
ADD 1 TO STP-ITSC.   WI = 0.
****
loop at wtsc from stp-itsc.
stp-itsc = sy-tabix.
WS = WTSC-STR.  TRANSLATE WS TO UPPER CASE.
****
CASE WS.
WHEN '^'.      CONTINUE.
WHEN 'WHERE' OR 'GROUP' OR 'ORDER'.  EXIT.
ENDCASE.
****
IF WI = 1. WI = 0.  CONTINUE.   ENDIF.  " alias
****
WI = 1.
append ws to st_sql-from-tabs.
st_sql-from-tab = ws.
ENDLOOP.
****
describe table st_sql-from-tabs lines wi.
st_sql-from-ktab = wi.
if wi = 1. st_sql-from-typ = '1'.
else.      st_sql-from-typ = '>'.
ENDIF.
*******
ENDFORM.                    " BQ01_FROM
*&---------------------------------------------------------------------*
*&      Form  BQ01_ORDER
*&---------------------------------------------------------------------*
FORM BQ05_ORDER.
DATA: RIN LIKE SY-TABIX.
*** into options
IF WS <> 'ORDER'.  EXIT.  ENDIF.
ADD 1 TO STP-ITSC.    "if stp-itsc > stp-kstr. exit.  endif.
st_sql-order-typ = 'li'.
CLEAR WFLS.
****
LOOP AT WTSC FROM STP-ITSC.
STP-ITSC = SY-TABIX.
WS = WTSC-STR.  TRANSLATE WS TO UPPER CASE.
CASE WS.
WHEN 'BY'.
when 'DESC'.  read table st_sql-order-flsg into wfls index rin.
WFLS-SG = 'd'.
modify st_sql-order-flsg from wfls index rin.
WHEN '^'.         CONTINUE.
WHEN 'ASC'.
****
WHEN 'INTO' OR 'FROM' OR 'WHERE' OR 'GROUP'
OR 'ORDER' OR 'FOR' OR '.'.    EXIT.
WHEN OTHERS.  WFLS-FLD = WS.
append ws to st_sql-order-flsg.
RIN = SY-TABIX.
CLEAR WFLS.
WI = SY-TABIX.
ENDCASE.
ENDLOOP.
describe table st_sql-order-flsg lines st_sql-order-kfl.
*******
ENDFORM.                    " BQ01_ORDER
*&---------------------------------------------------------------------*
*&      Form  BQ01_GROUP
*&---------------------------------------------------------------------*
FORM BQ06_GROUP.
****
IF WS <> 'GROUP'.  EXIT.  ENDIF.
ADD 1 TO STP-ITSC.    "if stp-itsc > stp-kstr. exit.  endif.
*******
ENDFORM.                    " BQ01_GROUP
*&---------------------------------------------------------------------*
*&      Form  BQ01_WHERE
*&---------------------------------------------------------------------*
FORM BQ04_WHERE.
****
IF WS <> 'WHERE'.  EXIT.  ENDIF.
st_sql-where-typ = 'y'.
ADD 1 TO STP-ITSC.         " if stp-itsc > stp-kstr. exit.  endif.
****
loop at wtsc from stp-itsc.
stp-itsc = sy-tabix.
WS = WTSC-STR.  TRANSLATE WS TO UPPER CASE.
****
CASE WS.
WHEN 'ORDER' OR 'GROUP' OR 'FOR'.  EXIT.
WHEN '~'.    DELETE ST_SQL-WHERE-FLIN INDEX WI.  CONTINUE.
ENDCASE.
****
APPEND WS TO ST_SQL-WHERE-FLIN. WI = SY-TABIX.
ENDLOOP.
describe table st_sql-where-flin lines st_sql-where-klin.
****
DATA: L_STAT(2) VALUE 'db'.
loop at st_sql-where-flin into wfls.
CASE L_STAT.
*** wait table field
WHEN 'db'.
CASE WFLS-FLD.
WHEN ')'.                            WFLS-SG = 's'.
WHEN 'OR' OR 'AND' OR 'NOT' OR '('.  WFLS-SG = 'l'.
WHEN OTHERS.       L_STAT = 'op'.    WFLS-SG = 'd'.
ENDCASE.
*** wait operator
WHEN 'op'.
IF '= NE <> >< LT < LE <= GT > GE >= ' CS WFLS-FLD.
L_STAT = 'pr'.  WFLS-SG = 'o'.
ENDIF.
****
CASE WFLS-FLD.
WHEN 'NOT'.                     WFLS-SG = 'o'.
WHEN 'LIKE'.    L_STAT = 'pr'.  WFLS-SG = 'o'.
WHEN 'BETWEEN'. L_STAT = 'sp'.  WFLS-SG = 'o'.
WHEN 'IN'.      L_STAT = 'so'.  WFLS-SG = 'o'.
ENDCASE.
*** wait spec operator
WHEN 'so'.
CASE WFLS-FLD.
WHEN 'AND'.       L_STAT = 'pr'.  WFLS-SG = 'o'.
WHEN ')'.         L_STAT = 'db'.  WFLS-SG = 's'.
WHEN '(' OR ','.  L_STAT = 'sp'.  WFLS-SG = 's'.
ENDCASE.
*** wait parameter ( :A or ? )
WHEN 'pr'.         " perform mm_test_param_typ using wfls.
L_STAT = 'db'.   WFLS-SG = 'p'.
*** wait spec parameter ( :A or ? )
WHEN 'sp'.         " perform mm_test_param_typ using wfls.
L_STAT = 'so'.   WFLS-SG = 'p'.
ENDCASE.
****
modify st_sql-where-flin from wfls.
ENDLOOP.
*******
ENDFORM.                    " BQ01_WHERE
*&---------------------------------------------------------------------*
*&      Form  BQ02_FIELDS
*&---------------------------------------------------------------------*
FORM BQ02_FIELDS.
****
WI = 0.
LOOP AT WTSC FROM 2.
stp-itsc = sy-tabix.
WS = WTSC-STR.  TRANSLATE WS TO UPPER CASE.
****
CASE WS.
WHEN 'DISTINCT'.  ST_SQL-OPT-SG_DIST = 'y'.  CONTINUE.
WHEN 'FROM'.      EXIT.
WHEN '^'.         CONTINUE.
WHEN '~'.         DELETE ST_SQL-FLD-FLD INDEX WI.  CONTINUE.
ENDCASE.
****
APPEND WS TO ST_SQL-FLD-FLD. WI = SY-TABIX.
ENDLOOP.
****
describe table st_sql-fld-fld lines st_sql-fld-kfl.
*******
ENDFORM.                    " BQ02_FIELDS
*&---------------------------------------------------------------------*
*&      Form  BS01_OPTIONS
*&---------------------------------------------------------------------*
FORM BS01_OPTIONS.
****
*read table wtsc index stp-inxt.
*IF <LL> <> 'SELECT'. STP-SGT = 'n'.  EXIT.  ENDIF.
*add 1 to stp-inxt.
****
loop at wtsc from stp-inxt.
stp-inxt = sy-tabix + 1.
CASE <LL>.
WHEN 'SINGLE'.    ST_SEL-OPT-SG_SING  = 'y'.
WHEN 'DISTINCT'.  ST_SEL-OPT-SG_DIST  = 'y'.
when 'FOR'. read table wtsc index stp-inxt.
IF <LL> = 'UPDATE'.
add 1 to stp-inxt.
" ?????
ENDIF.
WHEN OTHERS. STP-INXT = SY-TABIX. EXIT.
ENDCASE.
*******
ENDLOOP.
*******
ENDFORM.                    " BS01_OPTIONS
*&---------------------------------------------------------------------*
*&      Form  BS02_FIELDS
*&---------------------------------------------------------------------*
FORM BS02_FIELDS.
****
read table wtsc index stp-inxt.
add 1 to stp-inxt.
*** *
IF <LL> = '*'.   ST_SEL-FLD-TYP = '*'.  EXIT.  ENDIF.
*** (
IF <LL> = '('.
ST_SEL-FLD-TYP = 'dy'.
add 2 to stp-inxt.
EXIT.
ENDIF.
*** fields
STP-INXT = STP-INXT - 1.
loop at wtsc from stp-inxt.
****
CASE <LL>.
WHEN 'FROM' OR 'WHERE' OR 'GROUP' OR 'ORDER' OR '.'.  EXIT.
WHEN 'INTO' OR 'APPENDING'.  EXIT.
WHEN OTHERS.
ENDCASE.
****
SHIFT <LL> LEFT UP TO '~'.
IF SY-SUBRC = 0.   SHIFT <LL> LEFT BY 1 PLACES.  ENDIF.
****
APPEND <LL> TO ST_SEL-FLD-FLD.
ADD 1 TO STP-INXT.
*******
ENDLOOP.
DESCRIBE TABLE ST_SEL-FLD-FLD LINES ST_SEL-FLD-KFL.
*******
ENDFORM.                    " BS02_FIELDS
*&---------------------------------------------------------------------*
*&      Form  BS03_INTO
*&---------------------------------------------------------------------*
FORM BS03_INTO.
****
loop at wtsc from stp-inxt.
****
STP-INXT = SY-TABIX.
CASE <LL>.
WHEN 'FROM' OR 'WHERE' OR 'GROUP' OR 'ORDER' OR '.'.  EXIT.
WHEN 'INTO' OR 'APPENDING'.  EXIT.
WHEN OTHERS.
ENDCASE.
ADD 1 TO STP-INXT.
*******
ENDLOOP.
*******
ENDFORM.                    " BS03_INTO
*&---------------------------------------------------------------------*
*&      Form  BS04_FROM
*&---------------------------------------------------------------------*
FORM BS04_FROM.
DATA: LSGTO VALUE 'f'.
****
ST_SEL-FROM-TYP = 'st'.
LOOP AT WTSC FROM STP-INXT.
IF SY-TABIX < STP-INXT.  CONTINUE.  ENDIF.
STP-INXT = SY-TABIX.   " + 1.
****
CASE <LL>.
WHEN 'CLIENT'. ST_SEL-FROM-SG_CLND = 'y'.
ADD 1 TO STP-INXT.
WHEN 'BYPASSING'. ADD 1 TO STP-INXT.
WHEN 'UP'.     ST_SEL-FROM-SG_UPTO = 'y'.
ADD 3 TO STP-INXT.
WHEN '('.  IF LSGTO = 'f'.  ST_SEL-FROM-TYP = 'dy'.
ELSE.
DESCRIBE TABLE ST_SEL-WHERE-FLIN LINES WI.
IF WI <> 0.
APPEND 'AND' TO ST_SEL-WHERE-FLIN.
ENDIF.
APPEND '(' TO ST_SEL-WHERE-FLIN.
ENDIF.
*  when ')'.  if lsgto = 'w'.  append ')' to st_sel-where-flin.
*                              append 'AND' to st_sel-where-flin.
*             endif.
WHEN 'AS'.  ST_SEL-ID-TYP = 'sm'.     ADD 1 TO STP-INXT.
WHEN 'INNER'.  LSGTO = 'f'.    ADD 1 TO STP-INXT.
WHEN 'ON'.     LSGTO = 'w'.
WHEN 'FROM' OR 'WHERE' OR 'GROUP' OR 'ORDER' OR '.'.  EXIT.
WHEN 'INTO' OR 'APPENDING'.  EXIT.
WHEN OTHERS.
IF ST_SEL-FROM-TYP = 'dy'. CONTINUE. ENDIF.
**** to from
IF LSGTO = 'f'.
ST_SEL-FROM-TAB = <LL>.
IF ST_SEL-FROM-TAB(1) = '*'.
SHIFT ST_SEL-FROM-TAB LEFT BY 1 PLACES.
ENDIF.
APPEND ST_SEL-FROM-TAB TO ST_SEL-FROM-TABS.
ELSE.
**** to where for mu
SHIFT <LL> LEFT UP TO '~'.
IF SY-SUBRC = 0.   SHIFT <LL> LEFT BY 1 PLACES.  ENDIF.
APPEND <LL> TO ST_SEL-WHERE-FLIN.
ENDIF.
****
ENDCASE.
****
ADD 1 TO STP-INXT.
*******
ENDLOOP.
****
DESCRIBE TABLE ST_SEL-FROM-TABS LINES ST_SEL-FROM-KTAB.
*******
ENDFORM.                    " BS04_FROM
*&---------------------------------------------------------------------*
*&      Form  BS05_WHERE
*&---------------------------------------------------------------------*
FORM BS05_WHERE.
****
*if sts-nami = 'YMADTF01'. break-point. endif. "!!!!!!
******
STP-INXT = STP-INXT - 1.
ST_SEL-WHERE-TYP = 'st'.
****
IF ST_SEL-ID-TYP = 'sm'.
APPEND 'AND' TO ST_SEL-WHERE-FLIN.
ENDIF.
****
LOOP AT WTSC FROM STP-INXT.
IF SY-TABIX < STP-INXT.  CONTINUE.  ENDIF.
STP-INXT = SY-TABIX.  " + 1.
****
CASE <LL>.
WHEN 'FOR'.   ST_SEL-WHERE-TYP   = 'dy'. "  exit.
WHEN 'WHERE'. ST_SEL-WHERE-TYP = 'st'.
*  WHEN 'IN'.
*             READ TABLE WTSC INDEX STP-INXT.
*             IF <LL> <> '('. ST_SEL-WHERE-TYP   = 'dy'.
*             ELSE.          APPEND <LL> TO ST_SEL-WHERE-FLIN.
*             ENDIF.
WHEN 'GROUP' OR 'ORDER' OR 'INTO' OR 'FROM' OR '.'.  EXIT.
WHEN OTHERS. IF ST_SEL-WHERE-TYP <> 'dy'.
SHIFT <LL> LEFT UP TO '~'.
IF SY-SUBRC = 0. SHIFT <LL> LEFT BY 1 PLACES.  ENDIF.
APPEND <LL> TO ST_SEL-WHERE-FLIN.
ENDIF.
ENDCASE.
ADD 1 TO STP-INXT.
ENDLOOP.
*** into fields
LOOP AT WTSC FROM STP-INXT.
STP-INXT = SY-TABIX.  " + 1.
****
CASE <LL>.
*  when '(' or ',' or ')'.  continue.
WHEN 'GROUP' OR 'ORDER' OR 'INTO' OR 'FROM' OR 'WHERE' OR '.'.  EXIT.
WHEN OTHERS.
SHIFT <LL> LEFT UP TO '~'.
IF SY-SUBRC = 0.   SHIFT <LL> LEFT BY 1 PLACES.  ENDIF.
APPEND <LL> TO ST_SEL-WHERE-FLIN.
ENDCASE.
****
ADD 1 TO STP-INXT.
****
ENDLOOP.
IF ST_SEL-WHERE-TYP <> 'st'.  EXIT.  ENDIF.
**** analysis where - states = automate - db op so pr sp
DATA: L_STAT(2) VALUE 'db'.
LOOP AT ST_SEL-WHERE-FLIN INTO WFLS.
CASE L_STAT.
*** wait table field
WHEN 'db'.
CASE WFLS-FLD.
WHEN ')'.                            WFLS-SG = 's'.
WHEN 'OR' OR 'AND' OR 'NOT' OR '('.  WFLS-SG = 'l'.
WHEN OTHERS.       L_STAT = 'op'.    WFLS-SG = 'd'.
ENDCASE.
*** wait operator
WHEN 'op'.
IF 'EQ = NE <> >< LT < LE <= GT > GE >= ' CS WFLS-FLD.
L_STAT = 'pr'.  WFLS-SG = 'o'.
ENDIF.
****
CASE WFLS-FLD.
WHEN 'NOT'.                     WFLS-SG = 'O'.
WHEN 'LIKE'.    L_STAT = 'pr'.  WFLS-SG = 'O'.
WHEN 'BETWEEN'. L_STAT = 'sp'.  WFLS-SG = 'O'.
WHEN 'IN'.      L_STAT = 'so'.  WFLS-SG = 'O'.
WHEN ')'.       L_STAT = 'so'.  WFLS-SG = 'O'.
ST_SEL-WHERE-TYP = 'dy'.
ENDCASE.
*** wait spec operator
WHEN 'so'.
CASE WFLS-FLD.
WHEN 'AND'.       L_STAT = 'pr'.  WFLS-SG = 'O'.
WHEN ')'.         L_STAT = 'db'.  WFLS-SG = 's'.
WHEN '(' OR ','.  L_STAT = 'sp'.  WFLS-SG = 's'.
WHEN OTHERS.      L_STAT = 'db'.  WFLS-SG = 'p'.
ENDCASE.
*** wait parameter
WHEN 'pr'.         " perform mm_test_param_typ using wfls.
L_STAT = 'db'.   WFLS-SG = 'p'.
*** wait spec parameter
WHEN 'sp'.         " perform mm_test_param_typ using wfls.
L_STAT = 'so'.   WFLS-SG = 'p'.
ENDCASE.
****
MODIFY ST_SEL-WHERE-FLIN FROM WFLS.
ENDLOOP.
DESCRIBE TABLE ST_SEL-WHERE-FLIN LINES ST_SEL-WHERE-KLIN.
*******
ENDFORM.                    " BS05_WHERE
*&---------------------------------------------------------------------*
*&      Form  BS06_GROUP
*&---------------------------------------------------------------------*
FORM BS06_GROUP.
****
ST_SEL-GROUP-TYP   = 'li'.
LOOP AT WTSC FROM STP-INXT.
STP-INXT = SY-TABIX.  " + 1.
CASE <LL>.
WHEN '('.   ST_SEL-GROUP-TYP   = 'dy'.
APPEND <LL> TO ST_SEL-GROUP-FLD.
WHEN ')'.   APPEND <LL> TO ST_SEL-GROUP-FLD.
WHEN 'INTO' OR 'FROM' OR 'WHERE' OR 'GROUP' OR 'ORDER' OR '.'.  EXIT.
WHEN OTHERS. APPEND <LL> TO ST_SEL-GROUP-FLD.
ENDCASE.
ADD 1 TO STP-INXT.
ENDLOOP.
DESCRIBE TABLE ST_SEL-GROUP-FLD LINES ST_SEL-GROUP-KFL.
*******
ENDFORM.                    " BS06_GROUP
*&---------------------------------------------------------------------*
*&      Form  BS07_ORDER
*&---------------------------------------------------------------------*
FORM BS07_ORDER.
****
IF <LL> <> 'ORDER'.  EXIT.  ENDIF.
ST_SEL-ORDER-TYP = 'li'.
LOOP AT WTSC FROM STP-INXT.
STP-INXT = SY-TABIX.  " + 1.
CASE <LL>.
WHEN 'BY'.       CONTINUE.
WHEN 'PRIMARY'.  ST_SEL-ORDER-TYP   = 'pr'.
ADD 1 TO STP-INXT.
WHEN '('.   ST_SEL-ORDER-TYP   = 'dy'.
WHEN ')'.   EXIT.
WHEN 'DESCENDING'.
READ TABLE ST_SEL-ORDER-FLSG INTO WFLS INDEX WI.
WFLS-SG = 'd'.
MODIFY ST_SEL-ORDER-FLSG FROM WFLS INDEX WI.
WHEN 'ASCENDING'.
****
WHEN 'INTO' OR 'FROM' OR 'WHERE' OR 'GROUP' OR 'ORDER' OR '.'.  EXIT.
WHEN OTHERS. APPEND <LL> TO ST_SEL-ORDER-FLSG.
WI = SY-TABIX.
ENDCASE.
ADD 1 TO STP-INXT.
ENDLOOP.
DESCRIBE TABLE ST_SEL-ORDER-FLSG LINES ST_SEL-ORDER-KFL.
*******
ENDFORM.                    " BS07_ORDER
*&---------------------------------------------------------------------*
*&      Form  BSA01_DD
*&---------------------------------------------------------------------*
FORM BSA01_DD.
****
PERFORM DB_FOR_FROM USING ST_SEL.
*******
ENDFORM.                    " BSA01_DD
*&---------------------------------------------------------------------*
*&      Form  BSA02_WHERE
*&---------------------------------------------------------------------*
FORM BSA02_WHERE.
DATA: LKKEY TYPE I.
****
IF ST_SEL-WHERE-TYP = 'dy'. EXIT. ENDIF.
****
IF ST_SEL-DD-SG_MNDT = 'y'. LKKEY = 1.
ELSE.                       LKKEY = 0.
ENDIF.
****
LOOP AT ST_SEL-WHERE-FLIN INTO WFLS.
WI = SY-TABIX + 1.  WS = WFLS-FLD.
****
*  if wfls-sg <> 'd'.  continue.  endif.
****
CASE WFLS-SG.
WHEN 'd'.
READ TABLE ST_SEL-DD-FLSG INTO WFDS WITH KEY FLD = WS.
IF SY-SUBRC <> 0.  CONTINUE.  ENDIF.
**** other
IF WFDS-SG = ' '.
ST_SEL-WHERE-SG_OTHER = 'y'.
CONTINUE.
ENDIF.
**** key =
READ TABLE ST_SEL-WHERE-FLIN INTO WFLS INDEX WI.
IF WFLS-FLD = '=' OR WFLS-FLD = 'EQ'.
**ZS ax1k912026 vvvvvvvvvvvvvvvvvvvvv
IF WFDS-FLD <> 'MANDT' AND WFDS-FLD <> 'CLIENT'.
**ZS ax1k912026 ^^^^^^^^^^^^^^^^^^^^^
ADD 1 TO LKKEY.
ENDIF.
ENDIF.
CONTINUE.
WHEN 'O'.
CASE WS.
WHEN 'LIKE' OR 'IN'. ST_SEL-WHERE-SG_IN_LI = 'y'.
ENDCASE.
WHEN OTHERS.
ENDCASE.
*******
ENDLOOP.
**** sg_key sg_other
IF LKKEY > 0.
IF LKKEY = ST_SEL-DD-KKEY. ST_SEL-WHERE-SG_KEY   = 'y'.
ELSE.                      ST_SEL-WHERE-SG_OTHER = 'y'.
ENDIF.
ENDIF.
*******
ENDFORM.                    " BSA02_WHERE
*&---------------------------------------------------------------------*
*&      Form  AQ2_SQL_ANALYSIS.
*&---------------------------------------------------------------------*
FORM AQ2_SQL_ANALYSIS.
**** select
IF ST_SQL-ID-TYP <> 's'. EXIT. ENDIF.
**** interSAP
IF  ST_SQL-FROM-TAB = 'D010S'
OR ST_SQL-FROM-TAB = 'D010L'
OR ST_SQL-FROM-TAB = 'USRBF'
OR ST_SQL-FROM-TAB = 'SVERS'
OR ST_SQL-FROM-TAB = 'RFCDES'
.
ST_SQL-ID-TYP = 'SA'.
EXIT.        "!!!!!!!!!!
ENDIF.
**** not trans
SELECT SINGLE * FROM DD02L WHERE TABNAME = ST_SQL-FROM-TAB.
IF SY-SUBRC <> 0 OR DD02L-TABCLASS <> 'TRANSP'.
ST_SQL-ID-TYP = 'SA'.
EXIT.        "!!!!!!!!!!
ENDIF.
**** select / exec = sg_se
ST_SQL-ANL-SG_SE = 's'.
SEARCH ST_SQL-FLD-FLD FOR '~'.
IF SY-SUBRC = 0.  ST_SQL-ANL-SG_SE = 'e'.  ENDIF.
SEARCH ST_SQL-WHERE-FLIN FOR '\'.
IF SY-SUBRC = 0.  ST_SQL-ANL-SG_SE = 'e'.  ENDIF.
**** ROWNUM  MANDT
SEARCH ST_SQL-WHERE-FLIN FOR 'ROWNUM'.
IF SY-SUBRC = 0.  ST_SQL-ANL-SG_ROWN = 'y'.  ENDIF.
**ZS ax1k912026 vvvvvvvvvvvvvvvvvvvvv
SEARCH ST_SQL-WHERE-FLIN FOR 'MANDT'.
IF SY-SUBRC = 0.  ST_SQL-ANL-SG_MNDT = 'y'.  ENDIF.
SEARCH ST_SQL-WHERE-FLIN FOR 'CLIENT'.
IF SY-SUBRC = 0.  ST_SQL-ANL-SG_MNDT = 'y'.  ENDIF.
**ZS ax1k912026 ^^^^^^^^^^^^^^^^^^^^^
**** ( select * ) =  sg_zv
DATA: COU_TB LIKE SY-TABIX, COU_DB LIKE SY-TABIX.
****
IF ST_SQL-FROM-TYP = '1'.
ST_SQL-ANL-SG_ZV = 'y'.
***
DESCRIBE TABLE ST_SQL-FLD-FLD LINES COU_TB.
IF COU_TB = 1.
READ TABLE ST_SQL-FLD-FLD INTO WS INDEX 1.
IF WS = '*'.
ST_SQL-ANL-SG_ZV = '*'.
ENDIF.
****
ELSE.
SELECT COUNT( * ) FROM DD03L INTO COU_DB
WHERE TABNAME = ST_SQL-FROM-TAB
AND AS4LOCAL = 'A'
*                        and as4vers  = '0000'
AND FIELDNAME <> '.INCLUDE'.
IF COU_TB <> COU_DB.  ST_SQL-ANL-SG_ZV = 'n'.  ENDIF.
ENDIF.
ENDIF.
**** impex
WI = 0.
LOOP AT ST_SQL-FLD-FLD INTO WS.
IF ' RELID SRTFD SRTF2 CLUSTR CLUSTD ' CS WS.  ADD 1 TO WI.  ENDIF.
ENDLOOP.
IF WI = 5.
ST_SQL-ID-TYP = 'e'.
EXIT.        "!!!!!!!!!!
ENDIF.
*******
ENDFORM.                    " AQ2_SQL_ANALYSIS.
