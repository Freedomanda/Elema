***INCLUDE FDOPOI00 .

***********************************************************************
*  FIELD-GROUPS                                                       *
***********************************************************************
FIELD-GROUPS: HEADER,
ADRESSE,
DATEN.
INSERT:   KNB1-BUKRS
SSORTFELD
KNA1-KUNNR
SATZART           "1 = Adressenextrakt,  2 = Datenextrakt
PSORTFELD
BSID-ZUONR
BSID-BUDAT
BSID-WAERS
BSID-UMSKZ
BSID-GSBER
TXTA-FLAG
TXTB-FLAG
INTO HEADER.

INSERT:  KNA1-NAME1 KNA1-NAME2 KNA1-STRAS KNA1-PSTLZ KNA1-ORT01
KNA1-REGIO KNA1-PSTL2 KNA1-PFACH KNA1-LAND1
KNA1-PFORT TEXTFELD T001S-SNAME  KNB1-CESSION_KZ
INTO  ADRESSE.

INSERT:
BSID-BUKRS
BSID-XBLNR
BSID-BELNR
BSID-BLDAT
BSID-BLART
BSID-BUZEI
BSID-MANST
BSID-BSCHL
BSID-ZLSCH
BSID-SKFBT
BSID-ZFBDT
BSID-ZBD1T
BSID-ZBD1P
BSID-XCPDD
BSID-GJAHR
BSEGA-NETDT
BSID-UMSKZ
BSID-SGTXT
BSID-BSTAT
BSID-AUGDT
BSID-AUGBL
BSID-SKNTO
BSEGA-GKART
BSEGA-GKONT
BSEGA-DMSHB
WADMSHB
WSDMSHB
BSEGA-WRSHB
PH-TEXTFELD
ADMSHB
ADMSOL
ADMHAB
KNA1-XCPDK                    "Sonderstatus (X = CPD-Stammsatz)
KNB1-ZUAWA                    "Sort-KZ (22 und 23 fuer CPD)
BSID-RSTGR
TEXT-FLAG
BSID-CESSION_KZ
BSID-XNEGP
INTO DATEN.

INITIALIZATION.
GET_FRAME_TITLE: 1, 2.

***********************************************************************
*  Selection Screen                                                   *
***********************************************************************

AT SELECTION-SCREEN ON AKONTOS.
*    Konvertierung der Kontonummer
*    -----------------------------
LOOP AT AKONTOS.
PERFORM ALPHAFORMAT(SAPFS000)
USING AKONTOS-LOW AKONTOS-LOW.
PERFORM ALPHAFORMAT(SAPFS000)
USING AKONTOS-HIGH AKONTOS-HIGH.
MODIFY AKONTOS.
ENDLOOP.

AT SELECTION-SCREEN ON AKONTO.
*    Konvertierung der Kontonummer
*    -----------------------------
LOOP AT AKONTO.
PERFORM ALPHAFORMAT(SAPFS000)
USING AKONTO-LOW AKONTO-LOW.
PERFORM ALPHAFORMAT(SAPFS000)
USING AKONTO-HIGH AKONTO-HIGH.
MODIFY AKONTO.
ENDLOOP.

***********************************************************************
*  Start-of-Selection                                                 *
***********************************************************************

START-OF-SELECTION.

DATA : L_DMSHB  LIKE  UBUKRTAB-DMSHB   .  " ì¡éÍédñÛï 
DATA : L_ADMSHB LIKE  ATOTALTAB-ADMSHB .  " îÑä|ã‡çáåv

COMMIT WORK.
* Fuellen zus‰tzlicher DB Sel-Opts
*COPY: LAND TO DD_LAND1, KONZSCHL TO DD_KONZS,
*      AKONTOS TO DD_AKONT, AKONTO TO DD_HKONT,
*      FI_VERB TO DD_VBUND, SACHBEAR TO DD_BUSAB,
*      GESBER TO DD_GSBER, BELEGART TO DD_BLART,
*      BLGDATUM TO DD_BLDAT, BUSCHL TO DD_BSCHL,
*      WAEHRUNG TO DD_WAERS, MAHNSTUF TO DD_MANST,
*      ZAHLWEG TO DD_ZLSCH.

COPY:  AKONTOS TO DD_AKONT, AKONTO TO DD_HKONT.

IF REPIDENT = '3'.
IF AUSWAHL = '1'
OR AUSWAHL = '2'
OR AUSWAHL = '3'.
ELSE.
AUSWAHL = '1'.
ENDIF.
ENDIF.

* check for item type and prepare dates accordingly for LogDB:
IF AUSWAHL = '2'.                    " cleared only
DD_STIDA = '99991231'.
ENDIF.

* Es sind nur offene Posten gewÅEscht.

S   = TEXT-015.                                           "S
H   = TEXT-016.                                           "H
UN = TEXT-017.                       "UMSATZART SPACE

MOVE: '0'      TO BHDGD-INIFL,
'    '   TO BHDGD-BUKRS,
SY-LINSZ TO BHDGD-LINES,     "Zeilenbreite der Liste (Reportanw.)
SY-UNAME TO BHDGD-UNAME,       "Benutzername (SAP-Anmeldung)
SY-REPID TO BHDGD-REPID,       "Name des ABAP-Programms
SY-TITLE TO BHDGD-LINE1,       "Titel des ABAP-Programms
TITLE    TO BHDGD-LINE2,       "Untertitel
MI_FICHE TO BHDGD-MIFFL,       "Mikro-Fiche-Information
LISTSEP  TO BHDGD-SEPAR,       "Listseparation
'BUKRS'  TO BHDGD-DOMAI.

IF VD_STUFE <> SPACE.
VD_STUFE = '0'.                    "Einzelposten werden ausgegeben
ELSE.
VD_STUFE = '1'.                 "Einzelposten werden nicht ausgebeben
ENDIF.

IF S_SORTKZ >= '1' AND S_SORTKZ <= '9'.
"o.k.
ELSE.
S_SORTKZ = '1'.
ENDIF.

IF p_sortkz >= '1' AND p_sortkz <= '8'.                   "
"o.k.
ELSE.
P_SORTKZ = '1'.
ENDIF.

IF KONZVERS <> SPACE.
KONZVERS = 'X'.
ENDIF.

IF ZW_SUMME <> SPACE.
ZW_SUMME = 'X'.
ENDIF.

IF CPD_INFO <> SPACE.
CPD_INFO = 'X'.
ENDIF.

IF WGAUSGAB <> SPACE.
WGAUSGAB = 'X'.
ENDIF.

IF GBAUSGAB <> SPACE.
GBAUSGAB = 'X'.
ENDIF.
IF LISTSEP  <> SPACE.
LISTSEP  = 'X'.
ENDIF.

IF MI_FICHE <> SPACE.
MI_FICHE = 'X'.
ENDIF.

IF N_BELEGE <> SPACE.
N_BELEGE = 'X'.
B0SG-XSTAN = 'X'.
ELSE.
B0SG-XSTAN = ' '.
ENDIF.

IF STAT_BLG <> SPACE.
STAT_BLG = 'X'.
B0SG-XSTAS = 'X'.
ENDIF.

IF VBEL <> SPACE.
VBEL = 'X'.
B0SG-XSTAV = 'X'.
ENDIF.

PERFORM TXTTAB_FUELLEN.

SELECT        * FROM  TCESSIONT
WHERE  LANGU    = SY-LANGU
AND    COMPANY  IN DD_BUKRS.
HTCESSIONT = TCESSIONT.
APPEND HTCESSIONT.
ENDSELECT.

GET KNA1.
*  CHECK SELECT-OPTIONS wirkt nur auf Grossbuchstaben
ASEG = SPACE.
MOVE-CORRESPONDING KNA1 TO ASEG.
TRANSLATE KNA1-LAND1 TO UPPER CASE.  "#EC TRANSLANG
TRANSLATE KNA1-KONZS TO UPPER CASE.  "#EC TRANSLANG
TRANSLATE KNA1-BRSCH TO UPPER CASE.  "#EC TRANSLANG
TRANSLATE KNA1-SORTL TO UPPER CASE.  "#EC TRANSLANG
TRANSLATE KNA1-VBUND TO UPPER CASE.  "#EC TRANSLANG
*  CHECK: LAND,
*         KONZSCHL,
*         BRCHSCHL,
*         SORTNAME,
*         FI_VERB.
MOVE-CORRESPONDING ASEG TO KNA1.
*  CHECK: KONTENGR.

IF NOT XTXTP IS INITIAL.
PERFORM CHECK_TEXTS USING 'KNA1' KNA1-KUNNR SPACE TXTA-FLAG.
CHECK TXTA-FLAG IN XTXT1.
ENDIF.

GET KNB1.
CHECK   AKONTOS.
*  XBSEG = SPACE.
CLEAR   SSORTTAB.
REFRESH SSORTTAB.
CLEAR   TEXT-FLAG.
*  MOVE-CORRESPONDING KNB1 TO XBSEG.
*  TRANSLATE KNB1-BUSAB TO UPPER CASE.
** CHECK: FI_VERB,
*  CHECK: "SACHBEAR,
*         AKONTOS.
*  MOVE-CORRESPONDING XBSEG TO KNB1.
IF NOT XTXTP IS INITIAL.
PERFORM CHECK_TEXTS USING 'KNB1' KNA1-KUNNR KNB1-BUKRS TXTB-FLAG.
CHECK TXTB-FLAG IN XTXT2.
ENDIF.

SEL-FLAG = '0'.
MOVE SPACE TO: T001S, TEXTFELD, PH-TEXTFELD.

IF S_SORTKZ = '8'.                   "Sortierung nach Kontonummer
SSORTFELD = SPACE.
ENDIF.

IF S_SORTKZ = '2'.                   "Sortierung nach Land
SSORTFELD = KNA1-LAND1.
MOVE SY-LANGU TO T005T-SPRAS.
MOVE KNA1-LAND1 TO T005T-LAND1.
READ TABLE T005T.
IF SY-SUBRC IS INITIAL.
MOVE T005T-LANDX TO TEXTFELD.    "Laendername
MOVE T005T-LANDX TO PH-TEXTFELD.
ENDIF.
ENDIF.

IF S_SORTKZ = '3'.                "Sortierung nach Konzernschluessel
SSORTFELD = KNA1-KONZS.
ENDIF.

IF S_SORTKZ = '4'.                   "Sortierung nach Firmenverbund
SSORTFELD = KNA1-VBUND.
ENDIF.

IF S_SORTKZ = '5'.                "Sortierung nach Brachenschluessel
SSORTFELD = KNA1-BRSCH.
ENDIF.

IF S_SORTKZ = '6'.                   "Sortierung nach Buchhaltungs-
SSORTFELD = KNB1-BUSAB.            "Sachbearbeiter
MOVE KNB1-BUKRS TO T001S-BUKRS.
MOVE KNB1-BUSAB TO T001S-BUSAB.
READ TABLE T001S.
IF SY-SUBRC IS INITIAL.
MOVE TEXT-007 TO TEXTFELD.       "Sachbearbeiter
MOVE TEXT-007 TO PH-TEXTFELD.
ENDIF.
ENDIF.
IF S_SORTKZ = '7'.              "Sortierung nach Kontokurzbezeichnung
SSORTFELD = KNA1-SORTL.
ENDIF.

IF S_SORTKZ = '1'.                   "Sortierung nach Abstimmkonto
"kann erst bei get bsid gefuellt werden (bp-hkont bzw bp-saknr)
ENDIF.

IF S_SORTKZ = '9'.                   "Sortierung nach Zessionskz
"kann erst bei get bsid gefuellt werden
ENDIF.

GET BSID.
*  CHECK: GESBER,
*         BELEGART,
*         BLGDATUM,
*         BU_DATUM,
*         BUSCHL,
*         WAEHRUNG,
*         MAHNSTUF,
*         ZAHLWEG.
CHECK: CESSKZ.

IF AUSWAHL EQ '3'.                   "Offene Posten
CHECK BSID-BUDAT <= DD_STIDA.
CHECK BSID-AUGDT = '00000000' OR BSID-AUGDT > DD_STIDA.
ENDIF.
IF AUSWAHL EQ '2'.                   "Abgeschlossene Posten
IF BSID-AUGDT EQ '00000000'.
REJECT.
ENDIF.
ENDIF.

CLEAR BSEGA-GKART.
CLEAR BSEGA-GKONT.
CASE BSID-BSTAT.
WHEN ' '.
CHECK N_BELEGE EQ 'X'.           "Normale Belege selektieren

IF NOT GKONTO IS INITIAL.
CALL FUNCTION 'GET_GKONT'
EXPORTING
BELNR           = BSID-BELNR
BUKRS           = BSID-BUKRS
BUZEI           = BSID-BUZEI
GJAHR           = BSID-GJAHR
GKNKZ           = GKONTO
IMPORTING
GKONT           = BSEGA-GKONT
KOART           = BSEGA-GKART
EXCEPTIONS
BELNR_NOT_FOUND = 01
BUZEI_NOT_FOUND = 02
GKNKZ_NOT_FOUND = 03.

CHECK BSEGA-GKART IN GKART.
CHECK BSEGA-GKONT IN GKONT.
ENDIF.
WHEN 'S'.
CHECK STAT_BLG EQ 'X'.           "Stat.   Belege selektieren
WHEN 'V'.
CHECK VBEL     EQ 'X'.           "vorerf. Belege selektieren
WHEN OTHERS.
CLEAR FIMSG.                     "In Message werden die
FIMSG-MSORT = '    '.            "zul‰ssigen Belegstati
FIMSG-MSGID = 'FR'.              "aufgez‰hlt
FIMSG-MSGTY = 'I'.
FIMSG-MSGNO = '398'.
FIMSG-MSGV1 = BSID-BUKRS.
FIMSG-MSGV2 = BSID-BELNR.
FIMSG-MSGV3 = BSID-GJAHR.
FIMSG-MSGV4 = BSID-BUZEI.

CALL FUNCTION 'FI_MESSAGE_COLLECT'
EXPORTING
I_FIMSG       = FIMSG
I_XAPPN       = ' '
EXCEPTIONS
MSGID_MISSING = 01
MSGNO_MISSING = 02
MSGTY_MISSING = 03.
*        EXIT.
REJECT.
ENDCASE.

IF BSID-BSTAT EQ 'S'.                "Statistischen Belege
WADMSHB = 0.                       "0 und bsega-dmshb
ELSE.                                "vertauscht damit stat.
WADMSHB = BSEGA-DMSHB.             "Belege nicht summiert
ENDIF.                               "werden

IF BSID-BSTAT = 'S'.                 "Feld fÅE Summierung
WSDMSHB = BSEGA-DMSHB.             "Statistische  Belege
*    SDMSOL = BSEGA-DMSOL.
*    SDMHAB = BSEGA-DMHAB.
ELSE.
WSDMSHB = 0.
ENDIF.

ABSTKONT = BSID-HKONT.
CHECK ABSTKONT IN AKONTO.            "akonto for abstkont

IF S_SORTKZ = '1'.                   "Sortierung nach Abstimmkonto
*     Sonderhauptbuchvorg‰nge erscheinen unter dem Sonderhauptbuch-
*     Mitbuchkonto
*     ABSTKONT = BSID-HKONT.
ELSE.
*     Sonderhauptbuchvorg‰nge erscheinen unter dem Mitbuchkonto gem‰ﬂ
*     Kreditor-B-Segment-Angabe zum Zeitpunkt der Buchung
IF BSID-UMSKZ = SPACE.
*        ABSTKONT = BSID-HKONT.                     "Normale Ums‰tze
ELSE.
ABSTKONT = BSID-SAKNR.           "Sonderumsatze
ENDIF.
ENDIF.

IF NOT XTXTP IS INITIAL.
PERFORM CHECK_TEXTE USING BSID-BUKRS BSID-BELNR BSID-GJAHR
TEXT-FLAG.
CHECK TEXT-FLAG IN XTEXT.
ENDIF.

IF XALTKT IS INITIAL.
* Sachkonto bzw. Mitbuchkonto in spezifischer L‰nge besorgen
PERFORM GET_SAKAN.
HSAKAN = SKA1-SAKAN.
ELSE.
* Sachkonto bzw. Mitbuchkonto mit alternativer Kontonummer fuellen
CLEAR ALTKT_NOT_FOUND.
*      CLEAR TEXT_NOT_FOUND.
SAVE_AKONT = ABSTKONT.
CALL FUNCTION 'READ_SACHKONTO_ALTKT'
EXPORTING
BUKRS           = BSID-BUKRS
SAKNR           = ABSTKONT
SPRAS           = SY-LANGU
XMASS           = 'X'
XSKAN           = 'X'
XTEXT           = ' '
IMPORTING
ALTKT           = ABSTKONT
ALTKT_SAKAN     = HSAKAN
ALTKT_NOT_FOUND = ALTKT_NOT_FOUND
*                TEXT_NOT_FOUND  = TEXT_NOT_FOUND
*                LTEXT           =
*                KTEXT           =
EXCEPTIONS
BUKRS_NOT_FOUND = 02
SAKNR_NOT_FOUND = 03.
IF NOT ALTKT_NOT_FOUND IS INITIAL.

*    Schreiben Protokollsatz
CLEAR FIMSG.
FIMSG-MSORT = '0006'.
FIMSG-MSGID = 'FR'.
FIMSG-MSGTY = 'I'.
FIMSG-MSGNO = '319'.
FIMSG-MSGV1 = SAVE_AKONT.
FIMSG-MSGV2 = BSID-BUKRS.

CALL FUNCTION 'FI_MESSAGE_COLLECT'
EXPORTING
I_FIMSG       = FIMSG
I_XAPPN       = ' '
EXCEPTIONS
MSGID_MISSING = 01
MSGNO_MISSING = 02
MSGTY_MISSING = 03.

ENDIF.
IF SY-SUBRC = 2.

*    Schreiben Protokollsatz
CLEAR FIMSG.
FIMSG-MSORT = '0001'.
FIMSG-MSGID = 'FR'.
FIMSG-MSGTY = 'I'.
FIMSG-MSGNO = '321'.
FIMSG-MSGV1 = BSID-BUKRS.

CALL FUNCTION 'FI_MESSAGE_COLLECT'
EXPORTING
I_FIMSG       = FIMSG
I_XAPPN       = ' '
EXCEPTIONS
MSGID_MISSING = 01
MSGNO_MISSING = 02
MSGTY_MISSING = 03.

ENDIF.
IF SY-SUBRC = 3.

*    Schreiben Protokollsatz
CLEAR FIMSG.
FIMSG-MSORT = '0005'.
FIMSG-MSGID = 'FR'.
FIMSG-MSGTY = 'I'.
FIMSG-MSGNO = '322'.
FIMSG-MSGV1 = SAVE_AKONT.
FIMSG-MSGV2 = BSID-BUKRS.

CALL FUNCTION 'FI_MESSAGE_COLLECT'
EXPORTING
I_FIMSG       = FIMSG
I_XAPPN       = ' '
EXCEPTIONS
MSGID_MISSING = 01
MSGNO_MISSING = 02
MSGTY_MISSING = 03.

ENDIF.
ENDIF.

IF S_SORTKZ = '1'.                   "Sortierung nach Abstimmkonto
*     SSORTFELD = ABSTKONT.
SSORTFELD = HSAKAN.
*  Fuer extract Adresse bei get kb late
*  SSORTTAB-AKONTO = ABSTKONT.
SSORTTAB-AKONTO = HSAKAN.
COLLECT SSORTTAB.
ENDIF.

IF S_SORTKZ = '9'.                   "Sortierung nach Zessionskz
SSORTFELD = BSID-CESSION_KZ.
*  Fuer extract Adresse bei get kb late
SSORTTAB-AKONTO = BSID-CESSION_KZ.
COLLECT SSORTTAB.
ENDIF.

IF P_SORTKZ = '2'.                   "Sortierung nach Zuordnungsnummer
PSORTFELD = BSID-ZUONR.
ENDIF.

IF P_SORTKZ = '1'.               "Sortierung nach Umsatzkennzeichen
IF BSID-UMSKZ = SPACE.
PSORTFELD = '*'.
ELSE.
PSORTFELD = BSID-UMSKZ.
ENDIF.
ENDIF.

IF P_SORTKZ = '3'.                   "Sortierung nach Buchungsperiode
PSORTFELD-BPJJ = BSID-GJAHR.       "             Buchungsdatum
PSORTFELD-BPMM = BSID-MONAT.
PSORTFELD-DAT  = BSID-BUDAT.
ENDIF.

IF P_SORTKZ = '4'.                "Sortierung nach Faelligkeitsdatum
PSORTFELD-DAT  = BSEGA-NETDT.
ENDIF.

IF P_SORTKZ = '5'.                   "Sortierung nach Belegdatum
PSORTFELD-DAT  = BSID-BLDAT.
ENDIF.

IF P_SORTKZ = '6'.                "Sortierung nach Geschaeftsbereich
PSORTFELD = BSID-GSBER.
ENDIF.

IF P_SORTKZ = '7'.                   "Sortierung nach Mahnstufe
PSORTFELD = BSID-MANST.
ENDIF.

IF p_sortkz = '8'.
IF bsid-rebzg IS INITIAL.
bsid-rebzg = bsid-belnr.
ENDIF.
psortfeld = bsid-rebzg.
ENDIF.

* IF BSID-UMSKZ = SPACE.
ADMSHB = BSEGA-DMSHB.
ADMSOL = BSEGA-DMSOL.
ADMHAB = BSEGA-DMHAB.
* ELSE.
*   ADMSHB = ADMSOL = ADMHAB = 0.
* ENDIF.
SEL-FLAG = '1'.
SATZART = '2'.
EXTRACT DATEN.

GET KNB1 LATE.
IF SEL-FLAG = '1'.
SATZART = '1'.
*  bei der Sortierung 1 und 9
*  die Adresse u.U: mehrfach extrahiert werden.
IF S_SORTKZ = '1'
OR S_SORTKZ = '9'.
LOOP AT SSORTTAB.
SSORTFELD = SSORTTAB-AKONTO.
EXTRACT ADRESSE.
ENDLOOP.
ELSE.
*  pro Bukr gibt es nur eine Adresse
EXTRACT ADRESSE.
ENDIF.
ENDIF.

END-OF-SELECTION.
IF KONZVERS = SPACE.
SORT BY KNB1-BUKRS
SSORTFELD
KNA1-KUNNR
SATZART           "1 = Adressenextrakt,  2 = Datenextrakt
PSORTFELD
BSID-ZUONR
BSID-BUDAT
BSID-WAERS
BSID-UMSKZ
BSID-GSBER
TXTA-FLAG
TXTB-FLAG.
ELSE.                                "Konzernzversion
SORT BY KNA1-KUNNR
KNB1-BUKRS
SSORTFELD
SATZART           "1 = Adressenextrakt,  2 = Datenextrakt
PSORTFELD
BSID-ZUONR
BSID-BUDAT
BSID-WAERS
BSID-UMSKZ
BSID-GSBER
TXTA-FLAG
TXTB-FLAG.
ENDIF.

***********************************************************************
*  Verarbeitung des extrahierten Datenbestandes                       *
***********************************************************************
LOOP.

AT FIRST.
KONTOZAEHLER = 0.
*  Sortierreihenfolge wird nur auf der sersten Seite ausgegeben
PERFORM SORTFOLGEFUELLEN.

IF KONZVERS = 'X'.
SORTF-FLAG = '1'.
MOVE '00' TO BHDGD-WERTE.
PERFORM NEW-SECTION(RSBTCHH0).
ELSE.
*      Sortierreihenfolge wird bei jedm neuen BK ausgegeben
*      Listseparation wird bei jedem neuen BK durchgefuehrt
ENDIF.
ENDAT.


CASE KONZVERS.          "Reihenfolge der AT NEW Bloecke beruecksichtigen
WHEN SPACE.                      "Normalversion

AT NEW KNB1-BUKRS.
TOPAUSGABE   = SPACE.
*   bewirkt Ausgabe der Sortierreihenfolge
SORTF-FLAG = '1'.
SSORTZAEHLER = 0.
REFRESH UBUKRTAB.
REFRESH GBUKRTAB.
REFRESH WBUKRTAB.
REFRESH UBUKRTAB2.
REFRESH GBUKRTAB2.
REFRESH WBUKRTAB2.

MOVE KNB1-BUKRS TO BHDGD-BUKRS.
SELECT SINGLE * FROM T001
WHERE BUKRS = KNB1-BUKRS.
MOVE BHDGD-BUKRS TO BHDGD-WERTE.
PERFORM NEW-SECTION(RSBTCHH0).         "Listseparation
ENDAT.

AT NEW SSORTFELD.
TOPAUSGABE   = SPACE.
REFRESH USORTTAB.
REFRESH GSORTTAB.
REFRESH WSORTTAB.
REFRESH USORTTAB2.
REFRESH GSORTTAB2.
REFRESH WSORTTAB2.
KONTOZAEHLER = 0.
SSORTZAEHLER = SSORTZAEHLER + 1.

IF S_SORTKZ = '6'. "Sortierung nach Buchhaltungssachbearb
PERFORM NEW-SECTION(RSBTCHH0).
ELSE.
NEW-PAGE.
ENDIF.
ENDAT.


AT NEW KNA1-KUNNR.
TOPAUSGABE   = SPACE.
KNA1-FLAG      = '0'.
REFRESH GKONTTAB.
REFRESH UKONTTAB.
REFRESH WKONTTAB.
REFRESH GKONTTAB3.
REFRESH UKONTTAB3.
REFRESH WKONTTAB3.
KONTOZAEHLER = KONTOZAEHLER + 1.
INTENS = 'X'.
ENDAT.

WHEN OTHERS.                     "Konzernversion

AT NEW KNA1-KUNNR.
NEW-PAGE.
TOPAUSGABE   = SPACE.
KONTOZAEHLER = KONTOZAEHLER + 1.
BUKRZAEHLER  = 0.
KNA1-FLAG      = '0'.
REFRESH AKONTTAB2.
REFRESH GKONTTAB2.
REFRESH UKONTTAB2.
REFRESH WKONTTAB2.
REFRESH AKONTTAB3.
REFRESH GKONTTAB4.
REFRESH UKONTTAB4.
REFRESH WKONTTAB4.
INTENS = 'X'.
ENDAT.


AT NEW KNB1-BUKRS.
TOPAUSGABE   = SPACE.
SSORTZAEHLER = 0.
BUKRZAEHLER  = BUKRZAEHLER + 1.
REFRESH UBUKRTAB.
REFRESH GBUKRTAB.
REFRESH WBUKRTAB.
REFRESH UBUKRTAB2.
REFRESH GBUKRTAB2.
REFRESH WBUKRTAB2.
SELECT SINGLE * FROM T001
WHERE BUKRS = KNB1-BUKRS.
ENDAT.


AT NEW SSORTFELD.
TOPAUSGABE  = SPACE.
REFRESH USORTTAB.
REFRESH GSORTTAB.
REFRESH WSORTTAB.
REFRESH USORTTAB2.
REFRESH GSORTTAB2.
REFRESH WSORTTAB2.
SSORTZAEHLER = SSORTZAEHLER + 1.
ENDAT.
ENDCASE.                           "case konzvers


AT NEW PSORTFELD.
TOPAUSGABE = SPACE.
SU-FLAG    = '1'.
ENDAT.


AT ADRESSE.
*  Ausgabe der Adresse erst bei AT DATEN, da erst zu diesem Zeitpunkt
*  die Mikrofiche-relevanten Daten vorhanden sind
ADRESSEN-FLAG = '0'.
ENDAT.


AT DATEN.

IF ADRESSEN-FLAG = '0'.
ADRESSEN-FLAG = '1'.

IF KONZVERS = SPACE.
PERFORM MIF1-FUELLEN.
ELSE.
PERFORM MIF2-FUELLEN.
ENDIF.

*    verhindert, dass bei der Konzernversion bei jedem neuen BK die
*    ausfuehrliche Kundenadresse ausgegeben wird.
IF KONZVERS = SPACE.
RESERVE 7 LINES.
PERFORM ANSCHRIFT1.
ELSE.
IF HKUNNR <> KNA1-KUNNR.
HKUNNR = KNA1-KUNNR.
RESERVE 7 LINES.
PERFORM ANSCHRIFT2.
HBUKRS = KNB1-BUKRS.
ELSE.
IF HBUKRS <> KNB1-BUKRS.
RESERVE 4 LINES.
PERFORM ANSCHRIFT3.
HBUKRS = KNB1-BUKRS.
ENDIF.
ENDIF.
ENDIF.
ENDIF.                           "if adressen-flag = '0'

* Auf Wunsch werden auch die CPD-Daten ausgegeben. Falls Sortierung
* nach Zuordnungsnummer und Zuordnungschluessel = 22 oder 23, so erfolgt
* die Ausgabe der CPD_Info zu Beginn jeder neuen Zuordnungsnummer,
* ansonsten pro Posten.


IF KONZVERS = SPACE.
PERFORM MIF1-FUELLEN.
ELSE.
PERFORM MIF2-FUELLEN.
ENDIF.


IF VD_STUFE = '0'.       "Einzelpostenzeilen werden immer ausgegeben

IF BSID-XCPDD = 'X'.           "CPD-Konto
IF CPD_INFO = 'X'.           "CPD-Daten gewuenscht

IF P_SORTKZ = '2'.         "Sortierung nach Zuordnungsnummer
MOVE KNB1-ZUAWA TO PFELD."Zuordnungsschluessel (Sort-KZ)
IF PFELD = 22 OR PFELD = 23.

IF WAZUONR <> BSID-ZUONR. "neue Zuordnungsnr->CPD_Info ausgebe
WAZUONR = BSID-ZUONR.
PERFORM CPDCOND.
ENDIF.
ELSE.                    "falsches Sort-KZ
PERFORM CPDCOND.
ENDIF.
ELSE.                     "Sortierung nicht nach Zuordnungsnr ->
"CPD_Info bei jeder BSID-Zeile ausgeben
PERFORM CPDCOND.
ENDIF.                     "if p-sortkz = '2'
ENDIF.                       "if cpd-info = 'X'
ENDIF.                         "if BSID-XCPDD = 'X'

*- writeÇÃÇ†ÇÈÉTÉuÉãÅ[É`Éì
PERFORM EP-AUSGABE.

ELSE.                            "VD_Stufe = 1

IF BSID-XCPDD = 'X'.           "CPD-Konto
IF CPD_INFO = 'X'.           "CPD-Daten gewuenscht
EP-FLAG = '1'.
IF ZW_SUMME <> SPACE.
IF P_SORTKZ = '2'.

MOVE KNB1-ZUAWA TO PFELD."Zuordnungsschluessel (Sort-KZ)
IF PFELD = 22 OR PFELD = 23. "Sort-KZ
"auch bei Verdichtung sind die CPD-Daten noch ersichtlich
EP-FLAG = '0'.   "-> Einzelpostenausgabe nicht notwendig
ENDIF.

ENDIF.
ENDIF.

IF EP-FLAG = '1'.                "Einzelpostenausgabe erforderlich

IF P_SORTKZ = '2'.             "Sortierung nach Zuordnungsnummer
MOVE KNB1-ZUAWA TO PFELD."Zuordnungsschluessel (Sort-KZ)
IF PFELD = 22 OR PFELD = 23.

IF WAZUONR <> BSID-ZUONR.    "neue Zuordnungsnr ->
"CPD_Info ausgeben
WAZUONR = BSID-ZUONR.
PERFORM CPDCOND.
ENDIF.
ELSE.                  "falsches Sort-KZ
PERFORM CPDCOND.
ENDIF.
ELSE.                     "Sortierung nicht nach Zuordnungsnr
"bzw. falsches Sort-KZ ->
"CPD_Info bei jeder BSID-Zeile ausgebe
PERFORM CPDCOND.
ENDIF.                   "if p-sortkz = '2'
*-            writeÇÃÇ†ÇÈÉTÉuÉãÅ[É`Éì
PERFORM EP-AUSGABE.
ENDIF.                     "if ep-flag = '1'
ENDIF.                       "if cpd-info = 'X'
ENDIF.                         "if BSID-XCPDD = 'X'
ENDIF.                           "if vd-stufe = '0'


IF BSID-BSTAT EQ 'S'.
MOVE: T001-WAERS TO ATOTALTAB2-HAUSW,
BSEGA-DMSHB   TO ATOTALTAB2-DMSHB.
COLLECT ATOTALTAB2.
ELSE.
MOVE: T001-WAERS TO ATOTALTAB-HAUSW,
ADMSOL     TO ATOTALTAB-ADMSOL,
ADMHAB     TO ATOTALTAB-ADMHAB,
ADMSHB     TO ATOTALTAB-ADMSHB,
BSEGA-DMSHB   TO ATOTALTAB-DMSHB.
COLLECT ATOTALTAB.
ENDIF.

IF BSID-BSTAT EQ 'S'.
CASE KONZVERS.
WHEN SPACE.                  "Normalversion

MOVE BSEGA-DMSHB TO UKONTTAB3-DMSHB.
IF BSID-UMSKZ = SPACE.
MESSAGE E374 WITH BSID-BUKRS BSID-BELNR BSID-GJAHR BSID-BUZEI.
ELSE.
UKONTTAB3-UMSKZ = BSID-UMSKZ.      " Merkposten
ENDIF.
COLLECT UKONTTAB3.

IF WGAUSGAB = 'X'.
MOVE: BSID-WAERS TO WKONTTAB3-WAERS,
BSEGA-DMSHB TO WKONTTAB3-DMSHB,
BSEGA-WRSHB TO WKONTTAB3-WRSHB.
COLLECT WKONTTAB3.
ENDIF.

IF GBAUSGAB = 'X'.
MOVE: BSEGA-DMSHB TO GKONTTAB3-DMSHB,
BSID-GSBER TO GKONTTAB3-GSBER.
COLLECT GKONTTAB3.
ENDIF.

WHEN OTHERS.                 "Konzernversion

MOVE: T001-WAERS TO AKONTTAB3-HAUSW,
BSEGA-DMSHB   TO AKONTTAB3-DMSHB.
COLLECT AKONTTAB3.

MOVE BSEGA-DMSHB TO USORTTAB2-DMSHB.
IF BSID-UMSKZ = SPACE.
MESSAGE E374 WITH BSID-BUKRS BSID-BELNR BSID-GJAHR BSID-BUZEI.
ELSE.
USORTTAB2-UMSKZ = BSID-UMSKZ.      "Merkposten
ENDIF.
COLLECT USORTTAB2.

IF WGAUSGAB = 'X'.
MOVE: BSID-WAERS TO WSORTTAB2-WAERS,
BSEGA-DMSHB TO WSORTTAB2-DMSHB,
BSEGA-WRSHB TO WSORTTAB2-WRSHB.
COLLECT WSORTTAB2.
ENDIF.

IF GBAUSGAB = 'X'.
MOVE: BSEGA-DMSHB TO GSORTTAB2-DMSHB,
BSID-GSBER TO GSORTTAB2-GSBER.
COLLECT GSORTTAB2.
ENDIF.
ENDCASE.                       "case konzvers
ELSE.
CASE KONZVERS.
WHEN SPACE.                  "Normalversion

MOVE BSEGA-DMSHB TO UKONTTAB-DMSHB.
IF BSID-UMSKZ = SPACE.
UKONTTAB-UMSKZ = '*'.
ELSE.
UKONTTAB-UMSKZ = BSID-UMSKZ.      "Sonderumsatzarten
ENDIF.
COLLECT UKONTTAB.

IF WGAUSGAB = 'X'.
MOVE: BSID-WAERS TO WKONTTAB-WAERS,
BSEGA-DMSHB TO WKONTTAB-DMSHB,
BSEGA-WRSHB TO WKONTTAB-WRSHB.
COLLECT WKONTTAB.
ENDIF.

IF GBAUSGAB = 'X'.
MOVE: BSEGA-DMSHB TO GKONTTAB-DMSHB,
BSID-GSBER TO GKONTTAB-GSBER.
COLLECT GKONTTAB.
ENDIF.

WHEN OTHERS.                 "Konzernversion

MOVE: T001-WAERS TO AKONTTAB2-HAUSW,
ADMSOL     TO AKONTTAB2-ADMSOL,
ADMHAB     TO AKONTTAB2-ADMHAB,
ADMSHB     TO AKONTTAB2-ADMSHB,
BSEGA-DMSHB   TO AKONTTAB2-DMSHB.
COLLECT AKONTTAB2.

MOVE BSEGA-DMSHB TO USORTTAB-DMSHB.
IF BSID-UMSKZ = SPACE.
USORTTAB-UMSKZ = '*'.
ELSE.
USORTTAB-UMSKZ = BSID-UMSKZ.      "Sonderumsatzarten
ENDIF.
COLLECT USORTTAB.

IF WGAUSGAB = 'X'.
MOVE: BSID-WAERS TO WSORTTAB-WAERS,
BSEGA-DMSHB TO WSORTTAB-DMSHB,
BSEGA-WRSHB TO WSORTTAB-WRSHB.
COLLECT WSORTTAB.
ENDIF.

IF GBAUSGAB = 'X'.
MOVE: BSEGA-DMSHB TO GSORTTAB-DMSHB,
BSID-GSBER TO GSORTTAB-GSBER.
COLLECT GSORTTAB.
ENDIF.
ENDCASE.                       "case konzvers
ENDIF.                           "case Bsid-bstat eq 'S'.
ENDAT.                             "at daten


AT END OF PSORTFELD.
*nur nach dem Datenextrakt, nicht aber nach dem Adressenextrakt durch-
*laufen
IF SATZART = '2'  AND  ZW_SUMME = 'X'.

IF KONZVERS = SPACE.
PERFORM MIF1-LOESCHEN.
ELSE.
PERFORM MIF2-LOESCHEN.
ENDIF.

IF BSID-XCPDD = 'X'.           "CPD-Konto
IF CPD_INFO = 'X'.           "CPD-Daten gewuenscht

*     Falls die CPD-Daten nicht bereits bei den Einzelpostenausgaben
*     gedruckt wurden, erfolgt nun deren Ausgabe.

IF EP-FLAG = '0' AND VD_STUFE = '1'.
PERFORM CPDCOND.
ENDIF.
ENDIF.
ENDIF.                         "if BSID-XCPDD = 'X'

RESERVE 3 LINES.
IF VD_STUFE = '0'.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDIF.
FORMAT COLOR COL_TOTAL INTENSIFIED OFF.
*        WRITE: /01 SY-VLINE.
IF KONZVERS = SPACE.           "Normalversion
*          WRITE:
*             02(04) KNB1-BUKRS,
*             07(10) SSORTFELD,
*             18(10) KNA1-KUNNR.
ELSE.                          "Konzernversion
*          WRITE:
*             02(10) KNA1-KUNNR,
*             13(04) KNB1-BUKRS,
*             18(10) SSORTFELD.
ENDIF.

IF P_SORTKZ = '2'.
*          WRITE: 29 PSORTFELD, '*'.
ENDIF.

IF P_SORTKZ = '1'.
IF PSORTFELD = '*'.          "Umsatzkennzeichen SPACE
*            WRITE: 29(1) ' ', '*'.
ELSE.
*            WRITE: 29 PSORTFELD(1), '*'.
ENDIF.
ENDIF.

IF P_SORTKZ = '3'.
WABUPER(4)   = PSORTFELD-BPJJ.
WABUPER+4(2) = PSORTFELD-BPMM.
WADATUM      = PSORTFELD-DAT.
*         WRITE: 29(6)   WADATUM DDMMYY , '*'.
ENDIF.

IF P_SORTKZ = '4'.
WADATUM      = PSORTFELD-DAT.
*          WRITE: 29      WADATUM DDMMYY , '*'.

ENDIF.

IF P_SORTKZ = '5'.
WADATUM      = PSORTFELD-DAT.
*          WRITE: 29(6)   WADATUM DDMMYY , '*'.
ENDIF.

IF P_SORTKZ = '6'.
*          WRITE: 29 PSORTFELD(4), '*'.
ENDIF.

IF P_SORTKZ = '7'.
*          WRITE: 29 PSORTFELD(1), '*'.
ENDIF.

IF p_sortkz = '8'.
*          WRITE: 29 psortfeld(10), '*'.
ENDIF.


*  Nur auf dieser Gruppenstufe wird sum(bsega-dmshb) ausgegeben. Bei
*  allen hoehren Gruppenstufen sum(WADMSHB), damit statistische
*  Belege  nicht mit aufsummiert sind.

*        WRITE: 108(05)  T001-WAERS,
*               114(16) SUM(BSEGA-DMSHB) CURRENCY T001-WAERS, '*'.
*        WRITE: 132 SY-VLINE.
**  SKIP 1.
*        WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*        SKIP-FLAG = '1'.

TOPAUSGABE = SPACE.
ENDIF.   "if satzart = '2' and zw-summe = 'X'
ENDAT.                             "at end of psortfeld


CASE KONZVERS.          "Reihenfolge der AT END Bloecke beruecksichtigen
WHEN SPACE.                      "Normalversion

AT END OF KNA1-KUNNR.
MIF1-PSORTFELD = SPACE.
PERFORM MIF1-LOESCHEN.
RESERVE 3 LINES.
FORMAT COLOR COL_TOTAL INTENSIFIED OFF.
IF  VD_STUFE = '0'
AND ZW_SUMME IS INITIAL.
*            WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDIF.
*          WRITE: /01 SY-VLINE.
*          WRITE:
*             02(04) KNB1-BUKRS,
*             07(10) SSORTFELD,
*             18(10) KNA1-KUNNR,
*             29(02) '**'.
TOPAUSGABE = 'N1'.
PERFORM GRUPPENENDAUSGABE.
PERFORM KONTTAB.
PERFORM GRUPPENENDAUSGABE2.
PERFORM KONTTAB3.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*     ULINE.
*     SKIP 1.
TOPAUSGABE = SPACE.
ENDAT.


AT END OF SSORTFELD.
MIF1-PSORTFELD = SPACE.
MIF1-KUNNR     = SPACE.
PERFORM MIF1-LOESCHEN.

IF S_SORTKZ = '8'.           "SORTIERUNG NACH KONTONR.
PERFORM HSORTTAB.
PERFORM HSORTTAB2.
ELSE.

IF KONTOZAEHLER > 1.
NEW-PAGE.
NOAN-FLAG = '1'.
IF ZW_SUMME IS INITIAL.
*                WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDIF.
FORMAT COLOR COL_TOTAL INTENSIFIED OFF.
*              WRITE: /01 SY-VLINE.
*              WRITE:
*                  02(04) KNB1-BUKRS,
*                  07(10) SSORTFELD,
*                  18(03) '***'.
TOPAUSGABE = 'N2'.
PERFORM GRUPPENENDAUSGABE.
PERFORM SORTTAB.
PERFORM GRUPPENENDAUSGABE2.
PERFORM SORTTAB2.

*              WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*          SKIP 1.
TOPAUSGABE = SPACE.
NOAN-FLAG  = '0'.
ELSE.                      "nur ein Konto ausgewertet ->
"3-Stern-Summe unterdruecken
PERFORM HSORTTAB.
PERFORM HSORTTAB2.
ENDIF.                     "if kontozaehler > 1
ENDIF.                       "if s-sortkz = '8'
ENDAT.


AT END OF KNB1-BUKRS.
MIF1-PSORTFELD = SPACE.
MIF1-KUNNR     = SPACE.
MIF1-SSORTFELD = SPACE.
PERFORM MIF1-LOESCHEN.

FORMAT COLOR COL_TOTAL INTENSIFIED.
IF SSORTZAEHLER > 1.
NEW-PAGE.
NOAN-FLAG = '1'.
*            WRITE: /01 SY-VLINE.
*            WRITE:
*                02(04) KNB1-BUKRS,
*                07(04) '****'.
TOPAUSGABE = 'N3'.
PERFORM GRUPPENENDAUSGABE.
PERFORM BUKRTAB.
PERFORM GRUPPENENDAUSGABE2.
PERFORM BUKRTAB3.
*            WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
TOPAUSGABE = SPACE.
NOAN-FLAG  = '0'.

ELSE.                        "nur ein Ssortfeld ausgewertet ->
"4-Stern-Summe unterdruecken
PERFORM HBUKRTAB.
PERFORM HBUKRTAB3.
ENDIF.                       "if ssortzaehler > 1
ENDAT.


AT LAST.
BHDGD-BUKRS = '    '.
MIF1-PSORTFELD = SPACE.
MIF1-KUNNR     = SPACE.
MIF1-SSORTFELD = SPACE.
MIF1-BUKRS     = '0000'.
TOPAUSGABE     = SPACE.
PERFORM MIF1-LOESCHEN.

FORMAT COLOR COL_TOTAL INTENSIFIED.
NOAN-FLAG   = '1'.
MOVE BHDGD-BUKRS TO BHDGD-WERTE.
PERFORM NEW-SECTION(RSBTCHH0).
PERFORM ATLASTAUSGABE.
PERFORM ATLASTAUSGABE2.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
SKIP 1.
RESERVE 3 LINES.
MOVE TEXT-012 TO PH-LINE.    "Ende des Detail-Berichts

FORMAT COLOR COL_BACKGROUND INTENSIFIED OFF.
PERFORM JUST_ROUTINE(RSBTCHH0) USING PH-LINE 130.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*          WRITE: /01 SY-VLINE, 02 PH-LINE, 132 SY-VLINE.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDAT.

WHEN OTHERS.                     "Konzernversion

AT END OF SSORTFELD.
MIF2-PSORTFELD = SPACE.
PERFORM MIF2-LOESCHEN.

FORMAT COLOR COL_TOTAL INTENSIFIED OFF.
IF S_SORTKZ <> '8'.         "Ausgabe erst bei at end of KNB1-bukrs
RESERVE 3 LINES.
IF  VD_STUFE = '0'
AND ZW_SUMME IS INITIAL.
*              WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDIF.
*            WRITE: /01 SY-VLINE.
*            WRITE:
*                02(10) KNA1-KUNNR,
*                13(04) KNB1-BUKRS,
*                18(10) SSORTFELD,
*                29(02) '**'.
TOPAUSGABE = 'K1'.
PERFORM GRUPPENENDAUSGABE.
PERFORM SORTTAB.
PERFORM GRUPPENENDAUSGABE2.
PERFORM SORTTAB2.
*            WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*       ULINE.
*       SKIP 1.
TOPAUSGABE = SPACE.
ELSE.
PERFORM HSORTTAB.
PERFORM HSORTTAB2.
ENDIF.                       "if s-sortkz <> '8'.
ENDAT.


AT END OF KNB1-BUKRS.
MIF2-PSORTFELD = SPACE.
MIF2-SSORTFELD = SPACE.
PERFORM MIF2-LOESCHEN.

FORMAT COLOR COL_TOTAL INTENSIFIED OFF.
IF SSORTZAEHLER > 1.
RESERVE 3 LINES.

*       htopausgabe muss vor dem write gefÅElt werden, damit der write
*       doppelt ausgegeben wird, einmal bei top-of-page zusammen mit der
*       komprimierten Adresse und zum zwitenmal fÅE die Gruppenendaus-
*       gabe.

HTOPAUSGABE = 'K2'.
*            WRITE: /01 SY-VLINE.
*            WRITE:
*                02(10) KNA1-KUNNR,
*                13(04) KNB1-BUKRS,
*                18(03) '***'.
TOPAUSGABE  = 'K2'.
PERFORM GRUPPENENDAUSGABE.
PERFORM BUKRTAB2.
PERFORM GRUPPENENDAUSGABE2.
PERFORM BUKRTAB4.
*           WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*       SKIP 1.
TOPAUSGABE  = SPACE.
HTOPAUSGABE = SPACE.
ELSE.                            "nur ein Ssortfeld ausgewertet ->
"3-Stern-Summe unterdruecken
PERFORM HBUKRTAB2.
PERFORM HBUKRTAB4.
ENDIF.                       "if ssortzaehler > 1.
ENDAT.


AT END OF KNA1-KUNNR.
HBUKRS = SPACE.
MIF2-PSORTFELD = SPACE.
MIF2-SSORTFELD = SPACE.
MIF2-BUKRS     = '0000'.
PERFORM MIF2-LOESCHEN.

*     Sonderfall bei Soprtierung 8: ggf. wurde die Summenausgabe bisher
*     immer unterdrÅEkt.
HILFS-FLAG = '0'.
IF S_SORTKZ    = '8' AND
SSORTZAEHLER = 1 AND
BUKRZAEHLER  = 1.
*     bewirkt Summenausgabe.
HILFS-FLAG = '1'.
ENDIF.

FORMAT COLOR COL_TOTAL INTENSIFIED.
IF BUKRZAEHLER > 1 OR HILFS-FLAG = '1'.
NEW-PAGE.
*        RESERVE 5 LINES.
*        WRITE:
*          /01(10) KNA1-kunnr,
*           12(04) '****',
*           28     ADR1.

HTOPAUSGABE = 'K3'.
TOPAUSGABE  = 'K3'.
SORT AKONTTAB2.
LOOP AT AKONTTAB2.
RESERVE 5 LINES.
*              WRITE: /01   SY-VLINE,
*                      02   TEXT-009,   "Hauswaehrung:
*                           AKONTTAB2-HAUSW,
*                85(16) AKONTTAB2-ADMSOL CURRENCY AKONTTAB2-HAUSW, S
*
*                   132   SY-VLINE,
*                   /01   SY-VLINE,
*                85(16) AKONTTAB2-ADMHAB CURRENCY AKONTTAB2-HAUSW, H
*
*                   132   SY-VLINE.

*           IF AKONTTAB2-ADMSHB = AKONTTAB2-DMSHB.  "k.Sonderumsatzarten
*                WRITE:
*                 /01   SY-VLINE,
*                  63     TEXT-002,     "Gesamtobligo
*                  85(16) AKONTTAB2-ADMSHB CURRENCY AKONTTAB2-HAUSW, UN,
*                  132   SY-VLINE.
*             ELSE.
*                WRITE:
**                      nur Umsatzart SPACE
*                 /01   SY-VLINE,
*                  85(16) AKONTTAB2-ADMSHB CURRENCY AKONTTAB2-HAUSW, UN,
*                  132   SY-VLINE,
*                 /01   SY-VLINE,
*                  63     TEXT-002,     "Gesamtobligo
**                      einschliesslich Sonderumsatzarten
*                  85(16) AKONTTAB2-DMSHB  CURRENCY AKONTTAB2-HAUSW,
*                  132   SY-VLINE.
*             ENDIF.

PERFORM KONTTAB2.
*          SKIP 2.
ENDLOOP.                   "Akonttab2

CLEAR AKOLINES.
DESCRIBE TABLE AKONTTAB3 LINES AKOLINES.
IF NOT AKOLINES IS INITIAL.
*              WRITE: /01 SY-VLINE,
*                      02(13) TEXT-060, "Merkposten
*                     132 SY-VLINE.
ENDIF.

SORT AKONTTAB3.
LOOP AT AKONTTAB3.
RESERVE 5 LINES.
*              WRITE: /01   SY-VLINE,
*                      02   TEXT-009,   "Hauswaehrung:
*                           AKONTTAB3-HAUSW,
*                   85(16) AKONTTAB3-DMSHB  CURRENCY AKONTTAB3-HAUSW,
*                     132   SY-VLINE.

PERFORM KONTTAB4.
*          SKIP 2.
ENDLOOP.                   "Akonttab3
*            WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.

TOPAUSGABE  = SPACE.
HTOPAUSGABE = SPACE.
ELSE.
LOOP AT AKONTTAB2.
PERFORM HKONTTAB2.
ENDLOOP.
LOOP AT AKONTTAB3.
PERFORM HKONTTAB3.
ENDLOOP.
ENDIF.                       "if bukrzaehler > 1.
ENDAT.


AT LAST.
MIF2-PSORTFELD = SPACE.
MIF2-SSORTFELD = SPACE.
MIF2-BUKRS     = '0000'.
MIF2-KUNNR     = SPACE.
TOPAUSGABE     = SPACE.
PERFORM MIF2-LOESCHEN.
NOAN-FLAG      = '1'.

FORMAT COLOR COL_TOTAL INTENSIFIED.
IF KONTOZAEHLER > 1.
NEW-PAGE.
PERFORM ATLASTAUSGABE.
PERFORM ATLASTAUSGABE2.
*            WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDIF.

SKIP 1.
RESERVE 3 LINES.
MOVE TEXT-012 TO PH-LINE.    "Ende des Detail-Berichts

FORMAT COLOR COL_BACKGROUND INTENSIFIED OFF.
PERFORM JUST_ROUTINE(RSBTCHH0) USING PH-LINE 130.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*          WRITE: /01 SY-VLINE, 02 PH-LINE, 132 SY-VLINE.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDAT.
ENDCASE.                           "case konzvers

ENDLOOP.                  "ueber den extrahierten Datenbestand

*---------------------------------------------------------------------*
* Evtl. Fehlerausgabe !!!!!!!!!!!!!!!!!!!

* ílÇ™É[ÉçÇÃèÍçá ÅwÇOÅxÇéÛÇØìnÇµÇƒèIóπ
EXPORT L_DMSHB TO MEMORY ID 'HK'.
STOP .



CLEAR SY-SUBRC.
CALL FUNCTION 'FI_MESSAGE_CHECK'
EXCEPTIONS
NO_MESSAGE = 04.

IF SY-SUBRC = 0.
PAGE_FLAG = 'F'. NEW-PAGE.
ULINE.
*   WRITE: / 'Fehlerprotokoll:'(044).
ULINE.
DETAIL.

CALL FUNCTION 'FI_MESSAGE_SORT'.
*          EXCEPTIONS
*               NO_MESSAGE = 01.

CALL FUNCTION 'FI_MESSAGE_PRINT'
EXPORTING
I_MSORT = ' '
I_XAUSN = 'X'
I_XEAUS = ' '
I_XSKIP = 'X'.
ENDIF.

IF SY-PAGNO = 0.                     "Keine Liste ausgegeben
CALL FUNCTION 'POPUP_NO_LIST'.
ENDIF.

*//////////////////////////////////////////////////////////////////////*
* TOP-OF-PAGE                                                          *
*//////////////////////////////////////////////////////////////////////*
*TOP-OF-PAGE.
*
*  PERFORM BATCH-HEADING(RSBTCHH0).
*  IF PAGE_FLAG IS INITIAL.
*    WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*
*    IF VD_STUFE = '0'.                 "mit Einzelpostenausgabe
**  ‹berschriften fuer die  Einzelpostenzeilen
*      FORMAT COLOR COL_HEADING INTENSIFIED.
*      IF GKONTO IS INITIAL.
*        WRITE: /01 SY-VLINE, 02 TEXT-010, 132 SY-VLINE,
*               /01 SY-VLINE, 02 TEXT-011, 132 SY-VLINE.
*      ELSE.
*        WRITE: /01 SY-VLINE, 02 TEXT-040, 132 SY-VLINE,
*               /01 SY-VLINE, 02 TEXT-041, 132 SY-VLINE.
*      ENDIF.
*    ELSE.
*      PERFORM SUMUEBERSCHRIFT.
*    ENDIF.
*
*    WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*
** bei der Verdichtungsstufe 1 braucht die Sortierreihenfolge nicht
** mit der Sortierreihenfolge ausgegeben zu werden, da dort die
** ‹berschrift mit der Sortierreihenfolge ÅEereinstimmt.
*    IF SORTF-FLAG = '1' AND VD_STUFE = '0'.
**    Sortierreihenfolge wird ausgegeben.
*      FORMAT COLOR COL_BACKGROUND INTENSIFIED OFF.
*      WRITE: /01 SY-VLINE, 02 SORTFOLGE(130), 132 SY-VLINE.
*      WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
**    SKIP.
*      SORTF-FLAG = '0'.
*    ENDIF.
**  ka-flag ist 1, wenn beim Konto die ausfuehrliche Adresse bereits
**  ausgegeben wurde
*
*    IF KNA1-FLAG   =  '1' AND          "kompr.Anschriftsausgabe
*      NOAN-FLAG <> '1'.                "Anschrift nicht unterdruecken
*      MOVE: SPACE       TO ADR1,
*            KNA1-NAME1    TO ADR1-NAME1,
*            KNA1-LAND1    TO ADR1-LAND1.
*      IF NOT KNA1-PSTL2 IS INITIAL.
*        MOVE: KNA1-PSTL2    TO ADR1-PSTLZ.
*      ELSE.
*        MOVE: KNA1-PSTLZ    TO ADR1-PSTLZ.
*      ENDIF.
*      MOVE: KNA1-ORT01  TO ADR1-ORT01,
*            KNA1-REGIO  TO ADR1-REGIO,
*            PH-TEXTFELD TO ADR1-TEXT,  "Laendername oder Text-007
*            T001S-SNAME TO ADR1-SNAME. "Buchhaltungssachbearbeiter
*      CONDENSE ADR1.
*
*      IF KONZVERS = SPACE.
*        WRITE: /01 SY-VLINE.
*        WRITE:
*            02(04) KNB1-BUKRS,
*            07(10) SSORTFELD,
*            18(10) KNA1-KUNNR,
*            29     ADR1.
*        WRITE: 132 SY-VLINE.
*
*      ELSE.
**       ggf. kann wegen den Gruppensummierungen die Ueberschrift
**       nur modifiziert ausgegeben werden (Konzernversion)
*        CASE HTOPAUSGABE.
*          WHEN 'K2'.
*            WRITE: /01 SY-VLINE.
*            WRITE:
*                02(10) KNA1-KUNNR,
*                13(04) KNB1-BUKRS,
*                18(03) '***',
*                29     ADR1.
*            WRITE: 132 SY-VLINE.
*
*          WHEN 'K3'.
*            WRITE: /01 SY-VLINE.
*            WRITE:
*                02(10) KNA1-KUNNR,
*                13(04) '****',
*                29     ADR1.
*            WRITE: 132 SY-VLINE.
*
*          WHEN OTHERS.                 "Standardueberschriftszeile der
*                                       "Konzernversion
*            WRITE: /01 SY-VLINE.
*            WRITE:
*                02(10) KNA1-KUNNR,
*                13(04) KNB1-BUKRS,
*                18(10) SSORTFELD,
*                29     ADR1.
*            WRITE: 132 SY-VLINE.
*
*        ENDCASE.
*      ENDIF.                           "if konzvers = space
*
*      IF ADR1+80(10) = SPACE.
*        IF REPIDENT = '1'.             "Stichtag
*          WRITE: 108(15) TEXT-013,
*                 124(8)  DD_STIDA DD/MM/YY.
*
*        ENDIF.
*      ENDIF.
*      WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
**    skip 1.
*    ENDIF.                             "if ka-flag = '1' ...
*
*    IF TOPAUSGABE <> SPACE.
*      CASE TOPAUSGABE.
*        WHEN 'N1'.                     "betrifft Normalversion
*          WRITE: /01     SY-VLINE,
*                  02(04) KNB1-BUKRS,
*                  07(10) SSORTFELD,
*                  18(10) KNA1-KUNNR,
*                  29(02) '**'.
*          WRITE: 132     SY-VLINE.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*        WHEN 'N2'.                     "(noan-flag immer 1)
*          WRITE: /01     SY-VLINE,
*                  02(04) KNB1-BUKRS,
*                  07(10) SSORTFELD,
*                  18(03) '***'.
*          WRITE: 132     SY-VLINE.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*        WHEN 'N3'.                     "(noan-flag immer 1)
*          WRITE: /01     SY-VLINE,
*                  02(04) KNB1-BUKRS,
*                  07(04) '****'.
*          WRITE: 132     SY-VLINE.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*        WHEN 'K1'.                     "betrifft Konzernversion
*          WRITE: /01     SY-VLINE,
*                  02(10) KNA1-KUNNR,
*                  13(04) KNB1-BUKRS,
*                  18(10) SSORTFELD,
*                  29(02) '**'.
*          WRITE: 132     SY-VLINE.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*        WHEN 'K2'.
*                                       "bereits oben ausgegeben
*        WHEN 'K3'.
*                                       "bereits oben ausgegeben
*      ENDCASE.
*
*    ENDIF.                             "if topausgabe <> space
*  ENDIF.

***********************************************************
*          Unterroutinen                                  *
***********************************************************

FORM GRUPPENENDAUSGABE.                "sum(bsega-dmshb) durch
WASOLL   = SUM(ADMSOL).              "sum(wadmshb) ersetzt
WAHABEN  = SUM(ADMHAB).

IF WASOLL = 0  AND  WAHABEN = 0.     "Umsatzart SPACE
*     IF SUM(WADMSHB) <> 0.                "Sonderumsatzarten kamen
*--piyo
*    WRITE:
**      63(13) TEXT-002,                 "Gesamtobligo
**      77(05) T001-WAERS,
*      85(16) SUM(WADMSHB) CURRENCY T001-WAERS.
*      132 SY-VLINE.
ULINE-FLAG = '1'.
*     ENDIF.
ELSE.
*    WRITE:
*       77(05) T001-WAERS,
*       85(16) WASOLL   CURRENCY T001-WAERS, S,
*       132 SY-VLINE,
*       /01 SY-VLINE,
*       85(16) WAHABEN  CURRENCY T001-WAERS, H,
*       132 SY-VLINE.

IF SUM(ADMSHB) = SUM(WADMSHB).     "keine Sonderumsatzarten
*      WRITE:
*        /01     SY-VLINE,
*         63     TEXT-002,              "Gesamtobligo
*--piyo
*         85(16) SUM(ADMSHB) CURRENCY T001-WAERS, UN.
*        132     SY-VLINE.
ULINE-FLAG = '1'.
ELSE.
*      WRITE:
*                  nur Umsatzart SPACE
*        /01     SY-VLINE,
*--piyo
*         85(16) SUM(ADMSHB)   CURRENCY T001-WAERS, UN,
*        132     SY-VLINE,
*        /01     SY-VLINE,
*         63     TEXT-002,              "Gesamtobligo
*                  einschliesslich Sonderumsatzarten
*--piyo
*       /85(16) SUM(WADMSHB) CURRENCY T001-WAERS.
*        132     SY-VLINE.

ULINE-FLAG = '1'.
ENDIF.
NEW-LINE.
ENDIF.
ENDFORM.                    "GRUPPENENDAUSGABE

***********************************************************************

FORM GRUPPENENDAUSGABE2.
IF SUM(WSDMSHB) <> 0.
IF ULINE-FLAG = '1'.
*      WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*      WRITE:
**       /01     SY-VLINE,
**        63(13) TEXT-060,               "Merkposten
**        77(05) T001-WAERS,
*        85(16) SUM(WSDMSHB) CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
ELSE.
*      WRITE:
**        63(13) TEXT-060,               "Merkposten
**        77(05) T001-WAERS,
*        85(16) SUM(WSDMSHB) CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
ENDIF.
*   NEW-LINE.
ENDIF.

CLEAR ULINE-FLAG.
ENDFORM.                    "GRUPPENENDAUSGABE2

***********************************************************************

FORM KONTTAB.
CLEAR NEWL-FLAG.
CLEAR RESERVECNTR.
DESCRIBE TABLE WKONTTAB LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
*SORT WKONTTAB.
LOOP AT WKONTTAB.
AT FIRST.
IF WGAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.
IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE:
*        85(16)  WKONTTAB-DMSHB CURRENCY T001-WAERS.

*     IF WKONTTAB-WRSHB <> 0
*     AND WKONTTAB-WAERS <> T001-WAERS.
IF  WKONTTAB-WAERS <> T001-WAERS.
*        WRITE:
*           108(05) WKONTTAB-WAERS,
*           114(16) WKONTTAB-WRSHB CURRENCY WKONTTAB-WAERS.
ENDIF.
*      WRITE: 132 SY-VLINE.
*     RESERVE 2 LINES.  "erst unterhalb vom WRITE, da sonst TEXT-003 und
*                       "wkonttab-waers nicht auf eine Zeile kaemen
MOVE: WKONTTAB-WAERS TO WSORTTAB-WAERS,
WKONTTAB-WRSHB TO WSORTTAB-WRSHB,
WKONTTAB-DMSHB TO WSORTTAB-DMSHB.
COLLECT WSORTTAB.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT UKONTTAB.
SUKZ-FLAG = '0'.
LOOP AT UKONTTAB.
IF UKONTTAB-UMSKZ <> '*'.          "auch Sonderumsatzkennzeichen da
SUKZ-FLAG = '1'.
ENDIF.
ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE UKONTTAB LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
LOOP AT UKONTTAB.
AT FIRST.
IF SUKZ-FLAG = '1'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*       RESERVE 3 LINES.
*       WRITE: /01 SY-VLINE, 63 TEXT-004.            "pro Umsatzart
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
IF UKONTTAB-UMSKZ = '*'.         "Umsatzkennzeichen SPACE
*        WRITE: 79  UN.
ELSE.
*** ì¡éÍédñÛ
*        WRITE: 79  UKONTTAB-UMSKZ.
ENDIF.

*      WRITE: 85(16) UKONTTAB-DMSHB CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
ENDIF.

MOVE: UKONTTAB-DMSHB TO USORTTAB-DMSHB,
UKONTTAB-UMSKZ TO USORTTAB-UMSKZ.
COLLECT USORTTAB.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GKONTTAB LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT GKONTTAB.
LOOP AT GKONTTAB.
AT FIRST.
IF GBAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*       RESERVE 4 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-005.        "pro Geschaeftsbereich
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE:     79 GKONTTAB-GSBER,
*                 85(16) GKONTTAB-DMSHB CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
*     NEW-LINE.
*     RESERVE 3 LINES.
MOVE: GKONTTAB-DMSHB TO GSORTTAB-DMSHB,
GKONTTAB-GSBER TO GSORTTAB-GSBER.
COLLECT GSORTTAB.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
*WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDFORM.                    "KONTTAB

***********************************************************************

FORM KONTTAB2.
CLEAR NEWL-FLAG.
CLEAR RESERVECNTR.
DESCRIBE TABLE WKONTTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT WKONTTAB2.
LOOP AT WKONTTAB2.
AT FIRST.
IF WGAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*        RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF WKONTTAB2-HAUSW = AKONTTAB2-HAUSW.
IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*          WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*        WRITE:
*           85(16) WKONTTAB2-DMSHB  CURRENCY WKONTTAB2-HAUSW.

*       IF WKONTTAB2-WRSHB <> 0
*       AND WKONTTAB2-WAERS <> WKONTTAB2-HAUSW.
IF  WKONTTAB2-WAERS <> WKONTTAB2-HAUSW.
*          WRITE:
*            108(05) WKONTTAB2-WAERS,
*            114(16) WKONTTAB2-WRSHB  CURRENCY WKONTTAB2-WAERS.
ENDIF.
*        WRITE: 132 SY-VLINE.
*        RESERVE 2 LINES.
MOVE: WKONTTAB2-HAUSW TO WTOTALTAB-HAUSW,
WKONTTAB2-WAERS TO WTOTALTAB-WAERS,
WKONTTAB2-WRSHB TO WTOTALTAB-WRSHB,
WKONTTAB2-DMSHB TO WTOTALTAB-DMSHB.
COLLECT WTOTALTAB.
ENDIF.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT UKONTTAB2.
SUKZ-FLAG = '0'.
LOOP AT UKONTTAB2.
IF UKONTTAB2-HAUSW = AKONTTAB2-HAUSW.
IF UKONTTAB2-UMSKZ <> '*'.       "auch Sonderumsatzarten da
SUKZ-FLAG = '1'.
ENDIF.
ENDIF.
ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE UKONTTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
LOOP AT UKONTTAB2.
AT FIRST.
IF SUKZ-FLAG = '1'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**        RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-004.            "pro Umsatzart
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF UKONTTAB2-HAUSW = AKONTTAB2-HAUSW.
IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*          WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
IF UKONTTAB2-UMSKZ = '*'.      "Umsatzkennzeichen SPACE
*          WRITE: 79  UN.
ELSE.
*          WRITE: 79  UKONTTAB2-UMSKZ.
ENDIF.

*        WRITE:
*           85(16) UKONTTAB2-DMSHB CURRENCY UKONTTAB2-HAUSW.
*        WRITE: 132 SY-VLINE.
*        RESERVE 2 LINES.
ENDIF.

MOVE: UKONTTAB2-HAUSW TO UTOTALTAB-HAUSW,
UKONTTAB2-DMSHB TO UTOTALTAB-DMSHB,
UKONTTAB2-UMSKZ TO UTOTALTAB-UMSKZ.

COLLECT UTOTALTAB.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GKONTTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
LOOP AT GKONTTAB2.
AT FIRST.
IF GBAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**        RESERVE 5 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-005.        "pro Geschaeftsbereich
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GKONTTAB2-HAUSW = AKONTTAB2-HAUSW.
IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*          WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*        WRITE:
*           79     GKONTTAB2-GSBER,
*           85(16) GKONTTAB2-DMSHB CURRENCY GKONTTAB2-HAUSW.
*        WRITE: 132 SY-VLINE.
*        NEW-LINE.
*        RESERVE 4 LINES.
MOVE: GKONTTAB2-HAUSW TO GTOTALTAB-HAUSW,
GKONTTAB2-DMSHB TO GTOTALTAB-DMSHB,
GKONTTAB2-GSBER TO GTOTALTAB-GSBER.
COLLECT GTOTALTAB.
ENDIF.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
* WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDFORM.                                                    "KONTTAB2

***********************************************************************

FORM KONTTAB3.
CLEAR NEWL-FLAG.
*SORT WKONTTAB.
CLEAR RESERVECNTR.
DESCRIBE TABLE WKONTTAB3 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
LOOP AT WKONTTAB3.
AT FIRST.
IF WGAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.
IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*     WRITE:
*        85(16)  WKONTTAB3-DMSHB CURRENCY T001-WAERS.

*     IF WKONTTAB3-WRSHB <> 0
*     AND WKONTTAB3-WAERS <> T001-WAERS.
IF  WKONTTAB3-WAERS <> T001-WAERS.
*        WRITE:
*           108(05) WKONTTAB3-WAERS,
*           114(16) WKONTTAB3-WRSHB CURRENCY WKONTTAB3-WAERS.
ENDIF.
*      WRITE: 132 SY-VLINE.
*     RESERVE 2 LINES.  "erst unterhalb vom WRITE, da sonst TEXT-003 und
*                       "wkonttab-waers nicht auf eine Zeile kaemen
MOVE: WKONTTAB3-WAERS TO WSORTTAB2-WAERS,
WKONTTAB3-WRSHB TO WSORTTAB2-WRSHB,
WKONTTAB3-DMSHB TO WSORTTAB2-DMSHB.
COLLECT WSORTTAB2.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT UKONTTAB3.
*SUKZ-FLAG = '0'.
*LOOP AT UKONTTAB.
*   IF UKONTTAB-UMSKZ <> '*'.           "auch Sonderumsatzkennzeichen da
*      SUKZ-FLAG = '1'.
*   ENDIF.
*ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE UKONTTAB3 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
*   IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
*   ENDIF.
ENDIF.
LOOP AT UKONTTAB3.
AT FIRST.
*    IF SUKZ-FLAG = '1'.
*      WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*       RESERVE 3 LINES.
*     WRITE: /01 SY-VLINE, 63 TEXT-004."pro Umsatzart
NEWL-FLAG = '1'.
*    ENDIF.
ENDAT.

*  IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*      WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*    IF UKONTTAB-UMSKZ = '*'.           "Umsatzkennzeichen SPACE
*       WRITE: 80  un.
*    ELSE.
*    WRITE: 79  UKONTTAB3-UMSKZ.
*    ENDIF.

*    WRITE: 85(16) UKONTTAB3-DMSHB CURRENCY T001-WAERS.
*    WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
*  ENDIF.

MOVE: UKONTTAB3-DMSHB TO USORTTAB2-DMSHB,
UKONTTAB3-UMSKZ TO USORTTAB2-UMSKZ.
COLLECT USORTTAB2.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GKONTTAB3 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT GKONTTAB3.
LOOP AT GKONTTAB3.
AT FIRST.
IF GBAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*       RESERVE 4 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-005.        "pro Geschaeftsbereich
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE:     79 GKONTTAB3-GSBER,
*                 85(16) GKONTTAB3-DMSHB CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
*     NEW-LINE.
*     RESERVE 3 LINES.
MOVE: GKONTTAB3-DMSHB TO GSORTTAB2-DMSHB,
GKONTTAB3-GSBER TO GSORTTAB2-GSBER.
COLLECT GSORTTAB2.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
*WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDFORM.                                                    "KONTTAB3

***********************************************************************

FORM KONTTAB4.
CLEAR NEWL-FLAG.
CLEAR RESERVECNTR.
DESCRIBE TABLE WKONTTAB4 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT WKONTTAB4.
LOOP AT WKONTTAB4.
AT FIRST.
IF WGAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*        RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF WKONTTAB4-HAUSW = AKONTTAB3-HAUSW.
IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*          WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*        WRITE:
*           85(16) WKONTTAB4-DMSHB  CURRENCY WKONTTAB4-HAUSW.

*       IF WKONTTAB4-WRSHB <> 0
*       AND WKONTTAB4-WAERS <> WKONTTAB4-HAUSW.
IF  WKONTTAB4-WAERS <> WKONTTAB4-HAUSW.
*          WRITE:
*            108(05) WKONTTAB4-WAERS,
*            114(16) WKONTTAB4-WRSHB  CURRENCY WKONTTAB4-WAERS.
ENDIF.
*        WRITE: 132 SY-VLINE.
*        RESERVE 2 LINES.
MOVE: WKONTTAB4-HAUSW TO WTOTALTAB2-HAUSW,
WKONTTAB4-WAERS TO WTOTALTAB2-WAERS,
WKONTTAB4-WRSHB TO WTOTALTAB2-WRSHB,
WKONTTAB2-DMSHB TO WTOTALTAB2-DMSHB.
COLLECT WTOTALTAB2.
ENDIF.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT UKONTTAB4.
* SUKZ-FLAG = '0'.
* LOOP AT UKONTTAB2.
*   IF UKONTTAB2-HAUSW = AKONTTAB2-HAUSW.
*      IF UKONTTAB2-UMSKZ <> '*'.        "auch Sonderumsatzarten da
*         SUKZ-FLAG = '1'.
*      ENDIF.
*   ENDIF.
* ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE UKONTTAB4 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
*   IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
*   ENDIF.
ENDIF.
LOOP AT UKONTTAB4.
AT FIRST.
*     IF SUKZ-FLAG = '1'.
*      WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*        RESERVE 3 LINES.
*      WRITE: /01 SY-VLINE, 63 TEXT-004."pro Umsatzart
NEWL-FLAG = '1'.
*     ENDIF.
ENDAT.

IF UKONTTAB4-HAUSW = AKONTTAB3-HAUSW.
*     IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*        IF UKONTTAB2-UMSKZ = '*'.          "Umsatzkennzeichen SPACE
*           WRITE: 80  un.
*        ELSE.
*      WRITE: 79  UKONTTAB4-UMSKZ.
*        ENDIF.

*      WRITE:
*         85(16) UKONTTAB4-DMSHB CURRENCY UKONTTAB4-HAUSW.
*      WRITE: 132 SY-VLINE.
*        RESERVE 2 LINES.
*     ENDIF.

MOVE: UKONTTAB4-HAUSW TO UTOTALTAB2-HAUSW,
UKONTTAB4-DMSHB TO UTOTALTAB2-DMSHB,
UKONTTAB4-UMSKZ TO UTOTALTAB2-UMSKZ.

COLLECT UTOTALTAB2.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GKONTTAB4 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
LOOP AT GKONTTAB4.
AT FIRST.
IF GBAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*        RESERVE 5 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-005.        "pro Geschaeftsbereich
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GKONTTAB4-HAUSW = AKONTTAB3-HAUSW.
IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*          WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*        WRITE:
*           79     GKONTTAB4-GSBER,
*           85(16) GKONTTAB4-DMSHB CURRENCY GKONTTAB4-HAUSW.
*        WRITE: 132 SY-VLINE.
*        NEW-LINE.
*        RESERVE 4 LINES.
MOVE: GKONTTAB4-HAUSW TO GTOTALTAB2-HAUSW,
GKONTTAB4-DMSHB TO GTOTALTAB2-DMSHB,
GKONTTAB4-GSBER TO GTOTALTAB2-GSBER.
COLLECT GTOTALTAB2.
ENDIF.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
* WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDFORM.                                                    "KONTTAB4

***********************************************************************

* wie konttab2, aber ohne Ausgabe
FORM HKONTTAB2.
LOOP AT WKONTTAB2.
IF WKONTTAB2-HAUSW = AKONTTAB2-HAUSW  AND  WGAUSGAB = 'X'.
MOVE: WKONTTAB2-HAUSW TO WTOTALTAB-HAUSW,
WKONTTAB2-WAERS TO WTOTALTAB-WAERS,
WKONTTAB2-WRSHB TO WTOTALTAB-WRSHB,
WKONTTAB2-DMSHB TO WTOTALTAB-DMSHB.
COLLECT WTOTALTAB.
ENDIF.
ENDLOOP.

LOOP AT UKONTTAB2.
IF UKONTTAB2-HAUSW = AKONTTAB2-HAUSW.
MOVE: UKONTTAB2-HAUSW TO UTOTALTAB-HAUSW,
UKONTTAB2-DMSHB TO UTOTALTAB-DMSHB,
UKONTTAB2-UMSKZ TO UTOTALTAB-UMSKZ.
COLLECT UTOTALTAB.
ENDIF.
ENDLOOP.

LOOP AT GKONTTAB2.
IF GKONTTAB2-HAUSW = AKONTTAB2-HAUSW  AND  GBAUSGAB = 'X'.
IF GBAUSGAB = 'X'.
MOVE: GKONTTAB2-HAUSW TO GTOTALTAB-HAUSW,
GKONTTAB2-DMSHB TO GTOTALTAB-DMSHB,
GKONTTAB2-GSBER TO GTOTALTAB-GSBER.
COLLECT GTOTALTAB.
ENDIF.
ENDIF.
ENDLOOP.
ENDFORM.                                                    "HKONTTAB2

***********************************************************************

* wie konttab4, aber ohne Ausgabe
FORM HKONTTAB3.
LOOP AT WKONTTAB4.
IF WKONTTAB4-HAUSW = AKONTTAB3-HAUSW  AND  WGAUSGAB = 'X'.
MOVE: WKONTTAB4-HAUSW TO WTOTALTAB2-HAUSW,
WKONTTAB4-WAERS TO WTOTALTAB2-WAERS,
WKONTTAB4-WRSHB TO WTOTALTAB2-WRSHB,
WKONTTAB4-DMSHB TO WTOTALTAB2-DMSHB.
COLLECT WTOTALTAB2.
ENDIF.
ENDLOOP.

LOOP AT UKONTTAB4.
IF UKONTTAB4-HAUSW = AKONTTAB3-HAUSW.
MOVE: UKONTTAB4-HAUSW TO UTOTALTAB2-HAUSW,
UKONTTAB4-DMSHB TO UTOTALTAB2-DMSHB,
UKONTTAB4-UMSKZ TO UTOTALTAB2-UMSKZ.
COLLECT UTOTALTAB2.
ENDIF.
ENDLOOP.

LOOP AT GKONTTAB4.
IF GKONTTAB4-HAUSW = AKONTTAB3-HAUSW  AND  GBAUSGAB = 'X'.
IF GBAUSGAB = 'X'.
MOVE: GKONTTAB4-HAUSW TO GTOTALTAB2-HAUSW,
GKONTTAB4-DMSHB TO GTOTALTAB2-DMSHB,
GKONTTAB4-GSBER TO GTOTALTAB2-GSBER.
COLLECT GTOTALTAB2.
ENDIF.
ENDIF.
ENDLOOP.

ENDFORM.                                                    "HKONTTAB3

***********************************************************************

FORM SORTTAB.
CLEAR NEWL-FLAG.
CLEAR RESERVECNTR.
DESCRIBE TABLE WSORTTAB  LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT WSORTTAB.
LOOP AT WSORTTAB.
AT FIRST.
IF WGAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*      WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE:
*      85(16) WSORTTAB-DMSHB  CURRENCY T001-WAERS.

*     IF WSORTTAB-WRSHB <> 0
*     AND WSORTTAB-WAERS <> T001-WAERS.
IF  WSORTTAB-WAERS <> T001-WAERS.
*        WRITE:
*          108(05) WSORTTAB-WAERS,
*          114(16) WSORTTAB-WRSHB  CURRENCY WSORTTAB-WAERS.
ENDIF.
*     WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
MOVE: WSORTTAB-WAERS TO WBUKRTAB-WAERS,
WSORTTAB-WRSHB TO WBUKRTAB-WRSHB,
WSORTTAB-DMSHB TO WBUKRTAB-DMSHB.
COLLECT WBUKRTAB.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT USORTTAB.
SUKZ-FLAG = '0'.
LOOP AT USORTTAB.
IF USORTTAB-UMSKZ <> '*'.          "auch Sonderumsatzarten da
SUKZ-FLAG = '1'.
ENDIF.
ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE USORTTAB  LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
LOOP AT USORTTAB.
AT FIRST.
IF SUKZ-FLAG = '1'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**      RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-004.            "pro Umsatzart
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
IF USORTTAB-UMSKZ = '*'.         "Umsatzkennzeichen SPACE
*        WRITE: 79  UN.
ELSE.
*        WRITE: 79  USORTTAB-UMSKZ.
ENDIF.

*      WRITE: 85(16) USORTTAB-DMSHB CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
ENDIF.

MOVE: USORTTAB-DMSHB TO UBUKRTAB-DMSHB,
USORTTAB-UMSKZ TO UBUKRTAB-UMSKZ.
COLLECT UBUKRTAB.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GSORTTAB  LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT GSORTTAB.
LOOP AT GSORTTAB.
AT FIRST.
IF GBAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*      RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-005.        "pro Geschaeftsbereich
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE: 79     GSORTTAB-GSBER,
*             85(16) GSORTTAB-DMSHB CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
MOVE: GSORTTAB-DMSHB TO GBUKRTAB-DMSHB,
GSORTTAB-GSBER TO GBUKRTAB-GSBER.
COLLECT GBUKRTAB.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
*WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDFORM.                    "SORTTAB

***********************************************************************

FORM SORTTAB2.
CLEAR NEWL-FLAG.
CLEAR RESERVECNTR.
DESCRIBE TABLE WSORTTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT WSORTTAB2.
LOOP AT WSORTTAB2.
AT FIRST.
IF WGAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE:
*        85(16) WSORTTAB2-DMSHB  CURRENCY T001-WAERS.

*     IF WSORTTAB2-WRSHB <> 0
*     AND WSORTTAB2-WAERS <> T001-WAERS.
IF  WSORTTAB2-WAERS <> T001-WAERS.
*        WRITE:
*          108(05) WSORTTAB2-WAERS,
*          114(16) WSORTTAB2-WRSHB  CURRENCY WSORTTAB2-WAERS.
ENDIF.
*      WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
MOVE: WSORTTAB2-WAERS TO WBUKRTAB2-WAERS,
WSORTTAB2-WRSHB TO WBUKRTAB2-WRSHB,
WSORTTAB2-DMSHB TO WBUKRTAB2-DMSHB.
COLLECT WBUKRTAB2.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT USORTTAB2.
*SUKZ-FLAG = '0'.
*LOOP AT USORTTAB.
*  IF USORTTAB-UMSKZ <> '*'.           "auch Sonderumsatzarten da
*     SUKZ-FLAG = '1'.
*  ENDIF.
*ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE USORTTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
*   IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
*   ENDIF.
ENDIF.
LOOP AT USORTTAB2.
AT FIRST.
*   IF SUKZ-FLAG = '1'.
*      WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*      RESERVE 3 LINES.
*      WRITE: /01 SY-VLINE, 63 TEXT-004."pro Umsatzart
NEWL-FLAG = '1'.
*   ENDIF.
ENDAT.

* IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*      WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*    IF USORTTAB-UMSKZ = '*'.          "Umsatzkennzeichen SPACE
*       WRITE: 80  un.
*    ELSE.
*    WRITE: 79  USORTTAB2-UMSKZ.
*    ENDIF.

*    WRITE: 85(16) USORTTAB2-DMSHB CURRENCY T001-WAERS.
*    WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
* ENDIF.

MOVE: USORTTAB2-DMSHB TO UBUKRTAB2-DMSHB,
USORTTAB2-UMSKZ TO UBUKRTAB2-UMSKZ.
COLLECT UBUKRTAB2.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GSORTTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT GSORTTAB2.
LOOP AT GSORTTAB2.
AT FIRST.
IF GBAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*      RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-005.        "pro Geschaeftsbereich
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE: 79     GSORTTAB2-GSBER,
*             85(16) GSORTTAB2-DMSHB CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
MOVE: GSORTTAB2-DMSHB TO GBUKRTAB2-DMSHB,
GSORTTAB2-GSBER TO GBUKRTAB2-GSBER.
COLLECT GBUKRTAB2.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
*WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDFORM.                                                    "SORTTAB2

***********************************************************************

* wie Unterroutine SORTTAB, aber ohne Ausgabe

FORM HSORTTAB.
SORT WSORTTAB.
LOOP AT WSORTTAB.
MOVE: WSORTTAB-WAERS TO WBUKRTAB-WAERS,
WSORTTAB-WRSHB TO WBUKRTAB-WRSHB,
WSORTTAB-DMSHB TO WBUKRTAB-DMSHB.
COLLECT WBUKRTAB.
ENDLOOP.

SORT USORTTAB.
LOOP AT USORTTAB.
MOVE: USORTTAB-DMSHB TO UBUKRTAB-DMSHB,
USORTTAB-UMSKZ TO UBUKRTAB-UMSKZ.
COLLECT UBUKRTAB.
ENDLOOP.

SORT GSORTTAB.
LOOP AT GSORTTAB.
MOVE: GSORTTAB-DMSHB TO GBUKRTAB-DMSHB,
GSORTTAB-GSBER TO GBUKRTAB-GSBER.
COLLECT GBUKRTAB.
ENDLOOP.
ENDFORM.                    "HSORTTAB

***********************************************************************

* wie Unterroutine SORTTAB2, aber ohne Ausgabe

FORM HSORTTAB2.
SORT WSORTTAB2.
LOOP AT WSORTTAB2.
MOVE: WSORTTAB2-WAERS TO WBUKRTAB2-WAERS,
WSORTTAB2-WRSHB TO WBUKRTAB2-WRSHB,
WSORTTAB2-DMSHB TO WBUKRTAB2-DMSHB.
COLLECT WBUKRTAB2.
ENDLOOP.

SORT USORTTAB2.
LOOP AT USORTTAB2.
MOVE: USORTTAB2-DMSHB TO UBUKRTAB2-DMSHB,
USORTTAB2-UMSKZ TO UBUKRTAB2-UMSKZ.
COLLECT UBUKRTAB2.
ENDLOOP.

SORT GSORTTAB2.
LOOP AT GSORTTAB2.
MOVE: GSORTTAB2-DMSHB TO GBUKRTAB2-DMSHB,
GSORTTAB2-GSBER TO GBUKRTAB2-GSBER.
COLLECT GBUKRTAB2.
ENDLOOP.

ENDFORM.                                                    "HSORTTAB2

***********************************************************************

FORM BUKRTAB.
CLEAR NEWL-FLAG.
CLEAR RESERVECNTR.
DESCRIBE TABLE WBUKRTAB  LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT WBUKRTAB.
LOOP AT WBUKRTAB.
AT FIRST.
IF WGAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE:
*         85(16) WBUKRTAB-DMSHB CURRENCY T001-WAERS.

*     IF WBUKRTAB-WRSHB <> 0
*     AND WBUKRTAB-WAERS <> T001-WAERS.
IF  WBUKRTAB-WAERS <> T001-WAERS.
*        WRITE:
*           108(05) WBUKRTAB-WAERS,
*           114(16) WBUKRTAB-WRSHB CURRENCY WBUKRTAB-WAERS.
ENDIF.
*      WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
MOVE: T001-WAERS     TO WTOTALTAB-HAUSW,
WBUKRTAB-WAERS TO WTOTALTAB-WAERS,
WBUKRTAB-WRSHB TO WTOTALTAB-WRSHB,
WBUKRTAB-DMSHB TO WTOTALTAB-DMSHB.
COLLECT WTOTALTAB.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT UBUKRTAB.
SUKZ-FLAG = '0'.
LOOP AT UBUKRTAB.
IF UBUKRTAB-UMSKZ <> '*'.          "auch Sonderumsatzkennzeichen da
SUKZ-FLAG = '1'.
ENDIF.
ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE UBUKRTAB  LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
LOOP AT UBUKRTAB.
AT FIRST.
IF SUKZ-FLAG = '1'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*      RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-004.            "pro Umsatzart
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
IF UBUKRTAB-UMSKZ = '*'.         "Umsatzkennzeichen SPACE
*        WRITE: 79  UN.
ELSE.
*        WRITE: 79  UBUKRTAB-UMSKZ.
*2005/05/20 START_ADD
**------- ì¡éÍédñÛ
*         L_DMSHB = UBUKRTAB-DMSHB .
*2005/05/20 END_ADD
ENDIF.

*      WRITE: 85(16) UBUKRTAB-DMSHB CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
ENDIF.

MOVE: T001-WAERS     TO UTOTALTAB-HAUSW,
UBUKRTAB-DMSHB TO UTOTALTAB-DMSHB,
UBUKRTAB-UMSKZ TO UTOTALTAB-UMSKZ.
COLLECT UTOTALTAB.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GBUKRTAB  LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT GBUKRTAB.
LOOP AT GBUKRTAB.
AT FIRST.
IF GBAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-005.        "pro Geschaeftsbereich
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE: 79     GBUKRTAB-GSBER,
*             85(16) GBUKRTAB-DMSHB CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
*     RESERVE 2 LINES.
MOVE: T001-WAERS     TO GTOTALTAB-HAUSW,
GBUKRTAB-DMSHB TO GTOTALTAB-DMSHB,
GBUKRTAB-GSBER TO GTOTALTAB-GSBER.
COLLECT GTOTALTAB.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
*WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.

*** éÛìníl = îÑä|ã‡çáåv - ì¡éÍédñÛï (W)
** L_DMSHB = L_ADMSHB - L_DMSHB .
*** EXPORT L_DMSHB TO MEMORY ID 'HK'.
*** STOP .




ENDFORM.                    "BUKRTAB
***********************************************************************

* wie Unterroutine BUKRTAB, aber ohne Ausgabe

FORM HBUKRTAB.
LOOP AT WBUKRTAB.
MOVE: T001-WAERS     TO WTOTALTAB-HAUSW,
WBUKRTAB-WAERS TO WTOTALTAB-WAERS,
WBUKRTAB-WRSHB TO WTOTALTAB-WRSHB,
WBUKRTAB-DMSHB TO WTOTALTAB-DMSHB.
COLLECT WTOTALTAB.
ENDLOOP.

LOOP AT UBUKRTAB.
MOVE: T001-WAERS     TO UTOTALTAB-HAUSW,
UBUKRTAB-DMSHB TO UTOTALTAB-DMSHB,
UBUKRTAB-UMSKZ TO UTOTALTAB-UMSKZ.
COLLECT UTOTALTAB.
ENDLOOP.

LOOP AT GBUKRTAB.
MOVE: T001-WAERS     TO GTOTALTAB-HAUSW,
GBUKRTAB-DMSHB TO GTOTALTAB-DMSHB,
GBUKRTAB-GSBER TO GTOTALTAB-GSBER.
COLLECT GTOTALTAB.
ENDLOOP.
ENDFORM.                    "HBUKRTAB

***********************************************************************

FORM BUKRTAB2.
CLEAR NEWL-FLAG.
SORT WBUKRTAB.
*verhindertr Ausgabe, falls nur Hausw‰hrungszeile
*FREMDWAE-FLAG = '0'.
*LOOP AT WBUKRTAB.
*  IF WBUKRTAB-WAERS <> SPACE.
*     FRENDWAE-FLAG = '1'.
*     EXIT.
*  ENDIF.
*ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE WBUKRTAB  LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
LOOP AT WBUKRTAB.
AT FIRST.
IF WGAUSGAB = 'X'.               "<-and fremdwae-flag = '1'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE:
*         85(16) WBUKRTAB-DMSHB CURRENCY T001-WAERS.

*     IF WBUKRTAB-WRSHB <> 0
*     AND WBUKRTAB-WAERS <> T001-WAERS.
IF  WBUKRTAB-WAERS <> T001-WAERS.
*        WRITE:
*           108(05) WBUKRTAB-WAERS,
*           114(16) WBUKRTAB-WRSHB CURRENCY WBUKRTAB-WAERS.
ENDIF.
*      WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
MOVE: T001-WAERS     TO WKONTTAB2-HAUSW,
WBUKRTAB-WAERS TO WKONTTAB2-WAERS,
WBUKRTAB-WRSHB TO WKONTTAB2-WRSHB,
WBUKRTAB-DMSHB TO WKONTTAB2-DMSHB.
COLLECT WKONTTAB2.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT UBUKRTAB.
SUKZ-FLAG = '0'.
LOOP AT UBUKRTAB.
IF UBUKRTAB-UMSKZ <> '*'.          "auch Sonderumsatzkennzeichen da
SUKZ-FLAG = '1'.
ENDIF.
ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE UBUKRTAB  LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
LOOP AT UBUKRTAB.
AT FIRST.
IF SUKZ-FLAG = '1'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**      RESERVE 3 LINES.
WRITE: /01 SY-VLINE, 63 TEXT-004.            "pro Umsatzart
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
IF UBUKRTAB-UMSKZ = '*'.         "Umsatzkennzeichen SPACE
*        WRITE: 79  UN.
ELSE.
*        WRITE: 79  UBUKRTAB-UMSKZ.
ENDIF.

*      WRITE: 85(16) UBUKRTAB-DMSHB CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
ENDIF.

MOVE: T001-WAERS     TO UKONTTAB2-HAUSW,
UBUKRTAB-DMSHB TO UKONTTAB2-DMSHB,
UBUKRTAB-UMSKZ TO UKONTTAB2-UMSKZ.
COLLECT UKONTTAB2.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GBUKRTAB LINES  RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT GBUKRTAB.
LOOP AT GBUKRTAB.
AT FIRST.
IF GBAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-005.        "pro Geschaeftsbereich
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE: 79     GBUKRTAB-GSBER,
*             85(16) GBUKRTAB-DMSHB CURRENCY T001-WAERS.
*     WRITE: 132 SY-VLINE.
*     NEW-LINE.
*     RESERVE 2 LINES.
MOVE: T001-WAERS     TO GKONTTAB2-HAUSW,
GBUKRTAB-DMSHB TO GKONTTAB2-DMSHB,
GBUKRTAB-GSBER TO GKONTTAB2-GSBER.
COLLECT GKONTTAB2.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
*WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDFORM.                                                    "BUKRTAB2

***********************************************************************

* wie bukrtab2, aber ohne Ausgabe
FORM HBUKRTAB2.
LOOP AT WBUKRTAB.
IF WGAUSGAB = 'X'.
MOVE: T001-WAERS     TO WKONTTAB2-HAUSW,
WBUKRTAB-WAERS TO WKONTTAB2-WAERS,
WBUKRTAB-WRSHB TO WKONTTAB2-WRSHB,
WBUKRTAB-DMSHB TO WKONTTAB2-DMSHB.
COLLECT WKONTTAB2.
ENDIF.
ENDLOOP.

LOOP AT UBUKRTAB.
MOVE: T001-WAERS     TO UKONTTAB2-HAUSW,
UBUKRTAB-DMSHB TO UKONTTAB2-DMSHB,
UBUKRTAB-UMSKZ TO UKONTTAB2-UMSKZ.
COLLECT UKONTTAB2.
ENDLOOP.

LOOP AT GBUKRTAB.
IF GBAUSGAB = 'X'.
MOVE: T001-WAERS     TO GKONTTAB2-HAUSW,
GBUKRTAB-DMSHB TO GKONTTAB2-DMSHB,
GBUKRTAB-GSBER TO GKONTTAB2-GSBER.
COLLECT GKONTTAB2.
ENDIF.
ENDLOOP.
ENDFORM.                                                    "HBUKRTAB2

***********************************************************************

FORM BUKRTAB3.
CLEAR NEWL-FLAG.
CLEAR RESERVECNTR.
DESCRIBE TABLE WBUKRTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT WBUKRTAB2.
LOOP AT WBUKRTAB2.
AT FIRST.
IF WGAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE:
*         85(16) WBUKRTAB2-DMSHB CURRENCY T001-WAERS.

*     IF WBUKRTAB2-WRSHB <> 0
*     AND WBUKRTAB2-WAERS <> T001-WAERS.
IF  WBUKRTAB2-WAERS <> T001-WAERS.
*        WRITE:
*           108(05) WBUKRTAB2-WAERS,
*           114(16) WBUKRTAB2-WRSHB CURRENCY WBUKRTAB2-WAERS.
ENDIF.
*      WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
MOVE: T001-WAERS     TO WTOTALTAB2-HAUSW,
WBUKRTAB2-WAERS TO WTOTALTAB2-WAERS,
WBUKRTAB2-WRSHB TO WTOTALTAB2-WRSHB,
WBUKRTAB2-DMSHB TO WTOTALTAB2-DMSHB.
COLLECT WTOTALTAB2.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT UBUKRTAB2.
*SUKZ-FLAG = '0'.
*LOOP AT UBUKRTAB.
*  IF UBUKRTAB-UMSKZ <> '*'.           "auch Sonderumsatzkennzeichen da
*     SUKZ-FLAG = '1'.
*  ENDIF.
*ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE UBUKRTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
*   IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
*   ENDIF.
ENDIF.
LOOP AT UBUKRTAB2.
AT FIRST.
*   IF SUKZ-FLAG = '1'.
*      WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*      RESERVE 3 LINES.
*      WRITE: /01 SY-VLINE, 63 TEXT-004."pro Umsatzart
NEWL-FLAG = '1'.
*   ENDIF.
ENDAT.

* IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*      WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*    IF UBUKRTAB-UMSKZ = '*'.             "Umsatzkennzeichen SPACE
*       WRITE: 79  un.
*    ELSE.
*    WRITE: 79  UBUKRTAB2-UMSKZ.
*    ENDIF.

*    WRITE: 86(16) UBUKRTAB2-DMSHB CURRENCY T001-WAERS.
*    WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
* ENDIF.

MOVE: T001-WAERS     TO UTOTALTAB2-HAUSW,
UBUKRTAB2-DMSHB TO UTOTALTAB2-DMSHB,
UBUKRTAB2-UMSKZ TO UTOTALTAB2-UMSKZ.
COLLECT UTOTALTAB2.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GBUKRTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT GBUKRTAB2.
LOOP AT GBUKRTAB2.
AT FIRST.
IF GBAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-005.        "pro Geschaeftsbereich
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE: 79     GBUKRTAB2-GSBER,
*             85(16) GBUKRTAB2-DMSHB CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
*     RESERVE 2 LINES.
MOVE: T001-WAERS     TO GTOTALTAB2-HAUSW,
GBUKRTAB2-DMSHB TO GTOTALTAB2-DMSHB,
GBUKRTAB2-GSBER TO GTOTALTAB2-GSBER.
COLLECT GTOTALTAB2.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
*WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDFORM.                                                    "BUKRTAB3

***********************************************************************

* wie Unterroutine BUKRTAB3, aber ohne Ausgabe

FORM HBUKRTAB3.
LOOP AT WBUKRTAB2.
MOVE: T001-WAERS     TO WTOTALTAB2-HAUSW,
WBUKRTAB2-WAERS TO WTOTALTAB2-WAERS,
WBUKRTAB2-WRSHB TO WTOTALTAB2-WRSHB,
WBUKRTAB2-DMSHB TO WTOTALTAB2-DMSHB.
COLLECT WTOTALTAB2.
ENDLOOP.

LOOP AT UBUKRTAB2.
MOVE: T001-WAERS     TO UTOTALTAB2-HAUSW,
UBUKRTAB2-DMSHB TO UTOTALTAB2-DMSHB,
UBUKRTAB2-UMSKZ TO UTOTALTAB2-UMSKZ.
COLLECT UTOTALTAB2.
ENDLOOP.

LOOP AT GBUKRTAB2.
MOVE: T001-WAERS     TO GTOTALTAB2-HAUSW,
GBUKRTAB2-DMSHB TO GTOTALTAB2-DMSHB,
GBUKRTAB2-GSBER TO GTOTALTAB2-GSBER.
COLLECT GTOTALTAB2.
ENDLOOP.

ENDFORM.                                                    "HBUKRTAB3

***********************************************************************

FORM BUKRTAB4.
CLEAR NEWL-FLAG.
SORT WBUKRTAB2.
*verhindertr Ausgabe, falls nur Hausw‰hrungszeile
*FREMDWAE-FLAG = '0'.
*LOOP AT WBUKRTAB.
*  IF WBUKRTAB-WAERS <> SPACE.
*     FRENDWAE-FLAG = '1'.
*     EXIT.
*  ENDIF.
*ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE WBUKRTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
LOOP AT WBUKRTAB2.
AT FIRST.
IF WGAUSGAB = 'X'.               "<-and fremdwae-flag = '1'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE:
*         85(16) WBUKRTAB2-DMSHB CURRENCY T001-WAERS.

*     IF WBUKRTAB2-WRSHB <> 0
*     AND WBUKRTAB2-WAERS <> T001-WAERS.
IF  WBUKRTAB2-WAERS <> T001-WAERS.
*        WRITE:
*           108(05) WBUKRTAB2-WAERS,
*           114(16) WBUKRTAB2-WRSHB CURRENCY WBUKRTAB2-WAERS.
ENDIF.
*      WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
MOVE: T001-WAERS     TO WKONTTAB4-HAUSW,
WBUKRTAB2-WAERS TO WKONTTAB4-WAERS,
WBUKRTAB2-WRSHB TO WKONTTAB4-WRSHB,
WBUKRTAB2-DMSHB TO WKONTTAB4-DMSHB.
COLLECT WKONTTAB4.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT UBUKRTAB2.
*SUKZ-FLAG = '0'.
*LOOP AT UBUKRTAB.
*  IF UBUKRTAB-UMSKZ <> '*'.           "auch Sonderumsatzkennzeichen da
*    SUKZ-FLAG = '1'.
*  ENDIF.
*ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE UBUKRTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
*   IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
*   ENDIF.
ENDIF.
LOOP AT UBUKRTAB2.
AT FIRST.
*   IF SUKZ-FLAG = '1'.
*      WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**      RESERVE 3 LINES.
WRITE: /01 SY-VLINE, 63 TEXT-004."pro Umsatzart
NEWL-FLAG = '1'.
*   ENDIF.
ENDAT.

* IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*      WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*    IF UBUKRTAB-UMSKZ = '*'.          "Umsatzkennzeichen SPACE
*       WRITE: 80  un.
*    ELSE.
*    WRITE: 79  UBUKRTAB2-UMSKZ.
*    ENDIF.

*    WRITE: 85(16) UBUKRTAB2-DMSHB CURRENCY T001-WAERS.
*    WRITE: 132 SY-VLINE.
*    RESERVE 2 LINES.
* ENDIF.

MOVE: T001-WAERS     TO UKONTTAB4-HAUSW,
UBUKRTAB2-DMSHB TO UKONTTAB4-DMSHB,
UBUKRTAB2-UMSKZ TO UKONTTAB4-UMSKZ.
COLLECT UKONTTAB4.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GBUKRTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT GBUKRTAB2.
LOOP AT GBUKRTAB2.
AT FIRST.
IF GBAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-005.        "pro Geschaeftsbereich
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*      WRITE: 79     GBUKRTAB2-GSBER,
*             85(16) GBUKRTAB2-DMSHB CURRENCY T001-WAERS.
*      WRITE: 132 SY-VLINE.
*     NEW-LINE.
*     RESERVE 2 LINES.
MOVE: T001-WAERS     TO GKONTTAB4-HAUSW,
GBUKRTAB2-DMSHB TO GKONTTAB4-DMSHB,
GBUKRTAB2-GSBER TO GKONTTAB4-GSBER.
COLLECT GKONTTAB4.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
*WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDFORM.                                                    "BUKRTAB4

***********************************************************************

* wie bukrtab4, aber ohne Ausgabe
FORM HBUKRTAB4.
LOOP AT WBUKRTAB2.
IF WGAUSGAB = 'X'.
MOVE: T001-WAERS     TO WKONTTAB4-HAUSW,
WBUKRTAB2-WAERS TO WKONTTAB4-WAERS,
WBUKRTAB2-WRSHB TO WKONTTAB4-WRSHB,
WBUKRTAB2-DMSHB TO WKONTTAB4-DMSHB.
COLLECT WKONTTAB4.
ENDIF.
ENDLOOP.

LOOP AT UBUKRTAB2.
MOVE: T001-WAERS     TO UKONTTAB4-HAUSW,
UBUKRTAB2-DMSHB TO UKONTTAB4-DMSHB,
UBUKRTAB2-UMSKZ TO UKONTTAB4-UMSKZ.
COLLECT UKONTTAB4.
ENDLOOP.

LOOP AT GBUKRTAB2.
IF GBAUSGAB = 'X'.
MOVE: T001-WAERS     TO GKONTTAB4-HAUSW,
GBUKRTAB2-DMSHB TO GKONTTAB4-DMSHB,
GBUKRTAB2-GSBER TO GKONTTAB4-GSBER.
COLLECT GKONTTAB4.
ENDIF.
ENDLOOP.

ENDFORM.                                                    "HBUKRTAB4

***********************************************************************

FORM TOTALTAB.
*Entfernen Eintrag bei HAUSW, wenn Hausw‰hrung = Fremdw‰hrung.
*Grund: Nach Sort, soll Hausw‰hrung an erster Stelle stehen.

LOOP AT WTOTALTAB.
IF WTOTALTAB-HAUSW EQ WTOTALTAB-WAERS.
MOVE SPACE TO WTOTALTAB-WAERS.
MODIFY WTOTALTAB.
ENDIF.
ENDLOOP.

SORT WTOTALTAB.

CLEAR NEWL-FLAG.
CLEAR RESERVECNTR.
DESCRIBE TABLE WTOTALTAB LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
* verhindert Ausgabe, falls nur Hauswaehrungszeile.
LOOP AT WTOTALTAB.
AT FIRST.
IF WGAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF WTOTALTAB-HAUSW = ATOTALTAB-HAUSW.
IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*          WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*        WRITE:
*           85(16) WTOTALTAB-DMSHB CURRENCY WTOTALTAB-HAUSW.
*      keine Ausgabe bei aktueller Hauswaherung.
*       IF WTOTALTAB-WRSHB <> 0
*       AND WTOTALTAB-WAERS <> SPACE.  "Hausw‰hrung
IF  WTOTALTAB-WAERS <> SPACE.  "Hausw‰hrung
*          WRITE:
*            108(05) WTOTALTAB-WAERS,
*            114(16) WTOTALTAB-WRSHB CURRENCY WTOTALTAB-WAERS.
ENDIF.
*        WRITE: 132 SY-VLINE.
*      RESERVE 2 LINES.
ENDIF.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT UTOTALTAB.
SUKZ-FLAG = '0'.
LOOP AT UTOTALTAB.
IF UTOTALTAB-HAUSW = ATOTALTAB-HAUSW.
IF UTOTALTAB-UMSKZ <> '*'.       "auch Sonderumsatzkennz. da
SUKZ-FLAG = '1'.
ENDIF.
ENDIF.
ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE UTOTALTAB LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
LOOP AT UTOTALTAB.
AT FIRST.
IF SUKZ-FLAG = '1'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**       RESERVE 3 LINES.
*       WRITE: /01 SY-VLINE, 63 TEXT-004.            "pro Umsatzart
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF UTOTALTAB-HAUSW = ATOTALTAB-HAUSW.
IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*          WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
IF UTOTALTAB-UMSKZ = '*'.      "Umsatzkennzeichen SPACE
*          WRITE: 79  UN.
ELSE.
*          WRITE: 79  UTOTALTAB-UMSKZ.
*2005/05/20 START_ADD
*--------- ì¡éÍédñÛ
L_DMSHB = UBUKRTAB-DMSHB .
*2005/05/20 END_ADD
ENDIF.

*        WRITE:
*           85(16) UTOTALTAB-DMSHB CURRENCY UTOTALTAB-HAUSW.
*        WRITE: 132 SY-VLINE.
*       RESERVE 2 LINES.
ENDIF.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GTOTALTAB LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT GTOTALTAB.
LOOP AT GTOTALTAB.
AT FIRST.
IF GBAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
*       RESERVE 4 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-005.        "pro Geschaeftsbereich
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GTOTALTAB-HAUSW = ATOTALTAB-HAUSW.
IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*          WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*        WRITE:
*          79     GTOTALTAB-GSBER,
*          85(16) GTOTALTAB-DMSHB CURRENCY GTOTALTAB-HAUSW.
*        WRITE: 132 SY-VLINE.
*       RESERVE 3 LINES.
ENDIF.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
*WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDFORM.                    "TOTALTAB

***********************************************************************

FORM TOTALTAB2.
*Entfernen Eintrag bei HAUSW, wenn Hausw‰hrung = Fremdw‰hrung.
*Grund: Nach Sort, soll Hausw‰hrung an erster Stelle stehen.

LOOP AT WTOTALTAB2.
IF WTOTALTAB2-HAUSW EQ WTOTALTAB2-WAERS.
MOVE SPACE TO WTOTALTAB2-WAERS.
MODIFY WTOTALTAB2.
ENDIF.
ENDLOOP.

SORT WTOTALTAB2.
CLEAR NEWL-FLAG.
CLEAR RESERVECNTR.
DESCRIBE TABLE WTOTALTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF WGAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
* verhindert Ausgabe, falls nur Hauswaehrungszeile.
LOOP AT WTOTALTAB2.
AT FIRST.
IF WGAUSGAB = 'X'.
*        WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**       RESERVE 3 LINES.
*        WRITE: /01 SY-VLINE, 63 TEXT-003.              "pro Waehrung
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF WTOTALTAB2-HAUSW = ATOTALTAB2-HAUSW.
IF WGAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
*          WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*        WRITE:
*           85(16) WTOTALTAB2-DMSHB CURRENCY WTOTALTAB2-HAUSW.
*      keine Ausgabe bei aktueller Hauswaherung.
*       IF WTOTALTAB2-WRSHB <> 0
*       AND WTOTALTAB2-WAERS <> SPACE. "Hausw‰hrung
IF  WTOTALTAB2-WAERS <> SPACE. "Hausw‰hrung
*          WRITE:
*            108(05) WTOTALTAB2-WAERS,
*            114(16) WTOTALTAB2-WRSHB CURRENCY WTOTALTAB2-WAERS.
ENDIF.
*        WRITE: 132 SY-VLINE.
*      RESERVE 2 LINES.
ENDIF.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

SORT UTOTALTAB2.
*SUKZ-FLAG = '0'.
*LOOP AT UTOTALTAB.
*  IF UTOTALTAB-HAUSW = ATOTALTAB-HAUSW.
*    IF UTOTALTAB-UMSKZ <> '*'.            "auch Sonderumsatzkennz. da
*       SUKZ-FLAG = '1'.
*    ENDIF.
*  ENDIF.
*ENDLOOP.

CLEAR RESERVECNTR.
DESCRIBE TABLE UTOTALTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
*   IF SUKZ-FLAG = '1'.
RESERVE RESERVECNTR LINES.
*   ENDIF.
ENDIF.
LOOP AT UTOTALTAB2.
AT FIRST.
*    IF SUKZ-FLAG = '1'.
*      WRITE: /01 SY-VLINE, 63(66) SY-ULINE, 132 SY-VLINE.
**       RESERVE 3 LINES.
WRITE: /01 SY-VLINE, 63 TEXT-004."pro Umsatzart
NEWL-FLAG = '1'.
*    ENDIF.
ENDAT.

IF UTOTALTAB2-HAUSW = ATOTALTAB2-HAUSW.
*    IF SUKZ-FLAG = '1'.
IF NEWL-FLAG IS INITIAL.
*        WRITE: /01 SY-VLINE.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*       IF UTOTALTAB-UMSKZ = '*'.          "Umsatzkennzeichen SPACE
*          WRITE: 79  un.
*       ELSE.
*      WRITE: 79  UTOTALTAB2-UMSKZ.
*       ENDIF.

*      WRITE:
*         85(16) UTOTALTAB2-DMSHB CURRENCY UTOTALTAB2-HAUSW.
*      WRITE: 132 SY-VLINE.
*       RESERVE 2 LINES.
*    ENDIF.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.

CLEAR RESERVECNTR.
DESCRIBE TABLE GTOTALTAB2 LINES RESERVECNTR.
IF RESERVECNTR GT 0.
RESERVECNTR = RESERVECNTR + 2.
IF GBAUSGAB = 'X'.
RESERVE RESERVECNTR LINES.
ENDIF.
ENDIF.
SORT GTOTALTAB2.
LOOP AT GTOTALTAB2.
AT FIRST.
IF GBAUSGAB = 'X'.
NEWL-FLAG = '1'.
ENDIF.
ENDAT.

IF GTOTALTAB2-HAUSW = ATOTALTAB2-HAUSW.
IF GBAUSGAB = 'X'.
IF NEWL-FLAG IS INITIAL.
ELSE.
CLEAR NEWL-FLAG.
ENDIF.
*        WRITE:
*          79     GTOTALTAB2-GSBER,
*          85(16) GTOTALTAB2-DMSHB CURRENCY GTOTALTAB2-HAUSW.
*        WRITE: 132 SY-VLINE.
*       RESERVE 3 LINES.
ENDIF.
ENDIF.
ENDLOOP.
CLEAR NEWL-FLAG.
*WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDFORM.                                                    "TOTALTAB2

***********************************************************************

FORM ATLASTAUSGABE.
*  WRITE: /01 SY-VLINE, 02 TEXT-014.    "Summen aller BK aller Konten
IF REPIDENT = '1'.
*    WRITE: 108(15) TEXT-013,           "Stichtag
*           124(8)  DD_STIDA DD/MM/YY.
ENDIF.
*  WRITE: 132 SY-VLINE.

SORT ATOTALTAB.
LOOP AT ATOTALTAB.
RESERVE 5 LINES.
*    WRITE: /01   SY-VLINE,
*            02   TEXT-009,             "Hauswaehrung:
*                 ATOTALTAB-HAUSW,
*          85(16) ATOTALTAB-ADMSOL CURRENCY ATOTALTAB-HAUSW, S,
*          132 SY-VLINE.
*    WRITE: /01   SY-VLINE,
*          85(16) ATOTALTAB-ADMHAB CURRENCY ATOTALTAB-HAUSW, H,
*          132 SY-VLINE.

IF ATOTALTAB-ADMSHB = ATOTALTAB-DMSHB.  "keine Sonderumsatzarten
*      WRITE: /01   SY-VLINE.
**------- îÑä|ã‡çáåv
*       WRITE:
*          85(16) ATOTALTAB-ADMSHB CURRENCY ATOTALTAB-HAUSW, UN.
*      WRITE: 132 SY-VLINE.
ELSE.

**        /01   SY-VLINE,
**------- îÑä|ã‡çáåv
*       WRITE:
*          85(16) ATOTALTAB-ADMSHB CURRENCY ATOTALTAB-HAUSW, UN,
*          /85(16) ATOTALTAB-DMSHB  CURRENCY ATOTALTAB-HAUSW.
**      WRITE: 132 SY-VLINE.
ENDIF.



PERFORM TOTALTAB.  "Ausgabe nach Waehrung, Umsatzart und GB
*      SKIP 2.
ENDLOOP.                             "Atotaltab

*- îÑä|ã‡çáåv
L_ADMSHB = ATOTALTAB-ADMSHB .
* éÛìníl = îÑä|ã‡çáåv - ì¡éÍédñÛï (W)
L_DMSHB = L_ADMSHB - L_DMSHB .
EXPORT L_DMSHB TO MEMORY ID 'HK'.
STOP .
***    EXPORT ATOTALTAB TO MEMORY ID 'HK'.
***    stop .

ENDFORM.                    "ATLASTAUSGABE

***********************************************************************

FORM ATLASTAUSGABE2.
CLEAR ALTLINES.
DESCRIBE TABLE ATOTALTAB2 LINES ALTLINES.
IF NOT ALTLINES IS INITIAL.
*    WRITE: /01 SY-VLINE, 02(13) TEXT-060, 132 SY-VLINE.
"Merkposten
*      109(15) TEXT-013,          "Stichtag
*
*      124(8)  DD_STIDA DD/MM/YY.
ENDIF.

SORT ATOTALTAB2.
LOOP AT ATOTALTAB2.
RESERVE 2 LINES.
*    WRITE: /01   SY-VLINE,
*            02   TEXT-009,             "Hauswaehrung:
*                 ATOTALTAB2-HAUSW,
*            86(16) ATOTALTAB2-ADMSOL CURRENCY ATOTALTAB2-HAUSW, S,
*           /86(16) ATOTALTAB2-ADMHAB CURRENCY ATOTALTAB2-HAUSW, H.
*
*      IF ATOTALTAB-ADMSHB = ATOTALTAB-DMSHB.  "keine Sonderumsatzarten
*         WRITE:
*           /64     TEXT-002,              "Gesamtobligo
*            86(16) ATOTALTAB-ADMSHB CURRENCY ATOTALTAB-HAUSW, un.
*      ELSE.
*         WRITE:
**                  nur Umsatzart SPACE
*           /86(16) ATOTALTAB-ADMSHB CURRENCY ATOTALTAB-HAUSW, un,
*           /64     TEXT-002,              "Gesamtobligo
**                  einschliesslich Sonderumsatzarten
*          85(16) ATOTALTAB2-DMSHB  CURRENCY ATOTALTAB2-HAUSW.
*    WRITE: 132 SY-VLINE.
*      ENDIF.

PERFORM TOTALTAB2.  "Ausgabe nach Waehrung, Umsatzart und GB
*      SKIP 2.
ENDLOOP.                             "Atotaltab2
ENDFORM.                    "ATLASTAUSGABE2

***********************************************************************

FORM ANSCHRIFT1.
FORMAT COLOR COL_KEY INTENSIFIED OFF.
MOVE: SPACE    TO ADR2.
MOVE: KNA1-LAND1 TO ADR2-LAND1.
IF NOT KNA1-PSTL2 IS INITIAL.
MOVE: KNA1-PSTL2 TO ADR2-PSTLZ.
IF NOT KNA1-PFORT IS INITIAL.
MOVE: KNA1-PFORT TO ADR2-ORT01.
ELSE.
MOVE: KNA1-ORT01 TO ADR2-ORT01.
ENDIF.
ELSE.
MOVE: KNA1-PSTLZ TO ADR2-PSTLZ,
KNA1-ORT01 TO ADR2-ORT01.
ENDIF.
MOVE: KNA1-REGIO TO ADR2-REGIO.
CONDENSE ADR2.
*  WRITE:
*     /01     SY-VLINE,
*      02(04) KNB1-BUKRS,
*      07(10) SSORTFELD,
*      18(10) KNA1-KUNNR,
*      29(30) KNA1-NAME1,
*      60(20) TEXTFELD,
*      81(25) T001S-SNAME.              "Buchhaltungssachbearbeiter
IF REPIDENT = '1'.
*    WRITE:
*     108(15) TEXT-013,                 "Stichtag
*     124(8)  DD_STIDA DD/MM/YY.
ENDIF.
*  WRITE: 132 SY-VLINE.
IF NOT KNA1-NAME2 IS INITIAL.
*    WRITE: /01     SY-VLINE.
*    WRITE:  29     KNA1-NAME2.
*    WRITE: 132 SY-VLINE.
ENDIF.
IF NOT KNA1-PFACH IS INITIAL.
CLEAR TEXTFELD2.
TEXTFELD2(25)    = TEXT-070.
TEXTFELD2+25(10) = KNA1-PFACH.
CONDENSE TEXTFELD2.
*    WRITE: /01     SY-VLINE.
*    WRITE:  29     TEXTFELD2.
*    WRITE: 132 SY-VLINE.
ELSE.
IF NOT KNA1-STRAS IS INITIAL.
*      WRITE: /01     SY-VLINE.
*      WRITE:  29     KNA1-STRAS.
*      WRITE: 132 SY-VLINE.
ENDIF.
ENDIF.
*  WRITE: /01     SY-VLINE.
*  WRITE:  29     ADR2.
*  WRITE: 132 SY-VLINE.
*

*   auf Folgeseiten wird nur noch die komprimierte Anschrift ausgegeben
KNA1-FLAG = '1'.
*   skip 1.
* IF NOT KNB1-CESSION_KZ IS INITIAL.
*   WRITE: /01 SY-VLINE, 18 TEXT-045, KNB1-CESSION_KZ, 132 SY-VLINE.
* ENDIF.
IF NOT XTXTP IS INITIAL.
*    WRITE: /01 SY-VLINE, 18 TEXT-082, 132 SY-VLINE.
ENDIF.

*  WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.

IF NOT XTXTA IS INITIAL.
PERFORM AUSGABE_TEXTEA USING KNA1-KUNNR.
PERFORM AUSGABE_TEXTEB USING KNA1-KUNNR KNB1-BUKRS.
IF NOT TXTA-FLAG IS INITIAL
OR NOT TXTB-FLAG IS INITIAL.
*      WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDIF.
ENDIF.
ENDFORM.                                                    "ANSCHRIFT1

***********************************************************************

FORM ANSCHRIFT2.
FORMAT COLOR COL_KEY INTENSIFIED OFF.
MOVE: SPACE    TO ADR2.
MOVE: KNA1-LAND1 TO ADR2-LAND1.
IF NOT KNA1-PSTL2 IS INITIAL.
MOVE: KNA1-PSTL2 TO ADR2-PSTLZ.
IF NOT KNA1-PFORT IS INITIAL.
MOVE: KNA1-PFORT TO ADR2-ORT01.
ELSE.
MOVE: KNA1-ORT01 TO ADR2-ORT01.
ENDIF.
ELSE.
MOVE: KNA1-PSTLZ TO ADR2-PSTLZ,
KNA1-ORT01 TO ADR2-ORT01.
ENDIF.
MOVE: KNA1-REGIO TO ADR2-REGIO.
CONDENSE ADR2.
*  WRITE: /01     SY-VLINE.
*  WRITE:
*      02(10) KNA1-KUNNR,
*      13(04) KNB1-BUKRS,
*      18(10) SSORTFELD,
*      29(30) KNA1-NAME1,
*      60(20) TEXTFELD,
*      81(25) T001S-SNAME.              "Buchhaltungssachbearbeiter
IF REPIDENT = '1'.
*    WRITE:
*     108(15) TEXT-013,                 "Stichtag
*     124(8)  DD_STIDA DD/MM/YY.
ENDIF.
*  WRITE: 132     SY-VLINE.
IF NOT KNA1-NAME2 IS INITIAL.
*    WRITE: /01     SY-VLINE.
*    WRITE:  29     KNA1-NAME2.
*    WRITE: 132     SY-VLINE.
ENDIF.
IF NOT KNA1-PFACH IS INITIAL.
CLEAR TEXTFELD2.
TEXTFELD2(25)    = TEXT-070.
TEXTFELD2+25(10) = KNA1-PFACH.
CONDENSE TEXTFELD2.
*    WRITE: /01     SY-VLINE.
*    WRITE:  29     TEXTFELD2.
*    WRITE: 132     SY-VLINE.
ELSE.
IF NOT KNA1-STRAS IS INITIAL.
*      WRITE: /01     SY-VLINE.
*      WRITE:  29     KNA1-STRAS.
*      WRITE: 132     SY-VLINE.
ENDIF.
ENDIF.
*  WRITE: /01     SY-VLINE.
*  WRITE:  29     ADR2.
*  WRITE: 132     SY-VLINE.


*   auf Folgeseiten wird nur noch die komprimierte Anschrift ausgegeben
KNA1-FLAG = '1'.
*   SKIP.
* IF NOT KNB1-CESSION_KZ IS INITIAL.
*   WRITE: /01 SY-VLINE, 18 TEXT-045, KNB1-CESSION_KZ, 132 SY-VLINE.
* ENDIF.
IF NOT XTXTP IS INITIAL.
*    WRITE: /01 SY-VLINE, 18 TEXT-082, 132 SY-VLINE.
ENDIF.

*  WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.

IF NOT XTXTA IS INITIAL.
PERFORM AUSGABE_TEXTEA USING KNA1-KUNNR.
PERFORM AUSGABE_TEXTEB USING KNA1-KUNNR KNB1-BUKRS.
IF NOT TXTA-FLAG IS INITIAL
OR NOT TXTB-FLAG IS INITIAL.
*      WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDIF.
ENDIF.
ENDFORM.                                                    "ANSCHRIFT2

***********************************************************************

FORM ANSCHRIFT3.
FORMAT COLOR COL_KEY INTENSIFIED OFF.
MOVE: SPACE    TO ADR2.
MOVE: KNA1-LAND1 TO ADR2-LAND1.
IF NOT KNA1-PSTL2 IS INITIAL.
MOVE: KNA1-PSTL2 TO ADR2-PSTLZ.
IF NOT KNA1-PFORT IS INITIAL.
MOVE: KNA1-PFORT TO ADR2-ORT01.
ELSE.
MOVE: KNA1-ORT01 TO ADR2-ORT01.
ENDIF.
ELSE.
MOVE: KNA1-PSTLZ TO ADR2-PSTLZ,
KNA1-ORT01 TO ADR2-ORT01.
ENDIF.
MOVE: KNA1-REGIO TO ADR2-REGIO.
CONDENSE ADR2.
*  WRITE: /01     SY-VLINE.
*  WRITE:
*      02(10) KNA1-KUNNR,
*      13(04) KNB1-BUKRS,
*      18(10) SSORTFELD,
*      29(30) KNA1-NAME1,
*      60(20) TEXTFELD,
*      81(25) T001S-SNAME.              "Buchhaltungssachbearbeiter
IF REPIDENT = '1'.
*    WRITE:
*     108(15) TEXT-013,                 "Stichtag
*     124(8)  DD_STIDA DD/MM/YY.
ENDIF.
*  WRITE: 132 SY-VLINE.
*   auf Folgeseiten wird nur noch die komprimierte Anschrift ausgegeben
KNA1-FLAG = '1'.
*   SKIP.
IF NOT XTXTP IS INITIAL.
*    WRITE: /01 SY-VLINE, 18 TEXT-082, 132 SY-VLINE.
ENDIF.

* IF NOT KNB1-CESSION_KZ IS INITIAL.
*   WRITE: /01 SY-VLINE, 18 TEXT-045, KNB1-CESSION_KZ, 132 SY-VLINE.
* ENDIF.

*  WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.

IF NOT XTXTA IS INITIAL.
PERFORM AUSGABE_TEXTEA USING KNA1-KUNNR.
PERFORM AUSGABE_TEXTEB USING KNA1-KUNNR KNB1-BUKRS.
IF NOT TXTA-FLAG IS INITIAL
OR NOT TXTB-FLAG IS INITIAL.
*      WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDIF.
ENDIF.
ENDFORM.                                                    "ANSCHRIFT3

***********************************************************************

* Ausgabe der Einzelpostenzeile
FORM EP-AUSGABE.

* Falls Sortierung nach Umsatzkennzeichen, wird zu Beginn jedes neuen
* Sonderumsatzkennzeichens der Langtext aus T074t angedruckt.
IF SU-FLAG = '1'.                    "neues Sonderumsatzkennzeichen
SU-FLAG = '0'.
IF P_SORTKZ = '1'.                 "Sortierung nach Umsatzkennzeiche
IF BSID-UMSKZ = SPACE.
"keine Sonderhauptbuchvorgaenge
ELSE.
T074T-SPRAS = SY-LANGU.
T074T-KOART = 'D'.
T074T-SHBKZ = BSID-UMSKZ.
READ TABLE T074T.
IF SY-SUBRC IS INITIAL.
RESERVE 5 LINES.
FORMAT COLOR COL_HEADING INTENSIFIED OFF.
*             WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
*          WRITE: /01 SY-VLINE, 02 T074T-LTEXT, 132 SY-VLINE.
*          WRITE: /01 SY-VLINE, 02 SY-ULINE(130), 132 SY-VLINE.
ENDIF.
ENDIF.
ENDIF.                             "if p-sortkz = '1'
ENDIF.                               "if su-flag = '1'
RESERVE 4 LINES.
* DETAIL.
IF INTENS IS INITIAL.
FORMAT COLOR COL_NORMAL INTENSIFIED OFF.
INTENS = 'X'.
ELSE.
FORMAT COLOR COL_NORMAL INTENSIFIED.
INTENS = ' '.
ENDIF.
IF NOT BSID-XNEGP IS INITIAL.
BSID-XNEGP = '-'.
ENDIF.
IF REPIDENT = '1'.
*    WRITE: /01 SY-VLINE,
*         02  BSID-ZUONR,
**            BSID-BUDAT DDMMYY, "VSW
*        (06) BSID-BUDAT DDMMYY,
*             BSID-BLART,
*             BSID-BELNR,
**            BSID-BLDAT DDMMYY, "VSW
*        (06) BSID-BLDAT DDMMYY,
*             BSID-GSBER,
*        (03) BSID-BUZEI.
IF BSID-XNEGP IS INITIAL.
*      WRITE:   BSID-BSCHL.
ELSE.
*      WRITE:   BSID-BSCHL NO-GAP,
*               BSID-XNEGP NO-GAP.
ENDIF.
*    WRITE:   BSID-MANST,
*         63  BSID-ZLSCH,
*      65(16) BSID-SKFBT CURRENCY BSID-WAERS NO-ZERO,
*        (06) BSID-ZFBDT DDMMYY NO-ZERO,
*        (03) BSID-ZBD1T NO-ZERO,
*        (05) BSID-ZBD1P NO-ZERO DECIMALS 2,
*        (06) BSEGA-NETDT DDMMYY NO-ZERO,
*     106     BSID-UMSKZ,
*     108(05) BSID-WAERS.
ELSE.
*    WRITE: /01 SY-VLINE,
*         02  BSID-ZUONR,
**          BSID-BUDAT DDMMYY, "VSW
*        (06) BSID-BUDAT DDMMYY,
*             BSID-BLART,
*             BSID-BELNR,
**          BSID-BLDAT DDMMYY, "VSW
*        (06) BSID-BLDAT DDMMYY,
*             BSID-GSBER,
*        (03) BSID-BUZEI.
IF BSID-XNEGP IS INITIAL.
*      WRITE:   BSID-BSCHL.
ELSE.
*      WRITE:   BSID-BSCHL NO-GAP,
*               BSID-XNEGP NO-GAP.
ENDIF.
*    WRITE:   BSID-MANST,
*         63  BSID-ZLSCH,
*         65  BSID-AUGDT NO-ZERO DDMMYY,
*         72  BSID-AUGBL NO-ZERO.
IF GKONTO IS INITIAL.
*      WRITE:
*        83(16) BSID-SKNTO NO-ZERO
*               CURRENCY T001-WAERS.
ELSE.
*      WRITE:
*        83 BSEGA-GKART,
*        88 BSEGA-GKONT.
ENDIF.
IF REPIDENT = '3'.
*      WRITE:
*      102     BSID-RSTGR.
ENDIF.
*   WRITE:
*    106     BSID-UMSKZ,
*    108(05) BSID-WAERS.
ENDIF.

IF BSID-WAERS = T001-WAERS.          "in Hauswaehrung gebucht
*    WRITE:   114(16) BSEGA-DMSHB CURRENCY T001-WAERS NO-ZERO.
*    WRITE:   131 TEXT-FLAG.
*    WRITE:   132 SY-VLINE.
*     PERFORM AUS-XBLNR.
IF BSID-XBLNR <> SPACE.
*      WRITE:  /01 SY-VLINE,
*               21 TEXT-051,
*               31 BSID-XBLNR,
*               49 BSID-SGTXT.
*      WRITE:   132 SY-VLINE.
IF NOT BSID-CESSION_KZ IS INITIAL.
LOOP AT HTCESSIONT
WHERE LANGU      = SY-LANGU
AND   COMPANY    = BSID-BUKRS
AND   CESSION_KZ = BSID-CESSION_KZ.
TCESSIONT = HTCESSIONT.
EXIT.
ENDLOOP.
*        WRITE:  /01 SY-VLINE,
*                 21 TEXT-045,
*                    BSID-CESSION_KZ, TCESSIONT-CESSION_TEXT.
*        WRITE:   132 SY-VLINE.
ENDIF.
ELSE.
IF BSID-SGTXT NE SPACE.
*        WRITE:  /01 SY-VLINE,
*                 49 BSID-SGTXT.
*        WRITE:   132 SY-VLINE.
IF NOT BSID-CESSION_KZ IS INITIAL.
LOOP AT HTCESSIONT
WHERE LANGU      = SY-LANGU
AND   COMPANY    = BSID-BUKRS
AND   CESSION_KZ = BSID-CESSION_KZ.
TCESSIONT = HTCESSIONT.
EXIT.
ENDLOOP.
*          WRITE:  /01 SY-VLINE,
*                   21 TEXT-045,
*                      BSID-CESSION_KZ, TCESSIONT-CESSION_TEXT. .
*          WRITE:   132 SY-VLINE.
ENDIF.
ELSE.
IF NOT BSID-CESSION_KZ IS INITIAL.
LOOP AT HTCESSIONT
WHERE LANGU      = SY-LANGU
AND   COMPANY    = BSID-BUKRS
AND   CESSION_KZ = BSID-CESSION_KZ.
TCESSIONT = HTCESSIONT.
EXIT.
ENDLOOP.
*          WRITE:  /01 SY-VLINE,
*                   21 TEXT-045,
*                      BSID-CESSION_KZ, TCESSIONT-CESSION_TEXT.
*          WRITE:   132 SY-VLINE.
ENDIF.
ENDIF.
ENDIF.
*     WRITE:
*             /48      BSID-SGTXT.
ELSE.                                "in Fremdwaehrung gebucht
*    WRITE:   114(16) BSEGA-WRSHB CURRENCY BSID-WAERS   NO-ZERO.
*    WRITE:   131 TEXT-FLAG.
*    WRITE:   132 SY-VLINE.
*     PERFORM AUS-XBLNR.
*     Ggf. wird der entsprechende Hauswaehrungsbetrag mit ausgegeben.
IF WGAUSGAB = 'X'.
IF BSID-SGTXT <> SPACE.
IF BSID-XBLNR <> SPACE.
*          WRITE:  /01 SY-VLINE,
*                   21 TEXT-051,
*                   31 BSID-XBLNR,
*                   49 BSID-SGTXT,
*                   108(05) T001-WAERS,
*                   114(16) BSEGA-DMSHB CURRENCY T001-WAERS NO-ZERO.
*          WRITE:   132 SY-VLINE.
IF NOT BSID-CESSION_KZ IS INITIAL.
LOOP AT HTCESSIONT
WHERE LANGU      = SY-LANGU
AND   COMPANY    = BSID-BUKRS
AND   CESSION_KZ = BSID-CESSION_KZ.
TCESSIONT = HTCESSIONT.
EXIT.
ENDLOOP.
*            WRITE:  /01 SY-VLINE,
*                     21 TEXT-045,
*                        BSID-CESSION_KZ, TCESSIONT-CESSION_TEXT.
*            WRITE:   132 SY-VLINE.
ENDIF.
ELSE.
*          WRITE:  /01 SY-VLINE,
*                   49  BSID-SGTXT,
*                   108(05) T001-WAERS,
*                   114(16) BSEGA-DMSHB CURRENCY T001-WAERS NO-ZERO.
*          WRITE:   132 SY-VLINE.
IF NOT BSID-CESSION_KZ IS INITIAL.
LOOP AT HTCESSIONT
WHERE LANGU      = SY-LANGU
AND   COMPANY    = BSID-BUKRS
AND   CESSION_KZ = BSID-CESSION_KZ.
TCESSIONT = HTCESSIONT.
EXIT.
ENDLOOP.
*            WRITE:  /01 SY-VLINE,
*                     21 TEXT-045,
*                        BSID-CESSION_KZ, TCESSIONT-CESSION_TEXT.
*            WRITE:   132 SY-VLINE.
ENDIF.
ENDIF.
ELSE.
IF BSID-XBLNR <> SPACE.
*          WRITE:  /01 SY-VLINE,
*                   21 TEXT-051,
*                   31 BSID-XBLNR,
*                   108(05) T001-WAERS,
*                   114(16) BSEGA-DMSHB CURRENCY T001-WAERS NO-ZERO.
*          WRITE:   132 SY-VLINE.
IF NOT BSID-CESSION_KZ IS INITIAL.
LOOP AT HTCESSIONT
WHERE LANGU      = SY-LANGU
AND   COMPANY    = BSID-BUKRS
AND   CESSION_KZ = BSID-CESSION_KZ.
TCESSIONT = HTCESSIONT.
EXIT.
ENDLOOP.
*            WRITE:  /01 SY-VLINE,
*                     21 TEXT-045,
*                        BSID-CESSION_KZ, TCESSIONT-CESSION_TEXT.
*            WRITE:   132 SY-VLINE.
ENDIF.
ELSE.
*          WRITE:  /01 SY-VLINE,
*                   108(05) T001-WAERS,
*                   114(16) BSEGA-DMSHB CURRENCY T001-WAERS NO-ZERO.
*          WRITE:   132 SY-VLINE.
IF NOT BSID-CESSION_KZ IS INITIAL.
LOOP AT HTCESSIONT
WHERE LANGU      = SY-LANGU
AND   COMPANY    = BSID-BUKRS
AND   CESSION_KZ = BSID-CESSION_KZ.
TCESSIONT = HTCESSIONT.
EXIT.
ENDLOOP.
*            WRITE:  /01 SY-VLINE,
*                     21 TEXT-045,
*                        BSID-CESSION_KZ, TCESSIONT-CESSION_TEXT.
*            WRITE:   132 SY-VLINE.
ENDIF.
ENDIF.
ENDIF.
ELSE.
IF BSID-XBLNR <> SPACE.
*        WRITE:  /01 SY-VLINE,
*                 21 TEXT-051,
*                 31 BSID-XBLNR,
*                 49 BSID-SGTXT.
*        WRITE:   132 SY-VLINE.
IF NOT BSID-CESSION_KZ IS INITIAL.
LOOP AT HTCESSIONT
WHERE LANGU      = SY-LANGU
AND   COMPANY    = BSID-BUKRS
AND   CESSION_KZ = BSID-CESSION_KZ.
TCESSIONT = HTCESSIONT.
EXIT.
ENDLOOP.
*          WRITE:  /01 SY-VLINE,
*                   21 TEXT-045,
*                      BSID-CESSION_KZ, TCESSIONT-CESSION_TEXT.
*          WRITE:   132 SY-VLINE.
ENDIF.
ELSE.
IF BSID-SGTXT NE SPACE.
*          WRITE:  /01 SY-VLINE,
*                   49 BSID-SGTXT.
*          WRITE:   132 SY-VLINE.
IF NOT BSID-CESSION_KZ IS INITIAL.
LOOP AT HTCESSIONT
WHERE LANGU      = SY-LANGU
AND   COMPANY    = BSID-BUKRS
AND   CESSION_KZ = BSID-CESSION_KZ.
TCESSIONT = HTCESSIONT.
EXIT.
ENDLOOP.
*            WRITE:  /01 SY-VLINE,
*                     21 TEXT-045,
*                        BSID-CESSION_KZ, TCESSIONT-CESSION_TEXT.
*            WRITE:   132 SY-VLINE.
ENDIF.
ENDIF.
ENDIF.
ENDIF.                             "if wgausgab = 'X'
ENDIF.                               "if bk-waers = t001-waers

IF NOT XTXTA IS INITIAL.
PERFORM AUSGABE_TEXTE USING BSID-BUKRS BSID-BELNR BSID-GJAHR.
ENDIF.
*  SUMMARY.
ENDFORM.                    "EP-AUSGABE

***********************************************************************
*
*ORM AUS-XBLNR.
*    IF  BSID-XBLNR <> SPACE.
*        WRITE: /30 TEXT-051, BSID-XBLNR.
*    ENDIF.
*NDFORM.

***********************************************************************

FORM CPDCOND.
*      SELECT SINGLE * FROM  BSEC
*             WHERE BUKRS = KNB1-BUKRS
*             AND   BELNR = BSID-BELNR
*             AND   GJAHR = BSID-GJAHR
*             AND   BUZEI = BSID-BUZEI.

FORMAT COLOR COL_KEY INTENSIFIED OFF.

IF BSID-BSTAT = 'V'
OR BSID-BSTAT = 'W'.
SELECT SINGLE * FROM  VBSEC
WHERE AUSBK = KNB1-BUKRS
AND   BELNR = BSID-BELNR
AND   GJAHR = BSID-GJAHR
AND   BUZEI = BSID-BUZEI.
MOVE-CORRESPONDING VBSEC TO BSEC.
ELSE.
CALL FUNCTION 'READ_BSEC'
EXPORTING
XBELNR         = BSID-BELNR
XBUKRS         = KNB1-BUKRS
XBUZEI         = BSID-BUZEI
XGJAHR         = BSID-GJAHR
IMPORTING
XBSEC          = BSEC
EXCEPTIONS
KEY_INCOMPLETE = 01
NOT_AUTHORIZED = 02
NOT_FOUND      = 03.
ENDIF.

IF  SY-SUBRC = 0.
MOVE: SPACE    TO CPDINFO,
BSEC-NAME1 TO CPDINFO-NAME1,
BSEC-NAME2 TO CPDINFO-NAME2.
IF NOT BSEC-PFACH IS INITIAL.
CPDINFO-STRAS(25)    = TEXT-070.
CPDINFO-STRAS+25(10) = BSEC-PFACH.
CONDENSE CPDINFO-STRAS.
ELSE.
MOVE: BSEC-STRAS TO CPDINFO-STRAS.
ENDIF.
IF NOT BSEC-LAND1 IS INITIAL.
MOVE: BSEC-LAND1 TO CPDINFO-LAND1.
ELSE.
MOVE: KNA1-LAND1 TO CPDINFO-LAND1.
ENDIF.
IF NOT BSEC-PSTL2 IS INITIAL.
MOVE: BSEC-PSTL2 TO CPDINFO-PSTLZ.
ELSE.
MOVE: BSEC-PSTLZ TO CPDINFO-PSTLZ.
ENDIF.
MOVE: BSEC-ORT01 TO CPDINFO-ORT01,
BSEC-REGIO TO CPDINFO-REGIO.
CONDENSE CPDINFO.
ELSE.
MOVE: TEXT-050 TO CPDINFO.
ENDIF.

IF SKIP-FLAG = '1'.                  "Skip unterdruecken
SKIP-FLAG = '0'.
ELSE.
*    WRITE: /01 SY-VLINE,  132 SY-VLINE.
*        SKIP.
ENDIF.

RESERVE 5 LINES.
*  WRITE: /01 SY-VLINE,  02 CPDINFO(130), 132 SY-VLINE.
ENDFORM.                    "CPDCOND

***********************************************************************

FORM MIF1-FUELLEN.
MIF1-BUKRS       = KNB1-BUKRS.
MIF1-SSORTFELD   = SSORTFELD.
MIF1-KUNNR       = KNA1-KUNNR.

IF VD_STUFE = '1' AND ZW_SUMME = SPACE.
"Psortfeld wird in der Liste nicht mit ausgegeben
ELSE.
IF P_SORTKZ = '1'  AND  PSORTFELD = '*'.
MIF1-PSORTFELD = '   '.
ELSE.
MIF1-PSORTFELD = PSORTFELD.
ENDIF.
ENDIF.

IF VD_STUFE = '0'.
MIF1-ZUONR    = BSID-ZUONR.
MIF1-BUDAT    = BSID-BUDAT.
MIF1-WAERS    = BSID-WAERS.
MIF1-UMSKZ    = BSID-UMSKZ.
MIF1-GSBER    = BSID-GSBER.
ELSE.
"Felder werden in der Liste nicht mit ausgegeben
ENDIF.

BHDGD-GRPIN = MIF1.
ENDFORM.                    "MIF1-FUELLEN

***********************************************************************

FORM MIF2-FUELLEN.
MIF2-KUNNR       = KNA1-KUNNR.
MIF2-BUKRS       = KNB1-BUKRS.
MIF2-SSORTFELD   = SSORTFELD.

IF VD_STUFE = '1' AND ZW_SUMME = SPACE.
"Psortfeld wird in der Liste nicht mit ausgegeben
ELSE.
IF P_SORTKZ = '1'  AND  PSORTFELD = '*'.
MIF2-PSORTFELD = '   '.
ELSE.
MIF2-PSORTFELD = PSORTFELD.
ENDIF.
ENDIF.

IF VD_STUFE = '0'.
MIF2-ZUONR    = BSID-ZUONR.
MIF2-BUDAT    = BSID-BUDAT.
MIF2-WAERS    = BSID-WAERS.
MIF2-UMSKZ    = BSID-UMSKZ.
MIF2-GSBER    = BSID-GSBER.
ELSE.
"Felder werden in der Liste nicht mit ausgegeben
ENDIF.

BHDGD-GRPIN = MIF2.
ENDFORM.                    "MIF2-FUELLEN

***********************************************************************

FORM MIF1-LOESCHEN.
IF VD_STUFE = '0'.
MIF1-ZUONR    = SPACE.
MIF1-BUDAT    = SPACE.
MIF1-WAERS    = SPACE.
MIF1-UMSKZ    = SPACE.
MIF1-GSBER    = SPACE.
ELSE.                                "vd-stufe = '1'
"mif1 Felder nicht gefuellt
ENDIF.                               "if vd-stufe = '0'

BHDGD-GRPIN   = MIF1.
ENDFORM.                    "MIF1-LOESCHEN

***********************************************************************

FORM MIF2-LOESCHEN.
IF VD_STUFE = '0'.
MIF2-ZUONR    = SPACE.
MIF2-BUDAT    = SPACE.
MIF2-WAERS    = SPACE.
MIF2-UMSKZ    = SPACE.
MIF2-GSBER    = SPACE.
ELSE.                                "vd-stufe = '1'
"mif2 Felder nicht gefuellt
ENDIF.                               "if vd-stufe = '0'

BHDGD-GRPIN   = MIF2.
ENDFORM.                    "MIF2-LOESCHEN

************************************************************************
* FÅElt die Feldleiste 'Sortfolge' zur sp‰teren Ausgabe der Sortier-
* reihenfolge bei TOP-OP-PAGE.

FORM SORTFOLGEFUELLEN.
SORTFOLGE-KOPF = TEXT-036.           "Sortierung

IF KONZVERS  = SPACE.                "Normalversion

SORTFOLGE-A = TEXT-018.                                 "BK

CASE S_SORTKZ.
WHEN '1'.
SORTFOLGE-B = TEXT-019.        "Abstimmkto.
WHEN '2'.
SORTFOLGE-B = TEXT-008.        "Land
WHEN '3'.
SORTFOLGE-B = TEXT-020.        "Konzern
WHEN '4'.
SORTFOLGE-B = TEXT-021.        "Firmenverbund
WHEN '5'.
SORTFOLGE-B = TEXT-022.        "Branche
WHEN '6'.
SORTFOLGE-B = TEXT-035.        "Sachbearbeiter
WHEN '7'.
SORTFOLGE-B = TEXT-023.        "Kurzbez.
WHEN '8'.
*           Ausgabe 'Konto' wird unterdrÅEkt, da sonst doppelt.
WHEN '9'.
SORTFOLGE-B = TEXT-045.        "Zessionskz.
ENDCASE.

SORTFOLGE-C = TEXT-024.            "Konto

ELSE.                                "Konzernversion

SORTFOLGE-A = TEXT-024.            "Konto
SORTFOLGE-B = TEXT-018.                                 "BK

CASE S_SORTKZ.

WHEN '1'.
SORTFOLGE-B = TEXT-019.        "Abstimmkto.
WHEN '2'.
SORTFOLGE-B = TEXT-008.        "Land
WHEN '3'.
SORTFOLGE-B = TEXT-020.        "Konzern
WHEN '4'.
SORTFOLGE-B = TEXT-021.        "Firmenverbund
WHEN '5'.
SORTFOLGE-B = TEXT-022.        "Branche
WHEN '6'.
SORTFOLGE-B = TEXT-035.        "Sachbearbeiter
WHEN '7'.
SORTFOLGE-B = TEXT-023.        "Kurzbez.
WHEN '8'.
*           Ausgabe 'Konto' wird unterdrÅEkt, da sonst doppelt.
WHEN '9'.
SORTFOLGE-B = TEXT-045.        "Zession.
ENDCASE.
ENDIF.                               "if konzenrvers = space.


CASE P_SORTKZ.

WHEN '1'.
SORTFOLGE-D = TEXT-039.          "Umsatzkz.
WHEN '2'.
SORTFOLGE-D = TEXT-037.          "Zuordnr.
WHEN '3'.
SORTFOLGE-D = TEXT-027.          "Buchungsdatum
WHEN '4'.
SORTFOLGE-D = TEXT-028.          "F‰lligkeit
WHEN '5'.
SORTFOLGE-D = TEXT-030.          "Belegdatum
WHEN '6'.
SORTFOLGE-D = TEXT-031.          "Gesch.bereich
WHEN '7'.
SORTFOLGE-D = TEXT-032.          "Mahnschl.
WHEN '8'.
sortfolge-d = text-083.          "Rebzg.
ENDCASE.

* If -Abfragen verhindern diel doppelte Ausgabe
IF P_SORTKZ <> '2'.
SORTFOLGE-E = TEXT-037.            "Zuordnr.
ENDIF.

IF P_SORTKZ <> '3'.
SORTFOLGE-F = TEXT-027.            "Buchungsdatum
ENDIF.

SORTFOLGE-G = TEXT-038.              "W‰hrung

IF P_SORTKZ <> '1'.
SORTFOLGE-H = TEXT-039.            "Umsatzkz
ENDIF.

IF P_SORTKZ <> '6'.
SORTFOLGE-H = TEXT-031.            "Gesch.bereich
ENDIF.

CONDENSE SORTFOLGE.
ENDFORM.                    "SORTFOLGEFUELLEN

*---------------------------------------------------------------------*
*       FORM SUMUEBERSCHRIFT                                          *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM SUMUEBERSCHRIFT.
************************************************************************
* Ausgabe der ‹berschirftenzeile, falle Einzelposten uterdrueckt werden

FORMAT COLOR COL_HEADING INTENSIFIED.

IF KONZVERS  = SPACE.                "Normalversion

*    WRITE: /01 SY-VLINE.
*    WRITE:  02(04) TEXT-018.                                "BK

*    CASE S_SORTKZ.
*      WHEN '1'.
*        WRITE: 07(10) TEXT-019.        "Abstimmkto.
*      WHEN '2'.
*        WRITE: 07(10) TEXT-008.        "Land
*      WHEN '3'.
*        WRITE: 07(10) TEXT-020.        "Konzern
*      WHEN '4'.
*        WRITE: 07(10) TEXT-021.        "Firmenverbund
*      WHEN '5'.
*        WRITE: 07(10) TEXT-022.        "Branche
*      WHEN '6'.
*        WRITE: 07(10) TEXT-035.        "Sachbearbeiter
*      WHEN '7'.
*        WRITE: 07(10) TEXT-023.        "Kurzbez.
*      WHEN '8'.
**           Ausgabe 'Konto' wird unterdrÅEkt, da sonst doppelt.
*      WHEN '9'.
*        WRITE: 07(10) TEXT-045.        "Zessionskz.
*    ENDCASE.

*    WRITE: 18(10) TEXT-024.            "Konto.

IF ZW_SUMME = 'X'.                 "Zwischensummenausgabe
"gem‰ﬂ Sortierreihenfolge
*      CASE P_SORTKZ.
*
*        WHEN '1'.
*          WRITE: 29(15) TEXT-025.      "Umsatzkz.
*        WHEN '2'.
*          WRITE: 29(15) TEXT-026.      "Zuordnr.
*        WHEN '3'.
*          WRITE: 29(15) TEXT-027.      "Buchungsdatum
*        WHEN '4'.
*          WRITE: 29(15) TEXT-028.      "F‰lligkeit
*        WHEN '5'.
*          WRITE: 29(15) TEXT-030.      "Belegdatum
*        WHEN '6'.
*          WRITE: 29(15) TEXT-031.      "Gesch.Bereich
*        WHEN '7'.
*          WRITE: 29(15) TEXT-029.      "Skonto1-F‰lligkeit
*        WHEN '8'.
*          WRITE: 29(15) text-083.      "Rebzg.
*
*      ENDCASE.

ENDIF.                             "if zw-summe = 'X'.

*    WRITE:  77(05) TEXT-033,           "W‰hr
*            85(16) TEXT-034.           "..in Belegw‰hr
*
*    WRITE: 108(05) TEXT-033,           "W‰hr
*           114(16) TEXT-034.           "..in Belegw‰hr
*
*    WRITE: 132 SY-VLINE.
ELSE.                                "Konzernversion

*    WRITE: /01 SY-VLINE.
*    WRITE: 02(10) TEXT-024,            "Konto
*           13(04) TEXT-018.                                 "BK

*    CASE S_SORTKZ.
*      WHEN '1'.
*        WRITE: 18(10) TEXT-019.        "Abstimmkto.
*      WHEN '2'.
*        WRITE: 18(10) TEXT-008.        "Land
*      WHEN '3'.
*        WRITE: 18(10) TEXT-020.        "Konzern
*      WHEN '4'.
*        WRITE: 18(10) TEXT-021.        "Firmenverbund
*      WHEN '5'.
*        WRITE: 18(10) TEXT-022.        "Branche
*      WHEN '6'.
*        WRITE: 18(10) TEXT-035.        "Sachbearbeiter
*      WHEN '7'.
*        WRITE: 18(10) TEXT-023.        "Kurzbez.
*      WHEN '8'.
**           Ausgabe 'Konto' wird unterdrÅEkt, da sonst doppelt.
*      WHEN '9'.
*        WRITE: 18(10) TEXT-045.        "Zessionskz.
*    ENDCASE.


IF ZW_SUMME = 'X'.                 "Zwischensummenausgabe
"gem‰ﬂ Sortierreihenfolge
*      CASE P_SORTKZ.
*
*        WHEN '1'.
*          WRITE: 29(15) TEXT-025.      "Umsatzkz.
*        WHEN '2'.
*          WRITE: 29(15) TEXT-026.      "Zuordnr.
*        WHEN '3'.
*          WRITE: 29(15) TEXT-027.      "Buchungsdatum
*        WHEN '4'.
*          WRITE: 29(15) TEXT-028.      "F‰lligkeit
*        WHEN '5'.
*          WRITE: 29(15) TEXT-030.      "Belegdatum
*        WHEN '6'.
*          WRITE: 29(15) TEXT-031.      "Gesch.Bereich
*        WHEN '7'.
*          WRITE: 29(15) TEXT-032.      "MahnschlÅEsel
*        WHEN '8'.
*          WRITE: 29(15) text-083.      "Rebzg
*      ENDCASE.
ENDIF.                             "if zw-summe = 'X'.

*    WRITE:  77(05) TEXT-033,           "W‰hr
*            85(16) TEXT-034.           "..in Belegw‰hr
*
*    WRITE: 108(05) TEXT-033,           "W‰hr
*           114(16) TEXT-034.           "..in Belegw‰hr
*
*    WRITE 132 SY-VLINE.
ENDIF.                               "if konzvers = space
ENDFORM.                               "sumueberschrift

*---------------------------------------------------------------------*
* FORM GET_SAKAN                                                *
*---------------------------------------------------------------------*
* Sachkontonummer in spezifischer L‰nge besorgen.               *
*---------------------------------------------------------------------*
FORM GET_SAKAN.
CLEAR SKA1.
IF BSID-BUKRS NE T001-BUKRS.
LOOP AT HT001
WHERE BUKRS = BSID-BUKRS.
MOVE-CORRESPONDING HT001 TO T001.
EXIT.
ENDLOOP.
IF SY-SUBRC NE 0.
SELECT SINGLE * FROM T001
WHERE BUKRS = BSID-BUKRS.
IF SY-SUBRC = 0.
MOVE-CORRESPONDING T001 TO HT001.
APPEND HT001.
ELSE.

*    Schreiben Protokollsatz
CLEAR FIMSG.
FIMSG-MSORT = '0001'.
FIMSG-MSGID = 'FR'.
FIMSG-MSGTY = 'I'.
FIMSG-MSGNO = '321'.
FIMSG-MSGV1 = BSID-BUKRS.

CALL FUNCTION 'FI_MESSAGE_COLLECT'
EXPORTING
I_FIMSG       = FIMSG
I_XAPPN       = ' '
EXCEPTIONS
MSGID_MISSING = 01
MSGNO_MISSING = 02
MSGTY_MISSING = 03.
ENDIF.
ENDIF.
ENDIF.
LOOP AT SAKANTAB
WHERE KTOPL = T001-KTOPL
AND   SAKNR = ABSTKONT.
SKA1-SAKAN = SAKANTAB-SAKAN.
EXIT.
ENDLOOP.
IF SY-SUBRC NE 0.
SELECT SINGLE * FROM SKA1
WHERE KTOPL = T001-KTOPL
AND   SAKNR = ABSTKONT.
IF SY-SUBRC = 0.
MOVE-CORRESPONDING SKA1 TO SAKANTAB.
APPEND SAKANTAB.
ELSE.
CLEAR FIMSG.
FIMSG-MSORT = '0005'.
FIMSG-MSGID = 'FR'.
FIMSG-MSGTY = 'I'.
FIMSG-MSGNO = '322'.
FIMSG-MSGV1 = ABSTKONT.
FIMSG-MSGV2 = BSID-BUKRS.

CALL FUNCTION 'FI_MESSAGE_COLLECT'
EXPORTING
I_FIMSG       = FIMSG
I_XAPPN       = ' '
EXCEPTIONS
MSGID_MISSING = 01
MSGNO_MISSING = 02
MSGTY_MISSING = 03.
ENDIF.
ENDIF.
ENDFORM.                    "GET_SAKAN

*---------------------------------------------------------------------*
*       FORM  AUSGABE_TEXTE                                           *
*---------------------------------------------------------------------*
*       Texte                                                         *
*---------------------------------------------------------------------*
FORM AUSGABE_TEXTE USING BUKRS BELNR GJAHR.
CLEAR TDNAME.
TDNAME      = BUKRS.
TDNAME+4    = BELNR.
TDNAME+14   = GJAHR.
LOOP AT TXTTAB.
SELECT * FROM STXH
WHERE TDOBJECT = 'BELEG'
AND   TDNAME   = TDNAME
AND   TDID     = TXTTAB-TDID.
REFRESH EDTEXT.
THEAD-TDOBJECT    = 'BELEG'.
THEAD-TDID        = TXTTAB-TDID.
THEAD-TDNAME      = TDNAME.
THEAD-TDSPRAS     = STXH-TDSPRAS.
TDTEXT = TXTTAB-TDTEXT.
PERFORM AUSGABE_TEXTE_LINES.
ENDSELECT.
ENDLOOP.
FORMAT COLOR OFF.
ENDFORM.                    "AUSGABE_TEXTE

*---------------------------------------------------------------------*
*       FORM  AUSGABE_TEXTEA                                          *
*---------------------------------------------------------------------*
*       Texte                                                         *
*---------------------------------------------------------------------*
FORM AUSGABE_TEXTEA USING KONTO.
CLEAR TDNAME.
TDNAME      = KONTO.
LOOP AT TXTTABA.
SELECT * FROM STXH
WHERE TDOBJECT = 'KNA1'
AND   TDNAME   = TDNAME
AND   TDID     = TXTTABA-TDID.
REFRESH EDTEXT.
THEAD-TDOBJECT    = 'KNA1'.
THEAD-TDID        = TXTTABA-TDID.
THEAD-TDNAME      = KONTO.
THEAD-TDSPRAS     = STXH-TDSPRAS.
TDTEXT = TXTTABA-TDTEXT.
PERFORM AUSGABE_TEXTE_LINES.
ENDSELECT.
ENDLOOP.
FORMAT COLOR OFF.
ENDFORM.                    "AUSGABE_TEXTEA

*---------------------------------------------------------------------*
*       FORM  AUSGABE_TEXTEB                                          *
*---------------------------------------------------------------------*
*       Texte                                                         *
*---------------------------------------------------------------------*
FORM AUSGABE_TEXTEB USING KONTO BUKRS.
CLEAR TDNAME.
TDNAME      = KONTO.
TDNAME+10   = BUKRS.
LOOP AT TXTTABB.
SELECT * FROM STXH
WHERE TDOBJECT = 'KNB1'
AND   TDNAME   = TDNAME
AND   TDID     = TXTTABB-TDID.
REFRESH EDTEXT.
THEAD-TDOBJECT    = 'KNB1'.
THEAD-TDID        = TXTTABB-TDID.
THEAD-TDNAME      = TDNAME.
THEAD-TDSPRAS     = STXH-TDSPRAS.
TDTEXT = TXTTABB-TDTEXT.
PERFORM AUSGABE_TEXTE_LINES.
ENDSELECT.
ENDLOOP.
FORMAT COLOR OFF.
ENDFORM.                    "AUSGABE_TEXTEB

*---------------------------------------------------------------------*
*       FORM  AUSGABE_TEXTE_LINES                                     *
*---------------------------------------------------------------------*
*       Texte                                                         *
*---------------------------------------------------------------------*
FORM AUSGABE_TEXTE_LINES.
*-------- Text einlesen ----------------------------------------------*
REFRESH EDTEXT.
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID        = THEAD-TDID
LANGUAGE  = THEAD-TDSPRAS
NAME      = THEAD-TDNAME
OBJECT    = THEAD-TDOBJECT
IMPORTING
HEADER    = THEAD
TABLES
LINES     = EDTEXT
EXCEPTIONS
NOT_FOUND = 4
OTHERS    = 8.
CHECK SY-SUBRC = 0.

* ------ Text ausgeben -------------------------------------------------
FORMAT COLOR COL_NORMAL INTENSIFIED OFF.
*   FORMAT COLOR COL_GROUP INTENSIFIED OFF.
*  WRITE:  /01 SY-VLINE NO-GAP,
*          21 TDTEXT COLOR COL_GROUP INTENSIFIED OFF,
*         132 SY-VLINE.
FORMAT COLOR OFF.
* Verwaltungsinformation zum Text
FORMAT COLOR COL_NORMAL INTENSIFIED OFF.
*  WRITE:   /01 SY-VLINE NO-GAP.
CHAR10 = TEXT-080.
*  WRITE:   21 CHAR10,
*              THEAD-TDFDATE, THEAD-TDFTIME.
CHAR10 = TEXT-081.
*  WRITE:      CHAR10,
*              THEAD-TDLDATE, THEAD-TDLTIME,
*          132 SY-VLINE.
FORMAT COLOR OFF.
*
LOOP AT EDTEXT.
IF SY-TABIX GT TXTZE.
EXIT.
ENDIF.
FORMAT COLOR OFF.
FORMAT COLOR COL_NORMAL INTENSIFIED OFF.
*    WRITE:  /01 SY-VLINE NO-GAP,
*            21 EDTEXT-TDLINE,
*           132 SY-VLINE.
FORMAT COLOR OFF.
ENDLOOP.
ENDFORM.                    "AUSGABE_TEXTE_LINES

*---------------------------------------------------------------------*
*       FORM  CHECK_TEXTE                                             *
*---------------------------------------------------------------------*
*       Texte                                                         *
*---------------------------------------------------------------------*
FORM CHECK_TEXTE USING BUKRS BELNR GJAHR XVORH.
CLEAR XVORH.
CALL FUNCTION 'FI_TEXTS_DOCUMENT'
EXPORTING
I_BELNR        = BELNR
I_BUKRS        = BUKRS
I_CHECK        = 'X'
I_GJAHR        = GJAHR
I_OBJECT       = 'BELEG'
EXCEPTIONS
NO_TEXTS_FOUND = 1
OTHERS         = 2.
IF SY-SUBRC = 0.
XVORH = 'X'.
ENDIF.
ENDFORM.                    "CHECK_TEXTE

*---------------------------------------------------------------------*
*       FORM  CHECK_TEXTS                                             *
*---------------------------------------------------------------------*
*       Texte                                                         *
*---------------------------------------------------------------------*
FORM CHECK_TEXTS USING OBJECT KONTO BUKRS XVORH.
CLEAR XVORH.
*------ Lokale Datendeklarationen --------------------------------------
DATA: LV_ENTRIES   LIKE SY-TFILL,
LV_XFOUND(1) TYPE C,
LV_NAME      LIKE THEAD-TDNAME.

IF OBJECT = 'KNA1'.
LV_NAME(10)     = KONTO.
ELSE.
LV_NAME(10)     = KONTO.
LV_NAME+10(4)   = BUKRS.
ENDIF.

*------   Relevante Text-ID's ermitteln --------------------------------
SELECT * FROM TTXID WHERE TDOBJECT = OBJECT.
SELECT * FROM TTXER WHERE TDOBJECT = OBJECT
AND TXTGR    = '*'
AND TDID     = TTXID-TDID.
EXIT.
ENDSELECT.
CHECK SY-SUBRC = 0.

*------   Text fÅE die Text-ID vorhanden -------------------------------
CALL FUNCTION 'SELECT_TEXT'
EXPORTING
OBJECT   = OBJECT
NAME     = LV_NAME
ID       = TTXID-TDID
LANGUAGE = '*'
IMPORTING
ENTRIES  = LV_ENTRIES.
IF LV_ENTRIES > 0.
LV_XFOUND = 'X'.
EXIT.
ENDIF.
ENDSELECT.

IF LV_XFOUND = SPACE.
ELSE.
XVORH = 'X'.
ENDIF.

* IF OBJECT = 'KNA1'.
*   IF TXALINES = 0.
*     XVORH = ' '.
*   ENDIF.
* ELSE.
*   IF TXBLINES = 0.
*     XVORH = ' '.
*   ENDIF.
* ENDIF.

ENDFORM.                    "CHECK_TEXTS

*---------------------------------------------------------------------*
*       FORM  TXTTAB_FUELEN.                                          *
*---------------------------------------------------------------------*
*       Erlaubte Text-IDs ermitteln und in TXTTAB stellen             *
*---------------------------------------------------------------------*
FORM TXTTAB_FUELLEN.
DESCRIBE TABLE TXTTAB LINES SY-TFILL.
CHECK SY-TFILL = 0.
SELECT * FROM TTXID WHERE TDOBJECT = 'BELEG'.
IF TTXID-TDID IN TDID.
SELECT * FROM TTXER WHERE TDOBJECT = TTXID-TDOBJECT
AND   TXTGR    = '*'
AND   TDID     = TTXID-TDID.
ENDSELECT.
CHECK SY-SUBRC = 0.
CLEAR: TTXIT.
SELECT SINGLE * FROM TTXIT WHERE TDSPRAS  = SY-LANGU
AND   TDOBJECT = TTXID-TDOBJECT
AND   TDID     = TTXID-TDID.
TXTTAB-TDID    = TTXID-TDID.
TXTTAB-TDTEXT  = TTXIT-TDTEXT.
APPEND TXTTAB.

ENDIF.
ENDSELECT.
DESCRIBE TABLE TXTTABA LINES TXALINES.
CHECK TXALINES = 0.
SELECT * FROM TTXID WHERE TDOBJECT = 'KNA1'.
IF TTXID-TDID IN TDID1.
SELECT * FROM TTXER WHERE TDOBJECT = TTXID-TDOBJECT
AND   TXTGR    = '*'
AND   TDID     = TTXID-TDID.
ENDSELECT.
CHECK SY-SUBRC = 0.
CLEAR: TTXIT.
SELECT SINGLE * FROM TTXIT WHERE TDSPRAS  = SY-LANGU
AND   TDOBJECT = TTXID-TDOBJECT
AND   TDID     = TTXID-TDID.
TXTTABA-TDID   = TTXID-TDID.
TXTTABA-TDTEXT = TTXIT-TDTEXT.
APPEND TXTTABA.

ENDIF.
ENDSELECT.
DESCRIBE TABLE TXTTABB LINES TXBLINES.
CHECK TXBLINES = 0.
SELECT * FROM TTXID WHERE TDOBJECT = 'KNB1'.
IF TTXID-TDID IN TDID2.
SELECT * FROM TTXER WHERE TDOBJECT = TTXID-TDOBJECT
AND   TXTGR    = '*'
AND   TDID     = TTXID-TDID.
ENDSELECT.
CHECK SY-SUBRC = 0.
CLEAR: TTXIT.
SELECT SINGLE * FROM TTXIT WHERE TDSPRAS  = SY-LANGU
AND   TDOBJECT = TTXID-TDOBJECT
AND   TDID     = TTXID-TDID.
TXTTABB-TDID   = TTXID-TDID.
TXTTABB-TDTEXT = TTXIT-TDTEXT.
APPEND TXTTABB.

ENDIF.
ENDSELECT.
ENDFORM.                    "TXTTAB_FUELLEN
