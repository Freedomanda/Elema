*&---------------------------------------------------------------------*
*&  REPORT ZN030200                                                    *
*&        【移行】外部データ（仕入）【セットアップ】                   *
*&---------------------------------------------------------------------*
*&  機能     : YK210をYN210に変換する
*&
*&  作成日   : 2012/03/16
*&  作成者   : S.TAKIKAWA(SOLFIS)
*&---------------------------------------------------------------------*
*&  変更履歴 : 2012/04/10 K.FURUYA
*&  変更内容 : 移行リハーサル課題の修正
*&---------------------------------------------------------------------*
*& YYYY/MM/DD  Programar         Description
*& 2012/10/16  ISID              ES-UP
*&---------------------------------------------------------------------*
REPORT ZN030200
NO STANDARD PAGE HEADING
LINE-SIZE   170
LINE-COUNT  58
MESSAGE-ID  YN01.
*----------------------------------------------------------------------*
*   テーブル
*----------------------------------------------------------------------*
TABLES:YK210,YN210.
*----------------------------------------------------------------------*
*   型定義
*----------------------------------------------------------------------*
TYPES:T_TYP_YK210 TYPE STANDARD TABLE OF YK210,
T_TYP_YN210 TYPE STANDARD TABLE OF YN210.
TYPES:BEGIN OF TYP_ERR,
YKYEAR   TYPE YKYEAR,     "暦年
BILDOC   TYPE YKBILDOC,   "入力番号
MESSAGE  TYPE CHAR255,    "エラー内容
END   OF TYP_ERR,
T_TYP_ERR TYPE STANDARD TABLE OF TYP_ERR.
TYPES:BEGIN OF TYP_DOWNLOAD,
BUKRS       TYPE CHAR4,
YKYEAR      TYPE CHAR4,
BILDOC      TYPE CHAR10,
PRCFLG      TYPE CHAR1,
FIXFLG      TYPE CHAR1,
CORFLG      TYPE CHAR1,
DELFLG      TYPE CHAR1,
OUTFLG      TYPE CHAR1,
KEKKBN      TYPE CHAR1,
LIFNR       TYPE CHAR10,
LIFN2       TYPE CHAR10,
WERKS       TYPE CHAR4,
EKORG       TYPE CHAR4,
EKGRP       TYPE CHAR3,
GSBER       TYPE CHAR4,
EBELN       TYPE CHAR10,
EBELP       TYPE CHAR5,
MAKTX       TYPE CHAR40,
MATNR       TYPE CHAR18,
IDNLF       TYPE CHAR35,
ZFBDT       TYPE CHAR8,
BILDAT      TYPE CHAR8,
SHPDAT      TYPE CHAR8,
KNQUAN      TYPE CHAR15,
KNUNIT      TYPE CHAR3,
KNUNTPRC    TYPE CHAR22,
KNITXAMT    TYPE CHAR21,
KNTAXAMT    TYPE CHAR21,
KNETXAMT    TYPE CHAR21,
WAERS       TYPE CHAR5,
SGTXT       TYPE CHAR50,
ZFBDT2      TYPE CHAR8,
PRCDAT      TYPE CHAR8,
PRCNO       TYPE CHAR10,
INSDAT      TYPE CHAR8,
INSTIM      TYPE CHAR6,
INSUSR      TYPE CHAR12,
UPDDAT      TYPE CHAR8,
UPDTIM      TYPE CHAR6,
UPDUSR      TYPE CHAR12,
RELYKYEAR   TYPE CHAR4,
RELBILDOC   TYPE CHAR10,
OLDKNQUAN   TYPE CHAR15,
OLDKNUNTPRC TYPE CHAR22,
OLDKNITXAMT TYPE CHAR21,
OLDKNTAXAMT TYPE CHAR21,
OLDKNETXAMT TYPE CHAR21,
WERKST      TYPE CHAR4,
RRFLG       TYPE CHAR1,
PAYDOC      TYPE CHAR10,
END   OF TYP_DOWNLOAD,
T_TYP_DOWNLOAD TYPE STANDARD TABLE OF TYP_DOWNLOAD.
*----------------------------------------------------------------------*
*   内部テーブル定義
*----------------------------------------------------------------------*
DATA:T_YK210 TYPE T_TYP_YK210,
T_YN210 TYPE T_TYP_YN210,
T_ERR   TYPE T_TYP_ERR.
*----------------------------------------------------------------------*
*   変数定義
*----------------------------------------------------------------------*
CONSTANTS:
C_ON         TYPE C     VALUE 'X',
C_SPRAS      TYPE SPRAS VALUE 'J'.   "言語キー
* Add ES-UP 2012/10/16 -->
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
* Add ES-UP 2012/10/16 <--
*----------------------------------------------------------------------*
*   定数定義
*----------------------------------------------------------------------*
DATA:G_CNT_YK210   TYPE I,
G_CNT_YN210   TYPE I,
G_CNT_ERR     TYPE I.
*&---------------------------------------------------------------------*
*&   画面項目定義
*&---------------------------------------------------------------------*
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 1.
PARAMETERS:P_R_IKO   RADIOBUTTON GROUP R01.
SELECTION-SCREEN:COMMENT 3(10) TEXT-003 FOR FIELD P_R_IKO.
SELECTION-SCREEN:END   OF LINE.
SELECTION-SCREEN:BEGIN OF BLOCK BL01 WITH FRAME TITLE TEXT-003.
* 移行のみ
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 3.
PARAMETERS:P_R_UP   RADIOBUTTON GROUP R02.
SELECTION-SCREEN:COMMENT 6(14) TEXT-007 FOR FIELD P_R_UP.
SELECTION-SCREEN:END   OF LINE.
* 移行とダウンロード
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 3.
PARAMETERS:P_R_DUP   RADIOBUTTON GROUP R02.
SELECTION-SCREEN:COMMENT 6(24) TEXT-008 FOR FIELD P_R_DUP.
SELECTION-SCREEN:END   OF LINE.
* ダウンロードのみ
SELECTION-SCREEN:BEGIN OF LINE,
POSITION 3.
PARAMETERS:P_R_DOWN   RADIOBUTTON GROUP R02.
SELECTION-SCREEN:COMMENT 6(18) TEXT-009 FOR FIELD P_R_DOWN.
SELECTION-SCREEN:END   OF LINE.
* 条件
SELECTION-SCREEN:BEGIN OF BLOCK BL1 WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS:P_BUKRS   FOR YK210-BUKRS.
SELECT-OPTIONS:P_YKYEAR  FOR YK210-YKYEAR.
SELECT-OPTIONS:P_BILDOC  FOR YK210-BILDOC.
SELECT-OPTIONS:P_LIFN2   FOR YK210-LIFN2.
SELECT-OPTIONS:P_ZFBDT   FOR YK210-ZFBDT.
SELECT-OPTIONS:P_KEKKBN  FOR YK210-KEKKBN.
SELECT-OPTIONS:P_FIXFLG  FOR YK210-FIXFLG.
SELECT-OPTIONS:P_DELFLG  FOR YK210-DELFLG.
SELECT-OPTIONS:P_KNET    FOR YK210-KNETXAMT.
PARAMETERS    :P_PASS(255) TYPE C LOWER CASE.
SELECTION-SCREEN:END   OF BLOCK BL1.
SELECTION-SCREEN:END   OF BLOCK BL01.

SELECTION-SCREEN:BEGIN OF LINE,
POSITION 1.
PARAMETERS:P_R_DEL   RADIOBUTTON GROUP R01.
SELECTION-SCREEN:COMMENT 3(14) TEXT-004 FOR FIELD P_R_DEL.
SELECTION-SCREEN:END   OF LINE.
SELECTION-SCREEN:BEGIN OF BLOCK BL02 WITH FRAME TITLE TEXT-002.
SELECT-OPTIONS:P_GJAHR   FOR YN210-GJAHR.
SELECT-OPTIONS:P_SLPDOC  FOR YN210-SLPDOC.
SELECT-OPTIONS:P_DTLDOC  FOR YN210-DTLDOC.
SELECT-OPTIONS:P_VRF     FOR YN210-VRFCTON.
SELECTION-SCREEN:END   OF BLOCK BL02.
*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_PASS.
*-- ファイルダウンロード検索ヘルプ
PERFORM FRM_CHK_FILE.
*----------------------------------------------------------------------*
*  AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
IF ( P_R_DOWN = C_ON
OR   P_R_DUP  = C_ON )
AND P_PASS IS INITIAL.
MESSAGE E999(YN01) WITH 'ダウンロードファイル名を入力してください'.
ENDIF.
*----------------------------------------------------------------------*
*  START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.

*---データ移行処理
IF P_R_IKO = C_ON.
*   移行用データ取得
PERFORM GET_YK210.
*   仕入先チェック用データ取得
PERFORM GET_LIFNR.
CHECK NOT T_YK210[] IS INITIAL.
IF P_R_DOWN = C_ON
OR P_R_DUP  = C_ON.
*     ファイルダウンロード
PERFORM DOWNLOAD.
ENDIF.
CHECK P_R_DOWN IS INITIAL.  "ダウンロードのみ以外処理続行
*   編集
PERFORM EDIT_YN210.
*   登録
PERFORM INSERT_DATA.
*   処理結果出力
PERFORM WRITE_IKO.

*---削除
ELSE.
*   データ取得
PERFORM DEL_DATA_GET.
CHECK NOT T_YN210[] IS INITIAL.
*   削除
PERFORM DEL_DATA.
*   処理結果出力
PERFORM WRITE_DEL.
ENDIF.
*&---------------------------------------------------------------------*
*&      Form  GET_YK210
*&---------------------------------------------------------------------*
*       移行用データ取得
*----------------------------------------------------------------------*
FORM GET_YK210.

SELECT *
INTO TABLE T_YK210
FROM YK210
WHERE BUKRS   IN P_BUKRS
AND YKYEAR   IN P_YKYEAR
AND BILDOC   IN P_BILDOC
AND FIXFLG   IN P_FIXFLG
AND DELFLG   IN P_DELFLG
AND KEKKBN   IN P_KEKKBN
AND LIFN2    IN P_LIFN2
AND ZFBDT    IN P_ZFBDT
AND KNETXAMT IN P_KNET.

IF SY-SUBRC = 0.
ELSE.
MESSAGE S762(YN01).
ENDIF.

ENDFORM.                    " GET_YK210
*&---------------------------------------------------------------------*
*&      Form  EDIT_YN210
*&---------------------------------------------------------------------*
*       YN210編集
*----------------------------------------------------------------------*
FORM EDIT_YN210.
DATA:LW_YK210   TYPE YK210,
LW_YN210   TYPE YN210,
LW_ERR     TYPE TYP_ERR,
LW_DATUM   TYPE SY-DATUM,
LW_UZEIT   TYPE SY-UZEIT,
LW_SLPDOC  TYPE YNOUTDOC.

LW_DATUM = SY-DATUM.
LW_UZEIT = SY-UZEIT.
LOOP AT T_YK210 INTO LW_YK210.
CLEAR:LW_YN210.
*   外部会計年度
*   伝票会計年度算出
IF LW_YK210-BILDAT IS INITIAL.
LW_YK210-BILDAT = LW_YK210-ZFBDT.
ENDIF.
CALL FUNCTION 'FI_PERIOD_DETERMINE'
EXPORTING
I_BUDAT              = LW_YK210-BILDAT
I_BUKRS              = LW_YK210-BUKRS
IMPORTING
E_GJAHR              = LW_YN210-GJAHR
EXCEPTIONS
FISCAL_YEAR          = 1
PERIOD               = 2
PERIOD_VERSION       = 3
POSTING_PERIOD       = 4
SPECIAL_PERIOD       = 5
VERSION              = 6
POSTING_DATE         = 7
OTHERS               = 8
.
IF SY-SUBRC <> 0.
LW_ERR-YKYEAR = LW_YK210-YKYEAR.
LW_ERR-BILDOC = LW_YK210-BILDOC.
LW_ERR-MESSAGE = '会計年度が取得できませんでした'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.
*   外部番号
CALL FUNCTION 'NUMBER_GET_NEXT'
EXPORTING
NR_RANGE_NR                   = '10'
OBJECT                        = 'YNOUTDOC2'
QUANTITY                      = '1'
SUBOBJECT                     = 'C001'
TOYEAR                        = LW_YN210-GJAHR
IMPORTING
NUMBER                        = LW_YN210-SLPDOC
*       QUANTITY                      =
*       RETURNCODE                    =
EXCEPTIONS
INTERVAL_NOT_FOUND            = 1
NUMBER_RANGE_NOT_INTERN       = 2
OBJECT_NOT_FOUND              = 3
QUANTITY_IS_0                 = 4
QUANTITY_IS_NOT_1             = 5
INTERVAL_OVERFLOW             = 6
BUFFER_OVERFLOW               = 7
OTHERS                        = 8.

IF SY-SUBRC <> 0.
LW_ERR-YKYEAR = LW_YK210-YKYEAR.
LW_ERR-BILDOC = LW_YK210-BILDOC.
LW_ERR-MESSAGE = '外部番号が取得できませんでした'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.

*   外部明細番号
LW_YN210-DTLDOC = 1.
*   仕入先コード(請求先)
LW_YN210-VRFCTON = LW_YK210-LIFN2.
*   会社コード
LW_YN210-BUKRS  = LW_YK210-BUKRS.
*   計上締日
LW_YN210-ZFBDT = LW_YK210-ZFBDT.
*   利益センタ(初期値)
*   担当者
LW_YN210-PERNR = SY-UNAME.
*   プラント

*2012/04/10 MOD START
*取引先プラントが取得できない場合は、
*プラントを取得
IF NOT ( LW_YK210-WERKST IS INITIAL ).
LW_YN210-DVSON = LW_YK210-WERKST.
ELSE.
LW_YN210-DVSON = LW_YK210-WERKS.
ENDIF.
*    LW_YN210-DVSON = LW_YK210-WERKST.
*2012/04/10 MOD END

*   照合対象フラグ(初期値)
*   照合ステータス
LW_YN210-CSTS = '1'.
*   コメント
*2012/04/10 ADD START
LW_YN210-COMMT = LW_YK210-SGTXT.
*2012/04/10 ADD END
*   数量
*2012/04/10 MOD START
*数量取得元修正
LW_YN210-KNQUAN = LW_YK210-KNQUAN.
*    LW_YN210-KNQUAN = LW_YK210-OLDKNQUAN.
*2012/04/10 MOD END
*   単位
LW_YN210-KNUNIT = LW_YK210-KNUNIT.
*   単価
LW_YN210-KNUNTPRC = LW_YK210-KNUNTPRC.
*   消費税額
LW_YN210-KNTAXAMT = LW_YK210-KNTAXAMT.
*   税抜金額
LW_YN210-KNITXAMT = LW_YK210-KNITXAMT.
*   税込金額
LW_YN210-KNETXAMT = LW_YK210-KNETXAMT.
*   通貨コード
LW_YN210-WAERS = LW_YK210-WAERS.
*   照合番号/照合日/照合ユーザ(初期値)
*   更新日
LW_YN210-UPDDAT = LW_DATUM.
*   更新時刻
LW_YN210-UPDTIM = LW_UZEIT.
*   更新ユーザ
LW_YN210-UPDUSR = SY-UNAME.
*   更新プログラム
LW_YN210-UPDPRG = SY-REPID.
*   削除フラグ/元会計年度/元外部番号/元外部明細番号(初期値)

*   照合キー1：発注番号
*2012/05/22 MOD START
*必ず発注番号を設定
LW_YN210-CKEY1 = LW_YK210-EBELN.

*   IF LW_YN210-WAERS = 'JPY'.
*     LW_YN210-CKEY1 = LW_YK210-EBELN.
*   ENDIF.
*2012/05/22 MOD END

*   照合キー2：インボイスNo照合キー3〜8(初期値)
*   仕入先コード(発注先)
LW_YN210-LIST1 = LW_YK210-LIFNR.
*   発注番号
LW_YN210-LIST2 = LW_YK210-EBELN.
*   発注明細番号
LW_YN210-LIST3 = LW_YK210-EBELP.
*   購買グループ(初期値)
*   品目コード
LW_YN210-LIST5 = LW_YK210-MATNR.
*   品目テキスト
LW_YN210-LIST6 = LW_YK210-MAKTX.
*   仕入先品目
LW_YN210-LIST7 = LW_YK210-IDNLF.
*   インボイスNo、一覧表示項目9,10(初期値)
*   登録日
LW_YN210-INSDT = LW_DATUM.
*   請求日
LW_YN210-LDATE1 = LW_YK210-BILDAT.
*   照合締日/自動生成明細（支払通知）(初期値)
*   キー重複チェック
SELECT SINGLE SLPDOC
INTO LW_SLPDOC
FROM YN210
WHERE GJAHR   = LW_YN210-GJAHR
AND SLPDOC  = LW_YN210-SLPDOC
AND DTLDOC  = LW_YN210-DTLDOC
AND VRFCTON = LW_YN210-VRFCTON
AND BUKRS   = LW_YN210-BUKRS.
IF SY-SUBRC = 0.
LW_ERR-YKYEAR = LW_YK210-YKYEAR.
LW_ERR-BILDOC = LW_YK210-BILDOC.
LW_ERR-MESSAGE = 'すでに同じキーが存在します'.
APPEND LW_ERR TO T_ERR.
G_CNT_ERR = G_CNT_ERR + 1.
CONTINUE.
ENDIF.

APPEND LW_YN210 TO T_YN210.
G_CNT_YN210 = G_CNT_YN210 + 1.

ENDLOOP.

ENDFORM.                    " EDIT_YN210
*&---------------------------------------------------------------------*
*&      Form  INSERT_DATA
*&---------------------------------------------------------------------*
*       データ登録
*----------------------------------------------------------------------*
FORM INSERT_DATA.

IF T_YN210[] IS INITIAL.
EXIT.
ENDIF.

INSERT YN210 FROM TABLE T_YN210.
IF SY-SUBRC = 0.
COMMIT WORK AND WAIT.
ELSE.
ROLLBACK WORK.
MESSAGE E758(YN01) WITH 'YN210'.
ENDIF.

ENDFORM.                    " INSERT_DATA
*&---------------------------------------------------------------------*
*&      Form  WRITE_IKO
*&---------------------------------------------------------------------*
*       処理結果出力【移行】
*----------------------------------------------------------------------*
FORM WRITE_IKO.
DATA:LW_CNT(10)  TYPE C,
LW_ERR      TYPE TYP_ERR.

WRITE G_CNT_YK210 TO LW_CNT.
WRITE: /001 '<データ移行>',
/003 '仕入データ(YK210)抽出件数：',
040 LW_CNT,
050 '件'.
SKIP 1.

WRITE G_CNT_YN210 TO LW_CNT.
WRITE: /003 '外部データ(仕入)(YN210)登録件数：',
040 LW_CNT,
050 '件'.
WRITE G_CNT_ERR TO LW_CNT.
WRITE: /003 '外部データ(仕入)(YN210)エラー件数：',
040 LW_CNT,
050 '件'.
CHECK NOT T_ERR[] IS INITIAL.
SKIP 1.
WRITE: /003 '暦年',
014 '入力番号',
029 'エラー内容'.
ULINE.
LOOP AT T_ERR INTO LW_ERR.
WRITE: /003 LW_ERR-YKYEAR,
014 LW_ERR-BILDOC,
029 LW_ERR-MESSAGE.
ENDLOOP.

ENDFORM.                    " WRITE_IKO
*&---------------------------------------------------------------------*
*&      Form  DEL_DATA_GET
*&---------------------------------------------------------------------*
*       YN210データ取得【削除】
*----------------------------------------------------------------------*
FORM DEL_DATA_GET.

SELECT *
INTO TABLE T_YN210
FROM YN210
WHERE GJAHR   IN P_GJAHR
AND SLPDOC  IN P_SLPDOC
AND DTLDOC  IN P_DTLDOC
AND VRFCTON IN P_VRF.

IF SY-SUBRC = 0.
DESCRIBE TABLE T_YN210 LINES G_CNT_YN210.
ELSE.
MESSAGE S762(YN01).
ENDIF.

ENDFORM.                    " DEL_DATA_GET
*&---------------------------------------------------------------------*
*&      Form  DEL_DATA
*&---------------------------------------------------------------------*
*       YN210削除【削除】
*----------------------------------------------------------------------*
FORM DEL_DATA.

DELETE YN210 FROM TABLE T_YN210.
IF SY-SUBRC = 0.
COMMIT WORK AND WAIT.
ELSE.
ROLLBACK WORK.
MESSAGE E758(YN01) WITH 'YN210'.
ENDIF.

ENDFORM.                    " DEL_DATA
*&---------------------------------------------------------------------*
*&      Form  WRITE_DEL
*&---------------------------------------------------------------------*
*       処理結果出力【削除】
*----------------------------------------------------------------------*
FORM WRITE_DEL.
DATA:LW_CNT(10)  TYPE C.

WRITE G_CNT_YN210 TO LW_CNT.
WRITE: /001 '<移行データ削除>',
/003 '自社データ(仕入)(YN210)削除件数：',
030 LW_CNT,
040 '件'.

ENDFORM.                    " WRITE_DEL
*&---------------------------------------------------------------------*
*&      Form  GET_LIFNR
*&---------------------------------------------------------------------*
*       仕入先の処理対象かどうかのチェック用データ取得
*----------------------------------------------------------------------*
FORM GET_LIFNR.
DATA:LT_YK210       TYPE T_TYP_YK210,
LW_YK210       TYPE YK210,
L_ID           TYPE THEAD-TDID,
L_LANGU        TYPE THEAD-TDSPRAS,
L_NAME         TYPE THEAD-TDNAME,
L_OBJECT       TYPE THEAD-TDOBJECT,
LT_LINES       TYPE STANDARD TABLE OF TLINE,
LW_LINES       TYPE TLINE.

LT_YK210[] = T_YK210[].
SORT LT_YK210 BY LIFN2.
DELETE ADJACENT DUPLICATES FROM LT_YK210 COMPARING LIFN2.
L_LANGU   = C_SPRAS.
L_ID      = 'YN01'.
L_OBJECT  = 'LFB1'.

LOOP AT LT_YK210 INTO LW_YK210.
CLEAR:LT_LINES, LW_LINES.
CONCATENATE LW_YK210-LIFN2 LW_YK210-BUKRS
INTO L_NAME.
*   テキスト読込
CALL FUNCTION 'READ_TEXT'
EXPORTING
ID                            = L_ID
LANGUAGE                      = L_LANGU
NAME                          = L_NAME
OBJECT                        = L_OBJECT
TABLES
LINES                         = LT_LINES
EXCEPTIONS
ID                            = 1
LANGUAGE                      = 2
NAME                          = 3
*     NOT_FOUND                     = 4
OBJECT                        = 5
REFERENCE_CHECK               = 6
WRONG_ACCESS_TO_ARCHIVE       = 7
OTHERS                        = 8.
IF SY-SUBRC = 0.
READ TABLE LT_LINES INTO LW_LINES INDEX 1.
IF LW_LINES-TDLINE = 'X'
OR LW_LINES-TDLINE = 'Y'.
ELSE.
DELETE T_YK210 WHERE LIFN2 = LW_YK210-LIFN2.
ENDIF.
ELSE.
DELETE T_YK210 WHERE LIFN2 = LW_YK210-LIFN2.
ENDIF.
ENDLOOP.

SORT T_YK210.
DESCRIBE TABLE T_YK210 LINES G_CNT_YK210.
* 再度0件チェック
IF G_CNT_YK210 IS INITIAL.
MESSAGE S762(YN01).
ENDIF.

ENDFORM.                    " GET_LIFNR
*&---------------------------------------------------------------------*
*&      Form  FRM_CHK_FILE
*&---------------------------------------------------------------------*
*       ファイルダウンロード検索ヘルプ
*----------------------------------------------------------------------*
FORM FRM_CHK_FILE.
* Mod ES-UP 2012/10/16 -->
*  CALL FUNCTION 'WS_FILENAME_GET'
*       EXPORTING
*            MASK     = '*.*,ALL Files,*.*. '
*            MODE     = 'S'
*            TITLE    = 'ダウンロード'
*       IMPORTING
*            FILENAME = P_PASS
*       EXCEPTIONS
*            OTHERS   = 5.
*  IF SY-SUBRC <> 0.
*  ENDIF.
DATA: L_FILENAME    TYPE STRING,
L_PATH        TYPE STRING,
L_FULLPATH    TYPE STRING,
L_TITLE       TYPE STRING,
L_USER_ACTION TYPE I.
L_TITLE = `ダウンロード`.
CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG(
EXPORTING
WINDOW_TITLE         = L_TITLE
*      DEFAULT_EXTENSION    = DEFAULT_EXTENSION
*      DEFAULT_FILE_NAME    = DEFAULT_FILE_NAME
*      WITH_ENCODING        = WITH_ENCODING
*      FILE_FILTER          = FILE_FILTER
*      INITIAL_DIRECTORY    = INITIAL_DIRECTORY
*      PROMPT_ON_OVERWRITE  = 'X'
CHANGING
FILENAME             = L_FILENAME
PATH                 = L_PATH
FULLPATH             = L_FULLPATH
USER_ACTION          = L_USER_ACTION
*      FILE_ENCODING        = FILE_ENCODING
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4 ).
IF SY-SUBRC = 0
AND L_USER_ACTION = CL_GUI_FRONTEND_SERVICES=>ACTION_OK.
P_PASS = L_FULLPATH.
ENDIF.
* Mod ES-UP 2012/10/16 <--
ENDFORM.                    " FRM_CHK_FILE
*&---------------------------------------------------------------------*
*&      Form  DOWNLOAD
*&---------------------------------------------------------------------*
*       ファイルダウンロード
*----------------------------------------------------------------------*
FORM DOWNLOAD.
DATA:L_PASS TYPE STRING,
LT_DOWNLOAD TYPE T_TYP_DOWNLOAD,
LW_DOWNLOAD TYPE TYP_DOWNLOAD,
LW_YK210    TYPE YK210.
* Add ES-UP 2012/10/16 -->
DATA L_CODEPAGE TYPE ABAP_ENCODING.
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
* Add ES-UP 2012/10/16 <--

L_PASS = P_PASS.

CHECK NOT ( T_YK210[] IS INITIAL ).
* 変換処理
LOOP AT T_YK210 INTO LW_YK210.
MOVE-CORRESPONDING LW_YK210 TO LW_DOWNLOAD.
*   後ろマイナスの変換
IF LW_YK210-KNQUAN < 0.         "数量
SHIFT LW_DOWNLOAD-KNQUAN CIRCULAR RIGHT.
ENDIF.
IF LW_YK210-KNUNTPRC < 0.       "単価
SHIFT LW_DOWNLOAD-KNUNTPRC CIRCULAR RIGHT.
ENDIF.
IF LW_YK210-KNITXAMT < 0.       "税抜金額
SHIFT LW_DOWNLOAD-KNITXAMT CIRCULAR RIGHT.
ENDIF.
IF LW_YK210-KNTAXAMT < 0.       "消費税額
SHIFT LW_DOWNLOAD-KNTAXAMT CIRCULAR RIGHT.
ENDIF.
IF LW_YK210-KNETXAMT < 0.       "税込金額
SHIFT LW_DOWNLOAD-KNETXAMT CIRCULAR RIGHT.
ENDIF.
IF LW_YK210-OLDKNQUAN < 0.      "数量
SHIFT LW_DOWNLOAD-OLDKNQUAN CIRCULAR RIGHT.
ENDIF.
IF LW_YK210-OLDKNUNTPRC < 0.    "単価
SHIFT LW_DOWNLOAD-OLDKNUNTPRC CIRCULAR RIGHT.
ENDIF.
IF LW_YK210-OLDKNITXAMT < 0.    "税抜金額
SHIFT LW_DOWNLOAD-OLDKNITXAMT CIRCULAR RIGHT.
ENDIF.
IF LW_YK210-OLDKNTAXAMT < 0.    "消費税額
SHIFT LW_DOWNLOAD-OLDKNTAXAMT CIRCULAR RIGHT.
ENDIF.
IF LW_YK210-OLDKNETXAMT < 0.    "税込金額
SHIFT LW_DOWNLOAD-OLDKNETXAMT CIRCULAR RIGHT.
ENDIF.

CONDENSE LW_DOWNLOAD-KNQUAN NO-GAPS.
CONDENSE LW_DOWNLOAD-KNUNTPRC NO-GAPS.
CONDENSE LW_DOWNLOAD-KNITXAMT NO-GAPS.
CONDENSE LW_DOWNLOAD-KNTAXAMT NO-GAPS.
CONDENSE LW_DOWNLOAD-KNETXAMT NO-GAPS.
CONDENSE LW_DOWNLOAD-OLDKNQUAN NO-GAPS.
CONDENSE LW_DOWNLOAD-OLDKNUNTPRC NO-GAPS.
CONDENSE LW_DOWNLOAD-OLDKNITXAMT NO-GAPS.
CONDENSE LW_DOWNLOAD-OLDKNTAXAMT NO-GAPS.
CONDENSE LW_DOWNLOAD-OLDKNETXAMT NO-GAPS.
APPEND LW_DOWNLOAD TO LT_DOWNLOAD.
ENDLOOP.

CALL FUNCTION 'GUI_DOWNLOAD'
EXPORTING
*     BIN_FILESIZE                  =
FILENAME                      = L_PASS
FILETYPE                       = 'ASC'
*     APPEND                        = ' '
WRITE_FIELD_SEPARATOR         = 'X'
*     HEADER                        = '00'
*     TRUNC_TRAILING_BLANKS         = ' '
*     WRITE_LF                      = 'X'
*     COL_SELECT                    = ' '
*     COL_SELECT_MASK               = ' '
* Add ES-UP 2012/10/16 -->
CODEPAGE                  = L_CODEPAGE
* Add ES-UP 2012/10/16 <--
*   IMPORTING
*     FILELENGTH                    =
TABLES
DATA_TAB                      = LT_DOWNLOAD
EXCEPTIONS
FILE_WRITE_ERROR              = 1
NO_BATCH                      = 2
GUI_REFUSE_FILETRANSFER       = 3
INVALID_TYPE                  = 4
NO_AUTHORITY                  = 5
UNKNOWN_ERROR                 = 6
HEADER_NOT_ALLOWED            = 7
SEPARATOR_NOT_ALLOWED         = 8
FILESIZE_NOT_ALLOWED          = 9
HEADER_TOO_LONG               = 10
DP_ERROR_CREATE               = 11
DP_ERROR_SEND                 = 12
DP_ERROR_WRITE                = 13
UNKNOWN_DP_ERROR              = 14
ACCESS_DENIED                 = 15
DP_OUT_OF_MEMORY              = 16
DISK_FULL                     = 17
DP_TIMEOUT                    = 18
FILE_NOT_FOUND                = 19
DATAPROVIDER_EXCEPTION        = 20
CONTROL_FLUSH_ERROR           = 21
OTHERS                        = 22
.
IF SY-SUBRC <> 0.
MESSAGE I000 WITH 'ダウンロードに失敗しました'.
ELSE.
MESSAGE S000 WITH 'ダウンロードしました'.
ENDIF.

ENDFORM.                    " DOWNLOAD
