************************************************************************
* [プログラム名]
*   ZF010900    新・先手インターフェース(領収書発行)
*
* [処理概要]
*   「発行くん」フォーマットの領収書データを出力する。
*
* [改定履歴]
*　YYYY/MM/DD   Programar         Description
*  2001/12/18   PSD K.igarashi    新規開発　
*  2002/05/27   PSD T.SAITOH      デフォルト設定廃止
*  2002/06/20   PSD T.SAITOH      再移送
*  2002/09/20   PSD ????????      再度新規開発
*                                【要件定義から再作成】のため
*                                 旧プログラムは破棄
*  2012/08/16   ISID              ES-UP
***********************************************************************
* --- サイズ及びフッタなどの設定をここでする。
REPORT ZZSAITOH000
LINE-SIZE 150
LINE-COUNT 58(8) "()の中の数値ははフッタ割当行数
MESSAGE-ID Z1
NO STANDARD PAGE HEADING.
*---------------------------------------------------------------------*
* データ宣言(グローバル)
*---------------------------------------------------------------------*
*--- テーブル宣言
DATA: T001   TYPE   T001,
KNA1   TYPE   KNA1,
YK310  TYPE   YK310,
KNB1   TYPE   KNB1,
BSAD   TYPE   BSAD,
BSED   TYPE   BSED.
*--- 定数項目を宣言する
CONSTANTS:
C_BUKRS(10)        TYPE C VALUE '会社コード',
C_KNA1(28)         TYPE C VALUE '得意先マスタ（一般データ）',
C_TBL_001(10)      TYPE C VALUE 'T001',
C_TBL_002(10)      TYPE C VALUE 'KNA1',
C_TBL_003(10)      TYPE C VALUE 'YK310',
C_TBL_004(10)      TYPE C VALUE 'BSAD',
C_TBL_005(10)      TYPE C VALUE 'BSEG',
C_TBL_006(10)      TYPE C VALUE 'BSID',
C_TBL_007(10)      TYPE C VALUE 'BSED',
C_TBL_008(10)      TYPE C VALUE 'BSAK',
MSG_UKETORI(6)     TYPE C VALUE '受取日',
MSG_KUNNR(12)      TYPE C VALUE '得意先コード',
MSG_SORTL(8)       TYPE C VALUE 'フリガナ',
MSG_EIGYO(12)      TYPE C VALUE '営業所コード',
MSG_KIJITU(4)      TYPE C VALUE '期日',
MSG_INCAMT(4)      TYPE C VALUE '金額',
MSG_TEKIYO(4)      TYPE C VALUE '摘要',
MSG_SYORI(6)       TYPE C VALUE '処理日'.

CONSTANTS:CNS_TITLE(40)   TYPE C VALUE
'**先手インターフェース(領収書発行)**',
CNS_CL_RANGE(9) TYPE C VALUE '指定期間 ',
CNS_MAKEDAT(8)  TYPE C VALUE '作成日時',
CNS_BUMON(6)    TYPE C VALUE '部門',
CNS_TOTAL(6)    TYPE C VALUE '総合計'.
* Add ES-UP 2012/08/16 -->
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
* Add ES-UP 2012/08/16 <--
*--- 構造／テーブル型　宣言
TYPES: BEGIN OF TYP_MAE,
INCDAT TYPE YK310-INCDAT,               "入金予定日
KUNNR  TYPE YK310-KUNNR,                "得意先コード
NAME2  TYPE KNA1-NAME2,                 "名称
SORTL  TYPE KNA1-SORTL,                 "ソート項目
INCAMT TYPE YK310-INCAMT,               "金額
END   OF TYP_MAE,
BEGIN OF TYP_KOGI1,
AUGDT  TYPE BSAD-AUGDT,                 "伝票日付
KUNNR  TYPE BSAD-KUNNR,                 "得意先コード
NAME2  TYPE KNA1-NAME2,                 "名称
SORTL  TYPE KNA1-SORTL,                 "検索条件
AUGBL  TYPE BSAD-AUGBL,                 "伝票番号
GJAHR  TYPE BSAD-GJAHR,                 "会計年度
END   OF TYP_KOGI1,
BEGIN OF TYP_KOGI2,
DMBTR  TYPE BSEG-DMBTR,                 "金額
BELNR  TYPE BSEG-BELNR,                 "伝票番号
END   OF TYP_KOGI2,
BEGIN OF TYP_UKETO1,
KUNNR  TYPE KNA1-KUNNR,                 "得意先コード
NAME2  TYPE KNA1-NAME2,                 "名称
SORTL  TYPE KNA1-SORTL,                 "検索条件
BLDAT  TYPE BSID-BLDAT,                 "伝票日付
DMBTR  TYPE BSID-DMBTR,                 "金額
BELNR  TYPE BSID-BELNR,                 "伝票番号
GJAHR  TYPE BSID-GJAHR,                 "会計年度
BUZEI  TYPE BSID-BUZEI,                 "明細
END   OF TYP_UKETO1,
BEGIN OF TYP_UKETO2,
BELNR  TYPE BSED-BELNR,                 "伝票番号
WDATE  TYPE BSED-WDATE,                 "振出日
BUZEI  TYPE BSED-BUZEI,                 "明細
END   OF TYP_UKETO2,
BEGIN OF TYP_SOUSA1,
AUGDT  TYPE BSAD-AUGDT,                 "伝票日付
KUNNR  TYPE KNA1-KUNNR,                 "得意先コード
NAME2  TYPE KNA1-NAME2,                 "名称
SORTL  TYPE KNA1-SORTL,                 "検索条件
AUGBL  TYPE BSAD-AUGBL,                 "伝票番号
GJAHR  TYPE BSAD-GJAHR,                 "会計年度
DMBTR  TYPE BSAD-DMBTR,                 "金額
END   OF TYP_SOUSA1,
BEGIN OF TYP_SOUSA2,
DMBTR  TYPE BSAK-DMBTR,                 "金額
BELNR  TYPE BSAK-BELNR,                 "伝票日付
END   OF TYP_SOUSA2,
BEGIN OF TYP_HEADER,
DATA(500)  TYPE C,
END   OF TYP_HEADER,
BEGIN OF TYP_MEISAI,
UKETORI(10) TYPE C,                     "受取日
KUNNR(12)   TYPE C,                     "得意先コード
SORTL(20)   TYPE C,                     "フリガナ
EIGYO(10)   TYPE C,                     "営業所コード
KIJITU(10)  TYPE C,                     "期日
INCAMT(20)  TYPE C,                     "金額
TEKIYO(40)  TYPE C,                     "摘要
SYORI(10)   TYPE C,                     "処理日
END   OF TYP_MEISAI.

DATA:GT_MAE       TYPE TABLE OF TYP_MAE,         "前渡伝票内部ＴＢＬ
GF_MAE       TYPE TYP_MAE,                  "前渡伝票構造
GT_KOGI1     TYPE TABLE OF TYP_KOGI1,
GF_KOGI1     TYPE TYP_KOGI1,
GT_KOGI2     TYPE TABLE OF TYP_KOGI2,
GF_KOGI2     TYPE TYP_KOGI2,
GT_UKETO1    TYPE TABLE OF TYP_UKETO1,
GF_UKETO1    TYPE TYP_UKETO1,
GT_UKETO2    TYPE TABLE OF TYP_UKETO2,
GF_UKETO2    TYPE TYP_UKETO2,
GT_SOUSA1    TYPE TABLE OF TYP_SOUSA1,
GF_SOUSA1    TYPE TYP_SOUSA1,
GT_SOUSA2    TYPE TABLE OF TYP_SOUSA2,
GF_SOUSA2    TYPE TYP_SOUSA2,
GT_DENPYO    TYPE TABLE OF ZFLIST_V09 WITH HEADER LINE,
GT_DENPYO1   TYPE TABLE OF ZFLIST_V09 WITH HEADER LINE,
GF_DENPYO    TYPE ZFLIST_V09,
ITAB_HEADER  TYPE TYP_HEADER,
GT_HEADER    TYPE TABLE OF TYP_HEADER,
ITAB_MEISAI  TYPE TYP_MEISAI,
GT_MEISAI    TYPE TABLE OF TYP_MEISAI.

DATA:WK_DATUM_REV(10)    TYPE C,
WK_KUNNR(10)        TYPE C,
WK_NAME2(35)        TYPE C,
WK_SORTL(20)        TYPE C,
WK_VKBUR(4)         TYPE C,
WK_DATUM_LIM(10)    TYPE C,
WK_MEMO(40)         TYPE C,
WK_DATUM_SYS(10)    TYPE C,
WK_DATUM-YY(4)      TYPE C,
WK_DATUM-MM(2)      TYPE C,
WK_DATUM-DD(4)      TYPE C,
WK_DATUM(12)        TYPE C,
WK_DATUM1-YY(4)     TYPE C,
WK_DATUM1-MM(2)     TYPE C,
WK_DATUM1-DD(4)     TYPE C,
WK_DATUM1(12)       TYPE C,
WK_DMBTR            TYPE P,
WK_DMBTR1           TYPE P,
WK_DMBTR2           TYPE P,
WK_GOKEI            TYPE P.

*―――――――――――――――――――――――――――――――――――*
* リストビューア関連
*―――――――――――――――――――――――――――――――――――*
* ALV用構造
TYPE-POOLS SLIS.

DATA: G_REPID     LIKE SY-REPID,            "レポートID
GF_LAYOUT   TYPE SLIS_LAYOUT_ALV.     "レイアウト構造

** REUSE_ALV_COMMENTARY_WRITE
DATA: GF_HEAD_ALV   TYPE SLIS_LISTHEADER,    "ヘッダ構造
GT_T_HEAD_ALV TYPE SLIS_T_LISTHEADER.  "ヘッダ用内部TBL

** ABAPリストビューアヘッダデータ保持
DATA: GF_HEADER_DATA TYPE ZFLIST_V09.         "ヘッダ表示情報

DATA: GT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV, "フィールドカタログ
GF_FIELDCAT LIKE LINE OF GT_FIELDCAT. "フィールドカタログ(ヘッダ)

* REUSE_ALV_LIST_DISPLAY
DATA: TOP_OF_PAGE TYPE SLIS_FORMNAME VALUE 'TOP_OF_PAGE'.

* REUSE_ALV_EVENT
DATA: GT_EVENT TYPE SLIS_T_EVENT,           "イベント情報内部TBL
GF_EVENT LIKE LINE OF GT_EVENT.       "イベント情報構造

* ALV用内部ＴＢＬ
DATA: GT_ALV     TYPE TABLE OF ZFLIST_V09
WITH HEADER LINE.

* 印刷設定対応
DATA: GF_PRINT TYPE SLIS_PRINT_ALV.
*---------------------------------------------------------------------*
* 選択画面
*---------------------------------------------------------------------*
* 会社コード
PARAMETERS: P_BUKRS  TYPE KNB1-BUKRS  MEMORY ID BUK OBLIGATORY.
* 会計年度
PARAMETERS: P_GJAHR  TYPE BSAD-GJAHR  DEFAULT SY-DATUM+0(4).

* 得意先コード
SELECT-OPTIONS:S_KUNNR FOR KNA1-KUNNR,
* 科目コード
S_HKONT FOR BSAD-HKONT.
* 前渡
PARAMETERS: R_BHAND RADIOBUTTON GROUP RDOG.
SELECTION-SCREEN BEGIN OF BLOCK BK_01
WITH FRAME TITLE TEXT-401."前渡条件
* 入金予定日
SELECT-OPTIONS:S_INCDAT FOR YK310-INCDAT.

SELECTION-SCREEN END   OF BLOCK BK_01.

* 小切手
PARAMETERS: R_CHECK RADIOBUTTON GROUP RDOG.
SELECTION-SCREEN BEGIN OF BLOCK BK_02
WITH FRAME TITLE TEXT-402."小切手条件
* 小切手勘定
SELECT-OPTIONS:S_CHKONT FOR BSAD-HKONT,
* 入金日
S_RECDT  FOR BSAD-BLDAT.
SELECTION-SCREEN END   OF BLOCK BK_02.

* 受取手形
PARAMETERS: R_BILL RADIOBUTTON GROUP RDOG.
SELECTION-SCREEN BEGIN OF BLOCK BK_03
WITH FRAME TITLE TEXT-403."受取手形条件
* 受取手形勘定
SELECT-OPTIONS:S_BHKONT FOR BSAD-HKONT,
* 伝票日付
S_BLDAT  FOR BSAD-BLDAT.
SELECTION-SCREEN END   OF BLOCK BK_03.

* 相殺
PARAMETERS: R_OFFSET RADIOBUTTON GROUP RDOG.
SELECTION-SCREEN BEGIN OF BLOCK BK_04
WITH FRAME TITLE TEXT-404."相殺条件
* 相殺勘定
SELECT-OPTIONS:S_OHKONT FOR BSAD-HKONT,
* 相殺日
S_OSDAT  FOR BSAD-BLDAT.
SELECTION-SCREEN END   OF BLOCK BK_04.

* 作成ファイル名
PARAMETERS:P_FNAME LIKE RLGRAP-FILENAME OBLIGATORY.

*--------------------------------------------------------------------
* INITIALIZATION（プログラム起動時）
*--------------------------------------------------------------------
INITIALIZATION .
*---------------------------------------------------------------------
* AT SELECTION-SCREEN OUTPUT(選択画面設定)
*---------------------------------------------------------------------
AT SELECTION-SCREEN OUTPUT.
*---------------------------------------------------------------------
* AT SELECTION-SCREEN(入力チェック時)
*---------------------------------------------------------------------
AT SELECTION-SCREEN.
* 選択オプションボタン押下時は入力チェック処理をしない
IF SY-UCOMM+0(1) <> '%'.
*   ここに入力チェック処理を記述
ENDIF.
* 会社コード存在チェック
PERFORM CHECK_BUKRS.
* 得意先コード存在チェック
PERFORM CHECK_KUNNR.

***********************************************************************
**アップロードファイル名　取得
***********************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FNAME.
* Mod ES-UP 2012/08/16 -->
*  CALL FUNCTION 'WS_FILENAME_GET'
*   EXPORTING
*     DEF_FILENAME        = P_FNAME       "ファイル入力項目
*     DEF_PATH            = ' '
*    MASK                = ',ＣＳＶ(*.csv),*.CSV,テキスト(*.txt),*.TXT.'
*     MODE                = 'O'
*     TITLE               = 'ファイルを開く '
*   IMPORTING
*     FILENAME            = P_FNAME
**   RC                  =
*   EXCEPTIONS
*     INV_WINSYS          = 1
*     NO_BATCH            = 2
*     SELECTION_CANCEL    = 3
*     SELECTION_ERROR     = 4
*     OTHERS              = 5 .
DATA: L_FILE_TABLE TYPE FILETABLE,
L_FILE       TYPE REF TO FILE_TABLE,
L_RC         TYPE I.
CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG(
*    EXPORTING
*      WINDOW_TITLE            = WINDOW_TITLE
*      DEFAULT_EXTENSION       = DEFAULT_EXTENSION
*      DEFAULT_FILENAME        = DEFAULT_FILENAME
*      FILE_FILTER             = FILE_FILTER
*      WITH_ENCODING           = WITH_ENCODING
*      INITIAL_DIRECTORY       = INITIAL_DIRECTORY
*      MULTISELECTION          = MULTISELECTION
CHANGING
FILE_TABLE              = L_FILE_TABLE
RC                      = L_RC
*      USER_ACTION             = USER_ACTION
*      FILE_ENCODING           = FILE_ENCODING
EXCEPTIONS
FILE_OPEN_DIALOG_FAILED = 0
CNTL_ERROR              = 0
ERROR_NO_GUI            = 0
NOT_SUPPORTED_BY_GUI    = 0
OTHERS                  = 0 ).
IF L_RC > 0.
READ TABLE L_FILE_TABLE REFERENCE INTO L_FILE INDEX 1.
IF SY-SUBRC = 0.
P_FNAME = L_FILE->FILENAME.
ENDIF.
ENDIF.
* Mod ES-UP 2012/08/16 <--
*---------------------------------------------------------------------
* AT LINE-SELECTION(一覧出力行選択時)
*---------------------------------------------------------------------
AT LINE-SELECTION.
*---------------------------------------------------------------------
* AT USER-COMMAND(ユーザ定義の機能コードを実行時)
*---------------------------------------------------------------------
AT USER-COMMAND.
*---------------------------------------------------------------------
* START-OF-SELECTION(プログラム開始時)
*---------------------------------------------------------------------
START-OF-SELECTION.
* 前渡処理
IF R_BHAND = 'X'.
PERFORM GET_MAEWATASI.
* 小切手
ELSEIF R_CHECK = 'X'.
PERFORM GET_KOGITTE.
* 受取手形
ELSEIF R_BILL = 'X'.
PERFORM GET_UKETORI.
* 相殺
ELSEIF R_OFFSET = 'X'.
PERFORM GET_SOUSATU.
ENDIF.
* CSV形式編集
PERFORM DOWNLOAD_SET.
* CSV形式として出力
PERFORM DOWNLOAD_FILE.
* 画面出力
PERFORM LOG_OUT.
*---------------------------------------------------------------------
* END-OF-SELECTION(プログラム終了時)
*---------------------------------------------------------------------
END-OF-SELECTION.
*---------------------------------------------------------------------
* TOP-OF-PAGE（改ページ時(ヘッダ等)）
*---------------------------------------------------------------------
TOP-OF-PAGE.
*---------------------------------------------------------------------
* END-OF-PAGE（改ページ時(フッタ等)）
*---------------------------------------------------------------------
END-OF-PAGE.
*&---------------------------------------------------------------------*
*&      Form  CHECK_BUKRS
*&---------------------------------------------------------------------*
*       会社コード存在チェック
*----------------------------------------------------------------------*
FORM CHECK_BUKRS.
*- 会社コード名称、通貨コードの取得
SELECT SINGLE  BUTXT WAERS SPRAS
FROM T001
INTO (T001-BUTXT,T001-WAERS,T001-SPRAS)
WHERE BUKRS = P_BUKRS.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.                                       "対象データなし
IF SY-SUBRC <> 0.
MESSAGE S600 WITH C_BUKRS.
SET CURSOR FIELD P_BUKRS.
STOP.
ENDIF.
WHEN OTHERS.
MESSAGE A603 WITH SY-REPID C_TBL_001 SY-SUBRC.
ENDCASE.
ENDFORM.                    " CHECK_BUKRS
*&---------------------------------------------------------------------*
*&      Form  CHECK_KUNNR
*&---------------------------------------------------------------------*
*       得意先コード存在チェック
*----------------------------------------------------------------------*
FORM CHECK_KUNNR.
* 得意先名称取得
SELECT SINGLE NAME1   FROM KNA1
INTO KNA1-NAME1
WHERE KUNNR IN S_KUNNR.
CASE SY-SUBRC.
WHEN 0.
WHEN 4."対象データなし
IF SY-SUBRC <> 0.
MESSAGE S600 WITH C_KNA1.
SET CURSOR FIELD S_KUNNR.
STOP.
ENDIF.
WHEN OTHERS.
MESSAGE A603 WITH SY-REPID C_TBL_002 SY-SUBRC.
ENDCASE.
ENDFORM.                    " CHECK_KUNNR
*&---------------------------------------------------------------------*
*&      Form  GET_MAEWATASI
*&---------------------------------------------------------------------*
*       データ読み込み：前渡
*----------------------------------------------------------------------*
FORM GET_MAEWATASI.
DATA:LO_MAE          TYPE TYP_MAE,
LO_MEISAI       TYPE TYP_MEISAI.

REFRESH: GT_MAE.
SELECT T1~INCDAT T1~KUNNR T3~NAME2 T3~SORTL T1~INCAMT
INTO CORRESPONDING FIELDS OF TABLE GT_MAE
FROM YK310 AS T1
INNER JOIN KNB1 AS T2
ON T1~BUKRS  =  T2~BUKRS
AND T1~KUNNR  =  T2~KUNNR
INNER JOIN KNA1 AS T3
ON T2~KUNNR  =  T3~KUNNR
WHERE T1~BUKRS  =  P_BUKRS
AND T1~KUNNR  IN S_KUNNR
AND T1~INCDAT IN S_INCDAT
AND T2~KVERM  =  '1'.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S008.
STOP.
WHEN OTHERS.
MESSAGE A603 WITH SY-REPID C_TBL_003 SY-SUBRC.
STOP.
ENDCASE.

REFRESH: GT_MEISAI,GT_DENPYO.
LOOP AT GT_MAE INTO LO_MAE.
CLEAR: ITAB_MEISAI,WK_DATUM-YY,WK_DATUM-MM,WK_DATUM-DD,WK_DATUM,
WK_DMBTR.
WK_DATUM-YY = LO_MAE-INCDAT(4).
WK_DATUM-MM = LO_MAE-INCDAT+4(2).
WK_DATUM-DD = LO_MAE-INCDAT+6(2).
CONCATENATE :
WK_DATUM-YY WK_DATUM-MM WK_DATUM-DD
INTO WK_DATUM SEPARATED BY '/'.
GT_DENPYO-DATUM_REV = LO_MAE-INCDAT.
GT_DENPYO-KUNNR = LO_MAE-KUNNR.
GT_DENPYO-NAME2 = LO_MAE-NAME2.
GT_DENPYO-SORTL = LO_MAE-SORTL.
GT_DENPYO-VKBUR = '1'.
GT_DENPYO-DATUM_LIM = WK_DATUM.
WK_DMBTR = LO_MAE-INCAMT * 100.
GT_DENPYO-DMBTR = WK_DMBTR.
GT_DENPYO-MEMO = SPACE.
GT_DENPYO-DATUM_SYS = WK_DATUM.
APPEND GT_DENPYO.

ITAB_MEISAI-UKETORI = WK_DATUM.
ITAB_MEISAI-KUNNR = LO_MAE-KUNNR.
ITAB_MEISAI-EIGYO = '1'.
ITAB_MEISAI-KIJITU = WK_DATUM.
ITAB_MEISAI-INCAMT = LO_MAE-INCAMT * 100.
ITAB_MEISAI-TEKIYO = SPACE.
ITAB_MEISAI-SYORI = WK_DATUM.
APPEND ITAB_MEISAI TO GT_MEISAI.
ENDLOOP.

ENDFORM.                    " GET_MAEWATASI
*&---------------------------------------------------------------------
*&      Form  GET_KOGITTE
*&---------------------------------------------------------------------
*       データ読み込み：小切手
*----------------------------------------------------------------------
FORM GET_KOGITTE.
DATA:LO_KOGI1       TYPE TYP_KOGI1,
LO_KOGI2       TYPE TYP_KOGI2,
LO_MEISAI      TYPE TYP_MEISAI.

REFRESH: GT_KOGI1,GT_KOGI2.
SELECT T1~AUGDT T1~KUNNR T3~NAME2 T3~SORTL T1~AUGBL T1~GJAHR
INTO CORRESPONDING FIELDS OF TABLE GT_KOGI1
FROM BSAD AS T1
INNER JOIN KNB1 AS T2
ON T1~BUKRS  =  T2~BUKRS
AND T1~KUNNR  =  T2~KUNNR
INNER JOIN KNA1 AS T3
ON T2~KUNNR  =  T3~KUNNR
WHERE T1~BUKRS  =  P_BUKRS
AND T1~KUNNR  IN S_KUNNR
AND T1~UMSKZ  <> 'W'
AND T1~GJAHR  =  P_GJAHR
AND T1~AUGDT  IN S_RECDT
AND T1~SHKZG  = 'H'
AND T2~KVERM  = '2'.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S008.
STOP.
WHEN OTHERS.
MESSAGE A603 WITH SY-REPID C_TBL_004 SY-SUBRC.
STOP.
ENDCASE.

SELECT DMBTR BELNR
INTO CORRESPONDING FIELDS OF TABLE GT_KOGI2
FROM BSEG
FOR ALL ENTRIES IN GT_KOGI1
WHERE BELNR = GT_KOGI1-AUGBL
AND BUKRS = P_BUKRS
AND GJAHR = GT_KOGI1-GJAHR
AND BSCHL = '40'
AND SHKZG = 'S'
AND HKONT IN S_CHKONT.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S008.
STOP.
WHEN OTHERS.
MESSAGE A603 WITH SY-REPID C_TBL_005 SY-SUBRC.
STOP.
ENDCASE.

SORT GT_KOGI1 BY AUGBL.
SORT GT_KOGI2 BY BELNR.
REFRESH: GT_MEISAI,GT_DENPYO.
LOOP AT GT_KOGI1 INTO LO_KOGI1.
CLEAR:WK_DMBTR1.
LOOP AT GT_KOGI2 INTO LO_KOGI2.
IF LO_KOGI1-AUGBL = LO_KOGI2-BELNR.
CLEAR:WK_DMBTR.
WK_DMBTR = LO_KOGI2-DMBTR * 100.
WK_DMBTR1 = WK_DMBTR1 + WK_DMBTR.
AT END OF BELNR.
CLEAR: ITAB_MEISAI,WK_DATUM-YY,WK_DATUM-MM,WK_DATUM-DD,
WK_DATUM.
WK_DATUM-YY = LO_KOGI1-AUGDT(4).
WK_DATUM-MM = LO_KOGI1-AUGDT+4(2).
WK_DATUM-DD = LO_KOGI1-AUGDT+6(2).
CONCATENATE :
WK_DATUM-YY WK_DATUM-MM WK_DATUM-DD
INTO WK_DATUM SEPARATED BY '/'.
GT_DENPYO-DATUM_REV = LO_KOGI1-AUGDT.
GT_DENPYO-KUNNR = LO_KOGI1-KUNNR.
GT_DENPYO-NAME2 = LO_KOGI1-NAME2.
GT_DENPYO-SORTL = LO_KOGI1-SORTL.
GT_DENPYO-VKBUR = '1'.
GT_DENPYO-DATUM_LIM = WK_DATUM.
GT_DENPYO-DMBTR = WK_DMBTR1.
GT_DENPYO-MEMO = SPACE.
GT_DENPYO-DATUM_SYS = WK_DATUM.
APPEND GT_DENPYO.

ITAB_MEISAI-UKETORI = WK_DATUM.
ITAB_MEISAI-KUNNR = LO_KOGI1-KUNNR.
ITAB_MEISAI-EIGYO = '1'.
ITAB_MEISAI-KIJITU = WK_DATUM.
ITAB_MEISAI-INCAMT = WK_DMBTR1.
ITAB_MEISAI-TEKIYO = SPACE.
ITAB_MEISAI-SYORI = WK_DATUM.
APPEND ITAB_MEISAI TO GT_MEISAI.
ENDAT.
ENDIF.
ENDLOOP.
ENDLOOP.
ENDFORM.                    " GET_KOGITTE
*&---------------------------------------------------------------------
*&      Form  GET_UKETORI
*&---------------------------------------------------------------------
*       データ読み込み：受取手形
*----------------------------------------------------------------------
FORM GET_UKETORI.
DATA:LO_UKETO1       TYPE TYP_UKETO1,
LO_UKETO2       TYPE TYP_UKETO2,
LO_MEISAI       TYPE TYP_MEISAI,
LO_BUZEI(3)     TYPE C.

REFRESH:GT_UKETO1,GT_UKETO2.
SELECT T3~KUNNR T3~NAME2 T3~SORTL T1~BLDAT T1~DMBTR T1~BELNR T1~GJAHR
T1~BUZEI
INTO CORRESPONDING FIELDS OF TABLE GT_UKETO1
FROM BSID AS T1
INNER JOIN KNB1 AS T2
ON T1~BUKRS  =  T2~BUKRS
AND T1~KUNNR  =  T2~KUNNR
INNER JOIN KNA1 AS T3
ON T2~KUNNR  =  T3~KUNNR
WHERE T1~BUKRS  =  P_BUKRS
AND T1~KUNNR  IN S_KUNNR
AND T1~UMSKZ  = 'W'
AND T1~GJAHR  =  P_GJAHR
AND T1~BLDAT  IN S_BLDAT
AND T1~SHKZG  = 'S'
AND T1~HKONT  IN S_BHKONT
AND T2~KVERM  = '2'.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S008.
STOP.
WHEN OTHERS.
MESSAGE A603 WITH SY-REPID C_TBL_006 SY-SUBRC.
STOP.
ENDCASE.

SELECT BELNR WDATE BUZEI
INTO CORRESPONDING FIELDS OF TABLE GT_UKETO2
FROM BSED
FOR ALL ENTRIES IN GT_UKETO1
WHERE BELNR =  GT_UKETO1-BELNR
AND BUKRS =  P_BUKRS
AND GJAHR =  GT_UKETO1-GJAHR
AND BUZEI =  GT_UKETO1-BUZEI.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S008.
STOP.
WHEN OTHERS.
MESSAGE A603 WITH SY-REPID C_TBL_007 SY-SUBRC.
STOP.
ENDCASE.

SORT GT_UKETO1 BY BLDAT.
SORT GT_UKETO2 BY WDATE.
REFRESH: GT_MEISAI,GT_DENPYO,GT_DENPYO1.
LOOP AT GT_UKETO1 INTO LO_UKETO1.
LOOP AT GT_UKETO2 INTO LO_UKETO2.
IF LO_UKETO1-BELNR = LO_UKETO2-BELNR
AND LO_UKETO1-BUZEI = LO_UKETO2-BUZEI.
CLEAR: ITAB_MEISAI,WK_DATUM-YY,WK_DATUM-MM,WK_DATUM-DD,WK_DATUM,
WK_DMBTR.
WK_DATUM-YY = LO_UKETO1-BLDAT(4).
WK_DATUM-MM = LO_UKETO1-BLDAT+4(2).
WK_DATUM-DD = LO_UKETO1-BLDAT+6(2).
CONCATENATE :WK_DATUM-YY WK_DATUM-MM WK_DATUM-DD
INTO WK_DATUM SEPARATED BY '/'.
GT_DENPYO1-DATUM_REV = LO_UKETO2-WDATE.
GT_DENPYO1-KUNNR = LO_UKETO1-KUNNR.
GT_DENPYO1-NAME2 = LO_UKETO1-NAME2.
GT_DENPYO1-SORTL = LO_UKETO1-SORTL.
GT_DENPYO1-VKBUR = '1'.
GT_DENPYO1-DATUM_LIM = WK_DATUM.
WK_DMBTR = LO_UKETO1-DMBTR * 100.
GT_DENPYO1-DMBTR = WK_DMBTR.
GT_DENPYO1-MEMO = SPACE.
GT_DENPYO1-DATUM_SYS = WK_DATUM.
APPEND GT_DENPYO1.
ENDIF.
ENDLOOP.
ENDLOOP.

SORT: GT_DENPYO1 BY DATUM_REV DATUM_LIM.
LOOP AT GT_DENPYO1.
WK_DATUM_REV = GT_DENPYO1-DATUM_REV.
WK_KUNNR = GT_DENPYO1-KUNNR.
WK_NAME2 = GT_DENPYO1-NAME2.
WK_SORTL = GT_DENPYO1-SORTL.
WK_VKBUR = GT_DENPYO1-VKBUR.
WK_DATUM_LIM = GT_DENPYO1-DATUM_LIM.
WK_MEMO = GT_DENPYO1-MEMO.
WK_DATUM_SYS = GT_DENPYO1-DATUM_SYS.
WK_DMBTR1 = GT_DENPYO1-DMBTR.
WK_GOKEI = WK_DMBTR1 + WK_GOKEI.
AT END OF DATUM_LIM.
GT_DENPYO-DATUM_REV = WK_DATUM_REV.
GT_DENPYO-KUNNR = WK_KUNNR.
GT_DENPYO-NAME2 = WK_NAME2.
GT_DENPYO-SORTL = WK_SORTL.
GT_DENPYO-VKBUR = WK_VKBUR.
GT_DENPYO-DATUM_LIM = WK_DATUM_LIM.
GT_DENPYO-DMBTR = WK_GOKEI.
GT_DENPYO-MEMO = WK_MEMO.
GT_DENPYO-DATUM_SYS = WK_DATUM_SYS.
APPEND GT_DENPYO.

WK_DATUM1-YY = WK_DATUM_REV(4).
WK_DATUM1-MM = WK_DATUM_REV+4(2).
WK_DATUM1-DD = WK_DATUM_REV+6(2).
CONCATENATE :WK_DATUM1-YY WK_DATUM1-MM WK_DATUM1-DD
INTO WK_DATUM1 SEPARATED BY '/'.
ITAB_MEISAI-UKETORI = WK_DATUM1.
ITAB_MEISAI-KUNNR = WK_KUNNR.
ITAB_MEISAI-EIGYO = '1'.
ITAB_MEISAI-KIJITU = WK_DATUM_LIM.
ITAB_MEISAI-INCAMT = WK_GOKEI.
ITAB_MEISAI-TEKIYO = WK_MEMO.
ITAB_MEISAI-SYORI = WK_DATUM_SYS.
APPEND ITAB_MEISAI TO GT_MEISAI.
CLEAR:WK_DMBTR1,WK_GOKEI,WK_DATUM1-YY,WK_DATUM1-MM,WK_DATUM1-DD,
WK_DATUM1.
ENDAT.
ENDLOOP.
ENDFORM.                    " GET_UKETORI
*&---------------------------------------------------------------------
*&      Form  GET_SOUSATU
*&---------------------------------------------------------------------
*       データ読み込み：相殺
*----------------------------------------------------------------------
FORM GET_SOUSATU.
DATA:LO_SOUSA1       TYPE TYP_SOUSA1,
LO_SOUSA2       TYPE TYP_SOUSA2,
LO_MEISAI       TYPE TYP_MEISAI.

REFRESH:GT_SOUSA1,GT_SOUSA2.
SELECT T1~AUGDT T2~KUNNR T3~NAME2 T3~SORTL T1~AUGBL T1~GJAHR T1~DMBTR
INTO CORRESPONDING FIELDS OF TABLE GT_SOUSA1
FROM BSAD AS T1
INNER JOIN KNB1 AS T2
ON T1~BUKRS  =  T2~BUKRS
AND T1~KUNNR  =  T2~KUNNR
INNER JOIN KNA1 AS T3
ON T2~KUNNR  =  T3~KUNNR
WHERE T1~BUKRS  =  P_BUKRS
AND T1~KUNNR  IN S_KUNNR
AND T1~UMSKZ  <> 'W'
AND T1~AUGDT  IN S_OSDAT
AND T1~SHKZG  = 'H'
AND T1~GJAHR  = P_GJAHR
AND T1~HKONT  IN S_HKONT.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S008.
STOP.
WHEN OTHERS.
MESSAGE A603 WITH SY-REPID C_TBL_004 SY-SUBRC.
STOP.
ENDCASE.

SELECT DMBTR BELNR
INTO CORRESPONDING FIELDS OF TABLE GT_SOUSA2
FROM BSAK
FOR ALL ENTRIES IN GT_SOUSA1
WHERE BELNR =  GT_SOUSA1-AUGBL
AND BUKRS =  P_BUKRS
AND GJAHR =  P_GJAHR
AND AUGDT IN S_OSDAT
AND UMSKZ <> 'W'
AND SHKZG =  'S'
AND HKONT IN S_OHKONT.

CASE SY-SUBRC.
WHEN 0.
WHEN 4.
MESSAGE S008.
STOP.
WHEN OTHERS.
MESSAGE A603 WITH SY-REPID C_TBL_008 SY-SUBRC.
STOP.
ENDCASE.

SORT GT_SOUSA1 BY AUGBL.
SORT GT_SOUSA2 BY BELNR.
REFRESH: GT_MEISAI,GT_DENPYO.
LOOP AT GT_SOUSA1 INTO LO_SOUSA1.
CLEAR:WK_DMBTR,WK_GOKEI,WK_DMBTR2.
LOOP AT GT_SOUSA2 INTO LO_SOUSA2.
IF LO_SOUSA1-AUGBL = LO_SOUSA2-BELNR.
WK_DMBTR = LO_SOUSA2-DMBTR * 100.
WK_GOKEI = WK_GOKEI + WK_DMBTR.
AT END OF BELNR.
CLEAR:ITAB_MEISAI,WK_DATUM-YY,WK_DATUM-MM,WK_DATUM-DD,WK_DATUM
,WK_DMBTR1.
WK_DATUM-YY = LO_SOUSA1-AUGDT(4).
WK_DATUM-MM = LO_SOUSA1-AUGDT+4(2).
WK_DATUM-DD = LO_SOUSA1-AUGDT+6(2).
CONCATENATE :
WK_DATUM-YY WK_DATUM-MM WK_DATUM-DD
INTO WK_DATUM SEPARATED BY '/'.
GT_DENPYO-DATUM_REV = LO_SOUSA1-AUGDT.
GT_DENPYO-KUNNR = LO_SOUSA1-KUNNR.
GT_DENPYO-NAME2 = LO_SOUSA1-NAME2.
GT_DENPYO-SORTL = LO_SOUSA1-SORTL.
GT_DENPYO-VKBUR = '1'.
GT_DENPYO-DATUM_LIM = WK_DATUM.
WK_DMBTR2 = LO_SOUSA1-DMBTR * 100.
IF WK_DMBTR2 > WK_GOKEI.
GT_DENPYO-DMBTR = WK_GOKEI.
WK_DMBTR1 = WK_GOKEI.
ELSE.
GT_DENPYO-DMBTR = WK_DMBTR2.
WK_DMBTR1 = WK_DMBTR2.
ENDIF.
GT_DENPYO-MEMO = SPACE.
GT_DENPYO-DATUM_SYS = WK_DATUM.
APPEND GT_DENPYO.

ITAB_MEISAI-UKETORI = WK_DATUM.
ITAB_MEISAI-KUNNR = LO_SOUSA1-KUNNR.
ITAB_MEISAI-EIGYO = '1'.
ITAB_MEISAI-KIJITU = WK_DATUM.
ITAB_MEISAI-INCAMT = WK_DMBTR1.
ITAB_MEISAI-TEKIYO = SPACE.
ITAB_MEISAI-SYORI = WK_DATUM.
APPEND ITAB_MEISAI TO GT_MEISAI.
ENDAT.
ENDIF.
ENDLOOP.
ENDLOOP.
ENDFORM.                    " GET_SOUSATU
*&---------------------------------------------------------------------
*&      Form  DOWNLOAD_SET
*&---------------------------------------------------------------------
*       ファイル編集
*----------------------------------------------------------------------
FORM DOWNLOAD_SET.
*
DATA:LO_MEISAI  TYPE TYP_MEISAI.

REFRESH: GT_HEADER.
LOOP AT GT_MEISAI INTO LO_MEISAI.
CLEAR ITAB_MEISAI.
CONCATENATE LO_MEISAI-UKETORI
LO_MEISAI-KUNNR
LO_MEISAI-EIGYO
LO_MEISAI-KIJITU
LO_MEISAI-INCAMT
LO_MEISAI-TEKIYO
LO_MEISAI-SYORI
INTO ITAB_HEADER SEPARATED BY ','.
APPEND ITAB_HEADER TO GT_HEADER.
ENDLOOP.
*
ENDFORM.                    " DOWNLOAD_SET
*&---------------------------------------------------------------------*
*&      Form  DOWNLOAD_FILE
*&---------------------------------------------------------------------*
*       ファイル出力
*----------------------------------------------------------------------*
FORM DOWNLOAD_FILE.
* Mod ES-UP 2012/08/16 -->
*  CALL FUNCTION 'WS_DOWNLOAD'
*   EXPORTING
**   BIN_FILESIZE                  = ' '
**   CODEPAGE                      = ' '
*     FILENAME                      = P_FNAME
*     FILETYPE                      = 'ASC'
*     MODE                          = ' '
**   WK1_N_FORMAT                  = ' '
**   WK1_N_SIZE                    = ' '
**   WK1_T_FORMAT                  = ' '
**   WK1_T_SIZE                    = ' '
**   COL_SELECT                    = ' '
**   COL_SELECTMASK                = ' '
**   NO_AUTH_CHECK                 = ' '
** IMPORTING
**   FILELENGTH                    =
*   TABLES
*     DATA_TAB                      = GT_HEADER
**   FIELDNAMES                    =
*   EXCEPTIONS
*     FILE_OPEN_ERROR               = 1
*     FILE_WRITE_ERROR              = 2
*     INVALID_FILESIZE              = 3
*     INVALID_TYPE                  = 4
*     NO_BATCH                      = 5
*     UNKNOWN_ERROR                 = 6
*     INVALID_TABLE_WIDTH           = 7
*     GUI_REFUSE_FILETRANSFER       = 8
*     CUSTOMER_ERROR                = 9
*     OTHERS                        = 10
*          .
DATA: L_FILENAME TYPE STRING,
L_CODEPAGE TYPE ABAP_ENCODING.
*        L_TRUNC    TYPE ABAP_BOOL.
L_FILENAME = P_FNAME.
*  L_TRUNC    = ABAP_FALSE. "固定長のときは、ABAP_FALSE
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
CL_GUI_FRONTEND_SERVICES=>GUI_DOWNLOAD(
EXPORTING
*      BIN_FILESIZE              = BIN_FILESIZE
FILENAME                  = L_FILENAME
FILETYPE                  = 'ASC'
*      APPEND                    = SPACE
WRITE_FIELD_SEPARATOR     = ABAP_FALSE
*      HEADER                    = '00'
*      TRUNC_TRAILING_BLANKS     = L_TRUNC
*      WRITE_LF                  = 'X'
*      COL_SELECT                = SPACE
*      COL_SELECT_MASK           = SPACE
*      DAT_MODE                  = SPACE
*      CONFIRM_OVERWRITE         = SPACE
*      NO_AUTH_CHECK             = SPACE
CODEPAGE                  = L_CODEPAGE
*      IGNORE_CERR               = ABAP_TRUE
*      REPLACEMENT               = '#'
*      WRITE_BOM                 = SPACE
*      TRUNC_TRAILING_BLANKS_EOL = L_TRUNC
*      WK1_N_FORMAT              = SPACE
*      WK1_N_SIZE                = SPACE
*      WK1_T_FORMAT              = SPACE
*      WK1_T_SIZE                = SPACE
*      SHOW_TRANSFER_STATUS      = 'X'
*      FIELDNAMES                = FIELDNAMES
*      WRITE_LF_AFTER_LAST_LINE  = 'X'
*    IMPORTING
*      FILELENGTH                = FILELENGTH
CHANGING
DATA_TAB                  = GT_HEADER
EXCEPTIONS
FILE_WRITE_ERROR          = 1
NO_BATCH                  = 2
GUI_REFUSE_FILETRANSFER   = 3
INVALID_TYPE              = 4
NO_AUTHORITY              = 5
UNKNOWN_ERROR             = 6
HEADER_NOT_ALLOWED        = 7
SEPARATOR_NOT_ALLOWED     = 8
FILESIZE_NOT_ALLOWED      = 9
HEADER_TOO_LONG           = 10
DP_ERROR_CREATE           = 11
DP_ERROR_SEND             = 12
DP_ERROR_WRITE            = 13
UNKNOWN_DP_ERROR          = 14
ACCESS_DENIED             = 15
DP_OUT_OF_MEMORY          = 16
DISK_FULL                 = 17
DP_TIMEOUT                = 18
FILE_NOT_FOUND            = 19
DATAPROVIDER_EXCEPTION    = 20
CONTROL_FLUSH_ERROR       = 21
NOT_SUPPORTED_BY_GUI      = 22
ERROR_NO_GUI              = 23
OTHERS                    = 24 ).
* Mod ES-UP 2012/08/16 <--
IF SY-SUBRC <> 0.
MESSAGE S400 WITH 'ダウンロードに失敗しました'.
STOP.
ENDIF.

ENDFORM.                    " DOWNLOAD_FILE
*&---------------------------------------------------------------------*
*&      Form  FRM_SET_PRINT_PARAMETERS
*&---------------------------------------------------------------------*
*       ALV用強制印刷設定
*----------------------------------------------------------------------*
FORM FRM_SET_PRINT_PARAMETERS.

DATA:LF_PRI_PARAMS LIKE PRI_PARAMS.
TABLES USR01.

SELECT SINGLE * FROM USR01 WHERE BNAME = SY-UNAME.

* プリンタ設定
LF_PRI_PARAMS-PDEST = USR01-SPLD.
* 書式設定
LF_PRI_PARAMS-PAART = 'X_65_255'.

CALL FUNCTION 'SET_PRINT_PARAMETERS'
EXPORTING
DESTINATION                 = LF_PRI_PARAMS-PDEST
IMMEDIATELY                 = 'X'
LAYOUT                      = LF_PRI_PARAMS-PAART
LINE_COUNT                  = 65
LINE_SIZE                   = 255
NEW_LIST_ID                 = 'X'
RELEASE                     = USR01-SPDA
.
* --- 使用すると落ちるため未使用
*  NEW-PAGE PRINT ON PARAMETERS LF_PRI_PARAMS NO DIALOG.

ENDFORM.                    " FRM_SET_PRINT_PARAMETERS
*---------------------------------------------------------------------
* ALV TOP OF PAGE
*---------------------------------------------------------------------
FORM FRM_TOP_OF_PAGE.
DATA: L_SY-TABIX TYPE P.

WRITE:  80   CNS_TITLE.
WRITE:  162  CNS_MAKEDAT,SY-DATUM DD/MM/YY.
WRITE:  184  SY-UZEIT USING EDIT MASK '__:__'.

ENDFORM.
*---------------------------------------------------------------------
* ALV caller_exit
*---------------------------------------------------------------------
FORM FRM_CALLER_EXIT USING RS_DATA TYPE SLIS_DATA_CALLER_EXIT.
RS_DATA-CALLBACK_HEADER_TRANSPORT = 'FILITEXTS_TEXT_TRANSPORT'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  LOG_OUT
*&---------------------------------------------------------------------*
*       画面出力
*----------------------------------------------------------------------*
FORM LOG_OUT.

* 印刷設定：ALV統計を印刷しない
GF_PRINT-NO_PRINT_LISTINFOS = 'X'.

GF_LAYOUT-GROUP_CHANGE_EDIT = 'X'.
* フィールドカタログの設定
GF_FIELDCAT-JUST = 'R'.
GF_FIELDCAT-FIELDNAME = 'KBETR_M'.
APPEND GF_FIELDCAT TO GT_FIELDCAT.
GF_FIELDCAT-FIELDNAME = 'KBETR_V'.
APPEND GF_FIELDCAT TO GT_FIELDCAT.

* 使用可能イベントのチェック
CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
EXPORTING
I_LIST_TYPE     = 0
IMPORTING
ET_EVENTS       = GT_EVENT  "使用可能なイベント取得
EXCEPTIONS
LIST_TYPE_WRONG = 1
OTHERS          = 2.

* 使用イベントに実行するサブルーチン名を設定
LOOP AT GT_EVENT INTO GF_EVENT.
CASE GF_EVENT-NAME.
WHEN 'TOP_OF_PAGE'.
GF_EVENT-FORM = 'FRM_TOP_OF_PAGE'.
MODIFY GT_EVENT FROM GF_EVENT.
WHEN 'CALLER_EXIT'.
GF_EVENT-FORM = 'FRM_CALLER_EXIT'.
MODIFY GT_EVENT FROM GF_EVENT.
ENDCASE.
ENDLOOP.

PERFORM FRM_SET_PRINT_PARAMETERS.
*--- リストの出力
CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM             = 'ZF010900'    "レポートID
* Del ES-UP 2012/08/16 -->
*      I_CALLBACK_TOP_OF_PAGE         = TOP_OF_PAGE   "G_HEAD_FRM
* Del ES-UP 2012/08/16 <--
I_STRUCTURE_NAME               = 'ZFLIST_V09'  "構造
IS_LAYOUT                      = GF_LAYOUT     "レイアウト設定
IT_FIELDCAT                    = GT_FIELDCAT   "カタログ設定
I_SAVE                         = 'A'           "レイアウト保存
IT_EVENTS                      = GT_EVENT[]    "イベント設定
IS_PRINT                       = GF_PRINT      "印刷設定
TABLES
T_OUTTAB                       = GT_DENPYO
EXCEPTIONS
PROGRAM_ERROR                  = 1
OTHERS                         = 2.

ENDFORM.                    " LOG_OUT
