*&---------------------------------------------------------------------*
*&  Include           ZEGSDI1050_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  GET_LOCAL_PATH
*&---------------------------------------------------------------------*
*       ローカルファイル名取得
*----------------------------------------------------------------------*
FORM GET_LOCAL_PATH .

DATA: LW_FILENAME    TYPE STRING,
LW_PATH        TYPE STRING,
LW_FULLPATH    TYPE STRING,
LW_USER_ACTION TYPE I.

CL_GUI_FRONTEND_SERVICES=>FILE_SAVE_DIALOG(
CHANGING
FILENAME             = LW_FILENAME
PATH                 = LW_PATH
FULLPATH             = LW_FULLPATH
USER_ACTION          = LW_USER_ACTION
*      FILE_ENCODING        = FILE_ENCODING
EXCEPTIONS
CNTL_ERROR           = 1
ERROR_NO_GUI         = 2
NOT_SUPPORTED_BY_GUI = 3
OTHERS               = 4 ).
IF SY-SUBRC = 0
AND LW_USER_ACTION = CL_GUI_FRONTEND_SERVICES=>ACTION_OK.
P_FNAME = LW_FULLPATH.
ENDIF.

ENDFORM.                    " GET_LOCAL_PATH
*&---------------------------------------------------------------------*
*&      Form  CHECK_INPUT
*&---------------------------------------------------------------------*
*       入力チェック
*----------------------------------------------------------------------*
FORM CHECK_INPUT .

* プラントコード存在チェック
PERFORM CHECK_WERKS.

* プラントの権限チェック
PERFORM CHECK_WERKS_AUTH.

ENDFORM.                    " CHECK_INPUT
*&---------------------------------------------------------------------*
*&      Form  CHECK_WERKS
*&---------------------------------------------------------------------*
*       プラントコード存在チェック
*----------------------------------------------------------------------*
FORM CHECK_WERKS .

TYPES: BEGIN OF LTYP_WERKS,
WERKS TYPE T001W-WERKS,
END OF LTYP_WERKS.

DATA: LTD_WERKS   TYPE STANDARD TABLE OF LTYP_WERKS,
LST_WERKS   TYPE LTYP_WERKS,
LST_WERKS_R LIKE LINE OF RD_WERKS.

SELECT WERKS
INTO TABLE LTD_WERKS
FROM T001W
WHERE WERKS IN S_WERKS.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'S_WERKS-LOW'.
*   プラント ( &1 ) は存在しません
MESSAGE E004(ZMEGSD01) WITH S_WERKS-LOW.
ENDIF.

REFRESH RD_WERKS.
LOOP AT LTD_WERKS INTO LST_WERKS.
LST_WERKS_R-SIGN = 'I'.
LST_WERKS_R-OPTION = 'EQ'.
LST_WERKS_R-LOW = LST_WERKS-WERKS.
APPEND LST_WERKS_R TO RD_WERKS.
ENDLOOP.

ENDFORM.                    " CHECK_WERKS
*&---------------------------------------------------------------------*
*&      Form  CHECK_WERKS_AUTH
*&---------------------------------------------------------------------*
*       プラントの権限チェック
*----------------------------------------------------------------------*
FORM CHECK_WERKS_AUTH .

DATA: LST_WERKS LIKE LINE OF RD_WERKS.

LOOP AT RD_WERKS INTO LST_WERKS.
AUTHORITY-CHECK OBJECT 'M_MSEG_WMB'
ID 'WERKS' FIELD LST_WERKS-LOW
ID 'ACTVT' FIELD '01'.
IF SY-SUBRC <> 0.
SET CURSOR FIELD 'S_WERKS-LOW'.
*     プラントに対する実行権限がありません
MESSAGE E003(ZMEGSD01).
ENDIF.
ENDLOOP.

ENDFORM.                    " CHECK_WERKS_AUTH
*&---------------------------------------------------------------------*
*&      Form  CHECK_OBLIGATORY
*&---------------------------------------------------------------------*
*       条件必須チェック
*----------------------------------------------------------------------*
FORM CHECK_OBLIGATORY .

* 選択画面のラジオボタン「Print」「Reprint」が選択されている場合
IF RB_PRINT = 'X'
OR RB_REPNT = 'X'.
IF P_PTRAY IS INITIAL.
SET CURSOR FIELD 'P_PTRAY'.
*     &1 が入力されていません。
MESSAGE E031(ZMEGSD01) WITH TEXT-M01.
ENDIF.
* 選択画面のラジオボタン「Download」が選択されている場合
ELSE.
IF P_FNAME IS INITIAL.
SET CURSOR FIELD 'P_FNAME'.
*     &1 が入力されていません。
MESSAGE E031(ZMEGSD01) WITH TEXT-M02.
ENDIF.
ENDIF.

ENDFORM.                    " CHECK_OBLIGATORY
*&---------------------------------------------------------------------*
*&      Form  MAIN_PROCESS
*&---------------------------------------------------------------------*
*       主処理
*----------------------------------------------------------------------*
FORM MAIN_PROCESS .

* テーブル定義
DATA:
*   メインデータ
LTD_ZTEGSDT003     TYPE STANDARD TABLE OF TYP_ZTEGSDT003,
LTD_ZTEGSDT004_KEY TYPE STANDARD TABLE OF TYP_ZTEGSDT004_KEY,
LTD_ZTEGSDT004     TYPE STANDARD TABLE OF TYP_ZTEGSDT004,
LTD_ZTEGSDT001     TYPE STANDARD TABLE OF TYP_ZTEGSDT001,
LTD_ZTEGSDT002_KEY TYPE STANDARD TABLE OF TYP_ZTEGSDT002_KEY,
LTD_ZTEGSDT002     TYPE STANDARD TABLE OF TYP_ZTEGSDT002,
LTD_ZTEGSDT015     TYPE STANDARD TABLE OF TYP_ZTEGSDT015,
*   他のデータ
LTD_LIKP           TYPE STANDARD TABLE OF TYP_LIKP,
LTD_KNA1           TYPE STANDARD TABLE OF TYP_KNA1,
LTD_T005X          TYPE STANDARD TABLE OF TYP_T005X,
LTD_DD07T          TYPE STANDARD TABLE OF TYP_DD07T,

**** START ADD 2015/02/25 ISID11 ****
LTD_NAME_TEXT      TYPE STANDARD TABLE OF TYP_USRNAME,
**** END ADD 2015/02/25 ISID11 ****

**** START ADD 2015/02/11 ISID11 ****
LTD_VBPA           TYPE STANDARD TABLE OF TYP_VBPA,
**** END ADD 2015/02/11 ISID11 ****

*   他のデータ検索用
LTD_LIKP_S         TYPE STANDARD TABLE OF TYP_LIKP,
*   編集出力用
LTD_SI             TYPE STANDARD TABLE OF TYP_SI,
LTD_FILE           TYPE STANDARD TABLE OF ZSEGSD0018,
*   ファイル用
LW_FNAME(128)      TYPE C,
LW_OUTPUT_CP       TYPE ZTEGZZT001-Z_OUTPUT_CP,
*   出力結果用
LTD_MESSAGE        TYPE STANDARD TABLE OF TYP_MESSAGE,
LW_COUNT           TYPE I,
LW_NORMAL          TYPE I,
LW_ERROR           TYPE I.

* Shipping Instructionデータ
PERFORM GET_SI_DATA CHANGING LTD_ZTEGSDT003
LTD_ZTEGSDT004_KEY
LTD_ZTEGSDT004
LTD_ZTEGSDT001
LTD_ZTEGSDT002_KEY
LTD_ZTEGSDT002
LTD_ZTEGSDT015
LTD_LIKP_S.
* 他のデータ取得
PERFORM GET_OTHER_DATA USING LTD_LIKP_S
**** START ADD 2015/02/25 ISID11 ****
LTD_ZTEGSDT003
**** END ADD 2015/02/25 ISID11 ****
CHANGING LTD_LIKP
LTD_KNA1
LTD_T005X
LTD_DD07T
**** START ADD 2015/02/25 ISID11 ****
LTD_NAME_TEXT
**** END ADD 2015/02/25 ISID11 ****

**** START ADD 2015/02/11 ISID11 ****
LTD_VBPA.
**** END ADD 2015/02/11 ISID11 ****

* データの編集
PERFORM EDIT_DATA USING LTD_ZTEGSDT003
LTD_ZTEGSDT004_KEY
LTD_ZTEGSDT004
LTD_ZTEGSDT001
LTD_ZTEGSDT002_KEY
LTD_ZTEGSDT002
LTD_ZTEGSDT015
LTD_LIKP
LTD_KNA1
LTD_T005X
LTD_DD07T
**** START ADD 2015/02/25 ISID11 ****
LTD_NAME_TEXT
**** END ADD 2015/02/25 ISID11 ****
**** START ADD 2015/02/11 ISID11 ****
LTD_VBPA
**** END ADD 2015/02/11 ISID11 ****
CHANGING LTD_SI
LTD_FILE.
* テーブル更新
PERFORM UPDATE_TABLE USING LTD_SI
LTD_ZTEGSDT015
CHANGING LW_FNAME
LW_OUTPUT_CP
LTD_MESSAGE
LW_COUNT
LW_NORMAL
LW_ERROR.
* ファイル出力
PERFORM OUTPUT_FILE USING LTD_FILE
LW_FNAME
LW_OUTPUT_CP.

* 結果画面出力
PERFORM OUTPUT_RESULT USING LTD_MESSAGE
LW_FNAME
LW_COUNT
LW_NORMAL
LW_ERROR.

ENDFORM.                    " MAIN_PROCESS
*&---------------------------------------------------------------------*
*&      Form  GET_SI_DATA
*&---------------------------------------------------------------------*
*       Shipping Instructionデータ
*----------------------------------------------------------------------*
*      <--O_TD_ZTEGSDT003
*      <--O_TD_ZTEGSDT004_KEY
*      <--O_TD_ZTEGSDT004
*      <--O_TD_ZTEGSDT001
*      <--O_TD_ZTEGSDT002
*      <--O_TD_ZTEGSDT015
*      <--O_TD_LIKP_S
*----------------------------------------------------------------------*
FORM GET_SI_DATA CHANGING O_TD_ZTEGSDT003     TYPE TYP_TD_ZTEGSDT003
O_TD_ZTEGSDT004_KEY TYPE TYP_TD_ZTEGSDT004_KEY
O_TD_ZTEGSDT004     TYPE TYP_TD_ZTEGSDT004
O_TD_ZTEGSDT001     TYPE TYP_TD_ZTEGSDT001
O_TD_ZTEGSDT002_KEY TYPE TYP_TD_ZTEGSDT002_KEY
O_TD_ZTEGSDT002     TYPE TYP_TD_ZTEGSDT002
O_TD_ZTEGSDT015     TYPE TYP_TD_ZTEGSDT015
O_TD_LIKP_S         TYPE TYP_TD_LIKP.

DATA: LST_ZTEGSDT001 TYPE TYP_ZTEGSDT001,
**** START ADD 2015/02/11 ISID11 ****
LST_ZTEGSDT003 TYPE TYP_ZTEGSDT003,
LST_ZTEGSDT015 TYPE TYP_ZTEGSDT015,
LW_TABIX_T003  TYPE SY-TABIX,
LW_Z_OUTPUT_MODE  TYPE ZTEGSDT015-Z_OUTPUT_MODE,
**** END ADD 2015/02/11 ISID11 ****
LST_LIKP       TYPE TYP_LIKP,
LST_ZTEGSDT004 TYPE TYP_ZTEGSDT004_KEY,
LST_RESULT     TYPE TYP_ZTEGSDT004,
LST_ZTEGSDT002 TYPE TYP_ZTEGSDT002_KEY,
LTD_CASECOUNT  TYPE STANDARD TABLE OF TYP_ZTEGSDT002,
LST_CASECOUNT  TYPE TYP_ZTEGSDT002,
LW_TABIX       TYPE I,
LW_INVNO1      TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO2      TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO3      TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO4      TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO5      TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO6      TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO7      TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO8      TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO9      TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO10     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO11     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO12     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO13     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO14     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO15     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO16     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO17     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO18     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO19     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO20     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO21     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO22     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO23     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO24     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO25     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO26     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO27     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO28     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO29     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_INVNO30     TYPE ZTEGSDT004-Z_INVOICE_NO,
LW_COUNT       TYPE ZTEGSDT002-Z_CASE_COUNT,
LW_END         TYPE CHAR1.

* Shipping Instructionデータ取得
SELECT Z_SI_NO  "S/I No
Z_SI_DATE  "S/I Date
Z_CUST_CNEE  "Customer(CNEE)
Z_CUST_NAME_CNEE  "Name(CNEE)
Z_ADDRESS1_CNEE  "Address1(CNEE)
Z_ADDRESS2_CNEE  "Address2(CNEE)
**** START ADD 2014/12/25 ISID11 ****
Z_ADDRESS3_CNEE  "Address3(CNEE)
Z_ADDRESS4_CNEE  "Address4(CNEE)
**** END ADD 2014/12/25 ISID11 ****
Z_ATTN_CNEE  "Attn(CNEE)
Z_TEL_CNEE  "Tel(CNEE)
Z_FAX_CNEE  "Fax(CNEE)
Z_CUST_NTFY  "Customer(Notify)
Z_CUST_NAME_NTFY  "Name(Notify)
Z_ADDRESS1_NTFY  "Address1(Notify)
Z_ADDRESS2_NTFY  "Address2(Notify)
**** START ADD 2014/12/25 ISID11 ****
Z_ADDRESS3_NTFY  "Address3(Notify)
Z_ADDRESS4_NTFY  "Address4(Notify)
**** END ADD 2014/12/25 ISID11 ****
Z_ATTN_NTFY  "Attn(Notify)
Z_TEL_NTFY  "Tel(Notify)
Z_FAX_NTFY  "Fax(Notify)
Z_CARRIER  "Carrier
Z_BOOKING_NO  "Booking No
Z_SHIPPED_PER  "Shipped Per
Z_VOY_NO  "Voy No
Z_ETD  "ETD
Z_ETA  "ETA
Z_SHIP_DATE  "Ship Date
Z_CFS_CUT  "CFS-CUT
Z_CY_CUT  "CY-CUT
Z_CSIZE_20FT_QTY  "20ft
Z_CSIZE_40FT_QTY  "40ft
Z_CSIZE_OTH_QTY  "others
Z_PL_RECEIPT  "Place of Receipt
Z_PT_LOADING  "Port of Loading
Z_PT_DISCHARGE  "Port of Discharge
Z_PL_DELIVERY  "Place of Delivery
Z_FINAL_DEST  "Final Destination
Z_FREIGHT_TERM  "Freight Term
Z_FREIGHT_ON_BL  "Freight on B/L
Z_BL_NO  "B/L No
Z_BL_DATE  "B/L Date
Z_PL_ISSUE  "Place of Issue
Z_KIND_OF_BL  "Kind of B/L
Z_DG_CODE  "DG Code
Z_TEMP_ZONES  "Temperature Zones
Z_SI_REMARKS1  "Remarks (1)
Z_SI_REMARKS2  "Remarks (2)
Z_SI_REMARKS3  "Remarks (3)
Z_SI_REMARKS4  "Remarks (4)
Z_SI_REMARKS5  "Remarks (5)
**** START ADD 2015/06/01 ISID18 ****
VSTEL          "ShippingPt
**** END ADD 2015/06/01 ISID18 ****
Z_DESC_OF_GOODS  "DESCRIPTION
**** START ADD 2014/12/25 ISID11 ****
Z_CRE_USERID   "DataInputUser
**** END ADD 2014/12/25 ISID11 ****
INTO TABLE O_TD_ZTEGSDT003
FROM ZTEGSDT003
WHERE Z_SI_NO      IN S_SI_NO  "S/I No
**** START ADD 2015/06/01 ISID18 ****
AND VSTEL        IN S_VSTEL  "ShippingPt
**** END ADD 2015/06/01 ISID18 ****
AND Z_SI_DATE    IN S_SI_DT  "S/I Date
AND Z_BL_NO      IN S_BL_NO  "B/L No
AND Z_BL_DATE    IN S_BL_DT  "B/L Date
AND Z_CUST_CNEE  IN S_CNEE  "Consinee
AND Z_CUST_NTFY  IN S_NTFY  "Notify
AND Z_CARRIER    IN S_CARR  "Carrier
AND Z_BOOKING_NO IN S_BOOKNO  "Booking No
AND Z_SHIP_DATE  IN S_SHIPP  "Shipped Per
AND Z_VOY_NO     IN S_VOYNO  "Voy No
AND Z_ETD        IN S_ETD  "ETD
AND Z_ETA        IN S_ETA  "ETA
AND Z_SHIP_DATE  IN S_SHIPD  "Ship Date
AND Z_CFS_CUT    IN S_CFSCUT  "CFS-CUT
AND Z_CY_CUT     IN S_CYCUT  "CY-CUT
AND Z_CRE_YMD    IN S_CYMD  "Create Date
AND Z_CRE_HMS    IN S_CHMS  "Create Time
AND Z_CRE_USERID IN S_CUSER  "Create User
AND Z_MOD_YMD    IN S_MYMD  "Modify Date
AND Z_MOD_HMS    IN S_MHMS  "Modify Time
AND Z_MOD_USERID IN S_MUSER. "Modify User
IF SY-SUBRC <> 0.
*   対象データが存在しません。(TBL = &1)
MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDT003'.
LEAVE LIST-PROCESSING.
ENDIF.
SORT O_TD_ZTEGSDT003 BY Z_SI_NO ASCENDING.

**** START ADD 2015/02/11 ISID11 ****
IF RB_DOWN IS INITIAL.

LW_Z_OUTPUT_MODE = 'P'.

ELSE.

LW_Z_OUTPUT_MODE = 'D'.

ENDIF.
**** END ADD 2015/02/11 ISID11 ****

* Output Management(SI)取得
SELECT Z_OUTPUT_MODE  "出力モード
Z_SI_NO  "S/I No
INTO TABLE O_TD_ZTEGSDT015
FROM ZTEGSDT015
FOR ALL ENTRIES IN O_TD_ZTEGSDT003
WHERE
**** START UPD 2015/02/11 ISID11 ****
*        ( Z_OUTPUT_MODE = 'P'  "出力モード
*        OR Z_OUTPUT_MODE = 'D' ) "出力モード
Z_OUTPUT_MODE = LW_Z_OUTPUT_MODE  "出力モード
**** END UPD 2015/02/11 ISID11 ****
AND Z_SI_NO = O_TD_ZTEGSDT003-Z_SI_NO.  "S/I No
IF SY-SUBRC <> 0.
*   選択画面のラジオボタン「Reprint」が選択されている場合
IF RB_REPNT = 'X'.
*     対象データが存在しません。(TBL = &1)
MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDT015'.
LEAVE LIST-PROCESSING.
ENDIF.
ENDIF.
SORT O_TD_ZTEGSDT015 BY Z_OUTPUT_MODE ASCENDING
Z_SI_NO       ASCENDING.

**** START ADD 2015/02/11 ISID11 ****
IF RB_PRINT IS NOT INITIAL.

LOOP AT O_TD_ZTEGSDT003 INTO LST_ZTEGSDT003.

LW_TABIX_T003 = SY-TABIX.

READ TABLE O_TD_ZTEGSDT015 INTO LST_ZTEGSDT015
WITH KEY Z_OUTPUT_MODE = 'P'
Z_SI_NO       = LST_ZTEGSDT003-Z_SI_NO
BINARY SEARCH.

IF SY-SUBRC = 0.

DELETE O_TD_ZTEGSDT003 INDEX LW_TABIX_T003.

ENDIF.

ENDLOOP.

IF O_TD_ZTEGSDT003 IS INITIAL.

*   対象データが存在しません。(TBL = &1)
MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDT003'.
LEAVE LIST-PROCESSING.

ENDIF.

ENDIF.
**** END ADD 2015/02/11 ISID11 ****

* SI-InvoiceLink取得
SELECT Z_SI_NO  "S/I No
Z_INVOICE_NO  "Invoice No
INTO TABLE O_TD_ZTEGSDT004_KEY
FROM ZTEGSDT004
FOR ALL ENTRIES IN O_TD_ZTEGSDT003
WHERE Z_SI_NO = O_TD_ZTEGSDT003-Z_SI_NO.  "S/I No
IF SY-SUBRC <> 0.
*   対象データが存在しません。(TBL = &1)
MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDT004'.
LEAVE LIST-PROCESSING.
ENDIF.
SORT O_TD_ZTEGSDT004_KEY BY Z_SI_NO      ASCENDING
Z_INVOICE_NO ASCENDING.
* S/I No単位に編集
LOOP AT O_TD_ZTEGSDT004_KEY INTO LST_ZTEGSDT004.
LW_TABIX = LW_TABIX + 1.
AT END OF Z_SI_NO.
LW_END = 'X'.
ENDAT.

CASE LW_TABIX.
WHEN 1.
LW_INVNO1 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 2.
LW_INVNO2 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 3.
LW_INVNO3 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 4.
LW_INVNO4 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 5.
LW_INVNO5 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 6.
LW_INVNO6 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 7.
LW_INVNO7 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 8.
LW_INVNO8 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 9.
LW_INVNO9 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 10.
LW_INVNO10 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 11.
LW_INVNO11 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 12.
LW_INVNO12 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 13.
LW_INVNO13 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 14.
LW_INVNO14 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 15.
LW_INVNO15 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 16.
LW_INVNO16 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 17.
LW_INVNO17 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 18.
LW_INVNO18 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 19.
LW_INVNO19 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 20.
LW_INVNO20 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 21.
LW_INVNO21 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 22.
LW_INVNO22 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 23.
LW_INVNO23 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 24.
LW_INVNO24 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 25.
LW_INVNO25 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 26.
LW_INVNO26 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 27.
LW_INVNO27 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 28.
LW_INVNO28 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 29.
LW_INVNO29 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN 30.
LW_INVNO30 = LST_ZTEGSDT004-Z_INVOICE_NO.
WHEN OTHERS.
ENDCASE.

IF LW_END = 'X'.
CLEAR LW_END.
CLEAR LST_RESULT.
CONCATENATE LW_INVNO1
LW_INVNO2
LW_INVNO3
LW_INVNO4
LW_INVNO5
INTO LST_RESULT-Z_INVOICE1
SEPARATED BY SPACE.
IF LW_TABIX > 5.
CONCATENATE LW_INVNO6
LW_INVNO7
LW_INVNO8
LW_INVNO9
LW_INVNO10
INTO LST_RESULT-Z_INVOICE2
SEPARATED BY SPACE.
ENDIF.
IF LW_TABIX > 10.
CONCATENATE LW_INVNO11
LW_INVNO12
LW_INVNO13
LW_INVNO14
LW_INVNO15
INTO LST_RESULT-Z_INVOICE3
SEPARATED BY SPACE.
ENDIF.
IF LW_TABIX > 15.
CONCATENATE LW_INVNO16
LW_INVNO17
LW_INVNO18
LW_INVNO19
LW_INVNO20
INTO LST_RESULT-Z_INVOICE4
SEPARATED BY SPACE.
ENDIF.
IF LW_TABIX > 20.
CONCATENATE LW_INVNO21
LW_INVNO22
LW_INVNO23
LW_INVNO24
LW_INVNO25
INTO LST_RESULT-Z_INVOICE5
SEPARATED BY SPACE.
ENDIF.
IF LW_TABIX > 25.
CONCATENATE LW_INVNO26
LW_INVNO27
LW_INVNO28
LW_INVNO29
LW_INVNO30
INTO LST_RESULT-Z_INVOICE6
SEPARATED BY SPACE.
ENDIF.
LST_RESULT-Z_SI_NO = LST_ZTEGSDT004-Z_SI_NO.
APPEND LST_RESULT TO O_TD_ZTEGSDT004.

CLEAR: LW_TABIX,
LW_INVNO1,
LW_INVNO2,
LW_INVNO3,
LW_INVNO4,
LW_INVNO5,
LW_INVNO6,
LW_INVNO7,
LW_INVNO8,
LW_INVNO9,
LW_INVNO10,
LW_INVNO11,
LW_INVNO12,
LW_INVNO13,
LW_INVNO14,
LW_INVNO15,
LW_INVNO16,
LW_INVNO17,
LW_INVNO18,
LW_INVNO19,
LW_INVNO20,
LW_INVNO21,
LW_INVNO22,
LW_INVNO23,
LW_INVNO24,
LW_INVNO25,
LW_INVNO26,
LW_INVNO27,
LW_INVNO28,
LW_INVNO29,
LW_INVNO30.
ENDIF.
ENDLOOP.
SORT O_TD_ZTEGSDT004 BY Z_SI_NO ASCENDING.

* TradeCommon取得
SELECT VBELN  "出荷伝票
ERDAT  "レコード登録日
Z_INVOICE_NO  "Invoice No
Z_CASEMARK1  "Casemark (1)
Z_CASEMARK2  "Casemark (2)
Z_CASEMARK3  "Casemark (3)
Z_CASEMARK4  "Casemark (4)
Z_CASEMARK5  "Casemark (5)
INTO TABLE O_TD_ZTEGSDT001
FROM ZTEGSDT001
FOR ALL ENTRIES IN O_TD_ZTEGSDT004_KEY
WHERE Z_INVOICE_NO = O_TD_ZTEGSDT004_KEY-Z_INVOICE_NO.  "Invoice No
IF SY-SUBRC <> 0.
*   対象データが存在しません。(TBL = &1)
MESSAGE S006(ZMEGSD01) WITH 'ZTEGSDT001'.
LEAVE LIST-PROCESSING.
ENDIF.
SORT O_TD_ZTEGSDT001 BY VBELN ASCENDING
ERDAT ASCENDING.

* 検索キー作成
LOOP AT O_TD_ZTEGSDT001 INTO LST_ZTEGSDT001.
CLEAR LST_LIKP.
LST_LIKP-VBELN = LST_ZTEGSDT001-VBELN.
APPEND LST_LIKP TO O_TD_LIKP_S.
ENDLOOP.
SORT O_TD_LIKP_S BY VBELN ASCENDING.
DELETE ADJACENT DUPLICATES FROM O_TD_LIKP_S
COMPARING ALL FIELDS.

* PackingList取得
SELECT VBELN  "出荷伝票
ERDAT  "レコード登録日
Z_CASE_COUNT  "CASE Count
INTO TABLE O_TD_ZTEGSDT002_KEY
FROM ZTEGSDT002
FOR ALL ENTRIES IN O_TD_ZTEGSDT001
WHERE VBELN = O_TD_ZTEGSDT001-VBELN  "請求伝票
AND ERDAT = O_TD_ZTEGSDT001-ERDAT. "レコード登録日
SORT O_TD_ZTEGSDT002_KEY BY VBELN ASCENDING
ERDAT ASCENDING.
* Packages集計
LOOP AT O_TD_ZTEGSDT002_KEY INTO LST_ZTEGSDT002.
CLEAR: LST_ZTEGSDT001,
LST_ZTEGSDT004,
LST_CASECOUNT.
READ TABLE O_TD_ZTEGSDT001 INTO LST_ZTEGSDT001 BINARY SEARCH
WITH KEY VBELN = LST_ZTEGSDT002-VBELN
ERDAT = LST_ZTEGSDT002-ERDAT.
IF SY-SUBRC = 0.
LST_CASECOUNT-Z_INVOICE_NO = LST_ZTEGSDT001-Z_INVOICE_NO.
READ TABLE O_TD_ZTEGSDT004_KEY INTO LST_ZTEGSDT004
WITH KEY Z_INVOICE_NO = LST_ZTEGSDT001-Z_INVOICE_NO.
IF SY-SUBRC = 0.
LST_CASECOUNT-Z_SI_NO = LST_ZTEGSDT004-Z_SI_NO.
ENDIF.
ENDIF.
LST_CASECOUNT-VBELN = LST_ZTEGSDT002-VBELN.
LST_CASECOUNT-ERDAT = LST_ZTEGSDT002-ERDAT.
LST_CASECOUNT-Z_CASE_COUNT = LST_ZTEGSDT002-Z_CASE_COUNT.
APPEND LST_CASECOUNT TO LTD_CASECOUNT.
ENDLOOP.
SORT LTD_CASECOUNT BY Z_SI_NO      ASCENDING
Z_INVOICE_NO ASCENDING.
CLEAR LW_END.
LOOP AT LTD_CASECOUNT INTO LST_CASECOUNT.
CATCH SYSTEM-EXCEPTIONS ARITHMETIC_ERRORS = 4.
LW_COUNT = LW_COUNT + LST_CASECOUNT-Z_CASE_COUNT.
ENDCATCH.
IF SY-SUBRC <> 0.
LW_COUNT = CNS_MAXCOUNT.
ENDIF.

AT END OF Z_SI_NO.
LW_END = 'X'.
ENDAT.
IF LW_END = 'X'.
CLEAR LW_END.
CLEAR: LST_CASECOUNT-Z_INVOICE_NO,
LST_CASECOUNT-VBELN,
LST_CASECOUNT-ERDAT.
LST_CASECOUNT-Z_CASE_COUNT = LW_COUNT.
APPEND LST_CASECOUNT TO O_TD_ZTEGSDT002.
CLEAR LW_COUNT.
ENDIF.
ENDLOOP.
SORT O_TD_ZTEGSDT002 BY Z_SI_NO      ASCENDING
Z_INVOICE_NO ASCENDING.

ENDFORM.                    " GET_SI_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_OTHER_DATA
*&---------------------------------------------------------------------*
*       他のデータ取得
*----------------------------------------------------------------------*
*      -->I_TD_LIKP_S
*      -->I_TD_ZTEGSDT003
*      <--O_TD_LIKP
*      <--O_TD_KNA1
*      <--O_TD_T005X
*      <--O_TD_DD07T
*      <--O_TD_NAME
*      <--O_TD_VBPA
*----------------------------------------------------------------------*
FORM GET_OTHER_DATA  USING I_TD_LIKP_S TYPE TYP_TD_LIKP
**** START ADD 2015/02/25 ISID11 ****
I_TD_ZTEGSDT003 TYPE TYP_TD_ZTEGSDT003
**** END ADD 2015/02/25 ISID11 ****
CHANGING O_TD_LIKP   TYPE TYP_TD_LIKP
O_TD_KNA1   TYPE TYP_TD_KNA1
O_TD_T005X  TYPE TYP_TD_T005X
O_TD_DD07T  TYPE TYP_TD_DD07T
**** START ADD 2015/02/25 ISID11 ****
O_TD_NAME   TYPE TYP_TD_USRNAME
**** END ADD 2015/02/25 ISID11 ****
**** START ADD 2015/02/11 ISID11 ****
O_TD_VBPA   TYPE TYP_TD_VBPA.
**** END ADD 2015/02/11 ISID11 ****

* 出荷ポイント取得
PERFORM GET_LIKP USING I_TD_LIKP_S
CHANGING O_TD_LIKP.
* 小数点書式、日付書式の変換用項目取得
PERFORM GET_FORMAT USING O_TD_LIKP
CHANGING O_TD_KNA1
O_TD_T005X.
* ドメイン値取得
PERFORM GET_DOMAIN_VALUE CHANGING O_TD_DD07T.

**** START ADD 2015/02/25 ISID11 ****
* データ入力ユーザ取得
PERFORM GET_USR_NAME USING I_TD_ZTEGSDT003
CHANGING O_TD_NAME.
**** END ADD 2015/02/25 ISID11 ****

**** START ADD 2015/02/11 ISID11 ****
* SalesCoordinatorの取得
PERFORM GET_ENAME USING I_TD_LIKP_S
CHANGING O_TD_VBPA.
**** END ADD 2015/02/11 ISID11 ****

ENDFORM.                    " GET_OTHER_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_LIKP
*&---------------------------------------------------------------------*
*       出荷ポイント取得
*----------------------------------------------------------------------*
*      -->I_TD_LIKP_S
*      <--O_TD_LIKP
*----------------------------------------------------------------------*
FORM GET_LIKP  USING I_TD_LIKP_S TYPE TYP_TD_LIKP
CHANGING O_TD_LIKP   TYPE TYP_TD_LIKP.

IF I_TD_LIKP_S[] IS INITIAL.
RETURN.
ENDIF.

SELECT VBELN  "出荷伝票
VSTEL  "出荷ポイント
VKORG  "販売組織
KUNAG  "受注先
INTO TABLE O_TD_LIKP
FROM LIKP
FOR ALL ENTRIES IN I_TD_LIKP_S
WHERE VBELN = I_TD_LIKP_S-VBELN.  "出荷伝票
SORT O_TD_LIKP BY VBELN ASCENDING.

ENDFORM.                    " GET_LIKP
*&---------------------------------------------------------------------*
*&      Form  GET_FORMAT
*&---------------------------------------------------------------------*
*       小数点書式、日付書式の変換用項目取得
*----------------------------------------------------------------------*
*      -->I_TD_LIKP
*      <--O_TD_KNA1
*      <--O_TD_T005X
*----------------------------------------------------------------------*
FORM GET_FORMAT  USING I_TD_LIKP  TYPE TYP_TD_LIKP
CHANGING O_TD_KNA1  TYPE TYP_TD_KNA1
O_TD_T005X TYPE TYP_TD_T005X.

IF I_TD_LIKP[] IS INITIAL.
RETURN.
ENDIF.

DATA: LTD_LIKP TYPE TYP_TD_LIKP,
LTD_KNA1 TYPE TYP_TD_KNA1.

LTD_LIKP[] = I_TD_LIKP[].
SORT LTD_LIKP BY KUNAG ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_LIKP
COMPARING KUNAG.
* 国コードを取得
SELECT KUNNR  "得意先コード
LAND1  "国コード
INTO TABLE O_TD_KNA1
FROM KNA1
FOR ALL ENTRIES IN LTD_LIKP
WHERE KUNNR = LTD_LIKP-KUNAG.
IF SY-SUBRC <> 0.
RETURN.
ENDIF.
SORT O_TD_KNA1 BY KUNNR ASCENDING.
LTD_KNA1[] = O_TD_KNA1[].
SORT LTD_KNA1 BY KUNNR ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_KNA1
COMPARING KUNNR.

* 小数点書式、日付書式を取得
SELECT LAND  "国コード
XDEZP  "小数点書式
DATFM  "日付書式
INTO TABLE O_TD_T005X
FROM T005X
FOR ALL ENTRIES IN LTD_KNA1
WHERE LAND = LTD_KNA1-LAND1.  "国コード
SORT O_TD_T005X BY LAND ASCENDING.

ENDFORM.                    " GET_FORMAT
*&---------------------------------------------------------------------*
*&      Form  GET_DOMAIN_VALUE
*&---------------------------------------------------------------------*
*       ドメイン値取得
*----------------------------------------------------------------------*
*      <--O_TD_DD07T
*----------------------------------------------------------------------*
FORM GET_DOMAIN_VALUE  CHANGING O_TD_DD07T TYPE TYP_TD_DD07T.

SELECT DOMNAME     "ドメイン名
DOMVALUE_L  "ドメイン値
DDTEXT      "固定テキスト(短)
INTO TABLE O_TD_DD07T
FROM DD07T
WHERE ( DOMNAME = 'ZDFREIGHTTERM'  "ドメイン名
OR DOMNAME = 'ZDFREIGHTONBL'  "ドメイン名
OR DOMNAME = 'ZDKINDOFBL'  "ドメイン名
OR DOMNAME = 'ZDDGCODE'  "ドメイン名
OR DOMNAME = 'ZDTEMPZONES')  "ドメイン名
AND DDLANGUAGE = SY-LANGU.  "言語キー

**** START ADD 2015/01/31 ISID11 ****
SORT O_TD_DD07T BY DOMNAME    ASCENDING
DOMVALUE_L ASCENDING.
**** END ADD 2015/01/31 ISID11 ****

ENDFORM.                    " GET_DOMAIN_VALUE
*&---------------------------------------------------------------------*
*&      Form  EDIT_DATA
*&---------------------------------------------------------------------*
*       データの編集
*----------------------------------------------------------------------*
*      -->I_TD_ZTEGSDT003
*      -->I_TD_ZTEGSDT004_KEY
*      -->I_TD_ZTEGSDT004
*      -->I_TD_ZTEGSDT001
*      -->I_TD_ZTEGSDT002_KEY
*      -->I_TD_ZTEGSDT002
*      -->I_TD_ZTEGSDT015
*      -->I_TD_LIKP
*      -->I_TD_KNA1
*      -->I_TD_T005X
*      -->I_TD_DD07T
*      -->I_TD_NAME
*      -->I_TD_VBPA
*      <--O_TD_SI
*      <--O_TD_FILE
*----------------------------------------------------------------------*
FORM EDIT_DATA  USING I_TD_ZTEGSDT003     TYPE TYP_TD_ZTEGSDT003
I_TD_ZTEGSDT004_KEY TYPE TYP_TD_ZTEGSDT004_KEY
I_TD_ZTEGSDT004     TYPE TYP_TD_ZTEGSDT004
I_TD_ZTEGSDT001     TYPE TYP_TD_ZTEGSDT001
I_TD_ZTEGSDT002_KEY TYPE TYP_TD_ZTEGSDT002_KEY
I_TD_ZTEGSDT002     TYPE TYP_TD_ZTEGSDT002
I_TD_ZTEGSDT015     TYPE TYP_TD_ZTEGSDT015
I_TD_LIKP           TYPE TYP_TD_LIKP
I_TD_KNA1           TYPE TYP_TD_KNA1
I_TD_T005X          TYPE TYP_TD_T005X
I_TD_DD07T          TYPE TYP_TD_DD07T
**** START ADD 2015/02/25 ISID11 ****
I_TD_NAME           TYPE TYP_TD_USRNAME
**** END ADD 2015/02/25 ISID11 ****
**** START ADD 2015/02/11 ISID11 ****
I_TD_VBPA           TYPE TYP_TD_VBPA
**** END ADD 2015/02/11 ISID11 ****
CHANGING O_TD_SI             TYPE TYP_TD_SI
O_TD_FILE           TYPE TYP_TD_FILE.

DATA: LST_ZTEGSDT003     TYPE TYP_ZTEGSDT003,
LST_ZTEGSDT004_KEY TYPE TYP_ZTEGSDT004_KEY,
LST_ZTEGSDT004     TYPE TYP_ZTEGSDT004,
LTD_ZTEGSDT001     TYPE STANDARD TABLE OF TYP_ZTEGSDT001,
LST_ZTEGSDT001     TYPE TYP_ZTEGSDT001,
LST_ZTEGSDT002_KEY TYPE TYP_ZTEGSDT002_KEY,
LST_ZTEGSDT002     TYPE TYP_ZTEGSDT002,
LST_LIKP           TYPE TYP_LIKP,
LST_KNA1           TYPE TYP_KNA1,
LST_T005X          TYPE TYP_T005X,
LST_DD07T1         TYPE TYP_DD07T,
LST_DD07T2         TYPE TYP_DD07T,
LST_DD07T3         TYPE TYP_DD07T,
LST_DD07T4         TYPE TYP_DD07T,
LST_DD07T5         TYPE TYP_DD07T,
**** START ADD 2015/02/25 ISID11 ****
LST_NAME           TYPE TYP_USRNAME,
**** END ADD 2015/02/25 ISID11 ****
**** START ADD 2015/02/11 ISID11 ****
LST_PA0001         TYPE TYP_VBPA,
**** END ADD 2015/02/11 ISID11 ****
LST_SI             TYPE TYP_SI,
LST_FILE           TYPE ZSEGSD0018,
LW_NEW             TYPE CHAR1,
LW_NO_DATA         TYPE CHAR1,
*        LW_DATE            TYPE CHAR30,
LW_DOMVALUE_L      TYPE DD07T-DOMVALUE_L,
LST_VSTEL          LIKE LINE OF RD_VSTEL.

LTD_ZTEGSDT001[] = I_TD_ZTEGSDT001[].
SORT LTD_ZTEGSDT001 BY Z_INVOICE_NO ASCENDING.
REFRESH RD_VSTEL.

LOOP AT I_TD_ZTEGSDT004_KEY INTO LST_ZTEGSDT004_KEY.
CLEAR: LST_SI,
LST_FILE.
AT NEW Z_SI_NO.
LW_NEW = 'X'.
CLEAR LW_NO_DATA.
ENDAT.

*   Reprint判断
IF  LW_NEW = 'X'
AND RB_REPNT = 'X'.
READ TABLE I_TD_ZTEGSDT015 TRANSPORTING NO FIELDS BINARY SEARCH
WITH KEY Z_OUTPUT_MODE = 'P'
Z_SI_NO       = LST_ZTEGSDT004_KEY-Z_SI_NO.
IF SY-SUBRC <> 0.
LW_NO_DATA = 'X'.
ENDIF.
ENDIF.
IF LW_NO_DATA = 'X'.
CLEAR LW_NEW.
CONTINUE.
ENDIF.

*   メインデータ
CLEAR LST_ZTEGSDT001.
CLEAR LST_ZTEGSDT002_KEY.
READ TABLE LTD_ZTEGSDT001 INTO LST_ZTEGSDT001 BINARY SEARCH
WITH KEY Z_INVOICE_NO = LST_ZTEGSDT004_KEY-Z_INVOICE_NO.
IF SY-SUBRC = 0.
READ TABLE I_TD_ZTEGSDT002_KEY INTO LST_ZTEGSDT002_KEY
BINARY SEARCH
WITH KEY VBELN = LST_ZTEGSDT001-VBELN
ERDAT = LST_ZTEGSDT001-ERDAT.
ELSE.
CLEAR LW_NEW.
CONTINUE.
ENDIF.
IF LW_NEW = 'X'.
CLEAR LST_ZTEGSDT003.
READ TABLE I_TD_ZTEGSDT003 INTO LST_ZTEGSDT003 BINARY SEARCH
WITH KEY Z_SI_NO = LST_ZTEGSDT004_KEY-Z_SI_NO.
CLEAR LST_ZTEGSDT004.
READ TABLE I_TD_ZTEGSDT004 INTO LST_ZTEGSDT004 BINARY SEARCH
WITH KEY Z_SI_NO = LST_ZTEGSDT004_KEY-Z_SI_NO.
CLEAR LST_ZTEGSDT002.
READ TABLE I_TD_ZTEGSDT002 INTO LST_ZTEGSDT002 BINARY SEARCH
WITH KEY Z_SI_NO = LST_ZTEGSDT004_KEY-Z_SI_NO.
ENDIF.

*   他のデータの読み込み
IF LW_NEW = 'X'.
CLEAR LW_NEW.
CLEAR LST_LIKP.
CLEAR LST_KNA1.
CLEAR LST_T005X.
READ TABLE I_TD_LIKP INTO LST_LIKP BINARY SEARCH
**** START UPD 2015/01/31 ISID11 ****
*                           WITH KEY VBELN = LST_ZTEGSDT002_KEY-VBELN.
WITH KEY VBELN = LST_ZTEGSDT001-VBELN.
**** END UPD 2015/01/31 ISID11 ****
IF SY-SUBRC = 0.
READ TABLE I_TD_KNA1 INTO LST_KNA1 BINARY SEARCH
WITH KEY KUNNR = LST_LIKP-KUNAG.
IF SY-SUBRC = 0.
READ TABLE I_TD_T005X INTO LST_T005X BINARY SEARCH
WITH KEY LAND = LST_KNA1-LAND1.
ENDIF.
ENDIF.
CLEAR: LST_DD07T1,
LST_DD07T2,
LST_DD07T3,
LST_DD07T4,
LST_DD07T5.
LW_DOMVALUE_L = LST_ZTEGSDT003-Z_FREIGHT_TERM.
READ TABLE I_TD_DD07T INTO LST_DD07T1 BINARY SEARCH
WITH KEY DOMNAME = 'ZDFREIGHTTERM'
DOMVALUE_L  = LW_DOMVALUE_L.
LW_DOMVALUE_L = LST_ZTEGSDT003-Z_FREIGHT_ON_BL.
READ TABLE I_TD_DD07T INTO LST_DD07T2 BINARY SEARCH
WITH KEY DOMNAME = 'ZDFREIGHTONBL'
DOMVALUE_L  = LW_DOMVALUE_L.
LW_DOMVALUE_L = LST_ZTEGSDT003-Z_KIND_OF_BL.
READ TABLE I_TD_DD07T INTO LST_DD07T3 BINARY SEARCH
WITH KEY DOMNAME = 'ZDKINDOFBL'
DOMVALUE_L  = LW_DOMVALUE_L.
LW_DOMVALUE_L = LST_ZTEGSDT003-Z_DG_CODE.
READ TABLE I_TD_DD07T INTO LST_DD07T4 BINARY SEARCH
WITH KEY DOMNAME = 'ZDDGCODE'
DOMVALUE_L  = LW_DOMVALUE_L.
LW_DOMVALUE_L = LST_ZTEGSDT003-Z_TEMP_ZONES.
READ TABLE I_TD_DD07T INTO LST_DD07T5 BINARY SEARCH
WITH KEY DOMNAME = 'ZDTEMPZONES'
DOMVALUE_L  = LW_DOMVALUE_L.

**** START ADD 2015/02/25 ISID11 ****
CLEAR LST_NAME.
READ TABLE I_TD_NAME INTO LST_NAME BINARY SEARCH
WITH KEY BNAME = LST_ZTEGSDT003-Z_CRE_USERID.
**** END ADD 2015/02/25 ISID11 ****

**** START ADD 2015/02/11 ISID11 ****
READ TABLE I_TD_VBPA INTO LST_PA0001 BINARY SEARCH
WITH KEY VBELN = LST_ZTEGSDT001-VBELN.
*                                     POSNR = SPACE
*                                     PERNR = SPACE
*                                     BEGDA = SPACE.
**** END ADD 2015/02/11 ISID11 ****

ENDIF.

*   S/I No
LST_SI-Z_SI_NO = LST_ZTEGSDT004_KEY-Z_SI_NO.
LST_FILE-Z_SI_NO = LST_SI-Z_SI_NO.

*   Invoice No
LST_SI-Z_INVOICE_NO = LST_ZTEGSDT004_KEY-Z_INVOICE_NO.
LST_FILE-Z_INVOICE_NO = LST_SI-Z_INVOICE_NO.

*   S/I Date
LST_SI-Z_SI_DATE = LST_ZTEGSDT003-Z_SI_DATE.
**** START UPD 2015/01/31 ISID11 ****
*    WRITE LST_SI-Z_SI_DATE TO LW_DATE.
*    LST_FILE-Z_SI_DATE = LW_DATE.
**** START ADD 2015/02/03 ISID11 ****
IF LST_SI-Z_SI_DATE IS INITIAL.
CLEAR LST_FILE-Z_SI_DATE.
ELSE.
**** END ADD 2015/02/03 ISID11 ****
LST_FILE-Z_SI_DATE = LST_SI-Z_SI_DATE.
**** START ADD 2015/02/03 ISID11 ****
ENDIF.
**** END ADD 2015/02/03 ISID11 ****
**** END UPD 2015/01/31 ISID11 ****

*   B/L No
LST_SI-Z_BL_NO = LST_ZTEGSDT003-Z_BL_NO.
**** START DEL 2015/06/01 ISID18 ****
*    LST_FILE-Z_BL_NO = LST_SI-Z_BL_NO.
**** END DEL 2015/06/01 ISID18 ****

*   B/L Date
LST_SI-Z_BL_DATE = LST_ZTEGSDT003-Z_BL_DATE.
**** START UPD 2015/01/31 ISID11 ****
*    WRITE LST_SI-Z_BL_DATE TO LW_DATE.
*    LST_FILE-Z_BL_DATE = LW_DATE.
**** START ADD 2015/02/03 ISID11 ****
IF LST_SI-Z_BL_DATE IS INITIAL.
CLEAR LST_FILE-Z_BL_DATE.
ELSE.
**** END ADD 2015/02/03 ISID11 ****
LST_FILE-Z_BL_DATE = LST_SI-Z_BL_DATE.
**** START ADD 2015/02/03 ISID11 ****
ENDIF.
**** END ADD 2015/02/03 ISID11 ****
**** END UPD 2015/01/31 ISID11 ****

*   Customer(CNEE)
LST_SI-Z_CUST_CNEE = LST_ZTEGSDT003-Z_CUST_CNEE.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_SI-Z_CUST_CNEE
IMPORTING
OUTPUT = LST_FILE-Z_CUST_CNEE.

*   Name(CNEE)
LST_SI-Z_CUST_NAME_CNEE = LST_ZTEGSDT003-Z_CUST_NAME_CNEE.
LST_FILE-Z_CUST_NAME_CNEE = LST_SI-Z_CUST_NAME_CNEE.

*   Address1(CNEE)
LST_SI-Z_ADDRESS1_CNEE = LST_ZTEGSDT003-Z_ADDRESS1_CNEE.
LST_FILE-Z_ADDRESS1_CNEE = LST_SI-Z_ADDRESS1_CNEE.

*   Address2(CNEE)
LST_SI-Z_ADDRESS2_CNEE = LST_ZTEGSDT003-Z_ADDRESS2_CNEE.
LST_FILE-Z_ADDRESS2_CNEE = LST_SI-Z_ADDRESS2_CNEE.

**** START ADD 2014/12/25 ISID11 ****
*   Address3(CNEE)
LST_SI-Z_ADDRESS3_CNEE = LST_ZTEGSDT003-Z_ADDRESS3_CNEE.
LST_FILE-Z_ADDRESS3_CNEE = LST_SI-Z_ADDRESS3_CNEE.

*   Address4(CNEE)
LST_SI-Z_ADDRESS4_CNEE = LST_ZTEGSDT003-Z_ADDRESS4_CNEE.
LST_FILE-Z_ADDRESS4_CNEE = LST_SI-Z_ADDRESS4_CNEE.

*   DataInpuｔUser
**** START UPD 2015/02/25 ISID11 ****
*    LST_SI-Z_INPUT_USERID = LST_ZTEGSDT003-Z_CRE_USERID.
LST_SI-Z_INPUT_USERID = LST_NAME-NAME_TEXT.
**** END UPD 2015/02/25 ISID11 ****
LST_FILE-Z_INPUT_USERID = LST_SI-Z_INPUT_USERID.

**** START ADD 2015/02/11 ISID11 ****
*   SalesCoordinator
LST_SI-Z_ENAME = LST_PA0001-ENAME.
LST_FILE-Z_ENAME = LST_SI-Z_ENAME.
**** END ADD 2015/02/11 ISID11 ****

*   ReportLang
LST_SI-Z_REPORT_LANG = P_LANGU.
**** START UPD 2015/01/21 ISID11 ****
*    LST_FILE-Z_REPORT_LANG = LST_SI-Z_REPORT_LANG.
CALL FUNCTION 'CONVERSION_EXIT_ISOLA_OUTPUT'
EXPORTING
INPUT  = P_LANGU
IMPORTING
OUTPUT = LST_FILE-Z_REPORT_LANG.
**** END UPD 2015/01/21 ISID11 ****

*   ReportTitle
LST_SI-Z_REPORT_TITLE = P_TITLE.
LST_FILE-Z_REPORT_TITLE = LST_SI-Z_REPORT_TITLE.
**** END ADD 2014/12/25 ISID11 ****

*   Attn(CNEE)
LST_SI-Z_ATTN_CNEE = LST_ZTEGSDT003-Z_ATTN_CNEE.
LST_FILE-Z_ATTN_CNEE = LST_SI-Z_ATTN_CNEE.

*   Tel(CNEE)
LST_SI-Z_TEL_CNEE = LST_ZTEGSDT003-Z_TEL_CNEE.
LST_FILE-Z_TEL_CNEE = LST_SI-Z_TEL_CNEE.

*   Fax(CNEE)
LST_SI-Z_FAX_CNEE = LST_ZTEGSDT003-Z_FAX_CNEE.
LST_FILE-Z_FAX_CNEE = LST_SI-Z_FAX_CNEE.

*   Customer(Notify)
LST_SI-Z_CUST_NTFY = LST_ZTEGSDT003-Z_CUST_NTFY.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_SI-Z_CUST_NTFY
IMPORTING
OUTPUT = LST_FILE-Z_CUST_NTFY.

*   Name(Notify)
LST_SI-Z_CUST_NAME_NTFY = LST_ZTEGSDT003-Z_CUST_NAME_NTFY.
LST_FILE-Z_CUST_NAME_NTFY = LST_SI-Z_CUST_NAME_NTFY.

*   Address1(Notify)
LST_SI-Z_ADDRESS1_NTFY = LST_ZTEGSDT003-Z_ADDRESS1_NTFY.
LST_FILE-Z_ADDRESS1_NTFY = LST_SI-Z_ADDRESS1_NTFY.

*   Address2(Notify)
LST_SI-Z_ADDRESS2_NTFY = LST_ZTEGSDT003-Z_ADDRESS2_NTFY.
LST_FILE-Z_ADDRESS2_NTFY = LST_SI-Z_ADDRESS2_NTFY.

**** START ADD 2014/12/25 ISID11 ****
*   Address3(Notify)
LST_SI-Z_ADDRESS3_NTFY = LST_ZTEGSDT003-Z_ADDRESS3_NTFY.
LST_FILE-Z_ADDRESS3_NTFY = LST_SI-Z_ADDRESS3_NTFY.

*   Address4(Notify)
LST_SI-Z_ADDRESS4_NTFY = LST_ZTEGSDT003-Z_ADDRESS4_NTFY.
LST_FILE-Z_ADDRESS4_NTFY = LST_SI-Z_ADDRESS4_NTFY.
**** END ADD 2014/12/25 ISID11 ****

*   Attn(Notify)
LST_SI-Z_ATTN_NTFY = LST_ZTEGSDT003-Z_ATTN_NTFY.
LST_FILE-Z_ATTN_NTFY = LST_SI-Z_ATTN_NTFY.

*   Tel(Notify)
LST_SI-Z_TEL_NTFY = LST_ZTEGSDT003-Z_TEL_NTFY.
LST_FILE-Z_TEL_NTFY = LST_SI-Z_TEL_NTFY.

*   Fax(Notify)
LST_SI-Z_FAX_NTFY = LST_ZTEGSDT003-Z_FAX_NTFY.
LST_FILE-Z_FAX_NTFY = LST_SI-Z_FAX_NTFY.

*   Carrier
LST_SI-Z_CARRIER = LST_ZTEGSDT003-Z_CARRIER.
LST_FILE-Z_CARRIER = LST_SI-Z_CARRIER.

*   Booking No
LST_SI-Z_BOOKING_NO = LST_ZTEGSDT003-Z_BOOKING_NO.
LST_FILE-Z_BOOKING_NO = LST_SI-Z_BOOKING_NO.

*   Shipped Per
LST_SI-Z_SHIPPED_PER = LST_ZTEGSDT003-Z_SHIPPED_PER.
LST_FILE-Z_SHIPPED_PER = LST_SI-Z_SHIPPED_PER.

*   Voy No
LST_SI-Z_VOY_NO = LST_ZTEGSDT003-Z_VOY_NO.
LST_FILE-Z_VOY_NO = LST_SI-Z_VOY_NO.

*   ETD
LST_SI-Z_ETD = LST_ZTEGSDT003-Z_ETD.
**** START UPD 2015/01/31 ISID11 ****
*    WRITE LST_SI-Z_ETD TO LW_DATE.
*    LST_FILE-Z_ETD = LW_DATE.
**** START ADD 2015/02/03 ISID11 ****
IF LST_SI-Z_ETD IS INITIAL.
CLEAR LST_FILE-Z_ETD.
ELSE.
**** END ADD 2015/02/03 ISID11 ****
LST_FILE-Z_ETD = LST_SI-Z_ETD.
**** START ADD 2015/02/03 ISID11 ****
ENDIF.
**** END ADD 2015/02/03 ISID11 ****
**** END UPD 2015/01/31 ISID11 ****

*   ETA
LST_SI-Z_ETA = LST_ZTEGSDT003-Z_ETA.
**** START UPD 2015/01/31 ISID11 ****
*    WRITE LST_SI-Z_ETA TO LW_DATE.
*    LST_FILE-Z_ETA = LW_DATE.
**** START ADD 2015/02/03 ISID11 ****
IF LST_SI-Z_ETA IS INITIAL.
CLEAR LST_FILE-Z_ETA.
ELSE.
**** END ADD 2015/02/03 ISID11 ****
LST_FILE-Z_ETA = LST_SI-Z_ETA.
**** START ADD 2015/02/03 ISID11 ****
ENDIF.
**** END ADD 2015/02/03 ISID11 ****
**** END UPD 2015/01/31 ISID11 ****

*   Ship Date
LST_SI-Z_SHIP_DATE = LST_ZTEGSDT003-Z_SHIP_DATE.
**** START UPD 2015/01/31 ISID11 ****
*    WRITE LST_SI-Z_SHIP_DATE TO LW_DATE.
*    LST_FILE-Z_SHIP_DATE = LW_DATE.
**** START ADD 2015/02/03 ISID11 ****
IF LST_SI-Z_SHIP_DATE IS INITIAL.
CLEAR LST_FILE-Z_SHIP_DATE.
ELSE.
**** END ADD 2015/02/03 ISID11 ****
LST_FILE-Z_SHIP_DATE = LST_SI-Z_SHIP_DATE.
**** START ADD 2015/02/03 ISID11 ****
ENDIF.
**** END ADD 2015/02/03 ISID11 ****
**** END UPD 2015/01/31 ISID11 ****

*   CFS-CUT
LST_SI-Z_CFS_CUT = LST_ZTEGSDT003-Z_CFS_CUT.
**** START UPD 2015/01/31 ISID11 ****
*    WRITE LST_SI-Z_CFS_CUT TO LW_DATE.
*    LST_FILE-Z_CFS_CUT = LW_DATE.
**** START ADD 2015/02/03 ISID11 ****
IF LST_SI-Z_CFS_CUT IS INITIAL.
CLEAR LST_FILE-Z_CFS_CUT.
ELSE.
**** END ADD 2015/02/03 ISID11 ****
LST_FILE-Z_CFS_CUT = LST_SI-Z_CFS_CUT.
**** START ADD 2015/02/03 ISID11 ****
ENDIF.
**** END ADD 2015/02/03 ISID11 ****
**** END UPD 2015/01/31 ISID11 ****

*   CY-CUT
LST_SI-Z_CY_CUT = LST_ZTEGSDT003-Z_CY_CUT.
**** START UPD 2015/01/31 ISID11 ****
*    WRITE LST_SI-Z_CY_CUT TO LW_DATE.
*    LST_FILE-Z_CY_CUT = LW_DATE.
**** START ADD 2015/02/03 ISID11 ****
IF LST_SI-Z_CY_CUT IS INITIAL.
CLEAR LST_FILE-Z_CY_CUT.
ELSE.
**** END ADD 2015/02/03 ISID11 ****
LST_FILE-Z_CY_CUT = LST_SI-Z_CY_CUT.
**** START ADD 2015/02/03 ISID11 ****
ENDIF.
**** END ADD 2015/02/03 ISID11 ****
**** END UPD 2015/01/31 ISID11 ****

*   20ft
LST_SI-Z_CSIZE_20FT_QTY = LST_ZTEGSDT003-Z_CSIZE_20FT_QTY.
LST_FILE-Z_CSIZE_20FT_QTY = LST_SI-Z_CSIZE_20FT_QTY.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_FILE-Z_CSIZE_20FT_QTY
IMPORTING
OUTPUT = LST_FILE-Z_CSIZE_20FT_QTY.

*   40ft
LST_SI-Z_CSIZE_40FT_QTY = LST_ZTEGSDT003-Z_CSIZE_40FT_QTY.
LST_FILE-Z_CSIZE_40FT_QTY = LST_SI-Z_CSIZE_40FT_QTY.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_FILE-Z_CSIZE_40FT_QTY
IMPORTING
OUTPUT = LST_FILE-Z_CSIZE_40FT_QTY.

*   others
LST_SI-Z_CSIZE_OTH_QTY = LST_ZTEGSDT003-Z_CSIZE_OTH_QTY.
LST_FILE-Z_CSIZE_OTH_QTY = LST_SI-Z_CSIZE_OTH_QTY.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_FILE-Z_CSIZE_OTH_QTY
IMPORTING
OUTPUT = LST_FILE-Z_CSIZE_OTH_QTY.

*   Place of Receipt
LST_SI-Z_PL_RECEIPT = LST_ZTEGSDT003-Z_PL_RECEIPT.
LST_FILE-Z_PL_RECEIPT = LST_SI-Z_PL_RECEIPT.

*   Port of Loading
LST_SI-Z_PT_LOADING = LST_ZTEGSDT003-Z_PT_LOADING.
LST_FILE-Z_PT_LOADING = LST_SI-Z_PT_LOADING.

*   Port of Discharge
LST_SI-Z_PT_DISCHARGE = LST_ZTEGSDT003-Z_PT_DISCHARGE.
LST_FILE-Z_PT_DISCHARGE = LST_SI-Z_PT_DISCHARGE.

*   Place of Delivery
LST_SI-Z_PL_DELIVERY = LST_ZTEGSDT003-Z_PL_DELIVERY.
LST_FILE-Z_PL_DELIVERY = LST_SI-Z_PL_DELIVERY.

*   Final Destination
LST_SI-Z_FINAL_DEST = LST_ZTEGSDT003-Z_FINAL_DEST.
LST_FILE-Z_FINAL_DEST = LST_SI-Z_FINAL_DEST.

*   Freight Term
LST_SI-Z_FREIGHT_TERM = LST_ZTEGSDT003-Z_FREIGHT_TERM.
LST_FILE-Z_FREIGHT_TERM = LST_DD07T1-DDTEXT.

*   Freight on B/L
LST_SI-Z_FREIGHT_ON_BL = LST_ZTEGSDT003-Z_FREIGHT_ON_BL.
LST_FILE-Z_FREIGHT_ON_BL = LST_DD07T2-DDTEXT.

*   Place of Issue
LST_SI-Z_PL_ISSUE = LST_ZTEGSDT003-Z_PL_ISSUE.
LST_FILE-Z_PL_ISSUE = LST_SI-Z_PL_ISSUE.

*   Kind of B/L
LST_SI-Z_KIND_OF_BL = LST_ZTEGSDT003-Z_KIND_OF_BL.
LST_FILE-Z_KIND_OF_BL = LST_DD07T3-DDTEXT.

*   DG Code
LST_SI-Z_DG_CODE = LST_ZTEGSDT003-Z_DG_CODE.
LST_FILE-Z_DG_CODE = LST_DD07T4-DDTEXT.

*   Temperature Zones
LST_SI-Z_TEMP_ZONES = LST_ZTEGSDT003-Z_TEMP_ZONES.
LST_FILE-Z_TEMP_ZONES = LST_DD07T5-DDTEXT.

*   DESCRIPTION
LST_SI-Z_DESC_OF_GOODS = LST_ZTEGSDT003-Z_DESC_OF_GOODS.
LST_FILE-Z_DESC_OF_GOODS = LST_SI-Z_DESC_OF_GOODS.

*   Containers
CATCH SYSTEM-EXCEPTIONS ARITHMETIC_ERRORS = 4.
LST_SI-Z_CONTAINERS = LST_ZTEGSDT003-Z_CSIZE_20FT_QTY
+ LST_ZTEGSDT003-Z_CSIZE_40FT_QTY
+ LST_ZTEGSDT003-Z_CSIZE_OTH_QTY.
ENDCATCH.
IF SY-SUBRC <> 0.
LST_SI-Z_CONTAINERS = CNS_MAXCOUNT.
ENDIF.
LST_FILE-Z_CONTAINERS = LST_SI-Z_CONTAINERS.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_FILE-Z_CONTAINERS
IMPORTING
OUTPUT = LST_FILE-Z_CONTAINERS.

*   Packages
LST_SI-Z_PACKAGES = LST_ZTEGSDT002-Z_CASE_COUNT.
LST_FILE-Z_PACKAGES = LST_SI-Z_PACKAGES.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
EXPORTING
INPUT  = LST_FILE-Z_PACKAGES
IMPORTING
OUTPUT = LST_FILE-Z_PACKAGES.

*   Invoice1
LST_SI-Z_INVOICE1 = LST_ZTEGSDT004-Z_INVOICE1.
LST_FILE-Z_INVOICE1 = LST_SI-Z_INVOICE1.

*   Invoice2
LST_SI-Z_INVOICE2 = LST_ZTEGSDT004-Z_INVOICE2.
LST_FILE-Z_INVOICE2 = LST_SI-Z_INVOICE2.

*   Invoice3
LST_SI-Z_INVOICE3 = LST_ZTEGSDT004-Z_INVOICE3.
LST_FILE-Z_INVOICE3 = LST_SI-Z_INVOICE3.

*   Invoice4
LST_SI-Z_INVOICE4 = LST_ZTEGSDT004-Z_INVOICE4.
LST_FILE-Z_INVOICE4 = LST_SI-Z_INVOICE4.

*   Invoice5
LST_SI-Z_INVOICE5 = LST_ZTEGSDT004-Z_INVOICE5.
LST_FILE-Z_INVOICE5 = LST_SI-Z_INVOICE5.

*   Invoice6
LST_SI-Z_INVOICE6 = LST_ZTEGSDT004-Z_INVOICE6.
LST_FILE-Z_INVOICE6 = LST_SI-Z_INVOICE6.

*   Remarks1
LST_SI-Z_SI_REMARKS1 = LST_ZTEGSDT003-Z_SI_REMARKS1.
LST_FILE-Z_SI_REMARKS1 = LST_SI-Z_SI_REMARKS1.

*   Remarks2
LST_SI-Z_SI_REMARKS2 = LST_ZTEGSDT003-Z_SI_REMARKS2.
LST_FILE-Z_SI_REMARKS2 = LST_SI-Z_SI_REMARKS2.

*   Remarks3
LST_SI-Z_SI_REMARKS3 = LST_ZTEGSDT003-Z_SI_REMARKS3.
LST_FILE-Z_SI_REMARKS3 = LST_SI-Z_SI_REMARKS3.

*   Remarks4
LST_SI-Z_SI_REMARKS4 = LST_ZTEGSDT003-Z_SI_REMARKS4.
LST_FILE-Z_SI_REMARKS4 = LST_SI-Z_SI_REMARKS4.

*   Remarks5
LST_SI-Z_SI_REMARKS5 = LST_ZTEGSDT003-Z_SI_REMARKS5.
LST_FILE-Z_SI_REMARKS5 = LST_SI-Z_SI_REMARKS5.

*   Casemark1
LST_SI-Z_CASEMARK1 = LST_ZTEGSDT001-Z_CASEMARK1.
LST_FILE-Z_CASEMARK1 = LST_SI-Z_CASEMARK1.

*   Casemark2
LST_SI-Z_CASEMARK2 = LST_ZTEGSDT001-Z_CASEMARK2.
LST_FILE-Z_CASEMARK2 = LST_SI-Z_CASEMARK2.

*   Casemark3
LST_SI-Z_CASEMARK3 = LST_ZTEGSDT001-Z_CASEMARK3.
LST_FILE-Z_CASEMARK3 = LST_SI-Z_CASEMARK3.

*   Casemark4
LST_SI-Z_CASEMARK4 = LST_ZTEGSDT001-Z_CASEMARK4.
LST_FILE-Z_CASEMARK4 = LST_SI-Z_CASEMARK4.

*   Casemark5
LST_SI-Z_CASEMARK5 = LST_ZTEGSDT001-Z_CASEMARK5.
LST_FILE-Z_CASEMARK5 = LST_SI-Z_CASEMARK5.

*   ShippingPt
**** START UPD 2015/06/01 ISID18 ****
*    LST_SI-VSTEL = LST_LIKP-VSTEL.
LST_SI-VSTEL = LST_ZTEGSDT003-VSTEL.
**** END UPD 2015/06/01 ISID18 ****
LST_FILE-VSTEL = LST_SI-VSTEL.

IF LST_SI-VSTEL IS NOT INITIAL.
LST_VSTEL-SIGN = 'I'.
LST_VSTEL-OPTION = 'EQ'.
LST_VSTEL-LOW = LST_SI-VSTEL.
APPEND LST_VSTEL TO RD_VSTEL.
ENDIF.

*   Sales Org.
LST_SI-VKORG = LST_LIKP-VKORG.

*   Printer/Tray
LST_SI-LNAME = P_PTRAY.
LST_FILE-LNAME = LST_SI-LNAME.

*   CopmanyName
LST_SI-Z_COMP_NAME = P_CNAME.
LST_FILE-Z_COMP_NAME = LST_SI-Z_COMP_NAME.

*   CopmanyAddress1
LST_SI-Z_COMP_ADDRESS1 = P_CADDR1.
LST_FILE-Z_COMP_ADDRESS1 = LST_SI-Z_COMP_ADDRESS1.

*   CopmanyAddress2
LST_SI-Z_COMP_ADDRESS2 = P_CADDR2.
LST_FILE-Z_COMP_ADDRESS2 = LST_SI-Z_COMP_ADDRESS2.

*   CopmanyTel
LST_SI-Z_COMP_TEL = P_CTEL.
LST_FILE-Z_COMP_TEL = LST_SI-Z_COMP_TEL.

*   CopmanyFax
LST_SI-Z_COMP_FAX = P_CFAX.
LST_FILE-Z_COMP_FAX = LST_SI-Z_COMP_FAX.

*   OutputUser
LST_SI-Z_OUTPUT_USERID = SY-UNAME.
LST_FILE-Z_OUTPUT_USERID = LST_SI-Z_OUTPUT_USERID.

*   Dec.pt.Format
IF P_XDEZP IS INITIAL.
LST_SI-XDEZP = LST_T005X-XDEZP.
ELSE.
LST_SI-XDEZP = P_XDEZP.
ENDIF.
LST_FILE-XDEZP = LST_SI-XDEZP.

*   DateFormat
IF P_DATFM IS INITIAL.
LST_SI-DATFM = LST_T005X-DATFM.
ELSE.
LST_SI-DATFM = P_DATFM.
ENDIF.
LST_FILE-DATFM = LST_SI-DATFM.

APPEND LST_SI TO O_TD_SI.
APPEND LST_FILE TO O_TD_FILE.
ENDLOOP.
SORT O_TD_SI BY Z_SI_NO      ASCENDING
Z_INVOICE_NO ASCENDING.

ENDFORM.                    " EDIT_DATA
*&---------------------------------------------------------------------*
*&      Form  UPDATE_TABLE
*&---------------------------------------------------------------------*
*       テーブル更新
*----------------------------------------------------------------------*
*      -->I_TD_SI
*      -->I_TD_ZTEGSDT015
*      <--O_FNAME
*      <--O_OUTPUT_CP
*      <--O_TD_MESSAGE
*      <--O_COUNT
*      <--O_NORMAL
*      <--O_ERROR
*----------------------------------------------------------------------*
FORM UPDATE_TABLE  USING I_TD_SI         TYPE TYP_TD_SI
I_TD_ZTEGSDT015 TYPE TYP_TD_ZTEGSDT015
CHANGING O_FNAME         TYPE ANY
O_OUTPUT_CP     TYPE ANY
O_TD_MESSAGE    TYPE TYP_TD_MESSAGE
O_COUNT         TYPE ANY
O_NORMAL        TYPE ANY
O_ERROR         TYPE ANY.

DATA: LST_SI         TYPE TYP_SI,
LW_END         TYPE CHAR1,
LW_DATUM       TYPE SY-DATUM,
LW_UZEIT       TYPE SY-UZEIT,
LW_UNAME       TYPE SY-UNAME,
LW_MODE        TYPE CHAR1,
LW_ERRFLG      TYPE CHAR1,
LW_INSERT_15   TYPE CHAR1,
LST_ZTEGZZT001 TYPE ZTEGZZT001,
LST_ZTEGSDT015 TYPE ZTEGSDT015,
LTD_ZTEGSDT016 TYPE STANDARD TABLE OF ZTEGSDT016,
LST_ZTEGSDT016 TYPE ZTEGSDT016,
LTD_ZSDT016    TYPE STANDARD TABLE OF TYP_ZTEGSDT016.

* ファイル名取得処理
PERFORM GET_FILE_NAME USING I_TD_SI
CHANGING O_FNAME
O_OUTPUT_CP.

LW_DATUM = SY-DATUM.
LW_UZEIT = SY-UZEIT.
LW_UNAME = SY-UNAME.
IF RB_DOWN IS INITIAL.
LW_MODE = 'P'.
ELSE.
LW_MODE = 'D'.
ENDIF.

* Output Work存在チェック
PERFORM GET_OUTPUT_WORK USING LW_MODE
I_TD_SI
CHANGING LTD_ZSDT016.

* テーブルの更新
LOOP AT I_TD_SI INTO LST_SI.
AT END OF Z_SI_NO.
LW_END = 'X'.
O_COUNT = O_COUNT + 1.  "処理件数
ENDAT.

IF LW_END = 'X'.
*     ZTEGZZT001データの編集
CLEAR LST_ZTEGZZT001.
PERFORM GET_SERNO CHANGING LST_ZTEGZZT001-Z_OUTPUT_LOG_NO.
LST_ZTEGZZT001-PROGNAME = SY-REPID.
LST_ZTEGZZT001-Z_REPORT_NAME = TEXT-C01.
LST_ZTEGZZT001-LNAME = P_PTRAY.
LST_ZTEGZZT001-Z_OUTPUT_PATH = O_FNAME.
LST_ZTEGZZT001-Z_OUTPUT_MODE = LW_MODE.
IF RB_DOWN IS INITIAL.
LST_ZTEGZZT001-Z_OUTPUT_CP = O_OUTPUT_CP.
ELSE.
PERFORM GET_LOCAL_CODEPAGE
CHANGING LST_ZTEGZZT001-Z_OUTPUT_CP.
ENDIF.
LST_ZTEGZZT001-Z_KEY1_TYPE = 'VSTEL'.
LST_ZTEGZZT001-Z_KEY1_VALUE = LST_SI-VSTEL.
LST_ZTEGZZT001-Z_KEY2_TYPE = 'Z_CUST_CNEE'.
LST_ZTEGZZT001-Z_KEY2_VALUE = LST_SI-Z_CUST_CNEE.
LST_ZTEGZZT001-Z_KEY3_TYPE = 'Z_CUST_NTFY'.
LST_ZTEGZZT001-Z_KEY3_VALUE = LST_SI-Z_CUST_NTFY.
LST_ZTEGZZT001-Z_KEY4_TYPE = 'Z_SI_NO'.
LST_ZTEGZZT001-Z_KEY4_VALUE = LST_SI-Z_SI_NO.
LST_ZTEGZZT001-Z_CRE_YMD = LW_DATUM.
LST_ZTEGZZT001-Z_CRE_HMS = LW_UZEIT.
LST_ZTEGZZT001-Z_CRE_USERID = LW_UNAME.

*     ZTEGSDT015データの編集
CLEAR LST_ZTEGSDT015.
CLEAR LW_INSERT_15.
IF RB_REPNT IS INITIAL.
READ TABLE I_TD_ZTEGSDT015 TRANSPORTING NO FIELDS
WITH KEY Z_OUTPUT_MODE = LW_MODE
Z_SI_NO       = LST_SI-Z_SI_NO.
IF SY-SUBRC <> 0.
LST_ZTEGSDT015-Z_OUTPUT_MODE = LW_MODE.
LST_ZTEGSDT015-Z_SI_NO = LST_SI-Z_SI_NO.
LST_ZTEGSDT015-Z_CRE_YMD = LW_DATUM.
LST_ZTEGSDT015-Z_CRE_HMS = LW_UZEIT.
LST_ZTEGSDT015-Z_CRE_USERID = LW_UNAME.
LW_INSERT_15 = 'X'.
ENDIF.
ENDIF.
ENDIF.

*   ZTEGSDT016データの編集
CLEAR LST_ZTEGSDT016.
LST_ZTEGSDT016-Z_OUTPUT_MODE = LW_MODE.
LST_ZTEGSDT016-Z_SI_NO = LST_SI-Z_SI_NO.
LST_ZTEGSDT016-Z_INVOICE_NO = LST_SI-Z_INVOICE_NO.
LST_ZTEGSDT016-LNAME = LST_SI-LNAME.
LST_ZTEGSDT016-Z_SI_DATE = LST_SI-Z_SI_DATE.
LST_ZTEGSDT016-Z_BL_NO = LST_SI-Z_BL_NO.
LST_ZTEGSDT016-Z_BL_DATE = LST_SI-Z_BL_DATE.
**** START ADD 2015/05/19 ISID18 ****
LST_ZTEGSDT016-Z_COMP_NAME = LST_SI-Z_COMP_NAME.
LST_ZTEGSDT016-Z_COMP_ADDRESS1 = LST_SI-Z_COMP_ADDRESS1.
LST_ZTEGSDT016-Z_COMP_ADDRESS2 = LST_SI-Z_COMP_ADDRESS2.
LST_ZTEGSDT016-Z_COMP_TEL = LST_SI-Z_COMP_TEL.
LST_ZTEGSDT016-Z_COMP_FAX = LST_SI-Z_COMP_FAX.
**** END ADD 2015/05/19 ISID18 ****
LST_ZTEGSDT016-Z_CUST_CNEE = LST_SI-Z_CUST_CNEE.
LST_ZTEGSDT016-Z_CUST_NAME_CNEE = LST_SI-Z_CUST_NAME_CNEE.
LST_ZTEGSDT016-Z_ADDRESS1_CNEE = LST_SI-Z_ADDRESS1_CNEE.
LST_ZTEGSDT016-Z_ADDRESS2_CNEE = LST_SI-Z_ADDRESS2_CNEE.
**** START ADD 2014/12/25 ISID11 ****
LST_ZTEGSDT016-Z_ADDRESS3_CNEE = LST_SI-Z_ADDRESS3_CNEE.
LST_ZTEGSDT016-Z_ADDRESS4_CNEE = LST_SI-Z_ADDRESS4_CNEE.
**** END ADD 2014/12/25 ISID11 ****
LST_ZTEGSDT016-Z_ATTN_CNEE = LST_SI-Z_ATTN_CNEE.
LST_ZTEGSDT016-Z_TEL_CNEE = LST_SI-Z_TEL_CNEE.
LST_ZTEGSDT016-Z_FAX_CNEE = LST_SI-Z_FAX_CNEE.
LST_ZTEGSDT016-Z_CUST_NTFY = LST_SI-Z_CUST_NTFY.
LST_ZTEGSDT016-Z_CUST_NAME_NTFY = LST_SI-Z_CUST_NAME_NTFY.
LST_ZTEGSDT016-Z_ADDRESS1_NTFY = LST_SI-Z_ADDRESS1_NTFY.
LST_ZTEGSDT016-Z_ADDRESS2_NTFY = LST_SI-Z_ADDRESS2_NTFY.
**** START ADD 2014/12/25 ISID11 ****
LST_ZTEGSDT016-Z_ADDRESS3_NTFY = LST_SI-Z_ADDRESS3_NTFY.
LST_ZTEGSDT016-Z_ADDRESS4_NTFY = LST_SI-Z_ADDRESS4_NTFY.
**** END ADD 2014/12/25 ISID11 ****
LST_ZTEGSDT016-Z_ATTN_NTFY = LST_SI-Z_ATTN_NTFY.
LST_ZTEGSDT016-Z_TEL_NTFY = LST_SI-Z_TEL_NTFY.
LST_ZTEGSDT016-Z_FAX_NTFY = LST_SI-Z_FAX_NTFY.
LST_ZTEGSDT016-Z_CARRIER = LST_SI-Z_CARRIER.
LST_ZTEGSDT016-Z_BOOKING_NO = LST_SI-Z_BOOKING_NO.
LST_ZTEGSDT016-Z_SHIPPED_PER = LST_SI-Z_SHIPPED_PER.
LST_ZTEGSDT016-Z_VOY_NO = LST_SI-Z_VOY_NO.
LST_ZTEGSDT016-Z_ETD = LST_SI-Z_ETD.
LST_ZTEGSDT016-Z_ETA = LST_SI-Z_ETA.
LST_ZTEGSDT016-Z_SHIP_DATE = LST_SI-Z_SHIP_DATE.
LST_ZTEGSDT016-Z_CFS_CUT = LST_SI-Z_CFS_CUT.
LST_ZTEGSDT016-Z_CY_CUT = LST_SI-Z_CY_CUT.
LST_ZTEGSDT016-Z_CSIZE_20FT_QTY = LST_SI-Z_CSIZE_20FT_QTY.
LST_ZTEGSDT016-Z_CSIZE_40FT_QTY = LST_SI-Z_CSIZE_40FT_QTY.
LST_ZTEGSDT016-Z_CSIZE_OTH_QTY = LST_SI-Z_CSIZE_OTH_QTY.
LST_ZTEGSDT016-Z_PL_RECEIPT = LST_SI-Z_PL_RECEIPT.
LST_ZTEGSDT016-Z_PT_LOADING = LST_SI-Z_PT_LOADING.
LST_ZTEGSDT016-Z_PT_DISCHARGE = LST_SI-Z_PT_DISCHARGE.
LST_ZTEGSDT016-Z_PL_DELIVERY = LST_SI-Z_PL_DELIVERY.
LST_ZTEGSDT016-Z_FINAL_DEST = LST_SI-Z_FINAL_DEST.
LST_ZTEGSDT016-Z_FREIGHT_TERM = LST_SI-Z_FREIGHT_TERM.
LST_ZTEGSDT016-Z_FREIGHT_ON_BL = LST_SI-Z_FREIGHT_ON_BL.
LST_ZTEGSDT016-Z_PL_ISSUE = LST_SI-Z_PL_ISSUE.
LST_ZTEGSDT016-Z_KIND_OF_BL = LST_SI-Z_KIND_OF_BL.
LST_ZTEGSDT016-Z_DG_CODE = LST_SI-Z_DG_CODE.
LST_ZTEGSDT016-Z_TEMP_ZONES = LST_SI-Z_TEMP_ZONES.
LST_ZTEGSDT016-Z_DESC_OF_GOODS = LST_SI-Z_DESC_OF_GOODS.
LST_ZTEGSDT016-Z_INVOICE1 = LST_SI-Z_INVOICE1.
LST_ZTEGSDT016-Z_INVOICE2 = LST_SI-Z_INVOICE2.
LST_ZTEGSDT016-Z_INVOICE3 = LST_SI-Z_INVOICE3.
LST_ZTEGSDT016-Z_INVOICE4 = LST_SI-Z_INVOICE4.
LST_ZTEGSDT016-Z_INVOICE5 = LST_SI-Z_INVOICE5.
LST_ZTEGSDT016-Z_INVOICE6 = LST_SI-Z_INVOICE6.
LST_ZTEGSDT016-Z_SI_REMARKS1 = LST_SI-Z_SI_REMARKS1.
LST_ZTEGSDT016-Z_SI_REMARKS2 = LST_SI-Z_SI_REMARKS2.
LST_ZTEGSDT016-Z_SI_REMARKS3 = LST_SI-Z_SI_REMARKS3.
LST_ZTEGSDT016-Z_SI_REMARKS4 = LST_SI-Z_SI_REMARKS4.
LST_ZTEGSDT016-Z_SI_REMARKS5 = LST_SI-Z_SI_REMARKS5.
LST_ZTEGSDT016-Z_CASEMARK1 = LST_SI-Z_CASEMARK1.
LST_ZTEGSDT016-Z_CASEMARK2 = LST_SI-Z_CASEMARK2.
LST_ZTEGSDT016-Z_CASEMARK3 = LST_SI-Z_CASEMARK3.
LST_ZTEGSDT016-Z_CASEMARK4 = LST_SI-Z_CASEMARK4.
LST_ZTEGSDT016-Z_CASEMARK5 = LST_SI-Z_CASEMARK5.
LST_ZTEGSDT016-VSTEL = LST_SI-VSTEL.
**** START ADD 2014/12/25 ISID11 ****
LST_ZTEGSDT016-Z_INPUT_USERID = LST_SI-Z_INPUT_USERID.
**** END ADD 2014/12/25 ISID11 ****
**** START ADD 2015/02/11 ISID11 ****
LST_ZTEGSDT016-Z_ENAME = LST_SI-Z_ENAME.
**** END ADD 2015/02/11 ISID11 ****
LST_ZTEGSDT016-Z_OUTPUT_USERID = LST_SI-Z_OUTPUT_USERID.
LST_ZTEGSDT016-XDEZP = LST_SI-XDEZP.
LST_ZTEGSDT016-DATFM = LST_SI-DATFM.
LST_ZTEGSDT016-Z_REPORT_FORMAT = LST_SI-Z_REPORT_FORMAT.
**** START ADD 2015/01/21 ISID11 ****
LST_ZTEGSDT016-Z_REPORT_LANG = LST_SI-Z_REPORT_LANG.
LST_ZTEGSDT016-Z_REPORT_TITLE = LST_SI-Z_REPORT_TITLE.
**** END ADD 2015/01/21 ISID11 ****
LST_ZTEGSDT016-Z_CRE_YMD = LW_DATUM.
LST_ZTEGSDT016-Z_CRE_HMS = LW_UZEIT.
LST_ZTEGSDT016-Z_CRE_USERID = LW_UNAME.
APPEND LST_ZTEGSDT016 TO LTD_ZTEGSDT016.

*   SIテーブル更新
IF LW_END = 'X'.
CLEAR LW_ERRFLG.
PERFORM UPDATE_DATA USING LST_ZTEGZZT001
LST_ZTEGSDT015
LTD_ZTEGSDT016
LTD_ZSDT016
LST_SI
LW_INSERT_15
LW_MODE
CHANGING O_TD_MESSAGE
LW_ERRFLG.
IF LW_ERRFLG = 'X'.
O_ERROR = O_ERROR + 1.  "エラー件数
ELSE.
O_NORMAL = O_NORMAL + 1.  "正常件数
ENDIF.
CLEAR LW_END.
REFRESH LTD_ZTEGSDT016.
ENDIF.
ENDLOOP.

ENDFORM.                    " UPDATE_TABLE
*&---------------------------------------------------------------------*
*&      Form  GET_FILE_NAME
*&---------------------------------------------------------------------*
*       ファイル名取得処理
*----------------------------------------------------------------------*
*      -->I_TD_SI
*      <--O_FNAME
*      <--O_OUTPUT_CP
*----------------------------------------------------------------------*
FORM GET_FILE_NAME  USING I_TD_SI     TYPE TYP_TD_SI
CHANGING O_FNAME     TYPE ANY
O_OUTPUT_CP TYPE ANY.

DATA: LST_SI       TYPE TYP_SI,
LW_BUKRS     TYPE TVKO-BUKRS,
LW_PATH(128) TYPE C,
LW_OUTPUT_FN TYPE ZTEGZZM001-Z_OUTPUT_FN.

GET PARAMETER ID 'ZSVF' FIELD LW_PATH.

* 選択画面のラジオボタン「Print」「Reprint」が選択されている場合
IF RB_DOWN IS INITIAL.
LOOP AT I_TD_SI INTO LST_SI.
IF LST_SI-VKORG IS NOT INITIAL.
EXIT.
ENDIF.
ENDLOOP.
*   販売組織をキーに会社コード取得
SELECT SINGLE BUKRS
INTO LW_BUKRS
FROM TVKO
WHERE VKORG = LST_SI-VKORG.
*   ファイル名・文字コード取得
SELECT Z_OUTPUT_FN
Z_OUTPUT_CP
UP TO 1 ROWS
INTO (LW_OUTPUT_FN,O_OUTPUT_CP)
FROM ZTEGZZM001
WHERE PROGNAME       = SY-REPID
AND BUKRS          = LW_BUKRS
AND Z_CONV_SUBKEY1 = SPACE.
ENDSELECT.

**** START ADD 2015/02/03 ISID11 ****
IF SY-SUBRC <> 0.

*     データが存在しない場合、メッセージを出力し処理を終了する
MESSAGE S051(ZMEGSD01) WITH 'ZTEGZZM001' SY-REPID
DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
*     アドオン変数テーブルが取得できませんでした
*     (NAME = &1 / PGM = &2)

ENDIF.
**** END ADD 2015/02/03 ISID11 ****

CONCATENATE LW_PATH
LW_OUTPUT_FN
SY-REPID
SY-UNAME
SY-UZEIT
CNS_EXTNAME
INTO O_FNAME.
* 選択画面のラジオボタン「Download」が選択されている場合
ELSE.
O_FNAME = P_FNAME.
**** START ADD 2015/01/21 ISID11 ****
PERFORM GET_LOCAL_CODEPAGE
CHANGING O_OUTPUT_CP.
**** END ADD 2015/01/21 ISID11 ****
ENDIF.

ENDFORM.                    " GET_FILE_NAME
*&---------------------------------------------------------------------*
*&      Form  GET_OUTPUT_WORK
*&---------------------------------------------------------------------*
*       Output Work存在チェック
*----------------------------------------------------------------------*
*      -->I_MODE
*      -->I_TD_SI
*      <--O_TD_ZSDT018
*----------------------------------------------------------------------*
FORM GET_OUTPUT_WORK  USING I_MODE       TYPE ANY
I_TD_SI      TYPE TYP_TD_SI
CHANGING O_TD_ZSDT016 TYPE TYP_TD_ZSDT016.

IF I_TD_SI[] IS NOT INITIAL.
SELECT Z_OUTPUT_MODE
Z_SI_NO
INTO TABLE O_TD_ZSDT016
FROM ZTEGSDT016
FOR ALL ENTRIES IN I_TD_SI
WHERE Z_OUTPUT_MODE = I_MODE
AND Z_SI_NO       = I_TD_SI-Z_SI_NO.
SORT O_TD_ZSDT016 BY Z_OUTPUT_MODE ASCENDING
Z_SI_NO       ASCENDING.
ENDIF.

ENDFORM.                    " GET_OUTPUT_WORK
*&---------------------------------------------------------------------*
*&      Form  GET_SERNO
*&---------------------------------------------------------------------*
*       番号範囲オブジェクト（ZEGZZ0001）により発番
*----------------------------------------------------------------------*
*      <--O_NO
*----------------------------------------------------------------------*
FORM GET_SERNO  CHANGING O_NO TYPE ANY.

CALL FUNCTION 'NUMBER_GET_NEXT'
EXPORTING
NR_RANGE_NR = '01'
OBJECT      = 'ZEGZZ0001'
IMPORTING
NUMBER      = O_NO.

ENDFORM.                    " GET_SERNO
*&---------------------------------------------------------------------*
*&      Form  GET_LOCAL_CODEPAGE
*&---------------------------------------------------------------------*
*       ローカルコードページ取得
*----------------------------------------------------------------------*
*      <--O_OUTPUT_CP
*----------------------------------------------------------------------*
FORM GET_LOCAL_CODEPAGE  CHANGING O_OUTPUT_CP TYPE ANY.

DATA:
**** START ADD 2015/01/21 ISID11 ****
LW_ENCODING  TYPE ABAP_ENCODING,
LW_RC        TYPE I,
**** END ADD 2015/01/21 ISID11 ****
LW_CODE TYPE CPCODEPAGE.

**** START UPD 2015/01/21 ISID11 ****
*  CALL FUNCTION 'NLS_GET_FRONTEND_CP'
*    EXPORTING
*      LANGU                       = SY-LANGU
*    IMPORTING
*      FRONTEND_CODEPAGE           = LW_CODE
*    EXCEPTIONS
*      ILLEGAL_SYST_CODEPAGE       = 1
*      NO_FRONTEND_CP_FOUND        = 2
*      INTERNAL_OR_DB_ERROR        = 3
*      OTHERS                      = 4.
CALL METHOD CL_GUI_FRONTEND_SERVICES=>GET_SAPLOGON_ENCODING
CHANGING
FILE_ENCODING                 = LW_ENCODING
RC                            = LW_RC
EXCEPTIONS
CNTL_ERROR                    = 1
ERROR_NO_GUI                  = 2
NOT_SUPPORTED_BY_GUI          = 3
CANNOT_INITIALIZE_GLOBALSTATE = 4
OTHERS                        = 5.
**** END UPD 2015/01/21 ISID11 ****
IF SY-SUBRC = 0.
**** START ADD 2015/01/21 ISID11 ****
LW_CODE = LW_ENCODING.
**** END ADD 2015/01/21 ISID11 ****
CALL FUNCTION 'SCP_CODEPAGE_INFO'
EXPORTING
CODEPAGE  = LW_CODE
IMPORTING
HTTP_NAME = O_OUTPUT_CP.
ENDIF.

ENDFORM.                    " GET_LOCAL_CODEPAGE
*&---------------------------------------------------------------------*
*&      Form  UPDATE_DATA
*&---------------------------------------------------------------------*
*       SIテーブル更新
*----------------------------------------------------------------------*
*      -->I_ST_ZTEGZZT001
*      -->I_ST_ZTEGSDT015
*      -->I_TD_ZTEGSDT016
*      -->I_TD_ZSDT016
*      -->I_ST_DNCN
*      -->I_FLG
*      -->I_MODE
*      <--O_TD_MESSAGE
*      <--O_ERRFLG
*----------------------------------------------------------------------*
FORM UPDATE_DATA  USING I_ST_ZTEGZZT001 TYPE ZTEGZZT001
I_ST_ZTEGSDT015 TYPE ZTEGSDT015
I_TD_ZTEGSDT016 TYPE TYP_TD_ZTEGSDT016
I_TD_ZSDT016    TYPE TYP_TD_ZSDT016
I_ST_SI         TYPE TYP_SI
I_FLG           TYPE ANY
I_MODE          TYPE ANY
CHANGING O_TD_MESSAGE    TYPE TYP_TD_MESSAGE
O_ERRFLG        TYPE ANY.

DATA: LST_MESSAGE TYPE TYP_MESSAGE,
**** START DEL 2015/02/05 ISID11 ****
*        LW_SI_NO    TYPE ZTEGSDT003-Z_SI_NO,
**** END DEL 2015/02/05 ISID11 ****
LW_INFO     TYPE STRING.

* メッセージインフォ
**** START UPD 2015/02/05 ISID11 ****
*  LW_SI_NO = I_ST_SI-Z_SI_NO.
*  CONCATENATE TEXT-M06
*              LW_SI_NO
*         INTO LW_INFO
*    SEPARATED BY SPACE.
CONCATENATE 'ZMEGSD01'
'012'
INTO LW_INFO
SEPARATED BY SPACE.
LST_MESSAGE-Z_SI_NO      = I_ST_SI-Z_SI_NO.
LST_MESSAGE-Z_INVOICE_NO = I_ST_SI-Z_INVOICE_NO.
**** END UPD 2015/02/05 ISID11 ****

* テーブルロック
PERFORM LOCK_TABLE USING I_ST_ZTEGZZT001
I_TD_ZTEGSDT016
I_ST_SI
I_FLG
I_MODE
CHANGING O_TD_MESSAGE
O_ERRFLG.
IF O_ERRFLG = 'X'.
RETURN.
ENDIF.

* Output Logの登録
INSERT ZTEGZZT001 FROM I_ST_ZTEGZZT001.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
O_ERRFLG = 'X'.
*   データ更新に失敗しました。(TBL = &1 / MSG = &2 )
MESSAGE S012(ZMEGSD01) WITH 'ZTEGZZT001' LW_INFO
INTO LST_MESSAGE-MSG.
LST_MESSAGE-TYP = TEXT-M03.
LST_MESSAGE-MSGTYP = TEXT-M05.
APPEND LST_MESSAGE TO O_TD_MESSAGE.
*   テーブルリリース
PERFORM RELEASE_TABLE USING I_ST_ZTEGZZT001
I_TD_ZTEGSDT016
I_ST_SI
I_MODE.
RETURN.
ENDIF.

* Output Management(SI)の登録
IF I_FLG = 'X'.
INSERT ZTEGSDT015 FROM I_ST_ZTEGSDT015.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
O_ERRFLG = 'X'.
*     データ更新に失敗しました。(TBL = &1 / MSG = &2 )
MESSAGE S012(ZMEGSD01) WITH 'ZTEGSDT015' LW_INFO
INTO LST_MESSAGE-MSG.
LST_MESSAGE-TYP = TEXT-M03.
LST_MESSAGE-MSGTYP = TEXT-M05.
APPEND LST_MESSAGE TO O_TD_MESSAGE.
*     テーブルリリース
PERFORM RELEASE_TABLE USING I_ST_ZTEGZZT001
I_TD_ZTEGSDT016
I_ST_SI
I_MODE.
RETURN.
ENDIF.
ENDIF.

* Output Work(SI)の削除
READ TABLE I_TD_ZSDT016 TRANSPORTING NO FIELDS BINARY SEARCH
WITH KEY Z_OUTPUT_MODE = I_MODE
Z_SI_NO       = I_ST_SI-Z_SI_NO.
IF SY-SUBRC = 0.
DELETE FROM ZTEGSDT016
WHERE Z_OUTPUT_MODE = I_MODE
AND Z_SI_NO       = I_ST_SI-Z_SI_NO.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
O_ERRFLG = 'X'.
*     データ削除に失敗しました。(TBL = &1 / MSG = &2 )
MESSAGE S033(ZMEGSD01) WITH 'ZTEGSDT016'
**** START UPD 2015/02/05 ISID11 ****
*                                               LW_INFO
'ZMEGSD01 033'
**** END UPD 2015/02/05 ISID11 ****
INTO LST_MESSAGE-MSG.
LST_MESSAGE-TYP = TEXT-M03.
LST_MESSAGE-MSGTYP = TEXT-M05.
APPEND LST_MESSAGE TO O_TD_MESSAGE.
*     テーブルリリース
PERFORM RELEASE_TABLE USING I_ST_ZTEGZZT001
I_TD_ZTEGSDT016
I_ST_SI
I_MODE.
RETURN.
ENDIF.
ENDIF.

* Output Work(SI)の登録
INSERT ZTEGSDT016 FROM TABLE I_TD_ZTEGSDT016 ACCEPTING DUPLICATE KEYS.
IF SY-SUBRC <> 0.
ROLLBACK WORK.
O_ERRFLG = 'X'.
*   データ更新に失敗しました。(TBL = &1 / MSG = &2 )
MESSAGE S012(ZMEGSD01) WITH 'ZTEGSDT016' LW_INFO
INTO LST_MESSAGE-MSG.
LST_MESSAGE-TYP = TEXT-M03.
LST_MESSAGE-MSGTYP = TEXT-M05.
APPEND LST_MESSAGE TO O_TD_MESSAGE.
*   テーブルリリース
PERFORM RELEASE_TABLE USING I_ST_ZTEGZZT001
I_TD_ZTEGSDT016
I_ST_SI
I_MODE.
RETURN.
ENDIF.

COMMIT WORK AND WAIT.

* データ登録が正常終了しました。
MESSAGE S013(ZMEGSD01) INTO LST_MESSAGE-MSG.
LST_MESSAGE-TYP = TEXT-M03.
LST_MESSAGE-MSGTYP = TEXT-M04.
APPEND LST_MESSAGE TO O_TD_MESSAGE.

* テーブルリリース
PERFORM RELEASE_TABLE USING I_ST_ZTEGZZT001
I_TD_ZTEGSDT016
I_ST_SI
I_MODE.

ENDFORM.                    " UPDATE_DATA
*&---------------------------------------------------------------------*
*&      Form  LOCK_TABLE
*&---------------------------------------------------------------------*
*       テーブルロック
*----------------------------------------------------------------------*
*      -->I_ST_ZTEGZZT001
*      -->I_TD_ZTEGSDT016
*      -->I_ST_DNCN
*      -->I_ST_FLG
*      -->I_ST_MODE
*      <--O_TD_MESSAGE
*      <--O_TD_ERRFLG
*----------------------------------------------------------------------*
FORM LOCK_TABLE  USING I_ST_ZTEGZZT001 TYPE ZTEGZZT001
I_TD_ZTEGSDT016 TYPE TYP_TD_ZTEGSDT016
I_ST_SI         TYPE TYP_SI
I_FLG           TYPE ANY
I_MODE          TYPE ANY
CHANGING O_TD_MESSAGE    TYPE TYP_TD_MESSAGE
O_ERRFLG        TYPE ANY.

DATA: LST_MESSAGE    TYPE TYP_MESSAGE,
LST_ZTEGSDT016 TYPE ZTEGSDT016,
LTD_LOCK       TYPE TYP_TD_ZTEGSDT016,
LST_LOCK       TYPE ZTEGSDT016,
LW_END         TYPE CHAR1.

**** START ADD 2015/02/05 ISID11 ****
LST_MESSAGE-Z_SI_NO      = I_ST_SI-Z_SI_NO.
LST_MESSAGE-Z_INVOICE_NO = I_ST_SI-Z_INVOICE_NO.
**** END ADD 2015/02/05 ISID11 ****

* ZTEGZZT001のロック
CALL FUNCTION 'ENQUEUE_EZZTEGZZT001'
EXPORTING
MODE_ZTEGZZT001 = 'E'
MANDT           = SY-MANDT
Z_OUTPUT_LOG_NO = I_ST_ZTEGZZT001-Z_OUTPUT_LOG_NO
EXCEPTIONS
FOREIGN_LOCK    = 1
SYSTEM_FAILURE  = 2
OTHERS          = 3.
IF SY-SUBRC <> 0.

**** START UPD 2015/02/11 ISID11 ****
*    MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO
*        WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
MESSAGE E080(ZMEGSD01) WITH SY-MSGV1
*   対象の伝票は、別のユーザが編集中です。（USER = &1）
**** END UPD 2015/02/11 ISID11 ****

INTO LST_MESSAGE-MSG.
LST_MESSAGE-TYP = TEXT-M03.
LST_MESSAGE-MSGTYP = TEXT-M05.
APPEND LST_MESSAGE TO O_TD_MESSAGE.
O_ERRFLG = 'X'.
RETURN.
ENDIF.

* ZTEGSDT015のロック
IF I_FLG = 'X'.
CALL FUNCTION 'ENQUEUE_EZZTEGSDT015'
EXPORTING
MODE_ZTEGSDT015 = 'E'
MANDT           = SY-MANDT
Z_OUTPUT_MODE   = I_MODE
Z_SI_NO         = I_ST_SI-Z_SI_NO
EXCEPTIONS
FOREIGN_LOCK    = 1
SYSTEM_FAILURE  = 2
OTHERS          = 3.
IF SY-SUBRC <> 0.

**** START UPD 2015/02/11 ISID11 ****
*      MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO
*          WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
MESSAGE E080(ZMEGSD01) WITH SY-MSGV1
*     対象の伝票は、別のユーザが編集中です。（USER = &1）
**** END UPD 2015/02/11 ISID11 ****

INTO LST_MESSAGE-MSG.
LST_MESSAGE-TYP = TEXT-M03.
LST_MESSAGE-MSGTYP = TEXT-M05.
APPEND LST_MESSAGE TO O_TD_MESSAGE.

*     ZTEGZZT001のリリース
CALL FUNCTION 'DEQUEUE_EZZTEGZZT001'
EXPORTING
MODE_ZTEGZZT001 = 'E'
MANDT           = SY-MANDT
Z_OUTPUT_LOG_NO = I_ST_ZTEGZZT001-Z_OUTPUT_LOG_NO.

O_ERRFLG = 'X'.
RETURN.
ENDIF.
ENDIF.

* ZTEGSDT016のロック
LOOP AT I_TD_ZTEGSDT016 INTO LST_ZTEGSDT016.
AT END OF Z_SI_NO.
LW_END = 'X'.
ENDAT.
IF LW_END = 'X'.
CLEAR LW_END.
CALL FUNCTION 'ENQUEUE_EZZTEGSDT016'
EXPORTING
MODE_ZTEGSDT016 = 'E'
MANDT           = SY-MANDT
Z_OUTPUT_MODE   = LST_ZTEGSDT016-Z_OUTPUT_MODE
Z_SI_NO         = LST_ZTEGSDT016-Z_SI_NO
EXCEPTIONS
FOREIGN_LOCK    = 1
SYSTEM_FAILURE  = 2
OTHERS          = 3.
IF SY-SUBRC <> 0.

**** START UPD 2015/02/11 ISID11 ****
*        MESSAGE ID SY-MSGID TYPE 'S' NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4
MESSAGE E080(ZMEGSD01) WITH SY-MSGV1
*       対象の伝票は、別のユーザが編集中です。（USER = &1）
**** END UPD 2015/02/11 ISID11 ****

INTO LST_MESSAGE-MSG.
LST_MESSAGE-TYP = TEXT-M03.
LST_MESSAGE-MSGTYP = TEXT-M05.
APPEND LST_MESSAGE TO O_TD_MESSAGE.

*       ZTEGZZT001のリリース
CALL FUNCTION 'DEQUEUE_EZZTEGZZT001'
EXPORTING
MODE_ZTEGZZT001 = 'E'
MANDT           = SY-MANDT
Z_OUTPUT_LOG_NO = I_ST_ZTEGZZT001-Z_OUTPUT_LOG_NO.

*       ZTEGSDT015のリリース
CALL FUNCTION 'DEQUEUE_EZZTEGSDT015'
EXPORTING
MODE_ZTEGSDT015 = 'E'
MANDT           = SY-MANDT
Z_OUTPUT_MODE   = I_MODE
Z_SI_NO         = I_ST_SI-Z_SI_NO.

*       ZTEGSDT016のリリース
LOOP AT LTD_LOCK INTO LST_LOCK.
CALL FUNCTION 'DEQUEUE_EZZTEGSDT016'
EXPORTING
MODE_ZTEGSDT016 = 'E'
MANDT           = SY-MANDT
Z_OUTPUT_MODE   = LST_LOCK-Z_OUTPUT_MODE
Z_SI_NO         = LST_LOCK-Z_SI_NO.
ENDLOOP.

O_ERRFLG = 'X'.
RETURN.
ELSE.
APPEND LST_ZTEGSDT016 TO LTD_LOCK.
ENDIF.
ENDIF.
ENDLOOP.


ENDFORM.                    " LOCK_TABLE
*&---------------------------------------------------------------------*
*&      Form  RELEASE_TABLE
*&---------------------------------------------------------------------*
*       テーブルリリース
*----------------------------------------------------------------------*
*      -->I_ST_ZTEGZZT001
*      -->I_TD_ZTEGSDT016
*      -->I_ST_SI
*      -->I_MODE
*----------------------------------------------------------------------*
FORM RELEASE_TABLE  USING I_ST_ZTEGZZT001 TYPE ZTEGZZT001
I_TD_ZTEGSDT016 TYPE TYP_TD_ZTEGSDT016
I_ST_SI         TYPE TYP_SI
I_MODE          TYPE ANY.

DATA LST_LOCK TYPE ZTEGSDT016.

* ZTEGZZT001のリリース
CALL FUNCTION 'DEQUEUE_EZZTEGZZT001'
EXPORTING
MODE_ZTEGZZT001 = 'E'
MANDT           = SY-MANDT
Z_OUTPUT_LOG_NO = I_ST_ZTEGZZT001-Z_OUTPUT_LOG_NO.

* ZTEGSDT015のリリース
CALL FUNCTION 'DEQUEUE_EZZTEGSDT015'
EXPORTING
MODE_ZTEGSDT015 = 'E'
MANDT           = SY-MANDT
Z_OUTPUT_MODE   = I_MODE
Z_SI_NO         = I_ST_SI-Z_SI_NO.

* ZTEGSDT016のリリース
LOOP AT I_TD_ZTEGSDT016 INTO LST_LOCK.
CALL FUNCTION 'DEQUEUE_EZZTEGSDT016'
EXPORTING
MODE_ZTEGSDT016 = 'E'
MANDT           = SY-MANDT
Z_OUTPUT_MODE   = LST_LOCK-Z_OUTPUT_MODE
Z_SI_NO         = LST_LOCK-Z_SI_NO.
ENDLOOP.

ENDFORM.                    " RELEASE_TABLE
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_FILE
*&---------------------------------------------------------------------*
*       ファイル出力
*----------------------------------------------------------------------*
*      -->I_TD_FILE
*      -->I_FNAME
*      -->I_OUTPUT_CP
*----------------------------------------------------------------------*
FORM OUTPUT_FILE  USING    I_TD_FILE   TYPE TYP_TD_FILE
I_FNAME     TYPE ANY
I_OUTPUT_CP TYPE ANY.

DATA: LW_SFILE    TYPE STRING,
LST_FILE    TYPE ZSEGSD0018,
LW_CODEPAGE TYPE ABAP_ENCODING,
**** START ADD 2015/01/21 ISID11 ****
LW_CDUTF8    TYPE ABAP_ENCODING,
**** END ADD 2015/01/21 ISID11 ****
LW_FNAME    TYPE STRING,
LW_ERRFLG   TYPE CHAR1,
LW_STR      TYPE STRING,
LW_CODE_STR TYPE STRING,
**** START ADD 2015/01/31 ISID11 ****
LW_SUBRC    TYPE SY-SUBRC,
**** END ADD 2015/01/31 ISID11 ****
LTD_FILE    TYPE TYP_TD_FILE.

* コードページ取得
LW_CODE_STR = I_OUTPUT_CP.
IF LW_CODE_STR IS NOT INITIAL.
LW_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( LW_CODE_STR ).
ENDIF.
* サーバファイル
IF RB_DOWN IS INITIAL.
**** START ADD 2015/01/21 ISID11 ****
LW_CDUTF8 = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( 'UTF-8' ).
IF LW_CODEPAGE = LW_CDUTF8.
**** END ADD 2015/01/21 ISID11 ****
OPEN DATASET I_FNAME FOR OUTPUT IN TEXT MODE
**** START UPD 2015/01/21 ISID11 ****
*                         ENCODING DEFAULT
ENCODING UTF-8
**** END UPD 2015/01/21 ISID11 ****
IGNORING CONVERSION ERRORS.
**** START ADD 2015/01/21 ISID11 ****

**** START ADD 2015/01/31 ISID11 ****
LW_SUBRC = SY-SUBRC.
**** END ADD 2015/01/31 ISID11 ****

ELSE.
**** START ADD 2015/01/31 ISID11 ****
TRY .
**** END ADD 2015/01/31 ISID11 ****
OPEN DATASET I_FNAME FOR OUTPUT IN LEGACY TEXT MODE
CODE PAGE LW_CODEPAGE
IGNORING CONVERSION ERRORS.
**** START ADD 2015/01/31 ISID11 ****
LW_SUBRC = SY-SUBRC.

CATCH CX_SY_CODEPAGE_CONVERTER_INIT.

LW_SUBRC = 9.

ENDTRY.
**** END ADD 2015/01/31 ISID11 ****

ENDIF.
**** END ADD 2015/01/21 ISID11 ****

**** START UPD 2015/01/31 ISID11 ****
*    IF SY-SUBRC <> 0.
IF LW_SUBRC <> 0.

IF LW_SUBRC = 9.

LW_ERRFLG = 'X'.
MESSAGE S078(ZMEGSD01) DISPLAY LIKE 'E'.
*       該当コードページ変換はサポートしておりません

ELSE.
**** END UPD 2015/01/31 ISID11 ****

LW_ERRFLG = 'X'.
*     ファイルオープンエラー &1
MESSAGE S035(ZMEGSD01) WITH I_FNAME
DISPLAY LIKE 'E'.

**** START ADD 2015/01/31 ISID11 ****
ENDIF.
**** END ADD 2015/01/31 ISID11 ****

ELSE.
*     データ出力
LOOP AT I_TD_FILE INTO LST_FILE.
CONCATENATE LST_FILE-LNAME
LST_FILE-Z_SI_NO
LST_FILE-Z_SI_DATE
LST_FILE-Z_COMP_NAME
LST_FILE-Z_COMP_ADDRESS1
LST_FILE-Z_COMP_ADDRESS2
LST_FILE-Z_COMP_TEL
LST_FILE-Z_COMP_FAX
LST_FILE-Z_CUST_CNEE
LST_FILE-Z_CUST_NAME_CNEE
LST_FILE-Z_ADDRESS1_CNEE
LST_FILE-Z_ADDRESS2_CNEE
**** START ADD 2014/12/25 ISID11 ****
LST_FILE-Z_ADDRESS3_CNEE
LST_FILE-Z_ADDRESS4_CNEE
**** END ADD 2014/12/25 ISID11 ****
LST_FILE-Z_ATTN_CNEE
LST_FILE-Z_TEL_CNEE
LST_FILE-Z_FAX_CNEE
LST_FILE-Z_CUST_NTFY
LST_FILE-Z_CUST_NAME_NTFY
LST_FILE-Z_ADDRESS1_NTFY
LST_FILE-Z_ADDRESS2_NTFY
**** START ADD 2014/12/25 ISID11 ****
LST_FILE-Z_ADDRESS3_NTFY
LST_FILE-Z_ADDRESS4_NTFY
**** END ADD 2014/12/25 ISID11 ****
LST_FILE-Z_ATTN_NTFY
LST_FILE-Z_TEL_NTFY
LST_FILE-Z_FAX_NTFY
LST_FILE-Z_CARRIER
LST_FILE-Z_BOOKING_NO
LST_FILE-Z_SHIPPED_PER
LST_FILE-Z_VOY_NO
LST_FILE-Z_ETD
LST_FILE-Z_ETA
LST_FILE-Z_SHIP_DATE
LST_FILE-Z_CFS_CUT
LST_FILE-Z_CY_CUT
LST_FILE-Z_CSIZE_20FT_QTY
LST_FILE-Z_CSIZE_40FT_QTY
LST_FILE-Z_CSIZE_OTH_QTY
LST_FILE-Z_PL_RECEIPT
LST_FILE-Z_PT_LOADING
LST_FILE-Z_PT_DISCHARGE
LST_FILE-Z_PL_DELIVERY
LST_FILE-Z_FINAL_DEST
LST_FILE-Z_FREIGHT_TERM
LST_FILE-Z_FREIGHT_ON_BL
**** START DEL 2015/06/01 ISID18 ****
*                    LST_FILE-Z_BL_NO
**** END DEL 2015/06/01 ISID18 ****
LST_FILE-Z_BL_DATE
LST_FILE-Z_PL_ISSUE
LST_FILE-Z_KIND_OF_BL
LST_FILE-Z_DG_CODE
LST_FILE-Z_TEMP_ZONES
LST_FILE-Z_SI_REMARKS1
LST_FILE-Z_SI_REMARKS2
LST_FILE-Z_SI_REMARKS3
LST_FILE-Z_SI_REMARKS4
LST_FILE-Z_SI_REMARKS5
LST_FILE-Z_DESC_OF_GOODS
LST_FILE-Z_CONTAINERS
LST_FILE-Z_PACKAGES
LST_FILE-Z_INVOICE_NO
LST_FILE-Z_INVOICE1
LST_FILE-Z_INVOICE2
LST_FILE-Z_INVOICE3
LST_FILE-Z_INVOICE4
LST_FILE-Z_INVOICE5
LST_FILE-Z_INVOICE6
LST_FILE-Z_CASEMARK1
LST_FILE-Z_CASEMARK2
LST_FILE-Z_CASEMARK3
LST_FILE-Z_CASEMARK4
LST_FILE-Z_CASEMARK5
LST_FILE-VSTEL
**** START ADD 2014/12/25 ISID11 ****
LST_FILE-Z_INPUT_USERID
**** END ADD 2014/12/25 ISID11 ****
**** START ADD 2015/02/11 ISID11 ****
LST_FILE-Z_ENAME
**** END ADD 2015/02/11 ISID11 ****
LST_FILE-Z_OUTPUT_USERID
LST_FILE-XDEZP
LST_FILE-DATFM
LST_FILE-Z_REPORT_FORMAT
**** START ADD 2014/12/25 ISID11 ****
LST_FILE-Z_REPORT_LANG
LST_FILE-Z_REPORT_TITLE
**** END ADD 2014/12/25 ISID11 ****
INTO LW_SFILE
SEPARATED BY CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
TRANSFER LW_SFILE TO I_FNAME.
ENDLOOP.
CLOSE DATASET I_FNAME.
ENDIF.

* ローカルファイル
ELSE.
*   ヘッダ取得
CLEAR LST_FILE.
CALL FUNCTION 'ZEG_ZZ_DD04T_GET'
EXPORTING
IMPTSNAME    = 'ZSEGSD0018'
IMPLANGU     = SY-LANGU
IMPORTING
EXPSCRTEXT_L = LW_STR.
SPLIT LW_STR AT CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB
INTO LST_FILE-LNAME
LST_FILE-Z_SI_NO
LST_FILE-Z_SI_DATE
LST_FILE-Z_COMP_NAME
LST_FILE-Z_COMP_ADDRESS1
LST_FILE-Z_COMP_ADDRESS2
LST_FILE-Z_COMP_TEL
LST_FILE-Z_COMP_FAX
LST_FILE-Z_CUST_CNEE
LST_FILE-Z_CUST_NAME_CNEE
LST_FILE-Z_ADDRESS1_CNEE
LST_FILE-Z_ADDRESS2_CNEE
**** START ADD 2014/12/25 ISID11 ****
LST_FILE-Z_ADDRESS3_CNEE
LST_FILE-Z_ADDRESS4_CNEE
**** END ADD 2014/12/25 ISID11 ****
LST_FILE-Z_ATTN_CNEE
LST_FILE-Z_TEL_CNEE
LST_FILE-Z_FAX_CNEE
LST_FILE-Z_CUST_NTFY
LST_FILE-Z_CUST_NAME_NTFY
LST_FILE-Z_ADDRESS1_NTFY
LST_FILE-Z_ADDRESS2_NTFY
**** START ADD 2014/12/25 ISID11 ****
LST_FILE-Z_ADDRESS3_NTFY
LST_FILE-Z_ADDRESS4_NTFY
**** END ADD 2014/12/25 ISID11 ****
LST_FILE-Z_ATTN_NTFY
LST_FILE-Z_TEL_NTFY
LST_FILE-Z_FAX_NTFY
LST_FILE-Z_CARRIER
LST_FILE-Z_BOOKING_NO
LST_FILE-Z_SHIPPED_PER
LST_FILE-Z_VOY_NO
LST_FILE-Z_ETD
LST_FILE-Z_ETA
LST_FILE-Z_SHIP_DATE
LST_FILE-Z_CFS_CUT
LST_FILE-Z_CY_CUT
LST_FILE-Z_CSIZE_20FT_QTY
LST_FILE-Z_CSIZE_40FT_QTY
LST_FILE-Z_CSIZE_OTH_QTY
LST_FILE-Z_PL_RECEIPT
LST_FILE-Z_PT_LOADING
LST_FILE-Z_PT_DISCHARGE
LST_FILE-Z_PL_DELIVERY
LST_FILE-Z_FINAL_DEST
LST_FILE-Z_FREIGHT_TERM
LST_FILE-Z_FREIGHT_ON_BL
**** START DEL 2015/06/01 ISID18 ****
*          LST_FILE-Z_BL_NO
**** END DEL 2015/06/01 ISID18 ****
LST_FILE-Z_BL_DATE
LST_FILE-Z_PL_ISSUE
LST_FILE-Z_KIND_OF_BL
LST_FILE-Z_DG_CODE
LST_FILE-Z_TEMP_ZONES
LST_FILE-Z_SI_REMARKS1
LST_FILE-Z_SI_REMARKS2
LST_FILE-Z_SI_REMARKS3
LST_FILE-Z_SI_REMARKS4
LST_FILE-Z_SI_REMARKS5
LST_FILE-Z_DESC_OF_GOODS
LST_FILE-Z_CONTAINERS
LST_FILE-Z_PACKAGES
LST_FILE-Z_INVOICE_NO
LST_FILE-Z_INVOICE1
LST_FILE-Z_INVOICE2
LST_FILE-Z_INVOICE3
LST_FILE-Z_INVOICE4
LST_FILE-Z_INVOICE5
LST_FILE-Z_INVOICE6
LST_FILE-Z_CASEMARK1
LST_FILE-Z_CASEMARK2
LST_FILE-Z_CASEMARK3
LST_FILE-Z_CASEMARK4
LST_FILE-Z_CASEMARK5
LST_FILE-VSTEL
**** START ADD 2014/12/25 ISID11 ****
LST_FILE-Z_INPUT_USERID
**** END ADD 2014/12/25 ISID11 ****
**** START ADD 2015/02/11 ISID11 ****
LST_FILE-Z_ENAME
**** END ADD 2015/02/11 ISID11 ****
LST_FILE-Z_OUTPUT_USERID
LST_FILE-XDEZP
LST_FILE-DATFM
LST_FILE-Z_REPORT_FORMAT
**** START ADD 2014/12/25 ISID11 ****
LST_FILE-Z_REPORT_LANG
LST_FILE-Z_REPORT_TITLE.
**** END ADD 2014/12/25 ISID11 ****
APPEND LST_FILE TO LTD_FILE.
APPEND LINES OF I_TD_FILE TO LTD_FILE.

LW_FNAME = I_FNAME.
CALL FUNCTION 'GUI_DOWNLOAD'
EXPORTING
FILENAME                = LW_FNAME
FILETYPE                = 'ASC'
WRITE_FIELD_SEPARATOR   = ABAP_TRUE
CODEPAGE                = LW_CODEPAGE
TABLES
DATA_TAB                = LTD_FILE
EXCEPTIONS
FILE_WRITE_ERROR        = 1
NO_BATCH                = 2
GUI_REFUSE_FILETRANSFER = 3
INVALID_TYPE            = 4
NO_AUTHORITY            = 5
UNKNOWN_ERROR           = 6
HEADER_NOT_ALLOWED      = 7
SEPARATOR_NOT_ALLOWED   = 8
FILESIZE_NOT_ALLOWED    = 9
HEADER_TOO_LONG         = 10
DP_ERROR_CREATE         = 11
DP_ERROR_SEND           = 12
DP_ERROR_WRITE          = 13
UNKNOWN_DP_ERROR        = 14
ACCESS_DENIED           = 15
DP_OUT_OF_MEMORY        = 16
DISK_FULL               = 17
DP_TIMEOUT              = 18
FILE_NOT_FOUND          = 19
DATAPROVIDER_EXCEPTION  = 20
CONTROL_FLUSH_ERROR     = 21
OTHERS                  = 22.
IF SY-SUBRC <> 0.
LW_ERRFLG = 'X'.
*     ダウンロードできませんでした
MESSAGE S036(ZMEGSD01) DISPLAY LIKE 'E'.
ENDIF.
ENDIF.

IF LW_ERRFLG IS INITIAL.
*   ダウンロードに成功しました
MESSAGE S037(ZMEGSD01).
ENDIF.

ENDFORM.                    " OUTPUT_FILE
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_RESULT
*&---------------------------------------------------------------------*
*       結果画面出力
*----------------------------------------------------------------------*
*      -->I_TD_MESSAGE
*      -->I_FNAME
*      -->I_COUNT
*      -->I_NORMAL
*      -->I_ERROR
*----------------------------------------------------------------------*
FORM OUTPUT_RESULT  USING  I_TD_MESSAGE TYPE TYP_TD_MESSAGE
I_FNAME      TYPE ANY
I_COUNT      TYPE ANY
I_NORMAL     TYPE ANY
I_ERROR      TYPE ANY.

DATA: LST_MESSAGE TYPE TYP_MESSAGE,
**** START ADD 2015/02/05 ISID11 ****
LW_INFO     TYPE STRING,
**** END ADD 2015/02/05 ISID11 ****
LW_MODE     TYPE CHAR10,
LST_WERKS   LIKE LINE OF S_WERKS,
LST_VSTEL   LIKE LINE OF RD_VSTEL,
LW_WINFO    TYPE STRING,
LW_VINFO    TYPE STRING,
LW_SIGN     TYPE STRING,
LW_OPTION   TYPE STRING,
LW_LOW      TYPE STRING,
LW_HIGH     TYPE STRING,
LW_NO       TYPE I.

IF RB_PRINT = 'X'.
LW_MODE = TEXT-O18.  "Print
ELSEIF RB_REPNT = 'X'.
LW_MODE = TEXT-O19.  "Reprint
ELSE.
LW_MODE = TEXT-O20.  "Download
ENDIF.

* Plant: SI:X OP:XX LO:XX HI:XX
LOOP AT S_WERKS INTO LST_WERKS.
CLEAR: LW_SIGN,
LW_OPTION,
LW_LOW,
LW_HIGH.
LW_NO = LW_NO + 1.
CONCATENATE 'SI:'
LST_WERKS-SIGN
INTO LW_SIGN.
CONCATENATE 'OP:'
LST_WERKS-OPTION
INTO LW_OPTION.
CONCATENATE 'LO:'
LST_WERKS-LOW
INTO LW_LOW.
CONCATENATE 'HI:'
LST_WERKS-HIGH
INTO LW_HIGH.
IF LW_NO = 1.
CONCATENATE LW_SIGN
LW_OPTION
LW_LOW
LW_HIGH
INTO LW_WINFO
SEPARATED BY SPACE.
ELSEIF LW_NO > 1
AND LW_NO <= 5.
CONCATENATE LW_WINFO
'/'
LW_SIGN
LW_OPTION
LW_LOW
LW_HIGH
INTO LW_WINFO
SEPARATED BY SPACE.
ELSE.
CONCATENATE LW_WINFO
'/...'
INTO LW_WINFO
SEPARATED BY SPACE.
ENDIF.
ENDLOOP.
CLEAR LW_NO.

* ShippingPt SI:X OP:XX LO:XX HI:XX
SORT RD_VSTEL BY LOW ASCENDING.
DELETE ADJACENT DUPLICATES FROM RD_VSTEL
COMPARING ALL FIELDS.
LOOP AT RD_VSTEL INTO LST_VSTEL.
CLEAR: LW_SIGN,
LW_OPTION,
LW_LOW,
LW_HIGH.
LW_NO = LW_NO + 1.
CONCATENATE 'SI:'
LST_VSTEL-SIGN
INTO LW_SIGN.
CONCATENATE 'OP:'
LST_VSTEL-OPTION
INTO LW_OPTION.
CONCATENATE 'LO:'
LST_VSTEL-LOW
INTO LW_LOW.
CONCATENATE 'HI:'
LST_VSTEL-HIGH
INTO LW_HIGH.
IF LW_NO = 1.
CONCATENATE LW_SIGN
LW_OPTION
LW_LOW
LW_HIGH
INTO LW_VINFO
SEPARATED BY SPACE.
ELSEIF LW_NO > 1
AND LW_NO <= 5.
CONCATENATE LW_VINFO
'/'
LW_SIGN
LW_OPTION
LW_LOW
LW_HIGH
INTO LW_WINFO
SEPARATED BY SPACE.
ELSE.
CONCATENATE LW_VINFO
'/...'
INTO LW_VINFO
SEPARATED BY SPACE.
ENDIF.
ENDLOOP.

* 結果出力
SKIP 1.
WRITE: /2 TEXT-O07,  "<Parameters>
/4 TEXT-O08, 28 ':', 30 LW_MODE, "Mode
/4 TEXT-O09, 28 ':', 30 TEXT-O21, "Report Type
/4 TEXT-O10, 28 ':', 30 LW_WINFO, "Plant
/4 TEXT-O11, 28 ':', 30 LW_VINFO, "ShippingPt
/4 TEXT-O12, 28 ':', 30 I_FNAME.
"File Name
SKIP 1.
WRITE: /2  TEXT-O13,  "<Result>
/4  TEXT-O14,  28 ':', 30 I_COUNT,
"Number of Transcations
/4  TEXT-O15,  28 ':', 30 I_NORMAL,
"Number of Normal
/4  TEXT-O16,  28 ':', 30 I_ERROR.
"Number of Errors
SKIP 1.
WRITE: /2  TEXT-O17.  "<Message>
LOOP AT I_TD_MESSAGE INTO LST_MESSAGE.

**** START ADD 2015/02/05 ISID11 ****
CLEAR LW_INFO.
CONCATENATE TEXT-M06
LST_MESSAGE-Z_SI_NO
**** START DEL 2015/02/11 ISID11 ****
*                TEXT-M10
*                TEXT-M07
*                LST_MESSAGE-Z_INVOICE_NO
**** END DEL 2015/02/11 ISID11 ****
INTO LW_INFO
SEPARATED BY SPACE.

CONCATENATE LST_MESSAGE-MSG
TEXT-M08
LW_INFO
TEXT-M09
INTO LST_MESSAGE-MSG.
**** END ADD 2015/02/05 ISID11 ****

WRITE: /4  LST_MESSAGE-TYP,
28 LST_MESSAGE-MSGTYP,
48 LST_MESSAGE-MSG.
ENDLOOP.

ENDFORM.                    " OUTPUT_RESULT
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_HEAD
*&---------------------------------------------------------------------*
*       ヘッダ出力
*----------------------------------------------------------------------*
FORM OUTPUT_HEAD.

SET TITLEBAR 'GUI_TITLE_2000'.

WRITE: /2 TEXT-O01, 11 ':', 14 SY-MANDT, "CLIENT
130 TEXT-O04, 135 ':', 137 SY-DATLO,  "Date
/2 TEXT-O02, 11 ':', 14 SY-REPID,  "PROGRAM
130 TEXT-O05, 135 ':', 137 SY-TIMLO,  "Time
/2 TEXT-O03, 11 ':', 14 SY-UNAME,  "USER
56 TEXT-O06.  "Title

ENDFORM.                    " OUTPUT_HEAD
**** START ADD 2015/01/31 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  GET_DEFAULT_PRINTER
*&---------------------------------------------------------------------*
*       Default User
*----------------------------------------------------------------------*
FORM GET_DEFAULT_PRINTER .

DATA:
LST_USER_DEFAULTS  TYPE USDEFAULTS.

CALL FUNCTION 'SUSR_USER_READ'
EXPORTING
USER_NAME            = SY-UNAME
IMPORTING
USER_DEFAULTS        = LST_USER_DEFAULTS
EXCEPTIONS
USER_NAME_NOT_EXISTS = 1
INTERNAL_ERROR       = 2
OTHERS               = 3.

IF SY-SUBRC = 0.

CALL FUNCTION 'CONVERSION_EXIT_SPDEV_OUTPUT'
EXPORTING
INPUT  = LST_USER_DEFAULTS-SPLD
IMPORTING
OUTPUT = P_PTRAY.

ENDIF.

ENDFORM.                    " GET_DEFAULT_PRINTER
**** END ADD 2015/01/31 ISID11 ****
**** START ADD 2015/02/11 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  GET_ENAME
*&---------------------------------------------------------------------*
*       SalesCoordinatorの取得
*----------------------------------------------------------------------*
*      -->I_TD_LIKP_S
*      <--O_TD_VBPA
*----------------------------------------------------------------------*
FORM GET_ENAME USING I_TD_LIKP_S TYPE TYP_TD_LIKP
CHANGING O_TD_VBPA TYPE TYP_TD_VBPA.

DATA:
**** START ADD 2015/02/27 ISID11 ****
LTD_LIPS   TYPE TYP_TD_LIPS,
LST_LIPS   TYPE TYP_LIPS,
LTD_VBPA   TYPE TYP_TD_VBPA,
**** END ADD 2015/02/27 ISID11 ****
LW_PARVW   TYPE VBPA-PARVW,     "取引先機能 営業員
LST_PA0001 TYPE TYP_VBPA,
LTD_PA0001 TYPE TYP_TD_VBPA.

FIELD-SYMBOLS:
<FS_VBPA>  TYPE TYP_VBPA.

**** START ADD 2015/02/27 ISID11 ****
* 出荷伝票明細（LIPS）から、受注伝票番号を取得する
SELECT VBELN     "出荷伝票
VBELV     "開始伝票
POSNV     "開始明細
INTO TABLE LTD_LIPS
FROM LIPS
FOR ALL ENTRIES IN I_TD_LIKP_S
WHERE VBELN = I_TD_LIKP_S-VBELN
AND POSNR = 10.

IF SY-SUBRC <> 0.

RETURN.

ENDIF.
SORT LTD_LIPS BY VBELV ASCENDING     "非表示項目：SONo
POSNV ASCENDING     "非表示項目：SOItem
VBELN ASCENDING.    "出荷伝票
**** END ADD 2015/02/27 ISID11 ****

CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
EXPORTING
INPUT  = 'PE'
IMPORTING
OUTPUT = LW_PARVW.

**** START ADD 2015/02/27 ISID11 ****
SELECT VBELN      "販売管理伝票番号
POSNR      "明細番号 (販売管理伝票)
PERNR      "従業員番号
INTO CORRESPONDING FIELDS OF TABLE O_TD_VBPA
FROM VBPA
FOR ALL ENTRIES IN LTD_LIPS
WHERE VBELN = LTD_LIPS-VBELV
AND POSNR = LTD_LIPS-POSNV
AND PARVW = LW_PARVW.

**** END ADD 2015/02/27 ISID11 ****

SELECT VBELN      "販売管理伝票番号
POSNR      "明細番号 (販売管理伝票)
PERNR      "従業員番号
APPENDING CORRESPONDING FIELDS OF TABLE O_TD_VBPA
FROM VBPA
FOR ALL ENTRIES IN
**** START UPD 2015/02/27 ISID11 ****
*                        I_TD_LIKP_S
LTD_LIPS
**** END UPD 2015/02/27 ISID11 ****
WHERE VBELN =
**** START UPD 2015/02/27 ISID11 ****
*                 I_TD_LIKP_S-VBELN
LTD_LIPS-VBELV
**** END UPD 2015/02/27 ISID11 ****
AND PARVW = LW_PARVW.

**** START UPD 2015/02/27 ISID11 ****
*  IF SY-SUBRC = 0.
IF O_TD_VBPA IS NOT INITIAL.
**** END UPD 2015/02/27 ISID11 ****

SORT O_TD_VBPA BY VBELN ASCENDING
POSNR ASCENDING
PERNR ASCENDING.

DELETE ADJACENT DUPLICATES FROM O_TD_VBPA
COMPARING VBELN
POSNR
PERNR.

**** START ADD 2015/02/27 ISID11 ****
LTD_VBPA = O_TD_VBPA.
SORT LTD_VBPA BY PERNR ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_VBPA
COMPARING PERNR.
**** END ADD 2015/02/27 ISID11 ****

SELECT PERNR    "従業員番号
BEGDA    "開始日付
ENAME    "従業員/応募者氏名
INTO CORRESPONDING FIELDS OF TABLE LTD_PA0001
FROM PA0001
FOR ALL ENTRIES IN
**** START UPD 2015/02/27 ISID11 ****
*                          O_TD_VBPA
LTD_VBPA
**** END UPD 2015/02/27 ISID11 ****
WHERE PERNR =
**** START UPD 2015/02/27 ISID11 ****
*                   O_TD_VBPA-PERNR.
LTD_VBPA-PERNR.
**** END UPD 2015/02/27 ISID11 ****

IF SY-SUBRC = 0.

SORT LTD_PA0001 BY PERNR ASCENDING
BEGDA DESCENDING.

LOOP AT O_TD_VBPA ASSIGNING <FS_VBPA>.

**** START ADD 2015/02/27 ISID11 ****
CLEAR:
LST_LIPS.

READ TABLE LTD_LIPS INTO LST_LIPS
WITH KEY VBELV = <FS_VBPA>-VBELN
POSNV = 10
BINARY SEARCH.
<FS_VBPA>-VBELN = LST_LIPS-VBELN.

CLEAR:
LST_PA0001.
**** END ADD 2015/02/27 ISID11 ****

READ TABLE LTD_PA0001 INTO LST_PA0001
WITH KEY PERNR = <FS_VBPA>-PERNR
BINARY SEARCH.

<FS_VBPA>-ENAME = LST_PA0001-ENAME.

ENDLOOP.

SORT O_TD_VBPA BY VBELN ASCENDING
POSNR ASCENDING
PERNR ASCENDING
BEGDA DESCENDING.

**** START ADD 2015/02/27 ISID11 ****
ELSE.

CLEAR:
O_TD_VBPA.

**** END ADD 2015/02/27 ISID11 ****

ENDIF.

ENDIF.

ENDFORM.                    " GET_ENAME
**** END ADD 2015/02/11 ISID11 ****
**** START ADD 2015/02/25 ISID11 ****
*&---------------------------------------------------------------------*
*&      Form  GET_USR_NAME
*&---------------------------------------------------------------------*
*       データ入力ユーザ取得
*----------------------------------------------------------------------*
*      -->I_TD_ZTEGSDT003
*      <--O_TD_NAME
*----------------------------------------------------------------------*
FORM GET_USR_NAME USING I_TD_ZTEGSDT003 TYPE TYP_TD_ZTEGSDT003
CHANGING O_TD_NAME   TYPE TYP_TD_USRNAME.

DATA:
LTD_ZTEGSDT003 TYPE TYP_TD_ZTEGSDT003.

LTD_ZTEGSDT003 = I_TD_ZTEGSDT003.
SORT LTD_ZTEGSDT003 BY Z_CRE_USERID ASCENDING.
DELETE ADJACENT DUPLICATES FROM LTD_ZTEGSDT003
COMPARING Z_CRE_USERID.

SELECT USR21~BNAME           "ユーザ名
ADRP~NAME_TEXT        "個人の氏名 (省略なし)
INTO TABLE O_TD_NAME
FROM USR21
INNER JOIN ADRP
ON USR21~PERSNUMBER = ADRP~PERSNUMBER
AND USR21~MANDT = ADRP~CLIENT
FOR ALL ENTRIES IN LTD_ZTEGSDT003
WHERE BNAME = LTD_ZTEGSDT003-Z_CRE_USERID.

IF SY-SUBRC = 0.

SORT O_TD_NAME BY BNAME ASCENDING.
DELETE ADJACENT DUPLICATES FROM O_TD_NAME
COMPARING BNAME.

ENDIF.

ENDFORM.                    " GET_USR_NAME
**** END ADD 2015/02/25 ISID11 ****
