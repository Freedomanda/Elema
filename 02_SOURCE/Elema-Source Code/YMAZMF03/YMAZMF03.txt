***---------------------------------------------------------------------
***          (c)Copyright 1998 OptiSystem Solution                   ***
***---------------------------------------------------------------------
*-------------------------------------------------------------------
***INCLUDE ZSGRMIF
*-------------------------------------------------------------------
*&---------------------------------------------------------------------*
*&      Form  PR_TREE
*&---------------------------------------------------------------------*
form if_tree_impex using pri.
*** import/export information about tree
tables: yTR_qt_prm.
***** export *****
IF PRI = 'x'.
*    export dbname           from sts-dbsrv
*           st_curr_interval-rdate   from sts-dira
*           ST_CURR_INTERVAL-RTIME   FROM sts-TIRA
*           param_tbl        from tb_prm
*       TO MEMORY ID 'ZC'.
*    EXIT.
***** import *****
ELSEIF PRI = 'n' OR PRI = 'a'.
*    refresh tb_prm.
*    submit (l_prog_tree) and return.   "zeshowtr
*    import param_tbl to tb_prm from memory id 'ZI'.
***** import *****
*  elseif pri = 'd'.
*     refresh tb_prm.
*     submit (l_prog_dbase) and return.  "zeshowtr
*     import tb_prm from memory id 'ZS'.
***** all corr
ELSEIF PRI = 'l'.
*    READ TABLE TB_IP WITH KEY dop-sg_ac = 'X'.
*    IF SY-SUBRC <> 0.
*       READ TABLE TB_IP INDEX 1.
*       IF SY-SUBRC <> 0.  EXIT.  ENDIF.
*       TB_IP-dop-sg_ac = 'X'.
*       MODIFY TB_IP INDEX 1.
*    ENDIF.
*    st_ipa = tb_ip.  st_ipa-ro = 2.
*    refresh : tb_prm, tb_ip.
*
*    perform transmit_instance_data in program (l_prog_tree)
*            using st_ipa-snam sts-dbsrv.
*    import param_tbl to tb_prm from memory id 'ZI'.
***** ira & 1
ELSEIF PRI = 'i' OR PRI = '1'.
PERFORM DB_LOAD_PRM.
*    refresh tb_prm.
****
*    import dbname            to sts-dbsrv
*           st_curr_interval-rdate    to sts-dira
*           ST_CURR_INTERVAL-RTIME    TO sts-TIRA
*           st_curr_interval-no_cycle to sts-iir
*           param_tbl         to tb_prm
*       FROM MEMORY ID 'ZC'.
ENDIF.
*****
*  if pri = '1'.   delete tb_prm index 1.  endif.
*  if pri <> 'a'.  refresh tb_ip.   endif.
*  if pri = 'l'.
*    tb_ip = st_ipa.   append tb_ip.
*    st_ipa-ro = 0.  st_ipa-rotxt = ' '.
*  endif.
*******
loop at tb_prm.
*     check tb_prm-ddtxt <> ' '.
*    if sts-reg = 'ca' and
*       tb_prm-yop_dic_tb = 'YTR_DISC' and
*       tb_prm-yop_dic_fl <> 'D_SERV_INT'.
*      CONTINUE.
*    ENDIF.
*    tb_ip-dop-sg_ac = 'X'.
*    tb_ip-pnam = tb_prm-yop_dic_fl.
*    tb_ip-ptbl = tb_prm-yop_dic_tb.
*    tb_ip-pfld = tb_prm-yop_dic_fl.
**       tb_ip-ptxt = tb_prm-yop_dic_fl.
*    tb_ip-ptxt = tb_prm-ddtxt.         "!!!!!!!!!!!!!!!!!!!!
*    tb_ip-snam = tb_prm-yop_msname.
*    tb_ip-slvl = tb_prm-yop_lvl.
*    tb_ip-sfld = tb_prm-yop_srv_fl.
*    tb_ip-sval = tb_prm-yop_msname.
*    tb_ip-cnam = tb_prm-yop_clt_fl.
*    tb_ip-cfld = tb_prm-yop_clt_fl.
*    tb_ip-cval = tb_prm-yop_clt_sk.
*    tb_ip-unit = tb_prm-yop_par_un.
*    tb_ip-pscale = 0.
*    tb_ip-ro = 0.                      "!!!!!!!!!!!!!!!!!!!!
*    tb_ip-rotxt = ' '.                 "!!!!!!!!!!!!!!!!!!!!
****
*    if pri = 'l' and  tb_ip = st_ipa.  continue.   endif.
****
*    if pri = 'a'.
*      collect tb_ip.
*    else.
*      append tb_ip.
*    ENDIF.
* append tb_ip.  "!!!!!!!!!!!!!!!
* append tb_ip.  "!!!!!!!!!!!!!!!
* append tb_ip.  "!!!!!!!!!!!!!!!
***
ENDLOOP.
***
IF PRI = 'i'.
read table tb_ip index 1.
TB_IP-CR-RO = 2.
modify tb_ip index 1.
ENDIF.
***
ENDFORM.                               " PR_TREE
*&---------------------------------------------------------------------*
*&      Form  FORM_CORR_IRA
*&---------------------------------------------------------------------*
FORM IF_FORM_CORR_IRA.
*** interface for main screen
DATA: KKPP LIKE SY-TABIX.
*****
sts-prs = 'x'.
perform if_tree_impex using 'i'.
*****
describe table tb_prm lines kkpp.
IF KKPP >= C_MP_COR.
CALL FUNCTION 'Z_ZSGR_POPUP_MESS'
EXPORTING
CODM   = 'ss'
HEADLINE = 'Manager'
EXCEPTIONS
OTHERS = 1.
EXIT.
ENDIF.
*****
perform pr_int_ira.
if sts-prs = 'e'. exit. endif.
****
sts-reg = 'ci'.
perform al_execution.
perform if_tree_impex using 'x'.
ENDFORM.                               " FORM_CORR_IRA
*&---------------------------------------------------------------------*
*&      Form  DB_LOAD_PRM
*&---------------------------------------------------------------------*
FORM DB_LOAD_PRM.
****
DEF_CR TB_PRM.
SELECT P~PRM_NAME    P~PROC_SIGN  P~TBL_NAME   P~FLD_NAME
P~UNIT   P~POS   T~SHORT
*  into (tb_ip-prm-namp,   tb_ip-prm-sg_pr,   tb_ip-prm-tbl,
*       tb_ip-prm-fld,    tb_ip-prm-unit,   tb_ip-prm-txt)
INTO TB_PRM
FROM YMA_ZSPRM AS P INNER JOIN YMA_ZSPRMT AS T ON
( P~PRM_NAME = T~PRM_NAME )
WHERE T~LANGU = SY-LANGU
ORDER BY P~POS.
****
APPEND TB_PRM.
ENDSELECT.
*******
ENDFORM.                    " DB_LOAD_PRM
*&---------------------------------------------------------------------*
*&      Form  OBJ_S_TYPE
*&---------------------------------------------------------------------*
FORM OBJ_S_TYPE.
*** read data about cpu.
ASSIGN COMPONENT TB_IP-PRM-FLD OF STRUCTURE YMA_MAIN_D TO <FPAR>.
**** 1 day ****
IF G_RDAT1 = G_RDAT2.
SELECT * FROM YMA_MAIN_D
WHERE APSERVER = TB_IP-DOP-SRV AND
rdate  = g_rdat1    and
NO_CYCLE BETWEEN STS-IFR AND STS-ITO.
TB_F-DAT = YMA_MAIN_D-RDATE + G_RDEL.
TB_F-NCY = YMA_MAIN_D-NO_CYCLE.
TB_F-TIM = YMA_MAIN_D-RTIME.
g_rstr = <fpar>.  translate g_rstr using ',.'. tb_f-p1 = g_rstr.
append tb_f.
ENDSELECT.
EXIT.
ENDIF.
******
SELECT * FROM YMA_MAIN_D
WHERE APSERVER = TB_IP-DOP-SRV AND
RDATE BETWEEN G_RDAT1 AND G_RDAT2.
CHECK YMA_MAIN_D-RDATE > G_RDAT1 OR
YMA_MAIN_D-RDATE = G_RDAT1 AND
YMA_MAIN_D-RTIME >= G_RTIM1.
CHECK YMA_MAIN_D-RDATE < G_RDAT2 OR
YMA_MAIN_D-RDATE = G_RDAT2 AND
YMA_MAIN_D-RTIME <= G_RTIM2.
G_RDAT = YMA_MAIN_D-RDATE.
TB_F-DAT = G_RDAT + G_RDEL.
TB_F-NCY = YMA_MAIN_D-NO_CYCLE.
TB_F-TIM = YMA_MAIN_D-RTIME.
g_rstr = <fpar>.  translate g_rstr using ',.'. tb_f-p1 = g_rstr.
append tb_f.
ENDSELECT.
*******
ENDFORM.                    " OBJ_S_TYPE
*&---------------------------------------------------------------------*
*&      Form  OBJ_A_TYPE
*&---------------------------------------------------------------------*
FORM OBJ_A_TYPE.
*** read data
****
ASSIGN COMPONENT TB_IP-PRM-FLD OF STRUCTURE YMA_LOCK TO <FPAR>.
**** 1 day ****
if g_rdat1 = g_rdat2.  " and st_ss-reg = 'ci'.
SELECT * FROM YMA_LOCK
WHERE NO_LOCK = 1 AND
rdate  = g_rdat1    and
NO_CYCLE BETWEEN STS-IFR AND STS-ITO.
TB_F-DAT = YMA_LOCK-RDATE + G_RDEL.
TB_F-NCY = YMA_LOCK-NO_CYCLE.
TB_F-TIM = YMA_LOCK-RTIME.
g_rstr = <fpar>.
TRANSLATE G_RSTR USING ',.'. TB_F-P1 = G_RSTR.
append tb_f.
ENDSELECT.
EXIT.
ENDIF.
*******
ENDFORM.                    " OBJ_A_TYPE
