*&---------------------------------------------------------------------*
*& Report  YTEST_ISID18
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  YTEST_ISID18.


*    LOOP AT I_TAN_STOCK INTO ST_CUR_STOCK
*            WHERE MATNR = ST_CUR_OUTSTOCK-MATNR AND
*                  WERKS = ST_CUR_OUTSTOCK-WERKS AND
***** START UPD 2015/03/10 ISID12 ****
*                  LGORT = ST_CUR_OUTSTOCK-LGORT AND
***** END UPD 2015/03/10 ISID12 ****
*                   ZZNO = ST_CUR_OUTSTOCK-EBELN AND
*                  ZZPOS = ST_CUR_OUTSTOCK-EBELP AND
*                  MENGE > 0.
*
*    ENDLOOP.


*    data: lw_posnr type POSNR,
*          lw_string type string,
*          lw_string_2 type string.
*
*    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*      EXPORTING
*        INPUT         =  '10'
*     IMPORTING
*       OUTPUT        = lw_string.
*
*
*    lw_posnr = 10.
*
*
*
*
*
*
*
*
*
*    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
*      EXPORTING
*        INPUT         = lw_string
*     IMPORTING
*       OUTPUT        = lw_string.
*              .
*
*
*    if sy-subrc = 0.
*      write lw_posnr.
*    endif.
*              .
*CONSTANTS:
*  CNS_BAPI_CURRENCY_EXTERNAL
*             TYPE TFDIR-FUNCNAME VALUE 'BAPI_CURRENCY_CONV_TO_EXTERNAL'.
*
*data ZNEN002W type ZNEN002.
*ZNEN002W-MATNR = 'ALA-ITEM-09'.
*
*data   ITANKA_D     TYPE ZNEN002-ITANKA.
*
*data:A1F_WG_AMT   TYPE BAPICURR-BAPICURR. "通貨換算後の金額
*
*      CALL FUNCTION   CNS_BAPI_CURRENCY_EXTERNAL
*        EXPORTING
*          CURRENCY        = 'jpy'
*          AMOUNT_INTERNAL = ZNEN002W-ITANKA
*        IMPORTING
*          AMOUNT_EXTERNAL = A1F_WG_AMT.
*
*      ITANKA_D = A1F_WG_AMT.
*
*      if sy-subrc = 0.
*        write 'ok'.
*
*      endif.


*DATA:
**-- 在庫内訳内部テーブル
*  ST_ZNEN002 LIKE ZNEN002,
*  I_ZNEN002  LIKE TABLE OF ST_ZNEN002.
*
*DO 3000 TIMES.
*
*  ST_ZNEN002-MATNR = 'TSE392C 100G'.
*
*  ST_ZNEN002-WERKS = 'P310'.
*  ST_ZNEN002-ZANDT = '2015/10/31'.
*
*  ST_ZNEN002-ZCOUNT = ST_ZNEN002-ZCOUNT + 1.
*
*  if ST_ZNEN002-ZCOUNT = 3000
*    or ST_ZNEN002-ZCOUNT = 2000.
*    ST_ZNEN002-ZCOUNT = 1000.
*  endif.
*
*  APPEND ST_ZNEN002 TO I_ZNEN002.
*
*
*ENDDO.
*
*BREAK-POINT.
*
*
*  INSERT ZNEN002
*         FROM TABLE I_ZNEN002
*         ACCEPTING DUPLICATE KEYS .
*
*  IF SY-SUBRC = 0.
*    WRITE 'OK'.
*  ENDIF.


***** 2016/5/10 ISID18 INS START *****
*TYPES:
*  BEGIN OF TY_LOW,
*    LOW TYPE ZTEGZZM999-LOW,
*  END OF TY_LOW.
*
*DATA:
*  LTB_LOW TYPE TABLE OF TY_LOW,
*  LST_LOW TYPE TY_LOW,
*  LRD_KTOKD TYPE RANGE OF KNA1-KTOKD,
*  LRH_KTOKD LIKE LINE OF LRD_KTOKD.
*
*  REFRESH:
*    LTB_LOW,
*    LRD_KTOKD.
**  変数テーブルから除外勘定グループ取得
*  SELECT
*    LOW
*    FROM ZTEGZZM999
*    INTO TABLE LTB_LOW
*    WHERE NAME = 'ACCOUNT_GROUP'.
*
**  除外勘定グループを除外する
*  LOOP AT LTB_LOW INTO LST_LOW.
*    LRH_KTOKD-SIGN = 'I'.
*    LRH_KTOKD-OPTION = 'EQ'.
*    LRH_KTOKD-LOW = LST_LOW-LOW.
*    APPEND LRH_KTOKD TO LRD_KTOKD.
*  ENDLOOP.
*  CHECK KNA1-KTOKD IN LRD_KTOKD.
****** 2016/5/10 ISID18 INS END *****
**タイプ定義 条件 (明細)
*TYPES:
*  BEGIN OF TY_KONP,
*    KBETR TYPE KONP-KBETR,
*    KONWA TYPE KONP-KONWA,
*    KPEIN TYPE KONP-KPEIN,
*    KMEIN TYPE KONP-KMEIN,
*  END OF TY_KONP.
*
*  DATA:
*    LST_KONP TYPE TY_KONP.
*
*  CLEAR:
*  LST_KONP.
**仕入価格情報取得
**SELECT
**  KONP~KBETR   "金額/率
**  KONP~KONWA  "通貨
**  KONP~KPEIN    "価格条件単位
**  KONP~KMEIN    "数量単位
**  UP TO 1 ROWS
**  INTO LST_KONP
**  FROM KONP
**  INNER JOIN A017
**  ON KONP~KNUMH = A017~KNUMH  "条件レコードNo.
**  WHERE A017~KSCHL = 'ZPB1'  "条件タイプ
**  AND A017~LIFNR = VENDOR  "仕入先
**  AND A017~WERKS = MAST-WERKS  "プラント
**  AND A017~DATBI  >= SY-DATUM "有効終了日
**  AND A017~DATAB <= SY-DATUM. "有効開始日
**ENDSELECT.
*
*  DATA:
*        LW_KSCHL TYPE A017-KSCHL.
*
*SELECT
*  KSCHL
*  INTO LW_KSCHL
*  FROM A017
*  WHERE KSCHL = 'ZPB1'  "条件タイプ
*  AND LIFNR = VENDOR  "仕入先
*  AND WERKS = MAST-WERKS  "プラント
*  AND DATBI  >= SY-DATUM "有効終了日
*  AND DATAB <= SY-DATUM. "有効開始日
*ENDSELECT.
*
*
*
*
**仕入単位
*VENDOR_TANI = LST_KONP-KMEIN.
**仕入単価
*IF LST_KONP-KPEIN = 0.
*  VENDOR_TANKA = LST_KONP-KBETR.
*ELSE.
*  VENDOR_TANKA = LST_KONP-KBETR / LST_KONP-KPEIN.
*ENDIF.
**仕入通貨
*VENDOR_TSUKA = LST_KONP-KONWA.
*data:
*      STKO type STKO,
*      MAST TYPE MAST,
*      STAS type STAS,
*      STPO type STPO,
*      T001W type T001W,
*      T001K type T001K,
*      MARA type MARA,
*      KNMT type KNMT,
*      TVKO type TVKO,
*      KNVV type KNVV.
*
*
*
*
*
*select STKO~STLAL STKO~STLNR STKO~STLTY MAST~MATNR MAST~STLAL MAST~STLAN MAST~STLNR MAST~WERKS STAS~STLAL STAS~STLKN STAS~STLNR
*       STAS~STLTY STPO~IDNRK STPO~MEINS STPO~MENGE STPO~STLKN STPO~STLNR STPO~STLTY T001W~BWKEY T001W~WERKS T001K~BUKRS T001K~BWKEY
*       MARA~MATNR MARA~MTART KNMT~KDMAT KNMT~KUNNR KNMT~MATNR KNMT~VKORG TVKO~BUKRS TVKO~VKORG KNVV~KUNNR KNVV~VKGRP KNVV~VKORG
*into (STKO-STLAL , STKO-STLNR , STKO-STLTY , MAST-MATNR , MAST-STLAL , MAST-STLAN , MAST-STLNR , MAST-WERKS , STAS-STLAL
*     , STAS-STLKN , STAS-STLNR , STAS-STLTY , STPO-IDNRK , STPO-MEINS , STPO-MENGE , STPO-STLKN , STPO-STLNR , STPO-STLTY
*     , T001W-BWKEY , T001W-WERKS , T001K-BUKRS , T001K-BWKEY , MARA-MATNR , MARA-MTART , KNMT-KDMAT , KNMT-KUNNR , KNMT-MATNR
*     , KNMT-VKORG , TVKO-BUKRS , TVKO-VKORG , KNVV-KUNNR , KNVV-VKGRP , KNVV-VKORG )
*from ( STKO
*       inner join MAST
*       on MAST~STLAL = STKO~STLAL
*       and MAST~STLNR = STKO~STLNR
*       inner join STAS
*       on STAS~STLAL = STKO~STLAL
*       and STAS~STLNR = STKO~STLNR
*       and STAS~STLTY = STKO~STLTY
*       inner join STPO
*       on STPO~STLKN = STAS~STLKN
*       and STPO~STLNR = STAS~STLNR
*       and STPO~STLTY = STAS~STLTY
*       inner join T001W
*       on T001W~WERKS = MAST~WERKS
*       inner join T001K
*       on T001K~BWKEY = T001W~BWKEY
*       inner join MARA
*       on MARA~MATNR = STPO~IDNRK
*       left outer join KNMT
*       on KNMT~MATNR = STPO~IDNRK
*       inner join TVKO
*       on TVKO~VKORG = KNMT~VKORG
*       and TVKO~BUKRS = T001K~BUKRS
*       inner join KNVV
*       on KNVV~KUNNR = KNMT~KUNNR
*       and KNVV~VKORG = KNMT~VKORG )
*       where STKO~STLAL in SP$00001
*         and MAST~WERKS in S_WERKS
*         and MAST~MATNR in SP$00002
*         and MAST~STLAN in SP$00004
*         and STPO~IDNRK in SP$00006
*         and T001K~BUKRS in S_BUKRS
*         and KNVV~VKGRP in SP$00007.

WRITE SY-LANGU.

data: lst_BAPISDTEXT type BAPISDTEXT.

lst_BAPISDTEXT-LANGU = 'ZH'.

write lst_BAPISDTEXT-LANGU.
