************************************************************************
* [プログラム名]
*   ZYTD5500   品目マスタ品目階層変更
*
* [処理概要]
*
*
* [改定履歴]
*　YYYY/MM/DD  Programar         Description
*  2012/08/27  ISID              ES-UP
************************************************************************
Report ZYTD5500 Message-ID Y1 .

Tables : MARA .

Types : Begin Of T_IN ,
MATNR Like MARA-MATNR ,
PRDHA Like MARA-PRDHA ,
End Of T_IN ,
Begin Of T_DP ,
MATNR Like MARA-MATNR ,
MAE_PRDHA Like MARA-PRDHA ,
ATO_PRDHA Like MARA-PRDHA ,
RESULT(30) Type C ,
End Of T_DP .

Data : IN_WRK Type T_IN ,
IN_TAB Type Table Of T_IN ,
R3_WRK Type T_IN ,
R3_TAB Type Table Of T_IN ,
DP_WRK Type T_DP ,
DP_TAB Type Table Of T_DP ,
BDC_TAB Type Table Of BDCDATA With Header Line ,
BDC_MSG Type Table Of BDCMSGCOLL With Header Line .


Data : W_FIRST(1) Type C ,
W_MODE(1) Type C Value 'N' .
* Mod ES-UP 2012/08/27 -->
*  Constants : W_TAB Type X Value '09' .
constants: W_TAB TYPE STRING VALUE CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
* Mod ES-UP 2012/08/27 <--

* Add ES-UP 2012/08/27 -->
DATA L_CODEPAGE TYPE ABAP_ENCODING.
CONSTANTS CNS_SJIS TYPE STRING VALUE `shift_jis`.
* Add ES-UP 2012/08/27 <--


Parameters : IN_FILE(128) Type C ,
P_TEST As CheckBox .

Start-Of-Selection .

Perform Read_File .
Perform Data_Get .
Perform BDC_GoGo .
Perform Write_List .

Form Read_File .
* Mod ES-UP 2012/10/30 -->
*  Data : IN_LINE(30) Type C .
Data IN_LINE Type string.
* Mod ES-UP 2012/10/30 <--
Move 'X' To W_FIRST .
* Mod ES-UP 2012/08/27 -->
*  Open DataSet IN_FILE For Input In Text Mode .
L_CODEPAGE = CL_ABAP_CODEPAGE=>SAP_CODEPAGE( CNS_SJIS ).
OPEN DATASET IN_FILE For Input
IN LEGACY TEXT MODE CODE PAGE L_CODEPAGE
IGNORING CONVERSION ERRORS.
* Mod ES-UP 2012/08/27 <--
If SY-SUBRC NE  0 .
Message I209 .
Stop .
EndIf .
Do .
Read DataSet IN_FILE Into IN_LINE  .
If SY-SUBRC NE 0 .
Exit .
EndIf .
Split IN_LINE
At  W_TAB
Into IN_WRK-MATNR
IN_WRK-PRDHA
.
Append IN_WRK To IN_TAB .
Clear : IN_WRK , W_FIRST .
EndDo .
If W_FIRST EQ  'X' .
Message I204 .
Stop .
EndIf .
Close DataSet IN_FILE .
EndForm .

Form Data_Get .
Select MATNR PRDHA
From MARA
Into Corresponding Fields Of Table R3_TAB
For All Entries IN IN_TAB
Where MATNR EQ IN_TAB-MATNR
.
If SY-SUBRC NE 0 .
Message I008 .
Stop .
EndIf .
EndForm .

Form BDC_GoGo .
Data : W_MEISAI(20) Type C  .
Sort : IN_TAB By MATNR ,
R3_TAB By MATNR .
Loop At IN_TAB Into IN_WRK .
Move : IN_WRK-MATNR To DP_WRK-MATNR .
Read Table R3_TAB Into R3_WRK With Key MATNR = IN_WRK-MATNR .
If SY-SUBRC NE 0 .
* Ｒ/３に処理対象データが存在しない場合
Move '対象データがありません' To DP_WRK-RESULT .
Else .
* Ｒ/３に処理対象データが存在した場合
Move : R3_WRK-PRDHA To DP_WRK-MAE_PRDHA ,
IN_WRK-PRDHA To DP_WRK-ATO_PRDHA .
Concatenate :DP_WRK-MAE_PRDHA
'→'
DP_WRK-ATO_PRDHA
Into  DP_WRK-RESULT
.
Perform Set_BDC Using : 'SAPLMGMM' '0060' 'X' ,
'BDC_OKCODE' '/00' '' ,
'RMMG1-MATNR' IN_WRK-MATNR '' ,
'SAPLMGMM' '0070' 'X' ,
'BDC_CURSOR' 'MSICHTAUSW-DYTXT(01)' '' ,
'BDC_OKCODE' '=ENTR' '' ,
'MSICHTAUSW-KZSEL(01)' 'X' '' ,
'SAPLMGMM' '4004' 'X' ,
'BDC_OKCODE' '=BU' '' ,
'BDC_CURSOR' 'MARA-PRDHA' '' ,
'MARA-PRDHA' IN_WRK-PRDHA '' .
If P_TEST NE 'X' .
Perform Call_Tran Using 'MM02' .
EndIf .
EndIf .
Append DP_WRK To DP_TAB .
Clear :  DP_WRK , R3_WRK , IN_WRK , W_MEISAI .
EndLoop .
EndForm .

Form Write_List .
Loop At DP_TAB Into DP_WRK .
Write At : /01 DP_WRK-MATNR ,
26 DP_WRK-RESULT .
Clear : DP_WRK .
EndLoop .
EndForm .




Form Set_BDC Using P_DAT P_VAL P_FLG .
Move : P_FLG To BDC_TAB-DYNBEGIN .
If P_FLG EQ 'X' .
Move : P_DAT To BDC_TAB-PROGRAM ,
P_VAL To BDC_TAB-DYNPRO .
Else .
Move : P_DAT To BDC_TAB-FNAM ,
P_VAL To BDC_TAB-FVAL .
EndIf .
Append : BDC_TAB .
Clear : BDC_TAB .
EndForm .

Form Call_Tran Using P_TRCD .
Data : W_MSG Like MESSAGE ,
W_MSGNO Like SY-MSGNO .

Call Transaction P_TRCD
Using   BDC_TAB
Mode    W_MODE
Messages Into    BDC_MSG

.
Loop At BDC_MSG .
Move : BDC_MSG-MSGNR To W_MSGNO .
CALL FUNCTION 'WRITE_MESSAGE'
EXPORTING
MSGID         = BDC_MSG-MSGID
MSGNO         = W_MSGNO
MSGTY         = BDC_MSG-MSGTYP
MSGV1         = BDC_MSG-MSGV1
MSGV2         = BDC_MSG-MSGV2
MSGV3         = BDC_MSG-MSGV3
MSGV4         = BDC_MSG-MSGV4
*       MSGV5         = BDC_MSG-MSGV5
IMPORTING
*       ERROR         =
MESSG         = W_MSG
*       MSGLN         =
.
Message ID BDC_MSG-MSGID
*          Type BDC_MSG-MSGTYP
Type 'I'
Number W_MSGNO
WITH BDC_MSG-MSGV1
BDC_MSG-MSGV2
BDC_MSG-MSGV3
BDC_MSG-MSGV4
.
*    Write W_MSG .
EndLoop .

Refresh : BDC_TAB , BDC_MSG .

EndForm .
