REPORT YTEST_XU MESSAGE-ID Z1.
*&---------------------------------------------------------------------*
*&  REPORT ZJPV0056                                                    *
*&         売上原価データ抽出                                          *
*&---------------------------------------------------------------------*
*&  機能     : CO伝票より選択画面登録日で対象番号を取得する
*&             取得した対象番号より受注伝票明細を検索して明細に
*&             属するすべての対象番号を取得する。
*&             上記対象番号と選択画面の原価要素をもとに
*&             COSP,COSS,COSB,EBEWより
*&             受注伝票番号・受注伝票明細・会計年度・会計月単位の
*&             Rev,COS,SAA,WIP,AUCを集計する
*&  作成日   : 2004/03/18
*&  作成者   : NDSC
*&  変更履歴 :
*&---------------------------------------------------------------------*

TABLES:COBK.

TYPES:BEGIN OF TP_COBKEP,
OBJNR LIKE COEP-OBJNR, "対象番号
WRTTP LIKE COEP-WRTTP, "値タイプ
END   OF TP_COBKEP.
DATA:T_COBKEP TYPE TABLE OF TP_COBKEP,
H_COBKEP TYPE TP_COBKEP.
*指図番号
TYPES:BEGIN OF TP_AUFNR,
AUFNR LIKE AUFK-AUFNR, "指図番号
END   OF TP_AUFNR.
DATA:T_AUFNR TYPE TABLE OF TP_AUFNR,
H_AUFNR TYPE TP_AUFNR.
*受注番号
TYPES:BEGIN OF TP_VBELN,
VBELN LIKE VBAP-VBELN, "販売伝票
POSNR LIKE VBAP-POSNR, "販売伝票明細
END   OF TP_VBELN.
DATA:T_VBELN TYPE TABLE OF TP_VBELN,
H_VBELN TYPE TP_VBELN.
*対象番号
TYPES:BEGIN OF TP_OBJNR,
OBJNR LIKE COEP-OBJNR, "対象番号
END   OF TP_OBJNR.
DATA:T_OBJNR TYPE TABLE OF TP_OBJNR,
H_OBJNR TYPE TP_OBJNR.
*受注伝票番号
TYPES:BEGIN OF TP_KDAUF,
AUFNR LIKE AUFK-AUFNR, "指図番号
KDAUF LIKE AUFK-KDAUF, "受注伝票番号
KDPOS LIKE AUFK-KDPOS, "受注明細番号
END   OF TP_KDAUF.
DATA:T_KDAUF TYPE TABLE OF TP_KDAUF,
H_KDAUF TYPE TP_KDAUF.
*指図マスタデータ
TYPES:BEGIN OF TP_AUFK,
AUFNR LIKE AUFK-AUFNR, "指図番号
OBJNR LIKE AUFK-OBJNR, "対象番号
KDAUF LIKE AUFK-KDAUF, "受注伝票番号
KDPOS LIKE AUFK-KDPOS, "受注明細番号
END   OF TP_AUFK.
DATA:T_AUFK TYPE TABLE OF TP_AUFK,
H_AUFK TYPE TP_AUFK.
*該当プロジェクトの現在番号
TYPES:BEGIN OF TP_PSPHI,
PSPNR LIKE PRPS-PSPNR, "WBS要素
PSPHI LIKE PRPS-PSPHI, "該当プロジェクトの現在番号
END   OF TP_PSPHI.
DATA:T_PSPHI TYPE TABLE OF TP_PSPHI,
H_PSPHI TYPE TP_PSPHI.
*WBS(作業詳細項目)要素マスタデータ
TYPES:BEGIN OF TP_PRPS,
PSPNR LIKE PRPS-PSPNR, "WBS 要素
OBJNR LIKE PRPS-OBJNR, "対象番号
PSPHI LIKE PRPS-PSPHI, "該当プロジェクトの現在番号
STUFE LIKE PRPS-STUFE, "プロジェクト階層レベル
END   OF TP_PRPS.
DATA:T_PRPS TYPE TABLE OF TP_PRPS,
A_PRPS TYPE TABLE OF TP_PRPS,
H_PRPS TYPE TP_PRPS.
*販売伝票: 明細データ
TYPES:BEGIN OF TP_VBAP,
VBELN LIKE VBAP-VBELN, "販売伝票
POSNR LIKE VBAP-POSNR, "販売伝票明細
PS_PSP_PNR LIKE VBAP-PS_PSP_PNR, "WBS 要素
END   OF TP_VBAP.
DATA:T_VBAP TYPE TABLE OF TP_VBAP,
H_VBAP TYPE TP_VBAP.
*CO
TYPES:BEGIN OF TP_CO,
OBJNR LIKE PRPS-OBJNR, "対象番号
VBELN LIKE VBAP-VBELN, "販売伝票
POSNR LIKE VBAP-POSNR, "販売伝票明細
END   OF TP_CO.
DATA:T_CO TYPE TABLE OF TP_CO,
H_CO TYPE TP_CO.
DATA:HT_CO TYPE HASHED TABLE OF TP_CO
WITH UNIQUE KEY OBJNR.
*COSB
TYPES:BEGIN OF TP_COSB,
LEDNR LIKE COSB-LEDNR,
OBJNR LIKE COSB-OBJNR,
GJAHR LIKE COSB-GJAHR,
WRTTP LIKE COSB-WRTTP,
VERSN LIKE COSB-VERSN,
ABKAT LIKE COSB-ABKAT,
KSTAR LIKE COSB-KSTAR,
HRKFT LIKE COSB-HRKFT,
VRGNG LIKE COSB-VRGNG,
PAROB LIKE COSB-PAROB,
BEKNZ LIKE COSB-BEKNZ,
AWKUS LIKE COSB-AWKUS,
TWAER LIKE COSB-TWAER,
PERBL LIKE COSB-PERBL,

WKG001 LIKE COSB-WKG001,
WKG002 LIKE COSB-WKG002,
WKG003 LIKE COSB-WKG003,
WKG004 LIKE COSB-WKG004,
WKG005 LIKE COSB-WKG005,
WKG006 LIKE COSB-WKG006,
WKG007 LIKE COSB-WKG007,
WKG008 LIKE COSB-WKG008,
WKG009 LIKE COSB-WKG009,
WKG010 LIKE COSB-WKG010,
WKG011 LIKE COSB-WKG011,
WKG012 LIKE COSB-WKG012,
WKG013 LIKE COSB-WKG013,
WKG014 LIKE COSB-WKG014,
WKG015 LIKE COSB-WKG015,
WKG016 LIKE COSB-WKG016,
*関連情報
*
VBELN LIKE VBAP-VBELN, "販売伝票
POSNR LIKE VBAP-POSNR, "販売伝票明細
*
END   OF TP_COSB.
DATA:T_COSB TYPE TABLE OF TP_COSB,
H_COSB TYPE TP_COSB.
*COSP
TYPES:BEGIN OF TP_COSP,
LEDNR LIKE COSP-LEDNR,
OBJNR LIKE COSP-OBJNR,
GJAHR LIKE COSP-GJAHR,
WRTTP LIKE COSP-WRTTP,
VERSN LIKE COSP-VERSN,
KSTAR LIKE COSP-KSTAR,
HRKFT LIKE COSP-HRKFT,
VRGNG LIKE COSP-VRGNG,
VBUND LIKE COSP-VBUND,
PARGB LIKE COSP-PARGB,
BEKNZ LIKE COSP-BEKNZ,
TWAER LIKE COSP-TWAER,
PERBL LIKE COSP-PERBL,

WKG001 LIKE COSP-WKG001,
WKG002 LIKE COSP-WKG002,
WKG003 LIKE COSP-WKG003,
WKG004 LIKE COSP-WKG004,
WKG005 LIKE COSP-WKG005,
WKG006 LIKE COSP-WKG006,
WKG007 LIKE COSP-WKG007,
WKG008 LIKE COSP-WKG008,
WKG009 LIKE COSP-WKG009,
WKG010 LIKE COSP-WKG010,
WKG011 LIKE COSP-WKG011,
WKG012 LIKE COSP-WKG012,
WKG013 LIKE COSP-WKG013,
WKG014 LIKE COSP-WKG014,
WKG015 LIKE COSP-WKG015,
WKG016 LIKE COSP-WKG016,
*関連情報
*
VBELN LIKE VBAP-VBELN, "販売伝票
POSNR LIKE VBAP-POSNR, "販売伝票明細
*
END   OF TP_COSP.
DATA:T_COSP TYPE TABLE OF TP_COSP,
H_COSP TYPE TP_COSP.
*COSS
TYPES:BEGIN OF TP_COSS,
LEDNR LIKE COSS-LEDNR,
OBJNR LIKE COSS-OBJNR,
GJAHR LIKE COSS-GJAHR,
WRTTP LIKE COSS-WRTTP,
VERSN LIKE COSS-VERSN,
KSTAR LIKE COSS-KSTAR,
HRKFT LIKE COSS-HRKFT,
VRGNG LIKE COSS-VRGNG,
PAROB LIKE COSS-PAROB,
USPOB LIKE COSS-USPOB,
BEKNZ LIKE COSS-BEKNZ,
TWAER LIKE COSS-TWAER,
PERBL LIKE COSS-PERBL,

WKG001 LIKE COSS-WKG001,
WKG002 LIKE COSS-WKG002,
WKG003 LIKE COSS-WKG003,
WKG004 LIKE COSS-WKG004,
WKG005 LIKE COSS-WKG005,
WKG006 LIKE COSS-WKG006,
WKG007 LIKE COSS-WKG007,
WKG008 LIKE COSS-WKG008,
WKG009 LIKE COSS-WKG009,
WKG010 LIKE COSS-WKG010,
WKG011 LIKE COSS-WKG011,
WKG012 LIKE COSS-WKG012,
WKG013 LIKE COSS-WKG013,
WKG014 LIKE COSS-WKG014,
WKG015 LIKE COSS-WKG015,
WKG016 LIKE COSS-WKG016,
*関連情報
*
VBELN LIKE VBAP-VBELN, "販売伝票
POSNR LIKE VBAP-POSNR, "販売伝票明細
*
END   OF TP_COSS.
DATA:T_COSS TYPE TABLE OF TP_COSS,
H_COSS TYPE TP_COSS.
DATA:COSP TYPE COSP,
***** APPEND START 2005/09/27 S.SHIGEMITU ****************
VBAK TYPE VBAK.
***** APPEND END   S.SHIGMEITU ***************************
*集計-------------------------------------
*COSB
TYPES:BEGIN OF SP_COSB,
VBELN LIKE VBAP-VBELN, "販売伝票
POSNR LIKE VBAP-POSNR, "販売伝票明細
OBJNR LIKE COSB-OBJNR, "対象番号
GJAHR LIKE COSB-GJAHR, "会計年度
ABKAT LIKE COSB-ABKAT, "カテゴリ: 差異/結果分析

WKG001 LIKE COSB-WKG001,
WKG002 LIKE COSB-WKG002,
WKG003 LIKE COSB-WKG003,
WKG004 LIKE COSB-WKG004,
WKG005 LIKE COSB-WKG005,
WKG006 LIKE COSB-WKG006,
WKG007 LIKE COSB-WKG007,
WKG008 LIKE COSB-WKG008,
WKG009 LIKE COSB-WKG009,
WKG010 LIKE COSB-WKG010,
WKG011 LIKE COSB-WKG011,
WKG012 LIKE COSB-WKG012,
WKG013 LIKE COSB-WKG013,
WKG014 LIKE COSB-WKG014,
WKG015 LIKE COSB-WKG015,
WKG016 LIKE COSB-WKG016,
END   OF SP_COSB.
DATA:ST_COSB TYPE TABLE OF SP_COSB,         "2004.07.09 INSERT
*DATA:ST_COSB TYPE HASHED TABLE OF SP_COSB  "2004.07.09 DEL
*            WITH UNIQUE KEY
*                        VBELN  "販売伝票
*                        POSNR  "販売伝票明細
*                        OBJNR  "対象番号
*                        GJAHR  "会計年度
*                        ABKAT, "カテゴリ: 差異/結果分析
SH_COSB TYPE SP_COSB.
*COSP
TYPES:BEGIN OF SP_COSP,
VBELN LIKE VBAP-VBELN, "販売伝票
POSNR LIKE VBAP-POSNR, "販売伝票明細
OBJNR LIKE COSP-OBJNR, "対象番号
GJAHR LIKE COSP-GJAHR, "会計年度
KSTAR LIKE COSP-KSTAR, "原価要素

WKG001 LIKE COSP-WKG001,
WKG002 LIKE COSP-WKG002,
WKG003 LIKE COSP-WKG003,
WKG004 LIKE COSP-WKG004,
WKG005 LIKE COSP-WKG005,
WKG006 LIKE COSP-WKG006,
WKG007 LIKE COSP-WKG007,
WKG008 LIKE COSP-WKG008,
WKG009 LIKE COSP-WKG009,
WKG010 LIKE COSP-WKG010,
WKG011 LIKE COSP-WKG011,
WKG012 LIKE COSP-WKG012,
WKG013 LIKE COSP-WKG013,
WKG014 LIKE COSP-WKG014,
WKG015 LIKE COSP-WKG015,
WKG016 LIKE COSP-WKG016,
END   OF SP_COSP.
DATA:ST_COSP TYPE TABLE OF SP_COSP,         "2004.07.09 INSERT
*DATA:ST_COSP TYPE HASHED TABLE OF SP_COSP  "2004.07.09 DEL

*            WITH UNIQUE KEY
*                        VBELN  "販売伝票
*                        POSNR  "販売伝票明細
*                        OBJNR  "対象番号
*                        GJAHR  "会計年度
*                        KSTAR, "原価要素
SH_COSP TYPE SP_COSP.
*COSS
TYPES:BEGIN OF SP_COSS,
VBELN LIKE VBAP-VBELN, "販売伝票
POSNR LIKE VBAP-POSNR, "販売伝票明細
OBJNR LIKE COSS-OBJNR, "対象番号
GJAHR LIKE COSS-GJAHR, "会計年度
KSTAR LIKE COSS-KSTAR, "原価要素

WKG001 LIKE COSS-WKG001,
WKG002 LIKE COSS-WKG002,
WKG003 LIKE COSS-WKG003,
WKG004 LIKE COSS-WKG004,
WKG005 LIKE COSS-WKG005,
WKG006 LIKE COSS-WKG006,
WKG007 LIKE COSS-WKG007,
WKG008 LIKE COSS-WKG008,
WKG009 LIKE COSS-WKG009,
WKG010 LIKE COSS-WKG010,
WKG011 LIKE COSS-WKG011,
WKG012 LIKE COSS-WKG012,
WKG013 LIKE COSS-WKG013,
WKG014 LIKE COSS-WKG014,
WKG015 LIKE COSS-WKG015,
WKG016 LIKE COSS-WKG016,
END   OF SP_COSS.
DATA:ST_COSS TYPE TABLE OF SP_COSS,         "2004.07.09 INSERT
*DATA:ST_COSS TYPE HASHED TABLE OF SP_COSS  "2004.07.09 DEL
*            WITH UNIQUE KEY
*                        VBELN  "販売伝票
*                        POSNR  "販売伝票明細
*                        OBJNR  "対象番号
*                        GJAHR  "会計年度
*                        KSTAR, "原価要素
SH_COSS TYPE SP_COSS.
*EBEW
TYPES:BEGIN OF SP_EBEW,
VBELN LIKE EBEW-VBELN, "販売伝票
POSNR LIKE EBEW-POSNR, "販売伝票明細
LFGJA LIKE EBEW-LFGJA, "当会計年度
LFMON LIKE EBEW-LFMON, "当期 (転記期間)
SALK3 LIKE EBEW-SALK3, "評価在庫合計額
END   OF SP_EBEW.
DATA:ST_EBEW TYPE HASHED  TABLE OF SP_EBEW
WITH UNIQUE KEY
VBELN  "販売伝票
POSNR  "販売伝票明細
LFGJA  "当会計年度
LFMON, "当期 (転記期間)
SH_EBEW TYPE SP_EBEW.
*---------------------------------------
*VBAK+VBAP
TYPES:BEGIN OF TP_VBAKP,
VBELN LIKE VBAP-VBELN, "販売伝票
POSNR LIKE VBAP-POSNR, "販売伝票明細
ERNAM LIKE VBAK-ERNAM, "登録者
ERDAT LIKE VBAK-ERDAT, "登録日
AUART LIKE VBAK-AUART, "伝票タイプ
VKORG LIKE VBAK-VKORG, "販売組織
VTWEG LIKE VBAK-VTWEG, "流通チャネル
SPART LIKE VBAK-SPART, "製品部門
VKBUR LIKE VBAK-VKBUR, "営業所
VKGRP LIKE VBAK-VKGRP, "営業グループ
*
UEPOS LIKE VBAP-UEPOS, "上位レベル明細
PSTYV LIKE VBAP-PSTYV, "明細カテゴリ (販売伝票)
MATNR LIKE VBAP-MATNR, "品目コード
ARKTX LIKE VBAP-ARKTX, "品目名称
WERKS LIKE VBAP-WERKS, "プラント
MVGR1 LIKE VBAP-MVGR1, "品目グループ１
PRCTR LIKE VBAP-PRCTR, "利益センタ
PS_PSP_PNR LIKE VBAP-PS_PSP_PNR, "WBS要素
ABGRU LIKE VBAP-ABGRU, "見積および受注の拒否理由
END   OF TP_VBAKP.
DATA:T_VBAKP TYPE HASHED TABLE OF TP_VBAKP
WITH UNIQUE KEY VBELN
POSNR,
H_VBAKP TYPE TP_VBAKP.
*VBKD
TYPES:BEGIN OF TP_VBKD,
VBELN LIKE VBKD-VBELN, "販売伝票
POSNR LIKE VBKD-POSNR, "販売伝票明細
FKDAT LIKE VBKD-FKDAT, "請求日
KDGRP LIKE VBKD-KDGRP, "得意先グループ
KTGRD LIKE VBKD-KTGRD, "勘定設定グループ
INCO1 LIKE VBKD-INCO1, "インコタームズ
END   OF TP_VBKD.
DATA:T_VBKD TYPE HASHED TABLE OF TP_VBKD
WITH UNIQUE KEY VBELN
POSNR,
H_VBKD TYPE TP_VBKD.
*VBPA
TYPES:BEGIN OF TP_VBPA,
VBELN LIKE VBPA-VBELN, "販売伝票
POSNR LIKE VBPA-POSNR, "販売伝票明細
PARVW LIKE VBPA-PARVW, "取引先機能
KUNNR LIKE VBPA-KUNNR, "得意先
ADRNR LIKE VBPA-ADRNR, "住所
LAND1 LIKE VBPA-LAND1, "国
*
NAME2 LIKE ADRC-NAME2,   "名称
*
END   OF TP_VBPA.
DATA:T_VBPA TYPE HASHED TABLE OF TP_VBPA
WITH UNIQUE KEY VBELN
POSNR
PARVW,
H_VBPA TYPE TP_VBPA.
*VBFA
TYPES:BEGIN OF TP_VBFA1,
VBELV LIKE VBFA-VBELV, "販売伝票
POSNV LIKE VBFA-POSNV, "販売伝票明細
VBELN LIKE VBFA-VBELN, "後続伝票
POSNN LIKE VBFA-POSNN, "販売管理伝票次明細
VBTYP_N LIKE VBFA-VBTYP_N, "継続伝票の伝票カテゴリ
END   OF TP_VBFA1.
DATA:PT_VBFA TYPE TABLE OF TP_VBFA1,
PT1_VBFA TYPE TABLE OF TP_VBFA1,
PH_VBFA TYPE TP_VBFA1.
*VBRK
TYPES:BEGIN OF TP_VBFA,
VBELV LIKE VBFA-VBELV, "販売伝票
POSNV LIKE VBFA-POSNV, "販売伝票明細
FKDAT LIKE VBRK-FKDAT, "請求日
END   OF TP_VBFA.
DATA:T_VBFA TYPE HASHED TABLE OF TP_VBFA
WITH UNIQUE KEY VBELV
POSNV,
T1_VBFA TYPE HASHED TABLE OF TP_VBFA
WITH UNIQUE KEY VBELV
POSNV,
H_VBFA TYPE TP_VBFA.

*EBEW
TYPES:BEGIN OF TP_EBEW,
MATNR LIKE EBEW-MATNR, "品目コード
BWKEY LIKE EBEW-BWKEY, "評価レベル
BWTAR LIKE EBEW-BWTAR, "評価タイプ
SOBKZ LIKE EBEW-SOBKZ, "特殊在庫区分
VBELN LIKE EBEW-VBELN, "販売伝票
POSNR LIKE EBEW-POSNR, "販売伝票明細
LFGJA LIKE EBEW-LFGJA, "当会計年度
LFMON LIKE EBEW-LFMON, "当期 (転記期間)
SALK3 LIKE EBEW-SALK3, "評価在庫合計額
END   OF TP_EBEW.
DATA:T_EBEW TYPE TABLE OF TP_EBEW,
H_EBEW TYPE TP_EBEW.
*原価要素
RANGES: SR_KSTAR FOR COSS-KSTAR. "Ｒｅｖ
RANGES: SC_KSTAR FOR COSS-KSTAR. "Ｃｏｓ
RANGES: SS_KSTAR FOR COSS-KSTAR. "Ｓ＆Ａ
*
RANGES: R_COSP   FOR COSS-KSTAR.
RANGES: R_COSS   FOR COSS-KSTAR.
*
DATA:G_TKA01 TYPE TKA01,       "管理領域
G_VELDA TYPE ZJP06-VELDA. "請求日
DATA:TM_ZJP06 TYPE TABLE OF ZJP06.
DATA:T_ZJP06 TYPE HASHED TABLE OF ZJP06
WITH UNIQUE KEY MANDT
VBELN
POSNR
GJAHR
BUPEM,
U_ZJP06 TYPE HASHED TABLE OF ZJP06  "更新用
WITH UNIQUE KEY MANDT
VBELN
POSNR
GJAHR
BUPEM,
I_ZJP06 TYPE HASHED TABLE OF ZJP06  "登録用
WITH UNIQUE KEY MANDT
VBELN
POSNR
GJAHR
BUPEM,
M_ZJP06 TYPE HASHED TABLE OF ZJP06  "登録用+編集
WITH UNIQUE KEY MANDT
VBELN
POSNR
GJAHR
BUPEM,
H_ZJP06 TYPE ZJP06,
L_ZJP06 TYPE ZJP06.
*ZJP06
DATA:TK_ZJP06 TYPE HASHED TABLE OF ZJP06 "既存データ
WITH UNIQUE KEY MANDT
VBELN
POSNR
GJAHR
BUPEM,
TL_ZJP06 TYPE HASHED TABLE OF ZJP06 "既存データ＋編集
WITH UNIQUE KEY MANDT
VBELN
POSNR
GJAHR
BUPEM.
*CDPOS
TYPES:BEGIN OF TP_CDPOS,
TABKEY LIKE CDPOS-TABKEY,    "変更テーブルレコードキー
VALUE_NEW LIKE CDPOS-VALUE_NEW,
"変更後の項目内容
END   OF TP_CDPOS.
DATA:T_CDPOS TYPE TABLE OF TP_CDPOS,
H_CDPOS TYPE TP_CDPOS.
*集計
TYPES:BEGIN OF TP_REV,
BUPEM LIKE ZJP06-BUPEM,
WKG00 LIKE COSB-WKG001,
END   OF TP_REV.
DATA:T_REV  TYPE TABLE OF TP_REV,
H_REV  TYPE TP_REV.

TYPES:BEGIN OF TP_COS,
BUPEM LIKE ZJP06-BUPEM,
WKG00 LIKE COSB-WKG001,
END   OF TP_COS.
DATA:T_COS  TYPE TABLE OF TP_COS,
H_COS  TYPE TP_COS.

TYPES:BEGIN OF TP_SAA,
BUPEM LIKE ZJP06-BUPEM,
WKG00 LIKE COSB-WKG001,
END   OF TP_SAA.
DATA:T_SAA  TYPE TABLE OF TP_SAA,
H_SAA  TYPE TP_SAA.

TYPES:BEGIN OF TP_WIP,
BUPEM LIKE ZJP06-BUPEM,
WKG00 LIKE COSB-WKG001,
END   OF TP_WIP.
DATA:T_WIP  TYPE TABLE OF TP_WIP,
H_WIP  TYPE TP_WIP.

TYPES:BEGIN OF TP_AUC,
BUPEM LIKE ZJP06-BUPEM,
WKG00 LIKE COSB-WKG001,
END   OF TP_AUC.
DATA:T_AUC  TYPE TABLE OF TP_AUC,
H_AUC  TYPE TP_AUC.
TYPES:BEGIN OF TP_VB,
VBELN LIKE ZJP06-VBELN,
POSNR LIKE ZJP06-POSNR,
END   OF TP_VB.
DATA:T_VB   TYPE TABLE OF TP_VB,
H_VB   TYPE TP_VB.

FIELD-SYMBOLS <F_KEY> TYPE ANY.
*
*  固定値領域
*
CONSTANTS:
C_KOKRS LIKE TKA01-KOKRS VALUE 'JP00'.  "管理領域
*----------------------------------------------------------------------*
*
*  選択画面
*
*----------------------------------------------------------------------*
PARAMETERS P_ID    TYPE TFACD-IDENT.
SELECT-OPTIONS:S_CPUDT FOR COBK-CPUDT.

**** APPEND START 2005/09/27 S.SHIGEMITU ******************
SELECT-OPTIONS:S_VKORG FOR VBAK-VKORG.
**** APPEND END S.SHIGEMITU *******************************
*Ｒｅｖ
SELECTION-SCREEN BEGIN OF BLOCK REV
WITH FRAME TITLE TEXT-001.
PARAMETERS:PR_COG LIKE GRPDYNP-NAME_COALL OBLIGATORY.
SELECTION-SCREEN END   OF BLOCK REV.
*ＣＯＳ
SELECTION-SCREEN BEGIN OF BLOCK COS
WITH FRAME TITLE TEXT-002.
PARAMETERS:PC_COG LIKE GRPDYNP-NAME_COALL OBLIGATORY.

SELECTION-SCREEN END   OF BLOCK COS.
*Ｓ＆Ａ
SELECTION-SCREEN BEGIN OF BLOCK SA
WITH FRAME TITLE TEXT-003.
PARAMETERS:PS_COG LIKE GRPDYNP-NAME_COALL OBLIGATORY.
SELECTION-SCREEN END   OF BLOCK SA.
*----------------------------------------------------------------------*
*                      INITIALIZATION
*----------------------------------------------------------------------*
*INITIALIZATION.
*
*
*----------------------------------------------------------------------*
*                      AT SELECTION-SCREEN
*----------------------------------------------------------------------*
AT SELECTION-SCREEN.
*
PERFORM SEL_TKA01.
PERFORM SET_TREE_IMPORT USING PR_COG 'REV'.
PERFORM SET_TREE_IMPORT USING PC_COG 'COS'.
PERFORM SET_TREE_IMPORT USING PS_COG 'S&A'.
PERFORM SEL_TFACD.
*
*----------------------------------------------------------------------*
*                      START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.
*
PERFORM INIT.
*
IF G_TKA01-WAERS IS INITIAL.
*管理領域の情報が取得することができません
MESSAGE E000 WITH TEXT-901 C_KOKRS.
ENDIF.
IF R_COSP[] IS INITIAL.
*原価要素が取得されていません
MESSAGE E000 WITH TEXT-904.
ENDIF.
*登録日
LOOP AT S_CPUDT.
MESSAGE S000 WITH TEXT-905
S_CPUDT-LOW '〜'
S_CPUDT-HIGH.
ENDLOOP.
*
G_VELDA = SY-DATUM - 1. "更新日
*
PERFORM SEL_COBK.
IF T_COBKEP[] IS INITIAL. "2004.07.09 INSERT
PERFORM END_MSG.
STOP.
ELSE.
FREE T_COBKEP.
ENDIF.
*
IF NOT T_AUFNR[] IS INITIAL.
PERFORM SEL_AUFK.
ENDIF.
*
IF NOT T_VBELN[] IS INITIAL.
PERFORM SEL_ALL_AUFK.
PERFORM VBOP_SEC.
ENDIF.
*
IF NOT T_OBJNR[] IS INITIAL.
PERFORM SEL_PRPS.
PERFORM SEL_ALL_PRPS.
PERFORM SEL_VBAP.
PERFORM PR_SEC.
ENDIF.
*
IF NOT T_CO[] IS INITIAL.
PERFORM SEL_COSP.
PERFORM SEL_COSS.
PERFORM SEL_COSB.
PERFORM SEL_EBEW.
*
PERFORM MOD_VB.
*
PERFORM SUM_PROC.
*
PERFORM SEL_VBXX.
PERFORM NEW_DATA.
PERFORM SEL_ZJP.
PERFORM OLD_ZJP. "2005.5.13 insert
PERFORM HIT_ZJP.
*
PERFORM TBL_UPDATE.
PERFORM TBL_INSERT.
ENDIF.
*
PERFORM END_MSG.
*
END-OF-SELECTION.
*&---------------------------------------------------------------------*
*&      Form  SEL_COBK
*&---------------------------------------------------------------------*
*       CO 対象: 伝票ヘッダ
*       CO 対象: 明細 (期間別)
*----------------------------------------------------------------------*
FORM SEL_COBK.

DATA:W_VBELN LIKE VBAP-VBELN,
W_POSNR LIKE VBAP-POSNR.
*
SELECT
COEP~OBJNR
COEP~WRTTP
INTO CORRESPONDING FIELDS OF TABLE T_COBKEP
FROM COBK
INNER JOIN COEP
ON COBK~KOKRS = COEP~KOKRS AND
COBK~BELNR = COEP~BELNR
WHERE COBK~KOKRS = C_KOKRS
AND   COBK~CPUDT IN S_CPUDT.
*
LOOP AT T_COBKEP INTO H_COBKEP WHERE WRTTP = '04'.
*
CHECK H_COBKEP-OBJNR(2) = 'VB' OR
H_COBKEP-OBJNR(2) = 'OR' OR
H_COBKEP-OBJNR(2) = 'PR'.
*
CASE H_COBKEP-OBJNR(2).
WHEN 'VB'.
*
****** APPEND START 2005/09/27 S.SHIGEMITU ********

W_VBELN = H_COBKEP-OBJNR+2(10).
W_POSNR = H_COBKEP-OBJNR+12(06).

SELECT SINGLE
VBELN
INTO   (VBAK-VBELN)
FROM   VBAK
WHERE  VBELN = W_VBELN AND
VKORG IN S_VKORG.

IF SY-SUBRC = 0.

****** APPEND END S.SHIGEMITU **********************

H_VBELN-VBELN = W_VBELN.
H_VBELN-POSNR = W_POSNR.
COLLECT  H_VBELN INTO  T_VBELN.
*
H_CO-OBJNR = H_COBKEP-OBJNR.        "対象番号
H_CO-VBELN = H_COBKEP-OBJNR+2(10). "販売伝票
H_CO-POSNR = H_COBKEP-OBJNR+12(06). "販売伝票明細
COLLECT  H_CO INTO  T_CO.

ENDIF.
*
WHEN 'OR'.
*
H_AUFNR-AUFNR = H_COBKEP-OBJNR+2(12).
COLLECT  H_AUFNR INTO  T_AUFNR.
*
WHEN 'PR'.
*
H_OBJNR-OBJNR = H_COBKEP-OBJNR.
COLLECT H_OBJNR INTO T_OBJNR.
*
ENDCASE.
ENDLOOP.
*
*
ENDFORM.                    " SEL_COBK
*&---------------------------------------------------------------------*
*&      Form  SEL_AUFK
*&---------------------------------------------------------------------*
*　　　指図データより受注伝票取得
*----------------------------------------------------------------------*
FORM SEL_AUFK.
*
SELECT
AUFNR "指図番号
KDAUF "受注伝票番号
KDPOS "受注明細番号
INTO CORRESPONDING FIELDS OF TABLE T_KDAUF
FROM AUFK
FOR ALL ENTRIES IN T_AUFNR
WHERE AUFNR = T_AUFNR-AUFNR.
*
DELETE  T_KDAUF WHERE KDAUF = SPACE.
*
LOOP AT T_KDAUF INTO H_KDAUF.
H_VBELN-VBELN = H_KDAUF-KDAUF.
H_VBELN-POSNR = H_KDAUF-KDPOS.
COLLECT H_VBELN INTO T_VBELN.
ENDLOOP.
*
ENDFORM.                    " SEL_AUFK
*&---------------------------------------------------------------------*
*&      Form  SEL_ALL_AUFK
*&---------------------------------------------------------------------*
*       受注伝票より指図の対象番号取得
*----------------------------------------------------------------------*
FORM SEL_ALL_AUFK.
*
****** APPEND START 2005/09/27 S.SHIGEMITU ************

SELECT
A~AUFNR "指図番号
A~KDAUF "受注伝票番号
A~KDPOS "受注明細番号
A~OBJNR "対象番号
INTO CORRESPONDING FIELDS OF TABLE T_AUFK
FROM AUFK AS A INNER JOIN VBAK AS B
ON A~KDAUF = B~VBELN
FOR ALL ENTRIES IN T_VBELN
WHERE A~KDAUF = T_VBELN-VBELN
AND   A~KDPOS = T_VBELN-POSNR
AND   B~VKORG IN S_VKORG.

****** APPEND END S.SHIGEMITU *************************
*
ENDFORM.                    " SEL_ALL_AUFK
*&---------------------------------------------------------------------*
*&      Form  SEL_PRPS
*&---------------------------------------------------------------------*
*       プロジェクト番号取得
*----------------------------------------------------------------------*
FORM SEL_PRPS.
*
SELECT
PSPNR "WBS要素
PSPHI "該当プロジェクトの現在番号
INTO CORRESPONDING FIELDS OF TABLE T_PSPHI
FROM PRPS
FOR ALL ENTRIES IN T_OBJNR
WHERE OBJNR = T_OBJNR-OBJNR.
*
ENDFORM.                    " SEL_PRPS
*&---------------------------------------------------------------------*
*&      Form  SEL_ALL_PRPS
*&---------------------------------------------------------------------*
*       プロジェクト番号より対象番号取得
*----------------------------------------------------------------------*
FORM SEL_ALL_PRPS.
*
SELECT
PSPNR "WBS 要素
OBJNR "対象番号
PSPHI "該当プロジェクトの現在番号
STUFE "プロジェクト階層レベル
INTO CORRESPONDING FIELDS OF TABLE T_PRPS
FROM PRPS
FOR ALL ENTRIES IN T_PSPHI
WHERE PSPHI = T_PSPHI-PSPHI.
*
ENDFORM.                    " SEL_ALL_PRPS
*&---------------------------------------------------------------------*
*&      Form  SEL_VBAP
*&---------------------------------------------------------------------*
*       ＷＢＳより受注伝票取得
*----------------------------------------------------------------------*
FORM SEL_VBAP.
*
CLEAR A_PRPS.
LOOP AT T_PRPS INTO H_PRPS.
IF H_PRPS-STUFE = 1.
APPEND H_PRPS TO A_PRPS.
ENDIF.
ENDLOOP.
*
***** APPEND START 2005/09/27 S.SHIGEMITU *******
SELECT
A~VBELN      "販売伝票
A~POSNR      "販売伝票明細
A~PS_PSP_PNR "WBS 要素
INTO  CORRESPONDING FIELDS OF TABLE T_VBAP
FROM  VBAP AS A INNER JOIN VBAK AS B
ON A~VBELN = B~VBELN
FOR ALL ENTRIES IN A_PRPS
WHERE A~PS_PSP_PNR = A_PRPS-PSPNR AND
B~VKORG IN S_VKORG.
***** APPEND END S.SHIGEMITU ********************
*
FREE:A_PRPS.
*
ENDFORM.                    " SEL_VBAP
*&---------------------------------------------------------------------*
*&      Form  PR_SEC
*&---------------------------------------------------------------------*
*       ＷＢＳ要素（対象番号）と受注伝票
*----------------------------------------------------------------------*
FORM PR_SEC.
DATA L_PSPHI LIKE H_PRPS-PSPHI.
*
SORT T_PRPS BY PSPHI  "該当プロジェクトの現在番号
STUFE. "プロジェクト階層レベル
*
CLEAR:L_PSPHI.
LOOP AT T_PRPS INTO H_PRPS.
IF L_PSPHI <> H_PRPS-PSPHI.
L_PSPHI = H_PRPS-PSPHI.
READ TABLE T_VBAP WITH KEY PS_PSP_PNR
= H_PRPS-PSPNR
INTO H_VBAP.
ENDIF.
IF SY-SUBRC = 0.
H_CO-VBELN = H_VBAP-VBELN. "販売伝票
H_CO-POSNR = H_VBAP-POSNR. "販売伝票明細
H_CO-OBJNR = H_PRPS-OBJNR. "対象番号
COLLECT H_CO INTO T_CO.
ENDIF.
ENDLOOP.
*
ENDFORM.                    " PR_SEC
*&---------------------------------------------------------------------*
*&      Form  VBOP_SEC
*&---------------------------------------------------------------------*
*       指図よりＶＢ対象番号作成
*----------------------------------------------------------------------*
FORM VBOP_SEC.
DATA:L_KDAUF LIKE AUFK-KDAUF, "受注伝票番号
L_KDPOS LIKE AUFK-KDPOS. "受注明細番号
*
LOOP AT T_AUFK INTO H_AUFK.
H_CO-VBELN = H_AUFK-KDAUF. "受注伝票番号
H_CO-POSNR = H_AUFK-KDPOS. "受注明細番号
H_CO-OBJNR = H_AUFK-OBJNR. "対象番号
COLLECT H_CO INTO T_CO.
ENDLOOP.
*
SORT T_AUFK BY KDAUF
KDPOS.
*
CLEAR:L_KDAUF,L_KDPOS.
LOOP AT T_AUFK INTO H_AUFK.
IF H_AUFK-KDAUF = L_KDAUF AND "受注伝票番号
H_AUFK-KDPOS = L_KDPOS. "受注明細番号
ELSE.
H_CO-VBELN = H_AUFK-KDAUF. "受注伝票番号
H_CO-POSNR = H_AUFK-KDPOS. "受注明細番号
CONCATENATE 'VB'
H_AUFK-KDAUF
H_AUFK-KDPOS
INTO H_CO-OBJNR.
COLLECT H_CO INTO T_CO.
L_KDAUF = H_AUFK-KDAUF. "受注伝票番号
L_KDPOS = H_AUFK-KDPOS. "受注明細番号
ENDIF.
ENDLOOP.
*
ENDFORM.                    " VBOP_SEC
*&---------------------------------------------------------------------*
*&      Form  SEL_COSP
*&---------------------------------------------------------------------*
*      ＣＯＳＰ抽出
*----------------------------------------------------------------------*
FORM SEL_COSP.
*
SELECT
LEDNR
OBJNR
GJAHR
WRTTP
VERSN
KSTAR
HRKFT
VRGNG
VBUND
PARGB
BEKNZ
TWAER
PERBL

WKG001
WKG002
WKG003
WKG004
WKG005
WKG006
WKG007
WKG008
WKG009
WKG010
WKG011
WKG012
WKG013
WKG014
WKG015
WKG016
INTO CORRESPONDING FIELDS OF TABLE T_COSP
FROM COSP
FOR ALL ENTRIES IN T_CO
WHERE LEDNR = '00'
AND   OBJNR = T_CO-OBJNR
AND   WRTTP = '04'
AND   VERSN = '000'
AND   KSTAR IN R_COSP.
*
ENDFORM.                    " SEL_COSP
*&---------------------------------------------------------------------*
*&      Form  SEL_COSS
*&---------------------------------------------------------------------*
*       ＣＯＳＳ抽出
*----------------------------------------------------------------------*
FORM SEL_COSS.
SELECT
LEDNR
OBJNR
GJAHR
WRTTP
VERSN
KSTAR
HRKFT
VRGNG
PAROB
USPOB
BEKNZ
TWAER
PERBL

WKG001
WKG002
WKG003
WKG004
WKG005
WKG006
WKG007
WKG008
WKG009
WKG010
WKG011
WKG012
WKG013
WKG014
WKG015
WKG016
INTO CORRESPONDING FIELDS OF TABLE T_COSS
FROM COSS
FOR ALL ENTRIES IN T_CO
WHERE LEDNR = '00'
AND   OBJNR = T_CO-OBJNR
AND   WRTTP = '04'
AND   VERSN = '000'
AND   KSTAR IN R_COSS.

ENDFORM.                    " SEL_COSS
*&---------------------------------------------------------------------*
*&      Form  SEL_COSB
*&---------------------------------------------------------------------*
*       ＣＯＳＢ抽出
*----------------------------------------------------------------------*
FORM SEL_COSB.
*
SELECT
LEDNR
OBJNR
GJAHR
WRTTP
VERSN
ABKAT
KSTAR
HRKFT
VRGNG
PAROB
BEKNZ
AWKUS
TWAER
PERBL

WKG001
WKG002
WKG003
WKG004
WKG005
WKG006
WKG007
WKG008
WKG009
WKG010
WKG011
WKG012
WKG013
WKG014
WKG015
WKG016
INTO CORRESPONDING FIELDS OF TABLE T_COSB
FROM COSB
FOR ALL ENTRIES IN T_CO
WHERE LEDNR = '00'
AND   OBJNR = T_CO-OBJNR
AND (  WRTTP = '04' OR
WRTTP = '32' )
AND   VERSN = '000'
AND (  ABKAT = 51 OR
ABKAT = 54 ).
*
ENDFORM.                    " SEL_COSB
*&---------------------------------------------------------------------*
*&      Form  SEL_VBxx
*&---------------------------------------------------------------------*
*       販売伝票編集抽出
*----------------------------------------------------------------------*
FORM SEL_VBXX.
*
PERFORM SEL_VBAKP.
PERFORM SEL_VBKD.
PERFORM SEL_VBPA.
PERFORM SEL_ADRC.
PERFORM SEL_VBFA.
*
ENDFORM.                    " SEL_VBxx
*&---------------------------------------------------------------------*
*&      Form  SET_TREE_IMPORT
*&---------------------------------------------------------------------*
*       原価要素グループより原価要素取得
*----------------------------------------------------------------------*
FORM SET_TREE_IMPORT USING    P_1
P_2.
*
DATA SETID LIKE  SETHIER-SETID.
DATA: BEGIN OF SET_VALUES OCCURS 10.
INCLUDE STRUCTURE SETVALUES.
DATA: END OF SET_VALUES.
*
CONCATENATE '0102JPCA'
P_1
INTO SETID.
*
CALL FUNCTION 'G_SET_TREE_IMPORT'
EXPORTING
SETID                     = SETID
TABLES
SET_VALUES                = SET_VALUES
EXCEPTIONS
SET_NOT_FOUND             = 1
ILLEGAL_FIELD_REPLACEMENT = 2
ILLEGAL_TABLE_REPLACEMENT = 3
OTHERS                    = 4.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
*
LOOP AT SET_VALUES.
R_COSP-LOW = SET_VALUES-FROM.
R_COSP-HIGH =  SET_VALUES-TO.
R_COSP-SIGN = 'I'.
R_COSP-OPTION = 'BT'.
APPEND R_COSP.
IF P_2 = 'COS' OR
P_2 = 'S&A'.
R_COSS-LOW = SET_VALUES-FROM.
R_COSS-HIGH =  SET_VALUES-TO.
R_COSS-SIGN = 'I'.
R_COSS-OPTION = 'BT'.
APPEND R_COSS.
ENDIF.
CASE P_2.
WHEN 'REV'.
SR_KSTAR-LOW = SET_VALUES-FROM.
SR_KSTAR-HIGH =  SET_VALUES-TO.
SR_KSTAR-SIGN = 'I'.
SR_KSTAR-OPTION = 'BT'.
APPEND SR_KSTAR.
WHEN 'COS'.
SC_KSTAR-LOW = SET_VALUES-FROM.
SC_KSTAR-HIGH =  SET_VALUES-TO.
SC_KSTAR-SIGN = 'I'.
SC_KSTAR-OPTION = 'BT'.
APPEND SC_KSTAR.
WHEN 'S&A'.
SS_KSTAR-LOW = SET_VALUES-FROM.
SS_KSTAR-HIGH =  SET_VALUES-TO.
SS_KSTAR-SIGN = 'I'.
SS_KSTAR-OPTION = 'BT'.
APPEND SS_KSTAR.
ENDCASE.
ENDLOOP.
*
ENDFORM.                    " SET_TREE_IMPORT
*&---------------------------------------------------------------------*
*&      Form  SEL_EBEW
*&---------------------------------------------------------------------*
*       評価在庫取得
*----------------------------------------------------------------------*
FORM SEL_EBEW.
*
SELECT
MATNR "品目コード
BWKEY "評価レベル
BWTAR "評価タイプ
SOBKZ "特殊在庫区分
VBELN "販売伝票
POSNR "販売伝票明細
LFGJA "当会計年度
LFMON "当期 (転記期間)
SALK3 "評価在庫合計額
INTO CORRESPONDING FIELDS OF TABLE T_EBEW
FROM EBEW
FOR ALL ENTRIES IN T_CO
WHERE VBELN = T_CO-VBELN
AND   POSNR = T_CO-POSNR.
*
ENDFORM.                    " SEL_EBEW
*&---------------------------------------------------------------------*
*&      Form  MOD_VB
*&---------------------------------------------------------------------*
*       対象番号より受注伝票を紐つけ
*----------------------------------------------------------------------*
FORM MOD_VB.
*
HT_CO[] = T_CO[].
FREE T_CO.
*
LOOP AT T_COSP INTO H_COSP.
READ TABLE HT_CO WITH TABLE KEY OBJNR = H_COSP-OBJNR
INTO H_CO.
IF SY-SUBRC = 0.
MOVE-CORRESPONDING H_COSP TO SH_COSP.
SH_COSP-VBELN = H_CO-VBELN. "販売伝票
SH_COSP-POSNR = H_CO-POSNR. "販売伝票明細
*       COLLECT SH_COSP INTO ST_COSP.  "2004.07.09 DEL
APPEND SH_COSP TO ST_COSP.     "2004.07.09 INSERT
ENDIF.
ENDLOOP.
*
LOOP AT T_COSS INTO H_COSS.
READ TABLE HT_CO WITH TABLE KEY OBJNR = H_COSS-OBJNR
INTO H_CO.
IF SY-SUBRC = 0.
MOVE-CORRESPONDING H_COSS TO SH_COSS.
SH_COSS-VBELN = H_CO-VBELN. "販売伝票
SH_COSS-POSNR = H_CO-POSNR. "販売伝票明細
*       COLLECT SH_COSS INTO ST_COSS.  "2004.07.09 DEL
APPEND SH_COSS TO ST_COSS.      "2004.07.09 INSERT
ENDIF.
ENDLOOP.
*
LOOP AT T_COSB INTO H_COSB.
READ TABLE HT_CO WITH TABLE KEY OBJNR = H_COSB-OBJNR
INTO H_CO.
IF SY-SUBRC = 0.
MOVE-CORRESPONDING H_COSB TO SH_COSB.
SH_COSB-VBELN = H_CO-VBELN. "販売伝票
SH_COSB-POSNR = H_CO-POSNR. "販売伝票明細
*       COLLECT SH_COSB INTO ST_COSB.  "2004.07.09 DEL
APPEND SH_COSB TO ST_COSB.     "2004.07.09 INSERT
ENDIF.
ENDLOOP.
*
LOOP AT T_EBEW INTO H_EBEW.
MOVE-CORRESPONDING H_EBEW TO SH_EBEW.
COLLECT SH_EBEW INTO ST_EBEW.
ENDLOOP.
*
FREE:T_COSP,T_COSS,T_COSB,T_EBEW.
*
ENDFORM.                    " MOD_VB
*&---------------------------------------------------------------------*
*&      Form  SUM_COSP
*&---------------------------------------------------------------------*
*       ＣＯＳＰの集計
*----------------------------------------------------------------------*
FORM SUM_COSP.
*
CLEAR:L_ZJP06.
LOOP AT ST_COSP INTO SH_COSP.
*
L_ZJP06-MANDT = SY-MANDT.
L_ZJP06-VBELN = SH_COSP-VBELN.
L_ZJP06-POSNR = SH_COSP-POSNR.
L_ZJP06-GJAHR = SH_COSP-GJAHR.
*
PERFORM PUT_ZJP06 USING 'COSP'.
*
ENDLOOP.
*
ENDFORM.                    " SUM_COSP
*&---------------------------------------------------------------------*
*&      Form  SUM_COSS
*&---------------------------------------------------------------------*
*       ＣＯＳＳの集計
*----------------------------------------------------------------------*
FORM SUM_COSS.
DATA:L_WKG LIKE COSS-WKG001.
*
CLEAR:L_ZJP06.
LOOP AT ST_COSS INTO SH_COSS.
L_ZJP06-MANDT = SY-MANDT.
L_ZJP06-VBELN = SH_COSS-VBELN.
L_ZJP06-POSNR = SH_COSS-POSNR.
L_ZJP06-GJAHR = SH_COSS-GJAHR.
*
PERFORM PUT_ZJP06 USING 'COSS'.
*
ENDLOOP.
*

ENDFORM.                    " SUM_COSS
*&---------------------------------------------------------------------*
*&      Form  PUT_COS
*&---------------------------------------------------------------------*
*       売上データを作成
*----------------------------------------------------------------------*
FORM PUT_COS.
*
IF NOT L_ZJP06-VBELN IS INITIAL.
COLLECT L_ZJP06 INTO TM_ZJP06.
H_VB-VBELN = L_ZJP06-VBELN.
H_VB-POSNR = L_ZJP06-POSNR.
COLLECT H_VB INTO T_VB.
ENDIF.
CLEAR:L_ZJP06-REV,
L_ZJP06-COS,
L_ZJP06-SAA,
L_ZJP06-WIP,
L_ZJP06-AUC.
*
ENDFORM.                    " PUT_COS
*&---------------------------------------------------------------------*
*&      Form  SUM_COSB
*&---------------------------------------------------------------------*
*       ＣＯＢＳの集計
*----------------------------------------------------------------------*
FORM SUM_COSB.
DATA:L_WKG LIKE COSS-WKG001.
*
CLEAR:L_ZJP06.
LOOP AT ST_COSB INTO SH_COSB.

L_ZJP06-MANDT = SY-MANDT.
L_ZJP06-VBELN = SH_COSB-VBELN.
L_ZJP06-POSNR = SH_COSB-POSNR.
L_ZJP06-GJAHR = SH_COSB-GJAHR.
*
PERFORM PUT_ZJP06 USING 'COSB'.
*
ENDLOOP.
*

ENDFORM.                    " SUM_COSB
*&---------------------------------------------------------------------*
*&      Form  SUM_EBEW
*&---------------------------------------------------------------------*
*       評価金額の集計
*----------------------------------------------------------------------*
FORM SUM_EBEW.
*
*
CLEAR:L_ZJP06.
LOOP AT ST_EBEW INTO SH_EBEW.
L_ZJP06-MANDT = SY-MANDT.
L_ZJP06-VBELN = SH_EBEW-VBELN.
L_ZJP06-POSNR = SH_EBEW-POSNR.
L_ZJP06-GJAHR = SH_EBEW-LFGJA.
L_ZJP06-BUPEM = SH_EBEW-LFMON.
L_ZJP06-WIP   = SH_EBEW-SALK3 * -1.
*
CHECK L_ZJP06-WIP <> 0.
*
IF NOT L_ZJP06-VBELN IS INITIAL.
COLLECT L_ZJP06 INTO TM_ZJP06.
H_VB-VBELN = L_ZJP06-VBELN.
H_VB-POSNR = L_ZJP06-POSNR.
COLLECT H_VB INTO T_VB.
ENDIF.
CLEAR:L_ZJP06.
*
ENDLOOP.
*

ENDFORM.                    " SUM_EBEW
*&---------------------------------------------------------------------*
*&      Form  SUM_PROC
*&---------------------------------------------------------------------*
*       集計
*----------------------------------------------------------------------*
FORM SUM_PROC.
*
PERFORM SUM_COSP.
PERFORM SUM_COSS.
PERFORM SUM_COSB.
PERFORM SUM_EBEW.
*
T_ZJP06[] = TM_ZJP06[].
FREE TM_ZJP06[].
*
ENDFORM.                    " SUM_PROC
*&---------------------------------------------------------------------*
*&      Form  SEL_ZJP
*&---------------------------------------------------------------------*
*       売上データテーブルより既存データ抽出
*----------------------------------------------------------------------*
FORM SEL_ZJP.
*2004.5.13 del
*  SELECT *
*        INTO CORRESPONDING FIELDS OF TABLE TK_ZJP06
*        FROM ZJP06
*        FOR ALL ENTRIES IN M_ZJP06
*        WHERE VBELN = M_ZJP06-VBELN
*        AND   POSNR = M_ZJP06-POSNR
*        AND   GJAHR = M_ZJP06-GJAHR
*        AND   BUPEM = M_ZJP06-BUPEM.
*2004.5.13 insert
SELECT *
INTO CORRESPONDING FIELDS OF TABLE TK_ZJP06
FROM ZJP06
FOR ALL ENTRIES IN T_VB
WHERE VBELN = T_VB-VBELN
AND   POSNR = T_VB-POSNR.
*
ENDFORM.                    " SEL_ZJP
*&---------------------------------------------------------------------*
*&      Form  HIT_ZJP
*&---------------------------------------------------------------------*
*       売上データの新規データと既存データを振り分ける
*----------------------------------------------------------------------*
FORM HIT_ZJP.
*
* 2004.5.13 INSERT
*既存データ
LOOP AT TL_ZJP06 INTO H_ZJP06.
READ TABLE M_ZJP06 WITH TABLE KEY MANDT = H_ZJP06-MANDT
VBELN = H_ZJP06-VBELN
POSNR = H_ZJP06-POSNR
GJAHR = H_ZJP06-GJAHR
BUPEM = H_ZJP06-BUPEM
INTO L_ZJP06.
IF SY-SUBRC = 0.
INSERT L_ZJP06 INTO TABLE U_ZJP06.
ELSE.
INSERT H_ZJP06 INTO TABLE U_ZJP06.
ENDIF.
ENDLOOP.
*新規データ
LOOP AT M_ZJP06 INTO H_ZJP06.
READ TABLE TL_ZJP06 WITH TABLE KEY MANDT = H_ZJP06-MANDT
VBELN = H_ZJP06-VBELN
POSNR = H_ZJP06-POSNR
GJAHR = H_ZJP06-GJAHR
BUPEM = H_ZJP06-BUPEM
INTO L_ZJP06.
IF SY-SUBRC <> 0.
INSERT H_ZJP06 INTO TABLE I_ZJP06.
ENDIF.
ENDLOOP.
*
FREE:M_ZJP06,TL_ZJP06.
*
*2004.5.13 DEL
*  LOOP AT M_ZJP06 INTO H_ZJP06.
*    READ TABLE TK_ZJP06 WITH TABLE KEY VBELN = H_ZJP06-VBELN
*                                       POSNR = H_ZJP06-POSNR
*                                       GJAHR = H_ZJP06-GJAHR
*                                       BUPEM = H_ZJP06-BUPEM
*                              INTO SK_ZJP06.
*    IF SY-SUBRC = 0.
*      INSERT H_ZJP06 INTO TABLE U_ZJP06.
*    ELSE.
*      INSERT H_ZJP06 INTO TABLE I_ZJP06.
*    ENDIF.
*  ENDLOOP.
*  FREE:M_ZJP06,TK_ZJP06.
*
ENDFORM.                    " HIT_ZJP
*&---------------------------------------------------------------------*
*&      Form  SEL_VBAKP
*&---------------------------------------------------------------------*
*       ＶＢＡＫ．ＶＢＡＰの抽出
*----------------------------------------------------------------------*
FORM SEL_VBAKP.
*
SELECT
VBAP~VBELN "販売伝票
VBAP~POSNR "販売伝票明細
VBAK~ERNAM "登録者
VBAK~ERDAT "登録日
VBAK~AUART "伝票タイプ
VBAK~VKORG "販売組織
VBAK~VTWEG "流通チャネル
VBAK~SPART "製品部門
VBAK~VKBUR "営業所
VBAK~VKGRP "営業グループ
*
VBAP~UEPOS "上位レベル明細
VBAP~PSTYV "明細カテゴリ (販売伝票)
VBAP~MATNR "品目コード
VBAP~ARKTX "品目名称
VBAP~WERKS "プラント
VBAP~MVGR1 "品目グループ１
VBAP~PRCTR "利益センタ
VBAP~PS_PSP_PNR "WBS要素
VBAP~ABGRU "見積および受注の拒否理由

INTO CORRESPONDING FIELDS OF TABLE T_VBAKP
FROM VBAK
INNER JOIN VBAP
ON VBAK~VBELN = VBAP~VBELN
FOR ALL ENTRIES IN T_VB
WHERE VBAP~VBELN = T_VB-VBELN
AND   VBAP~POSNR = T_VB-POSNR.
*
ENDFORM.                    " SEL_VBAKP
*&---------------------------------------------------------------------*
*&      Form  SEL_VBKD
*&---------------------------------------------------------------------*
*       ＶＢＫＤの取得
*----------------------------------------------------------------------*
FORM SEL_VBKD.
*
SELECT
VBELN "販売伝票
POSNR "販売伝票明細
FKDAT "請求日
KDGRP "得意先グループ
KTGRD "勘定設定グループ
INCO1 "インコタームズ
INTO CORRESPONDING FIELDS OF TABLE T_VBKD
FROM VBKD
FOR ALL ENTRIES IN T_VB
WHERE VBELN = T_VB-VBELN
AND ( POSNR = T_VB-POSNR OR
POSNR = 0 ).
*
ENDFORM.                    " SEL_VBKD
*&---------------------------------------------------------------------*
*&      Form  SEL_VBPA
*&---------------------------------------------------------------------*
*       販売伝票: 取引先の抽出
*----------------------------------------------------------------------*
FORM SEL_VBPA.
*
SELECT
VBELN "販売伝票
POSNR "販売伝票明細
PARVW "取引先機能
KUNNR "得意先
ADRNR "住所
LAND1 "国
INTO CORRESPONDING FIELDS OF TABLE T_VBPA
FROM VBPA
FOR ALL ENTRIES IN T_VB
WHERE VBELN = T_VB-VBELN
AND ( POSNR = T_VB-POSNR OR
POSNR = 0 )
AND ( PARVW = 'EN' OR
PARVW = 'AG' ).
*
ENDFORM.                    " SEL_VBPA
*&---------------------------------------------------------------------*
*&      Form  NEW_DATA
*&---------------------------------------------------------------------*
*       新規データの項目編集
*----------------------------------------------------------------------*
FORM NEW_DATA.
*
LOOP AT T_ZJP06 INTO H_ZJP06.

READ TABLE T_VBAKP WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = H_ZJP06-POSNR
INTO H_VBAKP.
IF SY-SUBRC = 0.
H_ZJP06-ERNAM = H_VBAKP-ERNAM. "登録者
H_ZJP06-ERDAT = H_VBAKP-ERDAT. "登録日
H_ZJP06-AUART = H_VBAKP-AUART. "伝票タイプ
H_ZJP06-VKORG = H_VBAKP-VKORG. "販売組織
H_ZJP06-VTWEG = H_VBAKP-VTWEG. "流通チャネル
H_ZJP06-SPART = H_VBAKP-SPART. "製品部門
H_ZJP06-VKBUR = H_VBAKP-VKBUR. "営業所
H_ZJP06-VKGRP = H_VBAKP-VKGRP. "営業グループ
*
IF H_VBAKP-UEPOS = 0.
H_ZJP06-UEPOS = H_ZJP06-POSNR.
ELSE.
H_ZJP06-UEPOS = H_VBAKP-UEPOS. "上位レベル明細
ENDIF.
*
H_ZJP06-PSTYV = H_VBAKP-PSTYV. "明細カテゴリ (販売伝票)
H_ZJP06-MATNR = H_VBAKP-MATNR. "品目コード
H_ZJP06-ARKTX = H_VBAKP-ARKTX. "品目名称
H_ZJP06-MVGR1 = H_VBAKP-MVGR1. "品目グループ１
H_ZJP06-PRCTR = H_VBAKP-PRCTR. "利益センタ
H_ZJP06-PSPNR = H_VBAKP-PS_PSP_PNR. "WBS要素
CALL FUNCTION 'CONVERSION_EXIT_ABPSP_OUTPUT'
EXPORTING
INPUT  = H_VBAKP-PS_PSP_PNR
IMPORTING
OUTPUT = H_ZJP06-POSID.
H_ZJP06-ABGRU = H_VBAKP-ABGRU. "見積および受注の拒否理由
ENDIF.
READ TABLE T_VBKD WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = H_ZJP06-POSNR
INTO H_VBKD.
IF SY-SUBRC <> 0.
READ TABLE T_VBKD WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = 0
INTO H_VBKD.
IF SY-SUBRC = 0.
H_ZJP06-KDGRP = H_VBKD-KDGRP. "得意先グループ
H_ZJP06-KTGRD = H_VBKD-KTGRD. "勘定設定グループ
H_ZJP06-INCO1 = H_VBKD-INCO1. "インコタームズ
ENDIF.
ELSE.
H_ZJP06-KDGRP = H_VBKD-KDGRP. "得意先グループ
H_ZJP06-KTGRD = H_VBKD-KTGRD. "勘定設定グループ
H_ZJP06-INCO1 = H_VBKD-INCO1. "インコタームズ
ENDIF.
*
READ TABLE T_VBFA WITH TABLE KEY VBELV = H_ZJP06-VBELN
POSNV = H_ZJP06-POSNR
INTO H_VBFA.
IF SY-SUBRC = 0.
H_ZJP06-URDAT = H_VBFA-FKDAT. "売上日
ENDIF.
*
READ TABLE T_VBPA WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = H_ZJP06-POSNR
PARVW = 'AG'
INTO H_VBPA.
IF SY-SUBRC <> 0.
READ TABLE T_VBPA WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = 0
PARVW = 'AG'
INTO H_VBPA.
IF SY-SUBRC = 0.
H_ZJP06-KUNNR = H_VBPA-KUNNR.
H_ZJP06-NAME2 = H_VBPA-NAME2.
H_ZJP06-LAND1 = H_VBPA-LAND1.
ENDIF.
ELSE.
H_ZJP06-KUNNR = H_VBPA-KUNNR.
H_ZJP06-NAME2 = H_VBPA-NAME2.
H_ZJP06-LAND1 = H_VBPA-LAND1.
ENDIF.
READ TABLE T_VBPA WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = H_ZJP06-POSNR
PARVW = 'EN'
INTO H_VBPA.
IF SY-SUBRC <> 0.
READ TABLE T_VBPA WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = 0
PARVW = 'EN'
INTO H_VBPA.
IF SY-SUBRC = 0.
H_ZJP06-KUNEN = H_VBPA-KUNNR.
ENDIF.
ELSE.
H_ZJP06-KUNEN = H_VBPA-KUNNR.
ENDIF.
*
H_ZJP06-WAERS = G_TKA01-WAERS. "通貨
H_ZJP06-VELDA = G_VELDA.       "更新日
*
INSERT H_ZJP06 INTO TABLE M_ZJP06.
*
ENDLOOP.
*
FREE T_ZJP06.
*
ENDFORM.                    " NEW_DATA
*&---------------------------------------------------------------------*
*&      Form  TBL_INSERT
*&---------------------------------------------------------------------*
*       新規登録
*----------------------------------------------------------------------*
FORM TBL_INSERT.
*
INSERT ZJP06 FROM TABLE I_ZJP06.
IF SY-SUBRC = 0.
COMMIT WORK AND WAIT.
ELSE.
ROLLBACK WORK.
MESSAGE E000 WITH TEXT-903 SY-SUBRC.
ENDIF.
**
ENDFORM.                    " TBL_INSERT
*&---------------------------------------------------------------------*
*&      Form  TBL_UPDATE
*&---------------------------------------------------------------------*
*       既存変更
*----------------------------------------------------------------------*
FORM TBL_UPDATE.
*
UPDATE ZJP06 FROM TABLE U_ZJP06.
IF SY-SUBRC = 0.
COMMIT WORK  AND WAIT.
ELSE.
ROLLBACK WORK.
MESSAGE E000 WITH TEXT-902 SY-SUBRC.
ENDIF.
*
ENDFORM.                    " TBL_UPDATE
*&---------------------------------------------------------------------*
*&      Form  SEL_TKA01
*&---------------------------------------------------------------------*
*       管理領域より取得
*----------------------------------------------------------------------*
FORM SEL_TKA01.
*
SELECT SINGLE
WAERS
INTO G_TKA01-WAERS
FROM TKA01
WHERE KOKRS = C_KOKRS.
IF SY-SUBRC <> 0.
*管理領域の情報が取得することができません
MESSAGE E000 WITH TEXT-901 C_KOKRS.
ENDIF.
*
ENDFORM.                                                    " SEL_TKA01
**&---------------------------------------------------------------------
*
**&      Form  SEL_CDHDR_POS
**&---------------------------------------------------------------------
*
**
**----------------------------------------------------------------------
*
*FORM SEL_CDHDR_POS.
*DATA:CDHDR LIKE CDHDR.
**
*  CLEAR:T_CDPOS.
*  SELECT
*        OBJECTID
*        CHANGENR
*        INTO (CDHDR-OBJECTID,
*              CDHDR-CHANGENR)
*        FROM CDHDR
*        WHERE OBJECTCLAS = 'VERKBELEG'
*        AND   UDATE      IN S_CPUDT.
*    SELECT
*        TABKEY    "変更テーブルレコードキー
*        VALUE_NEW "変更後の項目内容
*        INTO (H_CDPOS-TABKEY,
*              H_CDPOS-VALUE_NEW)
*        FROM CDPOS
*        WHERE OBJECTCLAS = 'VERKBELEG'
*        AND   OBJECTID   = CDHDR-OBJECTID
*        AND   CHANGENR   = CDHDR-CHANGENR
*        AND   TABNAME    = 'VBKD'
*        AND   FNAME      = 'FKDAT'.
*        APPEND H_CDPOS TO T_CDPOS.
*    ENDSELECT.
*  ENDSELECT.
**
*ENDFORM.                    " SEL_CDHDR_POS
*&---------------------------------------------------------------------*
*&      Form  UPDATE_FKDAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*FORM UPDATE_FKDAT.
*DATA:L_VBELN LIKE ZJP06-VBELN,
*     L_POSNR LIKE ZJP06-POSNR.
**     L_FKDAT LIKE ZJP06-FKDAT.
**
*  LOOP AT T_CDPOS INTO S_CDPOS.
*     L_VBELN = S_CDPOS-TABKEY+3(10).
*     L_POSNR = S_CDPOS-TABKEY+13(06).
**     L_FKDAT = S_CDPOS-VALUE_NEW(8).
*     IF L_POSNR = 0.
*       UPDATE ZJP06
*              SET FKDAT = L_FKDAT
*                  VELDA = G_VELDA
*              WHERE VBELN = L_VBELN.
*     ELSE.
*       UPDATE ZJP06
*              SET FKDAT = L_FKDAT
*                  VELDA = G_VELDA
*             WHERE VBELN = L_VBELN
*             AND   POSNR = L_POSNR.
*     ENDIF.
*     IF SY-SUBRC <> 0.
**請求日の更新に失敗
*       MESSAGE E000 WITH TEXT-904
*                         L_FKDAT
*                         L_VBELN
*                         L_POSNR.
*
*     ENDIF.
*  ENDLOOP.
**
*ENDFORM.                    " UPDATE_FKDAT
*&---------------------------------------------------------------------*
*&      Form  PUT_ZJP06
*&---------------------------------------------------------------------*
*       月集計
*----------------------------------------------------------------------*
FORM PUT_ZJP06 USING P_1. "COSP,COSS
DATA:X_KEY(16),
X_NUM(3) TYPE N.
CLEAR:X_KEY,X_NUM.
*
DO 16 TIMES.
X_NUM = SY-INDEX.
CASE P_1.
WHEN 'COSP'.
CONCATENATE 'SH_COSP-WKG'
X_NUM INTO X_KEY.
WHEN 'COSS'.
CONCATENATE 'SH_COSS-WKG'
X_NUM INTO X_KEY.
WHEN 'COSB'.
CONCATENATE 'SH_COSB-WKG'
X_NUM INTO X_KEY.
ENDCASE.
*
ASSIGN (X_KEY) TO <F_KEY>.
CHECK <F_KEY> <> 0. "2004.07.09 del
*
L_ZJP06-BUPEM = SY-INDEX.
*
IF P_1 = 'COSP'.
IF SH_COSP-KSTAR IN SR_KSTAR. "REV
L_ZJP06-REV = <F_KEY>.
ENDIF.
IF SH_COSP-KSTAR IN SC_KSTAR. "COS
L_ZJP06-COS = <F_KEY>.
ENDIF.
IF SH_COSP-KSTAR IN SS_KSTAR. "S&A
L_ZJP06-SAA = <F_KEY>.
ENDIF.
ENDIF.
*
IF P_1 = 'COSS'.
IF SH_COSS-KSTAR IN SC_KSTAR. "COS
L_ZJP06-COS = <F_KEY>.
ENDIF.
IF SH_COSS-KSTAR IN SS_KSTAR. "S&A
L_ZJP06-SAA = <F_KEY>.
ENDIF.
ENDIF.
*
IF P_1 = 'COSB'.
IF SH_COSB-ABKAT = 51. "WIP
L_ZJP06-WIP = <F_KEY>.
ENDIF.
IF SH_COSB-ABKAT = 54. "AUC
L_ZJP06-AUC = <F_KEY>.
ENDIF.
ENDIF.
*
PERFORM PUT_COS.

ENDDO.
*
ENDFORM.                                                    " PUT_ZJP06
*&---------------------------------------------------------------------*
*&      Form  SEL_ADRC
*&---------------------------------------------------------------------*
*　　　 アドレスより受注先の名称取得
*----------------------------------------------------------------------*
FORM SEL_ADRC.
*
LOOP AT T_VBPA INTO H_VBPA WHERE PARVW = 'AG'.

SELECT SINGLE
NAME2
INTO H_VBPA-NAME2
FROM ADRC
WHERE ADDRNUMBER = H_VBPA-ADRNR
AND   DATE_FROM  <= SY-DATUM
AND   NATION     = SPACE.
IF SY-SUBRC = 0.
MODIFY TABLE T_VBPA
FROM H_VBPA
TRANSPORTING NAME2.
ENDIF.
ENDLOOP.
*
ENDFORM.                    " SEL_ADRC
*&---------------------------------------------------------------------*
*&      Form  SEL_VBFA
*&---------------------------------------------------------------------*
*       請求日取得（売上日)
*----------------------------------------------------------------------*
FORM SEL_VBFA.
DATA:L_FKDAT LIKE VBRK-FKDAT.
*
SELECT
VBELV "販売伝票
POSNV "販売伝票明細
VBELN "後続伝票
POSNN "販売管理伝票次明細
VBTYP_N "継続伝票の伝票カテゴリ
INTO CORRESPONDING FIELDS OF TABLE PT_VBFA
FROM VBFA
FOR ALL ENTRIES IN T_VB
WHERE VBELV = T_VB-VBELN
AND   POSNV = T_VB-POSNR
AND   VBTYP_N = 'M'.
*
LOOP AT PT_VBFA INTO PH_VBFA.
SELECT SINGLE
FKDAT
INTO L_FKDAT
FROM VBRK
WHERE VBELN = PH_VBFA-VBELN
AND   RFBSK = 'C'.
IF SY-SUBRC = 0.
MOVE-CORRESPONDING PH_VBFA TO H_VBFA.
H_VBFA-FKDAT = L_FKDAT. "請求日
INSERT H_VBFA INTO TABLE T_VBFA.
ENDIF.
ENDLOOP.
*
*2004.07.21 INSERT START
*
LOOP AT  T_VBAKP INTO H_VBAKP WHERE UEPOS <> 0.
READ TABLE T_VBFA WITH TABLE KEY VBELV = H_VBAKP-VBELN
POSNV = H_VBAKP-POSNR
INTO  H_VBFA.
IF SY-SUBRC <> 0.
SELECT SINGLE
VBELV "販売伝票
POSNV "販売伝票明細
VBELN "後続伝票
POSNN "販売管理伝票次明細
VBTYP_N "継続伝票の伝票カテゴリ
INTO CORRESPONDING FIELDS OF PH_VBFA
FROM VBFA
WHERE VBELV = H_VBAKP-VBELN
AND   POSNV = H_VBAKP-UEPOS
AND   VBTYP_N = 'M'.
*
IF SY-SUBRC = 0.
SELECT SINGLE
FKDAT
INTO L_FKDAT
FROM VBRK
WHERE VBELN = PH_VBFA-VBELN
AND   RFBSK = 'C'.
*
IF SY-SUBRC = 0.
H_VBFA-VBELV   = H_VBAKP-VBELN.    "販売伝票
H_VBFA-POSNV   = H_VBAKP-POSNR.   "販売伝票明細
*         H_VBFA-VBELN   = H_VBFA-VBELN.    "後続伝票
*         H_VBFA-POSNN   = H_VBFA-POSNN.    "販売管理伝票次明細
*         H_VBFA-VBTYP_N = H_VBFA-VBTYP_N.  "継続伝票の伝票カテゴリ
H_VBFA-FKDAT   = L_FKDAT. "請求日
INSERT H_VBFA INTO TABLE T_VBFA.
ENDIF.
*
ENDIF.
ENDIF.
*
ENDLOOP.
*
*2004.07.21 INSERT END

ENDFORM.                    " SEL_VBFA
*&---------------------------------------------------------------------*
*&      Form  END_MSG
*&---------------------------------------------------------------------*
*       終了メッセージ
*----------------------------------------------------------------------*
FORM END_MSG.
DATA I TYPE I.
*
DESCRIBE TABLE U_ZJP06 LINES I.
MESSAGE S000 WITH '更新件数' I.
DESCRIBE TABLE I_ZJP06 LINES I.
MESSAGE S000 WITH '登録件数' I.
*
ENDFORM.                    " END_MSG
*&---------------------------------------------------------------------*
*&      Form  OLD_DATA
*&---------------------------------------------------------------------*
*       既存データの売上日（請求日)更新
*----------------------------------------------------------------------*
FORM OLD_DATA.
DATA:L_FKDAT LIKE VBRK-FKDAT.
*
SELECT
VBELV "販売伝票
POSNV "販売伝票明細
VBELN "後続伝票
POSNN "販売管理伝票次明細
VBTYP_N "継続伝票の伝票カテゴリ
INTO CORRESPONDING FIELDS OF TABLE PT1_VBFA
FROM VBFA
FOR ALL ENTRIES IN U_ZJP06
WHERE VBELV = U_ZJP06-VBELN
AND   POSNV = U_ZJP06-POSNR
AND   VBTYP_N = 'M'.
*
LOOP AT PT1_VBFA INTO PH_VBFA.
SELECT SINGLE
FKDAT
INTO L_FKDAT
FROM VBRK
WHERE VBELN = PH_VBFA-VBELN
AND   RFBSK = 'C'.
IF SY-SUBRC = 0.
MOVE-CORRESPONDING PH_VBFA TO H_VBFA.
H_VBFA-FKDAT = L_FKDAT. "請求日
INSERT H_VBFA INTO TABLE T1_VBFA.
ENDIF.
ENDLOOP.

*
*2004.07.21 INSERT START
*
LOOP AT  U_ZJP06 INTO H_ZJP06 WHERE UEPOS <> 0.
READ TABLE T1_VBFA WITH TABLE KEY VBELV = H_ZJP06-VBELN
POSNV = H_ZJP06-POSNR
INTO  H_VBFA.
IF SY-SUBRC <> 0.
SELECT SINGLE
VBELV "販売伝票
POSNV "販売伝票明細
VBELN "後続伝票
POSNN "販売管理伝票次明細
VBTYP_N "継続伝票の伝票カテゴリ
INTO CORRESPONDING FIELDS OF PH_VBFA
FROM VBFA
WHERE VBELV = H_ZJP06-VBELN
AND   POSNV = H_ZJP06-UEPOS
AND   VBTYP_N = 'M'.
*
IF SY-SUBRC = 0.
SELECT SINGLE
FKDAT
INTO L_FKDAT
FROM VBRK
WHERE VBELN = PH_VBFA-VBELN
AND   RFBSK = 'C'.
*
IF SY-SUBRC = 0.
H_VBFA-VBELV   = H_VBFA-VBELV.    "販売伝票
H_VBFA-POSNV   = H_ZJP06-POSNR.   "販売伝票明細
*         H_VBFA-VBELN   = H_VBFA-VBELN.    "後続伝票
*         H_VBFA-POSNN   = H_VBFA-POSNN.    "販売管理伝票次明細
*         H_VBFA-VBTYP_N = H_VBFA-VBTYP_N.  "継続伝票の伝票カテゴリ
H_VBFA-FKDAT   = L_FKDAT. "請求日
INSERT H_VBFA INTO TABLE T1_VBFA.
ENDIF.
*
ENDIF.
ENDIF.
*
ENDLOOP.
*
*2004.07.21 INSERT END

*
LOOP AT U_ZJP06 INTO H_ZJP06.
READ TABLE T1_VBFA WITH TABLE KEY VBELV = H_ZJP06-VBELN
POSNV = H_ZJP06-POSNR
INTO H_VBFA.

IF SY-SUBRC = 0.
H_ZJP06-URDAT = H_VBFA-FKDAT. "売上日
ELSE.
CLEAR:H_ZJP06-URDAT.
ENDIF.

MODIFY TABLE U_ZJP06
FROM H_ZJP06
TRANSPORTING
*
URDAT.  "売上日


ENDLOOP.

*
ENDFORM.                    " OLD_DATA
*&---------------------------------------------------------------------*
*&      Form  KADOUBI_GET
*&---------------------------------------------------------------------*
*       前稼動日取得
*----------------------------------------------------------------------*
FORM KADOUBI_GET USING    P_DATE2
CHANGING P_FACDATE1.
*
CALL FUNCTION 'DATE_CONVERT_TO_FACTORYDATE'
EXPORTING
CORRECT_OPTION               = '-'
DATE                         = P_DATE2  " 日付
FACTORY_CALENDAR_ID          = P_ID  " カレンダID
IMPORTING
DATE                         = P_FACDATE1  " 前日稼働日
EXCEPTIONS
CALENDAR_BUFFER_NOT_LOADABLE = 1
CORRECT_OPTION_INVALID       = 2
DATE_AFTER_RANGE             = 3
DATE_BEFORE_RANGE            = 4
DATE_INVALID                 = 5
FACTORY_CALENDAR_NOT_FOUND   = 6
OTHERS                       = 7.
IF SY-SUBRC <> 0.
MESSAGE E000 WITH '汎用ﾓｼﾞｭｰﾙ = DATE_CONVERT_TO_FACTORYDATE ｴﾗｰ'.
ENDIF.
*
ENDFORM.                    " KADOUBI_GET
*&---------------------------------------------------------------------*
*&      Form  INIT
*&---------------------------------------------------------------------*
*       バックグランド処理の登録日設定
*----------------------------------------------------------------------*
FORM INIT.
DATA: L_DATE1 LIKE SY-DATUM,      " SYSDATE
L_DATE2 LIKE SY-DATUM,      " SYSDATE前日
L_FACDAT1 LIKE SY-DATUM.    " 稼働日
* 登録日：空白の場合バッチ処理。
IF SY-BATCH IS INITIAL.
IF S_CPUDT-LOW IS INITIAL.
MESSAGE S000 WITH
'登録日、入力無しはオンライン実行できません'.
STOP.
ENDIF.
ELSE.
IF S_CPUDT-LOW IS INITIAL.
* 登録日空白の時、カレンダIDの入力チェック。
IF P_ID IS INITIAL.
MESSAGE S000 WITH
'稼働日カレンダIDを入力してください'.
STOP.
ENDIF.
L_DATE1 = SY-DATUM.      " システム日付退避
L_DATE2 = L_DATE1 - 1.   " 日付を１マイナス
PERFORM KADOUBI_GET USING L_DATE2
CHANGING L_FACDAT1.
S_CPUDT-LOW =  L_FACDAT1.
S_CPUDT-HIGH = L_DATE2.
S_CPUDT-SIGN = 'I'.
S_CPUDT-OPTION = 'BT'.
APPEND S_CPUDT.
ENDIF.
*
ENDIF.
*
ENDFORM.                    " INIT
*&---------------------------------------------------------------------*
*&      Form  SEL_TFACD
*&---------------------------------------------------------------------*
*       稼働日カレンダＩＤ
*----------------------------------------------------------------------*
FORM SEL_TFACD.
DATA TFACD LIKE TFACD.
*
CHECK NOT P_ID IS INITIAL.
SELECT SINGLE *
FROM TFACD
WHERE IDENT = P_ID.
*
IF SY-SUBRC <> 0.
MESSAGE E000 WITH
'稼働日カレンダIDが存在しません'.
ENDIF.
*
ENDFORM.                    " SEL_TFACD
*&---------------------------------------------------------------------*
*&      Form  OLD_ZJP
*&---------------------------------------------------------------------*
*       既存データの編集
*----------------------------------------------------------------------*
FORM OLD_ZJP.
*
LOOP AT TK_ZJP06 INTO H_ZJP06.
*
READ TABLE T_VBAKP WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = H_ZJP06-POSNR
INTO H_VBAKP.
IF SY-SUBRC = 0.
H_ZJP06-ERNAM = H_VBAKP-ERNAM. "登録者
H_ZJP06-ERDAT = H_VBAKP-ERDAT. "登録日
H_ZJP06-AUART = H_VBAKP-AUART. "伝票タイプ
H_ZJP06-VKORG = H_VBAKP-VKORG. "販売組織
H_ZJP06-VTWEG = H_VBAKP-VTWEG. "流通チャネル
H_ZJP06-SPART = H_VBAKP-SPART. "製品部門
H_ZJP06-VKBUR = H_VBAKP-VKBUR. "営業所
H_ZJP06-VKGRP = H_VBAKP-VKGRP. "営業グループ
*
IF H_VBAKP-UEPOS = 0.
H_ZJP06-UEPOS = H_ZJP06-POSNR.
ELSE.
H_ZJP06-UEPOS = H_VBAKP-UEPOS. "上位レベル明細
ENDIF.
*
H_ZJP06-PSTYV = H_VBAKP-PSTYV. "明細カテゴリ (販売伝票)
H_ZJP06-MATNR = H_VBAKP-MATNR. "品目コード
H_ZJP06-ARKTX = H_VBAKP-ARKTX. "品目名称
H_ZJP06-MVGR1 = H_VBAKP-MVGR1. "品目グループ１
H_ZJP06-PRCTR = H_VBAKP-PRCTR. "利益センタ
H_ZJP06-PSPNR = H_VBAKP-PS_PSP_PNR. "WBS要素
CALL FUNCTION 'CONVERSION_EXIT_ABPSP_OUTPUT'
EXPORTING
INPUT  = H_VBAKP-PS_PSP_PNR
IMPORTING
OUTPUT = H_ZJP06-POSID.
H_ZJP06-ABGRU = H_VBAKP-ABGRU. "見積および受注の拒否理由
ENDIF.
*VBKD
READ TABLE T_VBKD WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = H_ZJP06-POSNR
INTO H_VBKD.
IF SY-SUBRC <> 0.
READ TABLE T_VBKD WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = 0
INTO H_VBKD.
IF SY-SUBRC = 0.
H_ZJP06-KDGRP = H_VBKD-KDGRP. "得意先グループ
H_ZJP06-KTGRD = H_VBKD-KTGRD. "勘定設定グループ
H_ZJP06-INCO1 = H_VBKD-INCO1. "インコタームズ
ENDIF.
ELSE.
H_ZJP06-KDGRP = H_VBKD-KDGRP. "得意先グループ
H_ZJP06-KTGRD = H_VBKD-KTGRD. "勘定設定グループ
H_ZJP06-INCO1 = H_VBKD-INCO1. "インコタームズ
ENDIF.
*VBFA
READ TABLE T_VBFA WITH TABLE KEY VBELV = H_ZJP06-VBELN
POSNV = H_ZJP06-POSNR
INTO H_VBFA.
IF SY-SUBRC = 0.
H_ZJP06-URDAT = H_VBFA-FKDAT. "売上日
ENDIF.
*VBPA
READ TABLE T_VBPA WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = H_ZJP06-POSNR
PARVW = 'AG'
INTO H_VBPA.
IF SY-SUBRC <> 0.
READ TABLE T_VBPA WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = 0
PARVW = 'AG'
INTO H_VBPA.
IF SY-SUBRC = 0.
H_ZJP06-KUNNR = H_VBPA-KUNNR.
H_ZJP06-NAME2 = H_VBPA-NAME2.
H_ZJP06-LAND1 = H_VBPA-LAND1.
ENDIF.
ELSE.
H_ZJP06-KUNNR = H_VBPA-KUNNR.
H_ZJP06-NAME2 = H_VBPA-NAME2.
H_ZJP06-LAND1 = H_VBPA-LAND1.
ENDIF.
READ TABLE T_VBPA WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = H_ZJP06-POSNR
PARVW = 'EN'
INTO H_VBPA.
IF SY-SUBRC <> 0.
READ TABLE T_VBPA WITH TABLE KEY VBELN = H_ZJP06-VBELN
POSNR = 0
PARVW = 'EN'
INTO H_VBPA.
IF SY-SUBRC = 0.
H_ZJP06-KUNEN = H_VBPA-KUNNR.
ENDIF.
ELSE.
H_ZJP06-KUNEN = H_VBPA-KUNNR.
ENDIF.
*
H_ZJP06-WAERS = G_TKA01-WAERS. "通貨
H_ZJP06-VELDA = G_VELDA.       "更新日
*
INSERT H_ZJP06 INTO TABLE TL_ZJP06.
*
ENDLOOP.
*
FREE TK_ZJP06.
*
ENDFORM.                    " OLD_ZJP
