*&---------------------------------------------------------------------*
*& プログラムID : ZEGSDR1031
*& 作成者       : ISID21
*& 作成日       : 2016/09/12
*& 処理概要     : ・To Create Delivery Request by SO without stock
*                   availability check
*&                ・To Change/Check Delivery Request
*&                ・To Delete Delivery Request(Not Physical)
*&                ・To Print Delivery Request
*& 変更履歴
*& No   DATE       MODIFYED BY   SUMMARY
*& XX   YYYY/MM/DD XXXXX         .......
*&---------------------------------------------------------------------*
REPORT  ZEGSDR1031 LINE-SIZE 153
                   LINE-COUNT 58
                   NO STANDARD PAGE HEADING.
************************************************************************
* TYPE SPOOLS                                                          *
************************************************************************
TYPE-POOLS: SLIS , ABAP.

************************************************************************
* TABLES                                                               *
************************************************************************
TABLES: SSCRFIELDS.

************************************************************************
* VARIABLES                                                            *
************************************************************************
DATA: GV_EDATU  TYPE VBEP-EDATU,
      GV_BSTKD  TYPE VBKD-BSTKD.
DATA: DESCRIPTION TYPE CHAR20,
      TEST        TYPE CHAR10.

************************************************************************
* INTERNAL TABLES                                                      *
************************************************************************
DATA: MV_CALLBACK   TYPE SLIS_FORMNAME VALUE 'USER_COMMAND',
      MV_SET_STATUS TYPE SLIS_FORMNAME VALUE 'FRM_MY_STATUS',
      MS_LAYOUT     TYPE  SLIS_LAYOUT_ALV,
      MT_FIELDCAT   TYPE SLIS_T_FIELDCAT_ALV,
      L_FCAT        TYPE SLIS_FIELDCAT_ALV,
      MV_SAVE       TYPE CHAR1 VALUE 'A',
      IS_LAYOUT     TYPE SLIS_LAYOUT_ALV,
      LT_MARA       TYPE STANDARD TABLE OF MARA,
      MT_ALVDATA    TYPE STANDARD TABLE OF MARA.
************************************************************************
* CONSTANTS                                                            *
************************************************************************
CONSTANTS: C_FLAG TYPE CHAR1 VALUE 'X'.

************************************************************************
* SELECTION SCRE                                                       *
************************************************************************
SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-T01.

SELECT-OPTIONS: S_EDATU FOR GV_EDATU OBLIGATORY NO-EXTENSION.

PARAMETERS:     P_WERKS TYPE VBAP-WERKS OBLIGATORY,
                P_KUNNR TYPE VBPA-KUNNR OBLIGATORY,
                P_VKBUR TYPE VBAK-VKBUR.

SELECT-OPTIONS: S_BSKTD FOR GV_BSTKD NO INTERVALS.

PARAMETERS:     P_ERNAM TYPE VBAK-ERNAM,
                P_ERDAT TYPE VBAK-ERDAT,
                p_dereq TYPE char15,
                P_PTRAY TYPE TSP03L-LNAME
                   MEMORY ID SPOOL_DEV.  "Printer/Tray

SELECTION-SCREEN END OF BLOCK B1.

SELECTION-SCREEN: FUNCTION KEY 1. " FUNCTION KEY 2.

************************************************************************
* AT SELECTION-SCREEN                                                  *
************************************************************************
AT SELECTION-SCREEN.
  CASE SSCRFIELDS-UCOMM. "'FC01'.
    WHEN 'FC01'.
*     Print delivery request
      PERFORM PRINT_DEL_REQUEST.
    WHEN 'FC02'.
*      N/A
    WHEN OTHERS.
  ENDCASE.

************************************************************************
* AT SELECTION-SCREEN                                                  *
************************************************************************
INITIALIZATION.
  SSCRFIELDS-FUNCTXT_01 = '   Print   '.
  DESCRIPTION = 'DESCRIPTION'.
  TEST = '1224'.
*sscrfields-functxt_02 = 'TEST_02'.

************************************************************************
* AT SELECTION-SCREEN                                                  *
************************************************************************
START-OF-SELECTION.

  DATA: LS_MARA TYPE MARA,
        LS_ALV  TYPE MARA.
  SELECT *
    FROM MARA
    INTO TABLE LT_MARA
    UP TO 100 ROWS.

  LOOP AT LT_MARA INTO LS_MARA.
    MOVE-CORRESPONDING LS_MARA TO LS_ALV.
    APPEND LS_ALV TO MT_ALVDATA.
  ENDLOOP.

  CLEAR L_FCAT.
  L_FCAT-CHECKBOX  = C_FLAG.
  L_FCAT-FIX_COLUMN = C_FLAG.
  L_FCAT-TABNAME    = 'MT_ALVDATA'.               " +mod-006
  L_FCAT-EDIT       = C_FLAG.                 " +Mod-006
  L_FCAT-FIELDNAME = 'FLAG_SEL'.                   "BOX
*  l_fcat-seltext_l = text-h00.                "Select "-MOD-006
  L_FCAT-SELTEXT_L = 'SELECT'.                " +mod-006
*  l_fcat-hotspot   = c_flag.                 " -MOD-005
  APPEND L_FCAT TO MT_FIELDCAT.

  CLEAR L_FCAT.
  L_FCAT-CHECKBOX  = C_FLAG.
  L_FCAT-FIX_COLUMN = C_FLAG.
  L_FCAT-TABNAME    = 'MT_ALVDATA'.               " +mod-006
  L_FCAT-EDIT       = C_FLAG.                 " +Mod-006
  L_FCAT-FIELDNAME = 'FLAG_DEL'.                   "BOX
*  l_fcat-seltext_l = text-h00.                "Select "-MOD-006
  L_FCAT-SELTEXT_L = 'DELETE'.                " +mod-006
*  l_fcat-hotspot   = c_flag.                 " -MOD-005
  APPEND L_FCAT TO MT_FIELDCAT.

  MS_LAYOUT-COLWIDTH_OPTIMIZE = 'X'.
*  ls_layout-sel_mode = c_a.
*  ls_layout-cwidth_opt = 'X'.


  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM       = SY-REPID
      I_CALLBACK_PF_STATUS_SET = MV_SET_STATUS
      I_CALLBACK_USER_COMMAND  = MV_CALLBACK
      IT_FIELDCAT              = MT_FIELDCAT
      IS_LAYOUT_LVC            = MS_LAYOUT
      I_STRUCTURE_NAME         = 'ZCWU_MARA'
      I_SAVE                   = MV_SAVE
    TABLES
      T_OUTTAB                 = MT_ALVDATA
    EXCEPTIONS
      PROGRAM_ERROR            = 1
      OTHERS                   = 2.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
    WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CALL SCREEN 3000.

*&---------------------------------------------------------------------*
*&      Form  FRM_MY_STATUS
*&---------------------------------------------------------------------*
*       Status Set
*----------------------------------------------------------------------*
*  --> I_EXTAB    STATUS
*----------------------------------------------------------------------*
FORM FRM_MY_STATUS USING I_EXTAB TYPE SLIS_T_EXTAB.

  SET PF-STATUS '9100'.

ENDFORM.        "FRM_MY_STATUS

*&---------------------------------------------------------------------*
*&      Form  ALV_OTHERS_SET
*&---------------------------------------------------------------------*
*       USER_COMMAND
*----------------------------------------------------------------------*
FORM USER_COMMAND USING U_UCOMM     LIKE SY-UCOMM           "#EC CALLED
                        P_SELFIELD  TYPE SLIS_SELFIELD.

  DATA: LS_ALVDATA TYPE MARA,
        L_STBL     TYPE LVC_S_STBL,
        L_GRID1    TYPE REF TO CL_GUI_ALV_GRID.

  CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
    IMPORTING
      E_GRID = L_GRID1.

  CASE U_UCOMM.
    WHEN '&SEALL'.
      LS_ALVDATA-MATNR = 'X'.
      MODIFY MT_ALVDATA FROM LS_ALVDATA TRANSPORTING MATNR
               WHERE MATNR IS INITIAL.
    WHEN '&DEALL'.
      CLEAR LS_ALVDATA-MATNR.
      MODIFY MT_ALVDATA FROM LS_ALVDATA TRANSPORTING MATNR
               WHERE MATNR ='X'.
    WHEN '&IC1'.        " SAP standard code for double-clicking
      IF P_SELFIELD-FIELDNAME = 'UNAME'.
        IF P_SELFIELD-VALUE IS NOT INITIAL.
          SET PARAMETER ID 'XUS' FIELD P_SELFIELD-VALUE.
          CALL TRANSACTION 'SU01' AND SKIP FIRST SCREEN.
        ENDIF.
      ELSEIF P_SELFIELD-FIELDNAME = 'C_AGR_NAME'.
        IF P_SELFIELD-VALUE IS NOT INITIAL.
          PERFORM SALV_USER_COMMAND
                                  IN PROGRAM SAPLSLVC_FULLSCREEN
                                  USING 'ATRA'
                                        P_SELFIELD.
        ENDIF.
      ELSEIF P_SELFIELD-FIELDNAME = 'S_AGR_NAME'.
        IF P_SELFIELD-VALUE IS NOT INITIAL.
          PERFORM SALV_USER_COMMAND
                                  IN PROGRAM SAPLSLVC_FULLSCREEN
                                  USING 'ATRA'
                                        P_SELFIELD.
        ENDIF.
      ENDIF.
    WHEN 'T-CODE'.

    WHEN OTHERS.
      LEAVE TO SCREEN 0.
  ENDCASE.
  L_STBL-ROW = 'X'.
  L_STBL-COL = 'X'.
  CALL METHOD L_GRID1->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE = L_STBL.
ENDFORM.                    " USER_COMMAND
*&---------------------------------------------------------------------*
*&      Module  STATUS_0500  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_0500 OUTPUT.
  SET PF-STATUS 'TEST'.
  SET TITLEBAR 'TEST'.

ENDMODULE.                 " STATUS_0500  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0500  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_0500 INPUT.
  CASE SY-UCOMM.
    WHEN 'SAVE'.
      LEAVE TO SCREEN 0.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
      LEAVE LIST-PROCESSING.
    WHEN OTHERS.
  ENDCASE.
ENDMODULE.                 " USER_COMMAND_0500  INPUT


FORM get_next_id .
  data lv_id  type CHAR15.
  DATA:  last_id  type BUKRS,
         quant   LIKE inri-quantity,   "dummy
         code    LIKE inri-returncode. "returncode
*“OCO  是?象名
  CALL FUNCTION 'NUMBER_RANGE_ENQUEUE'
    EXPORTING
      object           = 'NOCO'
    EXCEPTIONS
      foreign_lock     = 1
      object_not_found = 2
      system_failure   = 3
      OTHERS           = 4.
  IF sy-subrc = 0.
    do 100 times.
      CALL FUNCTION 'NUMBER_GET_NEXT'
        EXPORTING
          nr_range_nr             = '01'
          object                  = 'NOCO'
          SUBOBJECT               = '0000000001'
        IMPORTING
          number                  = last_id
          quantity                = quant
          returncode              = code
        EXCEPTIONS
          interval_not_found      = 1
          number_range_not_intern = 2
          object_not_found        = 3
          quantity_is_0           = 4
          quantity_is_not_1       = 5
          interval_overflow       = 6
          buffer_overflow         = 7
          OTHERS                  = 8.
      LV_ID  =  last_id.
      write  LV_ID.
    enddo.
    CALL FUNCTION 'NUMBER_RANGE_DEQUEUE'
      EXPORTING
        object           = 'NOCO'
      EXCEPTIONS
        object_not_found = 1
        OTHERS           = 2.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  PRINT_DEL_REQUEST
*&---------------------------------------------------------------------*
*       Print delivery request
*----------------------------------------------------------------------*
FORM PRINT_DEL_REQUEST .

ENDFORM.                    " PRINT_DEL_REQUEST
